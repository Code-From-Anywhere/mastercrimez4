{"version":3,"sources":["assets/icon.png","assets/whatsapp.png","src/Constants.js","src/Util.js","src/components/Button.js","src/components/AlertProvider.js","src/components/ConnectionProvider.js","src/components/Dead.js","src/components/Fly.js","src/components/Chat.js","src/components/Header.js","src/updateHook.js","src/components/HoverState.js","src/components/Hoverable.js","src/components/IntervalProvider.js","src/components/T.js","src/components/Jail.js","src/Style.js","src/components/LoginModal.js","src/KeyboardAvoidingSpace.js","src/Menus.js","src/screens/Accomplice.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Airport.js","src/components/Tabs.js","src/screens/Bank.js","src/screens/Donate.js","src/components/Captcha.js","src/screens/Income.js","src/screens/SwissBank.js","src/screens/AllBanks.js","src/screens/Backfire.js","src/screens/Bomb.js","src/screens/Bulletfactory.js","src/screens/Bunker.js","src/screens/Casino.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/screens/Channel.js","src/components/Separator.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/Code.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateStreetrace.js","src/components/Footer.js","src/components/ShareButtons.js","src/screens/Crimes.js","src/screens/DownloadApp.js","src/screens/ForgotPassword.js","src/screens/Forum.js","src/components/User.js","src/screens/Gang.js","src/components/H1.js","src/screens/GangAchievements.js","src/screens/GangCreate.js","src/screens/GangOc.js","src/screens/Gangs.js","src/components/Content.js","src/screens/GangSettings.js","src/screens/GangShop.js","src/screens/Garage.js","src/screens/Gym.js","src/screens/Hackers.js","src/screens/Hoeren.js","src/screens/Home.js","src/screens/Hospital.js","src/components/Menu.js","src/screens/Info.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/ManageObject.js","src/screens/Market.js","src/screens/Members.js","src/screens/MollieComplete.js","src/screens/MyObjects.js","src/screens/MyProfile.js","src/screens/OrganisedCrime.js","src/screens/Poker.js","src/screens/Police.js","src/screens/Privacy.js","src/screens/Prizes.js","src/screens/Profile.js","src/screens/Racecars.js","src/screens/RecoverPassword.js","src/screens/Rob.js","src/screens/Settings.js","src/screens/Shop.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/Stats.js","src/screens/Status.js","src/screens/StealCar.js","src/screens/Streetrace.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/Wiet.js","src/components/Checkbox.js","src/screens/Work.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","assets/dood.jpg","assets/logos/logo5.jpg","node_modules/moment/locale sync /^/.//.*$","assets/bombarderen.jpg","assets/instagram.png","assets/spotify.png","assets/youtube.png","assets/gangshop/item1.jpg","assets/gangshop/item2.jpg","assets/gangshop/item3.jpg","assets/gangshop/item4.jpg","assets/gangshop/item5.jpg","assets/gangshop/item6.jpg","assets/gangshop/item7.jpg","assets/gangshop/item8.jpg","assets/gangshop/item9.jpg","assets/gangshop/item10.jpg","assets/gangshop/item11.jpg","assets/gangshop/item12.jpg","assets/hacker.jpeg","assets/politie.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["module","exports","Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","get","post","ColorLuminance","hex","lum","String","length","c","i","rgb","parseInt","substr","Math","round","min","max","lighterHex","getUserColor","item","theme","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","prevExp","nowRank","diff","progress","percentage","getRank","getStrength","isSmall","Dimensions","width","Button","icon","font","title","onPress","disabled","style","TheIcon","Icon","View","useSelector","state","device","TouchableOpacity","flexDirection","backgroundColor","secondary","padding","justifyContent","paddingHorizontal","marginRight","name","color","secondaryText","size","textAlign","AlertContext","React","createContext","AlertProvider","children","useState","alertVisible","setAlertVisible","alert","setAlert","getText","Provider","value","message","buttons","options","log","Platform","OS","Alert","position","top","bottom","left","right","alignItems","borderRadius","fontWeight","map","button","text","ConnectionProviderScreen","fetchWithTimeout","didTimeOut","Promise","resolve","reject","timeout","setTimeout","Error","clearTimeout","err","props","setIsConnected","this","unsubscribe","NetInfo","addEventListener","isConnected","interval","setInterval","flex","SafeAreaView","Component","connect","dispatch","Dead","selected","screenProps","me","reloadMe","navigation","locale","reizenAt","Date","Image","source","height","Text","token","loginToken","option","setState","Fly","sec","city","until","onFinish","timeToShow","timeLabels","m","s","Chat","chat","input","getChat","allText","select","web","default","borderWidth","borderColor","numberOfLines","navigate","fontSize","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","TextInput","placeholder","onChangeText","onSubmitEditing","nativeEvent","location","reload","isSmallDevice","Header","updateAvailable","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","useExpoUpdate","textStyle","marginBottom","notActivated","phoneVerified","numActions","marginTop","statsHeader","flexWrap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","gang","cash","bank","bullets","gamepoints","health","strength","chats","AntDesign","updateComponent","reloadAsync","backButton","margin","routeName","hitSlop","goBack","window","history","back","webHeader","manifest","version","toggleDrawer","Feather","isEnabled","canUseDOM","lastTouchTimestamp","disableHover","document","Hoverable","onHoverIn","onHoverOut","isHovered","setHovered","showHover","setShowHover","child","cloneElement","Children","only","onMouseEnter","e","onMouseLeave","onResponderGrant","onResponderRelease","onPressIn","onPressOut","displayName","propTypes","oneOfType","func","element","IntervalContext","IntervalProvider","setToken","intervalReloadMe","intervalMovements","sendMovements","clearInterval","movements","resetIntervalsForToken","withInterval","ChildComponent","Consumer","context","intervals","T","bold","Jail","jail","renderItem","seconds","floor","jailAt","marginLeft","digitStyle","digitTxtStyle","buyOut","fetchMembers","order","marginVertical","FlatList","data","ListHeaderComponent","renderHeader","StyleSheet","create","textInput","container","LoginModal","setName","setResponse","email","setEmail","password","setPassword","setError","success","setSuccess","phone","setPhone","view","setView","code","setCode","changeName","login","useContext","primary","alignSelf","Entypo","id","ActivityIndicator","placeholderTextColor","secondaryTextSoft","secureTextEntry","md5","str_md5","responseJson","textDecorationLine","KeyboardAvoidingSpace","keyboardWillShow","StatusBar","currentHeight","onKeyboardWillShow","toValue","endCoordinates","offset","dim","isIPhoneXSize","isIPhoneXrSize","isIphoneX","Animated","timing","easing","Easing","ease","useNativeDriver","start","keyboardWillHide","onKeyboardWillHide","Value","bindListeners","unbindListeners","keyboardWillShowListener","Keyboard","addListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","remove","InactiveScreens","ACTIONS_BEFORE_BOMB","ACTIONS_BEFORE_CASINO","ACTIONS_BEFORE_BUNKER","ACTIONS_BEFORE_HOSPITAL","ACTIONS_BEFORE_RACECARS","ACTIONS_BEFORE_STREETRACE","ACTIONS_AMOUNT_NEW","ACTIONS_BEFORE_ROB","ACTIONS_BEFORE_KILL","ACTIONS_BEFORE_BULLETFACTORY","ACTIONS_BEFORE_MARKET","ACTIONS_BEFORE_AIRPORT","DAYS_NEW","ACTIONS_BEFORE_POLICE","GANG_RELEASE_DATE","moment","MARKET_RELEASE_DATE","PRIZES_RELEASE_DATE","POLICE_RELEASE_DATE","WORK_RELEASE_DATE","leftMenu","stealcarSeconds","ceil","autostelenAt","crimeSeconds","crimeAt","bunkerSeconds","bunkerAt","attackSeconds","attackAt","robSeconds","robAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","workSeconds","workAt","header","isHeader","content","iconType","to","component","inactive","isNew","isBefore","level","add","filter","adminMenu","gameMod","admin","rightMenu","ocSeconds","ocAt","gangMenus","isAfter","image","thumbnail","gangId","isStats","online","Accomplice","accomplice","accomplice1","setAccomplice1","accomplice2","setAccomplice2","accomplice3","setAccomplice3","accomplice4","setAccomplice4","submit","acc","params","url","ScrollView","maxWidth","onFocus","Clipboard","setString","accomplices","styles","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","setId","user","setUser","actions","setActions","setMovements","getActions","ip","previous","Airport","renderFooter","openActionSheet","sort","showActionSheetWithOptions","buttonIndex","connectActionSheet","Tabs","tabs","tab","isActive","borderRightWidth","borderRightColor","Bank","deposit","amount","row","keyValue","Donate","keys","names","wiet","junkies","hoeren","Captcha","onChangeCaptcha","captcha","random","onChangeRandom","uri","needCaptcha","MaterialCommunityIcons","Income","incomeAt","uren","uren2","sqrt","SwissBank","cities","reloadCities","becomeOwnerResponse","setBecomeOwnerResponse","setAmount","setType","becomeOwner","find","swissBank","swissBullets","bankOwner","bankProfit","paddingVertical","borderBottomWidth","borderBottomColor","AllBanks","setTab","MyProfile","backfire","bf","Bomb","useActionSheet","bombs","setBombs","setCaptcha","setRandom","typeStrings","bulletFactory","casino","landlord","weaponShop","rld","airport","estateAgent","garage","airplane","Object","push","cancelButtonIndex","destructiveButtonIndex","Bulletfactory","setBullets","bulletFactoryOwner","bulletFactoryPrice","bulletFactoryProfit","bulletFactoryDamage","Bunker","price","minHeight","keyExtractor","extraData","ListFooterComponent","Casino","casinoOwner","casinoProfit","ChangeName","ChangePassword","password1","password2","minWidth","ImageInput","hasEdited","getPermissionAsync","Permissions","status","_pickImage","loading","ImagePicker","mediaTypes","All","allowsEditing","aspect","base64","result","cancelled","ImageManipulator","resize","format","PNG","manipulated","manipulatedBase64","onChange","SIZE","small","Ionicons","isBigDevice","Footer","fetchChat","setImage","setMessage","setHasEdited","send","cid","marginHorizontal","multiline","STYLE","ChatScreen","isFetching","setIsFetching","setChat","subid","Array","isArray","initialNumToRender","contentContainerStyle","isMe","avatar","IMAGE_SIZE","isSystem","resizeMode","refreshControl","refreshing","onRefresh","inverted","Separator","fetchChannelsubs","channelsubs","openMenu","openGeneralMenu","channelTitle","channel","userId","channelThumbnail","unread","lastmessage","lastmessageDate","startOf","ItemSeparatorComponent","Code","Linking","openURL","CreateStreetrace","reloadStreetraces","setLoading","racecars","setRacecars","numParticipants","setNumParticipants","setPrice","car","setCar","cars","TabInput","auto","racecar","power","carId","setText","facebookShareUrl","copy","getFullYear","ShareButtons","siteUrl","Crimes","kans","kans2","getMobileOperatingSystem","userAgent","navigator","vendor","opera","test","MSStream","DownloadApp","Login","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","updatedAt","responses","createdAt","renderNew","renderTopics","User","isOnline","onlineAt","extraIcon","country","Gangs","setItem","postGangJoin","profile","members","score","users","gangLevel","H1","GangAchievements","setResult","achievements","stats","current","next","GangCreate","gangs","setGangs","invites","setInvites","getGangs","getInvites","requests","postGangAnswerInvite","accepted","invite","gangName","numColumns","UIManager","setLayoutAnimationEnabledExperimental","getData","AsyncStorage","getItem","Content","contentWidth","expanded","setExpanded","isExpanded","LayoutAnimation","linear","onLayout","event","layout","y","GangSettings","setRequests","setGang","username","setUsername","setProfile","isBullets","setIsBullets","alertAlert","getGang","getGangInvites","postGangAnswerJoin","postGangTransaction","isToUser","postGangLeave","getGangLevel","postGangRemove","changeRank","postGangSetRank","request","member","postGangKick","quality","includes","GangShop","prices","items","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","MARGIN","v","itemId","postGangShop","Garage","fetchGroups","carGroups","reduce","bulkAction","action","upgradeCar","renderGroup","kogels","focusListener","Gym","Hoeren","renderCities","rldOwner","rldProfit","number","itemWidth","amountOfItems","Home","activeSlide","notificationsHeader","_handleAppStateChange","nextAppState","turnOnNotifications","sendLanguage","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","language","ExpoConstants","isDevice","existingStatus","finalStatus","pushtoken","Notifications","_renderItem","menu","movement","locationX","locationY","timestamp","AppState","removeEventListener","filtered","slice","IntentLauncher","ref","_carousel","sliderWidth","onSnapToItem","dotsLength","activeDotIndex","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","appLink","renderCarousel","Hospital","heal","Menu","IconFont","StoreReview","PrivacyPage","components","en","nl","strings","jailOwner","jailProfit","ListEmptyComponent","Junkies","junkiesOwner","junkiesProfit","Kill","kill","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","profitKey","priceKey","ownerKey","damageKey","Market","market","setMarket","buy","setBuy","validTypes","postMarketCreateOffer","filters","orders","setMembers","setSearch","orderBy","setOrderBy","setFilter","searchedMembers","toLowerCase","o","openActionSheetSort","openActionSheetFilter","orderKey","secondKey","MollieComplete","properties","MyObjects","p","property","propertyString","setPhoto","images","setImages","selectedImage","setSelectedImage","bio","setBio","fetchImages","pic","Wiet","Poker","poker","Config","onLinkPress","link","Prizes","ProfileScreen","getProfile","hasImage","Racecars","fetchGarage","sellCar","crushCar","RecoverPassword","rob","Settings","__DEV__","Shop","fetchCities","fetchShop","propertyKey","renderMenu","t","respones","activate","activationToken","keyNames","newMembers","onlineToday","fetchStats","stat","values","uur","protectionAt","StealCar","typeStart","finished","Streetrace","streetraces","RefreshControl","creator","streetraceParticipants","streetraceId","leave","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","save","Creditshop","setItems","credits","kooptext","kosten","Mollie","SuperMessage","VIP","landlordOwner","landlordProfit","Checkbox","active","Work","hours","setSelected","work","Api","fetchMe","payload","fetchStreetraces","mySaga","call","put","takeLatest","initDevice","logged","foregrounded","config","storage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","concat","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","isCurrent","TouchOrView","paddingLeft","Layout","characters","charactersLength","charAt","makeid","openWebUrl","getInitialURL","leftActive","setLeftActive","rightActive","setRightActive","_handleNotificationResponse","notification","handleChange","available","ExpoNotifications","skip","Helmet","Accordion","expandMultiple","sections","activeSections","section","renderContent","withLayout","Container","createBrowserApp","createAppContainer","createDrawerNavigator","createSwitchNavigator","createStackNavigator","screen","path","Gang","GangOc","Hackers","Police","Channels","Channel","JailScreen","Rob","Backfire","Members","Stats","OrganisedCrime","AdminEmail","Forum","Theme","Profile","SignupEmail","SignupEmail2","VerifyPhoneCode","ForgotPassword","Case","Car","VerifyPhone","Info","InfoGame","InfoRules","Privacy","Contribute","drawerPosition","edgeWidth","contentComponent","forceInset","horizontal","unmountInactiveRoutes","navigationOptions","drawerLockMode","defaultNavigationOptions","headerShown","RootContainer","ConnectionProvider","App","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,gVCa5BC,EATG,CAChBC,YALiB,2BAMjBC,QAAS,2CACTC,YACE,2FACFC,gBACE,gFCFEC,EAAa,SAACC,EAAQC,EAAQC,GAAjB,OACjBF,EAAOG,MAAMF,GAAQG,KAAKF,IAEfG,EAAY,SAACC,GAGxB,MAAqB,QAFHA,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,IAExC,KAAO,MAExBI,EAAkB,SAACD,GAAD,OAAgB,SAACE,GAC9C,IAAMC,EAAYH,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGhEO,EAAiBC,EAAQ,KAEX,OAAdF,IACFC,EAAiBC,EAAQ,MAPoC,IAU/D,IAAIX,EACFU,EAAeF,IAAf,sBACsBA,EADtB,iBAC0CF,EAD1C,IAX6D,mBAATM,EAAS,iCAATA,EAAS,kBAkB/D,OAJAA,EAAKC,SAAQ,SAACC,EAAKC,GACjBf,EAASD,EAAWC,EAAD,KAAae,EAAQ,GAAKD,MAGxCd,IAGIgB,EAAe,SAACC,GAC3B,aAAOA,OAAP,EAAOA,EAAGC,WAAWC,QAAQ,wBAAyB,MAuDjD,IAiBMC,EAAS,SAACC,EAAIC,GACzBC,qBAAU,WAER,OADAF,IACA,MAAOC,OAAP,EAAOA,MACN,KAEQE,EAAU,SAACC,EAAUC,EAAQC,GACxC,OAAOC,MAASlC,EAAUC,YAAd,IAA6B8B,EAAY,CACnDC,SACAG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAiB,SAAXD,EAAoBK,KAAKC,UAAUL,QAAQM,IAEhDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,yEACGH,GADH,+DAGLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIPE,EAAM,SAACjB,GAAD,OAAcD,EAAQC,EAAU,QACtCkB,EAAO,SAAClB,EAAUE,GAAX,OAAoBH,EAAQC,EAAU,OAAQE,IAqB3D,SAASiB,EAAeC,EAAKC,IAElCD,EAAME,OAAOF,GAAK1B,QAAQ,cAAe,KACjC6B,OAAS,IACfH,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAEzDC,EAAMA,GAAO,EAGb,IACEG,EACAC,EAFEC,EAAM,IAGV,IAAKD,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIG,SAASP,EAAIQ,OAAW,EAAJH,EAAO,GAAI,IAEnCC,IAAQ,MADRF,EAAIK,KAAKC,MAAMD,KAAKE,IAAIF,KAAKG,IAAI,EAAGR,EAAIA,EAAIH,GAAM,MAAM5B,SAAS,MAC/CmC,OAAOJ,EAAED,QAG7B,OAAOG,EAGF,IAAMO,EAAa,SAACb,GAAD,OAASD,EAAeC,EAAK,KAG1Cc,EAAe,SAACC,EAAMC,GAAP,OACtB,MAAJD,OAAA,EAAAA,EAAME,eAAgB,IAClB,OACI,MAAJF,OAAA,EAAAA,EAAME,eAAgB,IACtB,SACAD,EAAME,aAENC,EAAQ,CACZ,CACEC,KAAM,SACNC,IAAK,IAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,EAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,kBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAIHE,EAAe,SAACH,EAAMI,EAAYC,GACtC,IAAMC,EAAMD,EAAKE,WAAU,SAACC,GAAD,OAAOR,EAAOQ,EAAEP,OACrCQ,EAAOH,EAAM,EAEbI,EAASL,EAAKC,GAAOD,EAAKC,GAAKL,IAAMI,EAAKA,EAAKtB,OAAS,GAAGkB,IAC3DU,EAAUN,EAAKI,GAAQJ,EAAKI,GAAMR,IAAM,EAExCW,EAAUP,EAAKC,GAAOD,EAAKC,GAAKN,KAAOK,EAAKA,EAAKtB,OAAS,GAAGiB,KAE7Da,EAAOH,EAASC,EAChBG,EAAWd,EAAOW,EAClBI,EAAa1B,KAAKC,MAAOwB,EAAWD,EAAQ,IAAM,IAAM,GAE9D,MAAmB,aAAfT,EACKQ,EACiB,WAAfR,GACO,IAATE,EAAaA,EAAM,EAAID,EAAKtB,OACX,eAAfqB,EACFW,EACiB,SAAfX,EACFQ,EAAU,IAAMG,EAAa,SAD/B,GAKIC,GAAU,SAAChB,EAAMI,GAAP,OACrBD,EAAaH,EAAMI,EAAYL,IACpBkB,GAAc,SAACjB,EAAMI,GAAP,OACzBD,EAAaH,EAAMI,EAAYF,I,ykBCnX3BgB,GADYC,IAAW1C,IAAI,UAAzB2C,MACgB,IAmCTC,GAjCA,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAChDC,EAAUL,GAAQD,EAAOO,EAAKN,GAAQO,UACtClC,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAElD,OACE,kBAACsC,EAAA,EAAD,CAAkBT,QAASC,OAAW1D,EAAYyD,GAChD,kBAACK,EAAA,QAAD,CACEH,MAAK,IACHQ,cAAe,MACfC,gBAAiBV,EAAc9B,EAAMyC,UAAZ,KAA4BzC,EAAMyC,UAC3DC,QAAS,GACTC,eAAgB,SAChBC,kBAAmBtB,GAAU,EAAI,IAE9BS,IAGJJ,GAAQD,EACP,kBAACQ,EAAA,QAAD,CAAMH,MAAO,CAAEc,YAAa,KAC1B,kBAACb,EAAD,CAASc,KAAMpB,EAAMqB,MAAO/C,EAAMgD,cAAeC,KAAM,MAEvD,KAEHrB,GACC,kBAAC,UAAD,CAAMG,MAAO,CAAEmB,UAAW,SAAUH,MAAO/C,EAAMgD,gBAC9CpB,MC3BAuB,GAAeC,IAAMC,cAAc,IAEnCC,GAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLC,oBAAS,GADJ,WACtCC,EADsC,KACxBC,EADwB,OAEnBF,mBAAS,IAFU,WAEtCG,EAFsC,KAE/BC,EAF+B,KAIvCC,EAAUnH,IAChB,OACE,kBAACyG,GAAaW,SAAd,CACEC,MAAO,SAACnC,EAAOoC,EAASC,EAASC,GAC/BtF,QAAQuF,IAAI,WACQ,QAAhBC,UAASC,IACXX,GAAiBD,GACjBG,EAAS,CAAEhC,QAAOoC,UAASC,UAASC,aAEpCI,IAAMX,MAAM/B,EAAOoC,EAASC,EAASC,KAIxCX,EAEAE,GACC,kBAACvB,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPnC,gBAAiB,kBACjBG,eAAgB,SAChBiC,WAAY,WAGd,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CAAES,gBAAiB,QAASqC,aAAc,GAAInC,QAAS,KAE9D,kBAAC,UAAD,CAAMX,MAAO,CAAE+C,WAAY,SAAWnB,EAAM/B,OAC5C,kBAAC,UAAD,KAAO+B,EAAMK,SAEZL,EAAMM,QACL,kBAAC/B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,kBAGjBgB,EAAMM,QAAQc,KAAI,SAACC,GAAD,OACjB,kBAAC,GAAD,CACEpD,MAAOoD,EAAOC,KACdpD,QAAS,WACP,MAAAmD,EAAOnD,SAAPmD,EAAOnD,UACP6B,GAAgB,UAMxB,kBAAC,GAAD,CACE9B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM6B,GAAgB,U,uhBC3D/C,IAIMwB,G,qLAiBJC,iBAAmB,WACjB,IACIC,GAAa,EAEjB,IAAIC,SAAQ,SAAUC,EAASC,GAC7B,IAAMC,EAAUC,YAAW,WACzBL,GAAa,EACbG,EAAO,IAAIG,MAAM,wBANC,KASpB3H,MAAMlC,EAAUC,YAAc,gBAC3BuC,MAAK,SAAUC,GAEdqH,aAAaH,GACRJ,GAEHE,EAAQhH,MAGXI,OAAM,SAAUkH,GAIXR,GAEJG,EAAOK,SAGVvH,MAAK,WAEJ,EAAKwH,MAAMC,eAnDK,MAqDjBpH,OAAM,SAACkH,GACNhH,QAAQuF,IAAI,MAAOyB,GACnB,EAAKC,MAAMC,eAtDI,O,2DAIA,IAAD,OACE,QAAhB1B,UAASC,KACX0B,KAAKC,YAAcC,KAAQC,kBAAiB,SAAC9D,GAG3C,EAAKyD,MAAMC,eACT1D,EAAM+D,YAXQ,EAEA,OAcpBJ,KAAKK,SAAWC,YAAYN,KAAKZ,iBAAkB,O,6CA6C/B,QAAhBf,UAASC,IACX0B,KAAKC,cAEPL,aAAaI,KAAKK,Y,+BAGV,IAAD,EAC2BL,KAAKF,MAA/BtC,EADD,EACCA,SAAU4C,EADX,EACWA,YAElB,OACE,kBAACjE,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAvEH,IAwEfH,GACC,kBAACjE,EAAA,QAAD,CACEH,MAAO,CACLS,gBA1ES,IA2EP2D,EAAiC,SAAW,MAC9CzD,QAAS,KAGX,kBAAC6D,EAAA,EAAD,KACE,kBAAC,UAAD,CAAMxE,MAAO,CAAEgB,MAAO,UAhFb,IAiFNoD,EAAiC,UAAY,OAAQ,IADxD,yBAOL5C,O,GApF8BH,IAAMoD,WAmG9BC,gBATS,SAACrE,GAAD,MAAY,CAClC+D,YAAa/D,EAAMC,OAAO8D,gBAGD,SAACO,GAAD,MAAe,CACxCZ,eAAgB,SAACK,GAAD,OACdO,EAAS,CAAEjG,KAAM,mBAAoBsD,MAAOoC,QAGjCM,CAGbvB,I,kbClDayB,G,qLAxDbvE,MAAQ,CACNwE,SAAU,KACVtI,SAAU,M,gDAEF,IAAD,SAIHyH,KAAKF,MAJF,IAELgB,YAAeC,EAFV,EAEUA,GAAIzE,EAFd,EAEcA,OAAQ0E,EAFtB,EAEsBA,SAIvBlD,GANC,EAGLmD,WAGctK,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAExBxH,KAAKC,OAAOoH,EAAGI,SAAWC,KAAKzG,OAAS,KACpD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,KACE,kBAACkF,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,OAE9BvB,KAAK3D,MAAM9D,SACV,kBAACiJ,KAAD,CAAMxF,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC6F,KAAK3D,MAAM9D,SAASA,UAErB,KACJ,kBAAC,GAAD,CACEsD,MAAOiC,EAAQ,mBACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,aAGpBvI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJsI,EAAS1E,EAAOoF,YAEhB,EAAKE,SAAS,CAAErJ,aAHZ,+DAKLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,e,GA/CbyE,IAAMoD,W,2bC4BVoB,G,yIA3BH,IAAD,EAIH7B,KAAKF,MAJF,IAELgB,YAAeC,EAFV,EAEUA,GAAIzE,EAFd,EAEcA,OAAQ0E,EAFtB,EAEsBA,SAGvBc,GALC,EAGLb,WAEUvH,KAAKC,OAAOoH,EAAGI,SAAWC,KAAKzG,OAAS,MAC9CmD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,SAAUiC,WAAY,WACnD,kBAAC,UAAD,CAAM7C,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC2D,EAAQ,sBAAD,MAAwBiD,OAAxB,EAAwBA,EAAIgB,OAEtC,kBAAC,KAAD,CACEC,MAAOF,EACPG,SAAU,WACRjB,EAAS1E,EAAOoF,aAElBxE,KAAM,GACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAGtE,EAAQ,WAAYuE,EAAGvE,EAAQ,mB,GArBxCT,IAAMoD,W,6eCuKT6B,G,qLA9JbjG,MAAQ,CACNkG,KAAM,GACNC,MAAO,I,EAwBTD,KAAO,WAEL,OADiB,EAAKlG,MAAdkG,KACIvD,KAAI,SAAChF,EAAM7C,GAAP,OACd,kBAAC,UAAD,CAAMP,IAAG,OAASO,GAChB,kBAAC,UAAD,CAAM6E,MAAO,CAAE+C,WAAY,SAAW/E,EAAK+C,MAD7C,QAEG/C,EAAKiE,QAFR,gB,2DAvBF+B,KAAKyC,Y,gCAGI,IAAD,OACRzK,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiK,GACL,EAAKX,SAAS,CAAEW,YAEjB5J,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAaV,IAAD,SAC4BoH,KAAKF,MAAhCxD,EADD,EACCA,OAAQ2E,EADT,EACSA,WAAYF,EADrB,EACqBA,GADrB,EAGiBf,KAAK3D,MAArBkG,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAER1E,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BwB,EAAUH,EACbvD,KAAI,SAAChF,GAAD,SAAaA,EAAK+C,KAAO/C,EAAKiE,WAClCzH,KAAK,QACR,OACE,kBAAC2F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQlD,UAASsE,OAAO,CAAEC,IAAK,GAAIC,QAAS,QACzD,kBAAC1G,EAAA,QAAD,CACEH,MAAO,CACLP,MAAO,OACPgB,gBAAiB,OACjBqG,YAAa,EACbC,YAAa,QACbvG,cAAe6B,UAASsE,OAAO,CAAEC,IAAK,MAAOC,aAASxK,MAGvDgG,UAASsE,OAAO,CACfC,IACE,kBAACzG,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,WACrC8F,EACC,kBAAC,KAAD,MACG,YAAe,EAAZvL,MACF,OACE,oCACGoL,EAAKvD,KAAI,SAAChF,EAAM7C,GAAP,OACR,kBAAC,UAAD,CACE6E,MAAO,CAAEgB,MAAO,SAChBgG,cAAe,EACfpM,IAAG,OAASO,GAEZ,kBAACoF,EAAA,EAAD,CACET,QAAS,WACPmF,EAAWgC,SAAS,UAAW,CAC7BlG,KAAM/C,EAAK+C,SAIf,kBAAC,UAAD,CAAMf,MAAO,CAAE+C,WAAY,SACxB/E,EAAK+C,OAbZ,QAgBU/C,EAAKiE,QAhBf,mBAuBR,MAIR4E,QACE,kBAAC,KAAD,CACE7G,MAAO,CAAEkH,SAAU,IACnBC,SAA2B,GAAjBT,EAAQtJ,OAClBgK,gBAAc,EACdC,MAAI,EACJC,aAAc,IACdC,kBAAmB,KAEnB,oCACGhB,EAAKvD,KAAI,SAAChF,EAAM7C,GAAP,OACR,kBAAC,WAAD,CAAUP,IAAG,OAASO,GACpB,kBAAC,UAAD,CAAM6E,MAAO,CAAE+C,WAAY,SAAW/E,EAAK+C,MAD7C,QAEU/C,EAAKiE,QAFf,mBASV,kBAAC9B,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KACjC,kBAACiC,GAAA,EAAD,CACExF,MAAOwE,EACPiB,YAAa3F,EAAQ,mBACrB9B,MAAO,CACLS,gBAAiB,UACjByG,SAAU,GACVlG,MAAO,QACPuD,KAAM,EACN9E,MAAO,KAETiI,aAAc,SAAClB,GAAD,OAAW,EAAKZ,SAAS,CAAEY,WACzCmB,gBAAiB,YAAgC,IAAdzE,EAAa,EAA5B0E,YAAe1E,KACjClH,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdzD,QAASiB,MAGV5G,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiK,GACL,EAAKE,UAEe,QAAhBpE,UAASC,IACXuF,SAASC,SAGX,EAAKlC,SAAS,CAAEY,MAAO,QAExB7J,OAAM,SAACC,GACNC,QAAQD,MAAMA,gB,GApJf6H,a,UCKbsD,GAFYvI,IAAW1C,IAAI,UAAzB2C,MAEsB,IAoOfuI,OAlOf,YAA6C,IAAD,EAA1B/C,EAA0B,EAA1BA,WAAY3E,EAAc,EAAdA,OAAQyE,EAAM,EAANA,GAC9BjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEhC+C,GAAkB,EACF,QAAhB5F,UAASC,KACX2F,ECtByB,WAAO,IAAD,EACaxG,oBAAS,GADtB,WAC1BwG,EAD0B,KACTC,EADS,KAEjCvM,qBAAU,WAENwM,IACAC,MAAoB,kBAAMC,OAC1BA,MAED,IAEH,IAAMF,EAAoB,WACxBC,MAAoB,kBAAMC,QAEtBA,EAAc,WAClBD,OAA8B9L,MAAK,SAACgM,GAC9BA,EAAIC,aACNH,OAA2B9L,MAAK,SAACgM,GAC/BJ,GAAmB,UAM3B,OAAOD,EDDaO,IAGpB,IAAMC,EAAY,CAChB3H,YAAa,GACb4H,aAAc,GACd1H,MAAOV,EAAOrC,MAAMgD,eAGhB0H,GAAqC,KAApB,MAAF5D,OAAA,EAAAA,EAAI6D,iBAA6B,MAAF7D,OAAA,EAAAA,EAAI8D,aAAc,IACpE,kBAAC1I,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTF,gBAAiBH,EAAOrC,MAAMyC,UAC9BoC,aAAc,IAGhB,kBAAC,UAAD,CAAM9C,MAAO,CAAEgB,MAAOV,EAAOrC,MAAMgD,gBAChCa,EAAQ,sBAEX,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACL8I,UAAW,GACXtI,cAAe,MACfI,eAAgB,kBAGlB,kBAAC,GAAD,CACEf,MAAOiC,EAAQ,gBACfhC,QAAS,kBAAMmF,EAAWgC,SAAS,kBAErC,kBAAC,GAAD,CACEpH,MAAOiC,EAAQ,wBACfhC,QAAS,kBAAMmF,EAAWgC,SAAS,cAMrC8B,EACJ,kBAAC5I,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,SAChBqI,YAAa,OACbC,aAAc,CACZzJ,MAAO,EACP8F,OAAQ,GAEV4D,cAAe,IACfC,aAAc,KACdC,UAAW,IAGb,kBAAC,UAAD,CAAMrJ,MAAOyI,GAAb,sBACM1D,OADN,EACMA,EAAIhE,KADV,UACiBgE,GADjB,SACiBA,EAAIuE,WADrB,EACiB,EAAUvI,MAE3B,kBAAC,UAAD,CAAMf,MAAOyI,GAAb,sBAA6BrN,EAAY,MAAC2J,OAAD,EAACA,EAAIwE,MAA9C,MACA,kBAAC,UAAD,CAAMvJ,MAAOyI,GAAb,sBAA6BrN,EAAY,MAAC2J,OAAD,EAACA,EAAIyE,MAA9C,MACA,kBAACrJ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,KAAD,CACEO,KAAK,SACLG,KAAM,GACNF,MAAOV,EAAOrC,MAAMgD,cACpBjB,MAAO,CAAEc,YAAa,KAExB,kBAAC,UAAD,CAAMd,MAAOyI,GAAYrN,EAAY,MAAC2J,OAAD,EAACA,EAAI0E,WAE5C,kBAAC,UAAD,CAAMzJ,MAAOyI,GAAb,sBAA4B1D,OAA5B,EAA4BA,EAAI2E,YAChC,kBAAC,UAAD,CAAM1J,MAAOyI,GAAb,sBAA4B1D,OAA5B,EAA4BA,EAAIgB,MAChC,kBAAC,UAAD,CAAM/F,MAAOyI,GAAb,sBAA4B1D,OAA5B,EAA4BA,EAAI4E,OAAhC,KACA,kBAAC,UAAD,CAAM3J,MAAOyI,GAAb,gBACMpJ,GAAO,MAAC0F,OAAD,EAACA,EAAI1G,KAAM,QADxB,WACmC0G,OADnC,EACmCA,EAAIvC,SADvC,MAGA,kBAAC,UAAD,CAAMxC,MAAOyI,GAAb,gBAA4BnJ,GAAW,MAACyF,OAAD,EAACA,EAAI6E,SAAU,SACtD,kBAAC,UAAD,CAAM5J,MAAOyI,EAAW3I,QAAS,kBAAMmF,EAAWgC,SAAS,cAA3D,sBACMlC,OADN,EACMA,EAAI8E,UAIX,MAAC9E,OAAD,EAACA,EAAI6D,gBACJ,kBAACzI,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,EACTF,gBAAiBH,EAAOrC,MAAMyC,UAC9BoC,aAAc,IAGhB,kBAACvC,EAAA,EAAD,CACEP,MAAO,CACLQ,cAAe,MACfI,eAAgB,SAChBiC,WAAY,UAEd/C,QAAS,kBAAMmF,EAAWgC,SAAS,iBAEnC,kBAAC6C,GAAA,EAAD,CACE/I,KAAK,qBACLC,MAAM,MACNhB,MAAO,CAAEc,YAAa,MAExB,kBAAC,UAAD,CACEd,MAAO,CAAEgB,MAAOV,EAAOrC,MAAMgD,cAAe8B,WAAY,SAEvDjB,EAAQ,+BAOfiI,EAAkB9B,GACtB,kBAAC1H,EAAA,EAAD,CACET,QAAS,kBAAMsI,QAAQ4B,eACvBhK,MAAO,CACLW,QAAS,GACTF,gBAAiBH,EAAOrC,MAAMyC,UAC9BoC,aAAc,IAGhB,kBAAC,UAAD,CAAM9C,MAAO,CAAEgB,MAAOV,EAAOrC,MAAMgD,gBAChCa,EAAQ,2BAKTmI,EACJ,kBAAC9J,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRtJ,eAAgB,gBAChBJ,cAAe,QAGe,SAA/ByE,EAAW5E,MAAM8J,UAChB,kBAAC5J,EAAA,EAAD,CACE6J,QAAS,CAAE3H,IAAK,GAAIE,KAAM,GAAIC,MAAO,GAAIF,OAAQ,IACjD5C,QAAS,WACHiI,IAAiC,QAAhB1F,UAASC,GAC5B2C,EAAWoF,SAEXC,OAAOC,QAAQC,SAInB,kBAACV,GAAA,EAAD,CACE/I,KAAK,YACLG,KAAM,GACNF,MAAOV,EAAOrC,MAAMgD,iBAIxB,kBAACd,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,OAKvBkF,EACJ,kBAACtK,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,WAGlB,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,KAAOwK,GAE7B,kBAAC9J,EAAA,QAAD,CAAMH,MAAO,CAAE6C,WAAY,SAAU0B,KAAM,IACzC,kBAACc,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CACLkK,OAAQ,GACRzK,MAAOsI,GAAgB,IAAM,IAC7BxC,OAAQwC,GAAgB,GAAK,QAKnC,kBAAC,UAAD,CAAM/H,MAAO,CAAEgB,MAAO,QAAS8H,UAAW,KAA1C,IACIhP,IAAU4Q,SAASC,SAGtB5C,GACC,kBAACxH,EAAA,EAAD,CACET,QAAS,WACPmF,EAAW2F,gBAEb5K,MAAO,CAAEkK,OAAQ,KAEjB,kBAACW,GAAA,EAAD,CACE9J,KAAK,OACLG,KAAM,GACNF,MAAM,OACNhB,MAAO,CAAEgB,MAAO,WAGlB,MAGL+G,IAAiBgB,EAElB,kBAAC,GAAD,CAAMhE,GAAIA,EAAIzE,OAAQA,EAAQ2E,WAAYA,KAI9C,OACE,kBAAC9E,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,WACZ,QAAhByB,UAASC,GACRmI,EAEA,kBAACtK,EAAA,QAAD,CAAMH,MAAO,CAAES,gBAAiBH,EAAOrC,MAAMyC,YAC1CuJ,EACAF,GAAmBpB,GAAgBI,K,kBE7O1C+B,IAAY,EAEhB,GAAIC,aAAW,CASb,IACIC,GAAqB,EASzB,SAASC,KACPD,GAAqB5F,KAAKzG,MACtBmM,KACFA,IAAY,GAIhBI,SAAS/G,iBAAiB,aAAc8G,IAAc,GACtDC,SAAS/G,iBAAiB,YAAa8G,IAAc,GACrDC,SAAS/G,iBAAiB,aAhB1B,WACM2G,IAAa1F,KAAKzG,MAAQqM,GAJL,MAOzBF,IAAY,MAYsC,GC5BvC,SAASK,GAAT,GAAyD,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,WAAY7J,EAAY,EAAZA,SAAY,EACrCH,IAAMI,UAAS,GADsB,WAC9D6J,EAD8D,KACnDC,EADmD,OAEnClK,IAAMI,UAAS,GAFoB,WAE9D+J,EAF8D,KAEnDC,EAFmD,KAwBrE,IAAMC,EACgB,oBAAblK,EACHA,EAASgK,GAAaF,GACtB9J,EAEN,OAAOH,IAAMsK,aAAatK,IAAMuK,SAASC,KAAKH,GAAQ,CACpDI,aA1BF,SAA0BC,GD4BnBjB,KC3BoBQ,IACnBF,GAAWA,IACfG,GAAW,KAwBbS,aApBF,SAA0BD,GACpBT,IACED,GAAYA,IAChBE,GAAW,KAmBbU,iBAAkB,kBAAMR,GAAa,IACrCS,mBAAoB,kBAAMT,GAAa,IAEvCU,UAlBF,WACEV,GAAa,IAkBbW,WAfF,eAmBFjB,GAAUkB,YAAc,YAExBlB,GAAUmB,UAAY,CACpB9K,SAAU+K,qBAAU,CAACC,QAAMC,aAC3BrB,UAAWoB,QACXnB,WAAYmB,SC/CP,IAAME,GAAkBrL,IAAMC,cAAc,IACtCqL,GAAmB,SAAC,GAG1B,IAFLnL,EAEI,EAFJA,SAEI,IADJsD,YAAmBH,GACf,EADWI,GACX,EADeJ,UAAUrE,EACzB,EADyBA,OAAQ0E,EACjC,EADiCA,SACjC,EACsBvD,mBAASnB,EAAOoF,YADtC,WACGD,EADH,KACUmH,EADV,KAGJjR,qBAAU,WACR,GAAI8J,EAAO,CACT,IAAMoH,EAAmBvI,aAAY,WAEnCU,EAAS1E,EAAOoF,cACf,KAEGoH,EAAoBxI,aAAY,WAEpCyI,MACC,KAEH,OAAO,WAELC,cAAcH,GACdG,cAAcF,OAGjB,CAACrH,IAEJ,IAAMsH,EAAgB,WAEhBzM,EAAO2M,UAAU7P,OAAS,IAC5BL,EAAK,eAAgB,CACnB2I,WAAYpF,EAAOoF,WACnBuH,UAAW3M,EAAO2M,YAEpBtI,EAAS,CAAEjG,KAAM,sBAIrB,OACE,kBAACgO,GAAgB3K,SAAjB,CACEC,MAAO,CACLkL,uBAAwB,SAACzH,GAAD,OAAWmH,EAASnH,MAG7CjE,IAMM2L,GAAe,SAACC,GAAD,OAAoB,SAACtJ,GAAD,OAC9C,kBAAC4I,GAAgBW,SAAjB,MACG,SAACC,GAAD,OAAa,kBAACF,EAAD,OAAoBtJ,EAApB,CAA2ByJ,UAAWD,U,6BCpCzCE,GAfL,SAAC,GAAkC,IAAhChM,EAA+B,EAA/BA,SAAUiM,EAAqB,EAArBA,KAAS3J,EAAY,4BACpC7F,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAClD,OACE,kBAAC,UAAD,OACM6F,EADN,CAEE9D,MAAO,CACL,CAAEgB,MAAO/C,EAAME,YAAa4E,WAAY0K,EAAO,YAASpR,GACxDyH,EAAM9D,SAGPwB,I,kbC2GQkM,G,qLAjHbrN,MAAQ,CACNsN,KAAM,I,EAkCRC,WAAa,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAKR6P,GAL0B,EAAZ1S,MAGhB,EAAK2I,MADPgB,YAAexE,OAGD5C,KAAKoQ,OAAO9P,EAAK+P,OAAS3I,KAAKzG,OAAS,MAExD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,KAAIxC,EAAK+C,MACT,kBAAC,KAAD,CACEf,MAAO,CAAEgO,WAAY,IACrBhI,MAAO6H,EACPI,WAAY,CAAExN,gBAAiB,WAC/ByN,cAAe,CAAElN,MAAO,SACxBiF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,U,EAMlC8H,OAAS,SAAOzP,GAAP,uBAAAjC,EAAAC,OAAA,yDACsB,EAAKoH,MAAMgB,YAAhCxE,EADD,EACCA,OAAQ0E,EADT,EACSA,SADT,WAAAvI,EAAA,MAEoBM,EAAK,SAAU,CACxC0I,MAAOnF,EAAOoF,WACdhH,UAJK,gBAECnC,EAFD,EAECA,SAIR,EAAKqJ,SAAS,CAAErJ,aAChByI,EAAS1E,EAAOoF,YAPT,6D,2DAxDY,IAAD,OAClB1B,KAAKoK,eADa,MAGWpK,KAAKF,MAAMgB,YAAhCE,EAHU,EAGVA,SAAU1E,EAHA,EAGAA,OAClB0D,KAAKK,SAAWC,aAAY,WAC1BU,EAAS1E,EAAOoF,YAChB,EAAK0I,iBACJ,Q,6CAIHvR,QAAQuF,IAAI,uBACZ4K,cAAchJ,KAAKK,Y,mCAGRgK,GAAQ,IAAD,OAClBrS,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASiR,EAAT,EAASA,KACb,EAAK/H,SAAS,CAAE+H,SADZ,+DAGLhR,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAqCV,IAAD,SAIHoH,KAAKF,MAJF,IAELgB,YAAeC,EAFV,EAEUA,GAIXjD,GANC,EAEcxB,OAFd,EAEsB0E,SAFtB,EAGLC,WAGctK,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAE5B3I,EAAayH,KAAK3D,MAAlB9D,SACFuJ,EAAMpI,KAAKC,OAAOoH,EAAGgJ,OAAS3I,KAAKzG,OAAS,KAClD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,WAClC,kBAAC,GAAD,KAAIf,EAAQ,oBAEZ,kBAAC,KAAD,CACEkE,MAAOF,EACP5E,KAAM,GACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAGtE,EAAQ,WAAYuE,EAAGvE,EAAQ,cAGlD,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEtBhJ,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,CACEyD,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,qBACfhC,QAAS,kBAAM,EAAKqO,OAAO,cAE7B,kBAAC,GAAD,CACEnO,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,kBACfhC,QAAS,kBAAM,EAAKqO,OAAO,WAG7B,kBAACI,GAAA,EAAD,CACEC,KAAMxK,KAAK3D,MAAMsN,KACjBC,WAAY5J,KAAK4J,WACjBa,oBAAqBzK,KAAK0K,oB,GA3GjBrN,IAAMoD,W,iDCYVzE,GAjBD,SAAC/B,GAAD,OACZ0Q,KAAWC,OAAO,CAChBC,UAAW,CACT7N,MAAO/C,EAAMgD,cACbR,gBAAiBxC,EAAMyC,UACvBC,QAAS,GACTC,eAAgB,SAChBC,kBAAmB,GAEnByN,eAAgB,IAElBQ,UAAW,CACTvK,KAAM,EACN2F,OAAQ,OC6YC6E,GA3YI,SAAC,GASb,IAAD,IARJjK,YACEH,EAOE,EAPFA,SACAI,EAME,EANFA,GACAzE,EAKE,EALFA,OACA0E,EAIE,EAJFA,SACU/G,EAGR,EAHFqC,OAAUrC,MAEZgH,EACI,EADJA,WAEMnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAEoBzD,mBAAQ,MAACsD,OAAD,EAACA,EAAIhE,MAFjC,WAEGA,EAFH,KAESiO,EAFT,OAG4BvN,mBAAS,MAHrC,WAGGlF,EAHH,KAGa0S,EAHb,OAIsBxN,mBAAS,IAJ/B,WAIGyN,EAJH,KAIUC,EAJV,OAK4B1N,mBAAS,IALrC,WAKG2N,EALH,KAKaC,EALb,OAMsB5N,mBAAS,MAN/B,WAMG7E,EANH,KAMU0S,EANV,OAO0B7N,mBAAS,MAPnC,WAOG8N,EAPH,KAOYC,EAPZ,OAQsB/N,mBAAS,IAR/B,WAQGgO,EARH,KAQUC,EARV,OASoBjO,mBAAS,MAT7B,WASGkO,EATH,KASSC,EATT,OAUoBnO,mBAAS,IAV7B,WAUGoO,EAVH,KAUSC,GAVT,KAWEC,GAAa,8BAAAtT,EAAAC,OAAA,kEAAAD,EAAA,MACmBM,EAAK,aAAc,CACrD2I,WAAYpF,EAAOoF,WACnB3E,UAHe,uBACTxE,EADS,EACTA,SAAUgT,EADD,EACCA,QAIlBN,EAAY1S,GALK,kBAOVgT,GAPU,6DAUbS,GAAQ,kBAAMrL,EAAS,CAAEjG,KAAM,aAAcsD,OAAO,KAC1DrG,qBAAU,WACRqT,EAAO,MAACjK,OAAD,EAACA,EAAIhE,QACX,OAACgE,OAAD,EAACA,EAAIhE,OAxBJ,IA0BImM,GAA2B7L,IAAM4O,WAAWvD,IAA5CQ,uBA+TR,OACE,kBAAC/M,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPnC,gBAAiB,kBACjBG,eAAgB,SAChBiC,WAAY,WAGd,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiBxC,EAAMiS,QACvBpN,aAAc,GACdnC,QAAS,KAGX,kBAACJ,EAAA,EAAD,CACET,QAAkB,OAAT6P,EAAgB,kBAAMC,EAAQ,OAAQI,GAC/ChQ,MAAO,CAAEmQ,UAAW,aAEpB,kBAACC,GAAA,EAAD,CAAQrP,KAAK,QAAQC,MAAO/C,EAAME,YAAa+C,KAAM,OAGtD,MAAC6D,OAAD,EAACA,EAAIsL,IAA6B,KAAxB,kBAACC,GAAA,EAAD,MAED,cAATX,EAnQL,kBAACxP,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRvJ,QAAS,GACTmC,aAAc,KAGflG,EAAQ,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUpE,GAAgB,KAExD2S,EACC,kBAAC,UAAD,CAAMvP,MAAO,CAAEgB,MAAO,UAAYuO,GAElC,kBAACpP,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,UAExC,kBAAC0F,GAAA,EAAD,CACEC,YAAa3F,EAAQ,SACrByO,qBAAsBtS,EAAMuS,kBAC5B9I,aAAcyH,EACdnN,MAAOkN,EACPlP,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,aAExC,kBAAC0F,GAAA,EAAD,CACEiJ,iBAAe,EACf/I,aAAc2H,EACdrN,MAAOoN,EACPpP,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAOA,EACP4B,MAAOiC,EAAQ,SACfhC,QAAS,WAlHrB9D,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAE8S,QAAOE,SAAUsB,KAAIC,QAAQvB,OAEnD9S,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOsU,GAAP,SAAAnU,EAAAC,OAAA,uDACAkU,EAAahU,MACf0S,EAASsB,EAAahU,QAGtB+H,EAAS,CACPjG,KAAM,4BACNsD,MAAO4O,EAAalL,aAEtBV,EAAS4L,EAAalL,YACtB4J,EAAS,MACTE,EAAWoB,EAAarB,SACxBrC,GAAuB0D,EAAanL,QAZlC,kBAeGmL,GAfH,+DAiBLjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,UA2FV,kBAACuD,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTqI,SAAU,OACVpI,eAAgB,kBAGlB,kBAACL,EAAA,EAAD,CACET,QAAS,WACPkQ,KAEA/K,EAAWgC,SAAS,iBAGtB,kBAAC,UAAD,CACEjH,MAAO,CACLkK,OAAQ,GACRhD,SAAU,GACV2J,mBAAoB,cAGrB/O,EAAQ,cAIb,kBAACvB,EAAA,EAAD,CACET,QAAS,WACPkQ,KACA/K,EAAWgC,SAAS,oBAGtB,kBAAC,UAAD,CACEjH,MAAO,CACLkK,OAAQ,GACRhD,SAAU,GACV2J,mBAAoB,cAGrB/O,EAAQ,wBA+JN,UAAT6N,EApHR,kBAACxP,EAAA,QAAD,KACG5D,GAAY,kBAAC,GAAD,KAAIA,GAEjB,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,gBACxC,kBAAC0F,GAAA,EAAD,CACEC,YAAY,MACZ8I,qBAAsBtS,EAAMuS,kBAC5B9I,aAAcgI,EACd1N,MAAOyN,EACPzP,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAOA,EACP4B,MAAOiC,EAAQ,QACfhC,QAAS,WAvMf9D,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqT,QAAOhK,MAAOnF,EAAOoF,eAE3CpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GAML,OALA3B,EAAY2B,EAAarU,UAErBqU,EAAarB,SACfK,EAAQ,QAEHgB,KAERjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,WA4QD,SAAT+S,EAvJR,kBAACxP,EAAA,QAAD,KACG5D,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB2D,EAAQ,SAEpD,kBAAC0F,GAAA,EAAD,CACEC,YAAY,SACZ8I,qBAAsBtS,EAAMuS,kBAC5B9I,aAAcoI,GACd9N,MAAO6N,EACP7P,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CAAQN,MAAOiC,EAAQ,YAAahC,QAAS,WAnOjD9D,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnByT,OACAJ,YAGDnT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GAYL,OAXA3B,EAAY2B,EAAarU,UAErBqU,EAAarB,UACf5K,EAAS,CACPjG,KAAM,4BACNsD,MAAO4O,EAAanL,QAGtBT,EAAS4L,EAAalL,YACtBwH,GAAuB0D,EAAanL,QAE/BmL,KAERjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,WAkPlB,kBAACuD,EAAA,QAAD,KAEG5D,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,KAAIf,EAAQ,WACZ,kBAAC0F,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAO,CAACA,GAAM/B,GAAO4Q,UAAW,CAAEb,WAAY,KAC9CvG,YAAa3F,EAAQ,QACrBE,MAAOjB,EACP2G,aAAcsH,KAGlB,kBAAC,GAAD,CACEhP,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,YACfhC,QAAS,oBAAArD,EAAAC,OAAA,mDACFqI,EADE,uBAELkK,EAAYnN,EAAQ,oBAFf,6BAKHf,KAAI,MAAKgE,OAAL,EAAKA,EAAIhE,MALV,mCAAAtE,EAAA,MAMiBsT,MANjB,gBAQH/K,EAAS1E,EAAOoF,YAEhBsK,MAVG,wBAaLA,KAbK,gEAkBX,kBAAC,GAAD,CACEhQ,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,kBACfhC,QAAS,kBAAM8P,EAAQ,gBAGzB,kBAAC,GAAD,CACE5P,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,kBACfhC,QAAS,kBAAM8P,EAAQ,gB,kdC5VxB,IAAMkB,GAAb,kCAIE,WAAYhN,GAAoC,IAAD,uBAC7C,cAAMA,IA8CRiN,iBAAmB,SAAChF,GAElB,IACM5E,EAAW4E,GAAKA,EAAE5E,SAAW4E,EAAE5E,SAAW,IAG9B,YAAhB9E,UAASC,IACT0O,KAAUC,eACVD,KAAUC,cAAgB,IAEZD,KAAUC,cAMtB,EAAKnN,MAAMoN,oBACb,EAAKpN,MAAMoN,mBAAmB/J,GAGhC,IAAMgK,EACJpF,EAAEqF,eAAe7L,QAGhB,EAAKzB,MAAMuN,QAAU,IhBoDH,WACvB,IAAMC,EAAM9R,IAAW1C,IAAI,UAE3B,MAEkB,QAAhBuF,UAASC,KAbS,SAACgP,GACrB,OAAqB,KAAdA,EAAI/L,QAA8B,KAAb+L,EAAI7R,MAc7B8R,CAAcD,IAXI,SAACA,GACtB,OAAqB,KAAdA,EAAI/L,QAA8B,KAAb+L,EAAI7R,MAUP+R,CAAeF,IgB1DnCG,GAvB+B,GAuBW,GAE7CC,KAASC,OAAO,EAAKtR,MAAMkF,OAAQ,CACjC4B,WACAyK,OAAQC,KAAOC,KACfX,UACAY,iBAAiB,IAChBC,SA/E0C,EAkF/CC,iBAAmB,SAAClG,GAClB,IAAM5E,EAAW4E,GAAKA,EAAE5E,SAAW4E,EAAE5E,SAAW,IAC5C,EAAKrD,MAAMoO,oBACb,EAAKpO,MAAMoO,mBAAmB/K,GAEhCuK,KAASC,OAAO,EAAKtR,MAAMkF,OAAQ,CACjC4B,WACAyK,OAAQC,KAAOC,KACfX,QAAS,EACTY,iBAAiB,IAChBC,SA1FH,EAAK3R,MAAQ,CACXkF,OAAQ,IAAImM,KAASS,MAAM,IAHgB,EAJjD,yDAYInO,KAAKoO,kBAZT,6CAgBIpO,KAAKqO,oBAhBT,sCAoBwB,QAAhBhQ,UAASC,IACX0B,KAAKsO,yBAA2BC,KAASC,YACvC,mBACAxO,KAAK+M,kBAEP/M,KAAKyO,yBAA2BF,KAASC,YACvC,mBACAxO,KAAKiO,oBAGPjO,KAAK0O,wBAA0BH,KAASC,YACtC,kBACAxO,KAAK+M,kBAEP/M,KAAK2O,wBAA0BJ,KAASC,YACtC,kBACAxO,KAAKiO,qBApCb,wCA0CwB,QAAhB5P,UAASC,IACX0B,KAAKsO,yBAAyBM,SAC9B5O,KAAKyO,yBAAyBG,WAE9B5O,KAAK0O,wBAAwBE,SAC7B5O,KAAK2O,wBAAwBC,YA/CnC,+BAoGI,OAAO,gBAAClB,GAAA,EAASvR,KAAV,CAAeH,MAAO,CAAEuF,OAAQvB,KAAK3D,MAAMkF,cApGtD,GAA2ClE,a,oBCZ9BwR,GAAkB,CAC7BC,oBAAqB,GACrBC,sBAAuB,GACvBC,sBAAuB,GACvBC,wBAAyB,GACzBC,wBAAyB,GACzBC,0BAA2B,GAC3BC,mBAAoB,GACpBC,mBAAoB,GACpBC,oBAAqB,GACrBC,6BAA8B,GAC9BC,sBAAuB,GACvBC,uBAAwB,GACxBC,SAAU,GACVC,sBAAuB,IACvBC,kBAAmBC,KAAO,aAAc,cACxCC,oBAAqBD,KAAO,aAAc,cAC1CE,oBAAqBF,KAAO,aAAc,cAC1CG,oBAAqBH,KAAO,aAAc,cAC1CI,kBAAmBJ,KAAO,aAAc,eAG7BK,GAAW,SAACnP,EAAI9G,GAC3B,IAAMkW,EAAkBzW,KAAK0W,OACxB,MAAFrP,OAAA,EAAAA,EAAIsP,cAAe,IAAQjP,KAAKzG,OAAS,KAGtC2V,EAAe5W,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAIwP,SAAU,IAAQnP,KAAKzG,OAAS,KAC9D6V,EAAgB9W,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAI0P,UAAWrP,KAAKzG,OAAS,KAExD+V,EAAgBhX,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAI4P,UAAW,KAASvP,KAAKzG,OAAS,KAEjEiW,EAAalX,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAI8P,OAAQ,IAAQzP,KAAKzG,OAAS,KAE1DmW,EAAapX,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAIgQ,QAAJ,MAAYhQ,OAAZ,EAAYA,EAAIiQ,SAAU5P,KAAKzG,OAAS,KAChEsW,EAAcvX,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAImQ,QAAS,KAAS9P,KAAKzG,OAAS,KAC7DwW,EAAiBzX,KAAK0W,OACvB,MAAFrP,OAAA,EAAAA,EAAIqQ,WAAY,KAAShQ,KAAKzG,OAAS,KAEpC0W,EAAgB3X,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAIuQ,UAAW,KAASlQ,KAAKzG,OAAS,KACjE4W,EAAc7X,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAIyQ,QAASpQ,KAAKzG,OAAS,KAEpDmD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,MAAO,CACL,CACEuQ,OAAQ,CACNC,UAAU,EACVxS,KAAMpB,EAAQ,gBAGhB6T,QAAS,CACP,CACEC,SAAU,cACVjW,KAAM,MACNuD,KAAMpB,EAAQ,gBACd+T,GAAI,WACJC,UACE3B,EAAkB,EAChB,kBAAC,KAAD,CACEnU,MAAO,CAAEgO,WAAY,IACrBhI,MAAOmO,EACPlG,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEuP,SAAU,WACVjW,KAAM,UACNuD,KAAMpB,EAAQ,cACd+T,GAAI,SACJC,UACExB,EAAe,EACb,kBAAC,KAAD,CACEtU,MAAO,CAAEgO,WAAY,IACrBhI,MAAOsO,EACPrG,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAER,CACE0P,UAAWhR,IAAQ,MAAFA,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBS,oBAClD0C,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBS,oBACdT,GAAgBO,mBACpBwC,SAAU,yBACVjW,KAAM,SACNuD,KAAMpB,EAAQ,YACd+T,GAAI,OACJC,UACEpB,EAAgB,EACd,kBAAC,KAAD,CACE1U,MAAO,CAAEgO,WAAY,IACrBhI,MAAO0O,EACPzG,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAER,CACE0P,UAAWhR,IAAQ,MAAFA,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBQ,mBAClD2C,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBQ,mBACdR,GAAgBO,mBACpBwC,SAAU,yBACVjW,KAAM,SACNuD,KAAMpB,EAAQ,WACd+T,GAAI,MACJC,UACElB,EAAa,EACX,kBAAC,KAAD,CACE5U,MAAO,CAAEgO,WAAY,IACrBhI,MAAO4O,EACP3G,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEuP,SAAU,YACVjW,KAAM,cACNuD,KAAMpB,EAAQ,WACd+T,GAAI,MACJC,UACEhB,EAAa,EACX,kBAAC,KAAD,CACE9U,MAAO,CAAEgO,WAAY,IACrBhI,MAAO8O,EACP7G,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEuP,SAAU,yBACVjW,KAAM,OACNuD,KAAMpB,EAAQ,YACd+T,GAAI,OACJC,UACEb,EAAc,EACZ,kBAAC,KAAD,CACEjV,MAAO,CAAEgO,WAAY,IACrBhI,MAAOiP,EACPhH,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEuP,SAAU,gBACVjW,KAAM,SACNuD,KAAMpB,EAAQ,eACd+T,GAAI,UACJC,UACEX,EAAiB,EACf,kBAAC,KAAD,CACEnV,MAAO,CAAEgO,WAAY,IACrBhI,MAAOmP,EACPlH,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEuP,SAAU,cACVjW,KAAM,SACNuD,KAAMpB,EAAQ,mBACd+T,GAAI,SACJC,UACET,EAAgB,EACd,kBAAC,KAAD,CACErV,MAAO,CAAEgO,WAAY,IACrBhI,MAAOqP,EACPpH,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE0P,SACElC,OAASoC,SAASpD,GAAgBoB,sBAClC,MAAClP,OAAD,EAACA,EAAImR,OAAQ,EACfF,MAAOnC,OAASoC,SACdpD,GAAgBoB,kBAAkBkC,IAChCtD,GAAgBa,SAChB,SAGJkC,SAAU,YACVjW,KAAM,OACNuD,KAAMpB,EAAQ,YACd+T,GAAI,OACJC,UACEP,EAAc,EACZ,kBAAC,KAAD,CACEvV,MAAO,CAAEgO,WAAY,IACrBhI,MAAOuP,EACPtH,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEuP,SAAU,cACVjW,KAAM,OACNuD,KAAMpB,EAAQ,WAAD,MAAaiD,OAAb,EAAaA,EAAI4I,MAC9BkI,GAAI,SAENO,QAAO,SAAC/a,GAAD,QAASA,IAAMA,EAAE0a,aAG5B,CACEN,OAAQ,CACNC,UAAU,EACVxS,KAAMpB,EAAQ,gBAGhB6T,QAAS,CACP,CACEC,SAAU,cACVjW,KAAM,OACNuD,KAAMpB,EAAQ,YACd+T,GAAI,YAGN,CACEE,WACKhR,GAAMA,EAAGmR,MAAQ,IAClBrC,OAASoC,SAASpD,GAAgBiB,uBAClC,MAAF/O,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBW,sBACnCwC,MACEnC,OAASoC,SACPpD,GAAgBiB,oBAAoBqC,IAClCtD,GAAgBa,SAChB,WAGF,MAAF3O,OAAA,EAAAA,EAAI8D,YACFgK,GAAgBW,sBACdX,GAAgBO,mBACtBwC,SAAU,cACVjW,KAAM,OACNuD,KAAMpB,EAAQ,cACd+T,GAAI,UAGN,CACEE,UACI,MAAFhR,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBU,6BACnCyC,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBU,6BACdV,GAAgBO,mBAEpBwC,SAAU,yBACVjW,KAAM,SACNuD,KAAMpB,EAAQ,qBACd+T,GAAI,iBAGN,CACEE,UAAY,MAAFhR,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBC,oBAC3CkD,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBC,oBACdD,GAAgBO,mBAEpBwC,SAAU,cACVjW,KAAM,OACNuD,KAAMpB,EAAQ,YACd+T,GAAI,QAGN,CACEE,UAAY,MAAFhR,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBE,sBAC3CiD,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBE,sBACdF,GAAgBO,mBACpBwC,SAAU,eACVjW,KAAM,OACNuD,KAAMpB,EAAQ,cACd+T,GAAI,UAGN,CACEE,UAAY,MAAFhR,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBG,sBAC3CgD,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBG,sBACdH,GAAgBO,mBAEpBwC,SAAU,yBACVjW,KAAM,YACNuD,KAAMpB,EAAQ,cACd+T,GAAI,SACJC,UACEtB,EAAgB,EACd,kBAAC,KAAD,CACExU,MAAO,CAAEgO,WAAY,IACrBhI,MAAOwO,EACPvG,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE0P,UAAY,MAAFhR,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBI,wBAC3C+C,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBI,wBACdJ,GAAgBO,mBAEpBwC,SAAU,eACVjW,KAAM,WACNuD,KAAMpB,EAAQ,gBACd+T,GAAI,YAGN,CACED,SAAU,SACVjW,KAAM,OACNuD,KAAMpB,EAAQ,YACd+T,GAAI,QAGN,CACED,SAAU,WACVjW,KAAM,UACNuD,KAAMpB,EAAQ,cACd+T,GAAI,UAEN,CACEE,UAAY,MAAFhR,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBK,wBAC3C8C,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBK,wBACdL,GAAgBO,mBAEpBwC,SAAU,gBACVjW,KAAM,iBACNuD,KAAMpB,EAAQ,gBACd+T,GAAI,YAEN,CACEE,UAAY,MAAFhR,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBM,0BAC3C6C,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBM,0BACdN,GAAgBO,mBAEpBwC,SAAU,yBACVjW,KAAM,UACNuD,KAAMpB,EAAQ,kBACd+T,GAAI,cAGN,CACEE,UAAY,MAAFhR,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBY,uBAC3CuC,OACI,MAAFjR,OAAA,EAAAA,EAAI8D,YACJgK,GAAgBY,uBACdZ,GAAgBO,mBAEpBwC,SAAU,cACVjW,KAAM,QACNuD,KAAMpB,EAAQ,eACd+T,GAAI,YAENO,QAAO,SAAC/a,GAAD,QAASA,IAAMA,EAAE0a,eAK1BM,GAAY,SAACtR,GACjB,IAAMjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BoR,GACF,MAAFvR,OAAA,EAAAA,EAAImR,QAAS,EACT,CACE,CACEN,SAAU,SACVjW,KAAM,MACNuD,KAAMpB,EAAQ,iBACd+T,GAAI,mBAGR,GAEAU,GAAU,MAAFxR,KAAImR,MAAc,IAEhC,OACI,MAAFnR,OAAA,EAAAA,EAAImR,OAAQ,GAAK,CACfT,OAAQ,CACNC,UAAU,EACVxS,KAAMpB,EAAQ,qBAEhB6T,QAAQ,GAAD,OAAMW,EAAYC,KAKlBC,GAAY,SAACzR,EAAI9G,GAAW,IAAD,MAChC6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAC9BuR,EAAY/Y,KAAK0W,OAAQ,MAAFrP,OAAA,EAAAA,EAAI2R,MAAO,KAAStR,KAAKzG,OAAS,KAEzDgY,GACF,MAAF5R,OAAA,EAAAA,EAAImR,OAAQ,GAAKrC,OAAS+C,QAAQ/D,GAAgBe,mBAC9C,CACE6B,OAAQ,CACNC,UAAU,EACVM,MAAOnC,OAASoC,SACdpD,GAAgBe,kBAAkBuC,IAChCtD,GAAgBa,SAChB,SAGJxQ,MAAQ,MAAF6B,GAAA,SAAAA,EAAIuE,WAAJ,IAAUvI,OAAQe,EAAQ,cAChC+U,OAAS,MAAF9R,GAAA,SAAAA,EAAIuE,WAAJ,IAAUwN,WACbhd,EAAUC,aAAV,MAAwBgL,GAAxB,SAAwBA,EAAIuE,WAA5B,EAAwB,EAAUwN,WAClC,MAENnB,QAAS,GACP,MAAC5Q,OAAD,EAACA,EAAIgS,SAAU,CACbnB,SAAU,WACVjW,KAAM,aACNuD,KAAMpB,EAAQ,kBACd+T,GAAI,cAEN,CACED,SAAU,WACVjW,KAAM,aACNuD,KAAMpB,EAAQ,aACd+T,GAAI,UAGJ,MAAF9Q,OAAA,EAAAA,EAAIgS,SAAU,CACZnB,SAAU,WACVjW,KAAM,aACNuD,KAAMpB,EAAQ,oBACd+T,GAAI,iBAGJ,MAAF9Q,OAAA,EAAAA,EAAIgS,SAAU,CACZnB,SAAU,WACVjW,KAAM,aACNuD,KAAMpB,EAAQ,gBACd+T,GAAI,aAGJ,MAAF9Q,OAAA,EAAAA,EAAIgS,SAAU,CACZnB,SAAU,WACVjW,KAAM,aACNuD,KAAMpB,EAAQ,wBACd+T,GAAI,qBAGJ,MAAF9Q,OAAA,EAAAA,EAAIgS,SAAU,CACZnB,SAAU,WACVjW,KAAM,UACNuD,KAAMpB,EAAQ,UACd+T,GAAI,iBACJC,UACEW,EAAY,EACV,kBAAC,KAAD,CACEzW,MAAO,CAAEgO,WAAY,IACrBhI,MAAOyQ,EACPxI,WAAY,CAAExN,gBAAiBxC,EAAMyC,WACrCwN,cAAe,CAAElN,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,OAQR+P,QAAO,SAAC/a,GAAD,QAASA,MAEpB,KAEN,MAAO,CACL,CACEoa,OAAQ,CACNC,UAAU,EACVxS,KAAI,MAAE6B,OAAF,EAAEA,EAAIhE,KACV8V,OAAS,MAAF9R,OAAA,EAAAA,EAAI+R,WAAYhd,EAAUC,aAAV,MAAwBgL,OAAxB,EAAwBA,EAAI+R,WAAY,MAGjEnB,QAAS,CACP,CACEqB,SAAS,EACTpB,SAAU,eACVjW,KAAM,QACNuD,KAAMpB,EAAQ,WAAY1G,EAAY,MAAC2J,OAAD,EAACA,EAAIwE,OAC3CsM,GAAI,YAGN,CACEmB,SAAS,EAETpB,SAAU,cACVjW,KAAM,QAENuD,KAAMpB,EAAQ,gBAAiB1G,EAAY,MAAC2J,OAAD,EAACA,EAAIyE,OAChDqM,GAAI,YAEN,CACEmB,SAAS,EAETpB,SAAU,yBACVjW,KAAM,SAENuD,KAAMpB,EAAQ,cAAe1G,EAAY,MAAC2J,OAAD,EAACA,EAAI0E,UAC9CoM,GAAI,QAEN,CACEmB,SAAS,EAETpB,SAAU,kBACVjW,KAAM,QACNuD,KAAMpB,EAAQ,WAAYzC,GAAO,MAAC0F,OAAD,EAACA,EAAI1G,KAAM,SAC5CwX,GAAI,UAEN,CACEmB,SAAS,EAETpB,SAAU,YACVjW,KAAM,QAENuD,KAAMpB,EAAQ,aAAD,MAAeiD,OAAf,EAAeA,EAAI4E,QAChCkM,GAAI,YAEN,CACEmB,SAAS,EAETpB,SAAU,WACVjW,KAAM,eAENuD,KAAMpB,EAAQ,WAAD,MAAaiD,OAAb,EAAaA,EAAIgB,MAC9B8P,GAAI,WAGN,CACED,SAAU,WACVjW,KAAM,kBACNuD,KAAMpB,EAAQ,eAAD,MAAiBiD,OAAjB,EAAiBA,EAAI8E,OAClCgM,GAAI,cAKV,CACEJ,OAAQ,CACNC,UAAU,EACVxS,KAAMpB,EAAQ,kBAEhB6T,QAAS,CACP,CACEC,SAAU,WACVjW,KAAM,aAENuD,KAAMpB,EAAQ,cAAD,MAAgBiD,OAAhB,EAAgBA,EAAIkS,QACjCpB,GAAI,WAGN,CACED,SAAU,YACVjW,KAAM,OACNuD,KAAMpB,EAAQ,aACd+T,GAAI,SAGN,CACED,SAAU,YACVjW,KAAM,OACNuD,KAAMpB,EAAQ,iBACd+T,GAAI,aAGN,CACED,SAAU,YACVjW,KAAM,OACNuD,KAAMpB,EAAQ,cACd+T,GAAI,YAKVc,EAEA,CACElB,OAAQ,CACNC,UAAU,EACVxS,KAAMpB,EAAQ,kBAEhB6T,QAAS,CACP,CACEC,SAAU,WACVjW,KAAM,kBACNuD,KAAMpB,EAAQ,YACd+T,GAAI,QAGN,CACED,SAAU,cACVjW,KAAM,SAENuD,KAAMpB,EAAQ,aACd+T,GAAI,SAGN,CACED,SAAU,kBACVjW,KAAM,WAENuD,KAAMpB,EAAQ,gBACd+T,GAAI,YAGN,CACED,SAAU,SACVjW,KAAM,mBAENuD,KAAMpB,EAAQ,YACd+T,GAAI,QAGN,CACEE,WACKhR,IAAQ,MAAFA,OAAA,EAAAA,EAAImR,OAAQ,IACnBrC,OAASoC,SAASpD,GAAgBmB,uBAClC,MAAFjP,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBc,sBACnCqC,MACEnC,OAASoC,SACPpD,GAAgBmB,oBAAoBmC,IAClCtD,GAAgBa,SAChB,WAGF,MAAF3O,OAAA,EAAAA,EAAI8D,YACFgK,GAAgBc,sBACdd,GAAgBO,mBAEtBwC,SAAU,SACVjW,KAAM,MACNuD,KAAMpB,EAAQ,eACd+T,GAAI,WAGN,CACEE,WACKhR,IAAQ,MAAFA,OAAA,EAAAA,EAAImR,OAAQ,IACnBrC,OAASoC,SAASpD,GAAgBmB,uBAClC,MAAFjP,OAAA,EAAAA,EAAI8D,YAAagK,GAAgBc,sBACnCqC,MACEnC,OAASoC,SACPpD,GAAgBmB,oBAAoBmC,IAClCtD,GAAgBa,SAChB,WAGF,MAAF3O,OAAA,EAAAA,EAAI8D,YACFgK,GAAgBc,sBACdd,GAAgBO,mBAEtBwC,SAAU,SACVjW,KAAM,MACNuD,KAAMpB,EAAQ,cACd+T,GAAI,UAGN,CACED,SAAU,cACVjW,KAAM,OACNuD,KAAMpB,EAAQ,WACd+T,GAAI,QAENO,QAAO,SAAC/a,GAAD,QAASA,IAAMA,EAAE0a,aAG5BM,GAAUtR,IACVqR,QAAO,SAAC/a,GAAD,QAASA,M,UClkBL6b,IAzJG1X,IAAW1C,IAAI,UAAzB2C,MAGW,SAAC,GAQb,IAPLwF,EAOI,EAPJA,WAOI,IANJH,YACEC,EAKE,EALFA,GACAzE,EAIE,EAJFA,OACA0E,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAGkCzD,mBAAQ,MAACsD,OAAD,EAACA,EAAIoS,YAH/C,WAGGC,EAHH,KAGgBC,EAHhB,OAIkC5V,mBAAQ,MAACsD,OAAD,EAACA,EAAIuS,aAJ/C,WAIGA,EAJH,KAIgBC,EAJhB,OAKkC9V,mBAAQ,MAACsD,OAAD,EAACA,EAAIyS,aAL/C,WAKGA,EALH,KAKgBC,EALhB,OAMkChW,mBAAQ,MAACsD,OAAD,EAACA,EAAI2S,aAN/C,WAMGA,EANH,KAMgBC,EANhB,OAO4BlW,mBAAS,MAPrC,WAOGlF,EAPH,KAOa0S,EAPb,KASE2I,EAAS,SAACC,GAGd7b,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnB+a,WAAYC,EACZE,cACAE,cACAE,cACAhS,WAAYpF,EAAOoF,eAGpBpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACP0S,EAAY1S,GACZyI,EAAS1E,EAAOoF,eAEjB/I,OAAM,SAACC,GACNC,QAAQuF,IAAI,eAAgBxF,GAC5BgF,MAAME,EAAQ,2BAqBpBnG,qBAAU,WAAO,IAAD,EACRwb,EAAU,SAAGlS,EAAW5E,MAAMyX,aAApB,EAAG,EAAyBX,WACxCA,GACFS,MAED,IAEH,IAAMvZ,EAAOgB,GAAO,MAAC0F,OAAD,EAACA,EAAI1G,KAAM,UACzB0Z,EAAG,2DAAuDhT,OAAvD,EAAuDA,EAAIhE,MACpE,OACE,kBAACiX,EAAA,EAAD,CACEhY,MAAO,CACLuE,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEiY,SAAU,IAAK/N,OAAQ,KACpC,kBAAC,GAAD,KAAIpI,EAAQ,mBAEZ,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAE0I,aAAc,KAC3B,kBAAC,GAAD,KAAI5G,EAAQ,uBACZ,kBAAC0F,GAAA,EAAD,CACExF,MAAO+V,EACPG,QAAS,WACPC,KAAUC,UAAUL,GACpB9I,EAAYnN,EAAQ,uBAEtB9B,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC,GAAD,CAAGpB,MAAI,GAAE3L,EAAQ,2BACd,MAAFiD,OAAA,EAAAA,EAAIsT,YAAYjb,QAAS,EAAzB,MACC2H,OADD,EACCA,EAAIsT,YAAYrV,KAAI,SAACmU,GACnB,OAlDQvc,EAkDQuc,EAAWpW,KAlDdiB,EAkDoB3C,GAAQ8X,EAAW9Y,KAAM,QAhDhE,kBAAC8B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,IAZO,IAACpH,EAAKoH,KAqDf,kBAAC,GAAD,KAAIF,EAAQ,oBAGd,kBAAC,GAAD,CAAG2L,MAAI,EAACzN,MAAO,CAAE8I,UAAW,KACzBhH,EAAQ,+BAEX,kBAAC,GAAD,KAAIvF,GAEJ,kBAACiL,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAOsY,GAAOra,GAAO4Q,UACrB7M,MAAOoV,EACP1P,aAAc2P,EACd5P,YAAa3F,EAAQ,aAAc,KAGpCzD,GAAQ,GACP,kBAACmJ,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAOsY,GAAOra,GAAO4Q,UACrB7M,MAAOsV,EACP5P,aAAc6P,EACd9P,YAAa3F,EAAQ,aAAc,KAEnC,KAEHzD,GAAQ,GACP,oCACE,kBAACmJ,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAOsY,GAAOra,GAAO4Q,UACrB7M,MAAOwV,EACP9P,aAAc+P,EACdhQ,YAAa3F,EAAQ,aAAc,KAGrC,kBAAC0F,GAAA,EAAD,CACExH,MAAOsY,GAAOra,GAAO4Q,UACrB7M,MAAO0V,EACPnH,qBAAsBtS,EAAMuS,kBAC5B9I,aAAciQ,EACdlQ,YAAa3F,EAAQ,aAAc,MAGrC,KAEJ,kBAAC,GAAD,CAAQjC,MAAOiC,EAAQ,QAAShC,QAAS8X,Q,kbC9ElCW,G,qLA1EblY,MAAQ,CACN9D,SAAU,KACVic,QAAS,KACTvW,QAAS,M,EAmCXwW,YAAc,WAAO,IACXnY,EAAW,EAAKwD,MAAMgB,YAAtBxE,OADU,EAEW,EAAKD,MAA1B4B,EAFU,EAEVA,QAASuW,EAFC,EAEDA,QACjBxc,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdzD,UACAuW,cAGDlc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKqJ,SAAS,CAAErJ,gBAEjBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,oDArDN,IAAD,SAGPoH,KAAKF,MADPgB,YAAexE,EAFN,EAEMA,OAAQyE,EAFd,EAEcA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACG6D,KAAK3D,MAAM9D,SAAW,kBAAC,GAAD,KAAIyH,KAAK3D,MAAM9D,SAASA,UAAgB,KAC/D,kBAACiL,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO4Q,UAC3B0B,qBAAsBjQ,EAAOrC,MAAMuS,kBACnC/I,YAAa3F,EAAQ,WACrBE,MAAOgC,KAAK3D,MAAMmY,QAClB9Q,aAAc,SAAC8Q,GAAD,OAAa,EAAK5S,SAAS,CAAE4S,eAE7C,kBAAChR,GAAA,EAAD,CACE+I,qBAAsBjQ,EAAOrC,MAAMuS,kBACnCxQ,MAAOA,GAAMM,EAAOrC,OAAO4Q,UAC3BpH,YAAa3F,EAAQ,WACrBE,MAAOgC,KAAK3D,MAAM4B,QAClByF,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAE7C,kBAAC,GAAD,CACEjC,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,QACfhC,QAASkE,KAAKyU,iB,+BA8BZ,IAAD,EAIHzU,KAAKF,MADQiB,GAHV,EAELE,WAFK,EAGLH,YAAeC,IAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OAAOH,EAAGmR,MAAQ,GAAK,kBAAC,GAAD,KAAIpU,EAAQ,aAAmBkC,KAAK0U,iB,GAvE1CjU,aCgFNkU,GApFQ,SAAC,GAOlB,EANJ1T,WAMI,EALJH,YAKK,IAAD,IAJJA,YACEC,EAGE,EAHFA,GAGE,IAFFzE,OAAiBoF,GAEf,EAFQzH,MAER,EAFeyH,YAGb5D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAGkBzD,mBAAS,IAH3B,WAGGmX,EAHH,KAGQC,EAHR,OAIgBpX,mBAAS,MAJzB,WAIG4O,EAJH,KAIOyI,EAJP,OAKoBrX,mBAAS,MAL7B,WAKGsX,EALH,KAKSC,EALT,OAM0BvX,mBAAS,MANnC,WAMGwX,EANH,KAMYC,EANZ,OAO8BzX,mBAAS,MAPvC,WAOGwL,EAPH,KAOckM,EAPd,KA2BJ,OAlBA3d,GAAO,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACiBK,EAAI,mBAAmB4I,IADxC,gBACGkT,EADH,EACGA,IACRC,EAAOD,GAFF,+DAKPjd,qBAAU,YACW,yBAAAc,EAAAC,OAAA,kEAAAD,EAAA,MAC0BK,EAAI,uBACtB4I,EADqB,WACA2K,IAF7B,gBACT0I,EADS,EACTA,KAAME,EADG,EACHA,QAAShM,EADN,EACMA,UAGvB+L,EAAQD,GACRG,EAAWD,GACXE,EAAalM,GANI,4DASnBmM,KACC,CAAC/I,IAGF,kBAAC2H,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,MAClC,MAAFoE,OAAA,EAAAA,EAAImR,OAAQ,EACX,kBAAC,GAAD,KAAIpU,EAAQ,aAEZ,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAClB8L,GAAM0I,GAAQE,GAAWhM,EACxB,kBAAC9M,EAAA,QAAD,KACE,kBAACI,EAAA,EAAD,CAAkBT,QAAS,kBAAMgZ,EAAM,QACrC,kBAAC,GAAD,CAAGrL,MAAI,EAACzN,MAAO,CAAE0I,aAAc,KAC5B5G,EAAQ,UAIb,kBAAC,GAAD,KACGA,EAAQ,QADX,KACsBiX,EAAKhY,MAG3B,kBAAC,GAAD,KACGe,EAAQ,WADX,KACyBmX,EAAQ7b,QAEjC,kBAAC,GAAD,KACG0E,EAAQ,aADX,KAC2BmL,EAAU7P,SAIvCwb,EAAI5V,KAAI,SAACqW,EAAIle,GACX,IAAMme,EAAWV,EAAIzd,EAAQ,GAE7B,OACE,kBAACgF,EAAA,QAAD,CAAMvF,IAAG,KAAOO,IACL,MAARme,OAAA,EAAAA,EAAUD,MAAOA,EAAGA,GAAK,KACxB,kBAAC,GAAD,CAAG5L,MAAI,EAACzN,MAAO,CAAE8I,UAAW,KACzBuQ,EAAGA,IAGR,kBAAC9Y,EAAA,EAAD,CAAkBT,QAAS,kBAAMgZ,EAAMO,EAAGhJ,MACxC,kBAAC,GAAD,KAAIgJ,EAAGtY,YAQrB,kBAACZ,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,kbC5EvBgU,G,qLACJlZ,MAAQ,CACN9D,SAAU,M,EAEZid,aAAe,WAAO,IAAD,EACI,EAAK1V,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GACR8Q,EAAO,EAAKxV,MAAZwV,GAEF/T,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC,GAAD,CACElF,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,OACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdmQ,SAGDvZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,U,EAO1B6c,gBAAkB,WAEhB,IAAMtX,EAAU,CACd,QACA,YACA,SACA,YACA,SACA,SACA,OACA,SACA,SACA,WACA,OACA,WACA,iBACAuX,OACF,EAAK5V,MAAM6V,2BACT,CACExX,YAIF,SAACyX,GACC,EAAKhU,SAAS,CAAEiQ,GAAI1T,EAAQyX,S,oDAKpB,IAAD,EACL9X,EAAUnH,EAAe,SAACqJ,KAAKF,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAC3D,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACEN,MAAOmE,KAAK3D,MAAMwV,GAAK7R,KAAK3D,MAAMwV,GAAK/T,EAAQ,cAC/ChC,QAASkE,KAAKyV,kBAGfzV,KAAKwV,kB,+BAIF,IAAD,EAOHxV,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aAEY7G,GALP,EAIH8G,GAJG,EAKHzE,OAAUrC,OAGN1B,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,WAClC,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAIzK,MAAO,MAC/BlD,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KAEHyH,KAAK0U,mB,GApGMjU,aA2GPoV,gCAAmBN,IC3EnBO,GAlCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACR9b,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAElD,OACE,kBAACkC,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,iBAGjBmZ,EAAK/W,KAAI,SAACgX,GACT,OACE,kBAACzZ,EAAA,EAAD,CACEP,MAAO,CACLuE,KAAM,EACNgB,OAAQ,GACR9E,gBAAiBuZ,EAAIC,SACdhc,EAAMyC,UADI,KAEbzC,EAAMyC,UACVwZ,iBAAkB,EAClBC,iBAAkB,QAClBtX,WAAY,SACZjC,eAAgB,UAElBd,QAASka,EAAIla,SAEb,kBAAC,GAAD,KAAIka,EAAIna,a,kbCjBdua,G,qLACJ/Z,MAAQ,CACN9D,SAAU,M,EAGZ8d,QAAU,SAAOA,GAAP,iBAAA5d,EAAAC,OAAA,uDACA4D,EAAW,EAAKwD,MAAMgB,YAAtBxE,OADA,WAAA7D,EAAA,MAGeM,EAAK,OAAQ,CAClC0I,MAAOnF,EAAOoF,WACd4U,OAAQ,EAAKja,MAAMia,OACnBD,aANM,OAGF9d,EAHE,OASR,EAAKqJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAV/B,6D,gDAaD9K,EAAKoH,EAAOlC,GACnB,OACE,kBAACK,EAAA,QAAD,CAAMH,MAAOsY,GAAOiC,KAClB,kBAAC,GAAD,CAAGnQ,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAAOhI,GAC3D,kBAAC2F,EAAA,EAAD,CACER,UAAWD,EACXsK,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjD9C,QAASA,GAET,kBAAC,GAAD,KAAIkC,O,+BAMF,IAAD,SAOHgC,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAT7B,EAWgClB,KAAK3D,MAAlB9D,GAXnB,EAWCsZ,GAXD,EAWKyE,OAXL,EAWa5b,KAXb,EAWmBnC,UAE1B,OACE,kBAACyb,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAI3F,KAAM,IAC9BhI,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KACHyH,KAAKwW,SAAS1Y,EAAQ,QAAS1G,EAAY,MAAC2J,OAAD,EAACA,EAAIwE,OAAO,kBACtD,EAAK3D,SAAS,CAAE0U,OAAQnd,OAAO4H,EAAGwE,WAEnCvF,KAAKwW,SAAS1Y,EAAQ,QAAS1G,EAAY,MAAC2J,OAAD,EAACA,EAAIyE,OAAO,kBACtD,EAAK5D,SAAS,CAAE0U,OAAQnd,OAAO4H,EAAGyE,WAEnCxF,KAAKwW,SAAS1Y,EAAQ,QAASA,EAAQ,eACxC,kBAAC3B,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAOA,GAAM/B,GAAO4Q,UACpBpH,YAAa3F,EAAQ,UACrBE,MAAOgC,KAAK3D,MAAMia,OAClB5S,aAAc,SAAC4S,GAAD,OAAY,EAAK1U,SAAS,CAAE0U,cAG5C,kBAACna,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC,GAAD,CACEjJ,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAKua,SAAQ,IAC5Bra,MAAO,CAAEP,MAAO,MAElB,kBAAC,GAAD,CACEI,MAAOiC,EAAQ,OACfhC,QAAS,kBAAM,EAAKua,SAAQ,IAC5Bra,MAAO,CAAEP,MAAO,c,GArFbgF,aA+Fb6T,GAAS3J,KAAWC,OAAO,CAC/B2L,IAAK,CACH/Z,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAGDuX,M,kbC7GTK,G,qLACJpa,MAAQ,CACN9D,SAAU,M,EAUZid,aAAe,WAAO,IAAD,EACI,EAAK1V,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GADG,EAEU,EAAK1E,MAA1BwV,EAFW,EAEXA,GAAIyE,EAFO,EAEPA,OAAQ5b,EAFD,EAECA,KAEdoD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC,GAAD,CACEjH,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,UACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsJ,WAAYpF,EAAOoF,WACnBmQ,KACAnX,OACA4b,aAGDhe,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,U,EAO1B6c,gBAAkB,WAAO,IACf1U,EAAO,EAAKjB,MAAMgB,YAAlBC,GACFjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAG9B/C,EAAU,CACdL,EAAQ,aACRA,EAAQ,WACRA,EAAQ,QACRA,EAAQ,WACRA,EAAQ,eACRA,EAAQ,eAEJ4Y,EAAO,CAAC,OAAQ,UAAW,OAAQ,UAAW,SAAU,cAC9D,EAAK5W,MAAM6V,2BACT,CACExX,YAIF,SAACyX,GACC,EAAKhU,SAAS,CAAElH,KAAMgc,EAAKd,S,2DAlEZ,IAAD,EACZ/D,EAAE,SAAG7R,KAAKF,MAAMmB,WAAW5E,MAAMyX,aAA/B,EAAG,EAAoCjC,GAC3CA,GACF7R,KAAK4B,SAAS,CAAEiQ,S,mCAoEN,IAAD,SAGP7R,KAAKF,MADPgB,YAAexE,EAFN,EAEMA,OAAQyE,EAFd,EAEcA,GAEnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9ByV,EAAQ,CACZlR,QAAS3H,EAAQ,WACjB0H,KAAM1H,EAAQ,aACd8Y,KAAM9Y,EAAQ,QACd+Y,QAAS/Y,EAAQ,WACjBgZ,OAAQhZ,EAAQ,eAChB4H,WAAY5H,EAAQ,eAEtB,OACE,kBAAC3B,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO4Q,UAC3B0B,qBAAsBjQ,EAAOrC,MAAMuS,kBACnC/I,YAAa3F,EAAQ,MACrBE,MAAOgC,KAAK3D,MAAMwV,GAClBnO,aAAc,SAACmO,GAAD,OAAQ,EAAKjQ,SAAS,CAAEiQ,UAExC,kBAACrO,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO4Q,UAC3B0B,qBAAsBjQ,EAAOrC,MAAMuS,kBACnC/I,YAAa3F,EAAQ,UACrBE,MAAOgC,KAAK3D,MAAMia,OAClB5S,aAAc,SAAC4S,GAAD,OAAY,EAAK1U,SAAS,CAAE0U,cAE5C,kBAAC,GAAD,CACErc,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAEsO,eAAgB,IACzBzO,MACEmE,KAAK3D,MAAM3B,KACPic,EAAM3W,KAAK3D,MAAM3B,MACjBoD,EAAQ,uBAEdhC,QAASkE,KAAKyV,kBAEfzV,KAAKwV,kB,+BAIF,IAAD,EAIHxV,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAmBxE,GAHd,EAGUyE,GAHV,EAGczE,QAEb/D,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAACyb,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAIzK,MAAO,MAC/BlD,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC5B,EAASA,UAEV,KAEHyH,KAAK0U,mB,GAxIKjU,aA+INoV,gCAAmBY,ICxGnBM,GAzCC,SAAC,GAMV,IALLjW,EAKI,EALJA,YACAkW,EAII,EAJJA,gBACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,OACAC,EACI,EADJA,eAEMC,EACJthB,EAAUC,YAAV,uBACuBmhB,EADvB,eAC4CpW,EAAYxE,OAAOoF,WAEjE,OACEZ,EAAYC,GAAGsW,aACb,kBAAClb,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,SAChBiC,WAAY,WAGd,kBAACwC,EAAA,EAAD,CACEC,OAAQ,CAAE8V,OACVpb,MAAO,CAAEgO,WAAY,GAAIvO,MAAO,IAAK8F,OAAQ,MAE/C,kBAACiC,GAAA,EAAD,CACExH,MAAO,CAACA,GAAM8E,EAAYxE,OAAOrC,OAAO4Q,UAAW,CAAEpP,MAAO,MAC5DuC,MAAOiZ,EACPvT,aAAc,SAACrM,GAAD,OAAO2f,EAAgB3f,MAEvC,kBAACkF,EAAA,EAAD,CAAkBT,QAAS,kBAAMqb,EAAezd,KAAKwd,YACnD,kBAACI,GAAA,EAAD,CACEva,KAAK,SACLG,KAAM,GACNF,MAAO8D,EAAYxE,OAAOrC,MAAME,iB,kbC/BtCod,G,qLACJlb,MAAQ,CACN9D,SAAU,KACV0e,QAAS,GACTC,OAAQxd,KAAKwd,U,EAWf1B,aAAe,WAAO,IAAD,EACI,EAAK1V,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GADG,EAEU,EAAK1E,MAE5ByB,GAJa,EAEX+T,GAFW,EAEPyE,OAFO,EAEC5b,KAEJ/D,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAa,EAAKhB,MAAMgB,YACxBmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,UACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACduV,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU0e,QAAS,GAAIC,OAAQxd,KAAKwd,WACpD,EAAKpX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,W,gDAhDnBhC,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CAAMH,MAAOsY,GAAOiC,KAClB,kBAAC,GAAD,KAAI3f,GACJ,kBAAC,GAAD,KAAIoH,M,mCA0DI,IAAD,EAIPgC,KAAKF,MADQiB,GAHN,EAETE,WAFS,EAGTH,YAAeC,IAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BsW,EAAWzW,EAAGyW,SAAWzW,EAAGyW,SAAW,EACvCC,EAAO/d,KAAKC,OAAOyH,KAAKzG,MAAQ6c,GAAY,MAC5CE,EAAQD,EAAO,GAAK,GAAKA,EACzBnB,EAAS5c,KAAKC,MACmB,IAApCoH,EAAG8V,QAAU9V,EAAG+V,OAAS/V,EAAG6V,MAAald,KAAKie,KAAKD,IAGtD,OACE,kBAACvb,EAAA,QAAD,KACG6D,KAAKwW,SAAS1Y,EAAQ,QAAtB,MAA+BiD,OAA/B,EAA+BA,EAAI6V,MACnC5W,KAAKwW,SAAS1Y,EAAQ,WAAtB,MAAkCiD,OAAlC,EAAkCA,EAAI8V,SACtC7W,KAAKwW,SAAS1Y,EAAQ,eAAtB,MAAsCiD,OAAtC,EAAsCA,EAAI+V,QAE1C9W,KAAKwW,SAAS1Y,EAAQ,SAAUA,EAAQ,SAAU4Z,IAClD1X,KAAKwW,SAAS1Y,EAAQ,eAAmBwY,EAAzC,MACAtW,KAAKwV,kB,+BAIF,IAAD,EAIHxV,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAmBxE,GAHd,EAGUyE,GAHV,EAGczE,QAEb/D,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAAC4D,EAAA,QAAD,CAAMH,MAAOA,GAAMM,EAAOrC,OAAO6Q,WAC/B,kBAAC3O,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAIzK,MAAO,MAC/BlD,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC5B,EAASA,UAGZyH,KAAK0U,mB,GA9GIjU,aAsHf6T,GAAS3J,KAAWC,OAAO,CAC/B2L,IAAK,CACH/Z,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAGD0Y,M,qkBCxHf,IAqPMjD,GAAS3J,KAAWC,OAAO,CAC/B2L,IAAK,CACH/Z,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAGD+Y,GA7PG,SAAC,GAUZ,IATL3W,EASI,EATJA,WASI,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACA8W,EAKE,EALFA,OACA7W,EAIE,EAJFA,SACA8W,EAGE,EAHFA,aACU7d,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,KAGa0S,EAHb,OAIkDxN,mBAAS,MAJ3D,WAIGsa,EAJH,KAIwBC,EAJxB,OAKwBva,mBAAS,IALjC,WAKG6Y,EALH,KAKW2B,EALX,OAMoBxa,mBAAS,QAN7B,WAMG/C,EANH,KAMSwd,EANT,KAOJ1gB,EAAOsgB,GAEP,IAAMK,EAAc,SAAOpW,GAAP,iBAAAtJ,EAAAC,OAAA,kEAAAD,EAAA,MACSM,EAAK,cAAe,CAC7CgJ,OACArH,KAAM,OACN+G,MAAOnF,EAAOoF,cAJE,gBACVnJ,EADU,EACVA,SAKRuf,IACA9W,EAAS1E,EAAOoF,YAChBsW,EAAuBzf,GARL,6DAWd8d,EAAU,SAAOA,GAAP,iBAAA5d,EAAAC,OAAA,kEAAAD,EAAA,MACaM,EAAK,YAAa,CAC3C0I,MAAOnF,EAAOoF,WACd4U,SACAD,UACA3b,UALY,gBACNnC,EADM,EACNA,SAOR0S,EAAY1S,GACZyI,EAAS1E,EAAOoF,YATF,6DAYV8U,EAAW,SAAC5f,EAAKoH,EAAOlC,GAC5B,OACE,kBAACK,EAAA,QAAD,CAAMH,MAAOsY,GAAOiC,KAClB,kBAAC,GAAD,CAAGnQ,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAAOhI,GAC3D,kBAAC2F,EAAA,EAAD,CACER,UAAWD,EACXsK,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjD9C,QAASA,GAET,kBAAC,GAAD,KAAIkC,MAKN+D,EAAI,MAAG8V,OAAH,EAAGA,EAAQO,MAAK,SAAC/gB,GAAD,OAAOA,EAAE0K,QAAF,MAAWhB,OAAX,EAAWA,EAAIgB,SAEhD,OACE,kBAACiS,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAACR,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG2F,OAAQ,KAC9B,kBAAC/J,EAAA,QAAD,KACG5D,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAC/Bie,EAAS1Y,EAAQ,QAAS1G,EAAY,MAAC2J,OAAD,EAACA,EAAIyE,OAAO,kBACjDyS,EAAU9e,OAAO4H,EAAGyE,UAErBgR,EAAS1Y,EAAQ,aAAc1G,EAAY,MAAC2J,OAAD,EAACA,EAAIsX,YAAY,kBAC3DJ,EAAU9e,OAAO4H,EAAGsX,eAGrB7B,EAAS1Y,EAAQ,SAAUA,EAAQ,kBAEnC0Y,EAAS1Y,EAAQ,WAAY1G,EAAY,MAAC2J,OAAD,EAACA,EAAI0E,UAAU,kBACvDwS,EAAU9e,OAAO4H,EAAG0E,aAErB+Q,EACC1Y,EAAQ,mBACR1G,EAAY,MAAC2J,OAAD,EAACA,EAAIuX,eACjB,kBAAML,EAAU9e,OAAO4H,EAAGuX,kBAG3B9B,EAAS1Y,EAAQ,SAAUA,EAAQ,wBAEpC,kBAAC3B,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO4Q,WAApB,IAA+BtK,KAAM,IAC1CkD,YAAa3F,EAAQ,UACrByO,qBAAsBtS,EAAMuS,kBAC5BxO,MAAOsY,EACP5S,aAAc,SAAC4S,GAAD,OAAY2B,EAAU3B,MAGtC,kBAAC/Z,EAAA,EAAD,CACEP,MAAO,CACLS,gBAAiBxC,EAAMyC,UACvBC,QAAS,GACTmC,aAAc,EACdkL,WAAY,IAEdlO,QAAS,kBAAMoc,EAAiB,SAATxd,EAAkB,UAAY,UAErD,kBAAC,GAAD,KACqBoD,EAAT,SAATpD,EAA0B,YAAuB,cAKxD,kBAACyB,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC,GAAD,CACE7K,MAAOA,EACP4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAMua,GAAQ,IACvBra,MAAO,CAAEP,MAAO,MAElB,kBAAC,GAAD,CACExB,MAAOA,EACP4B,MAAOiC,EAAQ,OACfhC,QAAS,kBAAMua,GAAQ,IACvBra,MAAO,CAAEP,MAAO,WAOzB,MAACsG,OAAD,EAACA,EAAMwW,WAaN,oCACE,kBAAC,UAAD,CAAMvc,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,kBAAmB,IAC5B,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,SAA3B,MAAsCgC,OAAtC,EAAsCA,EAAIgB,MAAa,IACtDjE,EAAQ,MAAO,IAChB,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,UACpB,MAAJgD,OAAA,EAAAA,EAAMwW,YAAaza,EAAQ,WALhC,KAOKA,EAAQ,iBAAD,MAAmBiE,OAAnB,EAAmBA,EAAMyW,aAGpCjgB,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,YAAamQ,eAAgB,KACtD/R,IAzBP,kBAAC4D,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,qBAEVia,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACE9d,MAAOA,EACP4B,MAAOiC,EAAQ,eACfhC,QAAS,kBAAMqc,EAAW,MAACpX,OAAD,EAACA,EAAIgB,UAuBrC,kBAAC5F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEvB,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBACnD,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aA5HjB,MAgIG+Z,OAhIH,EAgIGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKwW,UACJ,kBAAC,GAAD,KAAIxW,EAAKwW,WAET,kBAAChc,EAAA,EAAD,CAAkBT,QAAS,kBAAMqc,EAAYpW,EAAKA,QAChD,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKwW,aAAL,MAAmBxX,OAAnB,EAAmBA,EAAIhE,MACtB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,OACNqH,KAAMA,EAAKA,SAIf,kBAACqK,GAAA,EAAD,CAAQrP,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,UAAD,CAAMlB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAKyW,iBAOhB,kBAACrc,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QC9MdqX,GAxCE,SAAC9Y,GAAW,IAAD,EACpBhC,EAAUnH,EAAe,SAACmJ,EAAMgB,YAAYC,SAAnB,EAAC,EAAsBG,QAD5B,EAGJzD,mBAAS,QAHL,WAGnBuY,EAHmB,KAGd6C,EAHc,KAK1B,OACE,kBAAC1c,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CACEwV,KAAM,CACJ,CACEla,MAAOiC,EAAQ,YACfmY,SAAkB,SAARD,EACVla,QAAS,kBAAM+c,EAAO,UAExB,CACEhd,MAAOiC,EAAQ,iBACfmY,SAAkB,cAARD,EACVla,QAAS,kBAAM+c,EAAO,eAGxB,CACEhd,MAAOiC,EAAQ,cACfmY,SAAkB,WAARD,EACVla,QAAS,kBAAM+c,EAAO,YAExB,CACEhd,MAAOiC,EAAQ,cACfmY,SAAkB,WAARD,EACVla,QAAS,kBAAM+c,EAAO,eAKnB,SAAR7C,GAAkB,kBAAC,GAASlW,GACpB,cAARkW,GAAuB,kBAAC,GAAclW,GAC9B,WAARkW,GAAoB,kBAAC,GAAWlW,GACxB,WAARkW,GAAoB,kBAAC,GAAWlW,K,8aCrCrBtE,IAAW1C,IAAI,UAAzB2C,M,IA4DOqd,G,uLAxDbzc,MAAQ,CACN0c,SAAQ,SAAE,EAAKjZ,MAAMgB,YAAYC,SAAzB,EAAE,EAA2BgY,U,gDAE7B,IAAD,SAC0B/Y,KAAKF,MAAMgB,YAApCxE,EADD,EACCA,OAAQyE,EADT,EACSA,GAAIC,EADb,EACaA,SAEdlD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,SAAUjC,eAAgB,WAC5D,kBAAC,GAAD,KAAIkB,EAAQ,eAA+B,KAAb,MAAFiD,OAAA,EAAAA,EAAIgY,YAE/B,CAAC,EAAG,GAAK,IAAM,GAAK,GAAG/Z,KAAI,SAACga,GAC3B,OACE,kBAACzc,EAAA,EAAD,CAAkBT,QAAS,kBAAM,EAAK8F,SAAS,CAAEmX,SAAUC,MACzD,kBAAC7c,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTF,gBACE,EAAKJ,MAAM0c,WAAaC,EAAK,YAAS3gB,IAG1C,kBAAC,GAAD,KAAIyF,EAAQ,gBAAsB,IAALkb,SAKrC,kBAAC,GAAD,CACEnd,MAAOiC,EAAQ,QACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnB2gB,SAAU,EAAK1c,MAAM0c,SACrBrX,WAAYpF,EAAOoF,eAGpBpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLyI,EAAS1E,EAAOoF,eAEjB/I,OAAM,SAACC,GACNC,QAAQuF,IAAI,eAAgBxF,GAC5BgF,MAAME,EAAQ,kC,GAhDNT,IAAMoD,WCmKfwY,GApKF,SAAC,GAWR,EAVJhY,WAUK,IATLH,EASI,EATJA,YASI,IARJA,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACA8W,EAKE,EALFA,OACA7W,EAIE,EAJFA,SACA8W,EAGE,EAHFA,aACU7d,EAER,EAFFqC,OAAUrC,MAGJ0b,EAA+BuD,2BAA/BvD,2BAEF7X,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAHhC,EAK4BzD,mBAAS,MALrC,WAKGlF,EALH,KAKa0S,EALb,OAMkDxN,mBAAS,MAN3D,wBAOsBA,mBAAS,OAP/B,WAOG0b,EAPH,KAOUC,EAPV,OAQ0B3b,mBAAS,IARnC,WAQGwZ,EARH,KAQYoC,EARZ,OASoB5b,mBAAS,IAT7B,WASG/C,EATH,KASSwd,EATT,OAUwBza,mBAAS/D,KAAKwd,UAVtC,WAUGA,EAVH,KAUWoC,EAVX,KAYJ9hB,EAAOsgB,GAEP,IAAMyB,EAAc,CAClBC,cAAe1b,EAAQ,iBACvB2b,OAAQ3b,EAAQ,UAChB4b,SAAU5b,EAAQ,YAClB+Y,QAAS/Y,EAAQ,iBACjB6b,WAAY7b,EAAQ,cACpB8b,IAAK9b,EAAQ,OACb+b,QAAS/b,EAAQ,WACjBgc,YAAahc,EAAQ,eACrB0H,KAAM1H,EAAQ,cACd6L,KAAM7L,EAAQ,QACdic,OAAQjc,EAAQ,WAGZiE,EAAI,MAAG8V,OAAH,EAAGA,EAAQO,MAAK,SAAC/gB,GAAD,OAAOA,EAAE0K,QAAF,MAAWhB,OAAX,EAAWA,EAAIgB,SAwDhD,OACE,kBAACiS,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAEnC,oCACE,kBAAC0E,EAAA,EAAD,CAAOC,OAAQvK,EAAQ,OACvB,kBAAC,UAAD,CAAMiF,MAAO,CAAEgB,MAAO/C,EAAME,cACR,KAAf,MAAF4G,OAAA,EAAAA,EAAIiZ,UACDlc,EAAQ,kBACRA,EACE,mBAjDE,CAChB,GACA,SACA,QACA,YACA,SACA,UACA,WACA,SA0CuB,MAACiD,OAAD,EAACA,EAAIiZ,UACC,GAAb,MAAFjZ,OAAA,EAAAA,EAAIiZ,YAIXzhB,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,YAAamQ,eAAgB,KACtD/R,GAIL,kBAAC,GAAD,CAAGyD,MAAO,CAAE8I,UAAW,KAAOhH,EAAQ,UACtC,kBAAC0F,GAAA,EAAD,CACEC,YAAY,IACZ8I,qBAAsBtS,EAAMuS,kBAC5BxO,MAAOmb,EACPzV,aAAc,SAACrM,GAAD,OAAO+hB,EAAS/hB,IAC9B2E,MAAOA,GAAM/B,GAAO4Q,YAGtB,kBAAC,GAAD,CAAG7O,MAAO,CAAEsO,eAAgB,KAAOxM,EAAQ,aAC3C,kBAAC,GAAD,CACEhC,QA7DS,WAGjB,IAAMqC,EAAU8b,OAAOvD,KAAK6C,GAAava,KACvC,SAACtE,GAAD,OACK6e,EAAY7e,GADjB,KAC2BqH,EAAQrH,EAAJ,UAD/B,KACqDoD,EACjD,UAFJ,WAGS1G,EAAa2K,EAAQrH,EAAJ,WAH1B,IAGgDoD,EAAQ,UAHxD,OAMFK,EAAQ+b,KAAKpc,EAAQ,WACrB,IACMqc,EAAoBhc,EAAQ/E,OAAS,EAE3Cuc,EACE,CACExX,UACAgc,oBACAC,4BAP2B/hB,IAS7B,SAACud,GACKA,IAAgBzX,EAAQ/E,OAAS,GACnC8e,EAAQ+B,OAAOvD,KAAK6C,GAAa3D,QAwC/B/Z,MAAOnB,EAAO6e,EAAY7e,GAAQoD,EAAQ,mBAG3CpD,EACC,kBAAC,GAAD,KACGoD,EACC,WACAyb,EAAY7e,GACZqH,EAAQrH,EAAJ,UACJtD,EAAa2K,EAAQrH,EAAJ,WACjBqH,EAAQrH,EAAJ,UAAJ,cAGF,KAEJ,kBAAC,GAAD,CACEoG,YAAaA,EACbmW,QAASA,EACTD,gBAAiB,SAAC3f,GAAD,OAAOgiB,EAAWhiB,IACnC6f,OAAQA,EACRC,eAAgB,SAAC9f,GAAD,OAAOiiB,EAAUjiB,MAGnC,kBAAC,GAAD,CACE2E,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,cACfhC,QAjHK,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcM,EAAK,OAAQ,CACtC2I,WAAYpF,EAAOoF,WACnByX,QACAze,OACAuc,aALW,gBACL1e,EADK,EACLA,SAMRyI,EAAS1E,EAAOoF,YAChBuJ,EAAY1S,GACZuf,IACAuB,EAAW,IACXC,EAAU5f,KAAKwd,UAXF,gEAsHX,kBAAC/a,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QC6Fd8Y,GAvPO,SAAC,GAWhB,IAVLpZ,EAUI,EAVJA,WACAH,EASI,EATJA,YASI,IARJA,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACA8W,EAKE,EALFA,OACA7W,EAIE,EAJFA,SACA8W,EAGE,EAHFA,aACU7d,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,KAGa0S,EAHb,OAIkDxN,mBAAS,MAJ3D,WAIGsa,EAJH,KAIwBC,EAJxB,OAK0Bva,mBAAS,MALnC,WAKGgI,EALH,KAKY6U,EALZ,OAM0B7c,mBAAS,IANnC,WAMGwZ,EANH,KAMYoC,EANZ,OAOwB5b,mBAAS/D,KAAKwd,UAPtC,WAOGA,EAPH,KAOWoC,EAPX,KASJ9hB,EAAOsgB,GAEP,IAAMK,EAAc,SAAOpW,GAAP,iBAAAtJ,EAAAC,OAAA,kEAAAD,EAAA,MACSM,EAAK,cAAe,CAC7CgJ,OACArH,KAAM,gBACN+G,MAAOnF,EAAOoF,cAJE,gBACVnJ,EADU,EACVA,SAKRuf,IACA9W,EAAS1E,EAAOoF,YAChBsW,EAAuBzf,GARL,6DAWdwJ,EAAI,MAAG8V,OAAH,EAAGA,EAAQO,MAAK,SAAC/gB,GAAD,OAAOA,EAAE0K,QAAF,MAAWhB,OAAX,EAAWA,EAAIgB,SAehD,OACE,kBAACiS,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,MACpC,MAACoF,OAAD,EAACA,EAAMwY,oBAYN,oCACE,kBAAC,UAAD,CAAMve,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,sBAAuB,IAChC,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,SAA3B,MAAsCgC,OAAtC,EAAsCA,EAAIgB,MAAa,IACtDjE,EAAQ,MAAO,IAChB,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,UACpB,MAAJgD,OAAA,EAAAA,EAAMwY,qBAAsBzc,EAAQ,WALzC,IAOI,IACDA,EACC,qBADM,MAENiE,OAFM,EAENA,EAAMyY,mBAFA,MAGNzY,OAHM,EAGNA,EAAM0Y,sBAIV,kBAAC,UAAD,CAAMze,MAAO,CAAEgB,MAAO/C,EAAME,YAAa2K,UAAW,KACjDhH,EAAQ,sBAAuB,IAChC,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,SAA3B,MAAsCgD,OAAtC,EAAsCA,EAAM0D,SAAgB,IAC3D3H,EAAQ,uBAGVvF,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,YAAamQ,eAAgB,KACtD/R,GAIL,kBAACiL,GAAA,EAAD,CACEC,YAAY,IACZ8I,qBAAsBtS,EAAMuS,kBAC5BxO,MAAOyH,EACP/B,aAAc,SAACrM,GAAD,OAAOijB,EAAWjjB,IAChC2E,MAAOA,GAAM/B,GAAO4Q,YAGtB,kBAAC,GAAD,CACE/J,YAAaA,EACbmW,QAASA,EACTD,gBAAiB,SAAC3f,GAAD,OAAOgiB,EAAWhiB,IACnC6f,OAAQA,EACRC,eAAgB,SAAC9f,GAAD,OAAOiiB,EAAUjiB,MAGnC,kBAAC,GAAD,CAAQwE,MAAOiC,EAAQ,OAAQhC,QAvExB,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcM,EAAK,aAAc,CAC5C2I,WAAYpF,EAAOoF,WACnB4U,OAAQ7Q,EACRwR,aAJW,gBACL1e,EADK,EACLA,SAKRyI,EAAS1E,EAAOoF,YAChBuJ,EAAY1S,GACZuf,IACAuB,EAAW,IACXC,EAAU5f,KAAKwd,UAVF,gEAgBT,kBAAC/a,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,yBAEVia,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACElc,MAAOiC,EAAQ,eACfhC,QAAS,kBAAMqc,EAAW,MAACpX,OAAD,EAACA,EAAIgB,UAoDrC,kBAAC5F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEvB,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBACnD,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,cAhFjB,MAoFG+Z,OApFH,EAoFGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB4H,EAAKA,OAEnD,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKwY,mBACJ,kBAAC,UAAD,CAAMve,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAKwY,oBAGR,kBAAChe,EAAA,EAAD,CAAkBT,QAAS,kBAAMqc,EAAYpW,EAAKA,QAChD,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKwY,sBAAL,MAA4BxZ,OAA5B,EAA4BA,EAAIhE,MAC/B,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,gBACNqH,KAAMA,EAAKA,SAIf,kBAACqK,GAAA,EAAD,CAAQrP,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,UAAD,CAAMlB,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB4H,EAAK0D,cAMzD,kBAACtJ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBACnD,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,WAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,qBA1JjB,MA8JG+Z,OA9JH,EA8JGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB4H,EAAKA,OAEnD,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,KAAIuF,EAAK2Y,oBAAT,MAGF,kBAAC,UAAD,CAAM1e,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,SACI4H,EAAKyY,yBAOjB,kBAACre,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,kbCzHdoZ,G,qLA/Hbte,MAAQ,CACNwE,SAAU,KACVtI,SAAU,KACV0e,QAAS,GACTC,OAAQxd,KAAKwd,U,EAEftN,WAAa,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MAGN8C,EAEV,EAAK6F,MAHPgB,YACExE,OAAUrC,MAIRwC,EACJ,EAAKJ,MAAMwE,WAAa7G,EAAKqS,GAAK,eAAYhU,EAChD,OACE,kBAACkE,EAAA,EAAD,CACET,QAAS,WACP,EAAK8F,SAAS,CAAEf,SAAU7G,EAAKqS,OAGjC,kBAAClQ,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdnC,QAAS,GACTC,eAAgB,gBAChBH,oBAGF,kBAAC,UAAD,CAAMT,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK2H,QACjD,kBAAC,UAAD,CAAM3F,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,SAAkDH,EAAK4gB,U,EAM/DpF,aAAe,WAAO,IAAD,EACI,EAAK1V,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GACVjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,oCACE,kBAAC,GAAD,CACEJ,YAAa,EAAKhB,MAAMgB,YACxBmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE2E,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,aACfhC,QAAS,0BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACgBM,EAAK,SAAU,CACpC0I,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,SACnBoW,QAAS,EAAK5a,MAAM4a,WAJf,OACD1e,EADC,OAMP,EAAKqJ,SAAS,CAAErJ,WAAU0e,QAAS,GAAIC,OAAQxd,KAAKwd,WACpD,EAAKpX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPhC,iE,gDAaP,IAAD,SAOH1B,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAGR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAR7B,EAUwBlB,KAAK3D,MAA5B9D,EAVD,EAUCA,SAAUsI,EAVX,EAUWA,SAEZ1C,EAAU,CACd,CACEkO,GAAI,EACJ1K,OAAQ7D,EAAQ,mBAChB8c,MAAO,SAET,CACEvO,GAAI,EACJ1K,OAAQ7D,EAAQ,qBAChB8c,MAAO,UAGT,CACEvO,GAAI,EACJ1K,OAAQ7D,EAAQ,mBAChB8c,MAAO,YAIX,OACE,kBAACze,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAGsa,UAAW,MACjC,kBAAC,UAAD,CAAM7e,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACEsD,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7C,kBAACgS,GAAA,EAAD,CACEuQ,aAAc,SAAC9gB,EAAM7C,GAAP,aAAwBA,GACtCqT,KAAMrM,EACN4c,UAAWla,EACX4J,oBAAqB,kBAAM,kBAAC,GAAD,KAAI3M,EAAQ,gBACvC8L,WAAY5J,KAAK4J,WACjBoR,oBAAqBhb,KAAKwV,oB,GAxHjB/U,aCqJNwa,GAtJA,SAAC,GAUT,IATLha,EASI,EATJA,WASI,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACA8W,EAKE,EALFA,OACAC,EAIE,EAJFA,aACA9W,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,aAIkDkF,mBAAS,OAJ3D,WAIGsa,EAJH,KAIwBC,EAJxB,KAMJxgB,EAAOsgB,GAEP,IAAMK,EAAc,SAAOpW,GAAP,iBAAAtJ,EAAAC,OAAA,kEAAAD,EAAA,MACSM,EAAK,cAAe,CAC7CgJ,OACArH,KAAM,SACN+G,MAAOnF,EAAOoF,cAJE,gBACVnJ,EADU,EACVA,SAKRuf,IACA9W,EAAS1E,EAAOoF,YAChBsW,EAAuBzf,GARL,6DAWdwJ,EAAI,MAAG8V,OAAH,EAAGA,EAAQO,MAAK,SAAC/gB,GAAD,OAAOA,EAAE0K,QAAF,MAAWhB,OAAX,EAAWA,EAAIgB,SAEhD,OACE,kBAACiS,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,MACpC,MAACoF,OAAD,EAACA,EAAMmZ,aAYN,oCACE,kBAAC,UAAD,CAAMlf,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,eAAgB,IACzB,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,SAA3B,MAAsCgC,OAAtC,EAAsCA,EAAIgB,MAAa,IACtDjE,EAAQ,MAAO,IAChB,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,UACpB,MAAJgD,OAAA,EAAAA,EAAMmZ,cAAepd,EAAQ,WALlC,KAOKA,EAAQ,cAAD,MAAgBiE,OAAhB,EAAgBA,EAAMoZ,eAGlC,kBAAC,GAAD,CACErf,QAAS,kBAAMmF,EAAWgC,SAAS,UACnCpH,MAAOiC,EAAQ,WAGhBvF,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,YAAamQ,eAAgB,KACtD/R,IA7BP,kBAAC4D,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,kBAEVia,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACElc,MAAOiC,EAAQ,eACfhC,QAAS,kBAAMqc,EAAW,MAACpX,OAAD,EAACA,EAAIgB,UA4BrC,kBAAC5F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEvB,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBACnD,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAxDjB,MA4DG+Z,OA5DH,EA4DGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKmZ,YACJ,kBAAC,GAAD,KAAInZ,EAAKmZ,aAET,kBAAC3e,EAAA,EAAD,CAAkBT,QAAS,kBAAMqc,EAAYpW,EAAKA,QAChD,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKmZ,eAAL,MAAqBna,OAArB,EAAqBA,EAAIhE,MACxB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,SACNqH,KAAMA,EAAKA,SAIf,kBAACqK,GAAA,EAAD,CAAQrP,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,UAAD,CAAMlB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAKoZ,mBAOhB,kBAAChf,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,qkBChJ7B,IAiDe6Z,GAjDI,SAAC,GAQd,EAPJna,WAOK,IAAD,IANJH,YACExE,EAKE,EALFA,OACA0E,EAIE,EAJFA,SACAD,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAGoBzD,mBAAQ,MAACsD,OAAD,EAACA,EAAIhE,MAHjC,WAGGA,EAHH,KAGSiO,EAHT,OAI4BvN,mBAAS,MAJrC,WAIGlF,EAJH,KAIa0S,EAJb,KAeJ,OACE,kBAAC+I,EAAA,EAAD,KACE,kBAAC7X,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAEhC,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLsO,eAAgB,GAChB9N,cAAe,MACfqC,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO4Q,WAApB,IAA+BtK,KAAM,IAC1CgM,qBAAsBtS,EAAMuS,kBAC5B/I,YAAa3F,EAAQ,QACrBE,MAAOjB,EACP2G,aAAc,SAACrM,GAAD,OAAO2T,EAAQ3T,MAE/B,kBAAC,GAAD,CAAQyE,QA5BG,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACUM,EAAK,aAAc,CAC5C2I,WAAYpF,EAAOoF,WACnB3E,UAHe,gBACTxE,EADS,EACTA,SAIRyI,EAAS1E,EAAOoF,YAChBuJ,EAAY1S,GANK,6DA4BkBsD,MAAOiC,EAAQ,gB,kbCqFvCud,G,qLA7Hbhf,MAAQ,CACNif,UAAW,GACXC,UAAW,GACX3iB,MAAO,KACP2S,QAAS,M,+CAGF,IAAD,SACAzN,EAAUnH,EAAe,SAACqJ,KAAKF,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAErDO,EAAQzB,KAAKF,MAAMgB,YAAYxE,OAAOoF,WAHtC,EAK2B1B,KAAK3D,MAA9Bif,EALF,EAKEA,UAEJA,IAPE,EAKaC,UAOnBvjB,MAASlC,EAAUC,YAAd,kBAA4C,CAC/C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEgT,SAAUsB,KAAIC,QAAQ2O,GAAY7Z,YAExDnJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GAYL,OAXA/T,QAAQuF,IAAI,eAAgBwO,GAExBA,EAAahU,MACf,EAAKgJ,SAAS,CAAE2J,QAAS,KAAM3S,MAAOgU,EAAahU,QAEnD,EAAKgJ,SACH,CAAEhJ,MAAO,KAAM2S,QAASqB,EAAarB,UACrC,eAIGqB,KAERjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,MA5BhBoH,KAAK4B,SAAS,CAAEhJ,MAAOkF,EAAQ,0B,+BAgCzB,IAAD,WAMHkC,KAAKF,MAFK7F,GAJP,EAELgH,WAFK,EAGLH,YACExE,OAAUrC,OAGR6D,EAAUnH,EAAe,SAACqJ,KAAKF,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAE3D,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACT6e,SAAU,IACV1c,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzCoH,KAAK3D,MAAMkP,QACb,kBAAC,UAAD,CAAMvP,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMkP,SAC3C,KAEJ,kBAACpP,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAEkH,SAAU,GAAIlG,MAAO/C,EAAME,cACvC2D,EAAQ,gBAGX,kBAAC0F,GAAA,EAAD,CACEiJ,iBAAe,EACf/I,aAAc,SAAC4X,GAAD,OAAe,EAAK1Z,SAAS,CAAE0Z,eAC7Ctd,MAAOgC,KAAK3D,MAAMif,UAClBtf,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAEkH,SAAU,GAAIlG,MAAO/C,EAAME,cACvC2D,EAAQ,WAGX,kBAAC0F,GAAA,EAAD,CACEiJ,iBAAe,EACf/I,aAAc,SAAC6X,GAAD,OAAe,EAAK3Z,SAAS,CAAE2Z,eAC7Cvd,MAAOgC,KAAK3D,MAAMkf,UAClBvf,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACEN,MAAOiC,EAAQ,kBACfhC,QAAS,kBAAM,EAAKkQ,kB,GArHL3O,IAAMoD,W,mfCOnC,IAAM3C,GAAUnH,IAwGD8kB,G,qLArGbpf,MAAQ,CAAEqf,WAAW,G,EACrBC,mBAAqB,4BAAAljB,EAAAC,OAAA,mDACC,QAAhB2F,UAASC,IAAgC,YAAhBD,UAASC,GADnB,mCAAA7F,EAAA,MAEQmjB,IAAqBA,MAF7B,mBAETC,EAFS,EAETA,OAERhjB,QAAQuF,IAAI,UAAWyd,GAER,YAAXA,EANa,uBAOfje,MAAME,GAAQ,2BAPC,mBAQR,GARQ,yCAYZ,GAZY,8D,EAerBge,WAAa,gCAAArjB,EAAAC,OAAA,kEAAAD,EAAA,MACiB,EAAKkjB,sBADtB,mDAIP,EAAK/Z,SAAS,CAAEma,SAAS,IAJlB,WAAAtjB,EAAA,MAMYujB,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAQ,KAVH,WAMHC,EANG,QAaKC,UAbL,wBAcCF,EACY,QAAhBhe,UAASC,GACLge,EAAOlF,IACP,yBAA2BkF,EAAOD,OAjBnC,YAAA5jB,EAAA,MAmBqB+jB,KACR,QAAhBne,UAASC,GAAe+d,EAASC,EAAOlF,IACxC,CAAC,CAAEqF,OAAQ,CAAEhhB,MAAO,IAAK8F,OAAQ,OACjC,CACEmb,OAAQF,KAA4BG,IACpCN,QAAQ,IAEV1jB,OAAM,SAACoP,GAAD,OAAOlP,QAAQuF,IAAI,IAAK2J,OA1B3B,QAmBC6U,EAnBD,OA4BCC,EACY,QAAhBxe,UAASC,GACLse,EAAYP,OACZ,yBAA2BO,EAAYP,OAE7C,EAAKza,SAAS,CAAEma,SAAS,EAAOL,WAAW,IAAQ,WACjD,EAAK5b,MAAMgd,SAASD,MAlCjB,wBAqCL,EAAKjb,SAAS,CAAEma,SAAS,IArCpB,0DAwCPljB,QAAQuF,IAAR,MAxCO,kE,gDA6CH,IAAD,EACwB4B,KAAK3D,MAA5Bqf,EADD,EACCA,UAAWK,EADZ,EACYA,QADZ,EAEkB/b,KAAKF,MAAtB9B,EAFD,EAECA,MAEF+e,EAJC,EAEQC,MAEM,GAAK,IAC1B,OACE,gBAAC7gB,EAAA,QAAD,CAAMH,MAAO,CAAE6C,WAAY,SAAUjC,eAAgB,WACnD,gBAACL,EAAA,EAAD,CAAkBT,QAASkE,KAAK8b,YAC7B9d,EACC,gBAACqD,EAAA,EAAD,CACEC,OAAQ,CACN8V,IAAKsE,EAAY1d,EAAQlI,EAAUC,YAAciI,GAEnDhC,MAAO,CAAEP,MAAOshB,EAAMxb,OAAQwb,EAAMje,aAAcie,EAAO,KAG3D,gBAAC5gB,EAAA,QAAD,CACEH,MAAO,CACL8C,aAAcie,EAAO,EACrBja,YAAa,EACbC,YAAa,OACbtH,MAAOshB,EACPxb,OAAQwb,EACRngB,eAAgB,SAChBiC,WAAY,WAGbkd,EACC,gBAACzP,GAAA,EAAD,MAEA,gBAAC2Q,GAAA,EAAD,CAAUlgB,KAAK,YAAYC,MAAM,OAAOE,KAAM6f,EAAO,W,GA5F5C1f,a,GCIC7B,IAAW1C,IAAI,UAAjC2C,G,GAAAA,MAAO8F,G,GAAAA,OACT2b,GAAczhB,GAAQ,IAItB0hB,GAAS,SAAC,GAAuC,IAArCpc,EAAoC,EAApCA,GAAIzE,EAAgC,EAAhCA,OAAQwX,EAAwB,EAAxBA,OAAQsJ,EAAgB,EAAhBA,UAC5B1b,EAAsBpF,EAAtBoF,WAAYzH,EAAUqC,EAAVrC,MADgC,EAE1BwD,mBAAS,MAFiB,WAE7CoV,EAF6C,KAEtCwK,EAFsC,OAGtB5f,mBAAS,IAHa,WAG7CQ,EAH6C,KAGpCqf,EAHoC,OAIlB7f,oBAAS,GAJS,WAI7Cie,EAJ6C,KAIlC6B,EAJkC,KAK9Czf,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9Bsc,EAAO,WACXH,EAAS,MACTC,EAAW,IACX,IAAMvJ,EAASje,EAAUC,YAAhB,kBACTiC,MAAM+b,EAAK,CACTjc,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsJ,WAAYA,EACZmR,MAAO6I,EAAY7I,OAAQxa,EAC3B4F,UACAwf,IAAG,MAAE3J,OAAF,EAAEA,EAAQzH,OAGd/T,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAiB,EAAdiT,SAEL6R,OAGHzkB,OAAM,SAACC,GACNC,QAAQuF,IAAIxF,EAAOmb,OAuCzB,OAjCI,kBAAC5X,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZ6e,iBAAkB,KAGpB,kBAAC,GAAD,CACEV,OAAK,EACLhf,MAAO6U,EACPiK,SAAU,SAACT,GACTgB,EAAShB,GACTkB,GAAa,MAIjB,kBAAC/Z,GAAA,EAAD,CACEma,WAAS,EACT3hB,MAAO,CAAC4hB,GAAM3jB,GAAO4Q,UAAW,CAAEtK,KAAM,IACxCvC,MAAOC,EACPwF,YAAa3F,EAAQ,WACrB4F,aAAc4Z,IAGhB,kBAAC/gB,EAAA,EAAD,CAAkBT,QAAS0hB,GACzB,kBAACP,GAAA,EAAD,CAAUlgB,KAAK,WAAWG,KAAM,SA0J7B2gB,GAhJI,SAAC,GAUb,IARM/J,EAQP,EATJ7S,WACE5E,MAASyX,OAQP,IANJhT,YACYY,EAKR,EALFpF,OAAUoF,WACVpF,EAIE,EAJFA,OACAyE,EAGE,EAHFA,GACAC,EAEE,EAFFA,SAEE,EACgCvD,oBAAS,GADzC,WACGqgB,EADH,KACeC,EADf,OAEoBtgB,mBAAS,IAF7B,WAEG8E,EAFH,KAESyb,EAFT,OAG4BvgB,mBAAS,MAHrC,WAGGlF,EAHH,KAGa0S,EAHb,KAKJzT,GAAO,WACL4lB,IAEA,IAAM/c,EAAWC,aAAY,WAC3B8c,IACArkB,EAAK,UAAW,CAAE2I,aAAY2K,GAAE,MAAEyH,OAAF,EAAEA,EAAQmK,QAC1Cjd,EAASU,KACR,KAEH,OAAO,kBAAMsH,cAAc3I,OAG7B,IAAM+c,EAAY,4BAAA3kB,EAAAC,OAAA,uDACVqb,EADU,6BACyBzX,EAAOoF,WADhC,OACiDoS,EAAOzH,GADxD,WAAA5T,EAAA,MAEOK,EAAIib,IAFX,QAEVxb,EAFU,UAKdylB,EAAQzlB,EAASgK,MACjB0I,EAAY1S,EAASA,UACrBwlB,GAAc,IAPA,6DA2FlB,OACE,kBAACvd,EAAA,EAAD,CAAcxE,MAAO,CAAEuE,KAAM,IAC1B2d,MAAMC,QAAQ5b,GACb,kBAACgI,GAAA,EAAD,CACE6T,mBAAoC,QAAhB/f,UAASC,GAAeiE,EAAKnJ,YAASf,EAC1DgmB,sBAAuB,CACrB9c,OAAwB,QAAhBlD,UAASC,GAAeiD,GAAS,SAAMlJ,GAEjDmS,KAAMjI,EACNqH,WApFW,SAAC,GAAqB,IAAD,MAAlB5P,EAAkB,EAAlBA,KACdskB,GADgC,EAAZnnB,OACb,SAAA6C,EAAK+a,WAAL,IAAW1I,OAAX,MAAkBtL,OAAlB,EAAkBA,EAAIsL,KAC7BkS,EACJ,kBAAChiB,EAAA,EAAD,CACET,QAAS,WAAO,IAAD,EACbmF,WAAWgC,SAAS,UAAW,CAAElG,KAAI,SAAE/C,EAAK+a,WAAP,EAAE,EAAWhY,SAGpD,kBAACsE,EAAA,EAAD,CACEC,OAAQ,CAAE8V,IAAKthB,EAAUC,aAAV,SAAwBiE,EAAK+a,WAA7B,EAAwB,EAAWjC,YAClD9W,MAAO,CACLP,MAjIO,GAkIP8F,OAlIO,GAmIPzC,aAAc0f,OAKtB,OACE,kBAACriB,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZ6e,iBAAkB,EAClB9gB,eAAgB0hB,EAAO,WAAa,eAGpCA,EAAgB,KAATC,EACT,kBAACpiB,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN+J,eAAgB,GAChBoT,iBAAkB,GAClBjhB,gBAAiBzC,EAAKykB,SAClB,OACAH,EACA,UACA,QACJ3hB,QAAS,GACTsX,SAAUja,EAAKykB,cAAWpmB,EAAY6kB,GAAc,IAAM,IAC1Dpe,aAAc,GACdgE,YAAa,GACbC,YAAa,OACbkC,YAAa,OACbC,aAAc,CACZzJ,MAAO,EACP8F,OAAQ,GAEV4D,cAAe,IACfC,aAAc,KACdC,UAAW,IAGb,kBAAClJ,EAAA,QAAD,CACEH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBAE/C,kBAAC,UAAD,CAAMZ,MAAO,CAAE+C,WAAY,SAA3B,SAAsC/E,EAAK+a,WAA3C,EAAsC,EAAWhY,OAElD/C,EAAK6Y,MACJ,kBAACxR,EAAA,EAAD,CACEC,OAAQ,CACN8V,IAAKthB,EAAUC,YAAciE,EAAK6Y,OAEpC7W,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7Bmd,WAAW,UAEX,KAEJ,kBAAC,KAAD,CAAc1iB,MAAO,IAAKhC,EAAKiE,UAEhCqgB,EAAOC,EAAS,OAefzD,aAAc,SAAC9gB,EAAM7C,GAAP,cAAyBA,GACvCwnB,eACE,kBAAC,KAAD,CAAgBC,WAAYd,EAAYe,UA5FhC,WAChBd,GAAc,GACdX,OA4FM0B,UAAQ,IAGV,kBAAC3iB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIhI,IAGR,kBAAC,GAAD,CAAQwI,GAAIA,EAAIzE,OAAQA,EAAQwX,OAAQA,EAAQsJ,UAAWA,MCrOlD2B,GANG,WAChB,OACE,kBAAC5iB,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,OAAQ8F,OAAQ,GAAK9E,gBAAiB,W,kbCc1DohB,G,kCACJ,WAAY/d,GAAQ,IAAD,uBACjB,cAAMA,IAkBRkf,iBAAmB,WAAO,IAEP1iB,EACb,EAAKwD,MADPgB,YAAexE,OAEjBtE,MACKlC,EAAUC,YADV,2BACgDuG,EAAOoF,WAC1D,CACE5J,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC2mB,GACDA,EAAY1mB,SACd,EAAKqJ,SAAS,CAAErJ,SAAU0mB,EAAY1mB,WAEtC,EAAKqJ,SAAS,CAAEqd,gBAElB,EAAKrd,SAAS,CAAEkc,YAAY,OAE7BnlB,OAAM,SAACC,GACNC,QAAQD,MAAMA,OA3CD,EA+CnBimB,UAAY,WACV,EAAKjd,SAAS,CAAEkc,YAAY,IAAQ,WAClC9d,KAAKgf,uBAjDU,EAqDnBE,SAAW,SAAC7S,GAAQ,IAAD,EACT/P,EAAW,EAAKwD,MAAMgB,YAAtBxE,OACFwB,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAGrD/C,EAAU,CAACL,EAAQ,WAEzBK,EAAQ+b,KAAKpc,EAAQ,WAErB,EAAKgC,MAAM6V,2BACT,CACExX,UACAgc,kBAAmBhc,EAAQ/E,OAAS,EACpCghB,uBAAwB,OAE1B,SAAOxE,GAAP,SAAAnd,EAAAC,OAAA,mDACsB,IAAhBkd,EADN,uBAEI/c,QAAQuF,IAAI,SAAUiO,GAF1B,WAAA5T,EAAA,MAGUM,EAAK,aAAc,CAAE2I,WAAYpF,EAAOoF,WAAY2K,GAAIA,KAHlE,OAII,EAAK2S,mBAJT,gEApEe,EA+EnBG,gBAAkB,WAAO,IAAD,EACd7iB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OACFwB,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAGrD/C,EAAU,CAACL,EAAQ,mBAEzBK,EAAQ+b,KAAKpc,EAAQ,WAErB,EAAKgC,MAAM6V,2BACT,CACExX,UACAgc,kBAAmBhc,EAAQ/E,OAAS,EACpCghB,uBAAwB,OAE1B,SAAOxE,GAAP,SAAAnd,EAAAC,OAAA,mDACsB,IAAhBkd,EADN,uBAEI/c,QAAQuF,IAAI,aAFhB,WAAA3F,EAAA,MAGUM,EAAK,YAAa,CAAE2I,WAAYpF,EAAOoF,cAHjD,OAII,EAAKsd,mBAJT,gEA9Fe,EAwGnBpV,WAAa,YAAsB,IAAD,wBAAlB5P,EAAkB,EAAlBA,KAAkB,KAAZ7C,MAOhB,EAAK2I,OALPmB,EAF8B,EAE9BA,WAF8B,IAG9BH,YACEC,EAJ4B,EAI5BA,GAJ4B,IAK5BzE,OAAUrC,EALkB,EAKlBA,MAAOyH,EALW,EAKXA,WAKf0d,GAAe,SAAAplB,EAAKqlB,cAAL,IAActiB,MAAd,SACjB/C,EAAKqlB,cADY,EACjB,EAActiB,KACuB,KAArC,SAAA/C,EAAKqlB,cAAL,IAAcJ,YAAY7lB,QAA1B,SACAY,EAAKqlB,UADL,SACA,EAAcJ,YAAY7G,MAAK,SAAC/gB,GAAD,OAAOA,EAAEioB,UAAF,MAAave,OAAb,EAAaA,EAAIsL,SADvD,SACA,EAA4D0I,WAD5D,EACA,EAAkEhY,KAClE,WAEEwiB,GAAmB,SAAAvlB,EAAKqlB,cAAL,IAAcxM,OAAd,SACrB7Y,EAAKqlB,cADgB,EACrB,EAAcxM,MACuB,KAArC,SAAA7Y,EAAKqlB,cAAL,IAAcJ,YAAY7lB,QAA1B,SACAY,EAAKqlB,UADL,SACA,EAAcJ,YAAY7G,MAAK,SAAC/gB,GAAD,OAAOA,EAAEioB,UAAF,MAAave,OAAb,EAAaA,EAAIsL,SADvD,SACA,EAA4D0I,WAD5D,EACA,EACIjC,UACJ,KAEJ,OACE,gBAACvW,EAAA,EAAD,CACET,QAAS,WAAO,IAAD,EACb/C,EAAK,UAAW,CAAE2I,aAAY2K,GAAIrS,EAAKqS,KACvCpL,EAAWgC,SAAS,UAAW,CAC7BoJ,GAAE,SAAErS,EAAKqlB,cAAP,EAAE,EAAchT,GAClB4R,MAAOjkB,EAAKqS,OAIhB,gBAAClQ,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZyL,eAAgB,GAChBoT,iBAAkB,KAGnB6B,EACC,gBAACle,EAAA,EAAD,CACEC,OAAQ,CAAE8V,IAAKthB,EAAUC,YAAcwpB,GACvCvjB,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,GAAIzC,aAAc,MAGhD,gBAAC3C,EAAA,QAAD,CACEH,MAAO,CACLP,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdrC,gBAAiB,OACjBG,eAAgB,SAChBiC,WAAY,WAGd,gBAACoe,GAAA,EAAD,CAAUlgB,KAAK,aAAaC,MAAM,QAAQE,KAAM,MAGnDlD,EAAKwlB,OAAS,EACb,gBAACrjB,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACVC,IAAK,EACLE,KAAM,GACNlD,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdrC,gBAAiB,MACjBG,eAAgB,SAChBiC,WAAY,WAGd,gBAAC,UAAD,CAAM7C,MAAO,CAAEgB,MAAO,UAAYhD,EAAKwlB,SAEvC,KAEJ,gBAACrjB,EAAA,QAAD,CAAMH,MAAO,CAAEgO,WAAY,GAAIzJ,KAAM,IACnC,gBAAC,GAAD,CAAGkJ,MAAI,GAEJ2V,GAEFplB,EAAKylB,YACJ,gBAAC,GAAD,CAAGzc,cAAe,GAAIhJ,EAAKylB,aACzB,MAGN,gBAACtjB,EAAA,QAAD,KACE,gBAACI,EAAA,EAAD,CACEP,MAAO,CAAEmQ,UAAW,YACpBrQ,QAAS,kBAAM,EAAKojB,SAASllB,EAAKqS,KAClCjG,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAEjD,gBAACwN,GAAA,EAAD,CACEpQ,MAAO,CAAEgO,WAAY,IACrBjN,KAAK,wBACLG,KAAM,GACNF,MAAO/C,EAAME,eAGjB,gBAAC,GAAD,KACG0V,KAAO7V,EAAK0lB,iBAAiBhD,OAC5B7M,KAAO7V,EAAK0lB,iBAAiB9M,QAAQ/C,OAAS8P,QAAQ,QAClD,QACA,mBA9MhB,EAAKtjB,MAAQ,CACX4iB,YAAa,GACbnB,YAAY,GALG,E,yDASE,IAAD,OAClB9d,KAAKgf,mBAELhf,KAAKK,SAAWC,aAAY,kBAAM,EAAK0e,qBAAoB,O,6CAI3DhW,cAAchJ,KAAKK,Y,+BA0MX,IAAD,SAMHL,KAAKF,MAFK7F,GAJP,EAELgH,WAFK,EAGLH,YACExE,OAAUrC,OAGNglB,EAAgBjf,KAAK3D,MAArB4iB,YACR,OACE,gBAACze,EAAA,EAAD,CAAcxE,MAAOsY,GAAOxJ,WAC1B,gBAACP,GAAA,EAAD,CACEE,oBAAqB,WACnB,OACE,gBAACtO,EAAA,QAAD,CACEH,MAAO,CACLY,eAAgB,WAChBE,YAAa,GACbgI,UAAW,KAGb,gBAACvI,EAAA,EAAD,CACEP,MAAO,CAAEmQ,UAAW,YACpBrQ,QAAS,kBAAM,EAAKqjB,mBACpB/Y,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAEjD,gBAACwN,GAAA,EAAD,CACEpQ,MAAO,CAAEgO,WAAY,IACrBjN,KAAK,wBACLG,KAAM,GACNF,MAAO/C,EAAME,iBAMvBqQ,KAAMyU,EACNrV,WAAY5J,KAAK4J,WACjBgW,uBAAwB,kBAAM,gBAAC,GAAD,OAC9B9E,aAAc,SAAC9gB,EAAM7C,GAAP,OAAiBA,EAAMG,YACrCqnB,eACE,gBAAC,KAAD,CACEC,WAAY5e,KAAK3D,MAAMyhB,WACvBe,UAAW7e,KAAK6e,mB,GArQLxhB,aA8QnBiX,GAAS3J,KAAWC,OAAO,CAC/BE,UAAW,CACTvK,KAAM,EACN5D,QAAS,MAIEkZ,gCAAmBgI,I,kbCxMnBvb,G,qLA3FbjG,MAAQ,CACNkG,KAAM,GACNC,MAAO,I,2DAGY,IAAD,OAClBxC,KAAKyC,UACLzC,KAAKK,SAAWC,aAAY,kBAAM,EAAKmC,YAAW,O,6CAIlDuG,cAAchJ,KAAKK,Y,gCAGV,IAAD,OACRrI,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiK,GACL,EAAKX,SAAS,CAAEW,YAEjB5J,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAIHoH,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAexE,EAHV,EAGUA,OAAQyE,EAHlB,EAGkBA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAN7B,EAQiBlB,KAAK3D,MAArBkG,EARD,EAQCA,KAAMC,EARP,EAQOA,MAEd,OACE,kBAACrG,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAC9B4F,EAAKvD,KAAI,SAAChF,EAAM7C,GAAP,OACR,kBAAC,UAAD,CACEP,IAAG,IAAMO,EACT6E,MAAO,CAAEgB,MAAO,EAAK8C,MAAMgB,YAAYxE,OAAOrC,MAAME,cAEnDH,EAAK+C,KAJR,KAIgB/C,EAAKiE,QAAS,SAIlC,kBAACuF,GAAA,EAAD,CACExF,MAAOwE,EACPxG,MAAO,CACLS,gBAAiB,OACjByG,SAAU,GACVgD,OAAQ,GACRvJ,QAAS,EACTmC,aAAc,GAEhB2E,YAAa3F,EAAQ,eACrB4F,aAAc,SAAClB,GAAD,OAAW,EAAKZ,SAAS,CAAEY,WACzCmB,gBAAiB,YAAgC,IAAdzE,EAAa,EAA5B0E,YAAe1E,KACjClH,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdzD,QAASiB,MAGV5G,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiK,GACL,EAAKE,UACL,EAAKb,SAAS,CAAEY,MAAO,QAExB7J,OAAM,SAACC,GACNC,QAAQD,MAAMA,c,GAnFX6H,aCwCJof,GAvCF,SAAC,GAKP,IAHM/L,EAGP,EAJJ7S,WACE5E,MAASyX,OAGP,IADJhT,YAAeC,EACX,EADWA,GAAIzE,EACf,EADeA,OAAQqE,EACvB,EADuBA,SACvB,EAC4BlD,mBAAS,MADrC,WACGlF,EADH,KACa0S,EADb,KAGEY,EAAI,MAAGiI,OAAH,EAAGA,EAAQjI,KAGrBrU,GAAO,YACD,MAACuJ,OAAD,EAACA,EAAI6D,gBACPjE,EAAS,CAAEjG,KAAM,aAAcsD,OAAO,OAI1C,IAAMF,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACG5D,EACC,kBAAC,GAAD,KAAIA,GAEJ,kBAAC,GAAD,CACEsD,MAAOiC,EAAQ,sBACfhC,QAAS,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACoBM,EAAK,YAAa,CAC3C2I,WAAYpF,EAAOoF,WACnBmK,UAHK,gBACCtT,EADD,EACCA,SAIR0S,EAAY1S,GALL,iE,kbCGJgc,G,yIA3BH,IAAD,EAIHvU,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAeC,EAHV,EAGUA,GAAIzE,EAHd,EAGcA,OAGfwB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAOA,GAAMM,EAAOrC,OAAO6Q,WAC/B,kBAAC,UAAD,CAAM9O,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC2D,EAAQ,mBAGX,kBAAC,GAAD,CACEjC,MAAOiC,EAAQ,qBACfhC,QAAS,WACPgkB,UAAQC,QACN,iE,GAnBOtf,aCiCNqV,GAlCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACR9b,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAElD,OACE,kBAACkC,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,iBAGjBmZ,EAAK/W,KAAI,SAACgX,GACT,OACE,kBAACzZ,EAAA,EAAD,CACEP,MAAO,CACLuE,KAAM,EACNgB,OAAQ,GACR9E,gBAAiBuZ,EAAIC,SACdhc,EAAMyC,UADI,KAEbzC,EAAMyC,UACVwZ,iBAAkB,EAClBC,iBAAkB,QAClBtX,WAAY,SACZjC,eAAgB,UAElBd,QAASka,EAAIla,SAEb,kBAAC,GAAD,KAAIka,EAAIna,aCmGLmkB,GAzHU,SAAC,GASnB,IARL/e,EAQI,EARJA,WAQI,KAPJH,YAOI,EANJA,aACEC,EAKE,EALFA,GACAC,EAIE,EAJFA,SACAif,EAGE,EAHFA,kBAGE,IAFF3jB,OAAUrC,EAER,EAFQA,MAAOyH,EAEf,EAFeA,WAGb5D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG0BzD,oBAAS,GAHnC,WAGYyiB,GAHZ,aAI4BziB,mBAAS,MAJrC,WAIG0iB,EAJH,KAIaC,EAJb,OAK4B3iB,mBAAS,MALrC,WAKGlF,EALH,KAKa0S,EALb,OAM0CxN,mBAAS,KANnD,WAMG4iB,EANH,KAMoBC,EANpB,OAOoB7iB,mBAAS,WAP7B,WAOG/C,EAPH,KAOSwd,EAPT,OAQsBza,mBAAS,IAR/B,WAQGmd,EARH,KAQU2F,EARV,OASkB9iB,qBATlB,WASG+iB,EATH,KASQC,EATR,KAoCJjpB,GAzBsB,0BAAAiB,EAAAC,OAAA,uDACpBwnB,GAAW,GADS,WAAAznB,EAAA,MAEDK,EAAI,kBAAkB4I,IAFrB,OAEdgf,EAFc,OAGpBN,EAAYM,GAEZR,GAAW,GALS,+DAXlB,IAqCIvK,EAA+BuD,2BAA/BvD,2BAER,OACE,kBAACxZ,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,kBACtC,kBAACT,EAAA,QAAD,KACG5D,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,KAAIuF,EAAQ,uBACZ,kBAAC0F,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO4Q,UACpB7M,MAAOqiB,EACP3c,aAAc,SAACrM,GAAD,OAAOipB,EAAmBjpB,MAG1C,kBAAC,GAAD,CAAG2E,MAAO,CAAE0I,aAAc,KAA1B,QACA,kBAACic,GAAD,CACE5K,KAAM,CACJ,CACEla,MAAOiC,EAAQ,WACfhC,QAAS,kBAAMoc,EAAQ,YACvBjC,SAAmB,YAATvb,GAEZ,CACEmB,MAAOiC,EAAQ,QACfhC,QAAS,kBAAMoc,EAAQ,SACvBjC,SAAmB,SAATvb,GAEZ,CACEmB,MAAOiC,EAAQ,UACfhC,QAAS,kBAAMoc,EAAQ,WACvBjC,SAAmB,WAATvb,MAKhB,kBAAC,GAAD,CAAGsB,MAAO,CAAE8I,UAAW,KAAOhH,EAAQ,yBACtC,kBAAC0F,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO4Q,UACpB7M,MAAO4c,EACPlX,aAAc,SAACrM,GAAD,OAAOkpB,EAASlpB,MAGhC,kBAAC,GAAD,CAAG2E,MAAO,CAAE8I,UAAW,GAAIJ,aAAc,KACtC5G,EAAQ,iBADX,KAGA,kBAAC,GAAD,CACEjC,MAAO2kB,EAAMA,EAAII,KAAO9iB,EAAQ,cAChChC,QAAS,WAEP,IAAMqC,EAAUgiB,EAASnhB,KAAI,SAAC6hB,GAAD,OAC3B/iB,EAAQ,yBAA0B+iB,EAAQD,KAAMC,EAAQC,UAE1D3iB,EAAQ+b,KAAKpc,EAAQ,WACrB,IACMqc,EAAoBhc,EAAQ/E,OAAS,EAE3Cuc,EACE,CACExX,UACAgc,oBACAC,4BAP2B/hB,IAS7B,SAACud,GACC6K,EAAON,EAASvK,WAQ1B,kBAAC,GAAD,CAAQ9Z,QAxFG,8BAAArD,EAAAC,OAAA,uDACbwnB,GAAW,GADE,WAAAznB,EAAA,MAEuBM,EAAK,mBAAoB,CAC3D2I,aACA2e,kBACA3lB,OACAkgB,QACAmG,MAAK,MAAEP,OAAF,EAAEA,EAAKnU,MAPD,gBAELd,EAFK,EAELA,QAAShT,EAFJ,EAEIA,SAOjByI,EAASU,GACTuJ,EAAY1S,GACZ0nB,IACAC,GAAW,GACP3U,GACFtK,EAAWoF,OAAO,GAdP,8DAwFcxK,MAAOiC,EAAQ,c,UC7G5BtC,IAAW1C,IAAI,UAAzB2C,MAmJO0hB,OAjJf,YAAqD,EAAnClc,WAAoC,IAATF,EAAQ,EAAvBD,YAAeC,GACrCjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BjH,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAHC,EAI3BwD,mBAAS,IAJkB,WAItCujB,GAJsC,WAK7CjN,EAAG,2DAAuDhT,OAAvD,EAAuDA,EAAIhE,MAC9DkkB,EAAgB,qHAAiHlgB,OAAjH,EAAiHA,EAAIhE,MAErImkB,EAAO,WACX/M,KAAUC,UAAUL,GACpBiN,EAAQ,gCAEV,OACE,kBAAC7kB,EAAA,QAAD,CAAMH,MAAO,CAAE6C,WAAY,WACzB,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,GAAD,CAAGuD,MAAI,GAAE3L,EAAQ,wBACjB,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAE0I,aAAc,KAC3B,kBAAC,GAAD,KAAI5G,EAAQ,qBACZ,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAACgH,GAAA,EAAD,CACExF,MAAO+V,EACP/X,MAAO,CACLgB,MAAO/C,EAAMgD,cACbR,gBAAiBxC,EAAMyC,UACvB6E,OAAQ,GACRzC,aAAc,GACdjC,kBAAmB,GACnBpB,MAAO,KAETyY,QAASgN,IAEX,kBAAC,GAAD,CAAQrlB,MAAOiC,EAAQ,cAAehC,QAASolB,KAEjD,kBAAC/kB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,KAAIf,EAAQ,gBAEZ,kBAACvB,EAAA,EAAD,CACET,QAAS,WACPgkB,UAAQC,QAAQkB,KAGlB,kBAAC9kB,EAAA,QAAD,CACEH,MAAO,CACLgO,WAAY,GACZvN,gBAAiB,UACjBhB,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdlC,eAAgB,SAChBiC,WAAY,WAGd,kBAAC,KAAD,CAAkB9B,KAAK,WAAWC,MAAM,QAAQE,KAAM,OAI1D,kBAACX,EAAA,EAAD,CACET,QAAS,WACPgkB,UAAQC,QAAR,wBAC0BjiB,EAAQ,qBAAsBiW,MAI1D,kBAAC1S,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,UAOtC,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,KAAIf,EAAQ,mBACZ,kBAACvB,EAAA,EAAD,CACET,QAAS,WACPgkB,UAAQC,QACN,2DAIJ,kBAAC5jB,EAAA,QAAD,CACEH,MAAO,CACLgO,WAAY,GACZvN,gBAAiB,UACjBhB,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdlC,eAAgB,SAChBiC,WAAY,WAGd,kBAAC,KAAD,CAAkB9B,KAAK,WAAWC,MAAM,QAAQE,KAAM,OAI1D,kBAACX,EAAA,EAAD,CACEP,MAAO,CAAEgO,WAAY,IACrBlO,QAAS,WACPgkB,UAAQC,QAAQ,gDAGlB,kBAAC1e,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,OAIhC,kBAAChF,EAAA,EAAD,CACEP,MAAO,CAAEgO,WAAY,IACrBlO,QAAS,WACPgkB,UAAQC,QACN,wFAIJ,kBAAC1e,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,OAIhC,kBAAChF,EAAA,EAAD,CACEP,MAAO,CAAEgO,WAAY,IACrBlO,QAAS,WACPgkB,UAAQC,QACN,8DAIJ,kBAAC1e,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,QAIlC,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEvB,kBAAC,UAAD,CAAMvF,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,2BAC4B,IAAIiH,MAAO+f,iBC3G9BC,GA5CM,SAAC,GAAuB,IAArBrgB,EAAoB,EAApBA,GAAIgT,EAAgB,EAAhBA,IAAK7U,EAAW,EAAXA,KACzBpB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BmgB,EAAO,8BAAiCtN,EACxCkN,EAAgB,gDAAmDI,EAEzE,OACE,kBAACllB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,KAAIf,EAAQ,gBAEZ,kBAACvB,EAAA,EAAD,CACET,QAAS,WACPgkB,UAAQC,QAAQkB,KAGlB,kBAAC9kB,EAAA,QAAD,CACEH,MAAO,CACLgO,WAAY,GACZvN,gBAAiB,UACjBhB,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdlC,eAAgB,SAChBiC,WAAY,WAGd,kBAAC,KAAD,CAAkB9B,KAAK,WAAWC,MAAM,QAAQE,KAAM,OAI1D,kBAACX,EAAA,EAAD,CACET,QAAS,WACPgkB,UAAQC,QAAR,wBAAwC7gB,EAAxC,IAAgDmiB,KAGlD,kBAAChgB,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,S,kbC4IvB+f,G,kCA7Kb,WAAYxhB,GAAQ,IAAD,uBACjB,cAAMA,IAUR8J,WAAa,SAAC5P,EAAM7C,GAAW,IAAD,EAIxB,EAAK2I,MAAMgB,YAFbC,EAF0B,EAE1BA,GACU9G,EAHgB,EAG1BqC,OAAUrC,MAGNsnB,EAAO7nB,KAAKC,QAAS,MAAFoH,OAAA,EAAAA,EAAI1G,MAAO,KAAOL,EAAKqS,GAAKrS,EAAKqS,KACpDmV,EAAQD,EAAO,GAAK,GAAKA,EAEzB9kB,EACJ,EAAKJ,MAAMwE,WAAa7G,EAAKqS,GAAK,eAAYhU,EAChD,OACE,kBAACkE,EAAA,EAAD,CACET,QAAS,WACP,EAAK8F,SAAS,CAAEf,SAAU7G,EAAKqS,OAGjC,kBAAClQ,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdnC,QAAS,GACTC,eAAgB,gBAChBH,oBAGF,kBAAC,UAAD,CAAMT,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK2H,QACjD,kBAAC,UAAD,CAAM3F,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBqnB,EAA5C,QAvCW,EA6CnB5N,OAAS,WAAO,IACNtX,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAEma,SAAS,IACzB/jB,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,SACnBoW,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAwjB,SAAS,EACT7E,OAAQxd,KAAKwd,SACbD,QAAS,KAEX,EAAKnX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAxED,EA4EnB4c,aAAe,WAAO,IAAD,EACb1X,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAE3D,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAa,EAAKhB,MAAMgB,YACxBmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,SACfhC,QAAS,EAAK8X,SAGhB,kBAAC,GAAD,CAAQ9S,YAAa,EAAKhB,MAAMgB,gBA9FpC,EAAKzE,MAAQ,CACXwE,SAAU,KACVtI,SAAU,KACV0e,QAAS,GACTC,OAAQxd,KAAKwd,UAPE,E,8CAqGT,IAAD,SAOHlX,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MALP,EAQwB+F,KAAK3D,MAA5B9D,EARD,EAQCA,SAEFuF,GAVC,EAQW+C,SAEFlK,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAE9B/C,EAAU,CACd,CACEkO,GAAI,EACJ1K,OAAQ7D,EAAQ,iBAElB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,iBAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,iBAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,iBAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,kBAIpB,OACE,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAGsa,UAAW,MACjC,kBAAC,UAAD,CAAM7e,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGXA,EAASsT,MACR,kBAAC,GAAD,CACE9K,GAAIA,EACJ7B,KAAMpB,EAAQ,iBACdiW,IAAG,QAAUxb,EAASsT,OAI1B,kBAAC,GAAD,CACE5R,MAAOA,EACP4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7C,kBAACyb,EAAA,EAAD,KACG7V,EAAQa,IAAIgB,KAAK4J,YAEjB5J,KAAKwV,qB,GAtKG/U,a,8DCLrB,SAASghB,KACP,IAAIC,EAAYC,UAAUD,WAAaC,UAAUC,QAAUtb,OAAOub,MAGlE,MAAI,iBAAiBC,KAAKJ,GACjB,UAGL,WAAWI,KAAKJ,GACX,UAIL,mBAAmBI,KAAKJ,KAAepb,OAAOyb,SACzC,MAGF,UAGT,IAmBeC,GAnBK,WAalB,MAZmC,YAA/BP,OACF5oB,QAAQuF,IAAI,cACZkI,OAAOzC,SAAStM,QAAQzB,EAAUI,kBAGD,QAA/BurB,OACF5oB,QAAQuF,IAAI,UACZkI,OAAOzC,SAAStM,QAAQzB,EAAUG,cAGpC4C,QAAQuF,IAAIqjB,MAGV,kBAAC,GAAD,KACE,kBAAC,GAAD,4B,kbCmESQ,G,qLAnGb5lB,MAAQ,CACN6O,MAAO,GACPtS,MAAO,KACP2S,QAAS,M,+CAGF,IAAD,SACsBvL,KAAK3D,MAAzB6O,EADF,EACEA,MADF,EACSE,SACfpT,MAASlC,EAAUC,YAAd,kBAA4C,CAC/C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAE8S,YAEtB5S,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GAYL,OAXA/T,QAAQuF,IAAI,eAAgBwO,GAExBA,EAAahU,MACf,EAAKgJ,SAAS,CAAE2J,QAAS,KAAM3S,MAAOgU,EAAahU,QAEnD,EAAKgJ,SACH,CAAEhJ,MAAO,KAAM2S,QAASqB,EAAarB,UACrC,eAIGqB,KAERjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOHoH,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACY7G,EAJP,EAIHqC,OAAUrC,MACV8G,EALG,EAKHA,GAIEjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRsV,SAAU,IACV1c,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzCoH,KAAK3D,MAAMkP,QACb,kBAAC,UAAD,CAAMvP,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMkP,SAC3C,KAEJ,kBAACpP,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,UAExC,kBAAC0F,GAAA,EAAD,CACEC,YAAa3F,EAAQ,SACrByO,qBAAsBtS,EAAMuS,kBAC5B9I,aAAc,SAACwH,GAAD,OAAW,EAAKtJ,SAAS,CAAEsJ,WACzClN,MAAOgC,KAAK3D,MAAM6O,MAClBlP,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAOA,EACP6B,QAAS,kBAAM,EAAKkQ,SACpBnQ,MAAOiC,EAAQ,oB,GA3FTT,IAAMoD,W,u/BCiVXyhB,G,qLArUb7lB,MAAQ,CACN8lB,SAAU,KACVC,YAAY,G,EA8BdC,YAAc,WAAO,IACX/lB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OADU,EAES,EAAKD,MAAxBR,EAFU,EAEVA,MAAOoC,EAFG,EAEHA,QACfjG,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd7F,QACAoC,cAGD3F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,SAAUgT,EAAc,EAAdA,QACjB,EAAK3J,SAAS,CAAErJ,aACZgT,IACF,EAAK+W,YACL,EAAK1gB,SAAS,CAAE2gB,UAAU,EAAOC,WAAW,QAG/C7pB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB6pB,cAAgB,WAAO,IACbnmB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OACA2B,EAAY,EAAK5B,MAAjB4B,QACRpF,QAAQuF,IAAI,oBACZpG,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd2K,GAAI,EAAKhQ,MAAMmmB,UACfjqB,SAAU0F,MAGX3F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLM,QAAQuF,IAAI,WAAY7F,GACxB,EAAKqJ,SAAS,CAAE3D,QAAS,OACzB,EAAKykB,eAAe,EAAKrmB,MAAMmmB,cAEhC7pB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB8pB,eAAiB,SAACrW,GAAQ,IAChB/P,EAAW,EAAKwD,MAAMgB,YAAtBxE,OACRtE,MACKlC,EAAUC,YADV,gBACqCuG,EAAOoF,WAD5C,OAC6D2K,EAChE,CACEvU,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKqJ,SAAS,CAAE+gB,MAAOpqB,OAExBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,2DAnGC,IAAD,EAClBoH,KAAKsiB,YAEL,IAAMjmB,EAAK,SAAG2D,KAAKF,MAAMmB,WAAW5E,MAAMyX,aAA/B,EAAG,EAAoCzX,MAC9CA,GACF2D,KAAK4B,SAASvF,K,kCAIL,IAAD,OACFC,EAAW0D,KAAKF,MAAMgB,YAAtBxE,OACRtE,MAASlC,EAAUC,YAAd,iBAA0CuG,EAAOoF,WAAc,CAClE5J,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKqJ,SAAS,CAAEghB,OAAQrqB,OAEzBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,kCAgFP,IAAD,SAGNoH,KAAKF,MADPgB,YAAexE,EAFP,EAEOA,OAAQyE,EAFf,EAEeA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC8S,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACxBP,KAAK3D,MAAM9D,SAAW,kBAAC,GAAD,KAAIyH,KAAK3D,MAAM9D,SAASA,UAAgB,KAC/D,kBAACiL,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO4Q,UAC3BpH,YAAa3F,EAAQ,SACrByO,qBAAsBjQ,EAAOrC,MAAMuS,kBACnCxO,MAAOgC,KAAK3D,MAAMR,MAClB6H,aAAc,SAAC7H,GAAD,OAAW,EAAK+F,SAAS,CAAE/F,aAE3C,kBAAC2H,GAAA,EAAD,CACEma,WAAS,EACTpR,qBAAsBjQ,EAAOrC,MAAMuS,kBACnCxJ,cAAe,EACfhH,MAAK,SAAOA,GAAMM,EAAOrC,OAAO4Q,WAA3B,IAAsCtJ,OAAQ,MACnDkC,YAAa3F,EAAQ,WACrBE,MAAOgC,KAAK3D,MAAM4B,QAClByF,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAE7C,kBAAC,GAAD,CACEhE,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,QACfhC,QAASkE,KAAKqiB,iB,qCAMN,IAAD,SAEIthB,EACbf,KAAKF,MADPgB,YAAeC,GAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAACqJ,GAAA,EAAD,CACEC,KAAI,SAAExK,KAAK3D,MAAMumB,aAAb,EAAE,EAAmBA,OACzBhD,uBAAwB,kBACtB,kBAACzjB,EAAA,QAAD,CACEH,MAAO,CAAEuF,OAAQ,GAAK9E,gBAAiB,OAAQhB,MAAO,WAG1DmO,WAAY,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAAkB,EAAZ7C,MACnB,OACE,kBAACoF,EAAA,EAAD,CACET,QAAS,WACP,EAAK4mB,eAAe1oB,EAAKqS,IACzB,EAAKzK,SAAS,CAAE4gB,UAAWxoB,EAAKqS,OAGlC,kBAAClQ,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,GAAD,KACGmB,EAAQ,UADX,KACwB9D,EAAK+C,MAE7B,kBAAC,GAAD,KACGe,EAAQ,SADX,KACuB9D,EAAK6B,OAE5B,kBAAC,GAAD,KACGiC,EAAQ,gBADX,IAC6B,IAC1B+R,KAAO7V,EAAK6oB,WAAWnG,OAAO,gBAEjC,kBAAC,GAAD,KACG1iB,EAAK8oB,UADR,IACoBhlB,EAAQ,iBAMpCgd,aAAc,SAAC9gB,EAAM7C,GAAP,aAAwBA,O,kCAK/B,IAAD,SAGN6I,KAAKF,MADPgB,YAAexE,EAFP,EAEOA,OAAQyE,EAFf,EAEeA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BlH,EAAOgG,KAAK3D,MAAMsmB,MACxB,OAAO3oB,EACL,kBAACga,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN2F,OAAQ,GACRvJ,QAAS,GACTmG,YAAa,EACbC,YAAa,UAGf,kBAAC,GAAD,KACGjF,EAAQ,UADX,KACwB9D,EAAK2oB,MAAM5lB,MAEnC,kBAAC,GAAD,KACGe,EAAQ,SADX,KACuB9D,EAAK2oB,MAAM9mB,OAElC,kBAAC,GAAD,KAAI7B,EAAK2oB,MAAM1kB,SACf,kBAAC,GAAD,KACGjE,EAAK8oB,UAAU1pB,OADlB,IAC2B0E,EAAQ,eAIrC,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIzC,EAAQ,aAAZ,KACC9D,EAAK8oB,UAAU9jB,KAAI,SAACzG,GACnB,OACE,kBAAC4D,EAAA,QAAD,CACEvF,IAAG,OAAS2B,EAAS8T,GACrBrQ,MAAO,CACL8G,YAAa,EACbC,YAAa,QACbpG,QAAS,GACT2N,eAAgB,KAGlB,kBAACnO,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACV/B,gBAAiBH,EAAOrC,MAAMyC,UAC9B+B,KAAM,GACNK,aAAc,GACdjC,kBAAmB,GACnB4b,gBAAiB,IAGnB,kBAAC,GAAD,KACGlgB,EAASwE,KADZ,MACqB,IAClB8S,KAAOtX,EAASwqB,WAAWrG,OAAO,iBAIvC,kBAAC,KAAD,CACE1gB,MAAO,CAAEkD,KAAM,CAAElC,MAAOV,EAAOrC,MAAME,eAEpC5B,EAAS0F,cAOpB,kBAAC9B,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACEma,WAAS,EACT3a,cAAe,EACfhH,MAAOA,GAAMM,EAAOrC,OAAO4Q,UAC3B0B,qBAAsBjQ,EAAOrC,MAAMuS,kBACnC/I,YAAa3F,EAAQ,SACrBE,MAAOgC,KAAK3D,MAAM4B,QAClByF,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAE7C,kBAAC,GAAD,CACEhE,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,QACfhC,QAASkE,KAAKyiB,kBAKpB,kBAAC,GAAD,KAAI3kB,EAAQ,oB,+BAIN,IAAD,SAGHkC,KAAKF,MADPgB,YAAuBC,GAFlB,EAEUzE,OAFV,EAEkByE,IAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAL7B,EAOyBlB,KAAK3D,MAA7BkmB,EAPD,EAOCA,SAAUC,EAPX,EAOWA,UAClB,OACE,kBAACrmB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CACEwV,KAAM,CACJ,CACEla,MAAOiC,EAAQ,YACfhC,QAAS,kBACP,EAAK8F,SAAS,CAAE2gB,UAAU,EAAMC,WAAW,KAC7CvM,SAAUjW,KAAK3D,MAAMkmB,UAGvB,CACE1mB,MAAOiC,EAAQ,UACfhC,QAAS,kBACP,EAAK8F,SAAS,CAAE2gB,UAAU,EAAOC,WAAW,KAC9CvM,UAAkC,IAAxBjW,KAAK3D,MAAMkmB,WAAoC,IAAdC,MAKhDD,EACGviB,KAAKgjB,YACLR,EACAxiB,KAAKwiB,YACLxiB,KAAKijB,oB,GAhUMxiB,a,SC0ERyiB,GApFF,SAAC,GAAqC,IAAnCnO,EAAkC,EAAlCA,KAAM9T,EAA4B,EAA5BA,WAA4B,IAAhB/D,YAAgB,MAAT,GAAS,EAC1CjD,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAE5C+C,EAAQjD,EAAagb,EAAM9a,GAC3BkpB,GAAY/hB,KAAKzG,MAAQoa,EAAKqO,UAAY,IAAQ,EAElDC,EACW,IAAftO,EAAK7C,MACD,eACe,IAAf6C,EAAK7C,MACL,eACe,KAAf6C,EAAK7C,MACL,eACA,KAEAoR,EAAqC,OAA3B7sB,EAAUse,EAAK7T,QAAmB,2BAAS,eAE3D,OACE,kBAAC3E,EAAA,EAAD,CACET,QAAS,WACPmF,EAAWgC,SAAS,UAAW,CAAElG,KAAMgY,EAAKhY,QAE9Cf,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAE3C,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiBxC,EAAMiS,QACvBpN,aAAc5B,EAAO,EACrB4F,YAAa,EACbC,YAAa9I,EAAMyC,YAGpBqY,EAAKjC,UACJ,kBAACzR,EAAA,EAAD,CACEC,OAAQ,CAAE8V,IAAKthB,EAAUC,YAAcgf,EAAKjC,WAC5C9W,MAAO,CAAEP,MAAOyB,EAAMqE,OAAQrE,EAAM4B,aAAc5B,EAAO,KAG3D,kBAACmE,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAOyB,EAAMqE,OAAQrE,EAAM4B,aAAc5B,EAAO,KAG7D,kBAACf,EAAA,QAAD,CAAMH,MAAO,CAAEwC,SAAU,WAAYC,IAAK,EAAGG,MAAO,IAClD,kBAAC,GAAD,KAAIukB,EAAW,SAAM,iBAGtBE,GACC,kBAAClnB,EAAA,QAAD,CAAMH,MAAO,CAAEwC,SAAU,WAAYE,OAAQ,EAAGE,MAAO,IACrD,kBAAC,GAAD,KAAIykB,IAIPtO,EAAKzP,MAAQyP,EAAKzP,KAAKwN,WACtB,kBAAC3W,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACVC,KAAM,GAAMvB,EACZyB,MAAO,GAAMzB,IAGf,kBAACmE,EAAA,EAAD,CACEC,OAAQ,CAAE8V,IAAKthB,EAAUC,YAAcgf,EAAKzP,KAAKwN,WACjD9W,MAAO,CACLP,MAAOyB,EAAO,EACdqE,OAAQrE,EAAO,EACf4B,aAAc5B,EAAO,MAM7B,kBAACf,EAAA,QAAD,CAAMH,MAAO,CAAEwC,SAAU,WAAYE,OAAQ,EAAGC,KAAM,IACpD,kBAAC,GAAD,KAAI2kB,KAGR,kBAACnnB,EAAA,QAAD,CAAMH,MAAO,CAAEgO,WAAY,KACzB,kBAAC,GAAD,CAAGhO,MAAO,CAAEgB,UAAU+X,EAAKhY,MAC1BgY,EAAKzP,MAAQ,kBAAC,GAAD,KAAIyP,EAAKzP,KAAKvI,SCmFrBwmB,IA7IG/nB,IAAW1C,IAAI,UAAzB2C,MAGM,SAAC,GAUR,IAAD,EATJwF,EASI,EATJA,WASI,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAIU9G,GAER,EALF4d,OAKE,EAJF7W,SAIE,EAHF8W,aAGE,EAFFxb,OAAUrC,OAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAE0BzD,oBAAS,GAFnC,WAEGse,EAFH,KAEYmE,EAFZ,OAGoBziB,mBAAS,IAH7B,WAGGzD,EAHH,KAGSwpB,EAHT,OAI4B/lB,mBAAS,MAJrC,WAIGlF,EAJH,KAIa0S,EAJb,KAMElO,EAAI,SAAGkE,EAAW5E,MAAMyX,aAApB,EAAG,EAAyB/W,KAUhC0mB,EAAe,4BAAAhrB,EAAAC,OAAA,uDACnBwnB,GAAW,GADQ,WAAAznB,EAAA,MAGQM,EAAK,WAAY,CAC1C0I,MAAOnF,EAAOoF,WACd3E,UALiB,gBAGXxE,EAHW,EAGXA,SAIR2nB,GAAW,GACXjV,EAAY1S,GARO,6DAWrBf,GAnBgB,0BAAAiB,EAAAC,OAAA,uDACdwnB,GAAW,GADG,WAAAznB,EAAA,MAGKK,EAAI,aAAaiE,IAHtB,OAGRuI,EAHQ,OAId4a,GAAW,GACXsD,EAAQle,GALM,+DAgChB,OACE,kBAACnJ,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAC/B,kBAAC4N,GAAA,EAAD,CACEyQ,oBAAqB,WACnB,OACE,kBAAC,KAAD,CAAchf,MAAO,CAAEkD,KAAM,CAAElC,MAAO/C,EAAME,eAA5C,MACGH,OADH,EACGA,EAAM0pB,UAIbjZ,oBAAqB,WACnB,OACE,kBAACtO,EAAA,QAAD,CACEH,MAAO,CAAEkK,OAhER,GAgEwB1J,cAAe,MAAOwI,SAAU,SAEzD,kBAAC7I,EAAA,QAAD,KACGnC,EAAK6Y,MACJ,kBAACxR,EAAA,EAAD,CACEC,OAAQ,CAAE8V,IAAKthB,EAAUC,YAAciE,EAAK6Y,OAC5C7W,MAAO,CAAEP,MAvEhB,IAuE6B8F,OAvE7B,KAwEOmd,WAAW,UAGb,kBAACrd,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MA7EhB,IA6E6B8F,OA7E7B,QAiFC,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAhFd,KAiFE6V,EAAU,kBAACzP,GAAA,EAAD,MAAwB,KACnC,kBAAC,GAAD,KACGxO,EAAQ,QADX,KACsB9D,EAAK+C,MAE3B,kBAAC,GAAD,KACGe,EAAQ,WADX,KACyB9D,EAAK2pB,SAE9B,kBAAC,GAAD,KACG7lB,EAAQ,QADX,WACuB1G,EAAa4C,EAAKwL,MADzC,MAGA,kBAAC,GAAD,KACG1H,EAAQ,SADX,KACuB9D,EAAK4pB,SAE3B,MAAC7iB,OAAD,EAACA,EAAIuE,QACH/M,EACC,kBAAC,GAAD,KAAIA,GAEJ,kBAAC,GAAD,CACEuD,QAAS2nB,EACT5nB,MAAOiC,EAAQ,eACf7D,MAAOA,QAOrBuQ,KAAMxQ,EAAK6pB,MACX/I,aAAc,SAAC9gB,EAAM7C,GAAP,aAAwBA,GACtCyS,WAAY,YAAsB,IAtElBka,EAsED9pB,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MACDiK,KAAKzG,MAAQX,EAAKopB,SAEtBrpB,EAAaC,EAAMC,GAEjC,OACE,kBAAC,KAAD,CACErD,IAAG,OAASO,EACZ6E,MAAO,CACLa,kBAAmB,KAGrB,kBAAC,KAAD,CAAKb,MAAO,CAAEsO,eAAgB,IAC5B,kBAAC,GAAD,CAAMrJ,WAAYA,EAAY8T,KAAM/a,KAEtC,kBAAC,KAAD,CAAKgC,MAAO,CAAEY,eAAgB,WAC5B,kBAAC,GAAD,MAtFQknB,EAsFS9pB,EAAK8pB,UArFlChmB,EA7CoB,IA8ClBgmB,EACI,gBAjDmB,IAkDnBA,EACA,qBAlDc,IAmDdA,EACA,gBACA,sBAgFI,kBAAC,KAAD,CAAK9nB,MAAO,CAAEY,eAAgB,WAC5B,kBAAC,GAAD,qBAAO5C,EAAK2L,OAAZ,aC/IDoe,GAZJ,SAAC,GAAkB,IAAhBvmB,EAAe,EAAfA,SACNvD,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAElD,OACE,kBAAC,UAAD,CACE+B,MAAO,CAAEkH,SAAU,GAAInE,WAAY,OAAQ/B,MAAO/C,EAAME,cAEvDqD,IC0DQwmB,GA/DU,SAAC,GAUpB,EATJ/iB,WASK,IAAD,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAOIjD,GADF,EALF+Z,OAKE,EAJF7W,SAIE,EAHF8W,aAGE,EAFFxb,OAAUrC,MAGItD,EAAe,MAACoK,OAAD,EAACA,EAAIG,SADhC,EAGwBzD,mBAAS,CAAElF,SAAUuF,EAAQ,aAHrD,WAGGwe,EAHH,KAGW2H,EAHX,OAI0BxmB,oBAAS,GAJnC,WAIYyiB,GAJZ,WAeJ,OAFA1oB,GAP4B,0BAAAiB,EAAAC,OAAA,uDAC1BwnB,GAAW,GADe,WAAAznB,EAAA,MAELK,EAAI,0BAA0BwD,EAAOoF,aAFhC,OAEpB4a,EAFoB,OAG1B2H,EAAU3H,GACV4D,GAAW,GAJe,+DAU1B,kBAAClM,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACpC2f,EAAO/jB,SACN,kBAAC,GAAD,KAAI+jB,EAAO/jB,UAEX,kBAAC4D,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CAAMH,MAAO,CAAE0I,aAAc,KAC3B,kBAAC,GAAD,KACG5G,EAAQ,SADX,KACuBwe,EAAOwE,QAG/BxE,EAAO4H,cACNjK,OAAOvD,KAAK4F,EAAO4H,cAAcllB,KAAI,SAACpI,GACpC,IAAMutB,EAAQ7H,EAAO4H,aAAattB,GAElC,OACE,kBAACuF,EAAA,QAAD,CAAMH,MAAO,CAAE0I,aAAc,KAC3B,kBAAC,GAAD,CAAG+E,MAAI,GAAE3L,EAAQlH,IACjB,kBAAC,GAAD,KACGkH,EAAQ,WADX,KACyBqmB,EAAMC,SAE/B,kBAAC,GAAD,KACGtmB,EAAQ,SADX,KACuBqmB,EAAMjS,OAE7B,kBAAC,GAAD,KACGpU,EAAQ,QADX,IACqB,IAClBqmB,EAAME,KAAOF,EAAME,KAAOvmB,EAAQ,sBAOjD,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QCbd+iB,GA5CI,SAAC,GAUd,EATJrjB,WASK,IAAD,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAEAC,GAIE,EALF6W,OAKE,EAJF7W,UAEU/G,GAER,EAHF6d,aAGE,EAFFxb,OAAUrC,OAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,KAGa0S,EAHb,OAIoBxN,mBAAS,IAJ7B,WAIGV,EAJH,KAISiO,EAJT,KAeJ,OACE,kBAACgJ,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACpCpE,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAACiL,GAAA,EAAD,CACExF,MAAOjB,EACP2G,aAAcsH,EACdhP,MAAOA,GAAM/B,GAAO4Q,UACpBpH,YAAY,OACZ8I,qBAAsBtS,EAAMuS,oBAE9B,kBAAC,GAAD,CACE1Q,QApBiB,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACMM,EAAK,aAAc,CAC5CgE,OACA0E,MAAOnF,EAAOoF,cAHK,gBACbnJ,EADa,EACbA,SAIRyI,EAAS1E,EAAOoF,YAChBuJ,EAAY1S,GANS,6DAqBjBsD,MAAOiC,EAAQ,iBACf7D,MAAOA,MCJAqqB,GArCI,SAAC,GAUd,EATJrjB,WASK,IAAD,IARJH,YAEEC,GAME,EAPFzE,OAOE,EANFyE,IAGA+W,GAGE,EALFD,OAKE,EAJF7W,SAIE,EAHF8W,cAGE,KAFFxb,OAAUrC,MAGItD,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEJzD,mBAAS,OAHrC,wBAIkDA,mBAAS,OAJ3D,wBAKwBA,mBAAS,KALjC,wBAMoBA,mBAAS,SAN7B,qBAOJjG,EAAOsgB,GAaP,OACE,kBAAC9D,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAACR,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QCrBrB9F,GAAUD,IAAW1C,IAAI,UAAzB2C,MAuHO8nB,GApHD,SAAC,GAUR,IATLtiB,EASI,EATJA,WASI,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAOIjD,GADF,EALF+Z,OAKE,EAJF7W,SAIE,EAHF8W,aAGE,EAFFxb,OAAUrC,MAGItD,EAAe,MAACoK,OAAD,EAACA,EAAIG,SADhC,EAE0BzD,oBAAS,GAFnC,WAEGse,EAFH,KAEYmE,EAFZ,OAG4BziB,mBAAS,MAHrC,WAGGlF,EAHH,KAGa0S,EAHb,OAIsBxN,mBAAS,IAJ/B,WAIG8mB,EAJH,KAIUC,EAJV,OAK0B/mB,mBAAS,IALnC,WAKGgnB,EALH,KAKYC,EALZ,KAOEC,EAAW,4BAAAlsB,EAAAC,OAAA,uDACfwnB,GAAW,GADI,WAAAznB,EAAA,MAESK,EAAI,UAFb,gBAEPyrB,EAFO,EAEPA,MACRrE,GAAW,GACXsE,EAASD,GAJM,6DAOXK,EAAa,4BAAAnsB,EAAAC,OAAA,kEAAAD,EAAA,MACmBK,EAAI,qBACjBwD,EAAOoF,aAFb,kBACTmjB,SAAUJ,EADD,EACCA,QAGlBC,EAAWD,GAJM,6DAObK,EAAuB,SAAOzY,EAAI0Y,GAAX,iBAAAtsB,EAAAC,OAAA,kEAAAD,EAAA,MACAM,EAAK,mBAAoB,CAClD0I,MAAOnF,EAAOoF,WACd2K,KACA0Y,cAJyB,gBACnBxsB,EADmB,EACnBA,SAKR0S,EAAY1S,GACZqsB,IAP2B,6DAa7B,OAHAptB,EAAOmtB,GACPntB,EAAOotB,GAGL,kBAACzoB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAC9BpE,GAAY,kBAAC,GAAD,KAAIA,GAChBksB,EAAQrrB,OAAS,GAChBqrB,EAAQzlB,KAAI,SAACgmB,EAAQ7tB,GACnB,OACE,kBAACgF,EAAA,QAAD,CAAMvF,IAAG,SAAWO,EAAS6E,MAAO,CAAEQ,cAAe,QACnD,kBAAC,GAAD,KAAIsB,EAAQ,gBAAiBknB,EAAOC,WACpC,kBAAC,GAAD,CACEppB,MAAOiC,EAAQ,UACfhC,QAAS,kBAAMgpB,EAAqBE,EAAO3Y,IAAI,MAEjD,kBAAC,GAAD,CACExQ,MAAOiC,EAAQ,WACfhC,QAAS,kBAAMgpB,EAAqBE,EAAO3Y,IAAI,UAMzD,kBAAC9B,GAAA,EAAD,CACEqU,WAAY7C,EACZ8C,UAAW8F,EACXna,KAAM+Z,EACNW,WACkB,QAAhB7mB,UAASC,QACLjG,EACAqB,KAAKoQ,MAAMrO,GAAK,KAEtB4iB,sBACkB,QAAhBhgB,UAASC,GACL,CAAE9B,cAAe,MAAOwI,SAAU,aAClC3M,EAENyiB,aAAc,SAAC9gB,EAAM7C,GAAP,aAAwBA,GACtCyS,WAAY,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAAkB,EAAZ7C,MAGnB,OACE,kBAACoF,EAAA,EAAD,CAAkBT,QAHH,kBACfmF,EAAWgC,SAAS,OAAQ,CAAElG,KAAM/C,EAAK+C,QAEJf,MAAO,CAAEkK,OApF3C,KAqFAlM,EAAK8Y,UACJ,kBAACzR,EAAA,EAAD,CACEC,OAAQ,CAAE8V,IAAKthB,EAAUC,YAAciE,EAAK8Y,WAC5C9W,MAAO,CAAEP,MAzFd,IAyF2B8F,OAzF3B,KA0FKmd,WAAW,UAGb,kBAACrd,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MA/Fd,IA+F2B8F,OA/F3B,OAkGC,kBAAC,GAAD,KACGzD,EAAQ,QADX,KACsB9D,EAAK+C,MAE3B,kBAAC,GAAD,KACGe,EAAQ,WADX,KACyB9D,EAAK2pB,SAE9B,kBAAC,GAAD,KACG7lB,EAAQ,QADX,WACuB1G,EAAa4C,EAAKwL,MADzC,MAGA,kBAAC,GAAD,KACG1H,EAAQ,SADX,KACuB9D,EAAK4pB,a,6BC9G1CuB,KAAUC,uCACRD,KAAUC,uCAAsC,GAElD,IAQMC,GAAU,SAAOzuB,GAAP,eAAA6B,EAAAC,OAAA,2EAAAD,EAAA,MAEQ6sB,KAAaC,QAAQ3uB,IAF7B,UAGE,QADRoH,EAFM,iDAIHA,GAJG,qCAOH3F,GAPG,uFAWLA,GAXK,kEA4EDmtB,GA7DC,SAAC,GAA2C,IAAzCnZ,EAAwC,EAAxCA,GAAIxQ,EAAoC,EAApCA,MAAO2B,EAA6B,EAA7BA,SAAUioB,EAAmB,EAAnBA,aAChCxrB,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SADO,EAGzBwD,oBAAS,GAHgB,WAGlDioB,EAHkD,KAGxCC,EAHwC,OAI3BloB,oBAAS,GAJkB,WAIlDse,EAJkD,KAIzCmE,EAJyC,KAgBzD,OAVAvoB,qBAAU,YACR,WAAC,QAAAc,EAAAC,OAAA,kEAAAD,EAAA,MAC0B4sB,GAAQ,YAAYhZ,IAD9C,YAEoBhU,KADbutB,EADP,SAGGD,EAA2B,SAAfC,GAEd1F,GAAW,GALZ,4DAAD,KAOC,IAGD,kBAAC/jB,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiB3C,EAAWG,EAAMiS,SAClChG,OAAQ,GACRvJ,QAAS,GACTmC,aAAc,GACdrD,MAC0B,kBAAjBgqB,EACHA,EACAA,EAAe,KAGvB,kBAAClpB,EAAA,EAAD,CACET,QAAS,WArDC,IAAOlF,EAAKoH,EAsDpB6nB,KAAgBC,SAChBH,GAAaD,GAvDE9uB,EAwDL,YAAYyV,EAxDFrO,EAwDQ7E,QAAQusB,GAxD5B,EAAAjtB,EAAAC,OAAA,2EAAAD,EAAA,MAER6sB,KAAa9B,QAAQ5sB,EAAKoH,IAFlB,sHA0DVhC,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,WAGd,kBAAC,GAAD,CAAG4K,MAAI,GAAE5N,GACT,kBAACiK,GAAA,EAAD,CACE/I,KAAM2oB,EAAW,UAAY,YAC7B1oB,MAAO/C,EAAME,eAIjB,kBAACgC,EAAA,QAAD,CACE4pB,SAAU,SAACC,GAAW,IAAD,EACWA,EAAMpiB,YAAYqiB,OAD7B,EACb5uB,EADa,EACV6uB,EADU,EACPzqB,MADO,EACA8F,SAKpBmkB,IAAa3J,GAAWve,K,GCvEPhC,IAAW1C,IAAI,UAAjCyI,G,GAAAA,OA+eO4kB,I,GA/eC1qB,MAKK,SAAC,GAOf,IAAD,kBANJqF,YACExE,EAKE,EALFA,OACAyE,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAE4BzD,mBAAS,MAFrC,WAEGlF,EAFH,KAEa0S,EAFb,OAG0BxN,oBAAS,GAHnC,WAGGse,EAHH,KAGYmE,EAHZ,OAI4BziB,mBAAS,IAJrC,WAIGonB,EAJH,KAIauB,EAJb,OAKoB3oB,mBAAS,IAL7B,WAKG6H,EALH,KAKS+gB,EALT,OAM4B5oB,mBAAS,IANrC,WAMG6oB,EANH,KAMaC,EANb,OAO4B9oB,mBAAS,IAPrC,WAOGwnB,GAPH,cAQ0BxnB,oBAAW,MAAFsD,GAAA,SAAAA,EAAIuE,WAAJ,IAAUoe,UAAW,KARxD,aAQGA,GARH,MAQY8C,GARZ,SASoB/oB,oBAAW,MAAFsD,GAAA,SAAAA,EAAIuE,WAAJ,IAAUvI,OAAQ,IAT/C,aASGA,GATH,MASSiO,GATT,SAUsBvN,oBAAW,MAAFsD,GAAA,SAAAA,EAAIuE,WAAJ,IAAUuN,QAAS,IAVlD,aAUGA,GAVH,MAUUwK,GAVV,SAW8B5f,oBAAS,GAXvC,aAWGgpB,GAXH,MAWcC,GAXd,SAYwBjpB,mBAAS,IAZjC,aAYG6Y,GAZH,MAYW2B,GAZX,MAaItC,GAA+BuD,2BAA/BvD,2BAEFgR,GAAatpB,IAAM4O,WAAW7O,IAE9BwpB,GAAU,4BAAAnuB,EAAAC,OAAA,uDACdwnB,GAAW,GADG,WAAAznB,EAAA,MAGKK,EAAI,cAAD,MAAciI,GAAd,SAAcA,EAAIuE,WAAlB,EAAc,EAAUvI,QAHhC,OAGRuI,EAHQ,OAId4a,GAAW,GACXmG,EAAQ/gB,GALM,6DAQVuhB,GAAiB,4BAAApuB,EAAAC,OAAA,uDACrBwnB,GAAW,GADU,WAAAznB,EAAA,MAEMK,EAAI,qBAAqBwD,EAAOoF,aAFtC,gBAEbmjB,EAFa,EAEbA,SACR3E,GAAW,GACXkG,EAAYvB,GAJS,6DAOjBiC,GAAqB,SAAOza,EAAI0Y,GAAX,iBAAAtsB,EAAAC,OAAA,uDACzBwnB,GAAW,GADc,WAAAznB,EAAA,MAEEM,EAAK,iBAAkB,CAChD0I,MAAOnF,EAAOoF,WACd2K,KACA0Y,cALuB,gBAEjBxsB,EAFiB,EAEjBA,SAKR2nB,GAAW,GACXjV,EAAY1S,GACZsuB,KATyB,6DAmCrBE,GAAsB,SAAOC,GAAP,iBAAAvuB,EAAAC,OAAA,uDAC1BwnB,GAAW,GADe,WAAAznB,EAAA,MAECM,EAAK,kBAAmB,CACjD0I,MAAOnF,EAAOoF,WACd4U,UACA0Q,WACAP,gBANwB,gBAElBluB,EAFkB,EAElBA,SAMRyI,EAAS1E,EAAOoF,YAChBwe,GAAW,GACXjV,EAAY1S,GAVc,6DAatB0uB,GAAgB,8BAAAxuB,EAAAC,OAAA,mDAChBusB,MAAQ,MAAKlkB,GAAL,SAAKA,EAAIuE,WAAT,EAAK,EAAUvI,MADP,uBAElBa,MAAME,EAAQ,yBAFI,iCAMpBoiB,GAAW,GANS,WAAAznB,EAAA,MAOOM,EAAK,YAAa,CAC3C0I,MAAOnF,EAAOoF,cARI,gBAOZnJ,EAPY,EAOZA,SAGR2nB,GAAW,GACXjV,EAAY1S,GAXQ,8DAwBhB2uB,GAAe,SAACpD,GAAD,OACnBhmB,EAlHoB,IAmHlBgmB,EACI,gBAtHmB,IAuHnBA,EACA,qBAvHc,IAwHdA,EACA,gBACA,oBAGFqD,GAAiB,8BAAA1uB,EAAAC,OAAA,mDACjBusB,MAAQ,MAAKlkB,GAAL,SAAKA,EAAIuE,WAAT,EAAK,EAAUvI,MADN,uBAEnBa,MAAME,EAAQ,yBAFK,iCAMrBoiB,GAAW,GANU,WAAAznB,EAAA,MAOMM,EAAK,aAAc,CAC5C0I,MAAOnF,EAAOoF,cARK,gBAObnJ,EAPa,EAObA,SAGR2nB,GAAW,GACXjV,EAAY1S,GACZyI,EAAS1E,EAAOoF,YAZK,8DA4BvBlK,EAAOqvB,IACPrvB,EAAOovB,IAEP,IAAMQ,GAAa,SAAC9H,GAElB,IAAMnhB,EAAU,CACdL,EAAQ,mBACRA,EAAQ,iBACRA,EAAQ,sBACRA,EAAQ,kBAEVK,EAAQ+b,KAAKpc,EAAQ,WACrB,IACMqc,EAAoBhc,EAAQ/E,OAAS,EAE3Cuc,GACE,CACExX,UACAgc,oBACAC,4BAP2B/hB,IAS7B,SAACud,GACKA,EAAc,GAnCA,SAAO0J,EAAQjlB,GAAf,UAAA5B,EAAAC,OAAA,uDACtBwnB,GAAW,GADW,WAAAznB,EAAA,MAEKM,EAAK,cAAe,CAC7C0I,MAAOnF,EAAOoF,WACd4d,SACAjlB,UALoB,gBAEd9B,EAFc,EAEdA,SAKR2nB,GAAW,GACXjV,EAAY1S,GACZyI,EAAS1E,EAAOoF,YAChBklB,KAVsB,4DAoChBS,CAAgB/H,EAAQ1J,EAAc,OAMxC+F,GAAqB,0BAAAljB,EAAAC,OAAA,mDACL,QAAhB2F,UAASC,IAAgC,YAAhBD,UAASC,GADb,kCAAA7F,EAAA,MAEEmjB,IAAqBA,MAFvB,gBAGR,YAHQ,EAEfC,QAENje,MAAME,EAAQ,2BAJO,6DAiC3B,OACE,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3Buf,GAAW,kBAACzP,GAAA,EAAD,MACX/T,GAAY,kBAAC,GAAD,KAAIA,IAEnB,kBAACyb,EAAA,EAAD,CACEqK,sBAAuB,CACrB9c,OAAwB,QAAhBlD,UAASC,GAAeiD,QAASlJ,GAE3C2D,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,MAE1B,MAACoE,GAAD,SAACA,EAAIuE,WAAL,EAAC,EAAU+G,IAGV,kBAAClQ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOwI,SAAU,SAC7C,kBAAC,GAAD,CACEnJ,MAAOiC,EAAQ,cACf2nB,aAAc,IACdpZ,GAAG,sBAEH,kBAAC,GAAD,KAAIvO,EAAQ,aAAcopB,GAAY,MAACnmB,OAAD,EAACA,EAAI+iB,eAI1C,MAAF/iB,OAAA,EAAAA,EAAI+iB,YAjPY,EAkPf,kBAAC,GAAD,CACEjoB,MAAOiC,EAAQ,yBACf2nB,aAAc,IACdpZ,GAAG,sBAEFwY,EAASzrB,OAAS,EACjByrB,EAAS7lB,KAAI,SAACsoB,GAAa,IAAD,EACxB,OACE,kBAACnrB,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,kBAGlB,kBAAC,GAAD,cAAI0qB,EAAQvS,WAAZ,EAAI,EAAchY,MAClB,kBAACZ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,CACEX,MAAOiC,EAAQ,UACfhC,QAAS,kBAAMgrB,GAAmBQ,EAAQjb,IAAI,MAEhD,kBAAC,GAAD,CACExQ,MAAOiC,EAAQ,WACfhC,QAAS,kBACPgrB,GAAmBQ,EAAQjb,IAAI,WAQ3C,kBAAC,GAAD,KAAIvO,EAAQ,oBAGd,MAGD,MAAFiD,OAAA,EAAAA,EAAI+iB,YAvRY,EAwRf,kBAAC,GAAD,CACEjoB,MAAOiC,EAAQ,gBACf2nB,aAAc,IACdpZ,GAAG,kBAEH,kBAAClQ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAACgH,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAOsY,GAAOra,GAAO4Q,UACrB7M,MAAOsoB,EACP5iB,aAAc6iB,EACd9iB,YAAa3F,EAAQ,UAEvB,kBAAC,GAAD,CACEjC,MAAOiC,EAAQ,UACfhC,QAnOK,4BAAArD,EAAAC,OAAA,uDACrBwnB,GAAW,GADU,WAAAznB,EAAA,MAEMM,EAAK,aAAc,CAC5C0I,MAAOnF,EAAOoF,WACd3E,KAAMupB,KAJa,gBAEb/tB,EAFa,EAEbA,SAIR2nB,GAAW,GACXjV,EAAY1S,GAPS,6DAoOLyD,MAAO,CAAEuE,KAAM,EAAG+J,eAAgB,GAAIN,WAAY,QAItD,KA3SQ,KA8ST,MAAFjJ,OAAA,EAAAA,EAAI+iB,YA7SO,KA8SV,MAAF/iB,OAAA,EAAAA,EAAI+iB,WACF,kBAAC,GAAD,CACEjoB,MAAOiC,EAAQ,YACf2nB,aAAc,IACdpZ,GAAG,wBAEH,kBAAC,GAAD,KACGvO,EAAQ,aADX,WAC4B1G,GAAe,MAAF2J,GAAA,SAAAA,EAAIuE,WAAJ,IAAUE,OAAQ,GAD3D,MAGA,kBAAC,GAAD,KACG1H,EAAQ,WADX,KACyB1G,GAAe,MAAF2J,GAAA,SAAAA,EAAIuE,WAAJ,IAAUG,UAAW,IAE3D,kBAACtJ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOwI,SAAU,SAC7C,kBAACxB,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAOsY,GAAOra,GAAO4Q,UACrB7M,MAAOsY,GACP5S,aAAcuU,GACdxU,YAAa3F,EAAQ,YAGvB,kBAAC,GAAD,CACEjC,MAAmBiC,EAAZ2oB,GAAoB,UAAqB,QAChD3qB,QAAS,kBAAM4qB,IAAcD,KAC7BzqB,MAAO,CAAEuE,KAAM,EAAG+J,eAAgB,GAAIN,WAAY,MAGpD,kBAAC,GAAD,CACEnO,MAAOiC,EAAQ,MACfhC,QAAS,kBAAMirB,IAAoB,IACnC/qB,MAAO,CAAEuE,KAAM,EAAG+J,eAAgB,GAAIN,WAAY,MAEpD,kBAAC,GAAD,CACEnO,MAAOiC,EAAQ,OACfhC,QAAS,kBAAMirB,IAAoB,IACnC/qB,MAAO,CAAEuE,KAAM,EAAG+J,eAAgB,GAAIN,WAAY,QAItD,MAGD,MAAFjJ,OAAA,EAAAA,EAAI+iB,YA1VY,GA2Vf,kBAAC,GAAD,CACEjoB,MAAOiC,EAAQ,WACf2nB,aAAa,MACbpZ,GAAG,sBAHL,MAKG/G,GALH,SAKGA,EAAMue,YALT,EAKG,EAAa7kB,KAAI,SAACuoB,GACjB,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAKvrB,MAAO,CAAEY,eAAgB,WAC5B,kBAAC,GAAD,KAAI2qB,EAAOxqB,OAGb,kBAAC,KAAD,CAAKf,MAAO,CAAEY,eAAgB,WAC5B,kBAAC,GAAD,KAAIsqB,GAAaK,EAAOzD,aAG1B,kBAAC,KAAD,CACE9nB,MAAO,CACLY,eAAgB,SAChBiC,WAAY,aAGd,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,SACzB,MAAFuE,OAAA,EAAAA,EAAI+iB,YAlXF,GAmXDyD,EAAOlb,MAAP,MAActL,OAAd,EAAcA,EAAIsL,KAChB,kBAAC,GAAD,CACExQ,MAAOiC,EAAQ,QACfhC,QAAS,kBA7QlB,SAAOwjB,GAAP,iBAAA7mB,EAAAC,OAAA,uDACnBwnB,GAAW,GADQ,WAAAznB,EAAA,MAEQM,EAAK,WAAY,CAC1C0I,MAAOnF,EAAOoF,WACd4d,YAJiB,gBAEX/mB,EAFW,EAEXA,SAIR2nB,GAAW,GACXjV,EAAY1S,GAPO,4DA6QwBivB,CAAaD,EAAOlb,OApX3C,KAuXK,MAAFtL,OAAA,EAAAA,EAAI+iB,YACH,kBAAC,GAAD,CACEjoB,MAAOiC,EAAQ,cACf9B,MAAO,CAAEgO,WAAY,IACrBlO,QAAS,kBAAMsrB,GAAWG,EAAOlb,eAYhD,MAAFtL,OAAA,EAAAA,EAAI+iB,YAzYY,GA0Yf,kBAAC,GAAD,CACEjoB,MAAOiC,EAAQ,eACf2nB,aAAa,MACbpZ,GAAG,yBAEH,kBAAC9P,EAAA,EAAD,CAAkBT,QAhNN,0BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MAClBkjB,MADkB,kCAAAljB,EAAA,MAIHujB,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfE,QAAQ,EACRoL,QAAS,KATW,QAIlBnL,EAJkB,QAYVC,WAEVc,GACEf,EAAOD,OAAP,cACkBC,EAAO5hB,KADzB,WACwC4hB,EAAOD,OAC3CC,EAAOlF,KAjBO,gDAqBtBve,QAAQuF,IAAR,MArBsB,kEAiNTyU,GACC,kBAACxR,EAAA,EAAD,CACEC,OAAQ,CACN8V,IAAKvE,GAAM6U,SAAS,cAChB7U,GACA/c,EAAUC,YAAc8c,IAE9B7W,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7Bmd,WAAW,UAGb,kBAACrd,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7Bmd,WAAW,WAIjB,kBAAClb,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAOsY,GAAOra,GAAO4Q,UACrB7M,MAAOjB,GACP2G,aAAcsH,GACdvH,YAAa3F,EAAQ,cAGvB,kBAAC0F,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAO,CACLsY,GAAOra,GAAO4Q,UACd,CACEpP,MAAO,OACP8F,OAAQ,MAGZoc,WAAW,EACX3f,MAAO0lB,GACPhgB,aAAc8iB,KAEhB,kBAAC,GAAD,CACE1qB,QAjYO,4BAAArD,EAAAC,OAAA,uDACrBwnB,GAAW,GADU,WAAAznB,EAAA,MAEMM,EAAK,aAAc,CAC5C0I,MAAOnF,EAAOoF,WACdgiB,WACA7Q,SACA9V,WANmB,gBAEbxE,EAFa,EAEbA,SAMR2nB,GAAW,GACXjV,EAAY1S,GACZyI,EAAS1E,EAAOoF,YAVK,6DAkYP7F,MAAOiC,EAAQ,QACf9B,MAAO,CAAE8I,UAAW,OAO1B,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEsO,eAAgB,KAE3B,kBAAC,GAAD,CACEzO,MAAOiC,EAAQ,aACfhC,QAAS,kBACP6qB,GACE7oB,EAAQ,cACRA,EAAQ,yBACR,CACE,CAAEoB,KAAMpB,EAAQ,MAAOhC,QAASmrB,IAChC,CAAE/nB,KAAMpB,EAAQ,iBAS5B,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEsO,eAAgB,KAldnB,KAmdP,MAAFvJ,OAAA,EAAAA,EAAI+iB,YACH,kBAAC,GAAD,CACEjoB,MAAOiC,EAAQ,cACfhC,QAAS,kBACP6qB,GACE7oB,EAAQ,cACRA,EAAQ,0BACR,CACE,CAAEoB,KAAMpB,EAAQ,MAAOhC,QAASqrB,IAChC,CAAEjoB,KAAMpB,EAAQ,iBAQ5B,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,OAjQzB,kBAAC,GAAD,KAAIzD,EAAQ,iB,qkBChPtB,I,GAC0BtC,IAAW1C,IAAI,UAAjC2C,G,GAAAA,MAAO8F,G,GAAAA,OACTwb,GAAOthB,GAAQ,IAAO,IAAM,IAoLnBksB,GAnLE,SAAC,GAUZ,EATJ1mB,WASK,IAAD,gCARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAEAC,GAIE,EALF6W,OAKE,EAJF7W,UAEU/G,GAER,EAHF6d,aAGE,EAFFxb,OAAUrC,OAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B0mB,EAAS,CACb,KACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KAGIC,EAAQ,CACZ,CACE9qB,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUwiB,MACnBjV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUyiB,MACnBlV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU0iB,MACnBnV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU2iB,MACnBpV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU4iB,MACnBrV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU6iB,MACnBtV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU8iB,MACnBvV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU+iB,MACnBxV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACd8c,MAAOgN,EAAO,GACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUgjB,MACnBzV,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,kBACd8c,MAAOgN,EAAO,IACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUijB,OACnB1V,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,kBACd8c,MAAOgN,EAAO,IACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUkjB,OACnB3V,MAAO9b,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,kBACd8c,MAAOgN,EAAO,IACdxD,QAAO,MAAErjB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUmjB,OACnB5V,MAAO9b,EAAQ,OA1Ff,EA8F4B0G,mBAAS,MA9FrC,WA8FGlF,EA9FH,KA8Fa0S,EA9Fb,OA+FwBxN,mBAAS,IA/FjC,WA+FG6Y,EA/FH,KA+FW2B,EA/FX,OAgG0Bxa,oBAAS,GAhGnC,WAgGGse,EAhGH,KAgGYmE,EAhGZ,KA8GJ,OACE,kBAAC/jB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAC9BpE,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,KACGuF,EAAQ,YADX,WAC2B1G,GAAe,MAAF2J,GAAA,SAAAA,EAAIuE,WAAJ,IAAUE,OAAQ,GAD1D,MAGA,kBAAC,GAAD,KACG1H,EAAQ,SADX,WACuBiD,GADvB,SACuBA,EAAIuE,WAD3B,EACuB,EAAUwb,OAEjC,kBAACvW,GAAA,EAAD,CACEqU,WAAY7C,EACZ8C,UAAW,kBAAM7d,EAAS1E,EAAOoF,aACjC8I,KAAMqd,EACN3C,WACkB,QAAhB7mB,UAASC,QACLjG,EACAqB,KAAKoQ,MAAMrO,IAASshB,GAAO2L,KAEjCrK,sBACkB,QAAhBhgB,UAASC,GACL,CAAE9B,cAAe,MAAOwI,SAAU,OAAQzD,OAAQA,GAAS,UAC3DlJ,EAENyiB,aAAc,SAAC9gB,EAAM7C,GAAP,aAAwBA,GACtCyS,WAAY,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MACnB,OACE,kBAACgF,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OArJZ,KAsJD,kBAAC7E,EAAA,EAAD,CACEC,OAAQtH,EAAK6Y,MACb7W,MAAO,CAAEP,MAAOshB,GAAMxb,OAAQwb,IAC9B2B,WAAW,YAEb,kBAAC,GAAD,KAAI1kB,EAAK+C,MACT,kBAAC,GAAD,cAAK/C,EAAK4gB,MAAV,MACA,kBAAC,GAAD,KACG9c,EAAQ,gBADX,KAC8B9D,EAAKoqB,SAEnC,kBAACjoB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAACgH,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAO,CAACsY,GAAOra,GAAO4Q,UAAW,CAAEpP,MAAO,MAC1CuC,MAAOsY,EAAOnf,EAAQ,IAAM,GAC5BuM,aAAc,SAACilB,GAAD,OAAO1Q,EAAU,SAAK3B,GAAN,UAAenf,EAAQ,EAAIwxB,MACzDllB,YAAa3F,EAAQ,YAEvB,kBAAC,GAAD,CACE9B,MAAO,CAAEsO,eAAgB,GAAIN,WAAY,IACzCnO,MAAOiC,EAAQ,OACfhC,QAAS,kBA5DJ,SAAO8sB,GAAP,iBAAAnwB,EAAAC,OAAA,uDACnBwnB,GAAW,GADQ,WAAAznB,EAAA,MAEQM,EAAK,WAAY,CAC1C6vB,SACAtS,OAAQA,EAAOsS,GACfnnB,MAAOnF,EAAOoF,cALG,gBAEXnJ,EAFW,EAEXA,SAKRyI,EAAS1E,EAAOoF,YAChBuJ,EAAY1S,GACZ2nB,GAAW,GATQ,4DA4DU2I,CAAa1xB,EAAQ,a,u/BCxK9CsE,GAAUD,IAAW1C,IAAI,UAAzB2C,MAgOOqtB,G,qLA9NbzsB,MAAQ,CACNwE,SAAU,KACVtI,SAAU,KACVmoB,KAAM,GACNpK,OAAQ,I,EAqBVyS,YAAc,WAAO,IACXzsB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MAASlC,EAAUC,YAAd,wBAAiDuG,EAAOoF,WAAc,CACzE5J,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAO0wB,GAAP,eAAAvwB,EAAAC,OAAA,gDACE4d,EAAS0S,EAAUC,QACvB,SAAC3T,EAAU8O,GAAX,UAAC,MACI9O,GADL,UAEG8O,EAAQ/X,GAAKlT,OAAOirB,EAAQ9N,YAE/B,IAGF,EAAK1U,SAAS,CACZonB,YACA1S,WAXE,+DAcL3d,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBswB,WAAa,SAACC,EAAQvI,EAAMtK,GAAY,IAC9B5U,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEke,SAAQ6S,SAAQvI,OAAMlf,iBAE5CpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAUqoB,OAAMtK,OAAQ,KACxC,EAAKxW,MAAMgB,YAAYE,SAASU,GAChC,EAAKqnB,cAHD,+DAKLpwB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBwwB,WAAa,SAAC/c,GAAQ,IACZ3K,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEiU,KAAI3K,iBAE1BpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU8T,OAC1B,EAAKvM,MAAMgB,YAAYE,SAASU,GAChC,EAAKqnB,cAHD,+DAKLpwB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBywB,YAAc,YAAsB,IAAnBrvB,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MAAY,EAO7B,EAAK2I,MALPgB,YACExE,EAH6B,EAG7BA,OACUrC,EAJmB,EAI7BqC,OAAUrC,MACV8G,EAL6B,EAK7BA,GAIEjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAC9BlD,EAAQ,EAAK3B,MAAMia,OAAOtc,EAAKqS,IAErC,OACE,kBAAClQ,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLY,eAAgB,WAGlB,kBAACyE,EAAA,EAAD,CACErF,MAAO,CACLP,MAAO,IACP8F,OAAQ,IACRmd,WAAY,UACZvS,UAAW,UAEb7K,OAAQ,CAAE8V,IAAKthB,EAAUC,YAAc,IAAMiE,EAAK6Y,SAGpD,kBAAC1W,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,iBAGlB,kBAACT,EAAA,QAAD,KACI,EAAKE,MAAM9D,UAAY,EAAK8D,MAAMukB,OAAS5mB,EAAK4mB,MAClD,EAAKvkB,MAAMgQ,KAAOrS,EAAKqS,GACrB,kBAAC,UAAD,CAAMrQ,MAAO,CAAEgB,MAAO/C,EAAME,cACzB,EAAKkC,MAAM9D,SAASA,UAErB,KAEJ,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK4mB,MACjD,kBAAC,UAAD,CAAM5kB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,gBADX,KAC8B9D,EAAKsc,QAEnC,kBAAC,UAAD,CAAMta,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,SACSH,EAAKuL,MAEd,kBAAC,UAAD,CAAMvJ,MAAO,CAAEgB,MAAO/C,EAAME,cACzBH,EAAKsvB,OADR,IACiBxrB,EAAQ,YAGzB,kBAAC,GAAD,CAAG2L,MAAI,EAACzN,MAAO,CAAE8I,UAAW,KACzBhH,EAAQ,UADX,KAGA,kBAAC0F,GAAA,EAAD,CACE5M,IAAG,SAAWoD,EAAKqS,GACnBrQ,MAAOA,GAAMM,EAAOrC,OAAO4Q,UAC3B7M,MAAOA,EACP0F,aAAc,SAACrM,GAAD,OACZ,EAAKuK,SAAS,CACZ0U,OAAO,SAAM,EAAKja,MAAMia,QAAlB,UAA2Btc,EAAKqS,GAAKhV,OAG/CkV,qBAAsBtS,EAAMuS,kBAC5B/I,YAAa3F,EAAQ,aAIzB,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,gBAAiB8H,aAAc,KAC5D,kBAAC,GAAD,CACEzK,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBACP,EAAKotB,WAAW,OAAQlvB,EAAK4mB,KAAM,EAAKvkB,MAAMia,OAAOtc,EAAKqS,QAI9D,kBAAC,GAAD,CACEpS,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,SACfhC,QAAS,kBACP,EAAKotB,WACH,QACAlvB,EAAK4mB,KACL,EAAKvkB,MAAMia,OAAOtc,EAAKqS,QAI7B,kBAAC,GAAD,CACEpS,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,WACfhC,QAAS,kBAAM,EAAKstB,WAAWpvB,EAAKqS,Y,2DA1L7B,IAAD,OACVpL,EAAejB,KAAKF,MAApBmB,WACWjB,KAAKF,MAAMgB,YAAtBxE,OAER0D,KAAK+oB,cAEL/oB,KAAKupB,cAAgBtoB,EAAWuN,YAAY,YAAY,WAGtD,EAAKua,mB,6CAMP/oB,KAAKupB,cAAc3a,W,+BAoLX,IAAD,EAIH5O,KAAKF,MAJF,KAELmB,WAFK,EAGLH,YAAeC,GAE6Bf,KAAK3D,OAArC2sB,GALP,EAKCtI,KALD,EAKOsI,WALP,EAKkB3c,GALlB,EAKsBV,KALtB,EAK4ByG,OAEnC,OACE,kBAAC7H,GAAA,EAAD,CACE2a,WAAYzpB,GAAQ,IAAO,EAAI,EAC/B4iB,sBAAuB,CAAExf,WAAY,UACrCic,aAAc,SAAC9gB,EAAM7C,GAAP,aAAwBA,GACtCqT,KAAMwe,EACNpf,WAAY5J,KAAKqpB,YACjBzJ,uBAAwBb,S,GAzNXte,a,kbCgLN+oB,G,kCAvLb,WAAY1pB,GAAQ,IAAD,uBACjB,cAAMA,IAyBR4K,aAAe,WAAO,IAEH3J,EACb,EAAKjB,MADPgB,YAAeC,GAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACG,EAAKqa,SACJ1Y,EAAQ,gBACRxC,GAAW,MAACyF,OAAD,EAACA,EAAI6E,SAAU,WArCf,EA0CnBgE,WAAa,SAAC5P,EAAM7C,GAAW,IAGf8C,EAEV,EAAK6F,MAHPgB,YACExE,OAAUrC,MAGRwC,EACJ,EAAKJ,MAAMwE,WAAa7G,EAAKqS,GAAK,eAAYhU,EAChD,OACE,kBAACkE,EAAA,EAAD,CACET,QAAS,WACP,EAAK8F,SAAS,CAAEf,SAAU7G,EAAKqS,OAGjC,kBAAClQ,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdnC,QAAS,GACTC,eAAgB,gBAChBH,oBAGF,kBAAC,UAAD,CAAMT,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK2H,WAlEtC,EAwEnBiS,OAAS,WAAO,IACNtX,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAEma,SAAS,IACzB/jB,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,SACnBoW,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAwjB,SAAS,EACT9E,QAAS,GACTC,OAAQxd,KAAKwd,WAEf,EAAKpX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAnGD,EAuGnB4c,aAAe,WAAO,IAAD,EACb1X,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAE3D,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAa,EAAKhB,MAAMgB,YACxBmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,SACfhC,QAAS,EAAK8X,WAtHpB,EAAKvX,MAAQ,CACXwE,SAAU,KACVtI,SAAU,KACV0e,QAAS,GACTC,OAAQxd,KAAKwd,UANE,E,8CAUVtgB,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,M,+BAwGA,IAAD,SAOHgC,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MALP,EAQwB+F,KAAK3D,MAA5B9D,EARD,EAQCA,SAEFuF,GAVC,EAQW+C,SAEFlK,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAE9B/C,EAAU,CACd,CACEkO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAElB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,gBAIpB,OACE,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,WAClC,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAIzK,MAAO,MAC/BlD,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAGsa,UAAW,MACjC,kBAAC,UAAD,CAAM7e,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7C,kBAACyb,EAAA,EAAD,KACGhU,KAAK0K,eAELvM,EAAQa,IAAIgB,KAAK4J,YAEjB5J,KAAKwV,sB,GA/KF/U,aCkBHkU,GAvBQ,SAAC,GAOlB,EANJ1T,WAMI,EALJH,YAKK,IAAD,IAJJA,YACEC,EAGE,EAHFA,GAGE,IAFFzE,OAGIwB,GADF,EAFQ7D,MAER,EAFeyH,WAGH/K,EAAe,MAACoK,OAAD,EAACA,EAAIG,SACpC,OACE,kBAAC8S,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAErC,kBAAC0E,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,OAE/B,kBAAC,GAAD,KAAIzD,EAAQ,gBAEZ,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,kbCsNdkoB,G,kCAjOb,WAAY3pB,GAAQ,IAAD,uBACjB,cAAMA,IA4BR8T,OAAS,WAAO,IACNtX,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAEma,SAAS,IACzB/jB,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACduV,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAwjB,SAAS,EACT9E,QAAS,GACTC,OAAQxd,KAAKwd,WAEf,EAAKpX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAvDD,EA2DnB4c,aAAe,WAAO,IAAD,EACI,EAAK1V,MAAMgB,YAAlBC,GADG,EACXzE,OADW,EACHyE,IACVjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,kBAAC/E,EAAA,QAAD,KACG,EAAKqa,SAAS1Y,EAAQ,2BAAtB,MAAkDiD,OAAlD,EAAkDA,EAAI+V,QAEvD,kBAAC,GAAD,CACEhW,YAAa,EAAKhB,MAAMgB,YACxBmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,mBACfhC,QAAS,EAAK8X,SAGf,EAAK8V,iBAlFO,EAuFnBvR,YAAc,SAAOpW,GAAP,uBAAAtJ,EAAAC,OAAA,yDAC+B,EAAKoH,MAAMgB,YAA9CE,EADI,EACJA,SAAU1E,EADN,EACMA,OAAQwb,EADd,EACcA,aADd,WAAArf,EAAA,MAEeM,EAAK,cAAe,CAC7CgJ,OACArH,KAAM,MACN+G,MAAOnF,EAAOoF,cALJ,kBAEJnJ,SAKRuf,IACA9W,EAAS1E,EAAOoF,YARJ,6DAvFK,EAkGnBgoB,aAAe,WAAO,IAAD,EAKf,EAAK5pB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACA8W,EAJiB,EAIjBA,OAEM5W,EAAe,EAAKnB,MAApBmB,WACFnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,oCACE,kBAAC/E,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CAAGkJ,MAAI,GAAE3L,EAAQ,UAEnB,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN3D,eAAgB,gBAChBJ,cAAe,QAGjB,kBAAC,GAAD,CAAGiN,MAAI,GAAE3L,EAAQ,QACjB,kBAAC,GAAD,CAAG2L,MAAI,GAAE3L,EAAQ,aAnBvB,MAsBG+Z,OAtBH,EAsBGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAK4nB,SACJ,kBAAC,GAAD,KAAI5nB,EAAK4nB,UAET,kBAACptB,EAAA,EAAD,CACET,QAAS,kBAAM,EAAKqc,YAAYpW,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAK4nB,YAAL,MAAkB5oB,OAAlB,EAAkBA,EAAIhE,MACrB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,MACNqH,KAAMA,EAAKA,SAIf,kBAACqK,GAAA,EAAD,CAAQrP,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAEN,kBAAC,GAAD,KAAI6E,EAAK6nB,kBA5KrB,EAAKvtB,MAAQ,CACX9D,SAAU,KACV0e,QAAS,GACTC,OAAQxd,KAAKwd,UANE,E,yDAWjBlX,KAAKF,MAAMgB,YAAYgX,iB,+BAEhBlhB,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,M,+BA+JA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAQHyH,KAAKF,MAJPgB,YACY7G,EALP,EAKHqC,OAAUrC,MACV8G,EANG,EAMHA,GAGE8oB,EAASnwB,KAAK0W,KAAqB,GAAhB1W,KAAKwd,UACxBpZ,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,kBAAC8S,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAGsa,UAAW,MACjC,kBAACxZ,EAAA,EAAD,CACErF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7BD,OAAQ,CACN8V,IACEthB,EAAUC,YAAc,kBAAoB8zB,EAAS,UAG3D,kBAAC,UAAD,CAAM7tB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7CyH,KAAKwV,qB,GA1NI/U,a,4dCcKjF,IAAW1C,IAAI,UAAjC2C,G,GAAAA,MAAO8F,G,GAAAA,OACTuoB,GAAYruB,GAAQ,EAAI,IAAM,IAAMA,GAAQ,EAC5CsI,GAAgBtI,GAAQ,IAExBsuB,GAAyD,EAAzCrwB,KAAKoQ,OAAOvI,GAAS,KAAOuoB,IAElD,SAASrI,KACP,IAAIC,EAAYC,UAAUD,WAAaC,UAAUC,QAAUtb,OAAOub,MAGlE,MAAI,iBAAiBC,KAAKJ,GACjB,UAGL,WAAWI,KAAKJ,GACX,UAIL,cAAcI,KAAKJ,KAAepb,OAAOyb,SAEpC,MAGF,U,IAuTMiI,G,qLAnTb3tB,MAAQ,CACN9D,SAAU,KACV0xB,YAAa,EACbC,qBAAqB,G,EAcvBC,sBAAwB,SAACC,GACF,WAAjBA,IACF,EAAKC,sBACL,EAAKC,iB,EAITA,aAAe,WAAO,IAAD,EACI,EAAKxqB,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GAEVG,EACY,QAAhB7C,UAASC,GACLisB,KAAcC,gBAAgBC,SAASC,aACvCH,KAAcC,gBAAgBC,SAASE,eAAe,GACtC,YAAhBtsB,UAASC,GACTisB,KAAcK,YAAYC,iBACV,QAAhBxsB,UAASC,GACTqjB,UAAUmJ,SACV,KAGF5pB,KAAM,MAAKH,OAAL,EAAKA,EAAIG,SACjBnI,EAAK,gBAAiB,CACpBmI,SACAQ,WAAYpF,EAAOoF,c,EAIzB2oB,oBAAsB,0CAAA5xB,EAAAC,OAAA,qDACG,EAAKoH,MAAMgB,YAA1BxE,EADY,EACZA,OAAQyE,EADI,EACJA,IACZgqB,IAAcC,UAA4B,QAAhB3sB,UAASC,GAFnB,mCAAA7F,EAAA,MAGuBmjB,IACvCA,MAJgB,mBAGFqP,EAHE,EAGVpP,OAGJqP,EAAcD,EACK,YAAnBA,EAPc,oCAAAxyB,EAAA,MAQSmjB,IACvBA,MATc,iBAQRC,EARQ,EAQRA,OAGRqP,EAAcrP,EAXE,WAaE,YAAhBqP,EAbc,wBAchB,EAAKtpB,SAAS,CAAEsoB,qBAAqB,IAEf,MAAhB,MAAFnpB,OAAA,EAAAA,EAAIoqB,YACNpyB,EAAK,gBAAiB,CACpBoyB,UAAW,GACXzpB,WAAYpF,EAAOoF,aAnBP,8CAAAjJ,EAAA,MAyBG2yB,2BAzBH,SAyBZ3pB,EAzBY,OAyB0C+I,SACnD,MAAKzJ,OAAL,EAAKA,EAAIoqB,YAChBpyB,EAAK,gBAAiB,CACpBoyB,UAAW1pB,EACXC,WAAYpF,EAAOoF,aAGvB,EAAKE,SAAS,CAAEsoB,qBAAqB,IAhCnB,8D,EAoCtBmB,YAAc,YAAsB,IAAnBrxB,EAAkB,EAAlBA,KAAkB,KAAZ7C,MAOjB,EAAK2I,OALPmB,EAF+B,EAE/BA,WAF+B,IAG/BH,YACEH,EAJ6B,EAI7BA,SACU1G,EALmB,EAK7BqC,OAAUrC,MAId,OACE,kBAACkC,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN3D,eAAgB,SAChBJ,cAAe,MACfwI,SAAU,OACVsF,eAAgB,KAGjBtQ,EAAKgF,KAAI,SAACssB,EAAMn0B,GACf,IAAM8E,EAAUC,EAAKovB,EAAK1Z,UAC1B,OACE,kBAACzV,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CAAEP,MAAOquB,GAAWjrB,WAAY,WAEvC,kBAACtC,EAAA,EAAD,CACEP,MAAO,CACL8G,YAAa,EACbC,YAAa,OACbtG,gBAAiBxC,EAAMyC,UACvBoC,aAAc,GACdrD,MAAOquB,GAAY,GACnBvoB,OAAQuoB,GAAY,GACpBltB,eAAgB,SAChBiC,WAAY,UAEd/C,QAAS,SAACiM,GACR9G,EAAWgC,SAASqoB,EAAKzZ,IAEzB,IAAM0Z,EAAW,CACfpC,OAAQ,YAAcmC,EAAKzZ,GAC3B2Z,UAAWzjB,EAAEnE,YAAY4nB,UACzBC,UAAW1jB,EAAEnE,YAAY6nB,UACzBC,UAAWtqB,KAAKzG,OAGlBgG,EAAS,CAAEjG,KAAM,eAAgBsD,MAAOutB,MAGzCtvB,GACC,kBAACA,EAAD,CACEc,KAAMuuB,EAAK3vB,KACXuB,MAAO4sB,GAAY,IAAM,EACzB9sB,MAAO/C,EAAMgD,iBAInB,kBAACd,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBmxB,EAAKpsB,MAChDosB,EAAKxZ,iB,2DAtIlB6Z,IAASxrB,iBAAiB,SAAUH,KAAKmqB,uBAEzCnqB,KAAKqqB,sBACLrqB,KAAKsqB,iB,6CAILqB,IAASC,oBAAoB,SAAU5rB,KAAKmqB,yB,uCAwI5B,IAAD,SAGXnqB,KAAKF,MADPgB,YAAyBC,GAFZ,EAEEJ,SAFF,EAEYI,IAAIzE,EAFhB,EAEgBA,OAGvB4tB,EAAwBlqB,KAAK3D,MAA7B6tB,oBAYF2B,EAVK,eACN3b,GAASnP,EAAIzE,EAAOrC,OAAOgvB,QAC5B,SAAC3T,EAAU8O,GAAX,qBAA2B9O,GAA3B,KAAwC8O,EAAQzS,YAChD,KAHO,KAKNa,GAAUzR,EAAIzE,EAAOrC,OAAOgvB,QAC7B,SAAC3T,EAAU8O,GAAX,qBAA2B9O,GAA3B,KAAwC8O,EAAQzS,YAChD,MAGmBS,QAAO,SAACkZ,GAAD,OAAWA,EAAK5Z,WAAa4Z,EAAKtY,WAE1DlV,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BsJ,EAAO,CACXqhB,EAASC,MAAM,EAAG/B,IAClB8B,EAASC,MAAM/B,GAA+B,EAAhBA,IACd,EAAhBA,GAAoB8B,EAASzyB,YACzBf,EACAwzB,EAASC,MAAsB,EAAhB/B,GAAmB8B,EAASzyB,SAC/CgZ,QAAO,SAAC/a,GAAD,QAASA,KAElB,OACE,kBAAC8E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAClB2pB,GACC,kBAAC3tB,EAAA,EAAD,CACET,QAAS,WACS,QAAhBuC,UAASC,GACLwhB,UAAQC,QAAQ,iBAChBgM,IACEA,OAIR,kBAAC5vB,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,EACTH,cAAe,MACfqC,WAAY,WAGd,kBAACiH,GAAA,EAAD,CACE/I,KAAK,qBACLC,MAAM,MACNhB,MAAO,CAAEc,YAAa,MAExB,kBAAC,GAAD,KAAIgB,EAAQ,8BAKlB,kBAAC,KAAD,CACEkuB,IAAK,SAAC3yB,GACJ,EAAK4yB,UAAY5yB,GAEnBmR,KAAMA,EACNZ,WAAY5J,KAAKqrB,YACjBa,YAAazwB,GACb0wB,aAAc,SAACh1B,GAAD,OAAW,EAAKyK,SAAS,CAAEqoB,YAAa9yB,KACtD2yB,UAAWruB,KAGb,kBAAC,KAAD,CACE2wB,WAAY5hB,EAAKpR,OACjBizB,eAAgBrsB,KAAK3D,MAAM4tB,YAE3BqC,SAAU,CACR7wB,MAAO,GACP8F,OAAQ,GACRzC,aAAc,EACd4e,iBAAkB,EAClBjhB,gBAAiB,6BAEnB8vB,iBACE,GAIFC,mBAAoB,GACpBC,iBAAkB,Q,+BAKhB,IAAD,EAKHzsB,KAAKF,MAAMgB,YAHbxE,EAFK,EAELA,OAEAyE,GAJK,EAGLzE,OAAUrC,MAHL,EAIL8G,IAGIjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAY9B2qB,EAVK,eACN3b,GAASnP,EAAIzE,EAAOrC,OAAOgvB,QAC5B,SAAC3T,EAAU8O,GAAX,qBAA2B9O,GAA3B,KAAwC8O,EAAQzS,YAChD,KAHO,KAKNa,GAAUzR,EAAIzE,EAAOrC,OAAOgvB,QAC7B,SAAC3T,EAAU8O,GAAX,qBAA2B9O,GAA3B,KAAwC8O,EAAQzS,YAChD,MAGmBS,QAAO,SAACkZ,GAAD,OAAWA,EAAK5Z,WAAa4Z,EAAKtY,WAE5D0Z,EAAU,KAWd,MAVoB,QAAhBruB,UAASC,KACwB,YAA/BmjB,OACFiL,EAAU52B,EAAUI,iBAGa,QAA/BurB,OACFiL,EAAU52B,EAAUG,cAIJ,QAAhBoI,UAASC,GACPyF,GAEA,kBAACiQ,EAAA,EAAD,KACG0Y,GACC,kBAACnwB,EAAA,EAAD,CAAkBT,QAAS,kBAAMgkB,UAAQC,QAAQ2M,KAC/C,kBAACvwB,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,EACTH,cAAe,MACfqC,WAAY,WAGd,kBAACiH,GAAA,EAAD,CACE/I,KAAK,qBACLC,MAAM,MACNhB,MAAO,CAAEc,YAAa,MAExB,kBAAC,GAAD,KAAIgB,EAAQ,qBAKjBkC,KAAKqrB,YAAY,CAAErxB,KAAM6xB,KAIvB,kBAAC,GAAD,KAAI/tB,EAAQ,gBAGhBkC,KAAK2sB,qB,GAhTGlsB,a,kbCmDJmsB,G,qLA9FbvwB,MAAQ,CACN9D,SAAU,M,EAUZs0B,KAAO,SAAC9vB,GAAU,IAECT,EACb,EAAKwD,MADPgB,YAAexE,OAGjBtE,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsJ,WAAYpF,EAAOoF,WACnB3E,WAGDzE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,2DA7BC,IAAD,EACZmE,EAAI,SAAGiD,KAAKF,MAAMmB,WAAW5E,MAAMyX,aAA/B,EAAG,EAAoC/W,KAC7CA,GACFiD,KAAK4B,SAAS,CAAE7E,W,mCA6BN,IAAD,SAGPiD,KAAKF,MADPgB,YAAexE,EAFN,EAEMA,OAAQyE,EAFd,EAEcA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEnBlB,KAAK3D,MAAdU,KACR,OACE,kBAACZ,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO4Q,UAC3BpH,YAAa3F,EAAQ,QACrByO,qBAAsBjQ,EAAOrC,MAAMuS,kBACnCxO,MAAOgC,KAAK3D,MAAMU,KAClB2G,aAAc,SAAC3G,GAAD,OAAU,EAAK6E,SAAS,CAAE7E,YAE1C,kBAAC,GAAD,CACE9C,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAK+wB,KAAK,EAAKxwB,MAAMU,SAEtC,kBAAC,GAAD,CACE9C,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,gBACfhC,QAAS,kBAAM,EAAK+wB,KAAL,MAAU9rB,OAAV,EAAUA,EAAIhE,Y,+BAK3B,IAAD,EAOHiD,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aAEY7G,GALP,EAIH8G,GAJG,EAKHzE,OAAUrC,OAGN1B,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAAC4D,EAAA,QAAD,CAAMH,MAAOA,GAAM/B,GAAO6Q,WACxB,kBAAC3O,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KAEHyH,KAAK0U,mB,GAxFOjU,a,UCgCRqsB,GAnCF,SAAC,GAA+D,IAA7D7rB,EAA4D,EAA5DA,WAAYpF,EAAgD,EAAhDA,MAAOgW,EAAyC,EAAzCA,GAAI/V,EAAqC,EAArCA,QAASixB,EAA4B,EAA5BA,SAAUpxB,EAAkB,EAAlBA,KAAM1B,EAAY,EAAZA,MACxDgC,EAAU8wB,GAAYpxB,EAAOO,EAAK6wB,GAAY,KACpD,OACE,kBAACxwB,EAAA,EAAD,CACET,QAAS,kBAAOA,EAAUA,IAAYmF,EAAWgC,SAAS4O,KAE1D,kBAAC1V,EAAA,QAAD,CACEH,MAAO,CACL6C,WAAY,SACZjC,eAAgB,gBAChBJ,cAAe,MACfK,kBAAmB,GACnB6b,kBAAmB,GACnBC,kBAAmB,QACnBF,gBAAiB,KAGnB,kBAACtc,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,KACnBQ,GACC,kBAACA,EAAD,CAASc,KAAMpB,EAAMuB,KAAM,GAAIF,MAAO/C,EAAME,eAGhD,kBAAC,UAAD,CAAM6B,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB0B,IAE9C,kBAAC,KAAD,CACEkB,KAAK,uBACLG,KAAM,GACNF,MAAO/C,EAAME,iB,kbCiDRoa,G,yIA3EH,IAAD,EAOHvU,KAAKF,MALPmB,EAFK,EAELA,WAFK,IAGLH,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACmB,QAAhBkC,UAASC,IACR,kBAAC,GAAD,CACErE,MAAOA,EACP4B,MAAOiC,EAAQ,eACfhC,QAAS,kBAAMkxB,OACfD,SAAS,YACTpxB,KAAK,UAIT,kBAAC,GAAD,CACE1B,MAAOA,EACP4B,MAAOiC,EAAQ,sBACfhC,QAAS,kBAAMgkB,UAAQC,QAAQ,oCAC/BgN,SAAS,YACTpxB,KAAK,UAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,YACf+T,GAAG,WACHkb,SAAS,YACTpxB,KAAK,eAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,iBACf+T,GAAG,UACHkb,SAAS,YACTpxB,KAAK,eAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,SACf+T,GAAG,YACHkb,SAAS,YACTpxB,KAAK,eAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,cACf+T,GAAG,aACHkb,SAAS,SACTpxB,KAAK,YAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,UACf+T,GAAG,SACHkb,SAAS,YACTpxB,KAAK,c,GArEM8E,aCgENwsB,GA5DK,SAAC,GAAwC,EAAtChsB,WAAuC,IAAZF,EAAW,EAA1BD,YAAeC,GAC1CG,EAASzK,EAAS,MAACsK,OAAD,EAACA,EAAIG,QAEvBgsB,EAAa,GAmDnB,OAlDAA,EAAWC,GACT,kBAAChxB,EAAA,QAAD,KACE,kBAAC,GAAD,qBAGJ+wB,EAAWE,GACT,kBAACjxB,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,GAAD,8BACA,kBAAC,GAAD,ihBAWA,kBAAC,GAAD,oCACA,kBAAC,GAAD,6TAQA,kBAAC,GAAD,uDACA,kBAAC,GAAD,2FAIA,kBAAC,GAAD,oIAIA,kBAAC,GAAD,wCACA,kBAAC,GAAD,8FAIA,kBAAC,GAAD,iEACA,kBAAC,GAAD,uKAQF,kBAAC8N,EAAA,EAAD,CAAYqK,sBAAuB,CAAExf,WAAY,WAC9CquB,EAAWhsB,KCaH+rB,GAxEK,SAAC,GAAwC,EAAtChsB,WAAuC,IAAZF,EAAW,EAA1BD,YAAeC,GAC1CssB,EAAU,CAEhBA,GAAA,cACAA,GAAA,woGA0DMnuB,EAAOmuB,EAFE52B,EAAS,MAACsK,OAAD,EAACA,EAAIG,SAI7B,OACE,kBAAC8S,EAAA,EAAD,KACE,kBAAC7X,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,GAAD,KAAIhH,M,kbCqJGwK,G,qLArNbrN,MAAQ,CACNsN,KAAM,I,EAwBRC,WAAa,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAAkB,KAAZ7C,MAGhB,EAAK2I,MADPgB,aAAeC,EAFe,EAEfA,GAAIzE,EAFW,EAEXA,OAAQ0E,EAFG,EAEHA,SAGvBlD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B2I,EAAUnQ,KAAKoQ,OAAO9P,EAAK+P,OAAS3I,KAAKzG,OAAS,KAExD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,KAAIxC,EAAK+C,MACT,kBAAC,KAAD,CACEf,MAAO,CAAEgO,WAAY,IACrBhI,MAAO6H,EACPI,WAAY,CAAExN,gBAAiB,WAC/ByN,cAAe,CAAElN,MAAO,SACxBiF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE5B,kBAAC,GAAD,CACEpI,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,YACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd3E,KAAM/C,EAAK+C,SAGZzE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASH,EAAT,EAASA,SACb,EAAKqJ,SAAS,CAAErJ,aAChB,EAAK6R,eACLpJ,EAAS1E,EAAOoF,YAHZ,+DAKL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,W,EAO5B8R,aAAe,WACb,OAAO,kBAAC,GAAD,KAAI,EAAKrO,MAAM9D,W,EAGxB4f,YAAc,SAAOpW,GAAP,uBAAAtJ,EAAAC,OAAA,yDAC+B,EAAKoH,MAAMgB,YAA9CE,EADI,EACJA,SAAU8W,EADN,EACMA,aAAcxb,EADpB,EACoBA,OADpB,WAAA7D,EAAA,MAEeM,EAAK,cAAe,CAC7CgJ,OACArH,KAAM,OACN+G,MAAOnF,EAAOoF,cALJ,kBAEJnJ,SAKRuf,IACA9W,EAAS1E,EAAOoF,YARJ,6D,EAWdgoB,aAAe,WAAO,IAAD,EAKf,EAAK5pB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACA8W,EAJiB,EAIjBA,OAEM5W,EAAe,EAAKnB,MAApBmB,WAEFnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,oCACE,kBAAC/E,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,GACX4Y,iBAAkB,KAGpB,kBAACvhB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN/D,cAAe,MACfI,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,SAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAzBjB,MA6BG+Z,OA7BH,EA6BGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjB5b,kBAAmB,GACnB6b,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB4H,EAAKA,OAEnD,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKurB,UACJ,kBAAC,UAAD,CAAMtxB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAKurB,WAGR,kBAAC/wB,EAAA,EAAD,CACET,QAAS,kBAAM,EAAKqc,YAAYpW,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKurB,aAAL,MAAmBvsB,OAAnB,EAAmBA,EAAIhE,MACtB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,OACNqH,KAAMA,EAAKA,SAIf,kBAACqK,GAAA,EAAD,CAAQrP,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,UAAD,CAAMlB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAKwrB,mB,2DAlLpBvtB,KAAKoK,eACLpK,KAAKF,MAAMgB,YAAYgX,iB,mCAGZzN,GAAQ,IAAD,OAClBrS,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASiR,EAAT,EAASA,KACb,EAAK/H,SAAS,CAAE+H,SADZ,+DAGLhR,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BA0KV,IAAD,EAIHoH,KAAKF,MADQiB,GAHV,EAELE,WAFK,EAGLH,YAAeC,IAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACgK,GAAA,EAAD,CACEC,KAAMxK,KAAK3D,MAAMsN,KACjBC,WAAY5J,KAAK4J,WACjBa,oBAAqBzK,KAAK0K,aAC1BsQ,oBAAqBhb,KAAK0pB,aAC1B8D,mBAAoB,kBAAC,GAAD,KAAI1vB,EAAQ,qB,GA/MvB2C,a,kbCoOJgtB,G,kCAjOb,WAAY3tB,GAAQ,IAAD,uBACjB,cAAMA,IAaR8T,OAAS,WAAO,IAAD,EACU,EAAK9T,MAAMgB,YAA1BxE,EADK,EACLA,OADK,EACGyE,GAEhB,EAAKa,SAAS,CAAEma,SAAS,IACzB/jB,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACduV,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAwjB,SAAS,EACT7E,OAAQxd,KAAKwd,SACbD,QAAS,KAEX,EAAKnX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAxCD,EA4CnB4c,aAAe,WAAO,IAAD,EACI,EAAK1V,MAAMgB,YAAlBC,GADG,EACXzE,OADW,EACHyE,IACVjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACG,EAAKqa,SAAS1Y,EAAQ,uBAAtB,MAA8CiD,OAA9C,EAA8CA,EAAI8V,SAEnD,kBAAC,GAAD,CACE/V,YAAa,EAAKhB,MAAMgB,YACxBmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,gBACfhC,QAAS,EAAK8X,SAGf,EAAK8V,iBApEO,EAyFnBvR,YAAc,SAAOpW,GAAP,uBAAAtJ,EAAAC,OAAA,yDAC+B,EAAKoH,MAAMgB,YAA9CE,EADI,EACJA,SAAU1E,EADN,EACMA,OAAQwb,EADd,EACcA,aADd,WAAArf,EAAA,MAEeM,EAAK,cAAe,CAC7CgJ,OACArH,KAAM,UACN+G,MAAOnF,EAAOoF,cALJ,kBAEJnJ,SAKRuf,IACA9W,EAAS1E,EAAOoF,YARJ,6DAzFK,EAoGnBgoB,aAAe,WAAO,IAAD,EAKf,EAAK5pB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACA8W,EAJiB,EAIjBA,OAEM5W,EAAe,EAAKnB,MAApBmB,WAEFnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,oCACE,kBAAC/E,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CAAGkJ,MAAI,GAAE3L,EAAQ,UAEnB,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN3D,eAAgB,gBAChBJ,cAAe,QAGjB,kBAAC,GAAD,CAAGiN,MAAI,GAAE3L,EAAQ,kBACjB,kBAAC,GAAD,CAAG2L,MAAI,GAAE3L,EAAQ,aAnBvB,MAsBG+Z,OAtBH,EAsBGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAK2rB,aACJ,kBAAC,GAAD,KAAI3rB,EAAK2rB,cAET,kBAACnxB,EAAA,EAAD,CACET,QAAS,kBAAM,EAAKqc,YAAYpW,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAK2rB,gBAAL,MAAsB3sB,OAAtB,EAAsBA,EAAIhE,MACzB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,UACNqH,KAAMA,EAAKA,SAIf,kBAACqK,GAAA,EAAD,CAAQrP,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAEN,kBAACf,EAAA,QAAD,KACE,kBAAC,GAAD,KAAI4F,EAAK4rB,uBAjLvB,EAAKtxB,MAAQ,CACX9D,SAAU,KACV2e,OAAQxd,KAAKwd,SACbD,QAAS,IANM,E,yDAWjBjX,KAAKF,MAAMgB,YAAYgX,iB,+BA8DhBlhB,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,CAAG7C,MAAO,CAAEc,YAAa,KAAOlG,GAChC,kBAAC,GAAD,KAAIoH,M,+BA0GA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAOHyH,KAAKF,MAJPgB,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC8S,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7CyH,KAAKwV,qB,GA1NK/U,a,kbCuGPmtB,G,qLAlGbvxB,MAAQ,CACN9D,SAAU,M,EAGZs1B,KAAO,WAAO,IACJvxB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd3E,KAAM,EAAKV,MAAMU,KACjB0I,QAAS,EAAKpJ,MAAMoJ,YAGrBnN,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,2DAhCC,IAAD,EACZmE,EAAI,SAAGiD,KAAKF,MAAMmB,WAAW5E,MAAMyX,aAA/B,EAAG,EAAoC/W,KAC7CA,GACFiD,KAAK4B,SAAS,CAAE7E,W,mCAiCN,IAAD,SAMPiD,KAAKF,MAJPgB,YACEC,EAHO,EAGPA,GACU9G,EAJH,EAIPqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO4Q,UACpBpH,YAAa3F,EAAQ,QACrByO,qBAAsBtS,EAAMuS,kBAC5BxO,MAAOgC,KAAK3D,MAAMU,KAClB2G,aAAc,SAAC3G,GAAD,OAAU,EAAK6E,SAAS,CAAE7E,YAE1C,kBAACyG,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO4Q,UACpBpH,YAAa3F,EAAQ,WACrByO,qBAAsBtS,EAAMuS,kBAC5BxO,MAAOgC,KAAK3D,MAAMoJ,QAClB/B,aAAc,SAAC+B,GAAD,OAAa,EAAK7D,SAAS,CAAE6D,eAG7C,kBAACtJ,EAAA,QAAD,CACEH,MAAO,CACL8I,UAAW,KAGb,kBAAC,GAAD,CACE7K,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAK+xB,c,+BAMpB,IAAD,EAOH7tB,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aAEY7G,GALP,EAIH8G,GAJG,EAKHzE,OAAUrC,OAGN1B,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAACyb,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KAEHyH,KAAK0U,cAGR,kBAAC,GAAD,CAAQ5T,YAAad,KAAKF,MAAMgB,mB,GApGrBL,a,kbC4KJ0I,M,qLAzKb9M,MAAQ,CACN6O,MAAO,GACPE,SAAU,GACVxS,MAAO,M,+CAGA,IAAD,SAIFoH,KAAKF,MAJH,KAEJmB,WAFI,EAGJH,aAAeH,EAHX,EAGWA,SAAUK,EAHrB,EAGqBA,SAHrB,EAKsBhB,KAAK3D,MAAzB6O,EALF,EAKEA,MAAOE,EALT,EAKSA,SAEfpT,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAE8S,QAAOE,SAAUsB,KAAIC,QAAQvB,OAEnD9S,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOsU,GAAP,SAAAnU,EAAAC,OAAA,uDACJG,QAAQuF,IAAI,eAAgBwO,GAExBA,EAAahU,MACf,EAAKgJ,SAAS,CAAEhJ,MAAOgU,EAAahU,SAGpC+H,EAAS,CACPjG,KAAM,4BACNsD,MAAO4O,EAAalL,aAGtBV,EAAS4L,EAAalL,YAEtB,EAAK5B,MAAMyJ,UAAUL,uBAAuB0D,EAAalL,YAEzD,EAAKE,SAAS,CAAEhJ,MAAO,KAAM2S,QAASqB,EAAarB,WAhBjD,kBAmBGqB,GAnBH,+DAqBLjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOHoH,KAAKF,MALPmB,EAFK,EAELA,WAFK,IAGLH,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRvJ,QAAS,GACTmC,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzC,KAEHoH,KAAK3D,MAAMkP,QACV,kBAAC,UAAD,CAAMvP,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMkP,SAE7C,kBAACpP,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,UAExC,kBAAC0F,GAAA,EAAD,CACEC,YAAa3F,EAAQ,SACrByO,qBAAsBtS,EAAMuS,kBAC5B9I,aAAc,SAACwH,GAAD,OAAW,EAAKtJ,SAAS,CAAEsJ,WACzClN,MAAOgC,KAAK3D,MAAM6O,MAClBlP,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,aAExC,kBAAC0F,GAAA,EAAD,CACEiJ,iBAAe,EACf/I,aAAc,SAAC0H,GAAD,OAAc,EAAKxJ,SAAS,CAAEwJ,cAC5CpN,MAAOgC,KAAK3D,MAAM+O,SAClBpP,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAOA,EACP4B,MAAOiC,EAAQ,SACfhC,QAAS,kBAAM,EAAKkQ,YAIxB,kBAAC7P,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTqI,SAAU,OACVpI,eAAgB,kBAGlB,kBAACL,EAAA,EAAD,CACET,QAAS,kBAAMmF,EAAWgC,SAAS,iBAEnC,kBAAC,UAAD,CACEjH,MAAO,CACLkK,OAAQ,GACRhD,SAAU,GACV2J,mBAAoB,cAGrB/O,EAAQ,cAIb,kBAACvB,EAAA,EAAD,CACET,QAAS,kBAAMmF,EAAWgC,SAAS,oBAEnC,kBAAC,UAAD,CACEjH,MAAO,CACLkK,OAAQ,GACRhD,SAAU,GACV2J,mBAAoB,cAGrB/O,EAAQ,4B,GA9JTT,IAAMoD,Y,qkBCF1B,IAgOeqtB,GAhOM,SAAC,GAahB,EAZJ7sB,WAYK,IAVM6S,EAUP,EAXJ7S,WACE5E,MAASyX,OAUP,IARJhT,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACA8W,EAKE,EALFA,OACAC,EAIE,EAJFA,aACA9W,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BqY,EAAc,CAClBC,cAAe1b,EAAQ,iBACvB2b,OAAQ3b,EAAQ,UAChB4b,SAAU5b,EAAQ,YAClB+Y,QAAS/Y,EAAQ,iBACjB6b,WAAY7b,EAAQ,cACpB8b,IAAK9b,EAAQ,OACb+b,QAAS/b,EAAQ,WACjBgc,YAAahc,EAAQ,eACrB0H,KAAM1H,EAAQ,cACd6L,KAAM7L,EAAQ,QACdic,OAAQjc,EAAQ,WAGZiE,EAAI,MAAG+R,OAAH,EAAGA,EAAQ/R,KACfrH,EAAI,MAAGoZ,OAAH,EAAGA,EAAQpZ,KAlBjB,EAoB4B+C,mBAAS,MApBrC,WAoBGlF,EApBH,KAoBa0S,EApBb,OAqBwBxN,mBAAS,IArBjC,WAqBGswB,EArBH,KAqBWC,EArBX,OAsBsBvwB,mBAAS,IAtB/B,WAsBGmd,EAtBH,KAsBU2F,EAtBV,OAuBkB9iB,mBAAS,IAvB3B,WAuBGwwB,EAvBH,KAuBQC,EAvBR,KAyBEC,EAAO,MAAGtW,OAAH,EAAGA,EAAQO,MAAK,SAAC/e,GAAD,OAAOA,EAAE0I,OAASA,KAE/CvK,EAAOsgB,GAEP,IA0DMsW,EAAW,CACf5xB,cAAe,MACfI,eAAgB,gBAChB6b,gBAAiB,IAGb4V,EAAa9U,EAAY7e,GAE/B,IAAK2zB,EACH,OAAO,kBAAC,GAAD,KAAIvwB,EAAQ,gBAGrB,IAAMwwB,EAAe5zB,EAAN,SACT6zB,EAAc7zB,EAAN,QACR8zB,EAAc9zB,EAAN,QACR+zB,EAAe/zB,EAAN,SACf,OACE,kBAACsZ,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACpCpE,GAAY,kBAAC,GAAD,KAAIA,IAEd,MAAFwI,OAAA,EAAAA,EAAIhE,QAAe,MAAPoxB,OAAA,EAAAA,EAAUK,OAAV,MAAwBztB,OAAxB,EAAwBA,EAAIhE,MACvC,kBAACZ,EAAA,QAAD,KACE,kBAAC,GAAD,CAAGH,MAAO,CAAE+C,WAAY,SACrBsvB,EADH,IACgBvwB,EAAQ,QADxB,IACkCiE,GAGlC,kBAAC5F,EAAA,QAAD,CAAMH,MAAOoyB,GACX,kBAAC,GAAD,KAAItwB,EAAQ,WACZ,kBAAC,GAAD,cAAK1G,EAAa+2B,EAAQG,IAA1B,OAGDH,EAAQI,IACP,kBAACpyB,EAAA,QAAD,CAAMH,MAAOoyB,GACX,kBAAC,GAAD,KAAItwB,EAAQ,UACZ,kBAAC,GAAD,KAAIqwB,EAAQI,KAIhB,kBAAC,GAAD,CACEvyB,MAAO,CAAEsO,eAAgB,IACzBxO,QAlGQ,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACWM,EAAK,YAAa,CAC3C0I,MAAOnF,EAAOoF,WACdK,OACArH,UAJc,gBACRnC,EADQ,EACRA,SAKR0S,EAAY1S,GACZyI,EAAS1E,EAAOoF,YAChBoW,IARgB,6DAmGR7d,MAAOA,EACP4B,MAAOiC,EAAQ,eAGjB,kBAAC3B,EAAA,QAAD,CAAMH,MAAOoyB,GACX,kBAAC,GAAD,KAAItwB,EAAQ,WACZ,kBAAC,GAAD,KAAIqwB,EAAQM,GAAZ,MAEF,kBAAC,GAAD,CACEzyB,MAAO,CAAEsO,eAAgB,IACzBxO,QAlGK,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcM,EAAK,eAAgB,CAC9C0I,MAAOnF,EAAOoF,WACdK,OACArH,UAJW,gBACLnC,EADK,EACLA,SAKR0S,EAAY1S,GACZyI,EAAS1E,EAAOoF,YAChBoW,IARa,6DAmGL7d,MAAOA,EACP4B,MAAOiC,EAAQ,YAGjB,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLsO,eAAgB,GAChB9N,cAAe,MACfqC,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO4Q,WAApB,IAA+BtK,KAAM,IAC1CkD,YAAa3F,EAAQ,QACrByO,qBAAsBtS,EAAMuS,kBAC5BxO,MAAO+vB,EACPrqB,aAAc,SAACrM,GAAD,OAAO22B,EAAU32B,MAEjC,kBAAC,GAAD,CAAQyE,QA1GD,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACYM,EAAK,WAAY,CAC1C0I,MAAOnF,EAAOoF,WACdK,OACArH,OACAmX,GAAIkc,KALS,gBACPx1B,EADO,EACPA,SAMRyI,EAAS1E,EAAOoF,YAChBoW,IACA7M,EAAY1S,GATG,6DA0GoB0B,MAAOA,EAAO4B,MAAOiC,EAAQ,WAGhD,kBAATpD,GACC,kBAACyB,EAAA,QAAD,CACEH,MAAO,CACLsO,eAAgB,GAChB9N,cAAe,MACfqC,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO4Q,WAApB,IAA+BtK,KAAM,IAC1CkD,YAAa3F,EAAQ,kBACrByO,qBAAsBtS,EAAMuS,kBAC5BxO,MAAO4c,EACPlX,aAAc,SAACrM,GAAD,OAAOkpB,EAASlpB,MAEhC,kBAAC,GAAD,CACEyE,QArGM,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACSM,EAAK,cAAe,CAC7C0I,MAAOnF,EAAOoF,WACdK,OACArH,OACAkgB,WALgB,gBACVriB,EADU,EACVA,SAMRyI,EAAS1E,EAAOoF,YAChBoW,IACA7M,EAAY1S,GATM,6DAsGN0B,MAAOA,EACP4B,MAAOiC,EAAQ,kBAKX,SAATpD,GACC,kBAACyB,EAAA,QAAD,CACEH,MAAO,CACLsO,eAAgB,GAChB9N,cAAe,MACfqC,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO4Q,WAApB,IAA+BtK,KAAM,IAC1CkD,YAAa3F,EAAQ,QACrByO,qBAAsBtS,EAAMuS,kBAC5BxO,MAAOiwB,EACPvqB,aAAc,SAACrM,GAAD,OAAO62B,EAAO72B,MAE9B,kBAAC,GAAD,CACEyE,QAxII,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACWM,EAAK,YAAa,CAC3C0I,MAAOnF,EAAOoF,WACdK,OACArH,OACAuzB,SALc,gBACR11B,EADQ,EACRA,SAMRyI,EAAS1E,EAAOoF,YAChBoW,IACA7M,EAAY1S,GATI,6DAyIJ0B,MAAOA,EACP4B,MAAOiC,EAAQ,iBAKrB,O,GCpNgBtC,IAAW1C,IAAI,UAAzB2C,I,GAAR8F,O,GAAQ9F,OAmKDizB,GA9JA,SAAC,GAOT,IAAD,IANJ5tB,YACExE,EAKE,EALFA,OACAyE,EAIE,EAJFA,GAEU9G,GAER,EAHF+G,SAGE,EAFF1E,OAAUrC,OAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAE0BzD,oBAAS,GAFnC,WAEGse,EAFH,KAEYmE,EAFZ,OAGwBziB,mBAAS,IAHjC,WAGGkxB,EAHH,KAGWC,EAHX,OAM4BnxB,mBAAS,MANrC,WAMGlF,EANH,KAMa0S,EANb,OAOwBxN,mBAAS,IAPjC,WAOG6Y,EAPH,KAOW2B,EAPX,OAQsBxa,mBAAS,IAR/B,WAQGmd,EARH,KAQU2F,EARV,OASkB9iB,oBAAS,GAT3B,WASGoxB,EATH,KASQC,EATR,OAUoBrxB,mBAAS,MAV7B,WAUG/C,EAVH,KAUSwd,EAVT,KAYIvC,EAA+BuD,2BAA/BvD,2BAuBRne,GArBkB,4BAAAiB,EAAAC,OAAA,uDAChBwnB,GAAW,GADK,WAAAznB,EAAA,MAGSK,EAAI,WAHb,gBAGR61B,EAHQ,EAGRA,OACRzO,GAAW,GACX0O,EAAUD,GALM,+DAgDlB,OACE,kBAACxyB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3Buf,GAAW,kBAACzP,GAAA,EAAD,MACX/T,GAAY,kBAAC,GAAD,KAAIA,IAGnB,kBAAC4D,EAAA,QAAD,KAGE,kBAACA,EAAA,QAAD,CAAMH,MAAO,CAAEsO,eAAgB,KAC7B,kBAACnO,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,CACEhD,MAAaiC,EAAN+wB,EAAc,MAAiB,QACtC/yB,QAAS,kBAAMgzB,GAAQD,IACvB7yB,MAAO,CAAEuE,KAAM,EAAG+J,eAAgB,GAAIN,WAAY,MAGpD,kBAACxG,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAO,CAACsY,GAAOra,GAAO4Q,UAAW,CAAEb,WAAY,KAC/ChM,MAAOsY,EACP5S,aAAcuU,EACdxU,YAAa3F,EAAQ,YAGvB,kBAAC,GAAD,CACEjC,MAAciC,EAAPpD,GAA+B,YACtCoB,QArDO,WAEjB,IAAMizB,EAAa,CAAC,UAAW,SAAU,OAAQ,aAAc,WAEzD5wB,EAAU4wB,EAAW/vB,KAAI,SAACtE,GAAD,OAAUoD,EAAQpD,MAEjDyD,EAAQ+b,KAAKpc,EAAQ,WACrB,IACMqc,EAAoBhc,EAAQ/E,OAAS,EAE3Cuc,EACE,CACExX,UACAgc,oBACAC,4BAP2B/hB,IAS7B,SAACud,GACKA,EAAcmZ,EAAW31B,OAAS,GACpC8e,EAAQ6W,EAAWnZ,QAoCf5Z,MAAO,CAAEuE,KAAM,EAAG+J,eAAgB,GAAIN,WAAY,MAGpD,kBAAC,GAAD,CAAGhO,MAAO,CAAEgO,WAAY,KAAOlM,EAAQ,QAEvC,kBAAC0F,GAAA,EAAD,CACE+I,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAO,CAACsY,GAAOra,GAAO4Q,UAAW,CAAEb,WAAY,KAC/ChM,MAAO4c,EACPlX,aAAc6c,EACd9c,YAAa3F,EAAQ,WAGvB,kBAAC,GAAD,CACEjC,MAAOiC,EAAQ,UACfhC,QAAS,kBApFS,4BAAArD,EAAAC,OAAA,uDAC5BwnB,GAAW,GADiB,WAAAznB,EAAA,MAEDM,EAAK,oBAAqB,CACnD0I,MAAOnF,EAAOoF,WACdhH,OACAkgB,QACAtE,SACAuY,SAP0B,gBAEpBt2B,EAFoB,EAEpBA,SAOR2nB,GAAW,GACXjV,EAAY1S,GAVgB,4DAoFHy2B,IACfhzB,MAAO,CAAEuE,KAAM,EAAG+J,eAAgB,GAAIN,WAAY,QAKxD,kBAACO,GAAA,EAAD,CACEC,KAAMmkB,EACNzJ,WACkB,QAAhB7mB,UAASC,QACLjG,EACAqB,KAAKoQ,MAAMrO,GAAK,KAEtB4iB,sBACkB,QAAhBhgB,UAASC,GACL,CAAE9B,cAAe,MAAOwI,SAAU,aAClC3M,EAENyiB,aAAc,SAAC9gB,EAAM7C,GAAP,cAAyBA,GACvCyS,WAAY,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAAkB,EAAZ7C,MACnB,OACE,kBAACgF,EAAA,QAAD,CACEH,MAAO,CACLP,MA3IL,MA8IG,kBAACU,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIvG,EAAK60B,IAAM/wB,EAAQ,aAAeA,EAAQ,aAGhD,kBAAC,GAAD,KACG9D,EAAKsc,OADR,IACiBxY,EAAQ9D,EAAKU,OAE9B,kBAAC,GAAD,cAAKtD,EAAa4C,EAAK4gB,OAAvB,UAMR,kBAACze,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,SC/JzB0tB,IAFazzB,IAAW1C,IAAI,UAA1ByI,OAEQ,CACd,CACE3K,IAAK,QACLiF,MAAO,UAET,CACEjF,IAAK,OACLiF,MAAO,QAET,CACEjF,IAAK,OACLiF,MAAO,UAILqzB,GAAS,CACb,CACEt4B,IAAK,WACLiF,MAAO,UAGT,CACEjF,IAAK,OACLiF,MAAO,WAGT,CACEjF,IAAK,OACLiF,MAAO,QAET,CACEjF,IAAK,SACLiF,MAAO,UAET,CACEjF,IAAK,UACLiF,MAAO,WAET,CACEjF,IAAK,OACLiF,MAAO,QAET,CACEjF,IAAK,OACLiF,MAAO,QAET,CACEjF,IAAK,WACLiF,MAAO,cAuNIga,iCAnNC,SAAC,GAOV,IANLF,EAMI,EANJA,2BACA1U,EAKI,EALJA,WAEW6S,EAGP,EAJJ7S,WACE5E,MAASyX,OAGP,IADJhT,YAAeC,EACX,EADWA,GAAIzE,EACf,EADeA,OACf,EAC0BmB,mBAAS,IADnC,WACGkmB,EADH,KACYwL,EADZ,OAEwB1xB,mBAAS,IAFjC,WAEGpH,EAFH,KAEW+4B,EAFX,OAG0B3xB,mBAASyxB,GAAO,IAH1C,WAGGG,EAHH,KAGYC,EAHZ,OAIwB7xB,mBAASwxB,GAAQ,IAJzC,WAIG7c,EAJH,KAIWmd,EAJX,KAKEzxB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC1J,GAAO,WACL,IAAM6S,EAAK,MAAGyJ,OAAH,EAAGA,EAAQzJ,MAClBA,GACFilB,EAAWJ,GAAO7kB,IAClBD,EAAa8kB,GAAO7kB,GAAOzT,MAE3BwT,EAAailB,EAAQz4B,QAIzB,IAAMwT,EAAe,SAACC,EAAO+H,GAC3Bpa,MAASlC,EAAUC,YAAd,kBAA2CsU,EAA3C,WAA2D+H,EAAU,CACxEta,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOqrB,GAAP,SAAAlrB,EAAAC,OAAA,gDACJy2B,EAAWxL,GADP,+DAGLhrB,OAAM,SAACC,GACNC,QAAQD,MAAMA,OA4Jd42B,EAAkB7L,EAAQvR,QAAO,SAAChQ,GAAD,aACrC/L,IAAM,SAAG+L,EAAErF,WAAL,EAAG,EAAQ0yB,cAAc/H,SAASrxB,EAAOo5B,mBAEjD,OACE,kBAACtzB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACgK,GAAA,EAAD,CACE8T,sBAAuB,CACrB9c,OAAwB,QAAhBlD,UAASC,GAAe,OAAIjG,GAEtCunB,uBAAwB,kBAAM,kBAAC,GAAD,OAC9BnV,oBA/Ee,WACnB,OACE,kBAACtO,EAAA,QAAD,CAAMH,MAAO,CAAES,gBAAiBH,EAAOrC,MAAMiS,UAC3C,kBAAC/P,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,CACEX,MAAOiC,EAAQ,QACfhC,QAAS,kBAjDS,WAE1B,IAAMqC,EAAU+wB,GAAOlwB,KAAI,SAAC0wB,GAAD,OAAOA,EAAE7zB,SAEpCsC,EAAQ+b,KAAKpc,EAAQ,WACrB6X,EACE,CACExX,UACAgc,kBAAmBhc,EAAQ/E,OAAS,EACpCghB,uBAAwB,OAE1B,SAACxE,GACKA,EAAczX,EAAQ/E,OAAS,IACjCk2B,EAAWJ,GAAOtZ,IAClBxL,EAAa8kB,GAAOtZ,GAAahf,IAAKwb,EAAOxb,SAmC5B+4B,IACfh0B,KAAK,SACLC,KAAK,cACLI,MAAO,CAAE8I,UAAW,GAAI4Y,iBAAkB,MAG5C,kBAAC,GAAD,CACE7hB,MAAOiC,EAAQ,UACfhC,QAAS,kBApCW,WAE5B,IAAMqC,EAAU8wB,GAAQjwB,KAAI,SAAC0wB,GAAD,OAAOA,EAAE7zB,SAErCsC,EAAQ+b,KAAKpc,EAAQ,WACrB6X,EACE,CACExX,UACAgc,kBAAmBhc,EAAQ/E,OAAS,EACpCghB,uBAAwB,OAE1B,SAACxE,GACKA,EAAcqZ,GAAQ71B,SACxBP,QAAQuF,IAAI,YAAa6wB,GAAQrZ,IACjC2Z,EAAUN,GAAQrZ,IAClBxL,EAAa8kB,GAAOtZ,GAAahf,IAAKq4B,GAAQrZ,GAAahf,SAqB1Cg5B,IACfj0B,KAAK,SACLC,KAAK,cACLI,MAAO,CAAE8I,UAAW,GAAI4Y,iBAAkB,OAI9C,kBAACvhB,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdrC,gBAAiBH,EAAOrC,MAAMyC,UAC9B4N,eAAgB,GAChBoT,iBAAkB,GAClB7gB,kBAAmB,GACnB0E,OAAQ,GACR1C,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACEC,YAAa3F,EAAQ,UACrByO,qBAAsBjQ,EAAOrC,MAAMuS,kBACnCxO,MAAO3H,EACP2F,MAAO,CACLuE,KAAM,EACN2C,SAAU,GACVlG,MAAOV,EAAOrC,MAAMgD,eAEtByG,aAAc0rB,IAGhB,kBAAC,KAAD,CACEryB,KAAK,SACLG,KAAM,GACNF,MAAOV,EAAOrC,MAAMgD,iBAIxB,kBAACd,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR9E,gBAAiBH,EAAOrC,MAAMyC,UAC9BmC,WAAY,SACZhC,kBAAmB,KAGrB,kBAAC,GAAD,CAAGb,MAAO,CAAE+C,WAAY,SAAWjB,EAAQ,SAC3C,kBAAC,GAAD,CAAG9B,MAAO,CAAE+C,WAAY,SAAWswB,EAAQxzB,UAiB7C2O,KAAMglB,EACN5lB,WApKa,SAAC,GAAqB,IAAnB5P,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MACpB04B,EAAWR,EAAQz4B,IAEnBusB,GAAY/hB,KAAKzG,MAAQX,EAAKopB,UAAY,IAAQ,EAClD0M,EACS,aAAbD,EACI1M,EACE,SACA,eACW,SAAb0M,EAAA,SACI71B,EAAKuL,KADT,KAEa,WAAbsqB,EAAA,GACG71B,EAAK8c,OACK,YAAb+Y,EAAA,GACG71B,EAAK6c,QACK,SAAbgZ,EAAA,GACG71B,EAAK4c,KACK,SAAbiZ,EAAA,GACGx0B,GAAQrB,EAAKK,KAAM,QACT,aAAbw1B,EAAA,GACGv0B,GAAYtB,EAAK4L,SAAU,QAD9B,SAEI5L,EAAKwL,KAFT,KAIN,OACE,kBAACrJ,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZhC,kBAAmB,GACnB4b,gBAAiB,KAGnB,kBAAC,GAAD,CAAMxX,WAAYA,EAAY8T,KAAM/a,IACpC,kBAAC,GAAD,KAAI81B,WCvHGC,GAjBQ,SAAC,GAKjB,IAAD,IAJJjvB,YACEC,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,uBCVXkyB,GAAa,CACjB,CACEjzB,KAAM,iBAER,CACEA,KAAM,UAER,CACEA,KAAM,OAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,SA4FKkzB,GAxFG,SAAC,GAUZ,IATLhvB,EASI,EATJA,WASI,IARJH,YAEEC,GAME,EAPFzE,OAOE,EANFyE,IACA+W,EAKE,EALFA,aAEAD,GAGE,EAJF7W,SAIE,EAHF6W,QACU5d,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BqY,EAAc,CAClBC,cAAe1b,EAAQ,iBACvB2b,OAAQ3b,EAAQ,UAChB4b,SAAU5b,EAAQ,YAClB+Y,QAAS/Y,EAAQ,iBACjB6b,WAAY7b,EAAQ,cACpB8b,IAAK9b,EAAQ,OACb+b,QAAS/b,EAAQ,WACjBgc,YAAahc,EAAQ,eACrB0H,KAAM1H,EAAQ,cACd6L,KAAM7L,EAAQ,QACdic,OAAQjc,EAAQ,WAGlBtG,EAAOsgB,GAEP,IAAIxB,EAAS,EAYb,OAXA0Z,GACGhxB,KAAI,SAACkxB,GAAD,OAAOA,EAAEnzB,QACb9F,SAAQ,SAACk5B,GACR,aAAOtY,OAAP,EAAOA,EAAQ5gB,SAAQ,SAAC8K,EAAM5K,GAExB4K,EADgBouB,EAAN,YACV,MAAmBpvB,OAAnB,EAAmBA,EAAIhE,QAAvB,MAA+BgE,OAA/B,EAA+BA,EAAIhE,QACrCuZ,GAAU,SAMhB,kBAACtC,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAAC,GAAD,CAAG8M,MAAI,GACJ3L,EAAQ,WADX,IACwBwY,EAAQ,IACdxY,EAAJ,IAAXwY,EAAuB,WAAsB,cAFhD,KAKC0Z,GACEhxB,KAAI,SAACkxB,GAAD,OAAOA,EAAEnzB,QACbiC,KAAI,SAACmxB,GACJ,aAAOtY,OAAP,EAAOA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GACxB,IAAMq3B,EAAc2B,EAAN,QACRC,EAAiB7W,EAAY4W,GAEnC,QADuB93B,IAAnB+3B,GAA8Bv3B,QAAQuF,IAAI+xB,GAC1CpuB,EAAKysB,MAAL,MAAmBztB,OAAnB,EAAmBA,EAAIhE,QAAvB,MAA+BgE,OAA/B,EAA+BA,EAAIhE,MACrC,OACE,kBAACZ,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,WAGd,kBAAC,GAAD,KAAOuxB,EAAP,OAA4BruB,EAAKA,MACjC,kBAAC,GAAD,CACEnL,IAAG,QAAUO,EAAQg5B,EACrBn0B,MAAO,CAAEsO,eAAgB,IACzBrQ,MAAOA,EACP4B,MAAOiC,EAAQ,UACfhC,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAMy1B,EACNpuB,KAAMA,EAAKA,iBAU7B,kBAAC5F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,klBC1GvBwC,GADYvI,IAAW1C,IAAI,UAAzB2C,MACsB,IAmQfqd,GAjQG,SAAC,GAOZ,IAAD,IANJhY,YACEC,EAKE,EALFA,GACAzE,EAIE,EAJFA,OACUrC,EAGR,EAHFqC,OAAUrC,MACV+G,EAEE,EAFFA,SAGIlD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAGsBzD,mBAAS,MAH/B,WAGU4yB,GAHV,aAIsB5yB,mBAAQ,MAACsD,OAAD,EAACA,EAAI8R,OAJnC,WAIGA,EAJH,KAIUwK,EAJV,OAMwB5f,mBAAS,IANjC,WAMG6yB,EANH,KAMWC,EANX,OAOsC9yB,mBAAS,MAP/C,WAOG+yB,EAPH,KAOkBC,EAPlB,OAQkBhzB,oBAAW,MAAFsD,OAAA,EAAAA,EAAI2vB,MAAO,IARtC,WAQGA,EARH,KAQQC,EARR,KAUJn5B,GAAO,WACLmkB,IACAiV,OAGF,IAAMA,EAAc,WAClB54B,MACKlC,EAAUC,YADV,qBAC0CuG,EAAOoF,WADjD,QACmEX,EAAGsL,GACzE,CACEvU,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAiB,IAAdg4B,EAAa,EAAbA,OACPC,EAAUD,MAEX33B,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAqDd+iB,EAAqB,0BAAAljB,EAAAC,OAAA,mDACL,QAAhB2F,UAASC,IAAgC,YAAhBD,UAASC,GADb,kCAAA7F,EAAA,MAEEmjB,IAAqBA,MAFvB,gBAGR,YAHQ,EAEfC,QAENje,MAAM,6DAJe,6DAmF3B,OACE,kBAACzB,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN1B,WAAY,SACZjC,eAAgB,SAChBsJ,OAAQ,KAGV,kBAAC3J,EAAA,EAAD,CAAkBT,QA7II,0BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MAClBkjB,KADkB,kCAAAljB,EAAA,MAIHujB,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfE,QAAQ,EACRoL,QAAS,KATW,QAIlBnL,EAJkB,QAYVC,WAEVc,EACEf,EAAOD,OAAP,cACkBC,EAAO5hB,KADzB,WACwC4hB,EAAOD,OAC3CC,EAAOlF,KAjBO,gDAqBtBve,QAAQuF,IAAR,MArBsB,kEA8InByU,EACC,kBAACxR,EAAA,EAAD,CACEC,OAAQ,CACN8V,IAAKvE,EAAM6U,SAAS,cAChB7U,EACA/c,EAAUC,YAAc8c,GAE9B7W,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7Bmd,WAAW,UAGb,kBAACrd,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7Bmd,WAAW,WAKjB,kBAAC,KAAD,CACEnS,qBAAsBtS,EAAMuS,kBAC5BxQ,MAAO,CAACA,GAAM/B,GAAO4Q,UAAW,CAAEpP,MAAO,OAAQ8F,OAAQ,MACzDoc,WAAW,EACX3a,cAAe,EACfhF,MAAO0yB,EACPhtB,aAAcitB,IAEhB,kBAAC,GAAD,CACE90B,MAAOiC,EAAQ,QACf9B,MAAO,CAAEsO,eAAgB,IACzBxO,QAAS,WACP9D,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBs4B,IAAKA,EACL7d,QACAnR,WAAYpF,EAAOoF,eAGpBpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLqF,MAAME,EAAQ,YACdkD,EAAS1E,EAAOoF,eAEjB/I,OAAM,SAACC,GACNC,QAAQuF,IAAI,eAAgBxF,GAC5BgF,MAAME,EAAQ,6BAKtB,kBAAC,GAAD,CACE9B,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,iBACfhC,QA9IoB,0BAAArD,EAAAC,OAAA,2EAAAD,EAAA,MAEHujB,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfE,QAAQ,EACRoL,QAAS,KAPW,OAElBnL,EAFkB,OAUtBzjB,QAAQuF,IAAI,SAAUke,GAEjBA,EAAOC,YACV8T,EAAS/T,GA9CYuU,EA+CHvU,EA9CtBtkB,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBya,MAAOge,EAAIzZ,IACX3V,MAAOnF,EAAOoF,eAGfpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLq4B,IACAhzB,MAAME,EAAQ,YACduyB,EAAS,SAEV13B,OAAM,SAACC,GACNC,QAAQuF,IAAI,eAAgBxF,GAC5BgF,MAAME,EAAQ,2BAaM,gDAiBtBjF,QAAQuF,IAAR,MAjBsB,kCAjCA,IAACyyB,IAiCD,8BAiJtB,kBAACtmB,GAAA,EAAD,CACEC,KAAM8lB,EACNvV,UAAWyV,EACXtL,WAAYnhB,GAAgB,EAAI,EAChC6F,WAhIa,SAAC,GAAqB,IAAnB5P,EAAkB,EAAlBA,KACdod,GADgC,EAAZjgB,MACdrB,EAAUC,YAAc,IAAMiE,EAAK6Y,OAC/C,OACE,kBAACtW,EAAA,EAAD,CAAkBT,QAAS,kBAAM20B,EAAiBz2B,EAAKqS,MACrD,kBAAClQ,EAAA,QAAD,KACE,kBAACkF,EAAA,EAAD,CACEC,OAAQ,CAAE8V,OACVpb,MAAK,IACHP,MAAO,IACP8F,OAAQ,KACJivB,IAAkBx2B,EAAKqS,GACvB,CAAEvJ,YAAa,EAAGC,YAAa,SAC/B,IAEN2b,WAAW,eAmHf5D,aAAc,SAAC9gB,GAAD,WAAeA,EAAKqS,IAClC2O,oBA7Ge,WACnB,OACE,kBAAC,GAAD,CACEnf,MAAOiC,EAAQ,UACfhC,QAAS,WACH00B,EACFx4B,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd2K,GAAImkB,MAGLl4B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAgB,EAAbg4B,OACPM,OAEDj4B,OAAM,SAACC,GACNC,QAAQD,MAAMA,MAGlBgF,MAAME,EAAQ,8B,kbC7DXgzB,G,kCAnHb,WAAYhxB,GAAQ,IAAD,uBACjB,cAAMA,IAyBR8T,OAAS,WAAO,IACNtX,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAEma,SAAS,IACzB/jB,MAASlC,EAAUC,YAAd,MAAgC,CACnC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACduV,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAwjB,SAAS,EACT7E,OAAQxd,KAAKwd,SACbD,QAAS,KAEX,EAAKnX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OApDD,EAuDnB4c,aAAe,WAAO,IAAD,EACI,EAAK1V,MAAMgB,YAAlBC,GADG,EACXzE,OADW,EACHyE,IACVjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAa,EAAKhB,MAAMgB,YACxBmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,QACfhC,QAAS,EAAK8X,SAGhB,kBAAC,GAAD,CAAQ9S,YAAa,EAAKhB,MAAMgB,gBAzEpC,EAAKzE,MAAQ,CACX9D,SAAU,KACV0e,QAAS,GACTC,OAAQxd,KAAKwd,UANE,E,8CAUVtgB,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,M,+BA2DA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAOHyH,KAAKF,MAJPgB,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,WAClC,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAGsa,UAAW,MACjC,kBAAC,UAAD,CAAM7e,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7CyH,KAAKwV,qB,GA5GE/U,a,qkBCiDJkK,KAAWC,OAAO,CAC/B2L,IAAK,CACH/Z,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YA1DhB,IA6DekyB,GA7DD,SAAC,GAQT,EAPJ9vB,WAOK,IAAD,IANJH,YACExE,EAKE,EALFA,OACAyE,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,KAGa0S,EAHb,OAIwBxN,mBAAS,IAJjC,WAIG6Y,EAJH,KAIW2B,EAJX,KAgBJ,OACE,kBAACjE,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAACR,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG2F,OAAQ,KAC9B,kBAAC/J,EAAA,QAAD,KACG5D,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAChC,kBAAC4D,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO4Q,WAApB,IAA+BtK,KAAM,IAC1CkD,YAAa3F,EAAQ,UACrByO,qBAAsBtS,EAAMuS,kBAC5BxO,MAAOsY,EACP5S,aAAc,SAAC4S,GAAD,OAAY2B,EAAU3B,MAGtC,kBAAC,GAAD,CACErc,MAAOA,EACP4B,MAAOiC,EAAQ,UACfhC,QAAS,kBA3BP,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACeM,EAAK,QAAS,CACvC2I,WAAYpF,EAAOoF,WACnB4U,YAHU,gBACJ/d,EADI,EACJA,SAKR0S,EAAY1S,GACZyI,EAAS1E,EAAOoF,YAPJ,4DA2BasvB,IACfh1B,MAAO,CAAEP,MAAO,SAMxB,kBAACU,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QCfdoT,GAlCQ,SAAC,GAOlB,EANJ1T,WAMI,EALJH,YAKK,IAAD,IAJJA,YACEC,EAGE,EAHFA,GAGE,IAFFzE,OAGIwB,GADF,EAFQ7D,MAER,EAFeyH,WAGH/K,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAAC8S,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAErC,kBAAC0E,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,OAE/B,kBAAC,GAAD,KAAIzD,EAAQ,eAEZ,kBAAC,GAAD,CAAG2L,MAAI,EAACzN,MAAO,CAAE8I,UAAW,KACzBhH,EAAQ,kBAEX,kBAAC,GAAD,iBACA,kBAAC,GAAD,kBAEA,kBAAC,GAAD,CAAG2L,MAAI,EAACzN,MAAO,CAAE8I,UAAW,KACzBhH,EAAQ,oBADX,KAGA,kBAAC,GAAD,mBACA,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QC9BvB0vB,GAAiB,eAyGRhE,GApGK,SAAC,GAKf,EAJJhsB,WAIK,IAFOhH,EAER,EAHJ6G,YACExE,OAAUrC,MAGZ,OACE,kBAAC+Z,EAAA,EAAD,CAAYhY,MAAO,CAAE6C,WAAY,WAC/B,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,UAAD,CACElK,MAAO,CAAEgB,MAAO/C,EAAME,aACtB+2B,YAAa,SAACC,GACZt4B,QAAQuF,IAAI,YAAa+yB,GACzBrR,UAAQC,QAAQoR,KAGdF,GAPN,qEAQMA,GARN,w5ICSOG,GAnBA,SAAC,GAMV,EALJnwB,WAKK,IAAD,IAJJH,YACEC,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAE6C,WAAY,WACzB,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,KAAD,CAAclK,MAAO,CAAEkD,KAAM,CAAElC,MAAO/C,EAAME,eACzC2D,EAAQ,cC4RbwW,GAAS3J,KAAWC,OAAO,CAC/B2L,IAAK,CACH/Z,cAAe,MACfwI,SAAU,OACVpI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAIDwyB,GAnSO,SAAC,GAYhB,IAAD,MAXJpwB,EAWI,EAXJA,WAEW6S,EASP,EAVJ7S,WACE5E,MAASyX,OASP,IAPJhT,YACExE,EAME,EANFA,OACAyE,EAKE,EALFA,GACA8W,EAIE,EAJFA,OACAC,EAGE,EAHFA,aAGE,IAFFxb,OAAUrC,EAER,EAFQA,MAAOyH,EAEf,EAFeA,WAEf,EAC0BjE,mBAAS,IADnC,WACGimB,EADH,KACY8C,EADZ,OAEwB/oB,mBAAS,IAFjC,WAEG6yB,EAFH,KAEWC,EAFX,OAG0B9yB,oBAAS,GAHnC,WAGGse,EAHH,KAGYmE,EAHZ,KAIEnjB,EAAI,MAAG+W,OAAH,EAAGA,EAAQ/W,KAErBvF,GAAO,WACL85B,EAAWv0B,MAEbvF,EAAOsgB,GAEPngB,qBAAU,WACR25B,EAAWv0B,KACV,OAAC+W,OAAD,EAACA,EAAQ/W,OAEZpF,qBAAU,WACRi5B,MACC,OAAClN,OAAD,EAACA,EAASrX,KAEb,IAAMilB,EAAa,SAACv0B,GAElB,OADAmjB,GAAW,GACJloB,MAASlC,EAAUC,YAAd,iBAA0CgH,EAAQ,CAC5DjF,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOsU,GAAP,SAAAnU,EAAAC,OAAA,uDACJ8tB,EAAW5Z,GACXsT,GAAW,GAFP,kBAGGtT,GAHH,+DAKLjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAId4d,EAAW,SAAC5f,EAAKoH,GACrB,OACE,kBAAC7B,EAAA,QAAD,CAAMH,MAAOsY,GAAOiC,KAClB,kBAAC,GAAD,KAAI3f,GACJ,kBAAC,GAAD,KAAIoH,KAKJ4yB,EAAc,WAClB54B,MACKlC,EAAUC,YADV,qBAC0CuG,EAAOoF,WADjD,eACmEgiB,OADnE,EACmEA,EAASrX,IAC/E,CACEvU,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAiB,IAAdg4B,EAAa,EAAbA,OACPC,EAAUD,MAEX33B,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIdkF,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,GAAI6a,EACF,OAAO,kBAACzP,GAAA,EAAD,MAOT,IAAM6W,EAAW/hB,KAAKzG,OAAL,MAAa+oB,OAAb,EAAaA,EAASN,UAAW,IAE5CpmB,EAAQjD,EAAa2pB,EAASpnB,EAAOrC,OAErCmd,EAAMthB,EAAUC,aAAV,MAAwB2tB,OAAxB,EAAwBA,EAAS7Q,OACvC0e,KAAY,MAAC7N,OAAD,EAACA,EAAS7Q,OAqC5B,OACE,kBAACmB,EAAA,EAAD,KACE,kBAAC7X,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,WAC7B,kBAACT,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiB,OACjBqC,aAAc,GACdoH,OAAQ,GACRvJ,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAE+C,WAAY,OAAQ/B,UAAnC,MAA6C0mB,OAA7C,EAA6CA,EAAS3mB,MAErDw0B,EACC,kBAACp1B,EAAA,QAAD,KACE,kBAACkF,EAAA,EAAD,CACEC,OAAQ,CAAE8V,OACVpb,MAAO,CACLP,MAAO,OACP8F,OAAQ,KAEVmd,WAAW,aAGb,MAEI,MAAPgF,OAAA,EAAAA,EAASpe,MACR,kBAAC/I,EAAA,EAAD,CACET,QAAS,WAAO,IAAD,EACbmF,EAAWgC,SAAS,OAAQ,CAAElG,KAAI,MAAE2mB,GAAF,SAAEA,EAASpe,WAAX,EAAE,EAAevI,SAGrD,kBAAC,GAAD,cACQ,MAAP2mB,GAAA,SAAAA,EAASpe,WAAT,IAAeuN,QACd,kBAACxR,EAAA,EAAD,CACEC,OAAQ,CAAE8V,IAAKthB,EAAUC,aAAV,MAAwB2tB,GAAxB,SAAwBA,EAASpe,WAAjC,EAAwB,EAAeuN,QACtD7W,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7Bmd,WAAW,YAGf,kBAAC,GAAD,WAAIgF,GAAJ,SAAIA,EAASpe,WAAb,EAAI,EAAevI,OAEnB,KAEHyZ,EAAS1Y,EAAQ,UAAWqlB,EAAW,SAAM,gBAC7C3M,EACC1Y,EAAQ,cACR+R,KAAM,MAAC6T,OAAD,EAACA,EAASN,UAAU1G,OAAO,eAElClG,EAAS1Y,EAAQ,QAAT,gBAAsB4lB,OAAtB,EAAsBA,EAASne,OACvCiR,EAAS1Y,EAAQ,QAAT,gBAAsB4lB,OAAtB,EAAsBA,EAASle,OACvCgR,EAAS1Y,EAAQ,QAASzC,GAAO,MAACqoB,OAAD,EAACA,EAASrpB,KAAM,SACjDmc,EACC1Y,EAAQ,YACRxC,GAAW,MAACooB,OAAD,EAACA,EAAS9d,SAAU,SAEhC4Q,EAAS1Y,EAAQ,WAAT,MAAuB4lB,OAAvB,EAAuBA,EAAS/d,QAAhC,KACR6Q,EAAS1Y,EAAQ,QAAT,MAAkB4lB,OAAlB,EAAkBA,EAAS9M,MACnCJ,EAAS1Y,EAAQ,WAAT,MAAqB4lB,OAArB,EAAqBA,EAAS7M,SACtCL,EAAS1Y,EAAQ,eAAT,MAAyB4lB,OAAzB,EAAyBA,EAAS5M,QAE3C,kBAAC,GAAD,CAAGrN,MAAI,GAAE3L,EAAQ,eAhGN,CACjB,CACEf,KAAM,iBAER,CACEA,KAAM,UAER,CACEA,KAAM,OAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,SAkECiC,KAAI,SAACkxB,GAAD,OAAOA,EAAEnzB,QACbiC,KAAI,SAACmxB,GACJ,OACEtY,GACAA,EAAO7Y,KAAI,SAAC+C,EAAM5K,GAChB,IAAMq3B,EAAc2B,EAAN,QACd,OAAW,MAAPzM,OAAA,EAAAA,EAAS3mB,QAASgF,EAAKysB,GAEvB,kBAAC,GAAD,KACG1wB,EAAQqyB,GADX,OAC0BpuB,EAAKA,MAK5B,WAKf,kBAAC5F,EAAA,QAAD,CAAMH,MAAOsY,GAAOiC,KAClB,kBAAC,GAAD,CACE1a,MAAOiC,EAAQ,QACfhC,QAAS,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcK,EAAI,iBACN4I,EADK,WACgBgiB,EAAQrX,KAFzC,gBACCA,EADD,EACCA,GAIRpL,EAAWgC,SAAS,UAAW,CAAEoJ,OAL1B,+DASX,kBAAC,GAAD,CACExQ,MAAOiC,EAAQ,OACfhC,QAAS,kBACPmF,EAAWgC,SAAS,MAAO,CACzBlG,KAAM2mB,EAAQ3mB,UAIpB,kBAAC,GAAD,CACElB,MAAOiC,EAAQ,UACfhC,QAAS,kBACPmF,EAAWgC,SAAS,OAAQ,CAC1BlG,KAAM2mB,EAAQ3mB,UAIpB,kBAAC,GAAD,CACElB,MAAOiC,EAAQ,UACfhC,QAAS,kBACPmF,EAAWgC,SAAS,SAAU,CAC5B4O,GAAI6R,EAAQ3mB,YAOtB,kBAACZ,EAAA,QAAD,CAAMH,MAAO,CAAEsO,eAAgB,KAC7B,kBAAC,KAAD,CAActO,MAAO,CAAEkD,KAAM,CAAElC,MAAO/C,EAAME,eAA5C,MACGupB,OADH,EACGA,EAASgN,MAId,kBAACv0B,EAAA,QAAD,KACGm0B,EAAOtxB,KAAI,SAAC6T,GACX,IAAMuE,EAAMthB,EAAUC,YAAc,IAAM8c,EAAMA,MAChD,OACE,kBAAC1W,EAAA,QAAD,KACE,kBAACkF,EAAA,EAAD,CACEC,OAAQ,CAAE8V,OACVpb,MAAO,CACLP,MAAO,OACP8F,OAAQ,KAEVmd,WAAW,oB,kbC5Fd8S,G,qLAnMbn1B,MAAQ,CACNwE,SAAU,KACVtI,SAAU,KACVmoB,KAAM,GACNrU,GAAI,M,EAsBNolB,YAAc,WAAO,IACXn1B,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MAASlC,EAAUC,YAAd,mBAA4CuG,EAAOoF,WAAc,CACpE5J,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOooB,GAAP,SAAAjoB,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAE8e,SADZ,+DAGL/nB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB84B,QAAU,SAACrlB,GAAQ,IACT3K,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEiU,KAAI3K,iBAE1BpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU8T,OAC1B,EAAKvM,MAAMgB,YAAYE,SAASU,GAChC,EAAK+vB,cAHD,+DAKL94B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB+4B,SAAW,SAACtlB,GAAQ,IACV3K,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEiU,KAAI3K,iBAE1BpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU8T,OAC1B,EAAKvM,MAAMgB,YAAYE,SAASU,GAChC,EAAK+vB,cAHD,+DAKL94B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBwwB,WAAa,SAAC/c,GAAQ,IACZ3K,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEiU,KAAI3K,iBAE1BpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU8T,OAC1B,EAAKvM,MAAMgB,YAAYE,SAASU,GAChC,EAAK+vB,cAHD,+DAKL94B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBgR,WAAa,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MAAY,EAM5B,EAAK2I,MAJPgB,YACEC,EAH4B,EAG5BA,GACU9G,EAJkB,EAI5BqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,SAChBiC,WAAY,SACZC,aAAc,GACdgE,YAAa,EACbC,YAAa,UAGf,kBAAC1B,EAAA,EAAD,CACErF,MAAO,CACLP,MAAO,IACP8F,OAAQ,IACRmd,WAAY,WAEdpd,OAAQ,CAAE8V,IAAKthB,EAAUC,YAAc,IAAMiE,EAAK6Y,SAGpD,kBAAC1W,EAAA,QAAD,CAAMH,MAAO,CAAEgO,WAAY,KACxB,EAAK3N,MAAM9D,UAAY,EAAK8D,MAAMgQ,KAAOrS,EAAKqS,GAC7C,kBAAC,UAAD,CAAMrQ,MAAO,CAAEgB,MAAO/C,EAAME,cACzB,EAAKkC,MAAM9D,SAASA,UAErB,KAEJ,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK4mB,MACjD,kBAAC,UAAD,CAAM5kB,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,SAAkDH,EAAKuL,MACvD,kBAAC,UAAD,CAAMvJ,MAAO,CAAEgB,MAAO/C,EAAME,cACzBH,EAAKsvB,OADR,IACiBxrB,EAAQ,YAEzB,kBAAC,UAAD,CAAM9B,MAAO,CAAEgB,MAAO/C,EAAME,cACzBH,EAAK8mB,MADR,QACoBhjB,EAAQ,UAE5B,kBAAC,GAAD,CACE7D,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAK41B,QAAQ13B,EAAKqS,OAEnC,kBAAC,GAAD,CACEpS,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,SACfhC,QAAS,kBAAM,EAAK61B,SAAS33B,EAAKqS,OAEpC,kBAAC,GAAD,CACEpS,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,WACfhC,QAAS,kBAAM,EAAKstB,WAAWpvB,EAAKqS,U,2DAjKzB,IAAD,OACVpL,EAAejB,KAAKF,MAApBmB,WACWjB,KAAKF,MAAMgB,YAAtBxE,OAER0D,KAAKyxB,cAELzxB,KAAKupB,cAAgBtoB,EAAWuN,YAAY,YAAY,WAGtD3V,QAAQuF,IAAI,gBACZ,EAAKqzB,mB,6CAMPzxB,KAAKupB,cAAc3a,W,+BAwJX,IAAD,EAIH5O,KAAKF,MAJF,KAELmB,WAFK,EAGLH,YAAeC,GAE6Bf,KAAK3D,OAA3CqkB,EALD,EAKCA,KAAiBrU,GALlB,EAKO2c,UALP,EAKkB3c,IAAU+F,GAL5B,EAKsBzG,KALtB,EAK4ByG,QAEnC,OACE,kBAACjW,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACgK,GAAA,EAAD,CACEuQ,aAAc,SAAC9gB,EAAM7C,GAAP,aAAwBA,GACtCqT,KAAI,MAAEkW,OAAF,EAAEA,EAAMtO,QAAO,SAACoO,GAAD,OAASA,EAAII,OAASxO,IAAWA,KACpD2I,UAAW1O,EACXzC,WAAY5J,KAAK4J,kB,GA7LJnJ,a,kbC8IRmxB,G,qLA7Ibv1B,MAAQ,CACNif,UAAW,GACXC,UAAW,GACX3iB,MAAO,KACP2S,QAAS,M,+CAGF,IAAD,OACExK,EAAOf,KAAKF,MAAMgB,YAAlBC,GAEFjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAH9B,EAK2BlB,KAAK3D,MAA9Bif,EALF,EAKEA,UAAWC,EALb,EAKaA,UAEX9Z,EAAUzB,KAAKF,MAAMmB,WAAW5E,MAAMyX,OAAtCrS,MAEHA,EAID6Z,IAAcC,EAKlBvjB,MAASlC,EAAUC,YAAd,mBAA6C,CAChD+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEgT,SAAUsB,KAAIC,QAAQ2O,GAAY7Z,YAExDnJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GAYL,OAXA/T,QAAQuF,IAAI,eAAgBwO,GAExBA,EAAahU,MACf,EAAKgJ,SAAS,CAAE2J,QAAS,KAAM3S,MAAOgU,EAAahU,QAEnD,EAAKgJ,SACH,CAAEhJ,MAAO,KAAM2S,QAASqB,EAAarB,UACrC,eAIGqB,KAERjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,MA5BhBoH,KAAK4B,SAAS,CAAEhJ,MAAOkF,EAAQ,wBAJ/BkC,KAAK4B,SAAS,CAAEhJ,MAAOkF,EAAQ,e,+BAoCzB,IAAD,SAIHkC,KAAKF,MADQiB,GAHV,EAELE,WAFK,EAGLH,YAAeC,IAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRvJ,QAAS,GACT6e,SAAU,IACV/e,gBAAiB,OACjBqC,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzCoH,KAAK3D,MAAMkP,QACb,kBAAC,UAAD,CAAMvP,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMkP,SAC3C,KAEJ,kBAACpP,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,gBAExC,kBAAC0F,GAAA,EAAD,CACEiJ,iBAAe,EACf/I,aAAc,SAAC4X,GAAD,OAAe,EAAK1Z,SAAS,CAAE0Z,eAC7Ctd,MAAOgC,KAAK3D,MAAMif,UAClBtf,MAAO,CAAES,gBAAiB,QAASyG,SAAU,OAIjD,kBAAC/G,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,WAExC,kBAAC0F,GAAA,EAAD,CACEiJ,iBAAe,EACf/I,aAAc,SAAC6X,GAAD,OAAe,EAAK3Z,SAAS,CAAE2Z,eAC7Cvd,MAAOgC,KAAK3D,MAAMkf,UAClBvf,MAAO,CAAES,gBAAiB,QAASyG,SAAU,OAIjD,kBAAC/G,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAACI,EAAA,EAAD,CACEP,MAAO,CACLS,gBAAiB,OACjBI,kBAAmB,GACnBF,QAAS,GACTmC,aAAc,IAEhBhD,QAAS,kBAAM,EAAKkQ,UAEpB,kBAAC,UAAD,CAAMhQ,MAAO,CAAEkH,SAAU,GAAIlG,MAAO,UACjCc,EAAQ,kB,GApIKT,IAAMoD,W,kbC+HrB2V,G,qLA9Gb/Z,MAAQ,CACN9D,SAAU,KACV0e,QAAS,GACTC,OAAQxd,KAAKwd,U,EAGf2a,IAAM,WAAO,IACHv1B,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd3E,KAAM,EAAKV,MAAMU,KACjBka,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU2e,OAAQxd,KAAKwd,SAAUD,QAAS,KAC1D,EAAKnX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,2DAjCC,IAAD,EACZmE,EAAI,SAAGiD,KAAKF,MAAMmB,WAAW5E,MAAMyX,aAA/B,EAAG,EAAoC/W,KAC7CA,GACFiD,KAAK4B,SAAS,CAAE7E,W,mCAkCN,IAAD,SAMPiD,KAAKF,MAJPgB,YACEC,EAHO,EAGPA,GACU9G,EAJH,EAIPqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO4Q,UACpB0B,qBAAsBtS,EAAMuS,kBAC5B/I,YAAa3F,EAAQ,QACrBE,MAAOgC,KAAK3D,MAAMU,KAClB2G,aAAc,SAAC3G,GAAD,OAAU,EAAK6E,SAAS,CAAE7E,YAG1C,kBAAC,GAAD,CACE+D,YAAad,KAAKF,MAAMgB,YACxBmW,QAASjX,KAAK3D,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQlX,KAAK3D,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC8E,EAAA,QAAD,CACEH,MAAO,CACL8I,UAAW,KAGb,kBAAC,GAAD,CACE7K,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,OACfhC,QAAS,kBAAM,EAAK+1B,a,+BAMpB,IAAD,EAOH7xB,KAAKF,MALPmB,EAFK,EAELA,WAFK,IAGLH,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAGN1B,EAAayH,KAAK3D,MAAlB9D,SAEFuF,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC8S,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KAEHyH,KAAK0U,aAEN,kBAACnY,EAAA,EAAD,CACEP,MAAO,CAAE8I,UAAW,IACpBhJ,QAAS,kBAAMmF,EAAWgC,SAAS,UAAW,CAAEoH,MAAO,MAEvD,kBAAC,GAAD,KAAIvM,EAAQ,gCAIhB,kBAAC,GAAD,CAAQgD,YAAad,KAAKF,MAAMgB,mB,GA/GrBL,aCkHJqxB,GA5HE,SAAC,GAOX,IANL7wB,EAMI,EANJA,WAMI,IALJH,YACEH,EAIE,EAJFA,SACAI,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAKN6D,GAFaT,IAAM4O,WAAW7O,IAEpBzG,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAAC8S,EAAA,EAAD,MAaG+d,EAsBD,kBAAC,GAAD,CACE93B,MAAOA,EACP8yB,SAAS,SACTpxB,KAAK,QACLsF,WAAYA,EACZpF,MAAOiC,EAAQ,eACf+T,GAAG,gBAEL,kBAAC,GAAD,CACE5X,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,sBACf+T,GAAG,iBACHkb,SAAS,yBACTpxB,KAAK,gBAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,eACf+T,GAAG,cACHkb,SAAS,SACTpxB,KAAK,UAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,cACf+T,GAAG,aACHkb,SAAS,cACTpxB,KAAK,SAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,UACf+T,GAAG,QACHkb,SAAS,WACTpxB,KAAK,sBAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,aACfivB,SAAS,SACTpxB,KAAK,QACLG,QAAS,kBAAM6E,EAAS,CAAEjG,KAAM,aAAcsD,OAAO,OAEvD,kBAAC,GAAD,CACE/D,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,iBACf+T,GAAG,YACHkb,SAAS,YACTpxB,KAAK,SAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,gBACf+T,GAAG,WACHkb,SAAS,yBACTpxB,KAAK,WAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,kBACf+T,GAAG,aACHkb,SAAS,cACTpxB,KAAK,uB,kbC5GLF,GAAUD,IAAW1C,IAAI,UAAzB2C,MACFF,GAAUE,GAAQ,IAkUTu2B,G,qLAhUb31B,MAAQ,CACN9D,SAAU,KACVmC,KAAM,U,EAORu3B,YAAc,oBAAAx5B,EAAAC,OAAA,gDACZ,EAAKoH,MAAMgB,YAAYgX,eADX,6D,EAIdoa,UAAY,SAACx3B,GAAU,IACb4B,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MACKlC,EAAUC,YADV,eACoCuG,EAAOoF,WAD3C,SAC8DhH,EACjE,CACE5C,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAUmC,SADtB,+DAGL/B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBuf,YAAc,SAAOpW,GAAP,uBAAAtJ,EAAAC,OAAA,uDACJgC,EAAS,EAAK2B,MAAd3B,KADI,EAEiB,EAAKoF,MAAMgB,YAAhCE,EAFI,EAEJA,SAAU1E,EAFN,EAEMA,OAFN,WAAA7D,EAAA,MAGeM,EAAK,cAAe,CAC7CgJ,OACArH,KACW,WAATA,GAEa,eAATA,EADA,aAGS,aAATA,EACA,UACS,SAATA,EACA,cACA,SACN+G,MAAOnF,EAAOoF,cAfJ,kBAGJnJ,SAcR,EAAK05B,cACLjxB,EAAS1E,EAAOoF,YAlBJ,6D,EAqBdgoB,aAAe,WAAO,IAAD,EAKf,EAAK5pB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACA8W,EAJiB,EAIjBA,OAEM5W,EAAe,EAAKnB,MAApBmB,WAEAvG,EAAS,EAAK2B,MAAd3B,KAEFoD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BixB,EACK,WAATz3B,GAEa,eAATA,EADA,aAGS,aAATA,EACA,UACS,SAATA,EACA,cACA,SAEA8zB,EAAc2D,EAAN,QACR7D,EAAe6D,EAAN,SAET/B,EAEAtyB,EADK,WAATpD,GAEa,eAATA,EADQ,aAGC,aAATA,EACQ,UACC,SAATA,EACQ,cACA,UACd,OACE,kBAACyB,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC/J,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN3D,eAAgB,gBAChBJ,cAAe,QAGjB,kBAAC,UAAD,CAAMR,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7Ci2B,GAEH,kBAAC,UAAD,CAAMp0B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAxBjB,MA4BG+Z,OA5BH,EA4BGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKysB,GACJ,kBAAC,GAAD,KAAIzsB,EAAKysB,IAET,kBAACjyB,EAAA,EAAD,CACET,QAAS,kBAAM,EAAKqc,YAAYpW,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKysB,MAAL,MAAmBztB,OAAnB,EAAmBA,EAAIhE,MACtB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAMy3B,EACNpwB,KAAMA,EAAKA,SAIf,kBAACqK,GAAA,EAAD,CAAQrP,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAEN,kBAAC,GAAD,KAAI6E,EAAKusB,W,EASvB8D,WAAa,SAACC,EAAGj8B,EAAQmK,GAAU,IAAD,EACA,EAAKlE,MAAnB3B,GADc,EACxBnC,SADwB,EACdmC,MADc,KACRm0B,IAOpB,EAAK/uB,OARuB,KAG9BmB,WAH8B,EAI9BH,aAEY7G,GANkB,EAK5BqC,OAL4B,EAM5BA,OAAUrC,OAId,OACE,kBAACsC,EAAA,EAAD,CACEP,MAAO,CACLS,gBACE/B,IAAS23B,EAAOp4B,EAAMyC,UAAtB,KAAsCzC,EAAMyC,UAC9Cgc,kBAAmB,EACnBxC,iBAAkB,EAClB3V,OACA3D,eAAgB,SAChBiC,WAAY,UAEd/C,QAAS,kBAAM,EAAKo2B,UAAUG,KAE9B,kBAAC,GAAD,KAAIj8B,K,2DAlMR4J,KAAKkyB,UAAU,UACflyB,KAAKiyB,gB,+BAqMG,IAAD,2BAQHjyB,KAAKF,MARF,KAELmB,WAFK,EAGLH,aACExE,EAJG,EAIHA,OACAyE,EALG,EAKHA,GALG,KAMHzE,OAAUrC,MAIkB+F,KAAK3D,OAA7B9D,EAVD,EAUCA,SAAUmC,EAVX,EAUWA,KAAMm0B,EAVjB,EAUiBA,IAElB/wB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAC9BA,EAASzK,EAAS,MAACsK,OAAD,EAACA,EAAIG,QAE7B,OACE,kBAAC8S,EAAA,EAAD,KACE,kBAAC7X,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,eAChB2E,OAAQ,KAGTvB,KAAKoyB,WAAW,SAAUt0B,EAAQ,WAAY,GAC9CkC,KAAKoyB,WAAW,aAAct0B,EAAQ,cAAe,GACrDkC,KAAKoyB,WAAW,WAAYt0B,EAAQ,YAAa,GACjDkC,KAAKoyB,WAAW,OAAQt0B,EAAQ,YAAa,GAC7CkC,KAAKoyB,WAAW,SAAUt0B,EAAQ,UAAW,IAG/C+wB,EACC,kBAAC1yB,EAAA,QAAD,KACE,kBAAC,GAAD,KAAI0yB,GACJ,kBAAC,GAAD,CACE50B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAEitB,IAAK,WAGtCt2B,EACF,kBAAC4D,EAAA,QAAD,MACW,MAAR5D,GAAA,SAAAA,EAAU6rB,cAAV,IAAmBvR,QAClB,kBAACxR,EAAA,EAAD,CACErF,MAAO,CACLP,MAAOF,GAAUE,GAAQ,IACzB8F,OAAQ,IACRmd,WAAY,WAEdpd,OAAQ,CACN8V,IAAQthB,EAAUC,YAAf,WAA8BwC,GAA9B,SAA8BA,EAAU6rB,cAAxC,EAA8B,EAAmBvR,UAI1D,kBAAC,GAAD,CAAG7W,MAAO,CAAEmQ,UAAW,WACpBrO,EAAQ,WADX,IACwB,KACb,MAARvF,GAAA,SAAAA,EAAU6rB,UAAV,WAAmBrnB,WAAnB,IAA0BmE,KAAWpD,EAAQ,UAGvC,MAARvF,OAAA,EAAAA,EAAU8rB,MACT,kBAACloB,EAAA,QAAD,MACW,MAAR5D,GAAA,SAAAA,EAAU8rB,WAAV,IAAgBxR,QACf,kBAACxR,EAAA,EAAD,CACErF,MAAO,CACLP,MAAOF,GAAUE,GAAQ,IACzB8F,OAAQ,IACRmd,WAAY,WAEdpd,OAAQ,CACN8V,IAAQthB,EAAUC,YAAf,WAA8BwC,GAA9B,SAA8BA,EAAU8rB,WAAxC,EAA8B,EAAgBxR,UAIvD,kBAAC,GAAD,CAAG7W,MAAO,CAAEmQ,UAAW,WACpBrO,EAAQ,OADX,WACqBvF,GADrB,SACqBA,EAAU8rB,OAD/B,SACqB,EAAgBtnB,WADrC,EACqB,EAAuBmE,IAE5C,kBAAC,GAAD,CAAGlF,MAAO,CAAEmQ,UAAW,WACpBrO,EAAQ,OADX,iBAC2BvF,GAD3B,SAC2BA,EAAU8rB,WADrC,EAC2B,EAAgBzJ,MAD3C,MAGA,kBAAC,GAAD,CACE3gB,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,OACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsJ,WAAYpF,EAAOoF,WACnBhH,WAGDpC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOu2B,GAAP,SAAAp2B,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAEitB,IAAKA,EAAIt2B,WACzB,EAAK25B,UAAUx3B,GACf,EAAKoF,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAHnC,+DAKL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,UAKtB,KACHoH,KAAK0pB,gBAGR,kBAACpd,GAAA,EAAD,W,GA1TS7L,a,kbC0FJwhB,G,qLArGb5lB,MAAQ,CACN6O,MAAO,GACPtS,MAAO,KACP2S,QAAS,M,+CAGF,IAAD,OACE7J,EAAe1B,KAAKF,MAAMgB,YAAYxE,OAAtCoF,WADF,EAEsB1B,KAAK3D,MAAzB6O,EAFF,EAEEA,MAFF,EAESE,SACfvS,QAAQuF,IAAI,UACZpG,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEsJ,aAAYwJ,YAElC5S,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GAWL,OAVA/T,QAAQuF,IAAI,eAAgBwO,GAExBA,EAAahU,MACf,EAAKgJ,SAAS,CAAE2J,QAAS,KAAM3S,MAAOgU,EAAahU,QAEnD,EAAKgJ,SACH,CAAEhJ,MAAO,KAAM2S,QAASqB,EAAarB,UACrC,eAGGqB,KAERjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,UACgBoH,KAAKF,MAApBmB,WAMJjB,KAAKF,MAJPgB,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRvJ,QAAS,GACT6e,SAAU,IACV1c,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzCoH,KAAK3D,MAAMkP,QACb,kBAAC,UAAD,CAAMvP,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMkP,SAC3C,KAEJ,kBAACpP,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,UAExC,kBAAC0F,GAAA,EAAD,CACEC,YAAa3F,EAAQ,SACrByO,qBAAsBtS,EAAMuS,kBAC5B9I,aAAc,SAACwH,GAAD,OAAW,EAAKtJ,SAAS,CAAEsJ,WACzClN,MAAOgC,KAAK3D,MAAM6O,MAClBlP,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,gBACfhC,QAAS,kBAAM,EAAKkQ,kB,GA7Fd3O,IAAMoD,W,kbCuCXwhB,G,qLAvCb5lB,MAAQ,CACNi2B,SAAU,M,2DAIVtyB,KAAKuyB,a,iCAGK,IAAD,OACHC,EAAkBxyB,KAAKF,MAAMmB,WAAW5E,MAAMyX,OAAOrS,MAE3DzJ,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEo6B,sBAEtBl6B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GACL,EAAKhL,SAAS,CAAErJ,SAAUqU,OAE3BjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,IACgBoH,KAAKF,MAApBmB,WAER,OACE,kBAAC9E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC,GAAD,cAAImB,KAAK3D,QAAT,SAAI,EAAY9D,eAAhB,EAAI,EAAsBA,e,GAlCd8E,IAAMoD,W,8aCI1B,IAAMgyB,GAAW,CACf1P,UAAW,eACXvd,KAAM,WACNsR,OAAQ,SACRD,QAAS,UACTD,KAAM,OACNvc,KAAM,OACNuL,SAAU,YACVF,WAAY,aACZgtB,WAAY,uBACZC,YAAa,wBAqGApe,G,qLAjGblY,MAAQ,CACN8nB,MAAO,I,2DAGPnkB,KAAK4yB,e,mCAGO,IAAD,OACX56B,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC6rB,GACL,EAAKviB,SAAS,CAAEuiB,aAEjBxrB,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,IAIHoH,KAAKF,MAFPmB,EAFK,EAELA,WAFK,EAGLH,YAAeC,GAGjB,OACE,kBAACiT,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,SAChBD,QAAS,KALb,SAQGqD,KAAK3D,MAAM8nB,YARd,EAQG,EAAkBnlB,KAAI,SAAC6zB,EAAM17B,GAC5B,IAAMP,EAAMqjB,OAAOvD,KAAKmc,GAAM,GACxBC,EAAS7Y,OAAO6Y,OAAOD,GAAM,GACnC,OACE,kBAAC,GAAD,CACExmB,GAAE,OAASlV,EACXP,IAAG,OAASO,EACZsuB,aAAc,IACd5pB,MAAO42B,GAAS77B,IAEhB,kBAACuF,EAAA,QAAD,CACEvF,IAAG,QAAUO,EACb6E,MAAO,CAAEP,MAAO,IAAKqJ,UAAW,KAE/BguB,aAAkB5U,MACjB4U,EAAO9zB,KAAI,SAAChB,EAAO1E,GACjB,IAAIqvB,EAAI3qB,EAAMpH,GAOd,MANY,SAARA,IAAgB+xB,EAAC,SAAOvxB,EAAauxB,GAApB,MACT,cAAR/xB,IACF+xB,EAAI9Y,KAAO8Y,GAAGjM,OAAO,qBACX,aAAR9lB,IAAoB+xB,EAAIrtB,GAAYqtB,EAAG,SAC/B,SAAR/xB,IAAgB+xB,EAAIttB,GAAQstB,EAAG,SAGjC,kBAACxsB,EAAA,QAAD,CACEvF,IAAG,OAASA,EAAT,IAAgB0C,EACnB0C,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ6F,aAAc,IAGhB,kBAAC,GAAD,CACEzD,WAAYA,EACZ8T,KAAM/W,EACNd,KAAM,KAER,kBAACf,EAAA,QAAD,KACE,kBAAC,GAAD,CAAGvF,IAAG,OAASA,EAAT,IAAgB0C,GAAMqvB,QAMpC,kBAAC,GAAD,KAAImK,c,GAtFHryB,a,kbCff8T,G,qLACJlY,MAAQ,CACN9D,SAAU,M,gDAEH3B,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CAAMH,MAAOsY,GAAOiC,KAClB,kBAAC,GAAD,KAAI3f,GACJ,kBAAC,GAAD,KAAIoH,M,+BAIA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAMHyH,KAAKF,MANF,KAILmB,WAJK,EAKLH,aAAeC,EALV,EAKUA,GAAIC,EALd,EAKcA,SAAU1E,EALxB,EAKwBA,OAGzBwB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B6xB,EAAMr5B,KAAKC,QAAS,MAAFoH,OAAA,EAAAA,EAAIiyB,cAAe5xB,KAAKzG,OAAS,MAEzD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAClBhI,EAAW,kBAAC,GAAD,KAAIA,GAAgB,MAC7B,MAAFwI,OAAA,EAAAA,EAAIiyB,cAAe5xB,KAAKzG,MACvB,kBAAC,KAAD,CACEmB,QAAS,WAEP9D,MAASlC,EAAUC,YAAd,oBAA8C,CACjD+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqJ,MAAOnF,EAAOoF,eAEpCpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASH,EAAT,EAASA,SACb,EAAKqJ,SAAS,CAAErJ,aAChByI,EAAS1E,EAAOoF,YAFZ,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,QAIpB,kBAACuD,EAAA,QAAD,KACE,kBAAC,GAAD,KAAI2B,EAAQ,iBAAkBi1B,MAGhC,KAEJ,kBAAC52B,EAAA,QAAD,CAAMH,MAAO,CAAE0hB,iBAAkB,KAC9B1d,KAAKwW,SAAS1Y,EAAQ,QAAtB,gBAAmCiD,OAAnC,EAAmCA,EAAIwE,OACvCvF,KAAKwW,SAAS1Y,EAAQ,QAAtB,gBAAmCiD,OAAnC,EAAmCA,EAAIyE,OACvCxF,KAAKwW,SAAS1Y,EAAQ,cAAtB,MAAqCiD,OAArC,EAAqCA,EAAI2E,YACzC1F,KAAKwW,SAAS1Y,EAAQ,QAASzC,GAAO,MAAC0F,OAAD,EAACA,EAAI1G,KAAM,SACjD2F,KAAKwW,SACJ1Y,EAAQ,YACRxC,GAAW,MAACyF,OAAD,EAACA,EAAI6E,SAAU,SAE3B5F,KAAKwW,SAAS1Y,EAAQ,WAAtB,MAAoCiD,OAApC,EAAoCA,EAAI4E,QAAxC,KACA3F,KAAKwW,SAAS1Y,EAAQ,WAAtB,MAAkCiD,OAAlC,EAAkCA,EAAI0E,SACtCzF,KAAKwW,SAAS1Y,EAAQ,QAAtB,MAA+BiD,OAA/B,EAA+BA,EAAI6V,MACnC5W,KAAKwW,SAAS1Y,EAAQ,WAAtB,MAAkCiD,OAAlC,EAAkCA,EAAI8V,SACtC7W,KAAKwW,SAAS1Y,EAAQ,eAAtB,MAAsCiD,OAAtC,EAAsCA,EAAI+V,c,GApEhCrW,aA2Ef6T,GAAS3J,KAAWC,OAAO,CAC/B2L,IAAK,CACH/Z,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAID0V,M,kbCnEP9Y,GAAUD,IAAW1C,IAAI,UAAzB2C,MACFF,GAAUE,GAAQ,IAgTTw3B,G,kCA7Sb,WAAYnzB,GAAQ,IAAD,uBACjB,cAAMA,IAWR8J,WAAa,YAAsB,IAAnB5P,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MAAY,EAI5B,EAAK2I,MAAMgB,YAFbC,EAF8B,EAE9BA,GACU9G,EAHoB,EAG9BqC,OAAUrC,MAGNsnB,EAAO7nB,KAAKC,QAAS,MAAFoH,OAAA,EAAAA,EAAI1G,MAAO,KAAOL,EAAKqS,GAAKrS,EAAKqS,KACpDmV,EAAQD,EAAO,GAAK,GAAKA,EAEzB9kB,EACJ,EAAKJ,MAAMwE,WAAa7G,EAAKqS,GAAK,eAAYhU,EAChD,OACE,kBAACkE,EAAA,EAAD,CACET,QAAS,WACP,EAAK8F,SAAS,CAAEf,SAAU7G,EAAKqS,OAGjC,kBAAClQ,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdnC,QAAS,GACTE,kBAAmB,GACnBD,eAAgB,gBAChBH,oBAGF,kBAAC,UAAD,CAAMT,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK2H,QACjD,kBAAC,UAAD,CAAM3F,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBqnB,EAA5C,QAzCW,EA+CnB5N,OAAS,WAAO,IACNtX,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAEma,SAAS,IAAQ,WAC/B/jB,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,SACnBoW,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKoH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAEvC,EAAKE,SAAS,CACZrJ,WACAwjB,SAAS,EACT7E,OAAQxd,KAAKwd,SACbD,QAAS,KAPP,+DAULte,OAAM,SAACC,GACNC,QAAQD,MAAMA,UA3EH,EAgFnB4c,aAAe,WAAO,IAAD,EAQf,EAAK1V,MANPgB,EAFiB,EAEjBA,YAFiB,IAGjBA,YACEC,EAJe,EAIfA,GAJe,IAMfzE,OAIEwB,GAVa,EAML4D,WANK,EAMOzH,MAIVtD,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAaA,EACbmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,SACfhC,QAAS,EAAK8X,SAShB,kBAAC,GAAD,CAAQ9S,YAAaA,MApHR,EAyHnBsxB,WAAa,SAACC,EAAGj8B,GAAY,IAAD,EACM,EAAKiG,MAAnB3B,GADQ,EAClBnC,SADkB,EACRmC,MADQ,KACFm0B,IAOpB,EAAK/uB,OARiB,KAGxBmB,WAHwB,EAIxBH,aAEY7G,GANY,EAKtBqC,OALsB,EAMtBA,OAAUrC,OAId,OACE,kBAACsC,EAAA,EAAD,CACEP,MAAO,CACLS,gBACE/B,IAAS23B,EAAOp4B,EAAMyC,UAAtB,KAAsCzC,EAAMyC,UAC9Cgc,kBAAmB,EACnBxC,iBAAkB,EAClB3V,KAAM,EACN3D,eAAgB,SAChBiC,WAAY,UAEd/C,QAAS,kBAAM,EAAK8F,SAAS,CAAElH,KAAM23B,MAErC,kBAAC,GAAD,KAAIj8B,KA7IR,EAAKiG,MAAQ,CACXwE,SAAU,KACVoW,QAAS,GACTC,OAAQxd,KAAKwd,SACb3e,SAAU,KACVmC,KAAM,YARS,E,8CAoJT,IAAD,SAIHsF,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAeC,EAHV,EAGUA,GAAIzE,EAHd,EAGcA,OAHd,EAK8B0D,KAAK3D,MAAlC9D,EALD,EAKCA,SAAUsI,EALX,EAKWA,SAAUnG,EALrB,EAKqBA,KAEtBoD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B2I,EAAUnQ,KAAK0W,MAAMrP,EAAGsP,aAAe,IAAQjP,KAAKzG,OAAS,KAE7Du4B,EAAqB,aAATx4B,EAAsB,EAAa,YAATA,EAAqB,EAAI,GAE/DyD,EAAU,CACd,CACEkO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAElB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,EACJ1K,OAAQ7D,EAAQ,eAGlB,CACEuO,GAAI,GACJ1K,OAAQ7D,EAAQ,gBAGlB,CACEuO,GAAI,GACJ1K,OAAQ7D,EAAQ,gBAGlB,CACEuO,GAAI,GACJ1K,OAAQ7D,EAAQ,gBAGlB,CACEuO,GAAI,GACJ1K,OAAQ7D,EAAQ,gBAGlB,CACEuO,GAAI,GACJ1K,OAAQ7D,EAAQ,gBAGlB,CACEuO,GAAI,GACJ1K,OAAQ7D,EAAQ,iBAIpB,OACE,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,eAChB2E,OAAQ,KAGTvB,KAAKoyB,WAAW,WAAYt0B,EAAQ,aACpCkC,KAAKoyB,WAAW,UAAWt0B,EAAQ,aACnCkC,KAAKoyB,WAAW,SAAUt0B,EAAQ,YAGpCvF,EACC,kBAACyb,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAGsa,UAAW,MACtCtiB,EAASmoB,KACNnoB,EAASmoB,KAAK1hB,KAAI,SAACwhB,GACjB,OACE,kBAACnf,EAAA,EAAD,CACErF,MAAO,CACLP,MAAOF,GAAUE,GAAQ,IACzB8F,OAAQ,IACRmd,WAAY,WAEdpd,OAAQ,CACN8V,IAAKthB,EAAUC,YAAc,IAAMyqB,EAAIzM,UAK/C,KACJ,kBAAC,UAAD,CAAM/X,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAG3CsR,EAAU,EACZ,kBAAC,KAAD,CACE7H,MAAO6H,EACP5H,SAAU,kBAAM,EAAKL,SAAS,CAAEuxB,UAAU,KAC1Cj2B,KAAM,GACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAGtE,EAAQ,WAAYuE,EAAGvE,EAAQ,cAGlD,kBAACyM,GAAA,EAAD,CACEuQ,aAAc,SAAC9gB,EAAM7C,GAAP,aAAwBA,GACtCqT,KAAMrM,EAAQ2tB,MAAMoH,EAAWA,EAAY,GAC3CnY,UAAWla,EACX+I,WAAY5J,KAAK4J,WACjBoR,oBAAqBhb,KAAKwV,oB,GAtSf/U,a,aCVGjF,IAAW1C,IAAI,UAA1ByI,I,GAAP9F,M,GAAO8F,QAkMA6xB,GAjMI,SAAC,GAUb,IATLnyB,EASI,EATJA,WACAH,EAQI,EARJA,YAQI,IAPJA,YACEC,EAME,EANFA,GACAsyB,EAKE,EALFA,YACApT,EAIE,EAJFA,kBACAjf,EAGE,EAHFA,SAGE,IAFF1E,OAAUrC,EAER,EAFQA,MAAOyH,EAEf,EAFeA,WAGb5D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAK0BzD,oBAAS,GALnC,WAKGse,EALH,KAKYmE,EALZ,OAM4BziB,qBAN5B,WAMGlF,EANH,KAMa0S,EANb,OAO4BxN,mBAAS,MAPrC,WAOG0iB,EAPH,KAOaC,EAPb,KASIzK,EAA+BuD,2BAA/BvD,2BASRne,EAAOyoB,GACPzoB,GARsB,0BAAAiB,EAAAC,OAAA,uDACpBwnB,GAAW,GADS,WAAAznB,EAAA,MAEDK,EAAI,kBAAkB4I,IAFrB,OAEdgf,EAFc,OAGpBN,EAAYM,GACZR,GAAW,GAJS,+DAoJtB,OACE,kBAAC/jB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACgK,GAAA,EAAD,CACE8T,sBAAuB,CACrB9c,OAAwB,QAAhBlD,UAASC,GAAeiD,GAAS,SAAMlJ,GAEjDoS,oBArBe,WACnB,OACE,kBAACtO,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,gBAAiBJ,cAAe,QAC7D,kBAACL,EAAA,QAAD,KAAO5D,GAAY,kBAAC,GAAD,KAAIA,IAEvB,kBAAC4D,EAAA,QAAD,KACE,kBAACI,EAAA,EAAD,CACET,QAAS,kBAAMmF,EAAWgC,SAAS,sBAEnC,kBAAC6C,GAAA,EAAD,CAAW/I,KAAK,aAAaC,MAAM,SAASE,KAAM,SAatD8d,oBAAqB,kBAAM,kBAAC,GAAD,CAAQla,YAAaA,KAChD6d,eACE,kBAAC2U,GAAA,EAAD,CACE1U,WAAY7C,EACZ8C,UAAW,WACToB,IACAhV,EAAY,SAIlBT,KAAM6oB,EACNzpB,WArHa,SAAC,GAAqB,IAAnB5P,EAAkB,EAAlBA,KAAkB,EAAZ7C,MAC1B,OACE,kBAACgF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC6E,EAAA,EAAD,CACEC,OACgB,SAAdtH,EAAKU,KACD3D,EAAQ,KACM,YAAdiD,EAAKU,KACL3D,EAAQ,KACRA,EAAQ,KAEdiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7Bmd,WAAY,YAGd,kBAACviB,EAAA,QAAD,CAAMH,MAAO,CAAEgO,WAAY,KACzB,kBAAC,GAAD,KACGlM,EAAQ,aADX,KAC2B9D,EAAKu5B,SAEhC,kBAAC,GAAD,KACGz1B,EAAQ,SADX,KACuB9D,EAAK+H,MAE5B,kBAAC,GAAD,KACGjE,EAAQ,gBADX,KAC8B9D,EAAKw5B,uBAAuBp6B,OAD1D,IAEGY,EAAKqmB,iBAER,kBAAC,GAAD,KACGviB,EAAQ,SADX,WACwB9D,EAAK4gB,MAD7B,MAGC5gB,EAAKw5B,uBAAuBp6B,OAAS,GACpC,kBAAC,GAAD,KAAIY,EAAKw5B,uBAAuBx0B,KAAI,SAAC3H,GAAD,OAAOA,EAAE0F,QAAMvG,KAAK,OAGvDwD,EAAKw5B,uBAAuBpb,MAAK,SAAC/gB,GAAD,OAAOA,EAAE0F,QAAF,MAAWgE,OAAX,EAAWA,EAAIhE,SACxD/C,EAAKw5B,uBAAuBp6B,SAAWY,EAAKqmB,gBAC1C,kBAAC,GAAD,CACEpmB,MAAOA,EACP4B,MAAOiC,EAAQ,YACfhC,QAAS,kBAlDT,SAAO23B,GAAP,iBAAAh7B,EAAAC,OAAA,uDACZwnB,GAAW,GADC,WAAAznB,EAAA,MAEeM,EAAK,kBAAmB,CACjD2I,aACA+xB,kBAJU,gBAEJl7B,EAFI,EAEJA,SAIR0S,EAAY1S,GACZ2nB,GAAW,GACXlf,EAASU,GACTue,IATY,4DAkDejS,CAAMhU,EAAKqS,OAG5B,kBAAC,GAAD,CACEpS,MAAOA,EACP4B,MAAOiC,EAAQ,YACfhC,QAAS,kBApET,SAAO23B,GAAP,iBAAAh7B,EAAAC,OAAA,uDACZwnB,GAAW,GADC,WAAAznB,EAAA,MAEeM,EAAK,kBAAmB,CACjD2I,aACA+xB,kBAJU,gBAEJl7B,EAFI,EAEJA,SAIR0S,EAAY1S,GACZ0nB,IACAC,GAAW,GACXlf,EAASU,GATG,4DAoEegyB,CAAM15B,EAAKqS,OAI9B,kBAAC,GAAD,CACEpS,MAAOA,EACP4B,MAAOiC,EAAQ,eACfhC,QAAS,WAEP,IAAMqC,EAAUgiB,EAASnhB,KACvB,SAAC6hB,GAAD,OACKA,EAAQD,KADb,IACqB9iB,EAAQ,QAD7B,IAEI+iB,EAAQC,MAFZ,QAGUhjB,EAAQ,YAEpBK,EAAQ+b,KAAKpc,EAAQ,WACrB,IACMqc,EAAoBhc,EAAQ/E,OAAS,EAE3Cuc,EACE,CACExX,UACAgc,oBACAC,4BAP2B/hB,IAS7B,SAACud,GACKA,IAAgBzX,EAAQ/E,OAAS,GA7G1C,SAAOq6B,EAAcjT,GAArB,YAAA/nB,EAAAC,OAAA,uDACXwnB,GAAW,GADA,WAAAznB,EAAA,MAEyBM,EAAK,iBAAkB,CACzD2I,aACA+xB,eACA1S,MAAK,MAAEP,OAAF,EAAEA,EAAKnU,MALH,gBAEHd,EAFG,EAEHA,QAAShT,EAFN,EAEMA,SAKjB0S,EAAY1S,GACZ2nB,GAAW,GACP3U,IACF0U,IACAjf,EAASU,IAXA,4DA8GOlL,CAAKwD,EAAKqS,GAAI8T,EAASvK,iBC3JhC+d,GAAgB,CAC3B52B,KAAM,WACNL,UAAW,UACXO,cAAe,UACfuP,kBAAmB,UACnBN,QAAS,UACT/R,YAAa,UACby5B,eAAgB,WA0GHC,GA/FK,SAAC,GAA0D,EAAxD5yB,WAAyD,IAAD,IAA5CH,YAAeH,EAA6B,EAA7BA,SAAUI,EAAmB,EAAnBA,GACpD+yB,EADuE,EAAfx3B,OAClCrC,MAKtB6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B6yB,EAAS,CACbJ,GAEA,CACE52B,KAAMe,EAAQ,mBACdpB,UAAW,UACXO,cAAe,UACfuP,kBAAmB,UACnBN,QAAS,UACT/R,YAAa,UACby5B,eAAgB,WAElB,CACE72B,KAAMe,EAAQ,cACdoO,QAAS,UACTxP,UAAW,UACXvC,YAAa,UACb8C,cAAe,UACfuP,kBAAmB,UACnBonB,eAAgB,WAElB,CACE72B,KAAMe,EAAQ,aACdoO,QAAS,UACTxP,UAAW,UACXvC,YAAa,UACb8C,cAAe,UACfuP,kBAAmB,UACnBonB,eAAgB,WAElB,CACE72B,KAAMe,EAAQ,cACdoO,QAAS,UACTxP,UAAW,UACXvC,YAAa,UACb8C,cAAe,UACfuP,kBAAmB,UACnBonB,eAAgB,YAIpB,OACE,kBAAC5f,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACxBwzB,EAAO/0B,KAAI,SAAC/E,EAAO9C,GAClB,OACE,kBAACoF,EAAA,EAAD,CACET,QAAS,kBApDF,SAAC7B,GAChB0G,EAAS,CAAEjG,KAAM,YAAasD,MAAO/D,IAmDd+5B,CAAS/5B,IACxBrD,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZqH,OAAQ,KAGV,kBAAC/J,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiBxC,EAAMiS,QACvB+nB,oBAAqB,GACrBnxB,YAAa,EACboxB,qBAAsB,GACtBz4B,MAAO,GACP8F,OAAQ,MAGZ,kBAACpF,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiBxC,EAAMyC,UACvBoG,YAAa,EACbqxB,uBAAwB,GACxBC,wBAAyB,GACzB34B,MAAO,GACP8F,OAAQ,OAKd,kBAAC,UAAD,CAAMvF,MAAO,CAAEgB,MAAO82B,EAAa35B,YAAa6P,WAAY,KACzD/P,EAAM8C,Y,kbCSNklB,G,qLA7Gb5lB,MAAQ,CACNoP,MAAO,GACP7S,MAAO,KACP2S,QAAS,M,8CAGH,IAAD,OACGtK,EAAejB,KAAKF,MAApBmB,WAEFQ,EAAQzB,KAAKF,MAAMgB,YAAYxE,OAAOoF,WAEpC+J,EAAUzL,KAAK3D,MAAfoP,MAERzT,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqT,QAAOhK,YAE7BnJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GAQL,OAPA/T,QAAQuF,IAAI,eAAgBwO,GAE5B,EAAKhL,SAAS,CAAErJ,SAAUqU,EAAarU,WAEnCqU,EAAarB,SACftK,EAAWgC,SAAS,kBAAmB,CAAEwI,UAEpCmB,KAERjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOHoH,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAKR6D,GAFYkC,KAAK3D,MAAfoP,MAEQ9U,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAACmV,EAAA,EAAD,CACEhY,MAAO,CACLuE,KAAM,IAGPP,KAAK3D,MAAM9D,SACV,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB6F,KAAK3D,MAAM9D,UAEZ,KAEJ,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,gBACxC,kBAAC0F,GAAA,EAAD,CACEC,YAAY,MACZ8I,qBAAsBtS,EAAMuS,kBAC5B9I,aAAc,SAAC+H,GAAD,OAAW,EAAK7J,SAAS,CAAE6J,WACzCzN,MAAOgC,KAAK3D,MAAMoP,MAClBzP,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAKu4B,iB,GA3Fdh3B,IAAMoD,W,kbCqHX0I,M,qLAnHb9M,MAAQ,CACNwP,KAAM,GACNjT,MAAO,KACP2S,QAAS,M,8CAGH,IAAD,WAIDvL,KAAKF,MAJJ,KAEHmB,WAFG,EAGHH,aAAeH,EAHZ,EAGYA,SAAUK,EAHtB,EAGsBA,SAGnB6K,EAAS7L,KAAK3D,MAAdwP,KAER7T,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnByT,OACAJ,MAAK,SAAEzL,KAAKF,MAAMmB,WAAW5E,MAAMyX,aAA9B,EAAE,EAAoCrI,UAG5CnT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACsU,GAiBL,OAhBA/T,QAAQuF,IAAI,eAAgBwO,GAE5B,EAAKhL,SAAS,CAAErJ,SAAUqU,EAAarU,WAEnCqU,EAAarB,UACf5K,EAAS,CACPjG,KAAM,4BACNsD,MAAO4O,EAAanL,QAGtBT,EAAS4L,EAAalL,YAEtB,EAAK5B,MAAMyJ,UAAUL,uBAAuB0D,EAAalL,aAIpDkL,KAERjU,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOHoH,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACY7G,EAJP,EAIHqC,OAAUrC,MACV8G,EALG,EAKHA,GAIEjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN2F,OAAQ,GACRvJ,QAAS,GACTmC,aAAc,KAGfkB,KAAK3D,MAAM9D,SACV,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB6F,KAAK3D,MAAM9D,UAEZ,KAEJ,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB2D,EAAQ,SAEpD,kBAAC0F,GAAA,EAAD,CACEC,YAAY,SACZ8I,qBAAsBtS,EAAMuS,kBAC5B9I,aAAc,SAACmI,GAAD,OAAU,EAAKjK,SAAS,CAAEiK,UACxC7N,MAAOgC,KAAK3D,MAAMwP,KAClB7P,MAAOA,GAAM/B,GAAO4Q,aAIxB,kBAAC1O,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,YACfhC,QAAS,kBAAM,EAAKu4B,iB,GA3Gdh3B,IAAMoD,YCoDX6zB,GAvDI,SAAC,GAAqB,IAAnBxzB,EAAkB,EAAlBA,YAAkB,EACZrD,mBAAS,MADG,WAC/BoqB,EAD+B,KACxB0M,EADwB,OAEN92B,mBAAS,MAFH,WAE/BlF,EAF+B,KAErB0S,EAFqB,KAKpC3O,EAIEwE,EAJFxE,OACUrC,EAGR6G,EAHFxE,OAAUrC,MACV+G,EAEEF,EAFFE,SACAD,EACED,EADFC,GAGIjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAC9BA,EAASzK,EAAS,MAACsK,OAAD,EAACA,EAAIG,QAC7B1J,GAAO,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACmBK,EAAI,eADvB,gBACG+uB,EADH,EACGA,MACR0M,EAAS1M,GAFJ,+DAcP,OACE,kBAAC1rB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,iBACtC,kBAAC,UAAD,CAAMZ,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,YAAagS,UAAW,WACxDrO,EAAQ,sBAAD,MAAwBiD,OAAxB,EAAwBA,EAAIyzB,UAGrCj8B,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,YAAagS,UAAW,WACxD5T,GAPP,MAWGsvB,OAXH,EAWGA,EAAO7oB,KAAI,SAAChF,GAAD,OACV,kBAAC,GAAD,CACEC,MAAOA,EACP+B,MAAO,CAAE0hB,iBAAkB,IAC3B7hB,MAAU7B,EAAKy6B,SAASvzB,GAAnB,IAA8BpD,EAAQ,OAAtC,IACH9D,EAAK06B,OADF,IAED52B,EAAQ,WACZhC,QAAS,YA5BL,SAAOpB,GAAP,UAAAjC,EAAAC,OAAA,kEAAAD,EAAA,MACiBM,EAAK,gBAAiB,CAC/C2I,WAAYpF,EAAOoF,WACnBhH,UAHQ,gBACFnC,EADE,EACFA,SAIR0S,EAAY1S,GACZyI,EAAS1E,EAAOoF,YANN,4DA6BFmtB,CAAI70B,EAAKqS,YCCNsoB,GAjDA,SAAC,GAMT,IAAD,IALJ7zB,YACExE,EAIE,EAJFA,OACAyE,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B0S,EAAS,SAAO5Z,GAAP,eAAAvB,EAAAC,OAAA,kEAAAD,EAAA,MACUM,EAAK,eAAgB,CAC1C0I,MAAOnF,EAAOoF,WACd1H,UAHW,QACPzB,EADO,QAMAwb,KACX+L,UAAQC,QAAQxnB,EAASwb,KAPd,6DAUf,MAAuB,QAAhB1V,UAASC,GACd,kBAAC,UAAD,CAAMtC,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,+BAGX,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,iBACtC,kBAAC,GAAD,CACE3C,MAAOA,EACP+B,MAAO,CAAE0hB,iBAAkB,IAC3B7hB,MAAOiC,EAAQ,WACfhC,QAAS,kBAAM8X,EAAO,MAExB,kBAAC,GAAD,CACE3Z,MAAOA,EACP+B,MAAO,CAAE0hB,iBAAkB,IAC3B7hB,MAAOiC,EAAQ,WACfhC,QAAS,kBAAM8X,EAAO,MAExB,kBAAC,GAAD,CACE3Z,MAAOA,EACP+B,MAAO,CAAE0hB,iBAAkB,IAC3B7hB,MAAOiC,EAAQ,WACfhC,QAAS,kBAAM8X,EAAO,MAGxB,kBAAC,UAAD,CAAM5X,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB2D,EAAQ,kB,u/BCuB3C82B,G,qLA9Dbv4B,MAAQ,CACN9D,SAAU,KACV0F,QAAS,M,EA+BXwW,YAAc,WAAO,IACXnY,EAAW,EAAKwD,MAAMgB,YAAtBxE,OADU,EAEW,EAAKD,MAA1B4B,EAFU,EAEVA,QAASuW,EAFC,EAEDA,QACjBxc,MAASlC,EAAUC,YAAd,gBAA0C,CAC7C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdzD,UACAuW,cAGDlc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKqJ,SAAS,CAAErJ,gBAEjBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,oDAjDN,IAAD,SACYoH,KAAKF,MAAMgB,YAA1BC,EADG,EACHA,GAAIzE,EADD,EACCA,OAENwB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC8S,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAAC,GAAD,KAAImB,EAAQ,mBAAD,MAAqBiD,OAArB,EAAqBA,EAAIyzB,UACnCx0B,KAAK3D,MAAM9D,SAAW,kBAAC,GAAD,KAAIyH,KAAK3D,MAAM9D,SAASA,UAAgB,KAE/D,kBAACiL,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAMM,EAAOrC,OAAO4Q,WAA3B,IAAsCtJ,OAAQ,MACnDkC,YAAa3F,EAAQ,WACrByO,qBAAsBjQ,EAAOrC,MAAMuS,kBACnCmR,WAAS,EACT3f,MAAOgC,KAAK3D,MAAM4B,QAClByF,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAG7C,kBAAC,GAAD,CACEhE,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAEsO,eAAgB,IACzBzO,MAAOiC,EAAQ,QACfhC,QAASkE,KAAKyU,iB,+BA+BpB,OAAOzU,KAAK0U,iB,GA3DWjU,aCkCZo0B,GAlCH,SAAC/0B,GAAW,IAAD,IACCrC,mBAAS,UADV,WACduY,EADc,KACT6C,EADS,KAGf/a,EAAUnH,EAAe,SAACmJ,EAAMgB,YAAYC,SAAnB,EAAC,EAAsBG,QAEtD,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CACEwV,KAAM,CACJ,CACEla,MAAOiC,EAAQ,cACfmY,SAAkB,WAARD,EACVla,QAAS,kBAAM+c,EAAO,YAExB,CACEhd,MAAOiC,EAAQ,cACfmY,SAAkB,eAARD,EACVla,QAAS,kBAAM+c,EAAO,gBAGxB,CACEhd,MAAOiC,EAAQ,gBACfmY,SAAkB,iBAARD,EACVla,QAAS,kBAAM+c,EAAO,qBAKnB,WAAR7C,GAAoB,kBAAC,GAAWlW,GACxB,eAARkW,GAAwB,kBAAC,GAAelW,GAChC,iBAARkW,GAA0B,kBAAC,GAAiBlW,K,kbC2MpCgxB,G,kCAvOb,WAAYhxB,GAAQ,IAAD,uBACjB,cAAMA,IA6BR8T,OAAS,WAAO,IACNtX,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAEma,SAAS,IACzB/jB,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACduV,QAAS,EAAK5a,MAAM4a,YAGrB3e,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAwjB,SAAS,EACT7E,OAAQxd,KAAKwd,SACbD,QAAS,KAEX,EAAKnX,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAxDD,EA4DnBuf,YAAc,SAAOpW,GAAP,uBAAAtJ,EAAAC,OAAA,yDAC+B,EAAKoH,MAAMgB,YAA9CE,EADI,EACJA,SAAU1E,EADN,EACMA,OAAQwb,EADd,EACcA,aADd,WAAArf,EAAA,MAEeM,EAAK,cAAe,CAC7CgJ,OACArH,KAAM,WACN+G,MAAOnF,EAAOoF,cALJ,kBAEJnJ,SAKRuf,IAEA9W,EAAS1E,EAAOoF,YATJ,6DA5DK,EAwEnBgoB,aAAe,WAAO,IAAD,EAKf,EAAK5pB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACA8W,EAJiB,EAIjBA,OAEM5W,EAAe,EAAKnB,MAApBmB,WAEFnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,oCACE,kBAAC/E,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN/D,cAAe,MACfI,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAxBjB,MA4BG+Z,OA5BH,EA4BGA,EAAQ7Y,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ4Z,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAK+yB,cACJ,kBAAC,GAAD,KAAI/yB,EAAK+yB,eAET,kBAACv4B,EAAA,EAAD,CACET,QAAS,kBAAM,EAAKqc,YAAYpW,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAK+yB,iBAAL,MAAuB/zB,OAAvB,EAAuBA,EAAIhE,MAC1B,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,WACNqH,KAAMA,EAAKA,SAIf,kBAACqK,GAAA,EAAD,CAAQrP,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,GAAD,KAAI6E,EAAKgzB,uBA9JJ,EAsKnBvf,aAAe,WAAO,IAAD,EAIf,EAAK1V,MAAMgB,YADbC,GAHiB,EAEjBzE,OAAUrC,MAFO,EAGjB8G,IAGIjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC8S,EAAA,EAAD,CAAYhY,MAAO,CAAEuE,KAAM,IACxB,EAAKiW,SAAS1Y,EAAQ,oBAAtB,MAA2CiD,OAA3C,EAA2CA,EAAI6V,MAEhD,kBAAC,GAAD,CACE9V,YAAa,EAAKhB,MAAMgB,YACxBmW,QAAS,EAAK5a,MAAM4a,QACpBD,gBAAiB,SAAC3f,GAAD,OAAO,EAAKuK,SAAS,CAAEqV,QAAS5f,KACjD6f,OAAQ,EAAK7a,MAAM6a,OACnBC,eAAgB,SAAC9f,GAAD,OAAO,EAAKuK,SAAS,CAAEsV,OAAQ7f,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,YACfhC,QAAS,EAAK8X,SAGf,EAAK8V,iBA9LV,EAAKrtB,MAAQ,CACX9D,SAAU,KACV0e,QAAS,GACTC,OAAQxd,KAAKwd,UANE,E,yDAWjBlX,KAAKF,MAAMgB,YAAYgX,iB,+BAGhBlhB,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,M,+BA4KA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAOHyH,KAAKF,MAJPgB,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAGR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAI3F,KAAM,IAC9BhI,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAGsa,UAAW,MACjC,kBAAC,UAAD,CAAM7e,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7CyH,KAAKwV,qB,GAhOE/U,aCYJu0B,GAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,kBAAC94B,EAAA,QAAD,CACEH,MAAO,CACLP,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdgE,YAAa,EACbC,YAAa,QACbnG,eAAgB,SAChBiC,WAAY,WAGbo2B,GAAU,kBAAC7oB,GAAA,EAAD,CAAQrP,KAAK,QAAQG,KAAM,OCuF7Bg4B,GAtFF,SAAC,GAKP,IAAD,IAJJp0B,YACEC,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B/C,EAAU,CACd,CACEtC,MAAOiC,EAAQ,eACfq3B,MAAO,GAGT,CACEt5B,MAAOiC,EAAQ,eACfq3B,MAAO,GAGT,CACEt5B,MAAOiC,EAAQ,eACfq3B,MAAO,GAGT,CACEt5B,MAAOiC,EAAQ,eACfq3B,MAAO,GAGT,CACEt5B,MAAOiC,EAAQ,eACfq3B,MAAO,GAGT,CACEt5B,MAAOiC,EAAQ,eACfq3B,MAAO,GAGT,CACEt5B,MAAOiC,EAAQ,eACfq3B,MAAO,IApCP,EAwC4B13B,mBAAS,GAxCrC,WAwCGoD,EAxCH,KAwCau0B,EAxCb,OAyC4B33B,mBAAS,MAzCrC,WAyCawN,GAzCb,WA+CJ,OACE,kBAAC9O,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB/H,EAAQa,KAAI,SAAC2C,EAAQxK,GACpB,OACE,kBAACoF,EAAA,EAAD,CACET,QAAS,kBAAMs5B,EAAYj+B,IAC3BP,IAAG,MAAQO,EACX6E,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZjC,eAAgB,gBAChB6b,gBAAiB,GACjB5b,kBAAmB,GACnBiC,aAAc,IAGhB,kBAAC3C,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,CAAUo2B,OAAQp0B,IAAa1J,IAC/B,kBAAC,GAAD,CAAG6E,MAAO,CAAEgO,WAAY,KAAOrI,EAAO9F,QAExC,kBAAC,GAAD,KACG8F,EAAOwzB,MADV,IACkBr3B,EAAQ,cAMhC,kBAAC,GAAD,CAAQ7D,MAAOA,EAAO4B,MAAOiC,EAAQ,WAAYhC,QAhCxC,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcM,EAAK,OAAQ,CAAEs8B,KAAMx0B,KADnC,gBACLtI,EADK,EACLA,SACR0S,EAAY1S,GAFC,kE,gDClCF+8B,GADH,CAAEC,QAnBE,SAACC,GACf,IAAMzhB,EAASje,EAAUC,YAAhB,aAAwCy/B,EAAQ9zB,WAEzD,OAAO1J,MAAM+b,EAAK,CAChBjc,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOyI,GAAP,SAAAtI,EAAAC,OAAA,yEACGqI,GADH,+DAGLpI,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIGq5B,YAvBH,SAACuD,GACnB,OAAO18B,EAAI,WAsBuB28B,iBA3BX,SAACD,GACxB,OAAO18B,EAAI,iB,YCAHy8B,I,YAUAE,I,YAUAxD,I,YAiBAyD,IArCV,SAAUH,GAAQpM,GAAlB,uEAEe,OAFf,kBAEqBwM,aAAKL,GAAIC,QAASpM,EAAOqM,SAF9C,OAII,OAFMz0B,EAFV,gBAIU60B,aAAI,CAAEl7B,KAAM,qBAAsBqG,OAJ5C,8BAMI,OANJ,mCAMU60B,aAAI,CAAEl7B,KAAM,kBAAmBuD,QAAS,KAAEA,UANpD,sDAUA,SAAUw3B,GAAiBtM,GAA3B,yEAE4B,OAF5B,kBAEkCwM,aAAKL,GAAIG,iBAAkBtM,EAAOqM,SAFpE,OAII,OAJJ,SAEYnC,EAFZ,EAEYA,YAFZ,SAIUuC,aAAI,CAAEl7B,KAAM,8BAA+B24B,gBAJrD,8BAMI,OANJ,mCAMUuC,aAAI,CAAEl7B,KAAM,2BAA4BuD,QAAS,KAAEA,UAN7D,sDAUA,SAAUg0B,GAAY9I,GAAtB,yEAEuB,OAFvB,kBAE6BwM,aAAKL,GAAIrD,YAAa9I,EAAOqM,SAF1D,OAII,OAJJ,SAEY3d,EAFZ,EAEYA,OAFZ,SAIU+d,aAAI,CAAEl7B,KAAM,yBAA0Bmd,WAJhD,8BAMI,OANJ,mCAMU+d,aAAI,CAAEl7B,KAAM,sBAAuBuD,QAAS,KAAEA,UANxD,sDAiBA,SAAUy3B,KAAV,iEACE,OADF,SACQG,aAAW,qBAAsBN,IADzC,OAEE,OAFF,SAEQM,aAAW,yBAA0B5D,IAF7C,OAGE,OAHF,SAGQ4D,aAAW,8BAA+BJ,IAHlD,wCAMeC,U,qkBC1Bf,IAAMI,GAAa,CACjBp0B,WAAY,GACZq0B,QAAQ,EACR97B,MAAO05B,GACPvzB,YAAa,EACb41B,aAAc,EACd/sB,UAAW,GACXqiB,KAAM,CACJ3sB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAgHxBq3B,GAAS,CACbr/B,IAAK,KACLs/B,QAAS5Q,KACT6Q,UAAW,CAAC,SAAU,KAAM,cAAe,WAGvCC,GAAiBC,eAEjBC,GAAW,CACfh6B,OArHoB,WAAyC,IAAxCD,EAAuC,uDAAvBy5B,GAAY3M,EAAW,uCAC5D,OAAQA,EAAOzuB,MACb,IAAK,QACH,OAAOo7B,GAGT,IAAK,iCACH,OAAO,SAAKz5B,GAAZ,IAAmBivB,KAAM,CAAE3sB,KAAMtC,EAAMivB,KAAK3sB,KAAMC,MAAOuqB,EAAOnrB,SAElE,IAAK,gCACH,OAAO,SACF3B,GADL,IAEEivB,KAAM,CAAE1sB,MAAOvC,EAAMivB,KAAK1sB,MAAOD,KAAMwqB,EAAOnrB,SAIlD,IAAK,mBACH,OAAO,SAAK3B,GAAZ,IAAmB+D,YAAa+oB,EAAOnrB,QAGzC,IAAK,kBACH,OAAO,SAAK83B,IAAZ,IAAwBp0B,WAAYynB,EAAOnrB,QAG7C,IAAK,4BACH,OAAO,SAAK83B,IAAZ,IAAwBp0B,WAAYynB,EAAOnrB,MAAO+3B,QAAQ,IAG5D,IAAK,aACH,OAAO,SAAK15B,GAAZ,IAAmB05B,OAAQ5M,EAAOnrB,QAGpC,IAAK,YACH,OAAO,SAAK3B,GAAZ,IAAmBpC,MAAOkvB,EAAOnrB,QAGnC,IAAK,eACH,OAAO,SAAK3B,GAAZ,IAAmB4M,UAAW5M,EAAM4M,UAAUstB,OAAO,CAACpN,EAAOnrB,UAG/D,IAAK,kBACH,OAAO,SAAK3B,GAAZ,IAAmB4M,UAAW,KAGhC,IAAK,wBACH,OAAO,SAAK5M,GAAZ,IAAmB25B,aAAc35B,EAAM25B,aAAe,IAGxD,QACE,OAAO35B,IAqEX0E,GAhEgB,WAA6B,IAA5B1E,EAA2B,uDAD/B,KACoB8sB,EAAW,uCAC5C,OAAQA,EAAOzuB,MACb,IAAK,QACH,OAJS,KAOX,IAAK,qBACH,OAAOyuB,EAAOpoB,GAGhB,IAAK,kBAGL,QACE,OAAO1E,IAmDXwb,OA3BoB,WAAiC,IAAhCxb,EAA+B,uDADnC,KACwB8sB,EAAW,uCACpD,OAAQA,EAAOzuB,MACb,IAAK,QACH,OAJa,KAMf,IAAK,yBACH,OAAOyuB,EAAOtR,OAEhB,IAAK,sBAGL,QACE,OAAOxb,IAgBXg3B,YA/CyB,WAAsC,IAArCh3B,EAAoC,uDADxC,KAC6B8sB,EAAW,uCAC9D,OAAQA,EAAOzuB,MACb,IAAK,QACH,OAJkB,KAOpB,IAAK,8BACH,OAAOyuB,EAAOkK,YAGhB,IAAK,2BAGL,QACE,OAAOh3B,KAoCPm6B,GAAcC,aAAuBR,GAAQK,IAE7CI,GAAmBpwB,OAAOqwB,sCAAwCC,KAElEC,GAAQC,aACZN,GACAE,GAAiBK,aAAgBX,MAE7BY,GAAYC,aAAaJ,I,qkBAE/BT,GAAec,IAAIxB,I,OC/COl6B,IAAW1C,IAAI,UAAjC2C,G,GAAAA,MAAO8F,G,GAAAA,OACTwC,GAAgBtI,GAAQ,IAEjB22B,GAAa,SACxBp4B,EACA7C,EACA8J,EACAhH,EACA0G,EACAI,GAEA,IAAM9E,EAAUC,EAAKlC,EAAK4X,UAEpBulB,EAAYl2B,EAAW5E,MAAM8J,YAAcnM,EAAK6X,GAChDulB,EAAcp9B,EAAK0X,SAAWvV,UAAOI,IACrCuB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,gBAACk2B,EAAD,CACExgC,IAAG,OAASO,EACZ2E,QAAS,SAACiM,GACR,GAAI/N,EAAK6X,GAAI,CACX5Q,EAAWgC,SAASjJ,EAAK6X,GAAI7X,EAAK8Z,QAElC,IAAMyX,EAAW,CACfpC,OAAQ,YAAcnvB,EAAK6X,GAC3B2Z,UAAWzjB,EAAEnE,YAAY4nB,UACzBC,UAAW1jB,EAAEnE,YAAY6nB,UACzBC,UAAWtqB,KAAKzG,OAGlBgG,EAAS,CAAEjG,KAAM,eAAgBsD,MAAOutB,OAI5C,gBAACpkB,GAAD,CAAWC,UAAW,KAAMC,WAAY,OACrC,SAACC,GAAD,OACC,gBAACnL,EAAA,QAAD,CACEH,MAAO,CACL0c,kBAAmB,EACnB/b,QAAS,EACTF,gBAAiBzC,EAAK0X,SAClBzX,EAAMiS,S/GiBEjT,E+GhBEgB,EAAMiS,Q/GgBAlT,EAAeC,GAAM,K+GfzCo+B,YAAa,IAGf,gBAACl7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZgc,UAAW,GACXpe,gBACE6K,GAAa6vB,EACTr9B,EAAWG,EAAMiS,cACjB7T,EACNyG,aAAcwI,GAAa6vB,EAAY,QAAK9+B,IAG9C,gBAAC8D,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,GAAIoD,WAAY,WACnC5C,EACC,gBAACA,EAAD,CACEc,KAAM/C,EAAK2B,KACXuB,KAAM,GACNF,MAAO/C,EAAMgD,gBAEbjD,EAAK6Y,MACP,gBAACxR,EAAA,EAAD,CACEC,OAAQ,CAAE8V,IAAKpd,EAAK6Y,OACpB7W,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,GAAIzC,aAAc,MAE9C,MAEN,gBAAC,UAAD,CACE9C,MAAO,CACLgO,WAAY,GACZhN,MAAO/C,EAAME,YACb4E,WAAY/E,EAAK0X,SAAW,YAASrZ,IAGtC2B,EAAKkF,MAEPlF,EAAKgY,OACJ,gBAAC7V,EAAA,QAAD,CACEH,MAAO,CACLgO,WAAY,GAEZlL,aAAc,GACdiE,YAAa9I,EAAME,YACnB2I,YAAa,EACbnG,QAAS,IAGX,gBAAC,GAAD,KAAImB,EAAQ,SAGf9D,EAAK8X,Y/GrCK,IAAC7Y,O+G8CpBq+B,GAAS,SAAC,GAA2C,IAAD,IAAxCx2B,EAAwC,EAAxCA,YAAaG,EAA2B,EAA3BA,WAAYzD,EAAe,EAAfA,SACjCuD,EAAmCD,EAAnCC,GAAIzE,EAA+BwE,EAA/BxE,OAAQqE,EAAuBG,EAAvBH,SAAUK,EAAaF,EAAbE,SAEtBkI,EAA2B7L,aAAiBqL,IAA5CQ,uBAER1R,GAAO,WACL,IAAIiK,EAAQnF,EAAOoF,YAEdD,GAASA,EAAMrI,OAAS,IAC3BqI,EAkdN,SAAgBrI,GAKd,IAJA,IAAIkjB,EAAS,GACTib,EACF,iEACEC,EAAmBD,EAAWn+B,OACzBE,EAAI,EAAGA,EAAIF,EAAQE,IAC1BgjB,GAAUib,EAAWE,OAAO/9B,KAAKoQ,MAAMpQ,KAAKwd,SAAWsgB,IAEzD,OAAOlb,EA1dKob,CAAO,IACf/2B,EAAS,CAAEjG,KAAM,kBAAmBsD,MAAOyD,IAE3CyH,EAAuBzH,GACvBT,EAASS,IAETT,EAASS,GAGXqe,UAAQ3f,iBAAiB,MAAOw3B,GAChC7X,UAAQ8X,gBAAgBt/B,MAAK,SAACyb,GAAD,OAAS4jB,EAAW5jB,SAGnD,IAAM4jB,EAAa,SAAC5jB,GAClBlb,QAAQuF,IAAI,2BAA4B2V,IAG1Cpc,qBAAU,WACRqJ,EAAS1E,EAAOoF,cACf,CAACpF,EAAOy5B,SAEX,IAAMj4B,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QA9BoB,EAgCpBzD,mBAAQ,SAACnB,EAAOgvB,WAAR,EAAC,EAAa3sB,MAhCF,WAgCjDk5B,EAhCiD,KAgCrCC,EAhCqC,OAiClBr6B,mBAAQ,SAACnB,EAAOgvB,WAAR,EAAC,EAAa1sB,OAjCJ,WAiCjDm5B,EAjCiD,KAiCpCC,EAjCoC,KAmClDC,EAA8B,SAAC,GAM/B,EALJC,aACE5Q,QACE3V,QAAWnH,MAQX2tB,EAAe,SAAC/N,GACC,WAAjBA,IAIFtpB,EAAYH,SAAS,CAAEjG,KAAM,0BAEzBoG,EAAYxE,OAAO05B,aAAe,GACpChJ,MAA+B10B,MAAK,SAAC8/B,GAE/BA,GACFpL,WAMVr1B,qBAAU,WACR0gC,0CACEJ,KAED,IAEHtgC,qBAAU,WAGR,OAFAg0B,IAASxrB,iBAAiB,SAAUg4B,GAE7B,WACLxM,IAASC,oBAAoB,SAAUuM,MAExC,IAEH,IAkCMG,EAlCgB,CACpB,OACA,WACA,UACA,UACA,SACA,QACA,YACA,OACA,WACA,UACA,QACA,OACA,WACA,YACA,UACA,aACA,SACA,gBACA,cACA,iBACA,cACA,aACA,QACA,QACA,YACA,WACA,aACA,QACA,OACA,eACA,mBACA,UAEyB5Q,SAASzmB,EAAW5E,MAAM8J,WA+FrD,OACE,gBAAChK,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,gBAACC,EAAA,EAAD,CACExE,MAAO,CACLQ,cAAe,MACf+D,KAAM,EACN9D,gBAAiBH,EAAOrC,MAAMiS,UAGf,QAAhB7N,UAASC,IArGd,gBAACi6B,EAAA,EAAD,KACE,iEACA,wBAAMx7B,KAAK,cAAc4U,QAAS7T,EAAQ,qBAE1C,wBAAMqyB,SAAS,SAASxe,QAAQ,8BAChC,wBAAMwe,SAAS,UAAUxe,QAAQ,YACjC,wBAAMwe,SAAS,WAAWxe,QAAS7T,EAAQ,iBAC3C,wBAAMqyB,SAAS,iBAAiBxe,QAAS7T,EAAQ,uBACjD,wBAAMqyB,SAAS,WAAWxe,QAAQ,MA8F/B5N,GAAgB,KAzFrB,gBAAC5H,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,MACpB,gBAACuY,EAAA,EAAD,CACEhY,MAAO,CAAEP,MAAO,KAChB4iB,sBAAuB,CACrB5iB,MAAO,IACP8F,OAAwB,QAAhBlD,UAASC,GAAeiD,GAAS,SAAMlJ,IAGjD,gBAACmgC,EAAA,EAAD,CACEC,gBAAc,EACdC,SAAUxoB,GAASnP,EAAIzE,EAAOrC,OAC9B0+B,eAAgBd,EAChB/a,SAAU,SAACmY,GACT6C,EAAc7C,GACdt0B,EAAS,CACPjG,KAAM,gCACNsD,MAAOi3B,KAGXvqB,aAAc,SAACkuB,EAASzhC,GAAV,OACZi7B,GACEwG,EAAQnnB,OACRta,EACA8J,EACA3E,EAAOrC,MACP0G,EACAI,IAGJ83B,cAAe,SAACD,GAAD,OACbA,EAAQjnB,QAAQ3S,KAAI,SAAChF,EAAM7C,GAAP,OAClBi7B,GAAWp4B,EAAM7C,EAAO8J,EAAY3E,EAAOrC,MAAO0G,EAAUI,WA4DlE,gBAAC5E,EAAA,QAAD,CACEH,MAAO,CACLuF,OAAwB,QAAhBlD,UAASC,GAAeiD,QAASlJ,EACzCkI,KAAM,IAGR,gBAAC,GAAD,CAAQU,WAAYA,EAAY3E,OAAQA,EAAQyE,GAAIA,KAEjD,MAAFA,OAAA,EAAAA,EAAII,UAAWC,KAAKzG,QAAU29B,EAC7B,gBAAC,GAAD,CAAKx3B,YAAaA,EAAaG,WAAYA,MACtC,MAAFF,OAAA,EAAAA,EAAI4E,SAAU,GAAoB,QAAb,MAAF5E,OAAA,EAAAA,EAAI4E,WAAqB2yB,EAC/C,gBAAC,GAAD,CAAMx3B,YAAaA,EAAaG,WAAYA,KACxC,MAAFF,OAAA,EAAAA,EAAIgJ,QAAS3I,KAAKzG,QAAU29B,EAC9B,gBAAC,GAAD,CAAMx3B,YAAaA,EAAaG,WAAYA,IAE5C,gBAAC9E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAAM/C,GAEZ,QAAhBa,UAASC,IAAgB,gBAAC,GAAD,OAG3ByF,GAAgB,KAvErB,gBAAC5H,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,MACpB,gBAACuY,EAAA,EAAD,CACEhY,MAAO,CAAEP,MAAO,KAChB4iB,sBAAuB,CACrB5iB,MAAO,IACP8F,OAAwB,QAAhBlD,UAASC,GAAeiD,GAAS,SAAMlJ,IAGjD,gBAACmgC,EAAA,EAAD,CACEC,gBAAc,EACdC,SAAUlmB,GAAUzR,EAAIzE,EAAOrC,OAC/B0+B,eAAgBZ,EAChBjb,SAAU,SAACmY,GACT+C,EAAe/C,GACft0B,EAAS,CACPjG,KAAM,iCACNsD,MAAOi3B,KAGXvqB,aAAc,SAACkuB,EAASzhC,GAAV,OACZi7B,GACEwG,EAAQnnB,OACRta,EACA8J,EACA3E,EAAOrC,MACP0G,EACAI,IAGJ83B,cAAe,SAACD,GAAD,OACbA,EAAQjnB,QAAQ3S,KAAI,SAAChF,EAAM7C,GAAP,OAClBi7B,GAAWp4B,EAAM7C,EAAO8J,EAAY3E,EAAOrC,MAAO0G,EAAUI,aA2ClEzE,EAAOy5B,QACP,gBAAC,GAAD,CAAY90B,WAAYA,EAAYH,YAAaA,MAK5Cg4B,GAAa,SAACr4B,GAAD,OAAe,SAACX,GAAD,OACvC,gBAAC,GAAWA,EACV,gBAACW,EAAcX,MAuFbi5B,IARY,QAAhB16B,UAASC,GAAe06B,mBAAmBC,uBAE3B,QAAhB56B,UAASC,GACLyF,GACEm1B,IACAC,wBACFC,KAIF,CACEpP,KAAM,CACJqP,OAAQP,GAAW9O,IACnBsP,KAAM,IAGRhV,WAAYwU,GAAWxU,IAEvBiV,KAAM,CACJF,OAAQP,GAAWS,IACnBD,KAAM,cAGR/V,MAAOuV,GAAWvV,IAClBoE,SAAUmR,GAAWnR,IACrBxB,aAAc2S,GAAW3S,IACzBnC,iBAAkB8U,GAAW9U,IAC7BwV,OAAQV,GAAWU,IAEnBjlB,OAAQukB,GAAWvkB,IACnBklB,QAASX,GAAWW,IACpBC,OAAQZ,GAAWY,IACnBzG,SAAU6F,GAAW7F,IACrBjT,iBAAkB8Y,GAAW9Y,IAC7B2Z,SAAUb,GAAWa,IACrBC,QAASd,GAAWc,IACpBhhB,SAAUkgB,GAAWlgB,IACrBmY,MAAO+H,GAAW/H,IAClB9X,KAAM6f,GAAW7f,IACjBrB,UAAWkhB,GAAWlhB,IAEtB0J,OAAQwX,GAAWxX,IACnB5X,KAAMovB,GAAWe,IACjBjM,KAAMkL,GAAWlL,IACjBkM,IAAKhB,GAAWgB,IAEhB1jB,KAAM0iB,GAAW1iB,IACjB4b,KAAM8G,GAAW9G,IACjBlJ,OAAQgQ,GAAWhQ,IACnBgF,aAAcgL,GAAWhL,IACzBmC,UAAW6I,GAAW7I,IACtBuB,SAAUsH,GAAWtH,IACrBuI,SAAUjB,GAAWiB,IACrB7mB,WAAY4lB,GAAW5lB,IACvBkgB,WAAY0F,GAAW1F,IACvB/Y,cAAeye,GAAWze,IAC1BY,OAAQ6d,GAAW7d,IACnB1F,QAASujB,GAAWvjB,IACpBykB,QAASlB,GAAWkB,IACpBC,MAAOnB,GAAWmB,IAClB33B,KAAMw2B,GAAWx2B,IACjBknB,IAAKsP,GAAWtP,IAChBsH,KAAMgI,GAAWhI,IACjBf,eAAgB+I,GAAW/I,IAC3BmK,eAAgBpB,GAAWoB,IAC3BzM,QAASqL,GAAWrL,IACpBhE,OAAQqP,GAAWrP,IACnB9O,OAAQme,GAAWne,IACnBlE,OAAQqiB,GAAWriB,IACnBmW,SAAUkM,GAAWlM,IACrBrV,OAAQuhB,GAAWvhB,IACnB4iB,WAAYrB,GAAWqB,IACvBxlB,eAAgBmkB,GAAWnkB,IAC3BylB,MAAOtB,GAAWsB,IAClBC,MAAOvB,GAAWuB,IAClBrY,YAAaA,GACb6S,IAAKiE,GAAWjE,IAChBnG,OAAQoK,GAAWpK,IACnB4L,QAAS,CACPjB,OAAQP,GAAWwB,IACnBhB,KAAM,iBAIRxH,SAAUgH,GAAWhH,IACrByI,YAAazB,GAAWyB,IAExBC,aAAc,CACZnB,OAAQP,GAAW0B,IACnBlB,KAAM,uBAGRle,WAAY0d,GAAW1d,IACvBqf,gBAAiB3B,GAAW2B,IAC5BC,eAAgB5B,GAAW4B,IAC3B9I,gBAAiB,CACfyH,OAAQP,GAAWlH,IACnB0H,KAAM,0BAGRzZ,KAAM,CACJwZ,OAAQP,GAAWjZ,IACnByZ,KAAM,cAERqB,KAAM,CACJtB,OAAQP,GAAWjZ,IACnByZ,KAAM,cAERsB,IAAK,CACHvB,OAAQP,GAAWjZ,IACnByZ,KAAM,aAGRje,eAAgB,CACdge,OAAQP,GAAWzd,KAErBwf,YAAa/B,GAAW+B,IACxB/hB,UAAWggB,GAAWhgB,IACtBmJ,MAAO6W,GAAW7W,IAClBiT,KAAM4D,GAAW5D,IAGjB4F,KAAMhC,GAAWgC,IACjBC,SAAUjC,GAAWiC,IACrBC,UAAWlC,GAAWkC,IACtBC,QAASnC,GAAWmC,IACpBC,WAAYpC,GAAWoC,IACvB9J,OAAQ0H,GAAW1H,KAErB,CACE+J,eAAgB,QAChBC,UAA2B,QAAhB/8B,UAASC,IAAgByF,GAAgB,OAAI1L,EACxDgjC,iBA/M+B,SAACv7B,GAAW,IAAD,IAE5CmB,EAEEnB,EAFFmB,WAF4C,EAI1CnB,EADFgB,YAAeC,EAH6B,EAG7BA,GAAIzE,EAHyB,EAGzBA,OAAQqE,EAHiB,EAGjBA,SAHiB,EAMVlD,mBAAQ,SAACnB,EAAOgvB,WAAR,EAAC,EAAa3sB,MANZ,WAMvCk5B,EANuC,KAM3BC,EAN2B,OAORr6B,mBAAQ,SAACnB,EAAOgvB,WAAR,EAAC,EAAa1sB,OAPd,WAOvCm5B,EAPuC,KAO1BC,EAP0B,KAS9C,OACE,gBAAChkB,EAAA,EAAD,KACE,gBAACxT,EAAA,EAAD,CACExE,MAAO,CAAEuE,KAAM,EAAG9D,gBAAiBH,EAAOrC,MAAMiS,SAChDovB,WAAY,CAAE78B,IAAK,SAAU88B,WAAY,UAEzC,gBAAC/C,EAAA,EAAD,CACEC,gBAAc,EACdC,SAAUxoB,GAASnP,EAAIzE,EAAOrC,OAC9B0+B,eAAgBd,EAChB/a,SAAU,SAACmY,GACT6C,EAAc7C,GACdt0B,EAAS,CACPjG,KAAM,gCACNsD,MAAOi3B,KAGXvqB,aAAc,SAACkuB,EAASzhC,GAAV,OACZi7B,GACEwG,EAAQnnB,OACRta,EACA8J,EACA3E,EAAOrC,MACP0G,EACAI,IAGJ83B,cAAe,SAACD,GAAD,OACbA,EAAQjnB,QAAQ3S,KAAI,SAAChF,EAAM7C,GAAP,OAClBi7B,GAAWp4B,EAAM7C,EAAO8J,EAAY3E,EAAOrC,MAAO0G,EAAUI,SAIlE,gBAACy3B,EAAA,EAAD,CACEC,gBAAc,EACdC,SAAUlmB,GAAUzR,EAAIzE,EAAOrC,OAC/B0+B,eAAgBZ,EAChBjb,SAAU,SAACmY,GACT+C,EAAe/C,GACft0B,EAAS,CACPjG,KAAM,iCACNsD,MAAOi3B,KAGXvqB,aAAc,SAACkuB,EAASzhC,GAAV,OACZi7B,GACEwG,EAAQnnB,OACRta,EACA8J,EACA3E,EAAOrC,MACP0G,EACAI,IAGJ83B,cAAe,SAACD,GAAD,OACbA,EAAQjnB,QAAQ3S,KAAI,SAAChF,EAAM7C,GAAP,OAClBi7B,GAAWp4B,EAAM7C,EAAO8J,EAAY3E,EAAOrC,MAAO0G,EAAUI,YA+IpEy6B,uBAAuB,EACvBC,kBAAmB,CACjBC,eAAgB,eAElBC,yBAA0B,CACxBC,aAAa,KAInB,CACEr1B,QAAS,SAeb,IAgCMs1B,GAAgBn7B,aAhBE,SAAC,GAEvB,MAAO,CAAEpE,OAFsD,EAAtCA,OAERyE,GAF8C,EAA9BA,GAEZsyB,YAF0C,EAA1BA,YAEHxb,OAF6B,EAAbA,WAIzB,SAAClX,GAAD,MAAe,CACxCA,WACAK,SAAU,SAACU,GAETf,EAAS,CAAEjG,KAAM,qBAAsB86B,QAAS,CAAE9zB,iBAEpDue,kBAAmB,kBACjBtf,EAAS,CAAEjG,KAAM,8BAA+B86B,QAAS,QAC3D1d,aAAc,kBACZnX,EAAS,CAAEjG,KAAM,yBAA0B86B,QAAS,WAGlC90B,EAhCC,SAACZ,GAGtB,OACE,gBAAC,GAAD,KACE,gBAAC,GAAD,CAAkBgB,YAAW,MAAOhB,IAClC,gBAAC,sBAAD,KACE,gBAACg8B,GAAD,KACE,gBAAC/C,GAAD,CAAWj4B,YAAW,MAAOhB,YAsC1Bi8B,GATH,WACV,OACE,gBAAC,IAAD,CAAa/E,UAAWA,IACtB,gBAAC,IAAD,CAAUH,MAAOA,IACf,gBAACgF,GAAD,SC7uBOE,Q,+DCAX,kBAAmBpa,WACrBrb,OAAOnG,iBAAiB,QAAQ,WAC9BwhB,UAAUqa,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7C5jC,MAAK,SAAU6jC,OAGfxjC,OAAM,SAAUC,GACfC,QAAQsjC,KAAK,oCAAqCvjC,U,gp6BCV1DhD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3C,IAAImJ,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,WAAY,IACZ,cAAe,IACf,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASo9B,EAAeC,GACvB,IAAIhwB,EAAKiwB,EAAsBD,GAC/B,OAAOE,EAAoBlwB,GAE5B,SAASiwB,EAAsBD,GAC9B,IAAIE,EAAoB7M,EAAE1wB,EAAKq9B,GAAM,CACpC,IAAIt0B,EAAI,IAAIpI,MAAM,uBAAyB08B,EAAM,KAEjD,MADAt0B,EAAE8D,KAAO,mBACH9D,EAEP,OAAO/I,EAAIq9B,GAEZD,EAAe1lB,KAAO,WACrB,OAAOuD,OAAOvD,KAAK1X,IAEpBo9B,EAAe78B,QAAU+8B,EACzB1mC,EAAOC,QAAUumC,EACjBA,EAAe/vB,GAAK,K,oBC/RpBzW,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/app.497d21bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d2180cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://192.168.1.100:4001\"; //192.168.1.38\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\", //https://apps.apple.com/us/app/mastercrimez/id1527333711?app=itunes\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport { useEffect } from \"react\";\nimport { Alert, Dimensions, Platform, ScaledSize } from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport function ColorLuminance(hex, lum) {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  var rgb = \"#\",\n    c,\n    i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += (\"00\" + c).substr(c.length);\n  }\n\n  return rgb;\n}\n\nexport const lighterHex = (hex) => ColorLuminance(hex, 0.2);\nexport const darkerHex = (hex) => ColorLuminance(hex, -0.2);\n\nexport const getUserColor = (item, theme) =>\n  item?.creditsTotal >= 10000\n    ? \"red\"\n    : item?.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport { useSelector } from \"react-redux\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nconst Button = ({ icon, font, title, onPress, disabled, style }) => {\n  const TheIcon = font && icon ? Icon[font] : View;\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity onPress={disabled ? undefined : onPress}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: disabled ? `${theme.secondary}55` : theme.secondary,\n          padding: 10,\n          justifyContent: \"center\",\n          paddingHorizontal: isSmall ? 5 : 20,\n          // borderRadius: 20,\n          ...style,\n        }}\n      >\n        {font && icon ? (\n          <View style={{ marginRight: 20 }}>\n            <TheIcon name={icon} color={theme.secondaryText} size={20} />\n          </View>\n        ) : null}\n\n        {title && (\n          <Text style={{ textAlign: \"center\", color: theme.secondaryText }}>\n            {title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport { Alert, Platform, Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\n\nexport const AlertContext = React.createContext({});\n\nexport const AlertProvider = ({ children }) => {\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [alert, setAlert] = useState({});\n\n  const getText = getTextFunction(); //TODO: Provide me?.locale\n  return (\n    <AlertContext.Provider\n      value={(title, message, buttons, options) => {\n        console.log(\"functie\");\n        if (Platform.OS === \"web\") {\n          setAlertVisible(!alertVisible);\n          setAlert({ title, message, buttons, options });\n        } else {\n          Alert.alert(title, message, buttons, options);\n        }\n      }}\n    >\n      {children}\n\n      {alertVisible && (\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            backgroundColor: \"rgba(0,0,0,0.3)\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <View\n            style={{ backgroundColor: \"white\", borderRadius: 20, padding: 20 }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{alert.title}</Text>\n            <Text>{alert.message}</Text>\n\n            {alert.buttons ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                {alert.buttons.map((button) => (\n                  <Button\n                    title={button.text}\n                    onPress={() => {\n                      button.onPress?.();\n                      setAlertVisible(false);\n                    }}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Button\n                title={getText(\"ok\")}\n                onPress={() => setAlertVisible(false)}\n              />\n            )}\n          </View>\n        </View>\n      )}\n    </AlertContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withAlert = (ChildComponent) => (props) => (\n  <AlertContext.Consumer>\n    {(context) => <ChildComponent {...props} alert={context} />}\n  </AlertContext.Consumer>\n);\n","import NetInfo from \"@react-native-community/netinfo\";\nimport React from \"react\";\nimport { Platform, SafeAreaView, Text, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Constants from \"../Constants\";\n\nconst CONNECTION_GOOD = 2;\nconst CONNECTION_BAD = 1;\nconst CONNECTION_NONE = 0;\n\nclass ConnectionProviderScreen extends React.Component {\n  componentDidMount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe = NetInfo.addEventListener((state) => {\n        // console.log(\"Connection type\", state.type);\n        // console.log(\"Is connected?\", state.isConnected);\n        this.props.setIsConnected(\n          state.isConnected ? CONNECTION_GOOD : CONNECTION_NONE\n        );\n      });\n    }\n\n    this.interval = setInterval(this.fetchWithTimeout, 5000);\n\n    // To unsubscribe to these update, just use:\n  }\n\n  fetchWithTimeout = () => {\n    const FETCH_TIMEOUT = 5000;\n    let didTimeOut = false;\n\n    new Promise(function (resolve, reject) {\n      const timeout = setTimeout(function () {\n        didTimeOut = true;\n        reject(new Error(\"Request timed out\"));\n      }, FETCH_TIMEOUT);\n\n      fetch(Constants.SERVER_ADDR + \"/healthcheck\")\n        .then(function (response) {\n          // Clear the timeout as cleanup\n          clearTimeout(timeout);\n          if (!didTimeOut) {\n            // console.log(\"fetch good! \");\n            resolve(response);\n          }\n        })\n        .catch(function (err) {\n          // console.log(\"fetch failed! \", err);\n\n          // Rejection already happened with setTimeout\n          if (didTimeOut) return;\n          // Reject with error\n          reject(err);\n        });\n    })\n      .then(() => {\n        // Request success and no timeout\n        this.props.setIsConnected(CONNECTION_GOOD);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        this.props.setIsConnected(CONNECTION_BAD);\n        // Error: response error, request timeout or runtime error\n      });\n  };\n\n  componentWillUnmount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe();\n    }\n    clearTimeout(this.interval);\n  }\n\n  render() {\n    const { children, isConnected } = this.props;\n\n    return (\n      <View style={{ flex: 1 }}>\n        {isConnected !== CONNECTION_GOOD && (\n          <View\n            style={{\n              backgroundColor:\n                isConnected === CONNECTION_BAD ? \"orange\" : \"red\",\n              padding: 15,\n            }}\n          >\n            <SafeAreaView>\n              <Text style={{ color: \"white\" }}>\n                {isConnected === CONNECTION_BAD ? \"Slechte\" : \"Geen\"}{\" \"}\n                internetverbinding!\n              </Text>\n            </SafeAreaView>\n          </View>\n        )}\n        {children}\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isConnected: state.device.isConnected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setIsConnected: (isConnected) =>\n    dispatch({ type: \"SET_IS_CONNECTED\", value: isConnected }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectionProviderScreen);\n","import React from \"react\";\nimport { Image, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View>\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Dead;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getTextFunction } from \"../Util\";\n\nclass Fly extends React.Component {\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"flyYoureTravelingTo\", me?.city)}\n        </Text>\n        <CountDown\n          until={sec}\n          onFinish={() => {\n            reloadMe(device.loginToken);\n          }}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Fly;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  chat = () => {\n    const { chat } = this.state;\n    return chat.map((item, index) => (\n      <Text key={`item${index}`}>\n        <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n        {item.message}&nbsp;&nbsp;\n      </Text>\n    ));\n  };\n  render() {\n    const { device, navigation, me } = this.props;\n\n    const { chat, input } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const allText = chat\n      .map((item) => `${item.name}${item.message}`)\n      .join(\"::::\");\n    return (\n      <View style={{ height: Platform.select({ web: 50, default: 100 }) }}>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#444\",\n            borderWidth: 1,\n            borderColor: \"black\",\n            flexDirection: Platform.select({ web: \"row\", default: undefined }),\n          }}\n        >\n          {Platform.select({\n            web: (\n              <View style={{ flex: 1, justifyContent: \"center\" }}>\n                {allText ? (\n                  <Ticker>\n                    {({ index }) => {\n                      return (\n                        <>\n                          {chat.map((item, index) => (\n                            <Text\n                              style={{ color: \"white\" }}\n                              numberOfLines={1}\n                              key={`item${index}`}\n                            >\n                              <TouchableOpacity\n                                onPress={() => {\n                                  navigation.navigate(\"Profile\", {\n                                    name: item.name,\n                                  });\n                                }}\n                              >\n                                <Text style={{ fontWeight: \"bold\" }}>\n                                  {item.name}\n                                </Text>\n                              </TouchableOpacity>\n                              :&nbsp;{item.message}&nbsp;&nbsp;\n                            </Text>\n                          ))}\n                        </>\n                      );\n                    }}\n                  </Ticker>\n                ) : null}\n              </View>\n            ),\n\n            default: (\n              <MarqueeText\n                style={{ fontSize: 20 }}\n                duration={allText.length * 50}\n                marqueeOnStart\n                loop\n                marqueeDelay={200}\n                marqueeResetDelay={1000}\n              >\n                <>\n                  {chat.map((item, index) => (\n                    <Fragment key={`item${index}`}>\n                      <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                      :&nbsp;{item.message}&nbsp;&nbsp;\n                    </Fragment>\n                  ))}\n                </>\n              </MarqueeText>\n            ),\n          })}\n          <View style={{ width: 100, height: 30 }}>\n            <TextInput\n              value={input}\n              placeholder={getText(\"chatYourMessage\")}\n              style={{\n                backgroundColor: \"#404040\",\n                fontSize: 20,\n                color: \"white\",\n                flex: 1,\n                width: 100,\n              }}\n              onChangeText={(input) => this.setState({ input })}\n              onSubmitEditing={({ nativeEvent: { text } }) => {\n                fetch(`${Constants.SERVER_ADDR}/chat`, {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    token: device.loginToken,\n                    message: text,\n                  }),\n                })\n                  .then((response) => response.json())\n                  .then((chat) => {\n                    this.getChat();\n\n                    if (Platform.OS === \"web\") {\n                      location.reload();\n                    }\n\n                    this.setState({ input: \"\" });\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Chat from \"../components/Chat\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nconst isSmallDevice = width < 800;\n\nfunction Header({ navigation, device, me }) {\n  const getText = getTextFunction(me?.locale);\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: device.theme.secondaryText,\n  };\n\n  const notActivated = me?.phoneVerified === false && me?.numActions >= 20 && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const statsHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2,\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5,\n        }}\n      >\n        <Text style={textStyle}>\n          😎 {me?.name} {me?.gang?.name}\n        </Text>\n        <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n        <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon.MaterialCommunityIcons\n            name=\"pistol\"\n            size={18}\n            color={device.theme.secondaryText}\n            style={{ marginRight: 5 }}\n          />\n          <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n        </View>\n        <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n        <Text style={textStyle}>🌍 {me?.city}</Text>\n        <Text style={textStyle}>❤️ {me?.health}%</Text>\n        <Text style={textStyle}>\n          ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n        </Text>\n        <Text style={textStyle}>💪 {getStrength(me?.strength, \"both\")}</Text>\n        <Text style={textStyle} onPress={() => navigation.navigate(\"Channels\")}>\n          💬 {me?.chats}\n        </Text>\n      </View>\n\n      {!me?.phoneVerified && (\n        <View\n          style={{\n            padding: 5,\n            backgroundColor: device.theme.secondary,\n            borderRadius: 5,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"VerifyPhone\")}\n          >\n            <AntDesign\n              name=\"exclamationcircleo\"\n              color=\"red\"\n              style={{ marginRight: 10 }}\n            />\n            <Text\n              style={{ color: device.theme.secondaryText, fontWeight: \"bold\" }}\n            >\n              {getText(\"headerVerifyYourAccount\")}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const backButton = (\n    <View\n      style={{\n        margin: 10,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n      }}\n    >\n      {navigation.state.routeName !== \"Home\" ? (\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => {\n            if (isSmallDevice || Platform.OS !== \"web\") {\n              navigation.goBack();\n            } else {\n              window.history.back();\n            }\n          }}\n        >\n          <AntDesign\n            name=\"arrowleft\"\n            size={32}\n            color={device.theme.secondaryText}\n          />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ height: 20 }} />\n      )}\n    </View>\n  );\n\n  const webHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n        <View style={{ width: 50 }}>{backButton}</View>\n\n        <View style={{ alignItems: \"center\", flex: 1 }}>\n          <Image\n            source={require(\"../../assets/logos/logo5.jpg\")}\n            style={{\n              margin: 10,\n              width: isSmallDevice ? 200 : 600,\n              height: isSmallDevice ? 33 : 100,\n            }}\n          />\n        </View>\n\n        <Text style={{ color: \"white\", marginTop: 20 }}>\n          v{Constants.manifest.version}\n        </Text>\n\n        {isSmallDevice ? (\n          <TouchableOpacity\n            onPress={() => {\n              navigation.toggleDrawer();\n            }}\n            style={{ margin: 10 }}\n          >\n            <Feather\n              name=\"menu\"\n              size={32}\n              color=\"#FFF\"\n              style={{ color: \"#FFF\" }}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      {isSmallDevice && statsHeader}\n\n      <Chat me={me} device={device} navigation={navigation} />\n    </View>\n  );\n\n  return (\n    <View style={{ justifyContent: \"center\" }}>\n      {Platform.OS === \"web\" ? (\n        webHeader\n      ) : (\n        <View style={{ backgroundColor: device.theme.secondary }}>\n          {backButton}\n          {updateComponent || notActivated || statsHeader}\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default Header;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import { canUseDOM } from \"fbjs/lib/ExecutionEnvironment\";\n\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener(\"touchstart\", disableHover, true);\n  document.addEventListener(\"touchmove\", disableHover, true);\n  document.addEventListener(\"mousemove\", enableHover, true);\n}\n\nexport function isHoverEnabled() {\n  return isEnabled;\n}\n","import { element, func, oneOfType } from \"prop-types\";\nimport React from \"react\";\nimport { isHoverEnabled } from \"./HoverState\";\n\nexport default function Hoverable({ onHoverIn, onHoverOut, children }) {\n  const [isHovered, setHovered] = React.useState(false);\n  const [showHover, setShowHover] = React.useState(true);\n\n  function handleMouseEnter(e) {\n    if (isHoverEnabled() && !isHovered) {\n      if (onHoverIn) onHoverIn();\n      setHovered(true);\n    }\n  }\n\n  function handleMouseLeave(e) {\n    if (isHovered) {\n      if (onHoverOut) onHoverOut();\n      setHovered(false);\n    }\n  }\n\n  function handleGrant() {\n    setShowHover(false);\n  }\n\n  function handleRelease() {}\n\n  const child =\n    typeof children === \"function\"\n      ? children(showHover && isHovered)\n      : children;\n\n  return React.cloneElement(React.Children.only(child), {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    // prevent hover showing while responder\n    onResponderGrant: () => setShowHover(false),\n    onResponderRelease: () => setShowHover(true),\n    // if child is Touchable\n    onPressIn: handleGrant,\n    onPressOut: handleRelease,\n  });\n}\n\nHoverable.displayName = \"Hoverable\";\n\nHoverable.propTypes = {\n  children: oneOfType([func, element]),\n  onHoverIn: func,\n  onHoverOut: func,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { post } from \"../Util\";\n\nexport const IntervalContext = React.createContext({});\nexport const IntervalProvider = ({\n  children,\n  screenProps: { me, dispatch, device, reloadMe },\n}) => {\n  const [token, setToken] = useState(device.loginToken);\n\n  useEffect(() => {\n    if (token) {\n      const intervalReloadMe = setInterval(() => {\n        // console.log(\"This will run every 5 seconds! TOKEN:\", token);\n        reloadMe(device.loginToken);\n      }, 5000);\n\n      const intervalMovements = setInterval(() => {\n        // console.log(\"This will run every 60 seconds! TOKEN:\");\n        sendMovements();\n      }, 60000);\n\n      return () => {\n        // console.log(\"clearing interval because token changed\");\n        clearInterval(intervalReloadMe);\n        clearInterval(intervalMovements);\n      };\n    }\n  }, [token]);\n\n  const sendMovements = () => {\n    // console.log(\"sendMovements\", device.loginToken);\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  };\n\n  return (\n    <IntervalContext.Provider\n      value={{\n        resetIntervalsForToken: (token) => setToken(token),\n      }}\n    >\n      {children}\n    </IntervalContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withInterval = (ChildComponent) => (props) => (\n  <IntervalContext.Consumer>\n    {(context) => <ChildComponent {...props} intervals={context} />}\n  </IntervalContext.Consumer>\n);\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\nclass Jail extends React.Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n\n    const { reloadMe, device } = this.props.screenProps;\n    this.interval = setInterval(() => {\n      reloadMe(device.loginToken);\n      this.fetchMembers();\n    }, 2500);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clear interval jail\");\n    clearInterval(this.interval);\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n      </View>\n    );\n  };\n\n  buyOut = async (type) => {\n    const { device, reloadMe } = this.props.screenProps;\n    const { response } = await post(\"buyout\", {\n      token: device.loginToken,\n      type,\n    });\n    this.setState({ response });\n    reloadMe(device.loginToken);\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { response } = this.state;\n    const sec = Math.round((me.jailAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <T>{getText(\"jailYoureInJail\")}</T>\n\n        <CountDown\n          until={sec}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n\n        <View style={{ height: 15 }} />\n\n        {response && <T>{response}</T>}\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCredits\")}\n          onPress={() => this.buyOut(\"credits\")}\n        />\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCash\")}\n          onPress={() => this.buyOut(\"cash\")}\n        />\n\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport { IntervalContext } from \"./IntervalProvider\";\nimport T from \"./T\";\n\nconst LoginModal = ({\n  screenProps: {\n    dispatch,\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n  navigation,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [phone, setPhone] = useState(\"\");\n  const [view, setView] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const changeName = async () => {\n    const { response, success } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    setResponse(response);\n\n    return success;\n  };\n\n  const login = () => dispatch({ type: \"SET_LOGGED\", value: true });\n  useEffect(() => {\n    setName(me?.name);\n  }, [me?.name]);\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n  const postVerifyPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n          resetIntervalsForToken(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postLogin = () => {\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        if (responseJson.error) {\n          setError(responseJson.error);\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n          reloadMe(responseJson.loginToken);\n          setError(null);\n          setSuccess(responseJson.success);\n          resetIntervalsForToken(responseJson.token);\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postSetPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token: device.loginToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          setView(\"code\");\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderEmailPassLogin = () => (\n    <View>\n      <View\n        style={{\n          margin: 20,\n          padding: 20,\n          borderRadius: 20,\n        }}\n      >\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\n\n        {success ? (\n          <Text style={{ color: \"green\" }}>{success}</Text>\n        ) : (\n          <View>\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n              <TextInput\n                placeholder={getText(\"email\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                onChangeText={setEmail}\n                value={email}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n              <TextInput\n                secureTextEntry\n                onChangeText={setPassword}\n                value={password}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <View />\n\n              <Button\n                theme={theme}\n                title={getText(\"login\")}\n                onPress={() => postLogin()}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n\n                  navigation.navigate(\"SignupEmail\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"register\")}\n                </Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n                  navigation.navigate(\"ForgotPassword\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"forgotPassword\")}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n  const renderCode = () => (\n    <View>\n      {response && <T>{response}</T>}\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n        <TextInput\n          placeholder=\"000000\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setCode}\n          value={code}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button title={getText(\"validate\")} onPress={() => postVerifyPhone()} />\n      </View>\n    </View>\n  );\n  const renderPhoneLogin = () => (\n    <View>\n      {response && <T>{response}</T>}\n\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n        <TextInput\n          placeholder=\"+31\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setPhone}\n          value={phone}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button\n          theme={theme}\n          title={getText(\"save\")}\n          onPress={() => postSetPhone()}\n        />\n      </View>\n    </View>\n  );\n  const renderMain = () => (\n    <View>\n      {/* Option 1: Just play */}\n      {response && <T>{response}</T>}\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"youAre\")}</T>\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={[style(theme).textInput, { marginLeft: 10 }]}\n          placeholder={getText(\"name\")}\n          value={name}\n          onChangeText={setName}\n        />\n      </View>\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"justPlay\")}\n        onPress={async () => {\n          if (!me) {\n            setResponse(getText(\"waitUntilLoaded\"));\n            return;\n          }\n          if (name !== me?.name) {\n            const success = await changeName();\n            if (success) {\n              reloadMe(device.loginToken);\n\n              login();\n            }\n          } else {\n            login();\n          }\n        }}\n      />\n      {/* Option 2: Login with email */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithEmail\")}\n        onPress={() => setView(\"emailPass\")}\n      />\n      {/* Option 3: Login with phone number */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithPhone\")}\n        onPress={() => setView(\"phone\")}\n      />\n    </View>\n  );\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: \"rgba(0,0,0,0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: 20,\n          padding: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={view !== null ? () => setView(null) : login}\n          style={{ alignSelf: \"flex-end\" }}\n        >\n          <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n        </TouchableOpacity>\n\n        {!me?.id ? <ActivityIndicator /> : null}\n\n        {view === \"emailPass\"\n          ? renderEmailPassLogin()\n          : view === \"phone\"\n          ? renderPhoneLogin()\n          : view === \"code\"\n          ? renderCode()\n          : renderMain()}\n      </View>\n    </View>\n  );\n};\n\nexport default LoginModal;\n","import * as React from \"react\";\nimport { Animated, Easing, Keyboard, Platform, StatusBar } from \"react-native\";\nimport { isIphoneX } from \"./Util\";\n\ninterface KeyboardAvoidingSpaceProps {\n  onKeyboardWillShow?: (duration: number) => void;\n  onKeyboardWillHide?: (duration: number) => void;\n  offset?: number;\n}\n\ninterface KeyboardAvoidingSpaceState {\n  height: Animated.Value;\n}\n\n/**\n * Made with swag by yours truly\n * @author Brad \"Swagalicious\" Johnson\n */\nexport class KeyboardAvoidingSpace extends React.Component<\n  KeyboardAvoidingSpaceProps,\n  KeyboardAvoidingSpaceState\n> {\n  constructor(props: KeyboardAvoidingSpaceProps) {\n    super(props);\n    this.state = {\n      height: new Animated.Value(0),\n    };\n  }\n\n  componentDidMount() {\n    this.bindListeners();\n  }\n\n  componentWillUnmount() {\n    this.unbindListeners();\n  }\n\n  bindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        this.keyboardWillHide\n      );\n    } else {\n      this.keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        this.keyboardWillHide\n      );\n    }\n  }\n\n  unbindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    } else {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }\n\n  keyboardWillShow = (e: any) => {\n    // because of iPhone X new screen settings, remove SafeAreaView padding-bottom when keyboard is open\n    const SafeAreaViewPaddingBottom = 34;\n    const duration = e && e.duration ? e.duration : 100;\n    let notchHeight = 0;\n    if (\n      Platform.OS === \"android\" &&\n      StatusBar.currentHeight &&\n      StatusBar.currentHeight > 24\n    ) {\n      notchHeight = StatusBar.currentHeight;\n    }\n    // let suggestHeight = 0;\n    // if (Platform.OS === \"ios\") {\n    //   suggestHeight = 30;\n    // }\n    if (this.props.onKeyboardWillShow) {\n      this.props.onKeyboardWillShow(duration);\n    }\n\n    const toValue =\n      e.endCoordinates.height +\n      // suggestHeight +\n      // notchHeight -\n      (this.props.offset || 0) -\n      (isIphoneX() ? SafeAreaViewPaddingBottom : 0);\n\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  keyboardWillHide = (e: any) => {\n    const duration = e && e.duration ? e.duration : 100;\n    if (this.props.onKeyboardWillHide) {\n      this.props.onKeyboardWillHide(duration);\n    }\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    return <Animated.View style={{ height: this.state.height }} />;\n  }\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"./Constants\";\nimport { getRank, getTextFunction, numberFormat } from \"./Util\";\n\nexport const InactiveScreens = {\n  ACTIONS_BEFORE_BOMB: 60,\n  ACTIONS_BEFORE_CASINO: 70,\n  ACTIONS_BEFORE_BUNKER: 20,\n  ACTIONS_BEFORE_HOSPITAL: 30,\n  ACTIONS_BEFORE_RACECARS: 80,\n  ACTIONS_BEFORE_STREETRACE: 80,\n  ACTIONS_AMOUNT_NEW: 10,\n  ACTIONS_BEFORE_ROB: 20,\n  ACTIONS_BEFORE_KILL: 30,\n  ACTIONS_BEFORE_BULLETFACTORY: 40,\n  ACTIONS_BEFORE_MARKET: 50,\n  ACTIONS_BEFORE_AIRPORT: 30,\n  DAYS_NEW: 14,\n  ACTIONS_BEFORE_POLICE: 100,\n  GANG_RELEASE_DATE: moment(\"01/12/2020\", \"DD/MM/YYYY\"),\n  MARKET_RELEASE_DATE: moment(\"15/12/2020\", \"DD/MM/YYYY\"),\n  PRIZES_RELEASE_DATE: moment(\"01/01/2021\", \"DD/MM/YYYY\"),\n  POLICE_RELEASE_DATE: moment(\"15/01/2021\", \"DD/MM/YYYY\"),\n  WORK_RELEASE_DATE: moment(\"15/04/2021\", \"DD/MM/YYYY\"),\n};\n\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const workSeconds = Math.ceil((me?.workAt - Date.now()) / 1000);\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCrime\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"car\",\n          text: getText(\"menuStealCar\"),\n          to: \"StealCar\",\n          component:\n            stealcarSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={stealcarSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuCrimes\"),\n          to: \"Crimes\",\n          component:\n            crimeSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={crimeSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          inactive: !me || me?.numActions < InactiveScreens.ACTIONS_BEFORE_KILL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_KILL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuKill\"),\n          to: \"Kill\",\n          component:\n            attackSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={attackSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          inactive: !me || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_ROB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuRob\"),\n          to: \"Rob\",\n          component:\n            robSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"stepforward\",\n          text: getText(\"menuGym\"),\n          to: \"Gym\",\n          component:\n            gymSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={gymSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"tree\",\n          text: getText(\"menuWiet\"),\n          to: \"Wiet\",\n          component:\n            wietSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={wietSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialIcons\",\n          icon: \"people\",\n          text: getText(\"menuJunkies\"),\n          to: \"Junkies\",\n          component:\n            junkiesSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={junkiesSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"female\",\n          text: getText(\"menuProstitutes\"),\n          to: \"Hoeren\",\n          component:\n            hoerenSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={hoerenSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive:\n            moment().isBefore(InactiveScreens.WORK_RELEASE_DATE) &&\n            !me?.level < 2,\n          isNew: moment().isBefore(\n            InactiveScreens.WORK_RELEASE_DATE.add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"tool\",\n          text: getText(\"menuWork\"),\n          to: \"Work\",\n          component:\n            workSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={workSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bars\",\n          text: getText(\"menuJail\", me?.jail),\n          to: \"Jail\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSpend\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuBank\"),\n          to: \"AllBanks\",\n        },\n\n        {\n          inactive:\n            ((!me || me.level < 1) &&\n              moment().isBefore(InactiveScreens.MARKET_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_MARKET,\n          isNew:\n            moment().isBefore(\n              InactiveScreens.MARKET_RELEASE_DATE.add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_MARKET +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuMarket\"),\n          to: \"Market\",\n        },\n\n        {\n          inactive:\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuBulletfactory\"),\n          to: \"Bulletfactory\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_BOMB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BOMB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"bomb\",\n          text: getText(\"menuBomb\"),\n          to: \"Bomb\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_CASINO,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_CASINO +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome5\",\n          icon: \"dice\",\n          text: getText(\"menuCasino\"),\n          to: \"Casino\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_BUNKER,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BUNKER +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"warehouse\",\n          text: getText(\"menuBunker\"),\n          to: \"Bunker\",\n          component:\n            bunkerSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={bunkerSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_HOSPITAL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_HOSPITAL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"hospital\",\n          text: getText(\"menuHospital\"),\n          to: \"Hospital\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"shop\",\n          text: getText(\"menuShop\"),\n          to: \"Shop\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-car\",\n          text: getText(\"menuGarage\"),\n          to: \"Garage\",\n        },\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_RACECARS,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_RACECARS +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialIcons\",\n          icon: \"local-car-wash\",\n          text: getText(\"menuRacecars\"),\n          to: \"Racecars\",\n        },\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_STREETRACE,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_STREETRACE +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"car-key\",\n          text: getText(\"menuStreetrace\"),\n          to: \"Streetrace\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_AIRPORT,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_AIRPORT +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"plane\",\n          text: getText(\"menuAirport\"),\n          to: \"Airport\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n  ];\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level >= 5\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n        ]\n      : [];\n\n  const admin = me?.level >= 10 ? [] : [];\n\n  return (\n    me?.level > 1 && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAdminPanel\"),\n      },\n      content: [...gameMod, ...admin],\n    }\n  );\n};\n\nexport const rightMenu = (me, theme) => {\n  const getText = getTextFunction(me?.locale);\n  const ocSeconds = Math.ceil((me?.ocAt + 120000 - Date.now()) / 1000);\n\n  const gangMenus =\n    me?.level > 1 || moment().isAfter(InactiveScreens.GANG_RELEASE_DATE)\n      ? {\n          header: {\n            isHeader: true,\n            isNew: moment().isBefore(\n              InactiveScreens.GANG_RELEASE_DATE.add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ),\n            text: me?.gang?.name || getText(\"headerGang\"),\n            image: me?.gang?.thumbnail\n              ? Constants.SERVER_ADDR + me?.gang?.thumbnail\n              : null,\n          },\n          content: [\n            !me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangCreate\"),\n              to: \"GangCreate\",\n            },\n            {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangs\"),\n              to: \"Gangs\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangSettings\"),\n              to: \"GangSettings\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangShop\"),\n              to: \"GangShop\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangAchievements\"),\n              to: \"GangAchievements\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"md-cash\",\n              text: getText(\"menuOC\"),\n              to: \"OrganisedCrime\",\n              component:\n                ocSeconds > 0 ? (\n                  <CountDown\n                    style={{ marginLeft: 10 }}\n                    until={ocSeconds}\n                    digitStyle={{ backgroundColor: theme.secondary }}\n                    digitTxtStyle={{ color: theme.secondaryText }}\n                    onFinish={() => {}}\n                    size={8}\n                    timeToShow={[\"M\", \"S\"]}\n                    timeLabels={{ m: null, s: null }}\n                  />\n                ) : null,\n            },\n            // me?.gangId && {\n            //   iconType: \"Ionicons\",\n            //   icon: \"ios-people\",\n            //   text: getText(\"menuGangOc\"),\n            //   to: \"GangOc\",\n            // },\n          ].filter((x) => !!x),\n        }\n      : null;\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: me?.name,\n        image: me?.thumbnail ? Constants.SERVER_ADDR + me?.thumbnail : null,\n      },\n\n      content: [\n        {\n          isStats: true,\n          iconType: \"FontAwesome5\",\n          icon: \"coins\",\n          text: getText(\"menuCash\", numberFormat(me?.cash)),\n          to: \"AllBanks\",\n        },\n\n        {\n          isStats: true,\n\n          iconType: \"FontAwesome\",\n          icon: \"money\",\n\n          text: getText(\"menuBankMoney\", numberFormat(me?.bank)),\n          to: \"AllBanks\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"bullet\",\n\n          text: getText(\"menuBullets\", numberFormat(me?.bullets)),\n          to: \"Kill\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"SimpleLineIcons\",\n          icon: \"badge\",\n          text: getText(\"menuRank\", getRank(me?.rank, \"both\")),\n          to: \"Status\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"AntDesign\",\n          icon: \"heart\",\n\n          text: getText(\"menuHealth\", me?.health),\n          to: \"Hospital\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"Ionicons\",\n          icon: \"ios-airplane\",\n\n          text: getText(\"menuCity\", me?.city),\n          to: \"Airport\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChannels\", me?.chats),\n          to: \"Channels\",\n        },\n      ],\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSociety\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n\n          text: getText(\"menuMembers\", me?.online),\n          to: \"Members\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStats\"),\n          to: \"Stats\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuMyObjects\"),\n          to: \"MyObjects\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStatus\"),\n          to: \"Status\",\n        },\n      ],\n    },\n\n    gangMenus,\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerGeneral\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChat\"),\n          to: \"Chat\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"wechat\",\n\n          text: getText(\"menuForum\"),\n          to: \"Forum\",\n        },\n\n        {\n          iconType: \"SimpleLineIcons\",\n          icon: \"settings\",\n\n          text: getText(\"menuSettings\"),\n          to: \"Settings\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"info-with-circle\",\n\n          text: getText(\"menuInfo\"),\n          to: \"Info\",\n        },\n\n        {\n          inactive:\n            ((!me || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              InactiveScreens.POLICE_RELEASE_DATE.add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuHackers\"),\n          to: \"Hackers\",\n        },\n\n        {\n          inactive:\n            ((!me || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              InactiveScreens.POLICE_RELEASE_DATE.add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuPolice\"),\n          to: \"Police\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuVIP\"),\n          to: \"VIP\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    adminMenu(me),\n  ].filter((x) => !!x);\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  ScrollView,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { default as style, default as styles } from \"../Style\";\nimport { getRank, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst Accomplice = ({\n  navigation,\n  screenProps: {\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [accomplice1, setAccomplice1] = useState(me?.accomplice);\n  const [accomplice2, setAccomplice2] = useState(me?.accomplice2);\n  const [accomplice3, setAccomplice3] = useState(me?.accomplice3);\n  const [accomplice4, setAccomplice4] = useState(me?.accomplice4);\n  const [response, setResponse] = useState(null);\n\n  const submit = (acc) => {\n    //how to set accomplice acc from params to the right body?\n\n    fetch(`${Constants.SERVER_ADDR}/setAccomplice`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        accomplice: accomplice1,\n        accomplice2,\n        accomplice3,\n        accomplice4,\n        loginToken: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response }) => {\n        setResponse(response);\n        reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    const accomplice = navigation.state.params?.accomplice;\n    if (accomplice) {\n      submit(accomplice);\n    }\n  }, []);\n\n  const rank = getRank(me?.rank, \"number\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n      }}\n    >\n      <View style={{ maxWidth: 600, margin: 20 }}>\n        <T>{getText(\"accompliceInfo\")}</T>\n\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"accompliceLinkText\")}</T>\n          <TextInput\n            value={url}\n            onFocus={() => {\n              Clipboard.setString(url);\n              setResponse(getText(\"copiedToClipboard\"));\n            }}\n            style={style(theme).textInput}\n          />\n        </View>\n\n        <T bold>{getText(\"yourAccomplicesHeader\")}</T>\n        {me?.accomplices.length > 0 ? (\n          me?.accomplices.map((accomplice) => {\n            return keyValue(accomplice.name, getRank(accomplice.rank, \"both\"));\n          })\n        ) : (\n          <T>{getText(\"accomplicesNone\")}</T>\n        )}\n\n        <T bold style={{ marginTop: 15 }}>\n          {getText(\"accompliceWhoseYouWantToBe\")}\n        </T>\n        <T>{response}</T>\n\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={styles(theme).textInput}\n          value={accomplice1}\n          onChangeText={setAccomplice1}\n          placeholder={getText(\"accomplice\", 1)}\n        />\n\n        {rank >= 11 ? (\n          <TextInput\n            placeholderTextColor={theme.secondaryTextSoft}\n            style={styles(theme).textInput}\n            value={accomplice2}\n            onChangeText={setAccomplice2}\n            placeholder={getText(\"accomplice\", 2)}\n          />\n        ) : null}\n\n        {rank >= 16 ? (\n          <>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={styles(theme).textInput}\n              value={accomplice3}\n              onChangeText={setAccomplice3}\n              placeholder={getText(\"accomplice\", 3)}\n            />\n\n            <TextInput\n              style={styles(theme).textInput}\n              value={accomplice4}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={setAccomplice4}\n              placeholder={getText(\"accomplice\", 4)}\n            />\n          </>\n        ) : null}\n\n        <Button title={getText(\"save\")} onPress={submit} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Accomplice;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <T bold style={{ marginTop: 20 }}>\n                      {ip.ip}\n                    </T>\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Airport extends Component {\n  state = {\n    response: null,\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        style={{ borderRadius: 10, marginTop: 20 }}\n        title={getText(\"fly\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/airport`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: device.loginToken,\n              to,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      \"Paris\",\n      \"Barcelona\",\n      \"London\",\n      \"Amsterdam\",\n      \"Berlin\",\n      \"Lisbon\",\n      \"Rome\",\n      \"Dublin\",\n      \"Madrid\",\n      \"Brussels\",\n      \"Bali\",\n      \"New York\",\n      \"San Fransisco\",\n    ].sort();\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ to: options[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n    return (\n      <View>\n        <Button\n          title={this.state.to ? this.state.to : getText(\"chooseCity\")}\n          onPress={this.openActionSheet}\n        />\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Airport);\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"getCTA\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/income`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                captcha: this.state.captcha,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async (response) => {\n                this.setState({ response, captcha: \"\", random: Math.random() });\n                this.props.screenProps.reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"income\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n      </View>\n    );\n  };\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const incomeAt = me.incomeAt ? me.incomeAt : 0;\n    const uren = Math.round((Date.now() - incomeAt) / 3600000);\n    const uren2 = uren > 24 ? 24 : uren;\n    const amount = Math.round(\n      (me.junkies + me.hoeren + me.wiet) * 50 * Math.sqrt(uren2)\n    );\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.keyValue(getText(\"hours\"), getText(\"xHours\", uren2))}\n        {this.keyValue(getText(\"totalProfit\"), `${amount},-`)}\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Income;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bank from \"./Bank\";\nimport Donate from \"./Donate\";\nimport Income from \"./Income\";\nimport SwissBank from \"./SwissBank\";\nconst AllBanks = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const [tab, setTab] = useState(\"bank\");\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"menuBank\"),\n            isActive: tab === \"bank\",\n            onPress: () => setTab(\"bank\"),\n          },\n          {\n            title: getText(\"menuSwissBank\"),\n            isActive: tab === \"swissBank\",\n            onPress: () => setTab(\"swissBank\"),\n          },\n\n          {\n            title: getText(\"menuDonate\"),\n            isActive: tab === \"donate\",\n            onPress: () => setTab(\"donate\"),\n          },\n          {\n            title: getText(\"menuIncome\"),\n            isActive: tab === \"income\",\n            onPress: () => setTab(\"income\"),\n          },\n        ]}\n      />\n\n      {tab === \"bank\" && <Bank {...props} />}\n      {tab === \"swissBank\" && <SwissBank {...props} />}\n      {tab === \"donate\" && <Donate {...props} />}\n      {tab === \"income\" && <Income {...props} />}\n    </View>\n  );\n};\nexport default AllBanks;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Image, ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst Bomb = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bombs, setBombs] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"bomb\", {\n      loginToken: device.loginToken,\n      bombs,\n      type,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  const airplanes = [\n    \"\",\n    \"Fokker\",\n    \"Fleet\",\n    \"Havilland\",\n    \"Cessna\",\n    \"Douglas\",\n    \"Lear Jet\",\n    \"Raket\",\n  ];\n\n  const selectType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = Object.keys(typeStrings).map(\n      (type) =>\n        `${typeStrings[type]} (${city[`${type}Damage`]}% ${getText(\n          \"damage\"\n        )}, €${numberFormat(city[`${type}Profit`])} ${getText(\"profit\")})`\n    );\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex !== options.length - 1) {\n          setType(Object.keys(typeStrings)[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {\n        <>\n          <Image source={require(\"../../assets/bombarderen.jpg\")} />\n          <Text style={{ color: theme.primaryText }}>\n            {me?.airplane === 0\n              ? getText(\"bombNoAirplane\")\n              : getText(\n                  \"bombAirplaneText\",\n                  airplanes[me?.airplane],\n                  me?.airplane * 5\n                )}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <T style={{ marginTop: 15 }}>{getText(\"bombs\")}</T>\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bombs}\n            onChangeText={(x) => setBombs(x)}\n            style={style(theme).textInput}\n          />\n\n          <T style={{ marginVertical: 15 }}>{getText(\"property\")}</T>\n          <Button\n            onPress={selectType}\n            title={type ? typeStrings[type] : getText(\"whichProperty\")}\n          />\n\n          {type ? (\n            <T>\n              {getText(\n                \"bombInfo\",\n                typeStrings[type],\n                city[`${type}Damage`],\n                numberFormat(city[`${type}Profit`]),\n                city[`${type}Owner`] || `(Niemand)`\n              )}\n            </T>\n          ) : null}\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button\n            style={{ marginTop: 15 }}\n            title={getText(\"bombAction\")}\n            onPress={submit}\n          />\n        </>\n      }\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bomb;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Casino = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"casino\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.casinoOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.casinoOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"casinoInfo2\", city?.casinoProfit)}\n          </Text>\n\n          <Button\n            onPress={() => navigation.navigate(\"Poker\")}\n            title={getText(\"poker\")}\n          />\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.casinoOwner ? (\n                  <T>{city.casinoOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.casinoOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"casino\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.casinoProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Casino;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button onPress={changeName} title={getText(\"change\")} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst getText = getTextFunction();\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n        return false;\n      }\n      return true;\n    }\n    return true;\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-renderer\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\n\nconst IMAGE_SIZE = 40;\n\nconst Footer = ({ me, device, params, fetchChat }) => {\n  const { loginToken, theme } = device;\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [hasEdited, setHasEdited] = useState(false);\n  const getText = getTextFunction(me?.locale);\n\n  const send = () => {\n    setImage(null);\n    setMessage(\"\");\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ success }) => {\n        if (success) {\n          fetchChat();\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  const renderFooter = () => {\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) => {\n              setImage(base64);\n              setHasEdited(true);\n            }}\n          />\n\n          <TextInput\n            multiline\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={setMessage}\n          />\n\n          <TouchableOpacity onPress={send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  return renderFooter();\n};\n\nconst ChatScreen = ({\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device: { loginToken },\n    device,\n    me,\n    reloadMe,\n  },\n}) => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [chat, setChat] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  doOnce(() => {\n    fetchChat();\n\n    const interval = setInterval(() => {\n      fetchChat();\n      post(\"setRead\", { loginToken, id: params?.subid });\n      reloadMe(loginToken);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  });\n\n  const fetchChat = async () => {\n    const url = `channelmessage?loginToken=${device.loginToken}&id=${params.id}`;\n    const response = await get(url);\n\n    if (response) {\n      setChat(response.chat);\n      setResponse(response.response);\n      setIsFetching(false);\n    }\n  };\n\n  const onRefresh = () => {\n    setIsFetching(true);\n    fetchChat();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.name });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            flex: 1,\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{item.user?.name}</Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <MarkdownView style={{}}>{item.message}</MarkdownView>\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      {Array.isArray(chat) ? (\n        <FlatList\n          initialNumToRender={Platform.OS === \"web\" ? chat.length : undefined}\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 250 : undefined,\n          }}\n          data={chat}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => `index${index}`}\n          refreshControl={\n            <RefreshControl refreshing={isFetching} onRefresh={onRefresh} />\n          }\n          inverted\n        />\n      ) : (\n        <View style={{ flex: 1 }}>\n          <T>{response}</T>\n        </View>\n      )}\n      <Footer me={me} device={device} params={params} fetchChat={fetchChat} />\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channelsubs: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChannelsubs();\n\n    this.interval = setInterval(() => this.fetchChannelsubs(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  fetchChannelsubs = () => {\n    const {\n      screenProps: { device },\n    } = this.props;\n    fetch(\n      `${Constants.SERVER_ADDR}/channelsubs?loginToken=${device.loginToken}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((channelsubs) => {\n        if (channelsubs.response) {\n          this.setState({ response: channelsubs.response });\n        } else {\n          this.setState({ channelsubs });\n        }\n        this.setState({ isFetching: false });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  openMenu = (id) => {\n    const { device } = this.props.screenProps;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"delete\")];\n\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"delete\", id);\n          await post(\"setDeleted\", { loginToken: device.loginToken, id: id });\n          this.fetchChannelsubs();\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  openGeneralMenu = () => {\n    const { device } = this.props.screenProps;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"deleteAllChats\")];\n\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"deleteAll\");\n          await post(\"deleteAll\", { loginToken: device.loginToken });\n          this.fetchChannelsubs();\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.name\n      : \"(System)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          ?.thumbnail\n      : null;\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel?.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          {channelThumbnail ? (\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + channelThumbnail }}\n              style={{ width: 60, height: 60, borderRadius: 30 }}\n            />\n          ) : (\n            <View\n              style={{\n                width: 60,\n                height: 60,\n                borderRadius: 30,\n                backgroundColor: \"#CCC\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n            </View>\n          )}\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20, flex: 1 }}>\n            <T bold>\n              {/* name or other person in chat */}\n              {channelTitle}\n            </T>\n            {item.lastmessage ? (\n              <T numberOfLines={1}>{item.lastmessage}</T>\n            ) : null}\n          </View>\n\n          <View>\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\" }}\n              onPress={() => this.openMenu(item.id)}\n              hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n            >\n              <Entypo\n                style={{ marginLeft: 10 }}\n                name=\"dots-three-horizontal\"\n                size={20}\n                color={theme.primaryText}\n              />\n            </TouchableOpacity>\n            <T>\n              {moment(item.lastmessageDate).format(\n                moment(item.lastmessageDate).isAfter(moment().startOf(\"day\"))\n                  ? \"HH:mm\"\n                  : \"DD-MM-YYYY\"\n              )}\n            </T>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const { channelsubs } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          ListHeaderComponent={() => {\n            return (\n              <View\n                style={{\n                  justifyContent: \"flex-end\",\n                  marginRight: 20,\n                  marginTop: 20,\n                }}\n              >\n                <TouchableOpacity\n                  style={{ alignSelf: \"flex-end\" }}\n                  onPress={() => this.openGeneralMenu()}\n                  hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n                >\n                  <Entypo\n                    style={{ marginLeft: 10 }}\n                    name=\"dots-three-horizontal\"\n                    size={20}\n                    color={theme.primaryText}\n                  />\n                </TouchableOpacity>\n              </View>\n            );\n          }}\n          data={channelsubs}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default connectActionSheet(ChatScreen);\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    this.interval = setInterval(() => this.getChat(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Code = ({\n  navigation: {\n    state: { params },\n  },\n  screenProps: { me, device, dispatch },\n}) => {\n  const [response, setResponse] = useState(null);\n\n  const code = params?.code;\n\n  //  When opening the site on web  on /Case or /Code or /StealCar on an unverified account, open modal\n  doOnce(() => {\n    if (!me?.phoneVerified) {\n      dispatch({ type: \"SET_LOGGED\", value: false });\n    }\n  });\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View>\n      {response ? (\n        <T>{response}</T>\n      ) : (\n        <Button\n          title={getText(\"openSuitcaseButton\")}\n          onPress={async () => {\n            const { response } = await post(\"enterCode\", {\n              loginToken: device.loginToken,\n              code,\n            });\n            setResponse(response);\n          }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default Code;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  Image,\n  Linking,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nfunction Footer({ navigation, screenProps: { me } }) {\n  const getText = getTextFunction(me?.locale);\n\n  const theme = useSelector((state) => state.device.theme);\n  const [text, setText] = useState(\"\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmastercrimez.com%2F#%2FAccomplice%2F?accomplice=${me?.name}`;\n\n  const copy = () => {\n    Clipboard.setString(url);\n    setText(\"Gekopiëerd naar klembord\");\n  };\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 10 }}>\n        <T bold>{getText(\"footerInviteFriends\")}</T>\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"footerInviteText\")}</T>\n          <View style={{ flexDirection: \"row\" }}>\n            <TextInput\n              value={url}\n              style={{\n                color: theme.secondaryText,\n                backgroundColor: theme.secondary,\n                height: 35,\n                borderRadius: 10,\n                paddingHorizontal: 10,\n                width: 200,\n              }}\n              onFocus={copy}\n            />\n            <Button title={getText(\"footerCopy\")} onPress={copy} />\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <T>{getText(\"footerShare\")}</T>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(facebookShareUrl);\n              }}\n            >\n              <View\n                style={{\n                  marginLeft: 20,\n                  backgroundColor: \"#3b5998\",\n                  width: 40,\n                  height: 40,\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n              </View>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(\n                  `whatsapp://send?text=${getText(\"footerWhatsappText\", url)}`\n                );\n              }}\n            >\n              <Image\n                source={require(\"../../assets/whatsapp.png\")}\n                style={{ width: 55, height: 55 }}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"footerFollowUs\")}</T>\n        <TouchableOpacity\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.facebook.com/Mastercrimez-100872595072798\"\n            );\n          }}\n        >\n          <View\n            style={{\n              marginLeft: 20,\n              backgroundColor: \"#3b5998\",\n              width: 40,\n              height: 40,\n              borderRadius: 20,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\"https://www.instagram.com/mastercrimez.nl/\");\n          }}\n        >\n          <Image\n            source={require(\"../../assets/instagram.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://open.spotify.com/playlist/5n5j78gTXOM9h2SOdz0Ay5?si=9gBkeObkTXaqFZxHLFutIA\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/spotify.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.youtube.com/channel/UCGqGRq-iNxXdLrMx9AlD7qw\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/youtube.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={{ height: 20 }} />\n\n      <Text style={{ color: theme.primaryText }}>\n        &copy; MasterCrimeZ 2006-{new Date().getFullYear()}\n      </Text>\n    </View>\n  );\n}\n\nexport default Footer;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, Linking, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nimport T from \"./T\";\n\nconst ShareButtons = ({ me, url, text }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const siteUrl = `https://mastercrimez.com/#/${url}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=${siteUrl}`;\n\n  return (\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n      <T>{getText(\"footerShare\")}</T>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(facebookShareUrl);\n        }}\n      >\n        <View\n          style={{\n            marginLeft: 20,\n            backgroundColor: \"#3b5998\",\n            width: 40,\n            height: 40,\n            borderRadius: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n        </View>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(`whatsapp://send?text=${text} ${siteUrl}`);\n        }}\n      >\n        <Image\n          source={require(\"../../assets/whatsapp.png\")}\n          style={{ width: 55, height: 55 }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ShareButtons;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            {response.code && (\n              <ShareButtons\n                me={me}\n                text={getText(\"crimeSuitcase\")}\n                url={`Case/${response.code}`}\n              />\n            )}\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","const { Platform, Linking, View, Text } = require(\"react-native\");\nimport React from \"react\";\nimport Constants from \"../Constants\";\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nconst DownloadApp = () => {\n  if (getMobileOperatingSystem() === \"android\") {\n    console.log(\"is android\");\n    window.location.replace(Constants.ANDROID_APP_URL);\n  }\n\n  if (getMobileOperatingSystem() === \"ios\") {\n    console.log(\"is ios\");\n    window.location.replace(Constants.IOS_APP_URL);\n  }\n\n  console.log(getMobileOperatingSystem());\n\n  return (\n    <View>\n      <Text>Download the app!</Text>\n    </View>\n  );\n};\nexport default DownloadApp;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-renderer\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n        <TextInput\n          multiline\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          numberOfLines={4}\n          style={{ ...style(device.theme).textInput, height: 150 }}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n\n                <MarkdownView\n                  style={{ text: { color: device.theme.primaryText } }}\n                >\n                  {response.message}\n                </MarkdownView>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={style(device.theme).textInput}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            placeholder={getText(\"react\")}\n            value={this.state.message}\n            onChangeText={(message) => this.setState({ message })}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport { getLocale, getUserColor } from \"../Util\";\nimport T from \"./T\";\n\nconst User = ({ user, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const color = getUserColor(user, theme);\n  const isOnline = (Date.now() - user.onlineAt) / 60000 < 5;\n\n  const extraIcon =\n    user.level === 2\n      ? \"💼\"\n      : user.level === 3\n      ? \"🕶\"\n      : user.level === 10\n      ? \"🤓\"\n      : null;\n\n  const country = getLocale(user.locale) === \"nl\" ? \"🇳🇱\" : \"🌍\";\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Profile\", { name: user.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {user.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + user.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n        <View style={{ position: \"absolute\", top: 0, right: 0 }}>\n          <T>{isOnline ? \"✅\" : \"🛑\"}</T>\n        </View>\n\n        {extraIcon && (\n          <View style={{ position: \"absolute\", bottom: 0, right: 0 }}>\n            <T>{extraIcon}</T>\n          </View>\n        )}\n\n        {user.gang && user.gang.thumbnail && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: -0.1 * size,\n              left: -0.1 * size,\n            }}\n          >\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + user.gang.thumbnail }}\n              style={{\n                width: size / 2,\n                height: size / 2,\n                borderRadius: size / 4,\n              }}\n            />\n          </View>\n        )}\n\n        <View style={{ position: \"absolute\", bottom: 0, left: 0 }}>\n          <T>{country}</T>\n        </View>\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T style={{ color }}>{user.name}</T>\n        {user.gang && <T>{user.gang.name}</T>}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default User;\n","import React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Image,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-renderer\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getTextFunction,\n  getUserColor,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const [response, setResponse] = useState(null);\n\n  const name = navigation.state.params?.name;\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${name}`);\n    setLoading(false);\n    setItem(gang);\n  };\n\n  const postGangJoin = async () => {\n    setLoading(true);\n\n    const { response } = await post(`gangJoin`, {\n      token: device.loginToken,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getGang);\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      <FlatList\n        ListFooterComponent={() => {\n          return (\n            <MarkdownView style={{ text: { color: theme.primaryText } }}>\n              {item?.profile}\n            </MarkdownView>\n          );\n        }}\n        ListHeaderComponent={() => {\n          return (\n            <View\n              style={{ margin: MARGIN, flexDirection: \"row\", flexWrap: \"wrap\" }}\n            >\n              <View>\n                {item.image ? (\n                  <Image\n                    source={{ uri: Constants.SERVER_ADDR + item.image }}\n                    style={{ width: SIZE, height: SIZE }}\n                    resizeMode=\"cover\"\n                  />\n                ) : (\n                  <Image\n                    source={require(\"../../assets/icon.png\")}\n                    style={{ width: SIZE, height: SIZE }}\n                  />\n                )}\n              </View>\n              <View style={{ margin: MARGIN }}>\n                {loading ? <ActivityIndicator /> : null}\n                <T>\n                  {getText(\"name\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"members\")}: {item.members}\n                </T>\n                <T>\n                  {getText(\"bank\")}: €{numberFormat(item.bank)},-\n                </T>\n                <T>\n                  {getText(\"power\")}: {item.score}\n                </T>\n                {!me?.gang &&\n                  (response ? (\n                    <T>{response}</T>\n                  ) : (\n                    <Button\n                      onPress={postGangJoin}\n                      title={getText(\"gangJoinCTA\")}\n                      theme={theme}\n                    />\n                  ))}\n              </View>\n            </View>\n          );\n        }}\n        data={item.users}\n        keyExtractor={(item, index) => `item${index}`}\n        renderItem={({ item, index }) => {\n          const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n\n          const color = getUserColor(item, theme);\n\n          return (\n            <Grid\n              key={`item${index}`}\n              style={{\n                paddingHorizontal: 20,\n              }}\n            >\n              <Col style={{ marginVertical: 5 }}>\n                <User navigation={navigation} user={item} />\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>{getGangLevel(item.gangLevel)}</T>\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>❤️ {item.health}%</T>\n              </Col>\n            </Grid>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst GangAchievements = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n\n  const getGangAchievements = async () => {\n    setLoading(true);\n    const result = await get(`gangAchievements?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangAchievements);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>\n              {getText(\"level\")}: {result.power}\n            </H1>\n          </View>\n          {result.achievements &&\n            Object.keys(result.achievements).map((key) => {\n              const stats = result.achievements[key];\n\n              return (\n                <View style={{ marginBottom: 20 }}>\n                  <T bold>{getText(key)}</T>\n                  <T>\n                    {getText(\"current\")}: {stats.current}\n                  </T>\n                  <T>\n                    {getText(\"level\")}: {stats.level}\n                  </T>\n                  <T>\n                    {getText(\"next\")}:{\" \"}\n                    {stats.next ? stats.next : getText(\"maximumLevel\")}\n                  </T>\n                </View>\n              );\n            })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangAchievements;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  const postGangCreate = async () => {\n    const { response } = await post(\"gangCreate\", {\n      name,\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <TextInput\n        value={name}\n        onChangeText={setName}\n        style={style(theme).textInput}\n        placeholder=\"Name\"\n        placeholderTextColor={theme.secondaryTextSoft}\n      />\n      <Button\n        onPress={postGangCreate}\n        title={getText(\"gangCreateCTA\")}\n        theme={theme}\n      />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 100;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [gangs, setGangs] = useState([]);\n  const [invites, setInvites] = useState([]);\n\n  const getGangs = async () => {\n    setLoading(true);\n    const { gangs } = await get(\"gangs\");\n    setLoading(false);\n    setGangs(gangs);\n  };\n\n  const getInvites = async () => {\n    const { requests, invites } = await get(\n      `gangInvites?token=${device.loginToken}`\n    );\n    setInvites(invites);\n  };\n\n  const postGangAnswerInvite = async (id, accepted) => {\n    const { response } = await post(\"gangAnswerInvite\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setResponse(response);\n    getInvites();\n  };\n\n  doOnce(getGangs);\n  doOnce(getInvites);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      {invites.length > 0 &&\n        invites.map((invite, index) => {\n          return (\n            <View key={`invite${index}`} style={{ flexDirection: \"row\" }}>\n              <T>{getText(\"gangInvitedTo\", invite.gangName)}</T>\n              <Button\n                title={getText(\"accept\")}\n                onPress={() => postGangAnswerInvite(invite.id, true)}\n              />\n              <Button\n                title={getText(\"decline\")}\n                onPress={() => postGangAnswerInvite(invite.id, false)}\n              />\n            </View>\n          );\n        })}\n\n      <FlatList\n        refreshing={loading}\n        onRefresh={getGangs}\n        data={gangs}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n            : undefined\n        }\n        keyExtractor={(item, index) => `gang${index}`}\n        renderItem={({ item, index }) => {\n          const navigate = () =>\n            navigation.navigate(\"Gang\", { name: item.name });\n          return (\n            <TouchableOpacity onPress={navigate} style={{ margin: MARGIN }}>\n              {item.thumbnail ? (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + item.thumbnail }}\n                  style={{ width: SIZE, height: SIZE }}\n                  resizeMode=\"cover\"\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              )}\n              <T>\n                {getText(\"name\")}: {item.name}\n              </T>\n              <T>\n                {getText(\"members\")}: {item.members}\n              </T>\n              <T>\n                {getText(\"bank\")}: €{numberFormat(item.bank)},-\n              </T>\n              <T>\n                {getText(\"power\")}: {item.score}\n              </T>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  LayoutAnimation,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { lighterHex } from \"../Util\";\nimport T from \"./T\";\n\nUIManager.setLayoutAnimationEnabledExperimental &&\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n\nconst storeData = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (e) {\n    // saving error\n  }\n};\n\nconst getData = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    if (value !== null) {\n      return value;\n      // value previously stored\n    } else {\n      return undefined;\n    }\n  } catch (e) {\n    // error reading value\n    return undefined;\n  }\n};\n\nconst Content = ({ id, title, children, contentWidth }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const [expanded, setExpanded] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const isExpanded = await getData(`@content=${id}`);\n      if (isExpanded !== undefined) {\n        setExpanded(isExpanded === \"true\");\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <View\n      style={{\n        backgroundColor: lighterHex(theme.primary),\n        margin: 20,\n        padding: 20,\n        borderRadius: 20,\n        width:\n          typeof contentWidth === \"string\"\n            ? contentWidth\n            : contentWidth + 20 * 4,\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          LayoutAnimation.linear();\n          setExpanded(!expanded);\n          storeData(`@content=${id}`, String(!expanded));\n        }}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <T bold>{title}</T>\n        <AntDesign\n          name={expanded ? \"caretup\" : \"caretdown\"}\n          color={theme.primaryText}\n        />\n      </TouchableOpacity>\n\n      <View\n        onLayout={(event) => {\n          var { x, y, width, height } = event.nativeEvent.layout;\n          // setHeight(height);\n          // setWidth(width);\n        }}\n      >\n        {expanded && !loading && children}\n      </View>\n    </View>\n  );\n};\n\nexport default Content;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangSettings = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [gang, setGang] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [gangName, setGangName] = useState(\"\");\n  const [profile, setProfile] = useState(me?.gang?.profile || \"\");\n  const [name, setName] = useState(me?.gang?.name || \"\");\n  const [image, setImage] = useState(me?.gang?.image || \"\");\n  const [isBullets, setIsBullets] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const alertAlert = React.useContext(AlertContext);\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${me?.gang?.name}`);\n    setLoading(false);\n    setGang(gang);\n  };\n\n  const getGangInvites = async () => {\n    setLoading(true);\n    const { requests } = await get(`gangInvites?token=${device.loginToken}`);\n    setLoading(false);\n    setRequests(requests);\n  };\n\n  const postGangAnswerJoin = async (id, accepted) => {\n    setLoading(true);\n    const { response } = await post(\"gangAnswerJoin\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGangInvites();\n  };\n\n  const postGangUpdate = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangUpdate\", {\n      token: device.loginToken,\n      profile,\n      image,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangInvite = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangInvite\", {\n      token: device.loginToken,\n      name: username,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangTransaction = async (isToUser) => {\n    setLoading(true);\n    const { response } = await post(\"gangTransaction\", {\n      token: device.loginToken,\n      amount,\n      isToUser,\n      isBullets,\n    });\n    reloadMe(device.loginToken);\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangLeave = async () => {\n    if (gangName !== me?.gang?.name) {\n      alert(getText(\"pleaseFillInGangName\"));\n      return;\n    }\n\n    setLoading(true);\n    const { response } = await post(\"gangLeave\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangKick = async (userId) => {\n    setLoading(true);\n    const { response } = await post(\"gangKick\", {\n      token: device.loginToken,\n      userId,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const postGangRemove = async () => {\n    if (gangName !== me?.gang?.name) {\n      alert(getText(\"pleaseFillInGangName\"));\n      return;\n    }\n\n    setLoading(true);\n    const { response } = await post(\"gangRemove\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangSetRank = async (userId, rank) => {\n    setLoading(true);\n    const { response } = await post(\"gangSetRank\", {\n      token: device.loginToken,\n      userId,\n      rank,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getGang();\n  };\n\n  doOnce(getGangInvites);\n  doOnce(getGang);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n      }\n    }\n  };\n  const handleChoosePhoto = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"yourStatus\")}\n              contentWidth={250}\n              id=\"settingsYourStatus\"\n            >\n              <T>{getText(\"youAreWhat\", getGangLevel(me?.gangLevel))}</T>\n            </Content>\n\n            {/* Answer join */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"gangJoinRequestsTitle\")}\n                contentWidth={250}\n                id=\"settingsAnswerJoin\"\n              >\n                {requests.length > 0 ? (\n                  requests.map((request) => {\n                    return (\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{request.user?.name}</T>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Button\n                            title={getText(\"accept\")}\n                            onPress={() => postGangAnswerJoin(request.id, true)}\n                          />\n                          <Button\n                            title={getText(\"decline\")}\n                            onPress={() =>\n                              postGangAnswerJoin(request.id, false)\n                            }\n                          />\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{getText(\"noJoinRequests\")}</T>\n                )}\n              </Content>\n            ) : null}\n\n            {/* Invite */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"invitePeople\")}\n                contentWidth={250}\n                id=\"settingsInvite\"\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={username}\n                    onChangeText={setUsername}\n                    placeholder={getText(\"name\")}\n                  />\n                  <Button\n                    title={getText(\"invite\")}\n                    onPress={postGangInvite}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </Content>\n            ) : null}\n\n            {/* Transactions */}\n            {me?.gangLevel === GANG_LEVEL_BANK ||\n            me?.gangLevel === GANG_LEVEL_BOSS ? (\n              <Content\n                title={getText(\"gangBank\")}\n                contentWidth={250}\n                id=\"settingsTransactions\"\n              >\n                <T>\n                  {getText(\"bankMoney\")}: €{numberFormat(me?.gang?.bank || 0)},-\n                </T>\n                <T>\n                  {getText(\"bullets\")}: {numberFormat(me?.gang?.bullets || 0)}\n                </T>\n                <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={amount}\n                    onChangeText={setAmount}\n                    placeholder={getText(\"amount\")}\n                  />\n\n                  <Button\n                    title={isBullets ? getText(\"bullets\") : getText(\"bank\")}\n                    onPress={() => setIsBullets(!isBullets)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n\n                  <Button\n                    title={getText(\"in\")}\n                    onPress={() => postGangTransaction(false)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                  <Button\n                    title={getText(\"out\")}\n                    onPress={() => postGangTransaction(true)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </Content>\n            ) : null}\n\n            {/* memberview with kick or change rank, per member */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"members\")}\n                contentWidth=\"90%\"\n                id=\"memberViewSettings\"\n              >\n                {gang?.users?.map((member) => {\n                  return (\n                    <Grid>\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{member.name}</T>\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{getGangLevel(member.gangLevel)}</T>\n                      </Col>\n\n                      <Col\n                        style={{\n                          justifyContent: \"center\",\n                          alignItems: \"flex-end\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          {me?.gangLevel >= GANG_LEVEL_UNDERBOSS &&\n                            member.id !== me?.id && (\n                              <Button\n                                title={getText(\"kick\")}\n                                onPress={() => postGangKick(member.id)}\n                              />\n                            )}\n                          {me?.gangLevel === GANG_LEVEL_BOSS && (\n                            <Button\n                              title={getText(\"changeRank\")}\n                              style={{ marginLeft: 10 }}\n                              onPress={() => changeRank(member.id)}\n                            />\n                          )}\n                        </View>\n                      </Col>\n                    </Grid>\n                  );\n                })}\n              </Content>\n            )}\n            {/* update name,profile,image */}\n\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"gangProfile\")}\n                contentWidth=\"90%\"\n                id=\"updateProfileSettings\"\n              >\n                <TouchableOpacity onPress={handleChoosePhoto}>\n                  {image ? (\n                    <Image\n                      source={{\n                        uri: image.includes(\"data:image\")\n                          ? image\n                          : Constants.SERVER_ADDR + image,\n                      }}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  ) : (\n                    <Image\n                      source={require(\"../../assets/icon.png\")}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  )}\n                </TouchableOpacity>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={styles(theme).textInput}\n                  value={name}\n                  onChangeText={setName}\n                  placeholder={getText(\"gangName\")}\n                />\n\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={profile}\n                  onChangeText={setProfile}\n                />\n                <Button\n                  onPress={postGangUpdate}\n                  title={getText(\"save\")}\n                  style={{ marginTop: 10 }}\n                />\n              </Content>\n            )}\n            {/* transactions */}\n\n            {/* Leave */}\n            <View style={{ marginVertical: 20 }}>\n              {\n                <Button\n                  title={getText(\"leaveGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"leaveGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangLeave },\n                        { text: getText(\"cancel\") },\n                      ]\n                    )\n                  }\n                />\n              }\n            </View>\n\n            {/* Gang delete */}\n            <View style={{ marginVertical: 20 }}>\n              {me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Button\n                  title={getText(\"removeGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"removeGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangRemove },\n                        { text: getText(\"cancel\") },\n                      ]\n                    )\n                  }\n                />\n              )}\n            </View>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangSettings;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\nconst MARGIN = 20;\nconst { width, height } = Dimensions.get(\"window\");\nconst SIZE = width < 1000 ? 100 : 200;\nconst GangShop = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const prices = [\n    null,\n    50000,\n    100000,\n    200000,\n    500000,\n    1000000,\n    1500000,\n    2000000,\n    3000000,\n    4000000,\n    5000000,\n    10000000,\n    20000000,\n  ];\n\n  const items = [\n    {\n      name: getText(\"gangShopItem1\"),\n      price: prices[1],\n      current: me?.gang?.item1,\n      image: require(\"../../assets/gangshop/item1.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem2\"),\n      price: prices[2],\n      current: me?.gang?.item2,\n      image: require(\"../../assets/gangshop/item2.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem3\"),\n      price: prices[3],\n      current: me?.gang?.item3,\n      image: require(\"../../assets/gangshop/item3.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem4\"),\n      price: prices[4],\n      current: me?.gang?.item4,\n      image: require(\"../../assets/gangshop/item4.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem5\"),\n      price: prices[5],\n      current: me?.gang?.item5,\n      image: require(\"../../assets/gangshop/item5.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem6\"),\n      price: prices[6],\n      current: me?.gang?.item6,\n      image: require(\"../../assets/gangshop/item6.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem7\"),\n      price: prices[7],\n      current: me?.gang?.item7,\n      image: require(\"../../assets/gangshop/item7.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem8\"),\n      price: prices[8],\n      current: me?.gang?.item8,\n      image: require(\"../../assets/gangshop/item8.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem9\"),\n      price: prices[9],\n      current: me?.gang?.item9,\n      image: require(\"../../assets/gangshop/item9.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem10\"),\n      price: prices[10],\n      current: me?.gang?.item10,\n      image: require(\"../../assets/gangshop/item10.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem11\"),\n      price: prices[11],\n      current: me?.gang?.item11,\n      image: require(\"../../assets/gangshop/item11.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem12\"),\n      price: prices[12],\n      current: me?.gang?.item12,\n      image: require(\"../../assets/gangshop/item12.jpg\"),\n    },\n  ];\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const postGangShop = async (itemId) => {\n    setLoading(true);\n    const { response } = await post(\"gangShop\", {\n      itemId,\n      amount: amount[itemId],\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    setLoading(false);\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <T>\n        {getText(\"gangBank\")}: €{numberFormat(me?.gang?.bank || 0)},-\n      </T>\n      <T>\n        {getText(\"power\")}: {me?.gang?.power}\n      </T>\n      <FlatList\n        refreshing={loading}\n        onRefresh={() => reloadMe(device.loginToken)}\n        data={items}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\", height: height - 200 }\n            : undefined\n        }\n        keyExtractor={(item, index) => `shop${index}`}\n        renderItem={({ item, index }) => {\n          return (\n            <View style={{ margin: MARGIN }}>\n              <Image\n                source={item.image}\n                style={{ width: SIZE, height: SIZE }}\n                resizeMode=\"contain\"\n              />\n              <T>{item.name}</T>\n              <T>€{item.price},-</T>\n              <T>\n                {getText(\"inPossession\")}: {item.current}\n              </T>\n              <View style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[styles(theme).textInput, { width: 100 }]}\n                  value={amount[index + 1] || \"\"}\n                  onChangeText={(v) => setAmount({ ...amount, [index + 1]: v })}\n                  placeholder={getText(\"amount\")}\n                />\n                <Button\n                  style={{ marginVertical: 10, marginLeft: 10 }}\n                  title={getText(\"buy\")}\n                  onPress={() => postGangShop(index + 1)}\n                />\n              </View>\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default GangShop;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      this.fetchGroups();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* Show all people with isHacker set to true */}\n      <Image\n        source={require(\"../../assets/hacker.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"hackersInfo\")}</T>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { Image, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"RLD\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.rldOwner ? (\n                    <T>{city.rldOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.rldOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"rld\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city.rldProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const number = Math.ceil(Math.random() * 60);\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Image\n                style={{ width: 100, height: 100 }}\n                source={{\n                  uri:\n                    Constants.SERVER_ADDR + \"/images/female/\" + number + \".gif\",\n                }}\n              />\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { Component } from \"react\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  NativeModules,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { leftMenu, rightMenu } from \"../Menus\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst itemWidth = width / 4 > 100 ? 100 : width / 4;\nconst isSmallDevice = width < 800;\n\nconst amountOfItems = Math.floor((height - 200) / itemWidth) * 4;\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    //iPad|\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nclass Home extends Component {\n  state = {\n    response: null,\n    activeSlide: 0,\n    notificationsHeader: false,\n  };\n\n  componentDidMount() {\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n\n    this.turnOnNotifications();\n    this.sendLanguage();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      this.turnOnNotifications();\n      this.sendLanguage();\n    }\n  };\n\n  sendLanguage = () => {\n    const { device, me } = this.props.screenProps;\n\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  turnOnNotifications = async () => {\n    const { device, me } = this.props.screenProps;\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        this.setState({ notificationsHeader: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      this.setState({ notificationsHeader: false });\n    }\n  };\n\n  _renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginVertical: 15,\n        }}\n      >\n        {item.map((menu, index) => {\n          const TheIcon = Icon[menu.iconType];\n          return (\n            <View\n              key={`i${index}`}\n              style={{ width: itemWidth, alignItems: \"center\" }}\n            >\n              <TouchableOpacity\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"#000\",\n                  backgroundColor: theme.secondary,\n                  borderRadius: 10,\n                  width: itemWidth - 25,\n                  height: itemWidth - 25,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={(e) => {\n                  navigation.navigate(menu.to);\n\n                  const movement = {\n                    action: \"App_Menu_\" + menu.to,\n                    locationX: e.nativeEvent.locationX,\n                    locationY: e.nativeEvent.locationY,\n                    timestamp: Date.now(),\n                  };\n\n                  dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n                }}\n              >\n                {TheIcon && (\n                  <TheIcon\n                    name={menu.icon}\n                    size={(itemWidth - 25) / 2}\n                    color={theme.secondaryText}\n                  />\n                )}\n              </TouchableOpacity>\n              <View>\n                <Text style={{ color: theme.primaryText }}>{menu.text}</Text>\n                {menu.component}\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCarousel() {\n    const {\n      screenProps: { dispatch, me, device },\n    } = this.props;\n\n    const { notificationsHeader } = this.state;\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    const getText = getTextFunction(me?.locale);\n\n    const data = [\n      filtered.slice(0, amountOfItems),\n      filtered.slice(amountOfItems, amountOfItems * 2),\n      amountOfItems * 2 > filtered.length\n        ? undefined\n        : filtered.slice(amountOfItems * 2, filtered.length),\n    ].filter((x) => !!x);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {notificationsHeader && (\n          <TouchableOpacity\n            onPress={() => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            }}\n          >\n            <View\n              style={{\n                padding: 5,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"exclamationcircleo\"\n                color=\"red\"\n                style={{ marginRight: 10 }}\n              />\n              <T>{getText(\"turnOnNotificationsText\")}</T>\n            </View>\n          </TouchableOpacity>\n        )}\n\n        <Carousel\n          ref={(c) => {\n            this._carousel = c;\n          }}\n          data={data}\n          renderItem={this._renderItem}\n          sliderWidth={width}\n          onSnapToItem={(index) => this.setState({ activeSlide: index })}\n          itemWidth={width}\n        />\n\n        <Pagination\n          dotsLength={data.length}\n          activeDotIndex={this.state.activeSlide}\n          // containerStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.75)\" }}\n          dotStyle={{\n            width: 10,\n            height: 10,\n            borderRadius: 5,\n            marginHorizontal: 8,\n            backgroundColor: \"rgba(255, 255, 255, 0.92)\",\n          }}\n          inactiveDotStyle={\n            {\n              // Define styles for inactive dots here\n            }\n          }\n          inactiveDotOpacity={0.4}\n          inactiveDotScale={0.6}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      device,\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    let appLink = null;\n    if (Platform.OS === \"web\") {\n      if (getMobileOperatingSystem() === \"android\") {\n        appLink = Constants.ANDROID_APP_URL;\n      }\n\n      if (getMobileOperatingSystem() === \"ios\") {\n        appLink = Constants.IOS_APP_URL;\n      }\n    }\n\n    if (Platform.OS === \"web\") {\n      if (isSmallDevice) {\n        return (\n          <ScrollView>\n            {appLink && (\n              <TouchableOpacity onPress={() => Linking.openURL(appLink)}>\n                <View\n                  style={{\n                    padding: 5,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <AntDesign\n                    name=\"exclamationcircleo\"\n                    color=\"red\"\n                    style={{ marginRight: 10 }}\n                  />\n                  <T>{getText(\"downloadTheApp\")}</T>\n                </View>\n              </TouchableOpacity>\n            )}\n\n            {this._renderItem({ item: filtered })}\n          </ScrollView>\n        );\n      } else {\n        return <T>{getText(\"welcomeBack\")}</T>;\n      }\n    }\n    return this.renderCarousel();\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"prizes\")}\n          to=\"Prizes\"\n          IconFont=\"AntDesign\"\n          icon=\"star\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 1.000.000 kogels kosten Hoe dit wordt berekend, is\n        geheim, maar het ligt aan deze factoren: Voor de aanvaller: Het wapen,\n        de moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels\n        je nodig zult hebben. Voor de verdediger: De verdediging, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe meer kogels de\n        aanvaller nodig zal hebben. De rang heeft de meeste invloed, daarna het\n        wapen, de verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Huisjesmelkers, Leger des Heils en het Red Light District krijgen 20%\n        van iedereens inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n    this.props.screenProps.reloadCities();\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n                this.fetchMembers();\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, reloadCities, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"jail\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n            marginHorizontal: 15,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"jail\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                paddingHorizontal: 15,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.jailOwner ? (\n                    <Text style={{ color: theme.primaryText }}>\n                      {city.jailOwner}\n                    </Text>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.jailOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"jail\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <Text style={{ color: theme.primaryText }}>\n                  {city.jailProfit}\n                </Text>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListFooterComponent={this.renderCities}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"junkiesObject\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.junkiesOwner ? (\n                    <T>{city.junkiesOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.junkiesOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"junkies\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <View>\n                  <T>{city.junkiesProfit}</T>\n                </View>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = typeStrings[type];\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\nconst { height, width } = Dimensions.get(\"window\");\n\nconst SIZE = 100;\nconst MARGIN = 20;\n\nconst Market = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [market, setMarket] = useState([]);\n\n  //new offer\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [buy, setBuy] = useState(false);\n  const [type, setType] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getMarket = async () => {\n    setLoading(true);\n\n    const { market } = await get(`market`);\n    setLoading(false);\n    setMarket(market);\n  };\n\n  const postMarketCreateOffer = async () => {\n    setLoading(true);\n    const { response } = await post(\"marketCreateOffer\", {\n      token: device.loginToken,\n      type,\n      price,\n      amount,\n      buy,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getMarket);\n\n  const chooseType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const validTypes = [\"junkies\", \"hoeren\", \"wiet\", \"gamepoints\", \"bullets\"];\n\n    const options = validTypes.map((type) => getText(type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < validTypes.length - 1) {\n          setType(validTypes[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n\n      <View>\n        {/* New offer */}\n\n        <View style={{ marginVertical: 20 }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Button\n              title={buy ? getText(\"buy\") : getText(\"sell\")}\n              onPress={() => setBuy(!buy)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={amount}\n              onChangeText={setAmount}\n              placeholder={getText(\"amount\")}\n            />\n\n            <Button\n              title={type ? getText(type) : getText(\"whatType\")}\n              onPress={chooseType}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <T style={{ marginLeft: 10 }}>{getText(\"for\")}</T>\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={price}\n              onChangeText={setPrice}\n              placeholder={getText(\"price\")}\n            />\n\n            <Button\n              title={getText(\"submit\")}\n              onPress={() => postMarketCreateOffer(true)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n          </View>\n        </View>\n\n        <FlatList\n          data={market}\n          numColumns={\n            Platform.OS === \"web\"\n              ? undefined\n              : Math.floor(width / (SIZE + MARGIN * 2))\n          }\n          contentContainerStyle={\n            Platform.OS === \"web\"\n              ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n              : undefined\n          }\n          keyExtractor={(item, index) => `offer${index}`}\n          renderItem={({ item, index }) => {\n            return (\n              <View\n                style={{\n                  width: SIZE,\n                }}\n              >\n                <View style={{ flex: 1 }}>\n                  <T>{item.buy ? getText(\"requested\") : getText(\"forSale\")}</T>\n                </View>\n\n                <T>\n                  {item.amount} {getText(item.type)}\n                </T>\n                <T>€{numberFormat(item.price)},-</T>\n              </View>\n            );\n          }}\n        />\n\n        <View style={{ height: 80 }} />\n      </View>\n    </View>\n  );\n};\n\nexport default Market;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Dimensions, FlatList, Platform, TextInput, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, getRank, getStrength, getTextFunction } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\n\nconst filters = [\n  {\n    key: \"alive\",\n    title: \"Levend\",\n  },\n  {\n    key: \"dead\",\n    title: \"Dood\",\n  },\n  {\n    key: \"crew\",\n    title: \"Crew\",\n  },\n];\n\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\n\nconst Members = ({\n  showActionSheetWithOptions,\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: { me, device },\n}) => {\n  const [members, setMembers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [orderBy, setOrderBy] = useState(orders[0]);\n  const [filter, setFilter] = useState(filters[0]);\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    const order = params?.order;\n    if (order) {\n      setOrderBy(orders[order]);\n      fetchMembers(orders[order].key);\n    } else {\n      fetchMembers(orderBy.key);\n    }\n  });\n\n  const fetchMembers = (order, filter) => {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}&filter=${filter}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        setMembers(members);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderItem = ({ item, index }) => {\n    const orderKey = orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n          paddingVertical: 10,\n        }}\n      >\n        <User navigation={navigation} user={item} />\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  const openActionSheetSort = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          setOrderBy(orders[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filter.key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const openActionSheetFilter = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = filters.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < filters.length) {\n          console.log(\"setfilter\", filters[buttonIndex]);\n          setFilter(filters[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filters[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ backgroundColor: device.theme.primary }}>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title={getText(\"sort\")}\n            onPress={() => openActionSheetSort()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n\n          <Button\n            title={getText(\"filter\")}\n            onPress={() => openActionSheetFilter()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: device.theme.secondaryText,\n            }}\n            onChangeText={setSearch}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n\n  const searchedMembers = members.filter((m) =>\n    search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? 0 : undefined,\n        }}\n        ItemSeparatorComponent={() => <Separator />}\n        ListHeaderComponent={renderHeader}\n        data={searchedMembers}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default connectActionSheet(Members);\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction } from \"../Util\";\nconst properties = [\n  {\n    name: \"bulletFactory\",\n  },\n  {\n    name: \"casino\",\n  },\n  {\n    name: \"rld\",\n  },\n  {\n    name: \"landlord\",\n  },\n  {\n    name: \"junkies\",\n  },\n  {\n    name: \"weaponShop\",\n  },\n  {\n    name: \"airport\",\n  },\n  {\n    name: \"estateAgent\",\n  },\n  {\n    name: \"garage\",\n  },\n  {\n    name: \"jail\",\n  },\n  {\n    name: \"bank\",\n  },\n];\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadCities,\n    reloadMe,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = typeStrings[property];\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  <Button\n                    key={`index${index}${property}`}\n                    style={{ marginVertical: 15 }}\n                    theme={theme}\n                    title={getText(\"manage\")}\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: property,\n                        city: city.city,\n                      })\n                    }\n                  />\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default MyObjects;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst MyProfile = ({\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n    reloadMe,\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [photo, setPhoto] = useState(null);\n  const [image, setImage] = useState(me?.image);\n\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [bio, setBio] = useState(me?.bio || \"\");\n\n  doOnce(() => {\n    getPermissionAsync();\n    fetchImages();\n  });\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${me.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleChooseImage = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleUploadPhoto = (pic) => {\n    fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: pic.uri,\n        token: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        fetchImages();\n        alert(getText(\"success\"));\n        setPhoto(null);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      console.log(\"result\", result);\n\n      if (!result.cancelled) {\n        setPhoto(result);\n        handleUploadPhoto(result);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderItem = ({ item, index }) => {\n    const uri = Constants.SERVER_ADDR + \"/\" + item.image;\n    return (\n      <TouchableOpacity onPress={() => setSelectedImage(item.id)}>\n        <View>\n          <Image\n            source={{ uri }}\n            style={{\n              width: 200,\n              height: 200,\n              ...(selectedImage === item.id\n                ? { borderWidth: 2, borderColor: \"black\" }\n                : {}),\n            }}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderFooter = () => {\n    return (\n      <Button\n        title={getText(\"delete\")}\n        onPress={() => {\n          if (selectedImage) {\n            fetch(`${Constants.SERVER_ADDR}/deleteimage`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                id: selectedImage,\n              }),\n            })\n              .then((response) => response.json())\n              .then(({ images }) => {\n                fetchImages();\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } else {\n            alert(getText(\"noPictureSelected\"));\n          }\n        }}\n      />\n    );\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: 20,\n      }}\n    >\n      <TouchableOpacity onPress={handleChooseImage}>\n        {image ? (\n          <Image\n            source={{\n              uri: image.includes(\"data:image\")\n                ? image\n                : Constants.SERVER_ADDR + image,\n            }}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        )}\n      </TouchableOpacity>\n\n      <TextInput\n        placeholderTextColor={theme.secondaryTextSoft}\n        style={[style(theme).textInput, { width: \"100%\", height: 200 }]}\n        multiline={true}\n        numberOfLines={4}\n        value={bio}\n        onChangeText={setBio}\n      />\n      <Button\n        title={getText(\"save\")}\n        style={{ marginVertical: 20 }}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              bio: bio,\n              image,\n              loginToken: device.loginToken,\n            }),\n          })\n            .then((response) => response.json())\n            .then((response) => {\n              alert(getText(\"success\"));\n              reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.log(\"upload error\", error);\n              alert(getText(\"somethingWentWrong\"));\n            });\n        }}\n      />\n\n      <Button\n        style={{ marginVertical: 20 }}\n        title={getText(\"choosePicture\")}\n        onPress={handleChoosePhoto}\n      />\n\n      <FlatList\n        data={images}\n        extraData={selectedImage}\n        numColumns={isSmallDevice ? 1 : 3}\n        renderItem={renderItem}\n        keyExtractor={(item) => `id${item.id}`}\n        ListFooterComponent={renderFooter}\n      />\n    </View>\n  );\n};\n\nexport default MyProfile;\n","import React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/oc`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"doOC\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      <T>AlCapone</T>\n      <T>WebMaster</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"policeBulletBank\")}:\n      </T>\n      <T>11.000.000</T>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport MarkdownView from \"react-native-markdown-renderer\";\nimport { getTextFunction } from \"../Util\";\n\n/**\n * A Privacy page\n */\nconst Prizes = ({\n  navigation,\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <MarkdownView style={{ text: { color: theme.primaryText } }}>\n          {getText(\"prizes\")}\n        </MarkdownView>\n      </View>\n    </View>\n  );\n};\nexport default Prizes;\n","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-renderer\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n} from \"../Util\";\n\nconst ProfileScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    device: { theme, loginToken },\n  },\n}) => {\n  const [profile, setProfile] = useState({});\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const name = params?.name;\n\n  doOnce(() => {\n    getProfile(name);\n  });\n  doOnce(reloadCities);\n\n  useEffect(() => {\n    getProfile(name);\n  }, [params?.name]);\n\n  useEffect(() => {\n    fetchImages();\n  }, [profile?.id]);\n\n  const getProfile = (name) => {\n    setLoading(true);\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        setProfile(responseJson);\n        setLoading(false);\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${profile?.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  if (loading) {\n    return <ActivityIndicator />;\n  }\n\n  // if (!profile) {\n  //   return <T>{getText(\"personDoesntExist\")}</T>;\n  // }\n\n  const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n  const color = getUserColor(profile, device.theme);\n\n  const uri = Constants.SERVER_ADDR + profile?.image;\n  const hasImage = !!profile?.image;\n\n  const properties = [\n    {\n      name: \"bulletFactory\",\n    },\n    {\n      name: \"casino\",\n    },\n    {\n      name: \"rld\",\n    },\n    {\n      name: \"landlord\",\n    },\n    {\n      name: \"junkies\",\n    },\n    {\n      name: \"weaponShop\",\n    },\n    {\n      name: \"airport\",\n    },\n    {\n      name: \"estateAgent\",\n    },\n    {\n      name: \"garage\",\n    },\n    {\n      name: \"jail\",\n    },\n    {\n      name: \"bank\",\n    },\n  ];\n  return (\n    <ScrollView>\n      <View style={{ justifyContent: \"center\" }}>\n        <View\n          style={{\n            backgroundColor: \"#444\",\n            borderRadius: 10,\n            margin: 20,\n            padding: 20,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n          {hasImage ? (\n            <View>\n              <Image\n                source={{ uri }}\n                style={{\n                  width: \"100%\",\n                  height: 400,\n                }}\n                resizeMode=\"contain\"\n              />\n            </View>\n          ) : null}\n\n          {profile?.gang ? (\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"Gang\", { name: profile?.gang?.name });\n              }}\n            >\n              <T>Gang</T>\n              {profile?.gang?.image && (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + profile?.gang?.image }}\n                  style={{ width: 200, height: 200 }}\n                  resizeMode=\"contain\"\n                />\n              )}\n              <T>{profile?.gang?.name}</T>\n            </TouchableOpacity>\n          ) : null}\n\n          {keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n          {keyValue(\n            getText(\"lastOnline\"),\n            moment(profile?.onlineAt).format(\"DD-MM-YYYY\")\n          )}\n          {keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n          {keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n          {keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n          {keyValue(\n            getText(\"strength\"),\n            getStrength(profile?.strength, \"both\")\n          )}\n          {keyValue(getText(\"health\"), `${profile?.health}%`)}\n          {keyValue(getText(\"weed\"), profile?.wiet)}\n          {keyValue(getText(\"junkies\"), profile?.junkies)}\n          {keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n          <T bold>{getText(\"properties\")}</T>\n          {properties\n            .map((p) => p.name)\n            .map((property) => {\n              return (\n                cities &&\n                cities.map((city, index) => {\n                  const ownerKey = `${property}Owner`;\n                  if (profile?.name === city[ownerKey]) {\n                    return (\n                      <T>\n                        {getText(property)} in {city.city}\n                      </T>\n                    );\n                  }\n\n                  return null;\n                })\n              );\n            })}\n\n          <View style={styles.row}>\n            <Button\n              title={getText(\"chat\")}\n              onPress={async () => {\n                const { id } = await get(\n                  `pm?loginToken=${loginToken}&userId=${profile.id}`\n                );\n\n                navigation.navigate(\"Channel\", { id });\n              }}\n            />\n\n            <Button\n              title={getText(\"rob\")}\n              onPress={() =>\n                navigation.navigate(\"Rob\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"attack\")}\n              onPress={() =>\n                navigation.navigate(\"Kill\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"donate\")}\n              onPress={() =>\n                navigation.navigate(\"Donate\", {\n                  to: profile.name,\n                })\n              }\n            />\n          </View>\n        </View>\n\n        <View style={{ marginVertical: 20 }}>\n          <MarkdownView style={{ text: { color: theme.primaryText } }}>\n            {profile?.bio}\n          </MarkdownView>\n        </View>\n\n        <View>\n          {images.map((image) => {\n            const uri = Constants.SERVER_ADDR + \"/\" + image.image;\n            return (\n              <View>\n                <Image\n                  source={{ uri }}\n                  style={{\n                    width: \"100%\",\n                    height: 400,\n                  }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n            );\n          })}\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      console.log(\"FETCH GARAGE\");\n      this.fetchGarage();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\n\nconst Settings = ({\n  navigation,\n  screenProps: {\n    dispatch,\n    me,\n    device: { theme },\n  },\n}) => {\n  const alertAlert = React.useContext(AlertContext);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView>\n      {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n      {__DEV__ && (\n        <Menu\n          theme={theme}\n          theme={theme}\n          IconFont=\"Ionicons\"\n          icon=\"ios-notifications\"\n          navigation={navigation}\n          title={getText(\"purge\")}\n          onPress={() =>\n            alertAlert(getText(\"areYouSure\"), getText(\"areYouSure\"), [\n              {\n                text: getText(\"ok\"),\n                onPress: () => dispatch({ type: \"PURGE\" }),\n              },\n              {\n                text: getText(\"cancel\"),\n              },\n            ])\n          }\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        IconFont=\"Entypo\"\n        icon=\"phone\"\n        navigation={navigation}\n        title={getText(\"verifyPhone\")}\n        to=\"VerifyPhone\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuChangePassword\")}\n        to=\"ChangePassword\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"onepassword\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"signupEmail\")}\n        to=\"SignupEmail\"\n        IconFont=\"Entypo\"\n        icon=\"email\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"changeName\")}\n        to=\"ChangeName\"\n        IconFont=\"FontAwesome\"\n        icon=\"bank\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"layout\")}\n        to=\"Theme\"\n        IconFont=\"Ionicons\"\n        icon=\"ios-color-palette\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuLogin\")}\n        IconFont=\"Entypo\"\n        icon=\"login\"\n        onPress={() => dispatch({ type: \"SET_LOGGED\", value: false })}\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuBackfire\")}\n        to=\"Backfire\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"pistol\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuAccomplice\")}\n        to=\"Accomplice\"\n        IconFont=\"FontAwesome\"\n        icon=\"universal-access\"\n      />\n    </ScrollView>\n  );\n};\n\nexport default Settings;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(\"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const { type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const propertyKey =\n      type === \"weapon\"\n        ? \"weaponShop\"\n        : type === \"protection\"\n        ? \"weaponShop\"\n        : type === \"airplane\"\n        ? \"airport\"\n        : type === \"home\"\n        ? \"estateAgent\"\n        : \"garage\";\n\n    const ownerKey = `${propertyKey}Owner`;\n    const profitKey = `${propertyKey}Profit`;\n\n    const propertyString =\n      type === \"weapon\"\n        ? getText(\"weaponShop\")\n        : type === \"protection\"\n        ? getText(\"weaponShop\")\n        : type === \"airplane\"\n        ? getText(\"airport\")\n        : type === \"home\"\n        ? getText(\"estateAgent\")\n        : getText(\"garage\");\n    return (\n      <View style={{ margin: 15 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {propertyString}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city[ownerKey] ? (\n                    <T>{city[ownerKey]}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city[ownerKey] === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: propertyKey,\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city[profitKey]}</T>\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    return (\n      <ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"weapon\", getText(\"weapons\"), 1)}\n          {this.renderMenu(\"protection\", getText(\"protection\"), 2)}\n          {this.renderMenu(\"airplane\", getText(\"airplane\"), 1)}\n          {this.renderMenu(\"home\", getText(\"homeShop\"), 1)}\n          {this.renderMenu(\"garage\", getText(\"garage\"), 1)}\n        </View>\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n            {this.renderCities()}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, numberFormat } from \"../Util\";\n\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nclass Status extends Component {\n  state = {\n    stats: [],\n  };\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        this.setState({ stats });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            padding: 20,\n          }}\n        >\n          {this.state.stats?.map((stat, index) => {\n            const key = Object.keys(stat)[0];\n            const values = Object.values(stat)[0];\n            return (\n              <Content\n                id={`stat${index}`}\n                key={`stat${index}`}\n                contentWidth={300}\n                title={keyNames[key]}\n              >\n                <View\n                  key={`index${index}`}\n                  style={{ width: 300, marginTop: 20 }}\n                >\n                  {values instanceof Array ? (\n                    values.map((value, i) => {\n                      let v = value[key];\n                      if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                      if (key === \"createdAt\")\n                        v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                      if (key === \"strength\") v = getStrength(v, \"both\");\n                      if (key === \"rank\") v = getRank(v, \"both\");\n\n                      return (\n                        <View\n                          key={`stat${key}-${i}`}\n                          style={{\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            marginBottom: 5,\n                          }}\n                        >\n                          <User\n                            navigation={navigation}\n                            user={value}\n                            size={40}\n                          />\n                          <View>\n                            <T key={`stat${key}-${i}`}>{v}</T>\n                          </View>\n                        </View>\n                      );\n                    })\n                  ) : (\n                    <T>{values}</T>\n                  )}\n                </View>\n              </Content>\n            );\n          })}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Status;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n        {me?.protectionAt > Date.now() ? (\n          <TouchableOpacity\n            onPress={() => {\n              //haalweg\n              fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ token: device.loginToken }),\n              })\n                .then((response) => response.json())\n                .then(async ({ response }) => {\n                  this.setState({ response });\n                  reloadMe(device.loginToken);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            <View>\n              <T>{getText(\"protectionInfo\", uur)}</T>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n\n        <Footer screenProps={screenProps} />\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={seconds}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 150, height: 110 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListHeaderComponent={renderHeader}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Original\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          // reloadMe(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import React, { Component } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass SuperMessage extends Component {\n  state = {\n    response: null,\n    message: null,\n  };\n  renderForm() {\n    const { me, device } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1, padding: 15 }}>\n        <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n\n        <TextInput\n          style={{ ...style(device.theme).textInput, height: 200 }}\n          placeholder={getText(\"message\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          multiline\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </ScrollView>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    return this.renderForm();\n  }\n}\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"landlord\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.landlordOwner ? (\n                    <T>{city.landlordOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.landlordOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"landlord\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <T>{city.landlordProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(0);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", { work: selected });\n    setResponse(response);\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {options.map((option, index) => {\n          return (\n            <TouchableOpacity\n              onPress={() => setSelected(index)}\n              key={`key${index}`}\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                paddingVertical: 10,\n                paddingHorizontal: 10,\n                borderRadius: 5,\n              }}\n            >\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <Checkbox active={selected === index} />\n                <T style={{ marginLeft: 10 }}>{option.title}</T>\n              </View>\n              <T>\n                {option.hours} {getText(\"hours\")}\n              </T>\n            </TouchableOpacity>\n          );\n        })}\n\n        <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n      </View>\n    </View>\n  );\n};\n\nexport default Work;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = { fetchMe, fetchCities, fetchStreetraces };\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n}\n\nexport default mySaga;\n","import { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\n\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  movements: Movement[],\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: false,\n  theme: DEFAULT_THEME,\n  isConnected: 2,\n  foregrounded: 0,\n  movements: [],\n  menu: {\n    left: [0, 1, 2, 3, 4, 5, 6],\n    right: [0, 1, 2, 3, 4, 5, 6],\n  },\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"MENU_SET_RIGHT_ACTIVE_SECTIONS\": {\n      return { ...state, menu: { left: state.menu.left, right: action.value } };\n    }\n    case \"MENU_SET_LEFT_ACTIVE_SECTIONS\": {\n      return {\n        ...state,\n        menu: { right: state.menu.right, left: action.value },\n      };\n    }\n\n    case \"SET_IS_CONNECTED\": {\n      return { ...state, isConnected: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN_AND_LOGIN\": {\n      return { ...initDevice, loginToken: action.value, logged: true };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      return action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\"device\", \"me\", \"streetraces\", \"cities\"],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as StoreReview from \"expo-store-review\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  AppState,\n  Dimensions,\n  Image,\n  Linking,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { AlertProvider } from \"./components/AlertProvider\";\nimport ConnectionProvider from \"./components/ConnectionProvider\";\nimport Dead from \"./components/Dead\";\nimport Fly from \"./components/Fly\";\nimport Header from \"./components/Header\";\nimport Hoverable from \"./components/Hoverable\";\nimport {\n  IntervalContext,\n  IntervalProvider,\n} from \"./components/IntervalProvider\";\nimport Jail from \"./components/Jail\";\n// import { loadReCaptcha } from \"react-recaptcha-v3\";\nimport LoginModal from \"./components/LoginModal\";\nimport T from \"./components/T\";\nimport { KeyboardAvoidingSpace } from \"./KeyboardAvoidingSpace\";\nimport { leftMenu, rightMenu } from \"./Menus\";\nimport Accomplice from \"./screens/Accomplice\";\nimport AdminEmail from \"./screens/AdminEmail\";\nimport AdminUserWatch from \"./screens/AdminUserWatch\";\nimport Airport from \"./screens/Airport\";\nimport AllBanks from \"./screens/AllBanks\";\nimport Backfire from \"./screens/Backfire\";\nimport Bank from \"./screens/Bank\";\nimport Bomb from \"./screens/Bomb\";\nimport Bulletfactory from \"./screens/Bulletfactory\";\nimport Bunker from \"./screens/Bunker\";\nimport Casino from \"./screens/Casino\";\nimport ChangeName from \"./screens/ChangeName\";\nimport ChangePassword from \"./screens/ChangePassword\";\nimport Channel from \"./screens/Channel\";\nimport Channels from \"./screens/Channels\";\nimport Chat from \"./screens/Chat\";\nimport Code from \"./screens/Code\";\nimport Contribute from \"./screens/Contribute\";\nimport CreateStreetrace from \"./screens/CreateStreetrace\";\nimport Crimes from \"./screens/Crimes\";\nimport Donate from \"./screens/Donate\";\nimport DownloadApp from \"./screens/DownloadApp\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Forum from \"./screens/Forum\";\nimport Gang from \"./screens/Gang\";\nimport GangAchievements from \"./screens/GangAchievements\";\nimport GangCreate from \"./screens/GangCreate\";\nimport GangOc from \"./screens/GangOc\";\nimport Gangs from \"./screens/Gangs\";\nimport GangSettings from \"./screens/GangSettings\";\nimport GangShop from \"./screens/GangShop\";\nimport Garage from \"./screens/Garage\";\nimport Gym from \"./screens/Gym\";\nimport Hackers from \"./screens/Hackers\";\nimport Hoeren from \"./screens/Hoeren\";\nimport Home from \"./screens/Home\";\nimport Hospital from \"./screens/Hospital\";\nimport Income from \"./screens/Income\";\nimport Info from \"./screens/Info\";\nimport InfoGame from \"./screens/InfoGame\";\nimport InfoRules from \"./screens/InfoRules\";\nimport JailScreen from \"./screens/Jail\";\nimport Junkies from \"./screens/Junkies\";\nimport Kill from \"./screens/Kill\";\nimport Login from \"./screens/Login\";\nimport ManageObject from \"./screens/ManageObject\";\nimport Market from \"./screens/Market\";\nimport Members from \"./screens/Members\";\nimport MollieComplete from \"./screens/MollieComplete\";\nimport MyObjects from \"./screens/MyObjects\";\nimport MyProfile from \"./screens/MyProfile\";\nimport OrganisedCrime from \"./screens/OrganisedCrime\";\nimport Poker from \"./screens/Poker\";\nimport Police from \"./screens/Police\";\nimport Privacy from \"./screens/Privacy\";\nimport Prizes from \"./screens/Prizes\";\nimport Profile from \"./screens/Profile\";\nimport Racecars from \"./screens/Racecars\";\nimport RecoverPassword from \"./screens/RecoverPassword\";\nimport Rob from \"./screens/Rob\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport SignupEmail from \"./screens/SignupEmail\";\nimport SignupEmail2 from \"./screens/SignupEmail2\";\nimport Stats from \"./screens/Stats\";\nimport Status from \"./screens/Status\";\nimport StealCar from \"./screens/StealCar\";\nimport Streetrace from \"./screens/Streetrace\";\nimport SwissBank from \"./screens/SwissBank\";\nimport Theme from \"./screens/Theme\";\nimport VerifyPhone from \"./screens/VerifyPhone\";\nimport VerifyPhoneCode from \"./screens/VerifyPhoneCode\";\nimport VIP from \"./screens/VIP\";\nimport Wiet from \"./screens/Wiet\";\nimport Work from \"./screens/Work\";\nimport { persistor, store } from \"./Store\";\nimport { darkerHex, doOnce, getTextFunction, lighterHex } from \"./Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nexport const renderMenu = (\n  item,\n  index,\n  navigation,\n  theme: Theme,\n  dispatch,\n  me\n) => {\n  const TheIcon = Icon[item.iconType];\n\n  const isCurrent = navigation.state.routeName === item.to;\n  const TouchOrView = item.isHeader ? View : TouchableOpacity;\n  const getText = getTextFunction(me?.locale);\n  return (\n    <TouchOrView\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <Hoverable onHoverIn={null} onHoverOut={null}>\n        {(isHovered) => (\n          <View\n            style={{\n              borderBottomWidth: 0,\n              padding: 3,\n              backgroundColor: item.isHeader\n                ? theme.primary\n                : darkerHex(theme.primary),\n              paddingLeft: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                minHeight: 25,\n                backgroundColor:\n                  isHovered || isCurrent\n                    ? lighterHex(theme.primary)\n                    : undefined,\n                borderRadius: isHovered || isCurrent ? 15 : undefined,\n              }}\n            >\n              <View style={{ width: 30, alignItems: \"center\" }}>\n                {TheIcon ? (\n                  <TheIcon\n                    name={item.icon}\n                    size={20}\n                    color={theme.secondaryText}\n                  />\n                ) : item.image ? (\n                  <Image\n                    source={{ uri: item.image }}\n                    style={{ width: 40, height: 40, borderRadius: 20 }}\n                  />\n                ) : null}\n              </View>\n              <Text\n                style={{\n                  marginLeft: 15,\n                  color: theme.primaryText,\n                  fontWeight: item.isHeader ? \"bold\" : undefined,\n                }}\n              >\n                {item.text}\n              </Text>\n              {item.isNew && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{getText(\"new\")}</T>\n                </View>\n              )}\n              {item.component}\n            </View>\n          </View>\n        )}\n      </Hoverable>\n    </TouchOrView>\n  );\n};\n\nconst Layout = ({ screenProps, navigation, children }) => {\n  const { me, device, dispatch, reloadMe } = screenProps;\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n\n  doOnce(() => {\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n\n      resetIntervalsForToken(token);\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n\n    Linking.addEventListener(\"url\", openWebUrl);\n    Linking.getInitialURL().then((url) => openWebUrl(url));\n  });\n\n  const openWebUrl = (url) => {\n    console.log(\"should open web url here\", url);\n  };\n\n  useEffect(() => {\n    reloadMe(device.loginToken);\n  }, [device.logged]);\n\n  const getText = getTextFunction(me?.locale);\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    //TODO: Fix dat hij naar chat redirect\n    // navigation.navigate(\"Channels\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      screenProps.dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (screenProps.device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          // console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Channels\",\n    \"Channel\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n    \"Market\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const renderForWeb = () => (\n    <Helmet>\n      <title>MasterCrimeZ - The Ultimate Game</title>\n      <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n      <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n      <meta property=\"og:description\" content={getText(\"metaOgDescription\")} />\n      <meta property=\"og:image\" content=\"\" />\n    </Helmet>\n  );\n\n  const renderLeftMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const renderRightMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  return (\n    <View style={{ flex: 1 }}>\n      <SafeAreaView\n        style={{\n          flexDirection: \"row\",\n          flex: 1,\n          backgroundColor: device.theme.primary,\n        }}\n      >\n        {Platform.OS === \"web\" && renderForWeb()}\n        {isSmallDevice ? null : renderLeftMenu()}\n\n        <View\n          style={{\n            height: Platform.OS === \"web\" ? height : undefined,\n            flex: 1,\n          }}\n        >\n          <Header navigation={navigation} device={device} me={me} />\n\n          {me?.reizenAt > Date.now() && !skip ? (\n            <Fly screenProps={screenProps} navigation={navigation} />\n          ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n            <Dead screenProps={screenProps} navigation={navigation} />\n          ) : me?.jailAt > Date.now() && !skip ? (\n            <Jail screenProps={screenProps} navigation={navigation} />\n          ) : (\n            <View style={{ flex: 1 }}>{children}</View>\n          )}\n          {Platform.OS === \"ios\" && <KeyboardAvoidingSpace />}\n        </View>\n\n        {isSmallDevice ? null : renderRightMenu()}\n      </SafeAreaView>\n\n      {!device.logged && (\n        <LoginModal navigation={navigation} screenProps={screenProps} />\n      )}\n    </View>\n  );\n};\nexport const withLayout = (Component) => (props) => (\n  <Layout {...props}>\n    <Component {...props} />\n  </Layout>\n);\n\nconst CustomDrawerContentComponent = (props) => {\n  const {\n    navigation,\n    screenProps: { me, device, dispatch },\n  } = props;\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  return (\n    <ScrollView>\n      <SafeAreaView\n        style={{ flex: 1, backgroundColor: device.theme.primary }}\n        forceInset={{ top: \"always\", horizontal: \"never\" }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\n\nconst rightContainer =\n  Platform.OS === \"web\" ? createBrowserApp : createAppContainer;\nconst rightNavigator =\n  Platform.OS === \"web\"\n    ? isSmallDevice\n      ? createDrawerNavigator\n      : createSwitchNavigator\n    : createStackNavigator;\n\nconst Container = rightContainer(\n  rightNavigator(\n    {\n      Home: {\n        screen: withLayout(Home),\n        path: \"\",\n      },\n\n      GangCreate: withLayout(GangCreate),\n\n      Gang: {\n        screen: withLayout(Gang),\n        path: \"Gang/:name\",\n      },\n\n      Gangs: withLayout(Gangs),\n      GangShop: withLayout(GangShop),\n      GangSettings: withLayout(GangSettings),\n      GangAchievements: withLayout(GangAchievements),\n      GangOc: withLayout(GangOc),\n\n      Status: withLayout(Status),\n      Hackers: withLayout(Hackers),\n      Police: withLayout(Police),\n      StealCar: withLayout(StealCar),\n      CreateStreetrace: withLayout(CreateStreetrace),\n      Channels: withLayout(Channels),\n      Channel: withLayout(Channel),\n      AllBanks: withLayout(AllBanks),\n      Poker: withLayout(Poker),\n      Bomb: withLayout(Bomb),\n      SwissBank: withLayout(SwissBank),\n\n      Crimes: withLayout(Crimes),\n      Jail: withLayout(JailScreen),\n      Kill: withLayout(Kill),\n      Rob: withLayout(Rob),\n      // Showroom: withLayout(Showroom),\n      Bank: withLayout(Bank),\n      Shop: withLayout(Shop),\n      Garage: withLayout(Garage),\n      ManageObject: withLayout(ManageObject),\n      MyObjects: withLayout(MyObjects),\n      Racecars: withLayout(Racecars),\n      Backfire: withLayout(Backfire),\n      Accomplice: withLayout(Accomplice),\n      Streetrace: withLayout(Streetrace),\n      Bulletfactory: withLayout(Bulletfactory),\n      Casino: withLayout(Casino),\n      Airport: withLayout(Airport),\n      Members: withLayout(Members),\n      Stats: withLayout(Stats),\n      Chat: withLayout(Chat),\n      Gym: withLayout(Gym),\n      Wiet: withLayout(Wiet),\n      MollieComplete: withLayout(MollieComplete),\n      OrganisedCrime: withLayout(OrganisedCrime),\n      Junkies: withLayout(Junkies),\n      Hoeren: withLayout(Hoeren),\n      Bunker: withLayout(Bunker),\n      Donate: withLayout(Donate),\n      Hospital: withLayout(Hospital),\n      Income: withLayout(Income),\n      AdminEmail: withLayout(AdminEmail),\n      AdminUserWatch: withLayout(AdminUserWatch),\n      Forum: withLayout(Forum),\n      Theme: withLayout(Theme),\n      DownloadApp: DownloadApp,\n      VIP: withLayout(VIP),\n      Market: withLayout(Market),\n      Profile: {\n        screen: withLayout(Profile),\n        path: \"Profile/:name\",\n      },\n\n      //SETTINGS\n      Settings: withLayout(Settings),\n      SignupEmail: withLayout(SignupEmail),\n\n      SignupEmail2: {\n        screen: withLayout(SignupEmail2),\n        path: \"SignupEmail2/:token\",\n      },\n\n      ChangeName: withLayout(ChangeName),\n      VerifyPhoneCode: withLayout(VerifyPhoneCode),\n      ForgotPassword: withLayout(ForgotPassword),\n      RecoverPassword: {\n        screen: withLayout(RecoverPassword),\n        path: \"RecoverPassword/:token\",\n      },\n\n      Code: {\n        screen: withLayout(Code),\n        path: \"Code/:code\",\n      },\n      Case: {\n        screen: withLayout(Code),\n        path: \"Case/:code\",\n      },\n      Car: {\n        screen: withLayout(Code),\n        path: \"Car/:code\",\n      },\n\n      ChangePassword: {\n        screen: withLayout(ChangePassword),\n      },\n      VerifyPhone: withLayout(VerifyPhone),\n      MyProfile: withLayout(MyProfile),\n      Login: withLayout(Login),\n      Work: withLayout(Work),\n\n      //INFO\n      Info: withLayout(Info),\n      InfoGame: withLayout(InfoGame),\n      InfoRules: withLayout(InfoRules),\n      Privacy: withLayout(Privacy),\n      Contribute: withLayout(Contribute),\n      Prizes: withLayout(Prizes),\n    },\n    {\n      drawerPosition: \"right\",\n      edgeWidth: Platform.OS === \"web\" && isSmallDevice ? 0 : undefined,\n      contentComponent: CustomDrawerContentComponent,\n      unmountInactiveRoutes: true,\n      navigationOptions: {\n        drawerLockMode: \"locked-open\",\n      },\n      defaultNavigationOptions: {\n        headerShown: false,\n      },\n    }\n  ),\n  {\n    history: \"hash\",\n  }\n);\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nconst _RootContainer = (props) => {\n  // NB: we got screenProps here , but not navigation\n  // if you also need navigation, use withLayout/Layout\n  return (\n    <AlertProvider>\n      <IntervalProvider screenProps={{ ...props }}>\n        <ActionSheetProvider>\n          <ConnectionProvider>\n            <Container screenProps={{ ...props }} />\n          </ConnectionProvider>\n        </ActionSheetProvider>\n      </IntervalProvider>\n    </AlertProvider>\n  );\n};\n\nconst mapStateToProps = ({ device, me, streetraces, cities }) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, cities };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) => {\n    //console.log(\"reloadMe with loginToken\", loginToken);\n    dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } });\n  },\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nconst App = () => {\n  return (\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <RootContainer />\n      </Provider>\n    </PersistGate>\n  );\n};\nexport default App;\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo5.8e72dd72.jpg\";","var map = {\n\t\"./af\": 327,\n\t\"./af.js\": 327,\n\t\"./ar\": 328,\n\t\"./ar-dz\": 329,\n\t\"./ar-dz.js\": 329,\n\t\"./ar-kw\": 330,\n\t\"./ar-kw.js\": 330,\n\t\"./ar-ly\": 331,\n\t\"./ar-ly.js\": 331,\n\t\"./ar-ma\": 332,\n\t\"./ar-ma.js\": 332,\n\t\"./ar-sa\": 333,\n\t\"./ar-sa.js\": 333,\n\t\"./ar-tn\": 334,\n\t\"./ar-tn.js\": 334,\n\t\"./ar.js\": 328,\n\t\"./az\": 335,\n\t\"./az.js\": 335,\n\t\"./be\": 336,\n\t\"./be.js\": 336,\n\t\"./bg\": 337,\n\t\"./bg.js\": 337,\n\t\"./bm\": 338,\n\t\"./bm.js\": 338,\n\t\"./bn\": 339,\n\t\"./bn.js\": 339,\n\t\"./bo\": 340,\n\t\"./bo.js\": 340,\n\t\"./br\": 341,\n\t\"./br.js\": 341,\n\t\"./bs\": 342,\n\t\"./bs.js\": 342,\n\t\"./ca\": 343,\n\t\"./ca.js\": 343,\n\t\"./cs\": 344,\n\t\"./cs.js\": 344,\n\t\"./cv\": 345,\n\t\"./cv.js\": 345,\n\t\"./cy\": 346,\n\t\"./cy.js\": 346,\n\t\"./da\": 347,\n\t\"./da.js\": 347,\n\t\"./de\": 348,\n\t\"./de-at\": 349,\n\t\"./de-at.js\": 349,\n\t\"./de-ch\": 350,\n\t\"./de-ch.js\": 350,\n\t\"./de.js\": 348,\n\t\"./dv\": 351,\n\t\"./dv.js\": 351,\n\t\"./el\": 352,\n\t\"./el.js\": 352,\n\t\"./en-au\": 353,\n\t\"./en-au.js\": 353,\n\t\"./en-ca\": 354,\n\t\"./en-ca.js\": 354,\n\t\"./en-gb\": 355,\n\t\"./en-gb.js\": 355,\n\t\"./en-ie\": 356,\n\t\"./en-ie.js\": 356,\n\t\"./en-il\": 357,\n\t\"./en-il.js\": 357,\n\t\"./en-in\": 358,\n\t\"./en-in.js\": 358,\n\t\"./en-nz\": 359,\n\t\"./en-nz.js\": 359,\n\t\"./en-sg\": 360,\n\t\"./en-sg.js\": 360,\n\t\"./eo\": 361,\n\t\"./eo.js\": 361,\n\t\"./es\": 362,\n\t\"./es-do\": 363,\n\t\"./es-do.js\": 363,\n\t\"./es-us\": 364,\n\t\"./es-us.js\": 364,\n\t\"./es.js\": 362,\n\t\"./et\": 365,\n\t\"./et.js\": 365,\n\t\"./eu\": 366,\n\t\"./eu.js\": 366,\n\t\"./fa\": 367,\n\t\"./fa.js\": 367,\n\t\"./fi\": 368,\n\t\"./fi.js\": 368,\n\t\"./fil\": 369,\n\t\"./fil.js\": 369,\n\t\"./fo\": 370,\n\t\"./fo.js\": 370,\n\t\"./fr\": 371,\n\t\"./fr-ca\": 372,\n\t\"./fr-ca.js\": 372,\n\t\"./fr-ch\": 373,\n\t\"./fr-ch.js\": 373,\n\t\"./fr.js\": 371,\n\t\"./fy\": 374,\n\t\"./fy.js\": 374,\n\t\"./ga\": 375,\n\t\"./ga.js\": 375,\n\t\"./gd\": 376,\n\t\"./gd.js\": 376,\n\t\"./gl\": 377,\n\t\"./gl.js\": 377,\n\t\"./gom-deva\": 378,\n\t\"./gom-deva.js\": 378,\n\t\"./gom-latn\": 379,\n\t\"./gom-latn.js\": 379,\n\t\"./gu\": 380,\n\t\"./gu.js\": 380,\n\t\"./he\": 381,\n\t\"./he.js\": 381,\n\t\"./hi\": 382,\n\t\"./hi.js\": 382,\n\t\"./hr\": 383,\n\t\"./hr.js\": 383,\n\t\"./hu\": 384,\n\t\"./hu.js\": 384,\n\t\"./hy-am\": 385,\n\t\"./hy-am.js\": 385,\n\t\"./id\": 386,\n\t\"./id.js\": 386,\n\t\"./is\": 387,\n\t\"./is.js\": 387,\n\t\"./it\": 388,\n\t\"./it-ch\": 389,\n\t\"./it-ch.js\": 389,\n\t\"./it.js\": 388,\n\t\"./ja\": 390,\n\t\"./ja.js\": 390,\n\t\"./jv\": 391,\n\t\"./jv.js\": 391,\n\t\"./ka\": 392,\n\t\"./ka.js\": 392,\n\t\"./kk\": 393,\n\t\"./kk.js\": 393,\n\t\"./km\": 394,\n\t\"./km.js\": 394,\n\t\"./kn\": 395,\n\t\"./kn.js\": 395,\n\t\"./ko\": 396,\n\t\"./ko.js\": 396,\n\t\"./ku\": 397,\n\t\"./ku.js\": 397,\n\t\"./ky\": 398,\n\t\"./ky.js\": 398,\n\t\"./lb\": 399,\n\t\"./lb.js\": 399,\n\t\"./lo\": 400,\n\t\"./lo.js\": 400,\n\t\"./lt\": 401,\n\t\"./lt.js\": 401,\n\t\"./lv\": 402,\n\t\"./lv.js\": 402,\n\t\"./me\": 403,\n\t\"./me.js\": 403,\n\t\"./mi\": 404,\n\t\"./mi.js\": 404,\n\t\"./mk\": 405,\n\t\"./mk.js\": 405,\n\t\"./ml\": 406,\n\t\"./ml.js\": 406,\n\t\"./mn\": 407,\n\t\"./mn.js\": 407,\n\t\"./mr\": 408,\n\t\"./mr.js\": 408,\n\t\"./ms\": 409,\n\t\"./ms-my\": 410,\n\t\"./ms-my.js\": 410,\n\t\"./ms.js\": 409,\n\t\"./mt\": 411,\n\t\"./mt.js\": 411,\n\t\"./my\": 412,\n\t\"./my.js\": 412,\n\t\"./nb\": 413,\n\t\"./nb.js\": 413,\n\t\"./ne\": 414,\n\t\"./ne.js\": 414,\n\t\"./nl\": 415,\n\t\"./nl-be\": 416,\n\t\"./nl-be.js\": 416,\n\t\"./nl.js\": 415,\n\t\"./nn\": 417,\n\t\"./nn.js\": 417,\n\t\"./oc-lnc\": 418,\n\t\"./oc-lnc.js\": 418,\n\t\"./pa-in\": 419,\n\t\"./pa-in.js\": 419,\n\t\"./pl\": 420,\n\t\"./pl.js\": 420,\n\t\"./pt\": 421,\n\t\"./pt-br\": 422,\n\t\"./pt-br.js\": 422,\n\t\"./pt.js\": 421,\n\t\"./ro\": 423,\n\t\"./ro.js\": 423,\n\t\"./ru\": 424,\n\t\"./ru.js\": 424,\n\t\"./sd\": 425,\n\t\"./sd.js\": 425,\n\t\"./se\": 426,\n\t\"./se.js\": 426,\n\t\"./si\": 427,\n\t\"./si.js\": 427,\n\t\"./sk\": 428,\n\t\"./sk.js\": 428,\n\t\"./sl\": 429,\n\t\"./sl.js\": 429,\n\t\"./sq\": 430,\n\t\"./sq.js\": 430,\n\t\"./sr\": 431,\n\t\"./sr-cyrl\": 432,\n\t\"./sr-cyrl.js\": 432,\n\t\"./sr.js\": 431,\n\t\"./ss\": 433,\n\t\"./ss.js\": 433,\n\t\"./sv\": 434,\n\t\"./sv.js\": 434,\n\t\"./sw\": 435,\n\t\"./sw.js\": 435,\n\t\"./ta\": 436,\n\t\"./ta.js\": 436,\n\t\"./te\": 437,\n\t\"./te.js\": 437,\n\t\"./tet\": 438,\n\t\"./tet.js\": 438,\n\t\"./tg\": 439,\n\t\"./tg.js\": 439,\n\t\"./th\": 440,\n\t\"./th.js\": 440,\n\t\"./tk\": 441,\n\t\"./tk.js\": 441,\n\t\"./tl-ph\": 442,\n\t\"./tl-ph.js\": 442,\n\t\"./tlh\": 443,\n\t\"./tlh.js\": 443,\n\t\"./tr\": 444,\n\t\"./tr.js\": 444,\n\t\"./tzl\": 445,\n\t\"./tzl.js\": 445,\n\t\"./tzm\": 446,\n\t\"./tzm-latn\": 447,\n\t\"./tzm-latn.js\": 447,\n\t\"./tzm.js\": 446,\n\t\"./ug-cn\": 448,\n\t\"./ug-cn.js\": 448,\n\t\"./uk\": 449,\n\t\"./uk.js\": 449,\n\t\"./ur\": 450,\n\t\"./ur.js\": 450,\n\t\"./uz\": 451,\n\t\"./uz-latn\": 452,\n\t\"./uz-latn.js\": 452,\n\t\"./uz.js\": 451,\n\t\"./vi\": 453,\n\t\"./vi.js\": 453,\n\t\"./x-pseudo\": 454,\n\t\"./x-pseudo.js\": 454,\n\t\"./yo\": 455,\n\t\"./yo.js\": 455,\n\t\"./zh-cn\": 456,\n\t\"./zh-cn.js\": 456,\n\t\"./zh-hk\": 457,\n\t\"./zh-hk.js\": 457,\n\t\"./zh-mo\": 458,\n\t\"./zh-mo.js\": 458,\n\t\"./zh-tw\": 459,\n\t\"./zh-tw.js\": 459\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 705;","module.exports = __webpack_public_path__ + \"static/media/bombarderen.3d0c7534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.75e0546a.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.d7c133b0.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.ada3efe7.png\";","module.exports = __webpack_public_path__ + \"static/media/item1.a5e891d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item2.e86438ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item3.27b6a03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item4.b980bfe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item5.1da86cb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item6.935530e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item7.bf00b038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item8.e50cc6c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item9.44698ead.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item10.2cf60cef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item11.d162fbe5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item12.0bcfb4c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hacker.010dc613.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}