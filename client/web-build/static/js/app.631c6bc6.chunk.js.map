{"version":3,"sources":["src/Constants.js","src/Util.js","src/components/Button.js","src/components/Dead.js","src/components/Fly.js","src/components/Chat.js","src/components/Header.js","src/updateHook.js","src/components/T.js","src/components/Jail.js","src/KeyboardAvoidingSpace.js","src/Menus.js","src/Style.js","src/screens/Accomplice.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Airport.js","src/components/Tabs.js","src/screens/Bank.js","src/screens/Donate.js","src/components/Captcha.js","src/screens/Income.js","src/screens/SwissBank.js","src/screens/AllBanks.js","src/screens/Backfire.js","src/screens/Bomb.js","src/screens/Bulletfactory.js","src/screens/Bunker.js","src/screens/Casino.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/screens/Channel.js","src/components/Separator.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateStreetrace.js","src/components/Footer.js","src/screens/Crimes.js","src/screens/DownloadApp.js","src/screens/ForgotPassword.js","src/screens/Forum.js","src/screens/Garage.js","src/screens/Gym.js","src/screens/Hackers.js","src/screens/Hoeren.js","src/screens/Home.js","src/screens/Hospital.js","src/components/Menu.js","src/screens/Info.js","src/components/H1.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/ManageObject.js","src/screens/Members.js","src/screens/Messages.js","src/screens/MollieComplete.js","src/screens/MyObjects.js","src/screens/MyProfile.js","src/screens/OrganisedCrime.js","src/screens/Poker.js","src/screens/Police.js","src/screens/Privacy.js","src/screens/Prizes.js","src/screens/Profile.js","src/screens/Racecars.js","src/screens/RecoverPassword.js","src/screens/Rob.js","src/screens/Settings.js","src/screens/Shop.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/Stats.js","src/screens/Status.js","src/screens/StealCar.js","src/screens/Streetrace.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/Wiet.js","src/components/Checkbox.js","src/screens/Work.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","assets/dood.jpg","assets/logo.jpg","assets/bombarderen.jpg","assets/whatsapp.png","assets/instagram.png","assets/spotify.png","assets/youtube.png","node_modules/moment/locale sync /^/.//.*$","assets/hacker.jpeg","assets/politie.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","get","post","getUserColor","item","theme","level","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","length","prevExp","nowRank","diff","progress","percentage","Math","round","getRank","getStrength","isSmall","Dimensions","width","Button","this","props","icon","font","title","onPress","disabled","style","TheIcon","Icon","View","TouchableOpacity","flexDirection","backgroundColor","secondary","padding","justifyContent","paddingHorizontal","marginRight","name","color","secondaryText","size","textAlign","React","Component","Dead","state","selected","screenProps","me","device","reloadMe","getText","navigation","locale","reizenAt","Date","flex","alignItems","Image","source","height","Text","token","loginToken","option","setState","Fly","sec","city","until","onFinish","timeToShow","timeLabels","m","s","Chat","chat","input","map","fontWeight","message","getChat","allText","Platform","select","web","default","borderWidth","borderColor","numberOfLines","navigate","fontSize","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","TextInput","value","placeholder","onChangeText","onSubmitEditing","text","nativeEvent","OS","location","reload","isSmallDevice","Header","updateAvailable","useState","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","useExpoUpdate","textStyle","marginBottom","notActivated","phoneVerified","numActions","borderRadius","marginTop","updateComponent","reloadAsync","webHeader","manifest","version","toggleDrawer","margin","Feather","statsHeader","flexWrap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","cash","bank","bullets","gamepoints","health","position","strength","chats","AntDesign","backButton","routeName","hitSlop","top","left","right","bottom","goBack","T","children","bold","useSelector","Jail","jail","renderItem","seconds","floor","jailAt","marginLeft","digitStyle","digitTxtStyle","buyOut","fetchMembers","interval","setInterval","log","clearInterval","order","marginVertical","FlatList","data","ListHeaderComponent","renderHeader","KeyboardAvoidingSpace","keyboardWillShow","e","StatusBar","currentHeight","onKeyboardWillShow","toValue","endCoordinates","offset","dim","isIPhoneXSize","isIPhoneXrSize","isIphoneX","Animated","timing","easing","Easing","ease","useNativeDriver","start","keyboardWillHide","onKeyboardWillHide","Value","bindListeners","unbindListeners","keyboardWillShowListener","Keyboard","addListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","remove","leftMenu","stealcarSeconds","ceil","autostelenAt","crimeSeconds","crimeAt","bunkerSeconds","bunkerAt","attackSeconds","attackAt","robSeconds","robAt","ocSeconds","ocAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","workSeconds","workAt","isHeader","iconType","to","component","rightMenu","params","isStats","online","gameMod","admin","adminMenu","StyleSheet","create","textInput","container","Accomplice","accomplice","accomplice1","setAccomplice1","accomplice2","setAccomplice2","accomplice3","setAccomplice3","accomplice4","setAccomplice4","setResponse","submit","acc","alert","url","ScrollView","maxWidth","onFocus","Clipboard","setString","accomplices","placeholderTextColor","secondaryTextSoft","styles","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","id","setId","user","setUser","actions","setActions","movements","setMovements","getActions","ip","previous","Airport","renderFooter","openActionSheet","options","showActionSheetWithOptions","buttonIndex","connectActionSheet","Tabs","tabs","tab","isActive","borderRightWidth","borderRightColor","Bank","deposit","amount","row","keyValue","String","Donate","keys","names","wiet","junkies","hoeren","Captcha","onChangeCaptcha","captcha","random","onChangeRandom","uri","needCaptcha","MaterialCommunityIcons","Income","incomeAt","uren","uren2","sqrt","SwissBank","cities","reloadCities","becomeOwnerResponse","setBecomeOwnerResponse","setAmount","setType","becomeOwner","find","swissBank","swissBullets","bankOwner","bankProfit","paddingVertical","borderBottomWidth","borderBottomColor","Entypo","AllBanks","setTab","MyProfile","backfire","bf","Bomb","useActionSheet","bombs","setBombs","setCaptcha","setRandom","typeStrings","bulletFactory","casino","landlord","weaponShop","rld","airport","estateAgent","garage","airplane","Object","push","cancelButtonIndex","destructiveButtonIndex","Bulletfactory","setBullets","bulletFactoryOwner","bulletFactoryPrice","bulletFactoryProfit","bulletFactoryDamage","Bunker","price","minHeight","keyExtractor","extraData","ListFooterComponent","Casino","casinoOwner","casinoProfit","ChangeName","setName","ChangePassword","password1","password2","success","password","md5","str_md5","responseJson","minWidth","secureTextEntry","login","ImageInput","hasEdited","getPermissionAsync","Permissions","status","_pickImage","loading","ImagePicker","mediaTypes","All","allowsEditing","aspect","base64","result","cancelled","ImageManipulator","resize","format","PNG","manipulated","manipulatedBase64","onChange","SIZE","small","ActivityIndicator","Ionicons","isBigDevice","ChatScreen","fetchChat","isFetching","scrollToEnd","setTimeout","flatList","animated","onRefresh","isMe","avatar","username","thumbnail","IMAGE_SIZE","marginHorizontal","isSystem","image","resizeMode","send","cid","STYLE","members","subid","SafeAreaView","contentContainerStyle","refreshControl","refreshing","ref","Separator","fetchChannelsubs","channelsubs","channel","unread","userId","lastmessage","ItemSeparatorComponent","Linking","openURL","CreateStreetrace","reloadStreetraces","setLoading","racecars","setRacecars","numParticipants","setNumParticipants","setPrice","car","setCar","cars","TabInput","auto","racecar","power","carId","Footer","setText","facebookShareUrl","copy","getFullYear","Crimes","kans","kans2","getMobileOperatingSystem","userAgent","navigator","vendor","window","opera","test","MSStream","DownloadApp","Login","email","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","multiline","moment","updatedAt","responses","createdAt","renderNew","renderTopics","Garage","fetchGroups","carGroups","reduce","current","bulkAction","action","upgradeCar","renderGroup","alignSelf","kogels","focusListener","view","filter","numColumns","Gym","Hoeren","renderCities","rldOwner","rldProfit","number","itemWidth","amountOfItems","Home","activeSlide","notificationsHeader","_handleAppStateChange","nextAppState","turnOnNotifications","sendLanguage","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","language","ExpoConstants","isDevice","existingStatus","finalStatus","pushtoken","Notifications","_renderItem","dispatch","menu","movement","locationX","locationY","timestamp","AppState","addEventListener","removeEventListener","filtered","IntentLauncher","c","_carousel","slice","sliderWidth","onSnapToItem","dotsLength","activeDotIndex","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","document","onmousemove","event","clientX","clientY","renderCarousel","Hospital","heal","Menu","IconFont","StoreReview","H1","PrivacyPage","components","en","nl","strings","jailOwner","jailProfit","ListEmptyComponent","Junkies","junkiesOwner","junkiesProfit","Kill","kill","textDecorationLine","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","profitKey","priceKey","ownerKey","damageKey","orders","Members","orderKey","orderBy","isOnline","onlineAt","secondKey","o","primary","searchedMembers","toLowerCase","includes","fetchReadMessage","deleteMessage","getMessages","readMessage","fromName","read","renderMessages","MollieComplete","properties","MyObjects","p","property","propertyString","photo","images","selectedImage","fetchImages","handleUploadPhoto","handleChoosePhoto","quality","bio","Wiet","Poker","poker","Config","onLinkPress","link","Prizes","ProfileScreen","profile","getProfile","prevProps","points","total","hasImage","Racecars","fetchGarage","sellCar","crushCar","RecoverPassword","rob","__DEV__","Shop","fetchCities","fetchShop","propertyKey","renderMenu","t","buy","next","respones","activate","activationToken","keyNames","newMembers","onlineToday","stats","fetchStats","stat","values","Array","i","v","uur","protectionAt","StealCar","typeStart","finished","Streetrace","streetraces","RefreshControl","creator","streetraceParticipants","streetraceId","leave","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","phone","save","code","popToTop","Creditshop","items","setItems","credits","kooptext","kosten","Mollie","SuperMessage","VIP","landlordOwner","landlordProfit","Checkbox","active","Work","hours","setSelected","work","Api","fetchMe","payload","fetchStreetraces","mySaga","call","put","takeLatest","initDevice","logged","foregrounded","config","storage","AsyncStorage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","concat","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","isHeaderStyle","borderTopWidth","borderLeftWidth","borderLeftColor","borderTopColor","renderDrawerMenu","Layout","_handleNotificationResponse","notification","request","content","handleChange","available","ExpoNotifications","skip","Helmet","withLayout","Container","createBrowserApp","createAppContainer","createDrawerNavigator","createSwitchNavigator","createStackNavigator","screen","path","Hackers","Police","Channels","Channel","JailScreen","Rob","Backfire","Stats","OrganisedCrime","AdminEmail","Forum","Theme","Profile","Settings","SignupEmail","SignupEmail2","VerifyPhoneCode","ForgotPassword","VerifyPhone","Info","InfoGame","InfoRules","Privacy","Contribute","drawerPosition","edgeWidth","contentComponent","forceInset","horizontal","unmountInactiveRoutes","navigationOptions","drawerLockMode","defaultNavigationOptions","headerShown","history","makeid","characters","charactersLength","charAt","_RootContainer","openWebUrl","sendMovements","getInitialURL","RootContainer","connect","App","serviceWorker","register","scope","info","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","Error","resolve"],"mappings":"iYAaeA,EATG,CAChBC,YALiB,2BAMjBC,QAAS,2CACTC,YACE,2FACFC,gBACE,gF,yBCFEC,G,OAAa,SAACC,EAAQC,EAAQC,GAAjB,OACjBF,EAAOG,MAAMF,GAAQG,KAAKF,KAEfG,EAAY,SAACC,GAGxB,MAAqB,QAFHA,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,IAExC,KAAO,MAExBI,EAAkB,SAACD,GAAD,OAAgB,SAACE,GAC9C,IAAMC,EAAYH,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGhEO,EAAiBC,EAAQ,KAEX,OAAdF,IACFC,EAAiBC,EAAQ,MAPoC,IAU/D,IAAIX,EACFU,EAAeF,IAAf,sBACsBA,EADtB,iBAC0CF,EAD1C,IAX6D,mBAATM,EAAS,iCAATA,EAAS,kBAkB/D,OAJAA,EAAKC,SAAQ,SAACC,EAAKC,GACjBf,EAASD,EAAWC,EAAD,KAAae,EAAQ,GAAKD,MAGxCd,IAGIgB,EAAe,SAACC,GAC3B,aAAOA,OAAP,EAAOA,EAAGC,WAAWC,QAAQ,wBAAyB,MAuDjD,IAiBMC,EAAS,SAACC,EAAIC,GACzBC,qBAAU,WAER,OADAF,IACA,MAAOC,OAAP,EAAOA,MACN,KAEQE,EAAU,SAACC,EAAUC,EAAQC,GACxC,OAAOC,MAASlC,EAAUC,YAAd,IAA6B8B,EAAY,CACnDC,SACAG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAiB,SAAXD,EAAoBK,KAAKC,UAAUL,QAAQM,IAEhDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,yEACGH,GADH,+DAGLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIPE,EAAM,SAACjB,GAAD,OAAcD,EAAQC,EAAU,QACtCkB,EAAO,SAAClB,EAAUE,GAAX,OAAoBH,EAAQC,EAAU,OAAQE,IAqBrDiB,EAAe,SAACC,EAAMC,GAAP,OAC1BD,EAAKE,MAAQ,EACT,OACAF,EAAKG,cAAgB,IACrB,MACAH,EAAKG,cAAgB,IACrB,SACAF,EAAMG,aAENC,EAAQ,CACZ,CACEC,KAAM,SACNC,IAAK,IAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,EAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,kBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAIHE,GAAe,SAACH,EAAMI,EAAYC,GACtC,IAAMC,EAAMD,EAAKE,WAAU,SAACC,GAAD,OAAOR,EAAOQ,EAAEP,OACrCQ,EAAOH,EAAM,EAEbI,EAASL,EAAKC,GAAOD,EAAKC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","file":"static/js/app.631c6bc6.chunk.js","sourcesContent":["const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://192.168.1.38:4001\";\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\",\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport { useEffect } from \"react\";\nimport { Alert, Dimensions, Platform, ScaledSize } from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport const getUserColor = (item, theme) =>\n  item.level > 1\n    ? \"blue\"\n    : item.creditsTotal >= 10000\n    ? \"red\"\n    : item.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass Button extends React.Component {\n  render() {\n    const { icon, font, title, onPress, disabled, style, theme } = this.props;\n\n    const TheIcon = font && icon ? Icon[font] : View;\n\n    return (\n      <TouchableOpacity onPress={disabled ? undefined : onPress}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            backgroundColor: disabled\n              ? `${theme.secondary}55`\n              : theme.secondary,\n            padding: 10,\n            justifyContent: \"center\",\n            paddingHorizontal: isSmall ? 5 : 20,\n            // borderRadius: 20,\n            ...style,\n          }}\n        >\n          {font && icon ? (\n            <View style={{ marginRight: 20 }}>\n              <TheIcon name={icon} color={theme.secondaryText} size={20} />\n            </View>\n          ) : null}\n\n          {title && (\n            <Text style={{ textAlign: \"center\", color: theme.secondaryText }}>\n              {title}\n            </Text>\n          )}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default Button;\n","import React from \"react\";\nimport { Image, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View>\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            theme={device.theme}\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Dead;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getTextFunction } from \"../Util\";\n\nclass Fly extends React.Component {\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"flyYoureTravelingTo\", me?.city)}\n        </Text>\n        <CountDown\n          until={sec}\n          onFinish={() => {\n            reloadMe(device.loginToken);\n          }}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Fly;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  chat = () => {\n    const { chat } = this.state;\n    return chat.map((item, index) => (\n      <Text key={`item${index}`}>\n        <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n        {item.message}&nbsp;&nbsp;\n      </Text>\n    ));\n  };\n  render() {\n    const { device, navigation, me } = this.props;\n\n    const { chat, input } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const allText = chat\n      .map((item) => `${item.name}${item.message}`)\n      .join(\"::::\");\n    return (\n      <View style={{ height: Platform.select({ web: 50, default: 100 }) }}>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#444\",\n            borderWidth: 1,\n            borderColor: \"black\",\n            flexDirection: Platform.select({ web: \"row\", default: undefined }),\n          }}\n        >\n          {Platform.select({\n            web: (\n              <View style={{ flex: 1, justifyContent: \"center\" }}>\n                {allText ? (\n                  <Ticker>\n                    {({ index }) => {\n                      return (\n                        <>\n                          {chat.map((item, index) => (\n                            <Text\n                              style={{ color: \"white\" }}\n                              numberOfLines={1}\n                              key={`item${index}`}\n                            >\n                              <TouchableOpacity\n                                onPress={() => {\n                                  navigation.navigate(\"Profile\", {\n                                    name: item.name,\n                                  });\n                                }}\n                              >\n                                <Text style={{ fontWeight: \"bold\" }}>\n                                  {item.name}\n                                </Text>\n                              </TouchableOpacity>\n                              :&nbsp;{item.message}&nbsp;&nbsp;\n                            </Text>\n                          ))}\n                        </>\n                      );\n                    }}\n                  </Ticker>\n                ) : null}\n              </View>\n            ),\n\n            default: (\n              <MarqueeText\n                style={{ fontSize: 20 }}\n                duration={allText.length * 50}\n                marqueeOnStart\n                loop\n                marqueeDelay={200}\n                marqueeResetDelay={1000}\n              >\n                <>\n                  {chat.map((item, index) => (\n                    <Fragment key={`item${index}`}>\n                      <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                      :&nbsp;{item.message}&nbsp;&nbsp;\n                    </Fragment>\n                  ))}\n                </>\n              </MarqueeText>\n            ),\n          })}\n          <View style={{ width: 100, height: 30 }}>\n            <TextInput\n              value={input}\n              placeholder={getText(\"chatYourMessage\")}\n              style={{\n                backgroundColor: \"#404040\",\n                fontSize: 20,\n                color: \"white\",\n                flex: 1,\n                width: 100,\n              }}\n              onChangeText={(input) => this.setState({ input })}\n              onSubmitEditing={({ nativeEvent: { text } }) => {\n                fetch(`${Constants.SERVER_ADDR}/chat`, {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    token: device.loginToken,\n                    message: text,\n                  }),\n                })\n                  .then((response) => response.json())\n                  .then((chat) => {\n                    this.getChat();\n\n                    if (Platform.OS === \"web\") {\n                      location.reload();\n                    }\n\n                    this.setState({ input: \"\" });\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Chat from \"../components/Chat\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nconst isSmallDevice = width < 800;\n\nfunction Header({ navigation, device, me }) {\n  const getText = getTextFunction(me?.locale);\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: device.theme.secondaryText,\n  };\n\n  const notActivated = me?.phoneVerified === false && me?.numActions >= 20 && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          theme={device.theme}\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          theme={device.theme}\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const webHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <View>\n          <Image\n            source={require(\"../../assets/logo.jpg\")}\n            style={{\n              width: isSmallDevice ? 200 : 600,\n              height: isSmallDevice ? 33 : 100,\n            }}\n          />\n        </View>\n        <Text style={{ color: \"white\" }}>v{Constants.manifest.version}</Text>\n\n        {isSmallDevice ? (\n          <TouchableOpacity\n            onPress={() => {\n              navigation.toggleDrawer();\n            }}\n            style={{ margin: 10 }}\n          >\n            <Feather\n              name=\"menu\"\n              size={32}\n              color=\"#FFF\"\n              style={{ color: \"#FFF\" }}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      <Chat me={me} device={device} navigation={navigation} />\n    </View>\n  );\n\n  const statsHeader = (\n    <>\n      <TouchableOpacity onPress={() => navigation.navigate(\"Status\")}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <Text style={textStyle}>😎 {me?.name}</Text>\n          <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n          <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon.MaterialCommunityIcons\n              name=\"pistol\"\n              size={18}\n              color={device.theme.secondaryText}\n              style={{ marginRight: 5 }}\n            />\n            <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n          </View>\n          <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n          <Text style={textStyle}>🌍 {me?.city}</Text>\n          <Text style={textStyle}>❤️ {me?.health}%</Text>\n          <Text style={textStyle}>\n            ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n          </Text>\n          <Text style={textStyle}>💪 {getStrength(me?.strength, \"both\")}</Text>\n          <Text\n            style={textStyle}\n            onPress={() => navigation.navigate(\"Channels\")}\n          >\n            💬 {me?.chats}\n          </Text>\n        </View>\n      </TouchableOpacity>\n\n      {!me?.phoneVerified && (\n        <View\n          style={{\n            padding: 5,\n            backgroundColor: device.theme.secondary,\n            borderRadius: 5,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"VerifyPhone\")}\n          >\n            <AntDesign\n              name=\"exclamationcircleo\"\n              color=\"red\"\n              style={{ marginRight: 10 }}\n            />\n            <Text\n              style={{ color: device.theme.secondaryText, fontWeight: \"bold\" }}\n            >\n              {getText(\"headerVerifyYourAccount\")}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </>\n  );\n\n  const backButton = (\n    <View\n      style={{\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n      }}\n    >\n      {navigation.state.routeName !== \"Home\" ? (\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => navigation.goBack()}\n        >\n          <AntDesign\n            name=\"arrowleft\"\n            size={32}\n            color={device.theme.secondaryText}\n          />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ height: 20 }} />\n      )}\n    </View>\n  );\n  return (\n    <View\n      style={{\n        justifyContent: \"center\",\n        backgroundColor: \"#555\",\n      }}\n    >\n      {Platform.OS === \"web\" ? (\n        webHeader\n      ) : (\n        <View style={{ backgroundColor: device.theme.secondary }}>\n          {backButton}\n          {updateComponent || notActivated || statsHeader}\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default Header;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\nclass Jail extends React.Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n\n    const { reloadMe, device } = this.props.screenProps;\n    this.interval = setInterval(() => {\n      reloadMe(device.loginToken);\n      this.fetchMembers();\n    }, 2500);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clear interval jail\");\n    clearInterval(this.interval);\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n      </View>\n    );\n  };\n\n  buyOut = async (type) => {\n    const { device, reloadMe } = this.props.screenProps;\n    const { response } = await post(\"buyout\", {\n      token: device.loginToken,\n      type,\n    });\n    this.setState({ response });\n    reloadMe(device.loginToken);\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { response } = this.state;\n    const sec = Math.round((me.jailAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <T>{getText(\"jailYoureInJail\")}</T>\n\n        <CountDown\n          until={sec}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n\n        <View style={{ height: 15 }} />\n\n        {response && <T>{response}</T>}\n        <Button\n          style={{ marginVertical: 15 }}\n          theme={device.theme}\n          title={getText(\"jailBuyoutCredits\")}\n          onPress={() => this.buyOut(\"credits\")}\n        />\n        <Button\n          style={{ marginVertical: 15 }}\n          theme={device.theme}\n          title={getText(\"jailBuyoutCash\")}\n          onPress={() => this.buyOut(\"cash\")}\n        />\n\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","import * as React from \"react\";\nimport { Animated, Easing, Keyboard, Platform, StatusBar } from \"react-native\";\nimport { isIphoneX } from \"./Util\";\n\ninterface KeyboardAvoidingSpaceProps {\n  onKeyboardWillShow?: (duration: number) => void;\n  onKeyboardWillHide?: (duration: number) => void;\n  offset?: number;\n}\n\ninterface KeyboardAvoidingSpaceState {\n  height: Animated.Value;\n}\n\n/**\n * Made with swag by yours truly\n * @author Brad \"Swagalicious\" Johnson\n */\nexport class KeyboardAvoidingSpace extends React.Component<\n  KeyboardAvoidingSpaceProps,\n  KeyboardAvoidingSpaceState\n> {\n  constructor(props: KeyboardAvoidingSpaceProps) {\n    super(props);\n    this.state = {\n      height: new Animated.Value(0),\n    };\n  }\n\n  componentDidMount() {\n    this.bindListeners();\n  }\n\n  componentWillUnmount() {\n    this.unbindListeners();\n  }\n\n  bindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        this.keyboardWillHide\n      );\n    } else {\n      this.keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        this.keyboardWillHide\n      );\n    }\n  }\n\n  unbindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    } else {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }\n\n  keyboardWillShow = (e: any) => {\n    // because of iPhone X new screen settings, remove SafeAreaView padding-bottom when keyboard is open\n    const SafeAreaViewPaddingBottom = 34;\n    const duration = e && e.duration ? e.duration : 100;\n    let notchHeight = 0;\n    if (\n      Platform.OS === \"android\" &&\n      StatusBar.currentHeight &&\n      StatusBar.currentHeight > 24\n    ) {\n      notchHeight = StatusBar.currentHeight;\n    }\n    // let suggestHeight = 0;\n    // if (Platform.OS === \"ios\") {\n    //   suggestHeight = 30;\n    // }\n    if (this.props.onKeyboardWillShow) {\n      this.props.onKeyboardWillShow(duration);\n    }\n\n    const toValue =\n      e.endCoordinates.height +\n      // suggestHeight +\n      // notchHeight -\n      (this.props.offset || 0) -\n      (isIphoneX() ? SafeAreaViewPaddingBottom : 0);\n\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  keyboardWillHide = (e: any) => {\n    const duration = e && e.duration ? e.duration : 100;\n    if (this.props.onKeyboardWillHide) {\n      this.props.onKeyboardWillHide(duration);\n    }\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    return <Animated.View style={{ height: this.state.height }} />;\n  }\n}\n","import React from \"react\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getRank, getTextFunction, numberFormat } from \"./Util\";\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n  const ocSeconds = Math.ceil((me?.ocAt + 120000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const workSeconds = Math.ceil((me?.workAt - Date.now()) / 1000);\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      isHeader: true,\n      text: getText(\"headerCrime\"),\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"car\",\n      text: getText(\"menuStealCar\"),\n      to: \"StealCar\",\n      component:\n        stealcarSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={stealcarSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"md-cash\",\n      text: getText(\"menuCrimes\"),\n      to: \"Crimes\",\n      component:\n        crimeSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={crimeSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuKill\"),\n      to: \"Kill\",\n      component:\n        attackSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={attackSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuRob\"),\n      to: \"Rob\",\n      component:\n        robSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={robSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"Ionicons\",\n      icon: \"md-cash\",\n      text: getText(\"menuOC\"),\n      to: \"OrganisedCrime\",\n      component:\n        ocSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={ocSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"AntDesign\",\n      icon: \"stepforward\",\n\n      text: getText(\"menuGym\"),\n      to: \"Gym\",\n      component:\n        gymSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={gymSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"tree\",\n\n      text: getText(\"menuWiet\"),\n      to: \"Wiet\",\n      component:\n        wietSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={wietSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"MaterialIcons\",\n      icon: \"people\",\n\n      text: getText(\"menuJunkies\"),\n      to: \"Junkies\",\n      component:\n        junkiesSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={junkiesSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"female\",\n\n      text: getText(\"menuProstitutes\"),\n      to: \"Hoeren\",\n      component:\n        hoerenSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={hoerenSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"tool\",\n\n      text: getText(\"menuWork\"),\n      to: \"Work\",\n      component:\n        workSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={workSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bars\",\n\n      text: getText(\"menuJail\", me?.jail),\n      to: \"Jail\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n      isHeader: true,\n      text: getText(\"headerSpend\"),\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bank\",\n      text: getText(\"menuBank\"),\n      to: \"AllBanks\",\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuBulletfactory\"),\n      to: \"Bulletfactory\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bomb\",\n      text: getText(\"menuBomb\"),\n      to: \"Bomb\",\n    },\n\n    {\n      iconType: \"FontAwesome5\",\n      icon: \"dice\",\n      text: getText(\"menuCasino\"),\n      to: \"Casino\",\n    },\n\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"warehouse\",\n      text: getText(\"menuBunker\"),\n      to: \"Bunker\",\n      component:\n        bunkerSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={bunkerSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome5\",\n      icon: \"hospital\",\n      text: getText(\"menuHospital\"),\n      to: \"Hospital\",\n    },\n\n    {\n      iconType: \"Entypo\",\n      icon: \"shop\",\n      text: getText(\"menuShop\"),\n      to: \"Shop\",\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-car\",\n      text: getText(\"menuGarage\"),\n      to: \"Garage\",\n    },\n    {\n      iconType: \"MaterialIcons\",\n      icon: \"local-car-wash\",\n      text: getText(\"menuRacecars\"),\n      to: \"Racecars\",\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"car-key\",\n      text: getText(\"menuStreetrace\"),\n      to: \"Streetrace\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"plane\",\n      text: getText(\"menuAirport\"),\n      to: \"Airport\",\n    },\n  ];\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level > 1\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            isHeader: true,\n            text: getText(\"headerAdminPanel\"),\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuHackers\"),\n            to: \"Hackers\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuPolice\"),\n            to: \"Police\",\n          },\n        ]\n      : [];\n\n  const admin =\n    me?.level >= 10\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            text: getText(\"menuAdminEmail\"),\n            to: \"AdminEmail\",\n          },\n        ]\n      : [];\n\n  return [...gameMod, ...admin];\n};\n\nexport const rightMenu = (me, theme) => {\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      isHeader: true,\n      text: me?.name,\n      to: \"Profile\",\n      params: { name: me?.name },\n    },\n\n    {\n      isStats: true,\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuCash\", numberFormat(me?.cash)),\n    },\n\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuBankMoney\", numberFormat(me?.bank)),\n    },\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuBullets\", numberFormat(me?.bullets)),\n    },\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n      text: getText(\"menuRank\", getRank(me?.rank, \"both\")),\n    },\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuHealth\", me?.health),\n    },\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuCity\", me?.city),\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      isHeader: true,\n      text: getText(\"headerSociety\"),\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-people\",\n\n      text: getText(\"menuMembers\", me?.online),\n      to: \"Members\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuStats\"),\n      to: \"Stats\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuMyObjects\"),\n      to: \"MyObjects\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuStatus\"),\n      to: \"Status\",\n    },\n\n    {\n      iconType: \"Entypo\",\n      icon: \"info-with-circle\",\n\n      isHeader: true,\n      text: getText(\"headerGeneral\"),\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-chatbubbles\",\n      text: getText(\"menuChat\"),\n      to: \"Chat\",\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-chatbubbles\",\n      text: getText(\"menuChannels\", me?.chats),\n      to: \"Channels\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"wechat\",\n\n      text: getText(\"menuForum\"),\n      to: \"Forum\",\n    },\n\n    {\n      iconType: \"SimpleLineIcons\",\n      icon: \"settings\",\n\n      text: getText(\"menuSettings\"),\n      to: \"Settings\",\n    },\n\n    {\n      iconType: \"Entypo\",\n      icon: \"info-with-circle\",\n\n      text: getText(\"menuInfo\"),\n      to: \"Info\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bank\",\n      text: getText(\"menuVIP\"),\n      to: \"VIP\",\n    },\n\n    ...adminMenu(me),\n  ];\n};\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  ScrollView,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { default as style, default as styles } from \"../Style\";\nimport { getRank, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst Accomplice = ({\n  navigation,\n  screenProps: {\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [accomplice1, setAccomplice1] = useState(me?.accomplice);\n  const [accomplice2, setAccomplice2] = useState(me?.accomplice2);\n  const [accomplice3, setAccomplice3] = useState(me?.accomplice3);\n  const [accomplice4, setAccomplice4] = useState(me?.accomplice4);\n  const [response, setResponse] = useState(null);\n\n  const submit = (acc) => {\n    //how to set accomplice acc from params to the right body?\n\n    fetch(`${Constants.SERVER_ADDR}/setAccomplice`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        accomplice: accomplice1,\n        accomplice2,\n        accomplice3,\n        accomplice4,\n        loginToken: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response }) => {\n        setResponse(response);\n        reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    const accomplice = navigation.state.params?.accomplice;\n    if (accomplice) {\n      submit(accomplice);\n    }\n  }, []);\n\n  const rank = getRank(me?.rank, \"number\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n      }}\n    >\n      <View style={{ maxWidth: 600, margin: 20 }}>\n        <T>{getText(\"accompliceInfo\")}</T>\n\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"accompliceLinkText\")}</T>\n          <TextInput\n            value={url}\n            onFocus={() => {\n              Clipboard.setString(url);\n              setResponse(getText(\"copiedToClipboard\"));\n            }}\n            style={style(theme).textInput}\n          />\n        </View>\n\n        <T bold>{getText(\"yourAccomplicesHeader\")}</T>\n        {me?.accomplices.length > 0 ? (\n          me?.accomplices.map((accomplice) => {\n            return keyValue(accomplice.name, getRank(accomplice.rank, \"both\"));\n          })\n        ) : (\n          <T>{getText(\"accomplicesNone\")}</T>\n        )}\n\n        <T bold style={{ marginTop: 15 }}>\n          {getText(\"accompliceWhoseYouWantToBe\")}\n        </T>\n        <T>{response}</T>\n\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={styles(theme).textInput}\n          value={accomplice1}\n          onChangeText={setAccomplice1}\n          placeholder={getText(\"accomplice\", 1)}\n        />\n\n        {rank >= 11 ? (\n          <TextInput\n            placeholderTextColor={theme.secondaryTextSoft}\n            style={styles(theme).textInput}\n            value={accomplice2}\n            onChangeText={setAccomplice2}\n            placeholder={getText(\"accomplice\", 2)}\n          />\n        ) : null}\n\n        {rank >= 16 ? (\n          <>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={styles(theme).textInput}\n              value={accomplice3}\n              onChangeText={setAccomplice3}\n              placeholder={getText(\"accomplice\", 3)}\n            />\n\n            <TextInput\n              style={styles(theme).textInput}\n              value={accomplice4}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={setAccomplice4}\n              placeholder={getText(\"accomplice\", 4)}\n            />\n          </>\n        ) : null}\n\n        <Button theme={theme} title={getText(\"save\")} onPress={submit} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Accomplice;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <T bold style={{ marginTop: 20 }}>\n                      {ip.ip}\n                    </T>\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Airport extends Component {\n  state = {\n    response: null,\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={device.theme}\n        style={{ borderRadius: 10, marginTop: 20 }}\n        title={getText(\"fly\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/airport`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: device.loginToken,\n              to,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      \"Paris\",\n      \"Barcelona\",\n      \"London\",\n      \"Berlin\",\n      \"Lisbon\",\n      \"Rome\",\n      \"Dublin\",\n      \"Madrid\",\n      \"Brussels\",\n      \"Bali\",\n      \"New York\",\n      \"San Fransisco\",\n      \"Amsterdam\",\n    ];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ to: options[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n    return (\n      <View>\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={this.state.to ? this.state.to : getText(\"chooseCity\")}\n          onPress={this.openActionSheet}\n        />\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Airport);\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"getCTA\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/income`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                captcha: this.state.captcha,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async (response) => {\n                this.setState({ response, captcha: \"\", random: Math.random() });\n                this.props.screenProps.reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"income\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n      </View>\n    );\n  };\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const incomeAt = me.incomeAt ? me.incomeAt : 0;\n    const uren = Math.round((Date.now() - incomeAt) / 3600000);\n    const uren2 = uren > 24 ? 24 : uren;\n    const amount = Math.round(\n      (me.junkies + me.hoeren + me.wiet) * 50 * Math.sqrt(uren2)\n    );\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.keyValue(getText(\"hours\"), getText(\"xHours\", uren2))}\n        {this.keyValue(getText(\"totalProfit\"), `${amount},-`)}\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Income;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bank from \"./Bank\";\nimport Donate from \"./Donate\";\nimport Income from \"./Income\";\nimport SwissBank from \"./SwissBank\";\nconst AllBanks = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const [tab, setTab] = useState(\"bank\");\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"menuBank\"),\n            isActive: tab === \"bank\",\n            onPress: () => setTab(\"bank\"),\n          },\n          {\n            title: getText(\"menuSwissBank\"),\n            isActive: tab === \"swissBank\",\n            onPress: () => setTab(\"swissBank\"),\n          },\n\n          {\n            title: getText(\"menuDonate\"),\n            isActive: tab === \"donate\",\n            onPress: () => setTab(\"donate\"),\n          },\n          {\n            title: getText(\"menuIncome\"),\n            isActive: tab === \"income\",\n            onPress: () => setTab(\"income\"),\n          },\n        ]}\n      />\n\n      {tab === \"bank\" && <Bank {...props} />}\n      {tab === \"swissBank\" && <SwissBank {...props} />}\n      {tab === \"donate\" && <Donate {...props} />}\n      {tab === \"income\" && <Income {...props} />}\n    </View>\n  );\n};\nexport default AllBanks;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Image, ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst Bomb = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bombs, setBombs] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"bomb\", {\n      loginToken: device.loginToken,\n      bombs,\n      type,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  const airplanes = [\n    \"\",\n    \"Fokker\",\n    \"Fleet\",\n    \"Havilland\",\n    \"Cessna\",\n    \"Douglas\",\n    \"Lear Jet\",\n    \"Raket\",\n  ];\n\n  const selectType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = Object.keys(typeStrings).map(\n      (type) =>\n        `${typeStrings[type]} (${city[`${type}Damage`]}% ${getText(\n          \"damage\"\n        )}, €${numberFormat(city[`${type}Profit`])} ${getText(\"profit\")})`\n    );\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex !== options.length - 1) {\n          setType(Object.keys(typeStrings)[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {\n        <>\n          <Image source={require(\"../../assets/bombarderen.jpg\")} />\n          <Text style={{ color: theme.primaryText }}>\n            {me?.airplane === 0\n              ? getText(\"bombNoAirplane\")\n              : getText(\n                  \"bombAirplaneText\",\n                  airplanes[me?.airplane],\n                  me?.airplane * 5\n                )}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <T style={{ marginTop: 15 }}>{getText(\"bombs\")}</T>\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bombs}\n            onChangeText={(x) => setBombs(x)}\n            style={style(theme).textInput}\n          />\n\n          <T style={{ marginVertical: 15 }}>{getText(\"property\")}</T>\n          <Button\n            theme={theme}\n            onPress={selectType}\n            title={type ? typeStrings[type] : getText(\"whichProperty\")}\n          />\n\n          {type ? (\n            <T>\n              {getText(\n                \"bombInfo\",\n                typeStrings[type],\n                city[`${type}Damage`],\n                numberFormat(city[`${type}Profit`]),\n                city[`${type}Owner`] || `(Niemand)`\n              )}\n            </T>\n          ) : null}\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button\n            style={{ marginTop: 15 }}\n            theme={theme}\n            title={getText(\"bombAction\")}\n            onPress={submit}\n          />\n        </>\n      }\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bomb;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button theme={theme} title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Casino = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"casino\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.casinoOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.casinoOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"casinoInfo2\", city?.casinoProfit)}\n          </Text>\n\n          <Button\n            onPress={() => navigation.navigate(\"Poker\")}\n            theme={theme}\n            title={getText(\"poker\")}\n          />\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.casinoOwner ? (\n                  <T>{city.casinoOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.casinoOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"casino\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.casinoProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Casino;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button\n            onPress={changeName}\n            theme={theme}\n            title={getText(\"change\")}\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n        return false;\n      }\n      return true;\n    }\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as React from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\nconst maxWidth = isBigDevice ? 500 : width;\n\nconst IMAGE_SIZE = 40;\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      members: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      navigation: {\n        state: { params },\n      },\n      screenProps: {\n        device: { loginToken },\n      },\n    } = this.props;\n    this.fetchChat({ scrollToEnd: true });\n    setInterval(() => {\n      this.fetchChat();\n      post(\"setRead\", { loginToken, id: params?.subid });\n    }, 5000);\n  }\n\n  fetchChat = (options) => {\n    const {\n      screenProps: { device },\n      navigation: {\n        state: { params },\n      },\n    } = this.props;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/channelmessage?loginToken=${device.loginToken}&id=${params.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat, isFetching: false }, () => {\n          if (options?.scrollToEnd) {\n            setTimeout(() => {\n              this.flatList.scrollToEnd({ animated: true });\n            }, 200);\n          }\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChat();\n    });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me },\n      navigation,\n    } = this.props;\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.username });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>\n              {item.user?.name ? item.user?.name : item.user?.username}\n            </Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <Text>{item.message}</Text>\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  send = () => {\n    const {\n      screenProps: { device },\n      navigation: {\n        state: { params },\n      },\n    } = this.props;\n    const { image, message, hasEdited } = this.state;\n\n    this.setState({ message: \"\", image: null });\n\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.fetchChat({ scrollToEnd: true });\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { image, message, hasEdited, response } = this.state;\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) =>\n              this.setState({\n                hasEdited: true,\n                image: base64,\n              })\n            }\n          />\n\n          <TextInput\n            onSubmitEditing={this.send}\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={(message) => this.setState({ message })}\n          />\n\n          <TouchableOpacity onPress={this.send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const { chat } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 200 : undefined,\n          }}\n          data={chat}\n          renderItem={this.renderItem}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n          ref={(ref) => (this.flatList = ref)}\n        />\n        {this.renderFooter()}\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default ChatScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { post } from \"../Util\";\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channelsubs: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChannelsubs();\n\n    setInterval(() => this.fetchChannelsubs(), 5000);\n  }\n\n  fetchChannelsubs = () => {\n    const {\n      screenProps: { device },\n    } = this.props;\n    fetch(\n      `${Constants.SERVER_ADDR}/channelsubs?loginToken=${device.loginToken}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((channelsubs) => {\n        if (channelsubs.response) {\n          this.setState({ response: channelsubs.response });\n        } else {\n          this.setState({ channelsubs });\n        }\n        this.setState({ isFetching: false });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          console.log(\"HAHH\");\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          <View\n            style={{\n              width: 60,\n              height: 60,\n              borderRadius: 30,\n              backgroundColor: \"#CCC\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n          </View>\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20 }}>\n            <T bold>\n              {item.channel.name\n                ? item.channel.name\n                : item.channel.channelsubs.length === 2\n                ? item.channel.channelsubs.find((x) => x.userId !== me?.id)\n                    ?.user.name\n                : \"(RAAAR)\"}\n            </T>\n            {item.lastmessage ? <T>{item.lastmessage}</T> : null}\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const { navigation } = this.props;\n    const { channelsubs } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          data={channelsubs}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default ChatScreen;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    setInterval(() => this.getChat(), 5000);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          theme={theme}\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button theme={theme} onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  Image,\n  Linking,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nfunction Footer({ navigation, screenProps: { me } }) {\n  const getText = getTextFunction(me?.locale);\n\n  const theme = useSelector((state) => state.device.theme);\n  const [text, setText] = useState(\"\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmastercrimez.com%2F#%2FAccomplice%2F?accomplice=${me?.name}`;\n\n  const copy = () => {\n    Clipboard.setString(url);\n    setText(\"Gekopiëerd naar klembord\");\n  };\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 10 }}>\n        <T bold>{getText(\"footerInviteFriends\")}</T>\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"footerInviteText\")}</T>\n          <View style={{ flexDirection: \"row\" }}>\n            <TextInput\n              value={url}\n              style={{\n                color: theme.secondaryText,\n                backgroundColor: theme.secondary,\n                height: 35,\n                borderRadius: 10,\n                paddingHorizontal: 10,\n                width: 200,\n              }}\n              onFocus={copy}\n            />\n            <Button\n              theme={theme}\n              title={getText(\"footerCopy\")}\n              onPress={copy}\n            />\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <T>{getText(\"footerShare\")}</T>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(facebookShareUrl);\n              }}\n            >\n              <View\n                style={{\n                  marginLeft: 20,\n                  backgroundColor: \"#3b5998\",\n                  width: 40,\n                  height: 40,\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n              </View>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(\n                  `whatsapp://send?text=${getText(\"footerWhatsappText\", url)}`\n                );\n              }}\n            >\n              <Image\n                source={require(\"../../assets/whatsapp.png\")}\n                style={{ width: 55, height: 55 }}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"footerFollowUs\")}</T>\n        <TouchableOpacity\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.facebook.com/Mastercrimez-100872595072798\"\n            );\n          }}\n        >\n          <View\n            style={{\n              marginLeft: 20,\n              backgroundColor: \"#3b5998\",\n              width: 40,\n              height: 40,\n              borderRadius: 20,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\"https://www.instagram.com/mastercrimez.nl/\");\n          }}\n        >\n          <Image\n            source={require(\"../../assets/instagram.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://open.spotify.com/playlist/5n5j78gTXOM9h2SOdz0Ay5?si=9gBkeObkTXaqFZxHLFutIA\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/spotify.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.youtube.com/channel/UCGqGRq-iNxXdLrMx9AlD7qw\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/youtube.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={{ height: 20 }} />\n\n      <Text style={{ color: theme.primaryText }}>\n        &copy; MasterCrimeZ 2006-{new Date().getFullYear()}\n      </Text>\n    </View>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","const { Platform, Linking, View, Text } = require(\"react-native\");\nimport React from \"react\";\nimport Constants from \"../Constants\";\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nconst DownloadApp = () => {\n  if (getMobileOperatingSystem() === \"android\") {\n    console.log(\"is android\");\n    window.location.replace(Constants.ANDROID_APP_URL);\n  }\n\n  if (getMobileOperatingSystem() === \"ios\") {\n    console.log(\"is ios\");\n    window.location.replace(Constants.IOS_APP_URL);\n  }\n\n  console.log(getMobileOperatingSystem());\n\n  return (\n    <View>\n      <Text>Download the app!</Text>\n    </View>\n  );\n};\nexport default DownloadApp;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n        <TextInput\n          multiline\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          numberOfLines={4}\n          style={{ ...style(device.theme).textInput, height: 150 }}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n                <T>{response.message}</T>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={style(device.theme).textInput}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            placeholder={getText(\"react\")}\n            value={this.state.message}\n            onChangeText={(message) => this.setState({ message })}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      this.fetchGroups();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* Show all people with isHacker set to true */}\n      <Image\n        source={require(\"../../assets/hacker.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"hackersInfo\")}</T>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { Image, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"RLD\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.rldOwner ? (\n                    <T>{city.rldOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.rldOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"rld\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city.rldProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const number = Math.ceil(Math.random() * 60);\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Image\n                style={{ width: 100, height: 100 }}\n                source={{\n                  uri:\n                    Constants.SERVER_ADDR + \"/images/female/\" + number + \".gif\",\n                }}\n              />\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { Component } from \"react\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  NativeModules,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport T from \"../components/T\";\nimport { leftMenu, rightMenu } from \"../Menus\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst itemWidth = width / 4;\nconst amountOfItems = Math.floor((height - 150) / itemWidth) * 4;\n\nclass Home extends Component {\n  state = {\n    response: null,\n    activeSlide: 0,\n    notificationsHeader: false,\n  };\n\n  async componentDidMount() {\n    const { device } = this.props.screenProps;\n\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n\n    this.turnOnNotifications();\n    this.sendLanguage();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      this.turnOnNotifications();\n      this.sendLanguage();\n    }\n  };\n\n  sendLanguage = () => {\n    const { device, me } = this.props.screenProps;\n\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  turnOnNotifications = async () => {\n    const { device, me } = this.props.screenProps;\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        this.setState({ notificationsHeader: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      this.setState({ notificationsHeader: false });\n    }\n  };\n\n  _renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginVertical: 15,\n        }}\n      >\n        {item.map((menu, index) => {\n          const TheIcon = Icon[menu.iconType];\n          return (\n            <View\n              key={`i${index}`}\n              style={{ width: itemWidth, alignItems: \"center\" }}\n            >\n              <TouchableOpacity\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"#000\",\n                  backgroundColor: theme.secondary,\n                  borderRadius: 10,\n                  width: itemWidth - 25,\n                  height: itemWidth - 25,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={(e) => {\n                  navigation.navigate(menu.to);\n\n                  const movement = {\n                    action: \"App_Menu_\" + menu.to,\n                    locationX: e.nativeEvent.locationX,\n                    locationY: e.nativeEvent.locationY,\n                    timestamp: Date.now(),\n                  };\n\n                  dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n                }}\n              >\n                {TheIcon && (\n                  <TheIcon\n                    name={menu.icon}\n                    size={(itemWidth - 25) / 2}\n                    color={theme.secondaryText}\n                  />\n                )}\n              </TouchableOpacity>\n              <View>\n                <Text style={{ color: theme.primaryText }}>{menu.text}</Text>\n                {menu.component}\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCarousel() {\n    const {\n      screenProps: { dispatch, me, device },\n    } = this.props;\n\n    const { notificationsHeader } = this.state;\n\n    const menus = [\n      ...leftMenu(me, device.theme),\n      ...rightMenu(me, device.theme),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {notificationsHeader && (\n          <TouchableOpacity\n            onPress={() => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            }}\n          >\n            <View\n              style={{\n                padding: 5,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"exclamationcircleo\"\n                color=\"red\"\n                style={{ marginRight: 10 }}\n              />\n              <T>{getText(\"turnOnNotificationsText\")}</T>\n            </View>\n          </TouchableOpacity>\n        )}\n\n        <Carousel\n          ref={(c) => {\n            this._carousel = c;\n          }}\n          data={[\n            filtered.slice(0, amountOfItems),\n            filtered.slice(amountOfItems, amountOfItems * 2),\n            amountOfItems * 2 > filtered.length\n              ? undefined\n              : filtered.slice(amountOfItems * 2, filtered.length),\n          ].filter((x) => !!x)}\n          renderItem={this._renderItem}\n          sliderWidth={width}\n          onSnapToItem={(index) => this.setState({ activeSlide: index })}\n          itemWidth={width}\n        />\n\n        <Pagination\n          dotsLength={2}\n          activeDotIndex={this.state.activeSlide}\n          // containerStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.75)\" }}\n          dotStyle={{\n            width: 10,\n            height: 10,\n            borderRadius: 5,\n            marginHorizontal: 8,\n            backgroundColor: \"rgba(255, 255, 255, 0.92)\",\n          }}\n          inactiveDotStyle={\n            {\n              // Define styles for inactive dots here\n            }\n          }\n          inactiveDotOpacity={0.4}\n          inactiveDotScale={0.6}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    if (Platform.OS === \"web\") {\n      const handleMouseMove = (event) => {\n        var x = event.clientX;\n        var y = event.clientY;\n        var coor = \"X coords: \" + x + \", Y coords: \" + y;\n        // console.log(\"coor\", coor);\n      };\n\n      document.onmousemove = handleMouseMove;\n\n      return (\n        <Text style={{ color: theme.primaryText }}>\n          {getText(\"welcomeBack\")}\n        </Text>\n      );\n    }\n    return this.renderCarousel();\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"prizes\")}\n          to=\"Prizes\"\n          IconFont=\"AntDesign\"\n          icon=\"star\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 500.000 kogels kosten Hoe dit wordt berekend, is geheim,\n        maar het ligt aan deze factoren: Voor de aanvaller: Het wapen, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels je\n        nodig zult hebben. Voor de verdediger: De verdediging, de moordervaring\n        en de rang. Hoe beter elk van dezen, hoe meer kogels de aanvaller nodig\n        zal hebben. De rang heeft de meeste invloed, daarna het wapen, de\n        verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Huisjesmelkers, Leger des Heils en het Red Light District krijgen 20%\n        van iedereens inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n    this.props.screenProps.reloadCities();\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n                this.fetchMembers();\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, reloadCities, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"jail\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n            marginHorizontal: 15,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"jail\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                paddingHorizontal: 15,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.jailOwner ? (\n                    <Text style={{ color: theme.primaryText }}>\n                      {city.jailOwner}\n                    </Text>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.jailOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"jail\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <Text style={{ color: theme.primaryText }}>\n                  {city.jailProfit}\n                </Text>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListFooterComponent={this.renderCities}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"junkiesObject\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.junkiesOwner ? (\n                    <T>{city.junkiesOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.junkiesOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"junkies\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <View>\n                  <T>{city.junkiesProfit}</T>\n                </View>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({ type: \"SET_LOGGED\", value: true });\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.loginToken });\n\n          this.props.screenProps.reloadMe(responseJson.loginToken);\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = typeStrings[type];\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction, getUserColor } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\nclass Members extends Component {\n  constructor(props) {\n    super(props);\n\n    const getText = getTextFunction(props.screenProps.me?.locale);\n    this.state = {\n      members: [],\n      search: null,\n      orderBy: {\n        key: \"onlineAt\",\n        title: getText(\"online\"),\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { device } = this.props.screenProps;\n\n    this.fetchMembers(this.state.orderBy.key);\n\n    const order = this.props.navigation.state.params?.order;\n    if (order) {\n      this.setState({ orderBy: orders[order] });\n      this.fetchMembers(orders[order].key);\n    }\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        this.setState({ members });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const { navigation } = this.props;\n\n    const orderKey = this.state.orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    const color = getUserColor(item, this.props.screenProps.device.theme);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate(\"Profile\", { name: item.name });\n          }}\n        >\n          <T style={{ color }}>{item.name}</T>\n        </TouchableOpacity>\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  openActionSheet = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          this.setState({ orderBy: orders[buttonIndex] });\n          this.fetchMembers(orders[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  renderHeader = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const { members, search } = this.state;\n\n    return (\n      <View\n        style={{ backgroundColor: this.props.screenProps.device.theme.primary }}\n      >\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"sort\")}\n          onPress={() => this.openActionSheet()}\n          icon=\"filter\"\n          font=\"FontAwesome\"\n          style={{ marginTop: 20, marginHorizontal: 10 }}\n        />\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: this.props.screenProps.device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={\n              this.props.screenProps.device.theme.secondaryTextSoft\n            }\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: this.props.screenProps.device.theme.secondaryText,\n            }}\n            onChangeText={(search) => this.setState({ search })}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={this.props.screenProps.device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: this.props.screenProps.device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{this.state.orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { members, search } = this.state;\n\n    const searchedMembers = members.filter((m) =>\n      search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n    );\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 200 : undefined,\n          }}\n          ListHeaderComponent={this.renderHeader}\n          data={searchedMembers}\n          renderItem={this.renderItem}\n          ListFooterComponent={this.renderFooter}\n        />\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Members);\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getMessages();\n\n    const id = this.props.navigation.state.params?.id;\n\n    if (id) {\n      this.fetchReadMessage(id);\n      this.setState({ readMessage: id });\n    }\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getMessages() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/messages?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ messages: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { to, message } = this.state;\n    if (!to || !message) {\n      return;\n    }\n    fetch(`${Constants.SERVER_ADDR}/message`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        to,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response, message: null, to: null });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadMessage = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/readMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        //nothing to be done\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  deleteMessage = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/deleteMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.getMessages();\n        this.setState({ readMessage: null });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? (\n          <View>\n            <T>{this.state.response.response}</T>\n          </View>\n        ) : null}\n\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"to\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          multiline\n          numberOfLines={4}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={[\n            style(device.theme).textInput,\n            {\n              height: 200,\n              width: \"100%\",\n            },\n          ]}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderMessages() {\n    return (\n      <FlatList\n        style={{ width: \"100%\" }}\n        data={this.state.messages?.messages}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              style={{ paddingVertical: 15 }}\n              onPress={() => {\n                this.fetchReadMessage(item.id);\n                this.setState({ readMessage: item.id });\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <T style={{ fontWeight: item.read ? undefined : \"bold\" }}>\n                  {item.fromName}\n                </T>\n                <T style={{ fontWeight: item.read ? undefined : \"bold\" }}>\n                  ({moment(item.createdAt).format(\"DD-MM-YYYY HH:mm\")})\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        ItemSeparatorComponent={() => (\n          <View style={{ height: 1, width: \"100%\", backgroundColor: \"#000\" }} />\n        )}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readMessage = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const item = this.state.messages?.messages.find(\n      (m) => m.id === this.state.readMessage\n    );\n    return item ? (\n      <ScrollView style={{ marginVertical: 20 }}>\n        <T>\n          {getText(\"from\")}: {item.fromName}\n        </T>\n        <T>\n          {getText(\"sent\")}: {moment(item.createdAt).format(\"DD-MM-YYYY HH:mm\")}\n        </T>\n        <T style={{ marginTop: 10 }}>{item.message}</T>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"back\")}\n            icon=\"arrow-back\"\n            font=\"MaterialIcons\"\n            onPress={() => {\n              this.setState({ readMessage: null });\n              this.getMessages();\n            }}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"reply\")}\n            icon=\"reply\"\n            font=\"FontAwesome\"\n            onPress={() =>\n              this.setState({ newMessage: true, to: item.fromName })\n            }\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"delete\")}\n            icon=\"delete\"\n            font=\"MaterialIcons\"\n            onPress={() => this.deleteMessage(item.id)}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"messageNotFound\")}</T>\n    );\n  };\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newMessage, readMessage } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"messages\"),\n              isActive: this.state.newMessage === false,\n              onPress: () =>\n                this.setState({ newMessage: false, readMessage: false }),\n            },\n            {\n              title: getText(\"newMessage\"),\n              isActive: this.state.newMessage,\n              onPress: () => this.setState({ newMessage: true }),\n            },\n          ]}\n        />\n\n        <View style={{ margin: 20, flex: 1 }}>\n          {newMessage\n            ? this.renderNew()\n            : readMessage\n            ? this.readMessage()\n            : this.renderMessages()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction } from \"../Util\";\nconst properties = [\n  {\n    name: \"bulletFactory\",\n  },\n  {\n    name: \"casino\",\n  },\n  {\n    name: \"rld\",\n  },\n  {\n    name: \"landlord\",\n  },\n  {\n    name: \"junkies\",\n  },\n  {\n    name: \"weaponShop\",\n  },\n  {\n    name: \"airport\",\n  },\n  {\n    name: \"estateAgent\",\n  },\n  {\n    name: \"garage\",\n  },\n  {\n    name: \"jail\",\n  },\n  {\n    name: \"bank\",\n  },\n];\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadCities,\n    reloadMe,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = typeStrings[property];\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  <Button\n                    key={`index${index}${property}`}\n                    style={{ marginVertical: 15 }}\n                    theme={theme}\n                    title={getText(\"manage\")}\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: property,\n                        city: city.city,\n                      })\n                    }\n                  />\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default MyObjects;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    photo: null,\n    images: [],\n    selectedImage: null,\n  };\n\n  componentDidMount() {\n    this.getPermissionAsync();\n    this.fetchImages();\n\n    const { me } = this.props.screenProps;\n    console.log(\"bio\", me?.bio);\n    this.setState({ bio: me?.bio });\n  }\n\n  fetchImages = () => {\n    const { device, me } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${me.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        this.setState({ images });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  handleUploadPhoto = () => {\n    const { device, me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: this.state.photo.uri,\n        token: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.fetchImages();\n        alert(getText(\"success\"));\n        this.setState({ photo: null });\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        this.setState({ photo: result }, () => this.handleUploadPhoto());\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  renderItem = ({ item, index }) => {\n    const uri = Constants.SERVER_ADDR + \"/\" + item.image;\n    return (\n      <TouchableOpacity\n        onPress={() => this.setState({ selectedImage: item.id })}\n      >\n        <View>\n          <Image\n            source={{ uri }}\n            style={{\n              width: 200,\n              height: 200,\n              ...(this.state.selectedImage === item.id\n                ? { borderWidth: 2, borderColor: \"black\" }\n                : {}),\n            }}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        title={getText(\"delete\")}\n        onPress={() => {\n          if (this.state.selectedImage) {\n            fetch(`${Constants.SERVER_ADDR}/deleteimage`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                id: this.state.selectedImage,\n              }),\n            })\n              .then((response) => response.json())\n              .then(({ images }) => {\n                this.fetchImages();\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } else {\n            alert(getText(\"noPictureSelected\"));\n          }\n        }}\n      />\n    );\n  };\n\n  render() {\n    const { photo, images, bio } = this.state;\n    const {\n      device,\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: 20,\n        }}\n      >\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={{ ...style(theme).textInput, width: \"100%\", height: 200 }}\n          multiline={true}\n          numberOfLines={4}\n          value={bio}\n          onChangeText={(bio) => this.setState({ bio })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                bio: this.state.bio,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                alert(getText(\"success\"));\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"choosePicture\")}\n          onPress={this.handleChoosePhoto}\n        />\n\n        <FlatList\n          data={images}\n          extraData={this.state.selectedImage}\n          // contentContainerStyle={{ flexDirection: \"row\" }}\n          numColumns={isSmallDevice ? 1 : 3}\n          renderItem={this.renderItem}\n          keyExtractor={(item) => `id${item.id}`}\n          ListFooterComponent={this.renderFooter}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/oc`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"doOC\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      <T>AlCapone</T>\n      <T>WebMaster</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"policeBulletBank\")}:\n      </T>\n      <T>11.000.000</T>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\n/**\n * A Privacy page\n */\nconst Prizes = ({ navigation, screenProps: { me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <H1>{getText(\"prizes\")}</H1>\n\n        <T>{getText(\"currentlyNoPrizes\")}</T>\n        {/* <T>{`\nAan het eind van de prijzenronde winnen de spelers met de meeste gamepoints.\nHet eind van deze ronde is zondag 31 mei 2020.\n\n#1: 100 euro\n#2: 60 euro\n#3: 40 euro`}</T> */}\n      </View>\n    </View>\n  );\n};\nexport default Prizes;\n","import React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n} from \"../Util\";\n\nclass ProfileScreen extends React.Component {\n  state = {\n    profile: null,\n    images: [],\n    loading: true,\n  };\n  componentDidMount() {\n    const { navigation } = this.props;\n\n    const name = navigation.state.params.name;\n\n    this.getProfile(name);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { navigation } = this.props;\n\n    const name = navigation.state.params.name;\n\n    if (\n      prevProps.navigation.state.params !== this.props.navigation.state.params\n    ) {\n      this.getProfile(name);\n    }\n  }\n\n  getProfile(name) {\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        this.setState({ profile: responseJson, loading: false }, () => {\n          this.fetchImages();\n        });\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  fetchImages = () => {\n    const { device } = this.props.screenProps;\n    const { profile } = this.state;\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${profile?.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        this.setState({ images });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    const { profile, loading, images } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    if (loading) {\n      return <ActivityIndicator />;\n    }\n\n    if (!profile) {\n      return <T>{getText(\"personDoesntExist\")}</T>;\n    }\n\n    const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n    const points = profile.accomplices?.reduce(\n      (total, accomplice) => total + accomplice.rank,\n      0\n    );\n\n    const color = getUserColor(profile, this.props.screenProps.device.theme);\n\n    const uri = Constants.SERVER_ADDR + \"/\" + images?.[0]?.image;\n    const hasImage = !!images?.[0]?.image;\n\n    return (\n      <ScrollView>\n        <View style={{ justifyContent: \"center\" }}>\n          <View\n            style={{\n              backgroundColor: \"#444\",\n              borderRadius: 10,\n              margin: 20,\n              padding: 20,\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n            {hasImage ? (\n              <View>\n                <Image\n                  source={{ uri }}\n                  style={{\n                    width: \"100%\",\n                    height: 400,\n                  }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n            ) : null}\n\n            {this.keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n            {this.keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n            {this.keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n            {this.keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n            {this.keyValue(\n              getText(\"strength\"),\n              getStrength(profile?.strength, \"both\")\n            )}\n            {this.keyValue(getText(\"health\"), `${profile?.health}%`)}\n            {this.keyValue(getText(\"weed\"), profile?.wiet)}\n            {this.keyValue(getText(\"junkies\"), profile?.junkies)}\n            {this.keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n            {profile?.accomplices?.length > 0 ? (\n              <>\n                <T style={{ fontWeight: \"bold\", marginBottom: 15 }}>\n                  {getText(\"gangOfX\", profile?.name, points)}\n                </T>\n                {profile.accomplices.map((accomplice) => {\n                  return this.keyValue(\n                    accomplice.name,\n                    getRank(accomplice.rank, \"both\")\n                  );\n                })}\n              </>\n            ) : null}\n            <View style={styles.row}>\n              <Button\n                theme={theme}\n                title={getText(\"chat\")}\n                onPress={async () => {\n                  const { id } = await get(\n                    `pm?loginToken=${loginToken}&userId=${profile.id}`\n                  );\n\n                  navigation.navigate(\"Channel\", { id });\n                }}\n              />\n\n              <Button\n                theme={theme}\n                title={getText(\"sendMessage\")}\n                onPress={() =>\n                  navigation.navigate(\"Messages\", {\n                    state: { to: profile.name, newMessage: true },\n                  })\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"rob\")}\n                onPress={() =>\n                  navigation.navigate(\"Rob\", {\n                    name: profile.name,\n                  })\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"attack\")}\n                onPress={() =>\n                  navigation.navigate(\"Kill\", {\n                    name: profile.name,\n                  })\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"donate\")}\n                onPress={() =>\n                  navigation.navigate(\"Donate\", {\n                    to: profile.name,\n                  })\n                }\n              />\n            </View>\n          </View>\n\n          <View style={{ marginVertical: 20 }}>\n            <T>{profile?.bio}</T>\n          </View>\n\n          <View>\n            {images.slice(1, images.length).map((image) => {\n              const uri = Constants.SERVER_ADDR + \"/\" + image.image;\n              return (\n                <View>\n                  <Image\n                    source={{ uri }}\n                    style={{\n                      width: \"100%\",\n                      height: 400,\n                    }}\n                    resizeMode=\"contain\"\n                  />\n                </View>\n              );\n            })}\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      console.log(\"FETCH GARAGE\");\n      this.fetchGarage();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import React, { Component } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { areYouSure, getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView>\n        {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n        {__DEV__ && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title={getText(\"purge\")}\n            onPress={() =>\n              areYouSure(() => {\n                dispatch({ type: \"PURGE\" });\n              })\n            }\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          IconFont=\"Entypo\"\n          icon=\"phone\"\n          navigation={navigation}\n          title={getText(\"verifyPhone\")}\n          to=\"VerifyPhone\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuChangePassword\")}\n          to=\"ChangePassword\"\n          IconFont=\"MaterialCommunityIcons\"\n          icon=\"onepassword\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"signupEmail\")}\n          to=\"SignupEmail\"\n          IconFont=\"Entypo\"\n          icon=\"email\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"changeName\")}\n          to=\"ChangeName\"\n          IconFont=\"FontAwesome\"\n          icon=\"bank\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"layout\")}\n          to=\"Theme\"\n          IconFont=\"Ionicons\"\n          icon=\"ios-color-palette\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuLogin\")}\n          to=\"Login\"\n          IconFont=\"Entypo\"\n          icon=\"login\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuMyProfile\")}\n          to=\"MyProfile\"\n          IconFont=\"AntDesign\"\n          icon=\"user\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuBackfire\")}\n          to=\"Backfire\"\n          IconFont=\"MaterialCommunityIcons\"\n          icon=\"pistol\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuAccomplice\")}\n          to=\"Accomplice\"\n          IconFont=\"FontAwesome\"\n          icon=\"universal-access\"\n        />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Status;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(\"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const { type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const propertyKey =\n      type === \"weapon\"\n        ? \"weaponShop\"\n        : type === \"protection\"\n        ? \"weaponShop\"\n        : type === \"airplane\"\n        ? \"airport\"\n        : type === \"home\"\n        ? \"estateAgent\"\n        : \"garage\";\n\n    const ownerKey = `${propertyKey}Owner`;\n    const profitKey = `${propertyKey}Profit`;\n\n    const propertyString =\n      type === \"weapon\"\n        ? getText(\"weaponShop\")\n        : type === \"protection\"\n        ? getText(\"weaponShop\")\n        : type === \"airplane\"\n        ? getText(\"airport\")\n        : type === \"home\"\n        ? getText(\"estateAgent\")\n        : getText(\"garage\");\n    return (\n      <View style={{ margin: 15 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {propertyString}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city[ownerKey] ? (\n                    <T>{city[ownerKey]}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city[ownerKey] === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: propertyKey,\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city[profitKey]}</T>\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    return (\n      <ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"weapon\", getText(\"weapons\"), 1)}\n          {this.renderMenu(\"protection\", getText(\"protection\"), 2)}\n          {this.renderMenu(\"airplane\", getText(\"airplane\"), 1)}\n          {this.renderMenu(\"home\", getText(\"homeShop\"), 1)}\n          {this.renderMenu(\"garage\", getText(\"garage\"), 1)}\n        </View>\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n            {this.renderCities()}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, numberFormat } from \"../Util\";\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nclass Status extends Component {\n  state = {\n    stats: [],\n  };\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        this.setState({ stats });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {this.state.stats?.map((stat, index) => {\n            const key = Object.keys(stat)[0];\n            const values = Object.values(stat)[0];\n            return (\n              <View key={`index${index}`} style={{ width: 300, margin: 20 }}>\n                <T style={{ fontWeight: \"bold\" }}>{keyNames[key]}</T>\n                {values instanceof Array ? (\n                  values.map((value, i) => {\n                    let v = value[key];\n                    if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                    if (key === \"createdAt\")\n                      v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                    if (key === \"strength\") v = getStrength(v, \"both\");\n                    if (key === \"rank\") v = getRank(v, \"both\");\n\n                    return (\n                      <View\n                        key={`stat${key}-${i}`}\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{value.name}: </T>\n                        <T key={`stat${key}-${i}`}>{v}</T>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{values}</T>\n                )}\n              </View>\n            );\n          })}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Status;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n        {me?.protectionAt > Date.now() ? (\n          <TouchableOpacity\n            onPress={() => {\n              //haalweg\n              fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ token: device.loginToken }),\n              })\n                .then((response) => response.json())\n                .then(async ({ response }) => {\n                  this.setState({ response });\n                  reloadMe(device.loginToken);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            <View>\n              <T>{getText(\"protectionInfo\", uur)}</T>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n\n        <Footer screenProps={screenProps} />\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={seconds}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 150, height: 110 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListHeaderComponent={renderHeader}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Origineel\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({ type: \"SET_LOGGED\", value: true });\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.token });\n\n          reloadMe(responseJson.token);\n\n          navigation.popToTop();\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import React, { Component } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass SuperMessage extends Component {\n  state = {\n    response: null,\n    message: null,\n  };\n  renderForm() {\n    const { me, device } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1, padding: 15 }}>\n        <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n\n        <TextInput\n          style={{ ...style(device.theme).textInput, height: 200 }}\n          placeholder={getText(\"message\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          multiline\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </ScrollView>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    return this.renderForm();\n  }\n}\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"landlord\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.landlordOwner ? (\n                    <T>{city.landlordOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.landlordOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"landlord\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <T>{city.landlordProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(0);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", { work: selected });\n    setResponse(response);\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {options.map((option, index) => {\n          return (\n            <TouchableOpacity\n              onPress={() => setSelected(index)}\n              key={`key${index}`}\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                paddingVertical: 10,\n                paddingHorizontal: 10,\n                borderRadius: 5,\n              }}\n            >\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <Checkbox active={selected === index} />\n                <T style={{ marginLeft: 10 }}>{option.title}</T>\n              </View>\n              <T>\n                {option.hours} {getText(\"hours\")}\n              </T>\n            </TouchableOpacity>\n          );\n        })}\n\n        <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n      </View>\n    </View>\n  );\n};\n\nexport default Work;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = { fetchMe, fetchCities, fetchStreetraces };\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n}\n\nexport default mySaga;\n","import { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\n\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  movements: Movement[],\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: false,\n  theme: DEFAULT_THEME,\n  foregrounded: 0,\n  movements: [],\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      return action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\"device\", \"me\", \"streetraces\", \"cities\"],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as StoreReview from \"expo-store-review\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createStackNavigator } from \"react-navigation-stack\";\n// import { loadReCaptcha } from \"react-recaptcha-v3\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport Dead from \"./components/Dead\";\nimport Fly from \"./components/Fly\";\nimport Header from \"./components/Header\";\nimport Jail from \"./components/Jail\";\nimport Constants from \"./Constants\";\nimport { KeyboardAvoidingSpace } from \"./KeyboardAvoidingSpace\";\nimport { leftMenu, rightMenu } from \"./Menus\";\nimport Accomplice from \"./screens/Accomplice\";\nimport AdminEmail from \"./screens/AdminEmail\";\nimport AdminUserWatch from \"./screens/AdminUserWatch\";\nimport Airport from \"./screens/Airport\";\nimport AllBanks from \"./screens/AllBanks\";\nimport Backfire from \"./screens/Backfire\";\nimport Bank from \"./screens/Bank\";\nimport Bomb from \"./screens/Bomb\";\nimport Bulletfactory from \"./screens/Bulletfactory\";\nimport Bunker from \"./screens/Bunker\";\nimport Casino from \"./screens/Casino\";\nimport ChangeName from \"./screens/ChangeName\";\nimport ChangePassword from \"./screens/ChangePassword\";\nimport Channel from \"./screens/Channel\";\nimport Channels from \"./screens/Channels\";\nimport Chat from \"./screens/Chat\";\nimport Contribute from \"./screens/Contribute\";\nimport CreateStreetrace from \"./screens/CreateStreetrace\";\nimport Crimes from \"./screens/Crimes\";\nimport Donate from \"./screens/Donate\";\nimport DownloadApp from \"./screens/DownloadApp\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Forum from \"./screens/Forum\";\nimport Garage from \"./screens/Garage\";\nimport Gym from \"./screens/Gym\";\nimport Hackers from \"./screens/Hackers\";\nimport Hoeren from \"./screens/Hoeren\";\nimport Home from \"./screens/Home\";\nimport Hospital from \"./screens/Hospital\";\nimport Income from \"./screens/Income\";\nimport Info from \"./screens/Info\";\nimport InfoGame from \"./screens/InfoGame\";\nimport InfoRules from \"./screens/InfoRules\";\nimport JailScreen from \"./screens/Jail\";\nimport Junkies from \"./screens/Junkies\";\nimport Kill from \"./screens/Kill\";\nimport Login from \"./screens/Login\";\nimport ManageObject from \"./screens/ManageObject\";\nimport Members from \"./screens/Members\";\nimport Messages from \"./screens/Messages\";\nimport MollieComplete from \"./screens/MollieComplete\";\nimport MyObjects from \"./screens/MyObjects\";\nimport MyProfile from \"./screens/MyProfile\";\nimport OrganisedCrime from \"./screens/OrganisedCrime\";\nimport Poker from \"./screens/Poker\";\nimport Police from \"./screens/Police\";\nimport Privacy from \"./screens/Privacy\";\nimport Prizes from \"./screens/Prizes\";\nimport Profile from \"./screens/Profile\";\nimport Racecars from \"./screens/Racecars\";\nimport RecoverPassword from \"./screens/RecoverPassword\";\nimport Rob from \"./screens/Rob\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport SignupEmail from \"./screens/SignupEmail\";\nimport SignupEmail2 from \"./screens/SignupEmail2\";\nimport Stats from \"./screens/Stats\";\nimport Status from \"./screens/Status\";\nimport StealCar from \"./screens/StealCar\";\nimport Streetrace from \"./screens/Streetrace\";\nimport SwissBank from \"./screens/SwissBank\";\nimport Theme from \"./screens/Theme\";\nimport VerifyPhone from \"./screens/VerifyPhone\";\nimport VerifyPhoneCode from \"./screens/VerifyPhoneCode\";\nimport VIP from \"./screens/VIP\";\nimport Wiet from \"./screens/Wiet\";\nimport Work from \"./screens/Work\";\nimport { persistor, store } from \"./Store\";\nimport { getTextFunction, post } from \"./Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    //iPad|\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nexport const renderMenu = (item, index, navigation, theme: Theme, dispatch) => {\n  const isHeaderStyle = item.isHeader\n    ? {\n        marginTop: 20,\n        backgroundColor: theme.secondary,\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderTopWidth: 1,\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderLeftColor: \"black\",\n        borderRightColor: \"black\",\n        borderTopColor: \"black\",\n        padding: 10,\n      }\n    : {};\n  return (\n    <TouchableOpacity\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <View\n        style={{\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n          borderBottomColor: \"black\",\n          borderLeftWidth: 1,\n          borderRightWidth: 1,\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n\n          borderBottomWidth: 1,\n          marginHorizontal: 5,\n          padding: 3,\n          flexDirection: \"row\",\n          ...isHeaderStyle,\n        }}\n      >\n        <Text\n          style={{\n            color: item.isHeader ? theme.secondaryText : theme.primaryText,\n            textAlign: item.isHeader ? \"center\" : undefined,\n          }}\n        >\n          {item.text}\n        </Text>\n        {item.component}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport const renderDrawerMenu = (item, index, navigation, theme, dispatch) => {\n  const isHeaderStyle = item.isHeader\n    ? {\n        marginTop: 20,\n        backgroundColor: theme.secondary,\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderTopWidth: 1,\n        borderTopColor: \"black\",\n        padding: 10,\n      }\n    : { backgroundColor: theme.primary };\n  return (\n    <TouchableOpacity\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <View\n        style={{\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n          borderBottomColor: \"black\",\n          borderBottomWidth: 1,\n          marginHorizontal: 5,\n          flexDirection: \"row\",\n          padding: 20,\n          ...isHeaderStyle,\n        }}\n      >\n        <Text\n          style={{\n            textAlign: item.isHeader ? \"center\" : undefined,\n            color: item.isHeader ? theme.secondaryText : theme.primaryText,\n          }}\n        >\n          {item.text}\n        </Text>\n        {item.component}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Layout = ({ screenProps, navigation, children }) => {\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    navigation.navigate(\"Messages\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      screenProps.dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (screenProps.device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const { me, device, dispatch } = screenProps;\n\n  if (Platform.OS === \"web\") {\n    if (getMobileOperatingSystem() === \"android\") {\n      console.log(\"is android\");\n      window.location.replace(Constants.ANDROID_APP_URL);\n    }\n\n    if (getMobileOperatingSystem() === \"ios\") {\n      console.log(\"is ios\");\n      window.location.replace(Constants.IOS_APP_URL);\n    }\n  }\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Messages\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <SafeAreaView\n      style={{\n        flexDirection: \"row\",\n        height: \"100%\",\n        backgroundColor: device.theme.primary,\n      }}\n    >\n      {Platform.OS === \"web\" && (\n        <Helmet>\n          <title>MasterCrimeZ - The Ultimate Game</title>\n          <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n          <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n          <meta property=\"og:type\" content=\"article\" />\n          <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n          <meta\n            property=\"og:description\"\n            content={getText(\"metaOgDescription\")}\n          />\n          <meta property=\"og:image\" content=\"\" />\n        </Helmet>\n      )}\n      {isSmallDevice ? null : (\n        <View style={{ width: 200 }}>\n          {leftMenu(me, device.theme).map((item, index) =>\n            renderMenu(item, index, navigation, device.theme, dispatch)\n          )}\n        </View>\n      )}\n\n      <View style={{ flex: 1 }}>\n        <Header navigation={navigation} device={device} me={me} />\n\n        {me?.reizenAt > Date.now() && !skip ? (\n          <Fly screenProps={screenProps} navigation={navigation} />\n        ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n          <Dead screenProps={screenProps} navigation={navigation} />\n        ) : me?.jailAt > Date.now() && !skip ? (\n          <Jail screenProps={screenProps} navigation={navigation} />\n        ) : (\n          <View style={{ flex: 1 }}>{children}</View>\n        )}\n        {Platform.OS === \"ios\" && <KeyboardAvoidingSpace />}\n      </View>\n      {isSmallDevice ? null : (\n        <View style={{ width: 200 }}>\n          {rightMenu(me, device.theme).map((item, index) =>\n            renderMenu(item, index, navigation, device.theme, dispatch)\n          )}\n        </View>\n      )}\n    </SafeAreaView>\n  );\n};\nexport const withLayout = (Component) => (props) => (\n  <Layout {...props}>\n    <Component {...props} />\n  </Layout>\n);\n\nconst CustomDrawerContentComponent = (props) => {\n  const {\n    navigation,\n    screenProps: { me, device, dispatch },\n  } = props;\n\n  return (\n    <ScrollView>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        forceInset={{ top: \"always\", horizontal: \"never\" }}\n      >\n        {leftMenu(me, device.theme).map((item, index) =>\n          renderDrawerMenu(item, index, navigation, device.theme, dispatch)\n        )}\n        {rightMenu(me, device.theme).map((item, index) =>\n          renderDrawerMenu(item, index, navigation, device.theme, dispatch)\n        )}\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\n\nconst rightContainer =\n  Platform.OS === \"web\" ? createBrowserApp : createAppContainer;\nconst rightNavigator =\n  Platform.OS === \"web\"\n    ? isSmallDevice\n      ? createDrawerNavigator\n      : createSwitchNavigator\n    : createStackNavigator;\n\nconst Container = rightContainer(\n  rightNavigator(\n    {\n      Home: {\n        screen: withLayout(Home),\n        path: \"\",\n      },\n      Status: withLayout(Status),\n      Hackers: withLayout(Hackers),\n      Police: withLayout(Police),\n      StealCar: withLayout(StealCar),\n      CreateStreetrace: withLayout(CreateStreetrace),\n      Channels: withLayout(Channels),\n      Channel: withLayout(Channel),\n      AllBanks: withLayout(AllBanks),\n      Poker: withLayout(Poker),\n      Bomb: withLayout(Bomb),\n      SwissBank: withLayout(SwissBank),\n\n      Crimes: withLayout(Crimes),\n      Jail: withLayout(JailScreen),\n      Kill: withLayout(Kill),\n      Rob: withLayout(Rob),\n      // Showroom: withLayout(Showroom),\n      Bank: withLayout(Bank),\n      Shop: withLayout(Shop),\n      Garage: withLayout(Garage),\n      ManageObject: withLayout(ManageObject),\n      MyObjects: withLayout(MyObjects),\n      Racecars: withLayout(Racecars),\n      Backfire: withLayout(Backfire),\n      Accomplice: withLayout(Accomplice),\n      Streetrace: withLayout(Streetrace),\n      Bulletfactory: withLayout(Bulletfactory),\n      Casino: withLayout(Casino),\n      Airport: withLayout(Airport),\n      Members: withLayout(Members),\n      Stats: withLayout(Stats),\n      Messages: withLayout(Messages),\n      Chat: withLayout(Chat),\n      Gym: withLayout(Gym),\n      Wiet: withLayout(Wiet),\n      MollieComplete: withLayout(MollieComplete),\n      OrganisedCrime: withLayout(OrganisedCrime),\n      Junkies: withLayout(Junkies),\n      Hoeren: withLayout(Hoeren),\n      Bunker: withLayout(Bunker),\n      Donate: withLayout(Donate),\n      Hospital: withLayout(Hospital),\n      Income: withLayout(Income),\n      AdminEmail: withLayout(AdminEmail),\n      AdminUserWatch: withLayout(AdminUserWatch),\n      Forum: withLayout(Forum),\n      Theme: withLayout(Theme),\n      DownloadApp: DownloadApp,\n      VIP: withLayout(VIP),\n      Profile: {\n        screen: withLayout(Profile),\n        path: \"Profile/:name\",\n      },\n\n      //SETTINGS\n      Settings: withLayout(Settings),\n      SignupEmail: withLayout(SignupEmail),\n\n      SignupEmail2: {\n        screen: withLayout(SignupEmail2),\n        path: \"SignupEmail2/:token\",\n      },\n\n      ChangeName: withLayout(ChangeName),\n      VerifyPhoneCode: withLayout(VerifyPhoneCode),\n      ForgotPassword: withLayout(ForgotPassword),\n      RecoverPassword: {\n        screen: withLayout(RecoverPassword),\n        path: \"RecoverPassword/:token\",\n      },\n      ChangePassword: {\n        screen: withLayout(ChangePassword),\n      },\n      VerifyPhone: withLayout(VerifyPhone),\n      MyProfile: withLayout(MyProfile),\n      Login: withLayout(Login),\n      Work: withLayout(Work),\n\n      //INFO\n      Info: withLayout(Info),\n      InfoGame: withLayout(InfoGame),\n      InfoRules: withLayout(InfoRules),\n      Privacy: withLayout(Privacy),\n      Contribute: withLayout(Contribute),\n      Prizes: withLayout(Prizes),\n    },\n    {\n      drawerPosition: \"right\",\n      edgeWidth: Platform.OS === \"web\" && isSmallDevice ? 0 : undefined,\n      contentComponent: CustomDrawerContentComponent,\n      unmountInactiveRoutes: true,\n      navigationOptions: {\n        drawerLockMode: \"locked-open\",\n      },\n      defaultNavigationOptions: {\n        headerShown: false,\n      },\n    }\n  ),\n  {\n    history: \"hash\",\n  }\n);\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nclass _RootContainer extends React.Component {\n  async componentDidMount() {\n    const { device, reloadMe, dispatch } = this.props;\n\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n\n    setInterval(() => this.sendMovements(), 60000);\n\n    Linking.addEventListener(\"url\", this.openWebUrl);\n    Linking.getInitialURL().then((url) => this.openWebUrl(url));\n  }\n\n  openWebUrl = (url) => {\n    console.log(\"should open web url here\", url);\n  };\n\n  sendMovements() {\n    const { dispatch, device } = this.props;\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { reloadMe, device } = this.props;\n    //if login or logout happens\n    if (prevProps.device.logged !== this.props.device.logged) {\n      reloadMe(device.loginToken);\n    }\n  }\n\n  render() {\n    const { props } = this;\n\n    return (\n      <ActionSheetProvider>\n        <Container screenProps={{ ...props }} />\n      </ActionSheetProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({ device, me, streetraces, cities }) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, cities };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) =>\n    dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } }),\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <PersistGate persistor={persistor}>\n        <Provider store={store}>\n          <RootContainer />\n        </Provider>\n      </PersistGate>\n    );\n  }\n}\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7be0b9f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bombarderen.3d0c7534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.75e0546a.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.d7c133b0.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.ada3efe7.png\";","var map = {\n\t\"./af\": 292,\n\t\"./af.js\": 292,\n\t\"./ar\": 293,\n\t\"./ar-dz\": 294,\n\t\"./ar-dz.js\": 294,\n\t\"./ar-kw\": 295,\n\t\"./ar-kw.js\": 295,\n\t\"./ar-ly\": 296,\n\t\"./ar-ly.js\": 296,\n\t\"./ar-ma\": 297,\n\t\"./ar-ma.js\": 297,\n\t\"./ar-sa\": 298,\n\t\"./ar-sa.js\": 298,\n\t\"./ar-tn\": 299,\n\t\"./ar-tn.js\": 299,\n\t\"./ar.js\": 293,\n\t\"./az\": 300,\n\t\"./az.js\": 300,\n\t\"./be\": 301,\n\t\"./be.js\": 301,\n\t\"./bg\": 302,\n\t\"./bg.js\": 302,\n\t\"./bm\": 303,\n\t\"./bm.js\": 303,\n\t\"./bn\": 304,\n\t\"./bn.js\": 304,\n\t\"./bo\": 305,\n\t\"./bo.js\": 305,\n\t\"./br\": 306,\n\t\"./br.js\": 306,\n\t\"./bs\": 307,\n\t\"./bs.js\": 307,\n\t\"./ca\": 308,\n\t\"./ca.js\": 308,\n\t\"./cs\": 309,\n\t\"./cs.js\": 309,\n\t\"./cv\": 310,\n\t\"./cv.js\": 310,\n\t\"./cy\": 311,\n\t\"./cy.js\": 311,\n\t\"./da\": 312,\n\t\"./da.js\": 312,\n\t\"./de\": 313,\n\t\"./de-at\": 314,\n\t\"./de-at.js\": 314,\n\t\"./de-ch\": 315,\n\t\"./de-ch.js\": 315,\n\t\"./de.js\": 313,\n\t\"./dv\": 316,\n\t\"./dv.js\": 316,\n\t\"./el\": 317,\n\t\"./el.js\": 317,\n\t\"./en-au\": 318,\n\t\"./en-au.js\": 318,\n\t\"./en-ca\": 319,\n\t\"./en-ca.js\": 319,\n\t\"./en-gb\": 320,\n\t\"./en-gb.js\": 320,\n\t\"./en-ie\": 321,\n\t\"./en-ie.js\": 321,\n\t\"./en-il\": 322,\n\t\"./en-il.js\": 322,\n\t\"./en-in\": 323,\n\t\"./en-in.js\": 323,\n\t\"./en-nz\": 324,\n\t\"./en-nz.js\": 324,\n\t\"./en-sg\": 325,\n\t\"./en-sg.js\": 325,\n\t\"./eo\": 326,\n\t\"./eo.js\": 326,\n\t\"./es\": 327,\n\t\"./es-do\": 328,\n\t\"./es-do.js\": 328,\n\t\"./es-us\": 329,\n\t\"./es-us.js\": 329,\n\t\"./es.js\": 327,\n\t\"./et\": 330,\n\t\"./et.js\": 330,\n\t\"./eu\": 331,\n\t\"./eu.js\": 331,\n\t\"./fa\": 332,\n\t\"./fa.js\": 332,\n\t\"./fi\": 333,\n\t\"./fi.js\": 333,\n\t\"./fil\": 334,\n\t\"./fil.js\": 334,\n\t\"./fo\": 335,\n\t\"./fo.js\": 335,\n\t\"./fr\": 336,\n\t\"./fr-ca\": 337,\n\t\"./fr-ca.js\": 337,\n\t\"./fr-ch\": 338,\n\t\"./fr-ch.js\": 338,\n\t\"./fr.js\": 336,\n\t\"./fy\": 339,\n\t\"./fy.js\": 339,\n\t\"./ga\": 340,\n\t\"./ga.js\": 340,\n\t\"./gd\": 341,\n\t\"./gd.js\": 341,\n\t\"./gl\": 342,\n\t\"./gl.js\": 342,\n\t\"./gom-deva\": 343,\n\t\"./gom-deva.js\": 343,\n\t\"./gom-latn\": 344,\n\t\"./gom-latn.js\": 344,\n\t\"./gu\": 345,\n\t\"./gu.js\": 345,\n\t\"./he\": 346,\n\t\"./he.js\": 346,\n\t\"./hi\": 347,\n\t\"./hi.js\": 347,\n\t\"./hr\": 348,\n\t\"./hr.js\": 348,\n\t\"./hu\": 349,\n\t\"./hu.js\": 349,\n\t\"./hy-am\": 350,\n\t\"./hy-am.js\": 350,\n\t\"./id\": 351,\n\t\"./id.js\": 351,\n\t\"./is\": 352,\n\t\"./is.js\": 352,\n\t\"./it\": 353,\n\t\"./it-ch\": 354,\n\t\"./it-ch.js\": 354,\n\t\"./it.js\": 353,\n\t\"./ja\": 355,\n\t\"./ja.js\": 355,\n\t\"./jv\": 356,\n\t\"./jv.js\": 356,\n\t\"./ka\": 357,\n\t\"./ka.js\": 357,\n\t\"./kk\": 358,\n\t\"./kk.js\": 358,\n\t\"./km\": 359,\n\t\"./km.js\": 359,\n\t\"./kn\": 360,\n\t\"./kn.js\": 360,\n\t\"./ko\": 361,\n\t\"./ko.js\": 361,\n\t\"./ku\": 362,\n\t\"./ku.js\": 362,\n\t\"./ky\": 363,\n\t\"./ky.js\": 363,\n\t\"./lb\": 364,\n\t\"./lb.js\": 364,\n\t\"./lo\": 365,\n\t\"./lo.js\": 365,\n\t\"./lt\": 366,\n\t\"./lt.js\": 366,\n\t\"./lv\": 367,\n\t\"./lv.js\": 367,\n\t\"./me\": 368,\n\t\"./me.js\": 368,\n\t\"./mi\": 369,\n\t\"./mi.js\": 369,\n\t\"./mk\": 370,\n\t\"./mk.js\": 370,\n\t\"./ml\": 371,\n\t\"./ml.js\": 371,\n\t\"./mn\": 372,\n\t\"./mn.js\": 372,\n\t\"./mr\": 373,\n\t\"./mr.js\": 373,\n\t\"./ms\": 374,\n\t\"./ms-my\": 375,\n\t\"./ms-my.js\": 375,\n\t\"./ms.js\": 374,\n\t\"./mt\": 376,\n\t\"./mt.js\": 376,\n\t\"./my\": 377,\n\t\"./my.js\": 377,\n\t\"./nb\": 378,\n\t\"./nb.js\": 378,\n\t\"./ne\": 379,\n\t\"./ne.js\": 379,\n\t\"./nl\": 380,\n\t\"./nl-be\": 381,\n\t\"./nl-be.js\": 381,\n\t\"./nl.js\": 380,\n\t\"./nn\": 382,\n\t\"./nn.js\": 382,\n\t\"./oc-lnc\": 383,\n\t\"./oc-lnc.js\": 383,\n\t\"./pa-in\": 384,\n\t\"./pa-in.js\": 384,\n\t\"./pl\": 385,\n\t\"./pl.js\": 385,\n\t\"./pt\": 386,\n\t\"./pt-br\": 387,\n\t\"./pt-br.js\": 387,\n\t\"./pt.js\": 386,\n\t\"./ro\": 388,\n\t\"./ro.js\": 388,\n\t\"./ru\": 389,\n\t\"./ru.js\": 389,\n\t\"./sd\": 390,\n\t\"./sd.js\": 390,\n\t\"./se\": 391,\n\t\"./se.js\": 391,\n\t\"./si\": 392,\n\t\"./si.js\": 392,\n\t\"./sk\": 393,\n\t\"./sk.js\": 393,\n\t\"./sl\": 394,\n\t\"./sl.js\": 394,\n\t\"./sq\": 395,\n\t\"./sq.js\": 395,\n\t\"./sr\": 396,\n\t\"./sr-cyrl\": 397,\n\t\"./sr-cyrl.js\": 397,\n\t\"./sr.js\": 396,\n\t\"./ss\": 398,\n\t\"./ss.js\": 398,\n\t\"./sv\": 399,\n\t\"./sv.js\": 399,\n\t\"./sw\": 400,\n\t\"./sw.js\": 400,\n\t\"./ta\": 401,\n\t\"./ta.js\": 401,\n\t\"./te\": 402,\n\t\"./te.js\": 402,\n\t\"./tet\": 403,\n\t\"./tet.js\": 403,\n\t\"./tg\": 404,\n\t\"./tg.js\": 404,\n\t\"./th\": 405,\n\t\"./th.js\": 405,\n\t\"./tk\": 406,\n\t\"./tk.js\": 406,\n\t\"./tl-ph\": 407,\n\t\"./tl-ph.js\": 407,\n\t\"./tlh\": 408,\n\t\"./tlh.js\": 408,\n\t\"./tr\": 409,\n\t\"./tr.js\": 409,\n\t\"./tzl\": 410,\n\t\"./tzl.js\": 410,\n\t\"./tzm\": 411,\n\t\"./tzm-latn\": 412,\n\t\"./tzm-latn.js\": 412,\n\t\"./tzm.js\": 411,\n\t\"./ug-cn\": 413,\n\t\"./ug-cn.js\": 413,\n\t\"./uk\": 414,\n\t\"./uk.js\": 414,\n\t\"./ur\": 415,\n\t\"./ur.js\": 415,\n\t\"./uz\": 416,\n\t\"./uz-latn\": 417,\n\t\"./uz-latn.js\": 417,\n\t\"./uz.js\": 416,\n\t\"./vi\": 418,\n\t\"./vi.js\": 418,\n\t\"./x-pseudo\": 419,\n\t\"./x-pseudo.js\": 419,\n\t\"./yo\": 420,\n\t\"./yo.js\": 420,\n\t\"./zh-cn\": 421,\n\t\"./zh-cn.js\": 421,\n\t\"./zh-hk\": 422,\n\t\"./zh-hk.js\": 422,\n\t\"./zh-mo\": 423,\n\t\"./zh-mo.js\": 423,\n\t\"./zh-tw\": 424,\n\t\"./zh-tw.js\": 424\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 672;","module.exports = __webpack_public_path__ + \"static/media/hacker.010dc613.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}