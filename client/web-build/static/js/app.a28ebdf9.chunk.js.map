{"version":3,"sources":["assets/icon.png","src/Constants.js","src/Util.js","src/components/Button.js","src/components/Dead.js","src/components/Fly.js","src/components/Chat.js","src/components/Header.js","src/updateHook.js","src/components/T.js","src/components/Jail.js","src/KeyboardAvoidingSpace.js","src/Menus.js","src/Style.js","src/screens/Accomplice.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Airport.js","src/components/Tabs.js","src/screens/Bank.js","src/screens/Donate.js","src/components/Captcha.js","src/screens/Income.js","src/screens/SwissBank.js","src/screens/AllBanks.js","src/screens/Backfire.js","src/screens/Bomb.js","src/screens/Bulletfactory.js","src/screens/Bunker.js","src/screens/Casino.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/screens/Channel.js","src/components/Separator.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateStreetrace.js","src/components/Footer.js","src/screens/Crimes.js","src/screens/DownloadApp.js","src/screens/ForgotPassword.js","src/screens/Forum.js","src/screens/Gang.js","src/components/H1.js","src/screens/GangAchievements.js","src/screens/GangCreate.js","src/screens/GangOc.js","src/screens/Gangs.js","src/screens/GangSettings.js","src/screens/GangShop.js","src/screens/Garage.js","src/screens/Gym.js","src/screens/Hackers.js","src/screens/Hoeren.js","src/screens/Home.js","src/screens/Hospital.js","src/components/Menu.js","src/screens/Info.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/ManageObject.js","src/screens/Market.js","src/components/User.js","src/screens/Members.js","src/screens/Messages.js","src/screens/MollieComplete.js","src/screens/MyObjects.js","src/screens/MyProfile.js","src/screens/OrganisedCrime.js","src/screens/Poker.js","src/screens/Police.js","src/screens/Privacy.js","src/screens/Prizes.js","src/screens/Profile.js","src/screens/Racecars.js","src/screens/RecoverPassword.js","src/screens/Rob.js","src/screens/Settings.js","src/screens/Shop.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/Stats.js","src/screens/Status.js","src/screens/StealCar.js","src/screens/Streetrace.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/Wiet.js","src/components/Checkbox.js","src/screens/Work.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","assets/dood.jpg","assets/logos/logo5.jpg","assets/bombarderen.jpg","assets/whatsapp.png","assets/instagram.png","assets/spotify.png","assets/youtube.png","node_modules/moment/locale sync /^/.//.*$","assets/gangshop/item1.jpg","assets/gangshop/item2.jpg","assets/gangshop/item3.jpg","assets/gangshop/item4.jpg","assets/gangshop/item5.jpg","assets/gangshop/item6.jpg","assets/gangshop/item7.jpg","assets/gangshop/item8.jpg","assets/gangshop/item9.jpg","assets/gangshop/item10.jpg","assets/gangshop/item11.jpg","assets/gangshop/item12.jpg","assets/hacker.jpeg","assets/politie.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["module","exports","Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","get","post","getUserColor","item","theme","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","length","prevExp","nowRank","diff","progress","percentage","Math","round","getRank","getStrength","isSmall","Dimensions","width","Button","icon","font","title","onPress","disabled","style","TheIcon","Icon","View","useSelector","state","device","TouchableOpacity","flexDirection","backgroundColor","secondary","padding","justifyContent","paddingHorizontal","marginRight","name","color","secondaryText","size","textAlign","Dead","selected","this","props","screenProps","me","reloadMe","getText","navigation","locale","reizenAt","Date","flex","alignItems","Image","source","height","Text","token","loginToken","option","setState","React","Component","Fly","sec","city","until","onFinish","timeToShow","timeLabels","m","s","Chat","chat","input","map","fontWeight","message","getChat","allText","Platform","select","web","default","borderWidth","borderColor","numberOfLines","navigate","fontSize","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","TextInput","value","placeholder","onChangeText","onSubmitEditing","text","nativeEvent","OS","location","reload","isSmallDevice","Header","updateAvailable","useState","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","useExpoUpdate","textStyle","marginBottom","notActivated","phoneVerified","numActions","borderRadius","marginTop","statsHeader","flexWrap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","gang","cash","bank","bullets","gamepoints","health","position","strength","chats","AntDesign","updateComponent","reloadAsync","webHeader","manifest","version","toggleDrawer","margin","Feather","backButton","routeName","hitSlop","top","left","right","bottom","goBack","T","children","bold","Jail","jail","renderItem","seconds","floor","jailAt","marginLeft","digitStyle","digitTxtStyle","buyOut","fetchMembers","interval","setInterval","log","clearInterval","order","marginVertical","FlatList","data","ListHeaderComponent","renderHeader","KeyboardAvoidingSpace","keyboardWillShow","e","StatusBar","currentHeight","onKeyboardWillShow","toValue","endCoordinates","offset","dim","isIPhoneXSize","isIPhoneXrSize","isIphoneX","Animated","timing","easing","Easing","ease","useNativeDriver","start","keyboardWillHide","onKeyboardWillHide","Value","bindListeners","unbindListeners","keyboardWillShowListener","Keyboard","addListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","remove","leftMenu","stealcarSeconds","ceil","autostelenAt","crimeSeconds","crimeAt","bunkerSeconds","bunkerAt","attackSeconds","attackAt","robSeconds","robAt","ocSeconds","ocAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","workSeconds","workAt","isHeader","iconType","to","component","level","filter","rightMenu","gangMenus","params","gangId","online","gameMod","admin","adminMenu","StyleSheet","create","textInput","container","Accomplice","accomplice","accomplice1","setAccomplice1","accomplice2","setAccomplice2","accomplice3","setAccomplice3","accomplice4","setAccomplice4","setResponse","submit","acc","alert","url","ScrollView","maxWidth","onFocus","Clipboard","setString","accomplices","placeholderTextColor","secondaryTextSoft","styles","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","id","setId","user","setUser","actions","setActions","movements","setMovements","getActions","ip","previous","Airport","renderFooter","openActionSheet","options","showActionSheetWithOptions","buttonIndex","connectActionSheet","Tabs","tabs","tab","isActive","borderRightWidth","borderRightColor","Bank","deposit","amount","row","keyValue","String","Donate","keys","names","wiet","junkies","hoeren","Captcha","onChangeCaptcha","captcha","random","onChangeRandom","uri","needCaptcha","MaterialCommunityIcons","Income","incomeAt","uren","uren2","sqrt","SwissBank","cities","reloadCities","becomeOwnerResponse","setBecomeOwnerResponse","setAmount","setType","becomeOwner","find","swissBank","swissBullets","bankOwner","bankProfit","paddingVertical","borderBottomWidth","borderBottomColor","Entypo","AllBanks","setTab","MyProfile","backfire","bf","Bomb","useActionSheet","bombs","setBombs","setCaptcha","setRandom","typeStrings","bulletFactory","casino","landlord","weaponShop","rld","airport","estateAgent","garage","airplane","Object","push","cancelButtonIndex","destructiveButtonIndex","Bulletfactory","setBullets","bulletFactoryOwner","bulletFactoryPrice","bulletFactoryProfit","bulletFactoryDamage","Bunker","price","minHeight","keyExtractor","extraData","ListFooterComponent","Casino","casinoOwner","casinoProfit","ChangeName","setName","ChangePassword","password1","password2","success","password","md5","str_md5","responseJson","minWidth","secureTextEntry","login","ImageInput","hasEdited","getPermissionAsync","Permissions","status","_pickImage","loading","ImagePicker","mediaTypes","All","allowsEditing","aspect","base64","result","cancelled","ImageManipulator","resize","format","PNG","manipulated","manipulatedBase64","onChange","SIZE","small","ActivityIndicator","Ionicons","isBigDevice","ChatScreen","fetchChat","isFetching","onRefresh","isMe","avatar","thumbnail","IMAGE_SIZE","marginHorizontal","isSystem","image","resizeMode","send","cid","STYLE","members","subid","SafeAreaView","contentContainerStyle","refreshControl","refreshing","inverted","ref","flatList","Separator","fetchChannelsubs","channelsubs","channelTitle","channel","userId","channelThumbnail","unread","lastmessage","ItemSeparatorComponent","Linking","openURL","CreateStreetrace","reloadStreetraces","setLoading","racecars","setRacecars","numParticipants","setNumParticipants","setPrice","car","setCar","cars","TabInput","auto","racecar","power","carId","Footer","setText","facebookShareUrl","copy","getFullYear","Crimes","kans","kans2","getMobileOperatingSystem","userAgent","navigator","vendor","window","opera","test","MSStream","DownloadApp","Login","email","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","multiline","moment","updatedAt","responses","createdAt","renderNew","renderTopics","Gangs","setItem","users","isOnline","onlineAt","H1","GangAchievements","setResult","achievements","stats","current","next","GangCreate","gangs","setGangs","invites","setInvites","getGangs","postGangAnswerInvite","accepted","requests","invite","gangName","numColumns","score","GangSettings","setRequests","setGang","username","setUsername","setGangName","profile","setProfile","setImage","isBullets","setIsBullets","showConfirmGangRemoveForm","setShowConfirmGangRemoveForm","showConfirmGangLeaveForm","setShowConfirmGangLeaveForm","getGang","postGangAnswerJoin","postGangTransaction","isToUser","getGangLevel","gangLevel","changeRank","postGangSetRank","request","member","postGangKick","quality","includes","GangShop","prices","items","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","MARGIN","v","itemId","postGangShop","Garage","fetchGroups","carGroups","reduce","bulkAction","action","upgradeCar","renderGroup","alignSelf","kogels","focusListener","view","Gym","Hoeren","renderCities","rldOwner","rldProfit","number","itemWidth","amountOfItems","Home","activeSlide","notificationsHeader","_handleAppStateChange","nextAppState","turnOnNotifications","sendLanguage","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","language","ExpoConstants","isDevice","existingStatus","finalStatus","pushtoken","Notifications","_renderItem","dispatch","menu","movement","locationX","locationY","timestamp","AppState","addEventListener","removeEventListener","filtered","isStats","IntentLauncher","c","_carousel","slice","sliderWidth","onSnapToItem","dotsLength","activeDotIndex","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","document","onmousemove","event","clientX","clientY","renderCarousel","Hospital","heal","Menu","IconFont","StoreReview","PrivacyPage","components","en","nl","strings","jailOwner","jailProfit","ListEmptyComponent","Junkies","junkiesOwner","junkiesProfit","Kill","kill","textDecorationLine","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","profitKey","priceKey","ownerKey","damageKey","Market","market","setMarket","buy","setBuy","validTypes","postMarketCreateOffer","User","extraIcon","country","primary","orders","Members","orderKey","orderBy","secondKey","o","searchedMembers","toLowerCase","fetchReadMessage","deleteMessage","getMessages","readMessage","fromName","read","renderMessages","MollieComplete","properties","MyObjects","p","property","propertyString","setPhoto","images","setImages","selectedImage","setSelectedImage","bio","setBio","fetchImages","pic","Wiet","Poker","poker","Config","onLinkPress","link","Prizes","ProfileScreen","getProfile","prevProps","points","total","hasImage","Racecars","fetchGarage","sellCar","crushCar","RecoverPassword","rob","__DEV__","Shop","fetchCities","fetchShop","propertyKey","renderMenu","t","respones","activate","activationToken","keyNames","newMembers","onlineToday","fetchStats","stat","values","Array","i","uur","protectionAt","StealCar","typeStart","finished","Streetrace","streetraces","RefreshControl","creator","streetraceParticipants","streetraceId","leave","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","phone","save","code","popToTop","Creditshop","setItems","credits","kooptext","kosten","Mollie","SuperMessage","VIP","landlordOwner","landlordProfit","Checkbox","active","Work","hours","setSelected","work","Api","fetchMe","payload","fetchStreetraces","mySaga","call","put","takeLatest","initDevice","logged","foregrounded","config","storage","AsyncStorage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","concat","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","isHeaderStyle","borderTopWidth","borderLeftWidth","borderLeftColor","borderTopColor","renderDrawerMenu","Layout","_handleNotificationResponse","notification","content","handleChange","available","ExpoNotifications","skip","Helmet","withLayout","Container","createBrowserApp","createAppContainer","createDrawerNavigator","createSwitchNavigator","createStackNavigator","screen","path","Gang","GangOc","Hackers","Police","Channels","Channel","JailScreen","Rob","Backfire","Stats","OrganisedCrime","AdminEmail","Forum","Theme","Profile","Settings","SignupEmail","SignupEmail2","VerifyPhoneCode","ForgotPassword","VerifyPhone","Info","InfoGame","InfoRules","Privacy","Contribute","drawerPosition","edgeWidth","contentComponent","forceInset","horizontal","unmountInactiveRoutes","navigationOptions","drawerLockMode","defaultNavigationOptions","headerShown","history","makeid","characters","charactersLength","charAt","_RootContainer","openWebUrl","sendMovements","getInitialURL","RootContainer","connect","App","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__","Error","resolve"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,4UCa5BC,EATG,CAChBC,YALiB,2BAMjBC,QAAS,2CACTC,YACE,2FACFC,gBACE,gF,yBCFEC,G,OAAa,SAACC,EAAQC,EAAQC,GAAjB,OACjBF,EAAOG,MAAMF,GAAQG,KAAKF,KAEfG,EAAY,SAACC,GAGxB,MAAqB,QAFHA,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,IAExC,KAAO,MAExBI,EAAkB,SAACD,GAAD,OAAgB,SAACE,GAC9C,IAAMC,EAAYH,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGhEO,EAAiBC,EAAQ,KAEX,OAAdF,IACFC,EAAiBC,EAAQ,MAPoC,IAU/D,IAAIX,EACFU,EAAeF,IAAf,sBACsBA,EADtB,iBAC0CF,EAD1C,IAX6D,mBAATM,EAAS,iCAATA,EAAS,kBAkB/D,OAJAA,EAAKC,SAAQ,SAACC,EAAKC,GACjBf,EAASD,EAAWC,EAAD,KAAae,EAAQ,GAAKD,MAGxCd,IAGIgB,EAAe,SAACC,GAC3B,aAAOA,OAAP,EAAOA,EAAGC,WAAWC,QAAQ,wBAAyB,MAuDjD,IAiBMC,EAAS,SAACC,EAAIC,GACzBC,qBAAU,WAER,OADAF,IACA,MAAOC,OAAP,EAAOA,MACN,KAEQE,EAAU,SAACC,EAAUC,EAAQC,GACxC,OAAOC,MAASlC,EAAUC,YAAd,IAA6B8B,EAAY,CACnDC,SACAG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAiB,SAAXD,EAAoBK,KAAKC,UAAUL,QAAQM,IAEhDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,yEACGH,GADH,+DAGLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIPE,EAAM,SAACjB,GAAD,OAAcD,EAAQC,EAAU,QACtCkB,EAAO,SAAClB,EAAUE,GAAX,OAAoBH,EAAQC,EAAU,OAAQE,IAqBrDiB,EAAe,SAACC,EAAMC,GAAP,OAC1BD,EAAKE,cAAgB,IACjB,MACAF,EAAKE,cAAgB,IACrB,SACAD,EAAME,aAENC,EAAQ,CACZ,CACEC,KAAM,SACNC,IAAK,IAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,EAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,kBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAIHE,GAAe,SAACH,EAAMI,EAAYC,GACtC,IAAMC,EAAMD,EAAKE,WAAU,SAACC,GAAD,OAAOR,EAAOQ,EAAEP,OACrCQ,EAAOH,EAAM,EAEbI,EAASL,EAAKC,GAAOD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","file":"static/js/app.a28ebdf9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d2180cfa.png\";","const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://192.168.1.38:4001\"; //192.168.1.38\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\",\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport { useEffect } from \"react\";\nimport { Alert, Dimensions, Platform, ScaledSize } from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport const getUserColor = (item, theme) =>\n  item.creditsTotal >= 10000\n    ? \"red\"\n    : item.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport { useSelector } from \"react-redux\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nconst Button = ({ icon, font, title, onPress, disabled, style }) => {\n  const TheIcon = font && icon ? Icon[font] : View;\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity onPress={disabled ? undefined : onPress}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: disabled ? `${theme.secondary}55` : theme.secondary,\n          padding: 10,\n          justifyContent: \"center\",\n          paddingHorizontal: isSmall ? 5 : 20,\n          // borderRadius: 20,\n          ...style,\n        }}\n      >\n        {font && icon ? (\n          <View style={{ marginRight: 20 }}>\n            <TheIcon name={icon} color={theme.secondaryText} size={20} />\n          </View>\n        ) : null}\n\n        {title && (\n          <Text style={{ textAlign: \"center\", color: theme.secondaryText }}>\n            {title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Image, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View>\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Dead;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getTextFunction } from \"../Util\";\n\nclass Fly extends React.Component {\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"flyYoureTravelingTo\", me?.city)}\n        </Text>\n        <CountDown\n          until={sec}\n          onFinish={() => {\n            reloadMe(device.loginToken);\n          }}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Fly;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  chat = () => {\n    const { chat } = this.state;\n    return chat.map((item, index) => (\n      <Text key={`item${index}`}>\n        <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n        {item.message}&nbsp;&nbsp;\n      </Text>\n    ));\n  };\n  render() {\n    const { device, navigation, me } = this.props;\n\n    const { chat, input } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const allText = chat\n      .map((item) => `${item.name}${item.message}`)\n      .join(\"::::\");\n    return (\n      <View style={{ height: Platform.select({ web: 50, default: 100 }) }}>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#444\",\n            borderWidth: 1,\n            borderColor: \"black\",\n            flexDirection: Platform.select({ web: \"row\", default: undefined }),\n          }}\n        >\n          {Platform.select({\n            web: (\n              <View style={{ flex: 1, justifyContent: \"center\" }}>\n                {allText ? (\n                  <Ticker>\n                    {({ index }) => {\n                      return (\n                        <>\n                          {chat.map((item, index) => (\n                            <Text\n                              style={{ color: \"white\" }}\n                              numberOfLines={1}\n                              key={`item${index}`}\n                            >\n                              <TouchableOpacity\n                                onPress={() => {\n                                  navigation.navigate(\"Profile\", {\n                                    name: item.name,\n                                  });\n                                }}\n                              >\n                                <Text style={{ fontWeight: \"bold\" }}>\n                                  {item.name}\n                                </Text>\n                              </TouchableOpacity>\n                              :&nbsp;{item.message}&nbsp;&nbsp;\n                            </Text>\n                          ))}\n                        </>\n                      );\n                    }}\n                  </Ticker>\n                ) : null}\n              </View>\n            ),\n\n            default: (\n              <MarqueeText\n                style={{ fontSize: 20 }}\n                duration={allText.length * 50}\n                marqueeOnStart\n                loop\n                marqueeDelay={200}\n                marqueeResetDelay={1000}\n              >\n                <>\n                  {chat.map((item, index) => (\n                    <Fragment key={`item${index}`}>\n                      <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                      :&nbsp;{item.message}&nbsp;&nbsp;\n                    </Fragment>\n                  ))}\n                </>\n              </MarqueeText>\n            ),\n          })}\n          <View style={{ width: 100, height: 30 }}>\n            <TextInput\n              value={input}\n              placeholder={getText(\"chatYourMessage\")}\n              style={{\n                backgroundColor: \"#404040\",\n                fontSize: 20,\n                color: \"white\",\n                flex: 1,\n                width: 100,\n              }}\n              onChangeText={(input) => this.setState({ input })}\n              onSubmitEditing={({ nativeEvent: { text } }) => {\n                fetch(`${Constants.SERVER_ADDR}/chat`, {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    token: device.loginToken,\n                    message: text,\n                  }),\n                })\n                  .then((response) => response.json())\n                  .then((chat) => {\n                    this.getChat();\n\n                    if (Platform.OS === \"web\") {\n                      location.reload();\n                    }\n\n                    this.setState({ input: \"\" });\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Chat from \"../components/Chat\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nconst isSmallDevice = width < 800;\n\nfunction Header({ navigation, device, me }) {\n  const getText = getTextFunction(me?.locale);\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: device.theme.secondaryText,\n  };\n\n  const notActivated = me?.phoneVerified === false && me?.numActions >= 20 && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const statsHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2,\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5,\n        }}\n      >\n        <Text style={textStyle}>\n          😎 {me?.name} {me?.gang?.name}\n        </Text>\n        <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n        <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon.MaterialCommunityIcons\n            name=\"pistol\"\n            size={18}\n            color={device.theme.secondaryText}\n            style={{ marginRight: 5 }}\n          />\n          <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n        </View>\n        <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n        <Text style={textStyle}>🌍 {me?.city}</Text>\n        <Text style={textStyle}>❤️ {me?.health}%</Text>\n        <Text style={textStyle}>\n          ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n        </Text>\n        <Text style={textStyle}>💪 {getStrength(me?.strength, \"both\")}</Text>\n        <Text style={textStyle} onPress={() => navigation.navigate(\"Channels\")}>\n          💬 {me?.chats}\n        </Text>\n      </View>\n\n      {!me?.phoneVerified && (\n        <View\n          style={{\n            padding: 5,\n            backgroundColor: device.theme.secondary,\n            borderRadius: 5,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"VerifyPhone\")}\n          >\n            <AntDesign\n              name=\"exclamationcircleo\"\n              color=\"red\"\n              style={{ marginRight: 10 }}\n            />\n            <Text\n              style={{ color: device.theme.secondaryText, fontWeight: \"bold\" }}\n            >\n              {getText(\"headerVerifyYourAccount\")}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const webHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <View style={{ alignItems: \"center\", flex: 1 }}>\n          <Image\n            source={require(\"../../assets/logos/logo5.jpg\")}\n            style={{\n              width: isSmallDevice ? 200 : 600,\n              height: isSmallDevice ? 33 : 100,\n            }}\n          />\n          {statsHeader}\n        </View>\n        <Text style={{ color: \"white\" }}>v{Constants.manifest.version}</Text>\n\n        {isSmallDevice ? (\n          <TouchableOpacity\n            onPress={() => {\n              navigation.toggleDrawer();\n            }}\n            style={{ margin: 10 }}\n          >\n            <Feather\n              name=\"menu\"\n              size={32}\n              color=\"#FFF\"\n              style={{ color: \"#FFF\" }}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      <Chat me={me} device={device} navigation={navigation} />\n    </View>\n  );\n\n  const backButton = (\n    <View\n      style={{\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n      }}\n    >\n      {navigation.state.routeName !== \"Home\" ? (\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => navigation.goBack()}\n        >\n          <AntDesign\n            name=\"arrowleft\"\n            size={32}\n            color={device.theme.secondaryText}\n          />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ height: 20 }} />\n      )}\n    </View>\n  );\n  return (\n    <View\n      style={{\n        justifyContent: \"center\",\n        backgroundColor: \"#555\",\n      }}\n    >\n      {Platform.OS === \"web\" ? (\n        webHeader\n      ) : (\n        <View style={{ backgroundColor: device.theme.secondary }}>\n          {backButton}\n          {updateComponent || notActivated || statsHeader}\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default Header;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\nclass Jail extends React.Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n\n    const { reloadMe, device } = this.props.screenProps;\n    this.interval = setInterval(() => {\n      reloadMe(device.loginToken);\n      this.fetchMembers();\n    }, 2500);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clear interval jail\");\n    clearInterval(this.interval);\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n      </View>\n    );\n  };\n\n  buyOut = async (type) => {\n    const { device, reloadMe } = this.props.screenProps;\n    const { response } = await post(\"buyout\", {\n      token: device.loginToken,\n      type,\n    });\n    this.setState({ response });\n    reloadMe(device.loginToken);\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { response } = this.state;\n    const sec = Math.round((me.jailAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <T>{getText(\"jailYoureInJail\")}</T>\n\n        <CountDown\n          until={sec}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n\n        <View style={{ height: 15 }} />\n\n        {response && <T>{response}</T>}\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCredits\")}\n          onPress={() => this.buyOut(\"credits\")}\n        />\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCash\")}\n          onPress={() => this.buyOut(\"cash\")}\n        />\n\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","import * as React from \"react\";\nimport { Animated, Easing, Keyboard, Platform, StatusBar } from \"react-native\";\nimport { isIphoneX } from \"./Util\";\n\ninterface KeyboardAvoidingSpaceProps {\n  onKeyboardWillShow?: (duration: number) => void;\n  onKeyboardWillHide?: (duration: number) => void;\n  offset?: number;\n}\n\ninterface KeyboardAvoidingSpaceState {\n  height: Animated.Value;\n}\n\n/**\n * Made with swag by yours truly\n * @author Brad \"Swagalicious\" Johnson\n */\nexport class KeyboardAvoidingSpace extends React.Component<\n  KeyboardAvoidingSpaceProps,\n  KeyboardAvoidingSpaceState\n> {\n  constructor(props: KeyboardAvoidingSpaceProps) {\n    super(props);\n    this.state = {\n      height: new Animated.Value(0),\n    };\n  }\n\n  componentDidMount() {\n    this.bindListeners();\n  }\n\n  componentWillUnmount() {\n    this.unbindListeners();\n  }\n\n  bindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        this.keyboardWillHide\n      );\n    } else {\n      this.keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        this.keyboardWillHide\n      );\n    }\n  }\n\n  unbindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    } else {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }\n\n  keyboardWillShow = (e: any) => {\n    // because of iPhone X new screen settings, remove SafeAreaView padding-bottom when keyboard is open\n    const SafeAreaViewPaddingBottom = 34;\n    const duration = e && e.duration ? e.duration : 100;\n    let notchHeight = 0;\n    if (\n      Platform.OS === \"android\" &&\n      StatusBar.currentHeight &&\n      StatusBar.currentHeight > 24\n    ) {\n      notchHeight = StatusBar.currentHeight;\n    }\n    // let suggestHeight = 0;\n    // if (Platform.OS === \"ios\") {\n    //   suggestHeight = 30;\n    // }\n    if (this.props.onKeyboardWillShow) {\n      this.props.onKeyboardWillShow(duration);\n    }\n\n    const toValue =\n      e.endCoordinates.height +\n      // suggestHeight +\n      // notchHeight -\n      (this.props.offset || 0) -\n      (isIphoneX() ? SafeAreaViewPaddingBottom : 0);\n\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  keyboardWillHide = (e: any) => {\n    const duration = e && e.duration ? e.duration : 100;\n    if (this.props.onKeyboardWillHide) {\n      this.props.onKeyboardWillHide(duration);\n    }\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    return <Animated.View style={{ height: this.state.height }} />;\n  }\n}\n","import React from \"react\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getTextFunction } from \"./Util\";\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n  const ocSeconds = Math.ceil((me?.ocAt + 120000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const workSeconds = Math.ceil((me?.workAt - Date.now()) / 1000);\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      isHeader: true,\n      text: getText(\"headerCrime\"),\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"car\",\n      text: getText(\"menuStealCar\"),\n      to: \"StealCar\",\n      component:\n        stealcarSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={stealcarSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"md-cash\",\n      text: getText(\"menuCrimes\"),\n      to: \"Crimes\",\n      component:\n        crimeSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={crimeSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuKill\"),\n      to: \"Kill\",\n      component:\n        attackSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={attackSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuRob\"),\n      to: \"Rob\",\n      component:\n        robSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={robSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"Ionicons\",\n      icon: \"md-cash\",\n      text: getText(\"menuOC\"),\n      to: \"OrganisedCrime\",\n      component:\n        ocSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={ocSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"AntDesign\",\n      icon: \"stepforward\",\n\n      text: getText(\"menuGym\"),\n      to: \"Gym\",\n      component:\n        gymSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={gymSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"tree\",\n\n      text: getText(\"menuWiet\"),\n      to: \"Wiet\",\n      component:\n        wietSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={wietSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"MaterialIcons\",\n      icon: \"people\",\n\n      text: getText(\"menuJunkies\"),\n      to: \"Junkies\",\n      component:\n        junkiesSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={junkiesSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"female\",\n\n      text: getText(\"menuProstitutes\"),\n      to: \"Hoeren\",\n      component:\n        hoerenSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={hoerenSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    me?.level > 1 && {\n      iconType: \"AntDesign\",\n      icon: \"tool\",\n      text: getText(\"menuWork\"),\n      to: \"Work\",\n      component:\n        workSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={workSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bars\",\n\n      text: getText(\"menuJail\", me?.jail),\n      to: \"Jail\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n      isHeader: true,\n      text: getText(\"headerSpend\"),\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bank\",\n      text: getText(\"menuBank\"),\n      to: \"AllBanks\",\n    },\n\n    me?.level > 1 && {\n      iconType: \"FontAwesome\",\n      icon: \"bank\",\n      text: getText(\"menuMarket\"),\n      to: \"Market\",\n    },\n\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuBulletfactory\"),\n      to: \"Bulletfactory\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bomb\",\n      text: getText(\"menuBomb\"),\n      to: \"Bomb\",\n    },\n\n    {\n      iconType: \"FontAwesome5\",\n      icon: \"dice\",\n      text: getText(\"menuCasino\"),\n      to: \"Casino\",\n    },\n\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"warehouse\",\n      text: getText(\"menuBunker\"),\n      to: \"Bunker\",\n      component:\n        bunkerSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={bunkerSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome5\",\n      icon: \"hospital\",\n      text: getText(\"menuHospital\"),\n      to: \"Hospital\",\n    },\n\n    {\n      iconType: \"Entypo\",\n      icon: \"shop\",\n      text: getText(\"menuShop\"),\n      to: \"Shop\",\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-car\",\n      text: getText(\"menuGarage\"),\n      to: \"Garage\",\n    },\n    {\n      iconType: \"MaterialIcons\",\n      icon: \"local-car-wash\",\n      text: getText(\"menuRacecars\"),\n      to: \"Racecars\",\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"car-key\",\n      text: getText(\"menuStreetrace\"),\n      to: \"Streetrace\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"plane\",\n      text: getText(\"menuAirport\"),\n      to: \"Airport\",\n    },\n  ].filter((x) => !!x);\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level > 1\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            isHeader: true,\n            text: getText(\"headerAdminPanel\"),\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuHackers\"),\n            to: \"Hackers\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuPolice\"),\n            to: \"Police\",\n          },\n        ]\n      : [];\n\n  const admin =\n    me?.level >= 10\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            text: getText(\"menuAdminEmail\"),\n            to: \"AdminEmail\",\n          },\n        ]\n      : [];\n\n  return [...gameMod, ...admin];\n};\n\nexport const rightMenu = (me, theme) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gangMenus =\n    me?.level > 1\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            isHeader: true,\n            text: me?.gang?.name || getText(\"headerGang\"),\n            to: \"Gang\",\n            params: { name: me?.gang?.name },\n          },\n\n          !me?.gangId && {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangCreate\"),\n            to: \"GangCreate\",\n          },\n          {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangs\"),\n            to: \"Gangs\",\n          },\n\n          me?.gangId && {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangSettings\"),\n            to: \"GangSettings\",\n          },\n\n          me?.gangId && {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangShop\"),\n            to: \"GangShop\",\n          },\n\n          me?.gangId && {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangAchievements\"),\n            to: \"GangAchievements\",\n          },\n          // me?.gangId && {\n          //   iconType: \"Ionicons\",\n          //   icon: \"ios-people\",\n          //   text: getText(\"menuGangOc\"),\n          //   to: \"GangOc\",\n          // },\n        ].filter((x) => !!x)\n      : [];\n\n  return [\n    // {\n    //   iconType: \"FontAwesome\",\n    //   icon: \"font\",\n\n    //   isHeader: true,\n    //   text: me?.name,\n    //   to: \"Profile\",\n    //   params: { name: me?.name },\n    // },\n\n    // {\n    //   isStats: true,\n    //   iconType: \"FontAwesome\",\n    //   icon: \"font\",\n\n    //   text: getText(\"menuCash\", numberFormat(me?.cash)),\n    // },\n\n    // {\n    //   isStats: true,\n\n    //   iconType: \"FontAwesome\",\n    //   icon: \"font\",\n\n    //   text: getText(\"menuBankMoney\", numberFormat(me?.bank)),\n    // },\n    // {\n    //   isStats: true,\n\n    //   iconType: \"FontAwesome\",\n    //   icon: \"font\",\n\n    //   text: getText(\"menuBullets\", numberFormat(me?.bullets)),\n    // },\n    // {\n    //   isStats: true,\n\n    //   iconType: \"FontAwesome\",\n    //   icon: \"font\",\n    //   text: getText(\"menuRank\", getRank(me?.rank, \"both\")),\n    // },\n    // {\n    //   isStats: true,\n\n    //   iconType: \"FontAwesome\",\n    //   icon: \"font\",\n\n    //   text: getText(\"menuHealth\", me?.health),\n    // },\n    // {\n    //   isStats: true,\n\n    //   iconType: \"FontAwesome\",\n    //   icon: \"font\",\n\n    //   text: getText(\"menuCity\", me?.city),\n    // },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      isHeader: true,\n      text: getText(\"headerSociety\"),\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-people\",\n\n      text: getText(\"menuMembers\", me?.online),\n      to: \"Members\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuStats\"),\n      to: \"Stats\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuMyObjects\"),\n      to: \"MyObjects\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuStatus\"),\n      to: \"Status\",\n    },\n\n    ...gangMenus,\n\n    {\n      iconType: \"Entypo\",\n      icon: \"info-with-circle\",\n\n      isHeader: true,\n      text: getText(\"headerGeneral\"),\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-chatbubbles\",\n      text: getText(\"menuChat\"),\n      to: \"Chat\",\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-chatbubbles\",\n      text: getText(\"menuChannels\", me?.chats),\n      to: \"Channels\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"wechat\",\n\n      text: getText(\"menuForum\"),\n      to: \"Forum\",\n    },\n\n    {\n      iconType: \"SimpleLineIcons\",\n      icon: \"settings\",\n\n      text: getText(\"menuSettings\"),\n      to: \"Settings\",\n    },\n\n    {\n      iconType: \"Entypo\",\n      icon: \"info-with-circle\",\n\n      text: getText(\"menuInfo\"),\n      to: \"Info\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bank\",\n      text: getText(\"menuVIP\"),\n      to: \"VIP\",\n    },\n\n    ...adminMenu(me),\n  ];\n};\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  ScrollView,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { default as style, default as styles } from \"../Style\";\nimport { getRank, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst Accomplice = ({\n  navigation,\n  screenProps: {\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [accomplice1, setAccomplice1] = useState(me?.accomplice);\n  const [accomplice2, setAccomplice2] = useState(me?.accomplice2);\n  const [accomplice3, setAccomplice3] = useState(me?.accomplice3);\n  const [accomplice4, setAccomplice4] = useState(me?.accomplice4);\n  const [response, setResponse] = useState(null);\n\n  const submit = (acc) => {\n    //how to set accomplice acc from params to the right body?\n\n    fetch(`${Constants.SERVER_ADDR}/setAccomplice`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        accomplice: accomplice1,\n        accomplice2,\n        accomplice3,\n        accomplice4,\n        loginToken: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response }) => {\n        setResponse(response);\n        reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    const accomplice = navigation.state.params?.accomplice;\n    if (accomplice) {\n      submit(accomplice);\n    }\n  }, []);\n\n  const rank = getRank(me?.rank, \"number\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n      }}\n    >\n      <View style={{ maxWidth: 600, margin: 20 }}>\n        <T>{getText(\"accompliceInfo\")}</T>\n\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"accompliceLinkText\")}</T>\n          <TextInput\n            value={url}\n            onFocus={() => {\n              Clipboard.setString(url);\n              setResponse(getText(\"copiedToClipboard\"));\n            }}\n            style={style(theme).textInput}\n          />\n        </View>\n\n        <T bold>{getText(\"yourAccomplicesHeader\")}</T>\n        {me?.accomplices.length > 0 ? (\n          me?.accomplices.map((accomplice) => {\n            return keyValue(accomplice.name, getRank(accomplice.rank, \"both\"));\n          })\n        ) : (\n          <T>{getText(\"accomplicesNone\")}</T>\n        )}\n\n        <T bold style={{ marginTop: 15 }}>\n          {getText(\"accompliceWhoseYouWantToBe\")}\n        </T>\n        <T>{response}</T>\n\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={styles(theme).textInput}\n          value={accomplice1}\n          onChangeText={setAccomplice1}\n          placeholder={getText(\"accomplice\", 1)}\n        />\n\n        {rank >= 11 ? (\n          <TextInput\n            placeholderTextColor={theme.secondaryTextSoft}\n            style={styles(theme).textInput}\n            value={accomplice2}\n            onChangeText={setAccomplice2}\n            placeholder={getText(\"accomplice\", 2)}\n          />\n        ) : null}\n\n        {rank >= 16 ? (\n          <>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={styles(theme).textInput}\n              value={accomplice3}\n              onChangeText={setAccomplice3}\n              placeholder={getText(\"accomplice\", 3)}\n            />\n\n            <TextInput\n              style={styles(theme).textInput}\n              value={accomplice4}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={setAccomplice4}\n              placeholder={getText(\"accomplice\", 4)}\n            />\n          </>\n        ) : null}\n\n        <Button title={getText(\"save\")} onPress={submit} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Accomplice;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <T bold style={{ marginTop: 20 }}>\n                      {ip.ip}\n                    </T>\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Airport extends Component {\n  state = {\n    response: null,\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        style={{ borderRadius: 10, marginTop: 20 }}\n        title={getText(\"fly\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/airport`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: device.loginToken,\n              to,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      \"Paris\",\n      \"Barcelona\",\n      \"London\",\n      \"Berlin\",\n      \"Lisbon\",\n      \"Rome\",\n      \"Dublin\",\n      \"Madrid\",\n      \"Brussels\",\n      \"Bali\",\n      \"New York\",\n      \"San Fransisco\",\n      \"Amsterdam\",\n    ];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ to: options[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n    return (\n      <View>\n        <Button\n          title={this.state.to ? this.state.to : getText(\"chooseCity\")}\n          onPress={this.openActionSheet}\n        />\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Airport);\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"getCTA\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/income`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                captcha: this.state.captcha,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async (response) => {\n                this.setState({ response, captcha: \"\", random: Math.random() });\n                this.props.screenProps.reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"income\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n      </View>\n    );\n  };\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const incomeAt = me.incomeAt ? me.incomeAt : 0;\n    const uren = Math.round((Date.now() - incomeAt) / 3600000);\n    const uren2 = uren > 24 ? 24 : uren;\n    const amount = Math.round(\n      (me.junkies + me.hoeren + me.wiet) * 50 * Math.sqrt(uren2)\n    );\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.keyValue(getText(\"hours\"), getText(\"xHours\", uren2))}\n        {this.keyValue(getText(\"totalProfit\"), `${amount},-`)}\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Income;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bank from \"./Bank\";\nimport Donate from \"./Donate\";\nimport Income from \"./Income\";\nimport SwissBank from \"./SwissBank\";\nconst AllBanks = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const [tab, setTab] = useState(\"bank\");\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"menuBank\"),\n            isActive: tab === \"bank\",\n            onPress: () => setTab(\"bank\"),\n          },\n          {\n            title: getText(\"menuSwissBank\"),\n            isActive: tab === \"swissBank\",\n            onPress: () => setTab(\"swissBank\"),\n          },\n\n          {\n            title: getText(\"menuDonate\"),\n            isActive: tab === \"donate\",\n            onPress: () => setTab(\"donate\"),\n          },\n          {\n            title: getText(\"menuIncome\"),\n            isActive: tab === \"income\",\n            onPress: () => setTab(\"income\"),\n          },\n        ]}\n      />\n\n      {tab === \"bank\" && <Bank {...props} />}\n      {tab === \"swissBank\" && <SwissBank {...props} />}\n      {tab === \"donate\" && <Donate {...props} />}\n      {tab === \"income\" && <Income {...props} />}\n    </View>\n  );\n};\nexport default AllBanks;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Image, ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst Bomb = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bombs, setBombs] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"bomb\", {\n      loginToken: device.loginToken,\n      bombs,\n      type,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  const airplanes = [\n    \"\",\n    \"Fokker\",\n    \"Fleet\",\n    \"Havilland\",\n    \"Cessna\",\n    \"Douglas\",\n    \"Lear Jet\",\n    \"Raket\",\n  ];\n\n  const selectType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = Object.keys(typeStrings).map(\n      (type) =>\n        `${typeStrings[type]} (${city[`${type}Damage`]}% ${getText(\n          \"damage\"\n        )}, €${numberFormat(city[`${type}Profit`])} ${getText(\"profit\")})`\n    );\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex !== options.length - 1) {\n          setType(Object.keys(typeStrings)[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {\n        <>\n          <Image source={require(\"../../assets/bombarderen.jpg\")} />\n          <Text style={{ color: theme.primaryText }}>\n            {me?.airplane === 0\n              ? getText(\"bombNoAirplane\")\n              : getText(\n                  \"bombAirplaneText\",\n                  airplanes[me?.airplane],\n                  me?.airplane * 5\n                )}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <T style={{ marginTop: 15 }}>{getText(\"bombs\")}</T>\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bombs}\n            onChangeText={(x) => setBombs(x)}\n            style={style(theme).textInput}\n          />\n\n          <T style={{ marginVertical: 15 }}>{getText(\"property\")}</T>\n          <Button\n            onPress={selectType}\n            title={type ? typeStrings[type] : getText(\"whichProperty\")}\n          />\n\n          {type ? (\n            <T>\n              {getText(\n                \"bombInfo\",\n                typeStrings[type],\n                city[`${type}Damage`],\n                numberFormat(city[`${type}Profit`]),\n                city[`${type}Owner`] || `(Niemand)`\n              )}\n            </T>\n          ) : null}\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button\n            style={{ marginTop: 15 }}\n            title={getText(\"bombAction\")}\n            onPress={submit}\n          />\n        </>\n      }\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bomb;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Casino = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"casino\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.casinoOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.casinoOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"casinoInfo2\", city?.casinoProfit)}\n          </Text>\n\n          <Button\n            onPress={() => navigation.navigate(\"Poker\")}\n            title={getText(\"poker\")}\n          />\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.casinoOwner ? (\n                  <T>{city.casinoOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.casinoOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"casino\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.casinoProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Casino;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button onPress={changeName} title={getText(\"change\")} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst getText = getTextFunction();\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n        return false;\n      }\n      return true;\n    }\n    return true;\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as React from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\nconst maxWidth = isBigDevice ? 500 : width;\n\nconst IMAGE_SIZE = 40;\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      members: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      navigation: {\n        state: { params },\n      },\n      screenProps: {\n        device: { loginToken },\n        reloadMe,\n      },\n    } = this.props;\n    this.fetchChat();\n    this.interval = setInterval(() => {\n      this.fetchChat();\n      post(\"setRead\", { loginToken, id: params?.subid });\n      reloadMe(loginToken);\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  fetchChat = () => {\n    const {\n      screenProps: { device },\n      navigation: {\n        state: { params },\n      },\n    } = this.props;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/channelmessage?loginToken=${device.loginToken}&id=${params.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat, isFetching: false }, () => {});\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChat();\n    });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me },\n      navigation,\n    } = this.props;\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.name });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            flex: 1,\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{item.user?.name}</Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <Text>{item.message}</Text>\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  send = () => {\n    const {\n      screenProps: { device },\n      navigation: {\n        state: { params },\n      },\n    } = this.props;\n    const { image, message, hasEdited } = this.state;\n\n    this.setState({ message: \"\", image: null });\n\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.fetchChat();\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { image, message, hasEdited, response } = this.state;\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) =>\n              this.setState({\n                hasEdited: true,\n                image: base64,\n              })\n            }\n          />\n\n          <TextInput\n            onSubmitEditing={this.send}\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={(message) => this.setState({ message })}\n          />\n\n          <TouchableOpacity onPress={this.send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const { chat } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 200 : undefined,\n          }}\n          data={chat}\n          renderItem={this.renderItem}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n          inverted\n          ref={(ref) => (this.flatList = ref)}\n        />\n        {this.renderFooter()}\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default ChatScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { post } from \"../Util\";\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channelsubs: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChannelsubs();\n\n    this.interval = setInterval(() => this.fetchChannelsubs(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  fetchChannelsubs = () => {\n    const {\n      screenProps: { device },\n    } = this.props;\n    fetch(\n      `${Constants.SERVER_ADDR}/channelsubs?loginToken=${device.loginToken}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((channelsubs) => {\n        if (channelsubs.response) {\n          this.setState({ response: channelsubs.response });\n        } else {\n          this.setState({ channelsubs });\n        }\n        this.setState({ isFetching: false });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user.name\n      : \"(RAAAR)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          .thumbnail\n      : null;\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          {channelThumbnail ? (\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + channelThumbnail }}\n              style={{ width: 60, height: 60, borderRadius: 30 }}\n            />\n          ) : (\n            <View\n              style={{\n                width: 60,\n                height: 60,\n                borderRadius: 30,\n                backgroundColor: \"#CCC\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n            </View>\n          )}\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20, flex: 1 }}>\n            <T bold>\n              {/* name or other person in chat */}\n              {channelTitle}\n            </T>\n            {item.lastmessage ? (\n              <T numberOfLines={1}>{item.lastmessage}</T>\n            ) : null}\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const { navigation } = this.props;\n    const { channelsubs } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          data={channelsubs}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default ChatScreen;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    this.interval = setInterval(() => this.getChat(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  Image,\n  Linking,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nfunction Footer({ navigation, screenProps: { me } }) {\n  const getText = getTextFunction(me?.locale);\n\n  const theme = useSelector((state) => state.device.theme);\n  const [text, setText] = useState(\"\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmastercrimez.com%2F#%2FAccomplice%2F?accomplice=${me?.name}`;\n\n  const copy = () => {\n    Clipboard.setString(url);\n    setText(\"Gekopiëerd naar klembord\");\n  };\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 10 }}>\n        <T bold>{getText(\"footerInviteFriends\")}</T>\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"footerInviteText\")}</T>\n          <View style={{ flexDirection: \"row\" }}>\n            <TextInput\n              value={url}\n              style={{\n                color: theme.secondaryText,\n                backgroundColor: theme.secondary,\n                height: 35,\n                borderRadius: 10,\n                paddingHorizontal: 10,\n                width: 200,\n              }}\n              onFocus={copy}\n            />\n            <Button title={getText(\"footerCopy\")} onPress={copy} />\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <T>{getText(\"footerShare\")}</T>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(facebookShareUrl);\n              }}\n            >\n              <View\n                style={{\n                  marginLeft: 20,\n                  backgroundColor: \"#3b5998\",\n                  width: 40,\n                  height: 40,\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n              </View>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(\n                  `whatsapp://send?text=${getText(\"footerWhatsappText\", url)}`\n                );\n              }}\n            >\n              <Image\n                source={require(\"../../assets/whatsapp.png\")}\n                style={{ width: 55, height: 55 }}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"footerFollowUs\")}</T>\n        <TouchableOpacity\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.facebook.com/Mastercrimez-100872595072798\"\n            );\n          }}\n        >\n          <View\n            style={{\n              marginLeft: 20,\n              backgroundColor: \"#3b5998\",\n              width: 40,\n              height: 40,\n              borderRadius: 20,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\"https://www.instagram.com/mastercrimez.nl/\");\n          }}\n        >\n          <Image\n            source={require(\"../../assets/instagram.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://open.spotify.com/playlist/5n5j78gTXOM9h2SOdz0Ay5?si=9gBkeObkTXaqFZxHLFutIA\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/spotify.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.youtube.com/channel/UCGqGRq-iNxXdLrMx9AlD7qw\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/youtube.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={{ height: 20 }} />\n\n      <Text style={{ color: theme.primaryText }}>\n        &copy; MasterCrimeZ 2006-{new Date().getFullYear()}\n      </Text>\n    </View>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","const { Platform, Linking, View, Text } = require(\"react-native\");\nimport React from \"react\";\nimport Constants from \"../Constants\";\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nconst DownloadApp = () => {\n  if (getMobileOperatingSystem() === \"android\") {\n    console.log(\"is android\");\n    window.location.replace(Constants.ANDROID_APP_URL);\n  }\n\n  if (getMobileOperatingSystem() === \"ios\") {\n    console.log(\"is ios\");\n    window.location.replace(Constants.IOS_APP_URL);\n  }\n\n  console.log(getMobileOperatingSystem());\n\n  return (\n    <View>\n      <Text>Download the app!</Text>\n    </View>\n  );\n};\nexport default DownloadApp;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n        <TextInput\n          multiline\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          numberOfLines={4}\n          style={{ ...style(device.theme).textInput, height: 150 }}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n                <T>{response.message}</T>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={style(device.theme).textInput}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            placeholder={getText(\"react\")}\n            value={this.state.message}\n            onChangeText={(message) => this.setState({ message })}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Image,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getTextFunction,\n  getUserColor,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const [response, setResponse] = useState(null);\n\n  const name = navigation.state.params?.name;\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${name}`);\n    setLoading(false);\n    setItem(gang);\n  };\n\n  const postGangJoin = async () => {\n    setLoading(true);\n\n    const { response } = await post(`gangJoin`, {\n      token: device.loginToken,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getGang);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      <View style={{ margin: MARGIN, flexDirection: \"row\", flexWrap: \"wrap\" }}>\n        <View>\n          {item.image ? (\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + item.image }}\n              style={{ width: SIZE, height: SIZE }}\n              resizeMode=\"cover\"\n            />\n          ) : (\n            <Image\n              source={require(\"../../assets/icon.png\")}\n              style={{ width: SIZE, height: SIZE }}\n            />\n          )}\n        </View>\n        <View style={{ margin: MARGIN }}>\n          {loading ? <ActivityIndicator /> : null}\n          <T>\n            {getText(\"name\")}: {item.name}\n          </T>\n          <T>\n            {getText(\"members\")}: {item.members}\n          </T>\n          <T>\n            {getText(\"bank\")}: €{numberFormat(item.bank)},-\n          </T>\n          <T>\n            {getText(\"power\")}: {item.power}\n          </T>\n          {!me?.gang &&\n            (response ? (\n              <T>{response}</T>\n            ) : (\n              <Button\n                onPress={postGangJoin}\n                title={getText(\"gangJoinCTA\")}\n                theme={theme}\n              />\n            ))}\n        </View>\n      </View>\n\n      <FlatList\n        data={item.users}\n        keyExtractor={(item, index) => `item${index}`}\n        renderItem={({ item, index }) => {\n          const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n\n          const color = getUserColor(item, theme);\n\n          return (\n            <View\n              key={`item${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                height: 40,\n                alignItems: \"center\",\n                paddingHorizontal: 20,\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  navigation.navigate(\"Profile\", { name: item.name });\n                }}\n              >\n                <T style={{ color }}>{item.name}</T>\n              </TouchableOpacity>\n              <T>{isOnline ? \"✅\" : \"🛑\"}</T>\n              <T>❤️ {item.health}%</T>\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst GangAchievements = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n\n  const getGangAchievements = async () => {\n    setLoading(true);\n    const result = await get(`gangAchievements?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangAchievements);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>\n              {getText(\"power\")}: {result.power}\n            </H1>\n          </View>\n          {result.achievements &&\n            Object.keys(result.achievements).map((key) => {\n              const stats = result.achievements[key];\n\n              return (\n                <View style={{ marginBottom: 20 }}>\n                  <T bold>{getText(key)}</T>\n                  <T>\n                    {getText(\"current\")}: {stats.current}\n                  </T>\n                  <T>\n                    {getText(\"level\")}: {stats.level}\n                  </T>\n                  <T>\n                    {getText(\"next\")}:{\" \"}\n                    {stats.next ? stats.next : getText(\"maximumLevel\")}\n                  </T>\n                </View>\n              );\n            })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangAchievements;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  const postGangCreate = async () => {\n    const { response } = await post(\"gangCreate\", {\n      name,\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <TextInput\n        value={name}\n        onChangeText={setName}\n        style={style(theme).textInput}\n        placeholder=\"Name\"\n        placeholderTextColor={theme.secondaryTextSoft}\n      />\n      <Button\n        onPress={postGangCreate}\n        title={getText(\"gangCreateCTA\")}\n        theme={theme}\n      />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 100;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [gangs, setGangs] = useState([]);\n  const [invites, setInvites] = useState([]);\n\n  const getGangs = async () => {\n    setLoading(true);\n    const { gangs } = await get(\"gangs\");\n    setLoading(false);\n    setGangs(gangs);\n  };\n\n  const getInvites = async () => {\n    const { requests, invites } = await get(\n      `gangInvites?token=${device.loginToken}`\n    );\n    setInvites(invites);\n  };\n\n  const postGangAnswerInvite = async (id, accepted) => {\n    const { response } = await post(\"gangAnswerInvite\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setResponse(response);\n  };\n\n  doOnce(getGangs);\n  doOnce(getInvites);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      {invites.length > 0 &&\n        invites.map((invite, index) => {\n          return (\n            <View key={`invite${index}`} style={{ flexDirection: \"row\" }}>\n              <T>{getText(\"gangInvitedTo\", invite.gangName)}</T>\n              <Button\n                title={getText(\"accept\")}\n                onPress={() => postGangAnswerInvite(invite.id, true)}\n              />\n              <Button\n                title={getText(\"decline\")}\n                onPress={() => postGangAnswerInvite(invite.id, false)}\n              />\n            </View>\n          );\n        })}\n\n      <FlatList\n        refreshing={loading}\n        onRefresh={getGangs}\n        data={gangs}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n            : undefined\n        }\n        keyExtractor={(item, index) => `gang${index}`}\n        renderItem={({ item, index }) => {\n          const navigate = () =>\n            navigation.navigate(\"Gang\", { name: item.name });\n          return (\n            <TouchableOpacity onPress={navigate} style={{ margin: MARGIN }}>\n              {item.thumbnail ? (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + item.thumbnail }}\n                  style={{ width: SIZE, height: SIZE }}\n                  resizeMode=\"cover\"\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              )}\n              <T>\n                {getText(\"name\")}: {item.name}\n              </T>\n              <T>\n                {getText(\"members\")}: {item.members}\n              </T>\n              <T>\n                {getText(\"bank\")}: €{numberFormat(item.bank)},-\n              </T>\n              <T>\n                {getText(\"power\")}: {item.score}\n              </T>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangSettings = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [gang, setGang] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [gangName, setGangName] = useState(\"\");\n  const [profile, setProfile] = useState(me?.gang?.profile || \"\");\n  const [name, setName] = useState(me?.gang?.name || \"\");\n  const [image, setImage] = useState(me?.gang?.image || \"\");\n  const [isBullets, setIsBullets] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const [showConfirmGangRemoveForm, setShowConfirmGangRemoveForm] = useState(\n    false\n  );\n  const [showConfirmGangLeaveForm, setShowConfirmGangLeaveForm] = useState(\n    false\n  );\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${me?.gang?.name}`);\n    setLoading(false);\n    setGang(gang);\n  };\n\n  const getGangInvites = async () => {\n    setLoading(true);\n    const { requests } = await get(`gangInvites?token=${device.loginToken}`);\n    setLoading(false);\n    setRequests(requests);\n  };\n\n  const postGangAnswerJoin = async (id, accepted) => {\n    setLoading(true);\n    const { response } = await post(\"gangAnswerJoin\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangUpdate = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangUpdate\", {\n      token: device.loginToken,\n      profile,\n      image,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangInvite = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangInvite\", {\n      token: device.loginToken,\n      name: username,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangTransaction = async (isToUser) => {\n    setLoading(true);\n    const { response } = await post(\"gangTransaction\", {\n      token: device.loginToken,\n      amount,\n      isToUser,\n      isBullets,\n    });\n    reloadMe(device.loginToken);\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangLeave = async () => {\n    if (gangName !== me?.gang?.name) {\n      alert(getText(\"pleaseFillInGangName\"));\n      return;\n    }\n\n    setLoading(true);\n    const { response } = await post(\"gangLeave\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangKick = async (userId) => {\n    setLoading(true);\n    const { response } = await post(\"gangKick\", {\n      token: device.loginToken,\n      userId,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const postGangRemove = async () => {\n    if (gangName !== me?.gang?.name) {\n      alert(getText(\"pleaseFillInGangName\"));\n      return;\n    }\n    setShowConfirmGangRemoveForm(false);\n\n    setLoading(true);\n    const { response } = await post(\"gangRemove\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangSetRank = async (userId, rank) => {\n    setLoading(true);\n    const { response } = await post(\"gangSetRank\", {\n      token: device.loginToken,\n      userId,\n      rank,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getGang();\n  };\n\n  doOnce(getGangInvites);\n  doOnce(getGang);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n      }\n    }\n  };\n  const handleChoosePhoto = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View>\n            <View style={{ marginVertical: 20 }}>\n              <T>{getText(\"youAreWhat\", getGangLevel(me?.gangLevel))}</T>\n            </View>\n\n            {/* Answer join */}\n            <View style={{ marginVertical: 20 }}>\n              <T bold>{getText(\"gangJoinRequestsTitle\")}</T>\n              {requests.length > 0 ? (\n                requests.map((request) => {\n                  return (\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <T>{request.user?.name}</T>\n                      <View style={{ flexDirection: \"row\" }}>\n                        <Button\n                          title={getText(\"accept\")}\n                          onPress={() => postGangAnswerJoin(request.id, true)}\n                        />\n                        <Button\n                          title={getText(\"decline\")}\n                          onPress={() => postGangAnswerJoin(request.id, false)}\n                        />\n                      </View>\n                    </View>\n                  );\n                })\n              ) : (\n                <T>{getText(\"noJoinRequests\")}</T>\n              )}\n            </View>\n\n            {/* Invite */}\n            <View style={{ marginVertical: 20, flexDirection: \"row\" }}>\n              <TextInput\n                placeholderTextColor={theme.secondaryTextSoft}\n                style={styles(theme).textInput}\n                value={username}\n                onChangeText={setUsername}\n                placeholder={getText(\"name\")}\n              />\n              <Button\n                title={getText(\"invite\")}\n                onPress={postGangInvite}\n                style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n              />\n            </View>\n\n            {/* Transactions */}\n            {me?.gangLevel === GANG_LEVEL_BANK ||\n            me?.gangLevel === GANG_LEVEL_BOSS ? (\n              <View style={{ marginVertical: 20 }}>\n                <T>\n                  {getText(\"bankMoney\")}: €{numberFormat(me?.gang?.bank || 0)},-\n                </T>\n                <T>\n                  {getText(\"bullets\")}: {numberFormat(me?.gang?.bullets || 0)}\n                </T>\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={amount}\n                    onChangeText={setAmount}\n                    placeholder={getText(\"amount\")}\n                  />\n\n                  <Button\n                    title={isBullets ? getText(\"bullets\") : getText(\"bank\")}\n                    onPress={() => setIsBullets(!isBullets)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n\n                  <Button\n                    title={getText(\"in\")}\n                    onPress={() => postGangTransaction(false)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                  <Button\n                    title={getText(\"out\")}\n                    onPress={() => postGangTransaction(true)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </View>\n            ) : null}\n\n            {/* memberview with kick or change rank, per member */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <View style={{ marginVertical: 20 }}>\n                {gang?.users?.map((member) => {\n                  return (\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <T>{member.name}</T>\n                      <T>{getGangLevel(member.gangLevel)}</T>\n                      <View style={{ flexDirection: \"row\" }}>\n                        {me?.gangLevel >= GANG_LEVEL_UNDERBOSS &&\n                          member.id !== me?.id && (\n                            <Button\n                              title={getText(\"kick\")}\n                              onPress={() => postGangKick(member.id)}\n                            />\n                          )}\n                        {me?.gangLevel === GANG_LEVEL_BOSS && (\n                          <Button\n                            title={getText(\"changeRank\")}\n                            style={{ marginLeft: 10 }}\n                            onPress={() => changeRank(member.id)}\n                          />\n                        )}\n                      </View>\n                    </View>\n                  );\n                })}\n              </View>\n            )}\n            {/* update name,profile,image */}\n\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <View style={{ marginVertical: 20 }}>\n                <TouchableOpacity onPress={handleChoosePhoto}>\n                  {image ? (\n                    <Image\n                      source={{\n                        uri: image.includes(\"data:image\")\n                          ? image\n                          : Constants.SERVER_ADDR + image,\n                      }}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  ) : (\n                    <Image\n                      source={require(\"../../assets/icon.png\")}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  )}\n                </TouchableOpacity>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={styles(theme).textInput}\n                  value={name}\n                  onChangeText={setName}\n                  placeholder={getText(\"gangName\")}\n                />\n\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={profile}\n                  onChangeText={setProfile}\n                />\n                <Button\n                  onPress={postGangUpdate}\n                  title={getText(\"save\")}\n                  style={{ marginTop: 10 }}\n                />\n              </View>\n            )}\n            {/* transactions */}\n\n            {/* Leave */}\n            <View style={{ marginVertical: 20 }}>\n              {showConfirmGangLeaveForm ? (\n                <View>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={gangName}\n                    onChangeText={setGangName}\n                    placeholder={getText(\"gangName\")}\n                  />\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <Button title={getText(\"yes\")} onPress={postGangLeave} />\n                    <Button\n                      title={getText(\"no\")}\n                      onPress={() => setShowConfirmGangLeaveForm(false)}\n                    />\n                  </View>\n                </View>\n              ) : (\n                <Button\n                  title={getText(\"leaveGang\")}\n                  onPress={() => setShowConfirmGangLeaveForm(true)}\n                />\n              )}\n            </View>\n\n            {/* Gang delete */}\n            <View style={{ marginVertical: 20 }}>\n              {me?.gangLevel === GANG_LEVEL_BOSS &&\n                (showConfirmGangRemoveForm ? (\n                  <View>\n                    <TextInput\n                      placeholderTextColor={theme.secondaryTextSoft}\n                      style={styles(theme).textInput}\n                      value={gangName}\n                      onChangeText={setGangName}\n                      placeholder={getText(\"gangName\")}\n                    />\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <Button title={getText(\"yes\")} onPress={postGangRemove} />\n                      <Button\n                        title={getText(\"no\")}\n                        onPress={() => setShowConfirmGangRemoveForm(false)}\n                      />\n                    </View>\n                  </View>\n                ) : (\n                  <Button\n                    title={getText(\"removeGang\")}\n                    onPress={() => setShowConfirmGangRemoveForm(true)}\n                  />\n                ))}\n            </View>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangSettings;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\nconst MARGIN = 20;\nconst { width, height } = Dimensions.get(\"window\");\nconst SIZE = width < 1000 ? 100 : 200;\nconst GangShop = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const prices = [\n    null,\n    50000,\n    100000,\n    200000,\n    500000,\n    1000000,\n    1500000,\n    2000000,\n    3000000,\n    4000000,\n    5000000,\n    10000000,\n    20000000,\n  ];\n\n  const items = [\n    {\n      name: getText(\"gangShopItem1\"),\n      price: prices[1],\n      current: me?.gang?.item1,\n      image: require(\"../../assets/gangshop/item1.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem2\"),\n      price: prices[2],\n      current: me?.gang?.item2,\n      image: require(\"../../assets/gangshop/item2.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem3\"),\n      price: prices[3],\n      current: me?.gang?.item3,\n      image: require(\"../../assets/gangshop/item3.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem4\"),\n      price: prices[4],\n      current: me?.gang?.item4,\n      image: require(\"../../assets/gangshop/item4.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem5\"),\n      price: prices[5],\n      current: me?.gang?.item5,\n      image: require(\"../../assets/gangshop/item5.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem6\"),\n      price: prices[6],\n      current: me?.gang?.item6,\n      image: require(\"../../assets/gangshop/item6.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem7\"),\n      price: prices[7],\n      current: me?.gang?.item7,\n      image: require(\"../../assets/gangshop/item7.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem8\"),\n      price: prices[8],\n      current: me?.gang?.item8,\n      image: require(\"../../assets/gangshop/item8.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem9\"),\n      price: prices[9],\n      current: me?.gang?.item9,\n      image: require(\"../../assets/gangshop/item9.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem10\"),\n      price: prices[10],\n      current: me?.gang?.item10,\n      image: require(\"../../assets/gangshop/item10.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem11\"),\n      price: prices[11],\n      current: me?.gang?.item11,\n      image: require(\"../../assets/gangshop/item11.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem12\"),\n      price: prices[12],\n      current: me?.gang?.item12,\n      image: require(\"../../assets/gangshop/item12.jpg\"),\n    },\n  ];\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const postGangShop = async (itemId) => {\n    setLoading(true);\n    const { response } = await post(\"gangShop\", {\n      itemId,\n      amount: amount[itemId],\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    setLoading(false);\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <T>\n        {getText(\"gangBank\")}: €{numberFormat(me?.gang?.bank || 0)},-\n      </T>\n      <T>\n        {getText(\"power\")}: {me?.gang?.power}\n      </T>\n      <FlatList\n        refreshing={loading}\n        onRefresh={() => reloadMe(device.loginToken)}\n        data={items}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\", height: height - 200 }\n            : undefined\n        }\n        keyExtractor={(item, index) => `shop${index}`}\n        renderItem={({ item, index }) => {\n          return (\n            <View style={{ margin: MARGIN }}>\n              <Image\n                source={item.image}\n                style={{ width: SIZE, height: SIZE }}\n                resizeMode=\"contain\"\n              />\n              <T>{item.name}</T>\n              <T>€{item.price},-</T>\n              <T>\n                {getText(\"inPossession\")}: {item.current}\n              </T>\n              <View style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[styles(theme).textInput, { width: 100 }]}\n                  value={amount[index + 1] || \"\"}\n                  onChangeText={(v) => setAmount({ ...amount, [index + 1]: v })}\n                  placeholder={getText(\"amount\")}\n                />\n                <Button\n                  style={{ marginVertical: 10, marginLeft: 10 }}\n                  title={getText(\"buy\")}\n                  onPress={() => postGangShop(index + 1)}\n                />\n              </View>\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default GangShop;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      this.fetchGroups();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* Show all people with isHacker set to true */}\n      <Image\n        source={require(\"../../assets/hacker.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"hackersInfo\")}</T>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { Image, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"RLD\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.rldOwner ? (\n                    <T>{city.rldOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.rldOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"rld\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city.rldProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const number = Math.ceil(Math.random() * 60);\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Image\n                style={{ width: 100, height: 100 }}\n                source={{\n                  uri:\n                    Constants.SERVER_ADDR + \"/images/female/\" + number + \".gif\",\n                }}\n              />\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { Component } from \"react\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  NativeModules,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport T from \"../components/T\";\nimport { leftMenu, rightMenu } from \"../Menus\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst itemWidth = width / 4;\nconst amountOfItems = Math.floor((height - 200) / itemWidth) * 4;\n\nclass Home extends Component {\n  state = {\n    response: null,\n    activeSlide: 0,\n    notificationsHeader: false,\n  };\n\n  async componentDidMount() {\n    const { device } = this.props.screenProps;\n\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n\n    this.turnOnNotifications();\n    this.sendLanguage();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      this.turnOnNotifications();\n      this.sendLanguage();\n    }\n  };\n\n  sendLanguage = () => {\n    const { device, me } = this.props.screenProps;\n\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  turnOnNotifications = async () => {\n    const { device, me } = this.props.screenProps;\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        this.setState({ notificationsHeader: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      this.setState({ notificationsHeader: false });\n    }\n  };\n\n  _renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginVertical: 15,\n        }}\n      >\n        {item.map((menu, index) => {\n          const TheIcon = Icon[menu.iconType];\n          return (\n            <View\n              key={`i${index}`}\n              style={{ width: itemWidth, alignItems: \"center\" }}\n            >\n              <TouchableOpacity\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"#000\",\n                  backgroundColor: theme.secondary,\n                  borderRadius: 10,\n                  width: itemWidth - 25,\n                  height: itemWidth - 25,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={(e) => {\n                  navigation.navigate(menu.to);\n\n                  const movement = {\n                    action: \"App_Menu_\" + menu.to,\n                    locationX: e.nativeEvent.locationX,\n                    locationY: e.nativeEvent.locationY,\n                    timestamp: Date.now(),\n                  };\n\n                  dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n                }}\n              >\n                {TheIcon && (\n                  <TheIcon\n                    name={menu.icon}\n                    size={(itemWidth - 25) / 2}\n                    color={theme.secondaryText}\n                  />\n                )}\n              </TouchableOpacity>\n              <View>\n                <Text style={{ color: theme.primaryText }}>{menu.text}</Text>\n                {menu.component}\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCarousel() {\n    const {\n      screenProps: { dispatch, me, device },\n    } = this.props;\n\n    const { notificationsHeader } = this.state;\n\n    const menus = [\n      ...leftMenu(me, device.theme),\n      ...rightMenu(me, device.theme),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {notificationsHeader && (\n          <TouchableOpacity\n            onPress={() => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            }}\n          >\n            <View\n              style={{\n                padding: 5,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"exclamationcircleo\"\n                color=\"red\"\n                style={{ marginRight: 10 }}\n              />\n              <T>{getText(\"turnOnNotificationsText\")}</T>\n            </View>\n          </TouchableOpacity>\n        )}\n\n        <Carousel\n          ref={(c) => {\n            this._carousel = c;\n          }}\n          data={[\n            filtered.slice(0, amountOfItems),\n            filtered.slice(amountOfItems, amountOfItems * 2),\n            amountOfItems * 2 > filtered.length\n              ? undefined\n              : filtered.slice(amountOfItems * 2, filtered.length),\n          ].filter((x) => !!x)}\n          renderItem={this._renderItem}\n          sliderWidth={width}\n          onSnapToItem={(index) => this.setState({ activeSlide: index })}\n          itemWidth={width}\n        />\n\n        <Pagination\n          dotsLength={2}\n          activeDotIndex={this.state.activeSlide}\n          // containerStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.75)\" }}\n          dotStyle={{\n            width: 10,\n            height: 10,\n            borderRadius: 5,\n            marginHorizontal: 8,\n            backgroundColor: \"rgba(255, 255, 255, 0.92)\",\n          }}\n          inactiveDotStyle={\n            {\n              // Define styles for inactive dots here\n            }\n          }\n          inactiveDotOpacity={0.4}\n          inactiveDotScale={0.6}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    if (Platform.OS === \"web\") {\n      const handleMouseMove = (event) => {\n        var x = event.clientX;\n        var y = event.clientY;\n        var coor = \"X coords: \" + x + \", Y coords: \" + y;\n        // console.log(\"coor\", coor);\n      };\n\n      document.onmousemove = handleMouseMove;\n\n      return (\n        <Text style={{ color: theme.primaryText }}>\n          {getText(\"welcomeBack\")}\n        </Text>\n      );\n    }\n    return this.renderCarousel();\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"prizes\")}\n          to=\"Prizes\"\n          IconFont=\"AntDesign\"\n          icon=\"star\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 500.000 kogels kosten Hoe dit wordt berekend, is geheim,\n        maar het ligt aan deze factoren: Voor de aanvaller: Het wapen, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels je\n        nodig zult hebben. Voor de verdediger: De verdediging, de moordervaring\n        en de rang. Hoe beter elk van dezen, hoe meer kogels de aanvaller nodig\n        zal hebben. De rang heeft de meeste invloed, daarna het wapen, de\n        verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Huisjesmelkers, Leger des Heils en het Red Light District krijgen 20%\n        van iedereens inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n    this.props.screenProps.reloadCities();\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n                this.fetchMembers();\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, reloadCities, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"jail\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n            marginHorizontal: 15,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"jail\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                paddingHorizontal: 15,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.jailOwner ? (\n                    <Text style={{ color: theme.primaryText }}>\n                      {city.jailOwner}\n                    </Text>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.jailOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"jail\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <Text style={{ color: theme.primaryText }}>\n                  {city.jailProfit}\n                </Text>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListFooterComponent={this.renderCities}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"junkiesObject\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.junkiesOwner ? (\n                    <T>{city.junkiesOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.junkiesOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"junkies\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <View>\n                  <T>{city.junkiesProfit}</T>\n                </View>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({ type: \"SET_LOGGED\", value: true });\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.loginToken });\n\n          this.props.screenProps.reloadMe(responseJson.loginToken);\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = typeStrings[type];\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\nconst { height, width } = Dimensions.get(\"window\");\n\nconst SIZE = 100;\nconst MARGIN = 20;\n\nconst Market = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [market, setMarket] = useState([]);\n\n  //new offer\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [buy, setBuy] = useState(false);\n  const [type, setType] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getMarket = async () => {\n    setLoading(true);\n\n    const { market } = await get(`market`);\n    setLoading(false);\n    setMarket(market);\n  };\n\n  const postMarketCreateOffer = async () => {\n    setLoading(true);\n    const { response } = await post(\"marketCreateOffer\", {\n      token: device.loginToken,\n      type,\n      price,\n      amount,\n      buy,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getMarket);\n\n  const chooseType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const validTypes = [\"junkies\", \"hoeren\", \"wiet\", \"gamepoints\", \"bullets\"];\n\n    const options = validTypes.map((type) => getText(type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < validTypes.length - 1) {\n          setType(validTypes[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n\n      <View>\n        {/* New offer */}\n\n        <View style={{ marginVertical: 20 }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Button\n              title={buy ? getText(\"buy\") : getText(\"sell\")}\n              onPress={() => setBuy(!buy)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={amount}\n              onChangeText={setAmount}\n              placeholder={getText(\"amount\")}\n            />\n\n            <Button\n              title={type ? getText(type) : getText(\"whatType\")}\n              onPress={chooseType}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <T style={{ marginLeft: 10 }}>{getText(\"for\")}</T>\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={price}\n              onChangeText={setPrice}\n              placeholder={getText(\"price\")}\n            />\n\n            <Button\n              title={getText(\"submit\")}\n              onPress={() => postMarketCreateOffer(true)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n          </View>\n        </View>\n\n        <FlatList\n          data={market}\n          numColumns={\n            Platform.OS === \"web\"\n              ? undefined\n              : Math.floor(width / (SIZE + MARGIN * 2))\n          }\n          contentContainerStyle={\n            Platform.OS === \"web\"\n              ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n              : undefined\n          }\n          keyExtractor={(item, index) => `offer${index}`}\n          renderItem={({ item, index }) => {\n            return (\n              <View\n                style={{\n                  width: SIZE,\n                }}\n              >\n                <View style={{ flex: 1 }}>\n                  <T>{item.buy ? getText(\"requested\") : getText(\"forSale\")}</T>\n                </View>\n\n                <T>\n                  {item.amount} {getText(item.type)}\n                </T>\n                <T>€{numberFormat(item.price)},-</T>\n              </View>\n            );\n          }}\n        />\n\n        <View style={{ height: 80 }} />\n      </View>\n    </View>\n  );\n};\n\nexport default Market;\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport { getLocale, getUserColor } from \"../Util\";\nimport T from \"./T\";\n\nconst SIZE = 60;\nconst User = ({ user, navigation }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const color = getUserColor(user, theme);\n  const isOnline = (Date.now() - user.onlineAt) / 60000 < 5;\n\n  const extraIcon =\n    user.level === 2\n      ? \"💼\"\n      : user.level === 3\n      ? \"🕶\"\n      : user.level === 10\n      ? \"🤓\"\n      : null;\n\n  const country = getLocale(user.locale) === \"nl\" ? \"🇳🇱\" : \"🌍\";\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Profile\", { name: user.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: SIZE / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {user.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + user.thumbnail }}\n            style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n          />\n        )}\n        <View style={{ position: \"absolute\", top: 0, right: 0 }}>\n          <T>{isOnline ? \"✅\" : \"🛑\"}</T>\n        </View>\n\n        {extraIcon && (\n          <View style={{ position: \"absolute\", bottom: 0, right: 0 }}>\n            <T>{extraIcon}</T>\n          </View>\n        )}\n\n        {user.gang && user.gang.thumbnail && (\n          <View style={{ position: \"absolute\", top: 0, left: 0 }}>\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + user.gang.thumbnail }}\n              style={{\n                width: SIZE / 2,\n                height: SIZE / 2,\n                borderRadius: SIZE / 4,\n              }}\n            />\n          </View>\n        )}\n\n        <View style={{ position: \"absolute\", bottom: 0, left: 0 }}>\n          <T>{country}</T>\n        </View>\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T style={{ color }}>{user.name}</T>\n        {user.gang && <T>{user.gang.name}</T>}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default User;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Dimensions, FlatList, Platform, TextInput, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\nclass Members extends Component {\n  constructor(props) {\n    super(props);\n\n    const getText = getTextFunction(props.screenProps.me?.locale);\n    this.state = {\n      members: [],\n      search: null,\n      orderBy: {\n        key: \"onlineAt\",\n        title: getText(\"online\"),\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { device } = this.props.screenProps;\n\n    this.fetchMembers(this.state.orderBy.key);\n\n    const order = this.props.navigation.state.params?.order;\n    if (order) {\n      this.setState({ orderBy: orders[order] });\n      this.fetchMembers(orders[order].key);\n    }\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        this.setState({ members });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const { navigation } = this.props;\n\n    const orderKey = this.state.orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n          paddingVertical: 10,\n        }}\n      >\n        <User navigation={navigation} user={item} />\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  openActionSheet = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          this.setState({ orderBy: orders[buttonIndex] });\n          this.fetchMembers(orders[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  renderHeader = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const { members, search } = this.state;\n\n    return (\n      <View\n        style={{ backgroundColor: this.props.screenProps.device.theme.primary }}\n      >\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"sort\")}\n          onPress={() => this.openActionSheet()}\n          icon=\"filter\"\n          font=\"FontAwesome\"\n          style={{ marginTop: 20, marginHorizontal: 10 }}\n        />\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: this.props.screenProps.device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={\n              this.props.screenProps.device.theme.secondaryTextSoft\n            }\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: this.props.screenProps.device.theme.secondaryText,\n            }}\n            onChangeText={(search) => this.setState({ search })}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={this.props.screenProps.device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: this.props.screenProps.device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{this.state.orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { members, search } = this.state;\n\n    const searchedMembers = members.filter((m) =>\n      search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n    );\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 200 : undefined,\n          }}\n          ListHeaderComponent={this.renderHeader}\n          data={searchedMembers}\n          renderItem={this.renderItem}\n          ListFooterComponent={this.renderFooter}\n        />\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Members);\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getMessages();\n\n    const id = this.props.navigation.state.params?.id;\n\n    if (id) {\n      this.fetchReadMessage(id);\n      this.setState({ readMessage: id });\n    }\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getMessages() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/messages?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ messages: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { to, message } = this.state;\n    if (!to || !message) {\n      return;\n    }\n    fetch(`${Constants.SERVER_ADDR}/message`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        to,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response, message: null, to: null });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadMessage = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/readMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        //nothing to be done\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  deleteMessage = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/deleteMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.getMessages();\n        this.setState({ readMessage: null });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? (\n          <View>\n            <T>{this.state.response.response}</T>\n          </View>\n        ) : null}\n\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"to\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          multiline\n          numberOfLines={4}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={[\n            style(device.theme).textInput,\n            {\n              height: 200,\n              width: \"100%\",\n            },\n          ]}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderMessages() {\n    return (\n      <FlatList\n        style={{ width: \"100%\" }}\n        data={this.state.messages?.messages}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              style={{ paddingVertical: 15 }}\n              onPress={() => {\n                this.fetchReadMessage(item.id);\n                this.setState({ readMessage: item.id });\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <T style={{ fontWeight: item.read ? undefined : \"bold\" }}>\n                  {item.fromName}\n                </T>\n                <T style={{ fontWeight: item.read ? undefined : \"bold\" }}>\n                  ({moment(item.createdAt).format(\"DD-MM-YYYY HH:mm\")})\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        ItemSeparatorComponent={() => (\n          <View style={{ height: 1, width: \"100%\", backgroundColor: \"#000\" }} />\n        )}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readMessage = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const item = this.state.messages?.messages.find(\n      (m) => m.id === this.state.readMessage\n    );\n    return item ? (\n      <ScrollView style={{ marginVertical: 20 }}>\n        <T>\n          {getText(\"from\")}: {item.fromName}\n        </T>\n        <T>\n          {getText(\"sent\")}: {moment(item.createdAt).format(\"DD-MM-YYYY HH:mm\")}\n        </T>\n        <T style={{ marginTop: 10 }}>{item.message}</T>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"back\")}\n            icon=\"arrow-back\"\n            font=\"MaterialIcons\"\n            onPress={() => {\n              this.setState({ readMessage: null });\n              this.getMessages();\n            }}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"reply\")}\n            icon=\"reply\"\n            font=\"FontAwesome\"\n            onPress={() =>\n              this.setState({ newMessage: true, to: item.fromName })\n            }\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"delete\")}\n            icon=\"delete\"\n            font=\"MaterialIcons\"\n            onPress={() => this.deleteMessage(item.id)}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"messageNotFound\")}</T>\n    );\n  };\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newMessage, readMessage } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"messages\"),\n              isActive: this.state.newMessage === false,\n              onPress: () =>\n                this.setState({ newMessage: false, readMessage: false }),\n            },\n            {\n              title: getText(\"newMessage\"),\n              isActive: this.state.newMessage,\n              onPress: () => this.setState({ newMessage: true }),\n            },\n          ]}\n        />\n\n        <View style={{ margin: 20, flex: 1 }}>\n          {newMessage\n            ? this.renderNew()\n            : readMessage\n            ? this.readMessage()\n            : this.renderMessages()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction } from \"../Util\";\nconst properties = [\n  {\n    name: \"bulletFactory\",\n  },\n  {\n    name: \"casino\",\n  },\n  {\n    name: \"rld\",\n  },\n  {\n    name: \"landlord\",\n  },\n  {\n    name: \"junkies\",\n  },\n  {\n    name: \"weaponShop\",\n  },\n  {\n    name: \"airport\",\n  },\n  {\n    name: \"estateAgent\",\n  },\n  {\n    name: \"garage\",\n  },\n  {\n    name: \"jail\",\n  },\n  {\n    name: \"bank\",\n  },\n];\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadCities,\n    reloadMe,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = typeStrings[property];\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  <Button\n                    key={`index${index}${property}`}\n                    style={{ marginVertical: 15 }}\n                    theme={theme}\n                    title={getText(\"manage\")}\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: property,\n                        city: city.city,\n                      })\n                    }\n                  />\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default MyObjects;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst MyProfile = ({\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n    reloadMe,\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [photo, setPhoto] = useState(null);\n  const [image, setImage] = useState(me?.image);\n\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [bio, setBio] = useState(me?.bio || \"\");\n\n  doOnce(() => {\n    getPermissionAsync();\n    fetchImages();\n  });\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${me.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleChooseImage = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleUploadPhoto = (pic) => {\n    fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: pic.uri,\n        token: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        fetchImages();\n        alert(getText(\"success\"));\n        setPhoto(null);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      console.log(\"result\", result);\n\n      if (!result.cancelled) {\n        setPhoto(result);\n        handleUploadPhoto(result);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderItem = ({ item, index }) => {\n    const uri = Constants.SERVER_ADDR + \"/\" + item.image;\n    return (\n      <TouchableOpacity onPress={() => setSelectedImage(item.id)}>\n        <View>\n          <Image\n            source={{ uri }}\n            style={{\n              width: 200,\n              height: 200,\n              ...(selectedImage === item.id\n                ? { borderWidth: 2, borderColor: \"black\" }\n                : {}),\n            }}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderFooter = () => {\n    return (\n      <Button\n        title={getText(\"delete\")}\n        onPress={() => {\n          if (selectedImage) {\n            fetch(`${Constants.SERVER_ADDR}/deleteimage`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                id: selectedImage,\n              }),\n            })\n              .then((response) => response.json())\n              .then(({ images }) => {\n                fetchImages();\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } else {\n            alert(getText(\"noPictureSelected\"));\n          }\n        }}\n      />\n    );\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: 20,\n      }}\n    >\n      <TouchableOpacity onPress={handleChooseImage}>\n        {image ? (\n          <Image\n            source={{\n              uri: image.includes(\"data:image\")\n                ? image\n                : Constants.SERVER_ADDR + image,\n            }}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        )}\n      </TouchableOpacity>\n\n      <TextInput\n        placeholderTextColor={theme.secondaryTextSoft}\n        style={[style(theme).textInput, { width: \"100%\", height: 200 }]}\n        multiline={true}\n        numberOfLines={4}\n        value={bio}\n        onChangeText={setBio}\n      />\n      <Button\n        title={getText(\"save\")}\n        style={{ marginVertical: 20 }}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              bio: bio,\n              image,\n              loginToken: device.loginToken,\n            }),\n          })\n            .then((response) => response.json())\n            .then((response) => {\n              alert(getText(\"success\"));\n              reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.log(\"upload error\", error);\n              alert(getText(\"somethingWentWrong\"));\n            });\n        }}\n      />\n\n      <Button\n        style={{ marginVertical: 20 }}\n        title={getText(\"choosePicture\")}\n        onPress={handleChoosePhoto}\n      />\n\n      <FlatList\n        data={images}\n        extraData={selectedImage}\n        numColumns={isSmallDevice ? 1 : 3}\n        renderItem={renderItem}\n        keyExtractor={(item) => `id${item.id}`}\n        ListFooterComponent={renderFooter}\n      />\n    </View>\n  );\n};\n\nexport default MyProfile;\n","import React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/oc`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"doOC\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      <T>AlCapone</T>\n      <T>WebMaster</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"policeBulletBank\")}:\n      </T>\n      <T>11.000.000</T>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\n/**\n * A Privacy page\n */\nconst Prizes = ({ navigation, screenProps: { me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <H1>{getText(\"prizes\")}</H1>\n\n        <T>{getText(\"currentlyNoPrizes\")}</T>\n        {/* <T>{`\nAan het eind van de prijzenronde winnen de spelers met de meeste gamepoints.\nHet eind van deze ronde is zondag 31 mei 2020.\n\n#1: 100 euro\n#2: 60 euro\n#3: 40 euro`}</T> */}\n      </View>\n    </View>\n  );\n};\nexport default Prizes;\n","import React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n} from \"../Util\";\n\nclass ProfileScreen extends React.Component {\n  state = {\n    profile: null,\n    images: [],\n    loading: true,\n  };\n  componentDidMount() {\n    const { navigation } = this.props;\n\n    const name = navigation.state.params.name;\n\n    this.getProfile(name);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { navigation } = this.props;\n\n    const name = navigation.state.params.name;\n\n    if (\n      prevProps.navigation.state.params !== this.props.navigation.state.params\n    ) {\n      this.getProfile(name);\n    }\n  }\n\n  getProfile(name) {\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        this.setState({ profile: responseJson, loading: false }, () => {\n          this.fetchImages();\n        });\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  fetchImages = () => {\n    const { device } = this.props.screenProps;\n    const { profile } = this.state;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${profile?.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        this.setState({ images });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    const { profile, loading, images } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    if (loading) {\n      return <ActivityIndicator />;\n    }\n\n    if (!profile) {\n      return <T>{getText(\"personDoesntExist\")}</T>;\n    }\n\n    const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n    const points = profile.accomplices?.reduce(\n      (total, accomplice) => total + accomplice.rank,\n      0\n    );\n\n    const color = getUserColor(profile, this.props.screenProps.device.theme);\n\n    const uri = Constants.SERVER_ADDR + profile.image;\n    const hasImage = !!profile.image;\n\n    return (\n      <ScrollView>\n        <View style={{ justifyContent: \"center\" }}>\n          <View\n            style={{\n              backgroundColor: \"#444\",\n              borderRadius: 10,\n              margin: 20,\n              padding: 20,\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n            {hasImage ? (\n              <View>\n                <Image\n                  source={{ uri }}\n                  style={{\n                    width: \"100%\",\n                    height: 400,\n                  }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n            ) : null}\n\n            {this.keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n            {this.keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n            {this.keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n            {this.keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n            {this.keyValue(\n              getText(\"strength\"),\n              getStrength(profile?.strength, \"both\")\n            )}\n            {this.keyValue(getText(\"health\"), `${profile?.health}%`)}\n            {this.keyValue(getText(\"weed\"), profile?.wiet)}\n            {this.keyValue(getText(\"junkies\"), profile?.junkies)}\n            {this.keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n            {profile?.accomplices?.length > 0 ? (\n              <>\n                <T style={{ fontWeight: \"bold\", marginBottom: 15 }}>\n                  {getText(\"gangOfX\", profile?.name, points)}\n                </T>\n                {profile.accomplices.map((accomplice) => {\n                  return this.keyValue(\n                    accomplice.name,\n                    getRank(accomplice.rank, \"both\")\n                  );\n                })}\n              </>\n            ) : null}\n            <View style={styles.row}>\n              <Button\n                theme={theme}\n                title={getText(\"chat\")}\n                onPress={async () => {\n                  const { id } = await get(\n                    `pm?loginToken=${loginToken}&userId=${profile.id}`\n                  );\n\n                  navigation.navigate(\"Channel\", { id });\n                }}\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"rob\")}\n                onPress={() =>\n                  navigation.navigate(\"Rob\", {\n                    name: profile.name,\n                  })\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"attack\")}\n                onPress={() =>\n                  navigation.navigate(\"Kill\", {\n                    name: profile.name,\n                  })\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"donate\")}\n                onPress={() =>\n                  navigation.navigate(\"Donate\", {\n                    to: profile.name,\n                  })\n                }\n              />\n            </View>\n          </View>\n\n          <View style={{ marginVertical: 20 }}>\n            <T>{profile?.bio}</T>\n          </View>\n\n          <View>\n            {images.map((image) => {\n              const uri = Constants.SERVER_ADDR + \"/\" + image.image;\n              return (\n                <View>\n                  <Image\n                    source={{ uri }}\n                    style={{\n                      width: \"100%\",\n                      height: 400,\n                    }}\n                    resizeMode=\"contain\"\n                  />\n                </View>\n              );\n            })}\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      console.log(\"FETCH GARAGE\");\n      this.fetchGarage();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import React, { Component } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { areYouSure, getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView>\n        {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n        {__DEV__ && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title={getText(\"purge\")}\n            onPress={() =>\n              areYouSure(() => {\n                dispatch({ type: \"PURGE\" });\n              })\n            }\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          IconFont=\"Entypo\"\n          icon=\"phone\"\n          navigation={navigation}\n          title={getText(\"verifyPhone\")}\n          to=\"VerifyPhone\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuChangePassword\")}\n          to=\"ChangePassword\"\n          IconFont=\"MaterialCommunityIcons\"\n          icon=\"onepassword\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"signupEmail\")}\n          to=\"SignupEmail\"\n          IconFont=\"Entypo\"\n          icon=\"email\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"changeName\")}\n          to=\"ChangeName\"\n          IconFont=\"FontAwesome\"\n          icon=\"bank\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"layout\")}\n          to=\"Theme\"\n          IconFont=\"Ionicons\"\n          icon=\"ios-color-palette\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuLogin\")}\n          to=\"Login\"\n          IconFont=\"Entypo\"\n          icon=\"login\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuMyProfile\")}\n          to=\"MyProfile\"\n          IconFont=\"AntDesign\"\n          icon=\"user\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuBackfire\")}\n          to=\"Backfire\"\n          IconFont=\"MaterialCommunityIcons\"\n          icon=\"pistol\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuAccomplice\")}\n          to=\"Accomplice\"\n          IconFont=\"FontAwesome\"\n          icon=\"universal-access\"\n        />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Status;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(\"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const { type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const propertyKey =\n      type === \"weapon\"\n        ? \"weaponShop\"\n        : type === \"protection\"\n        ? \"weaponShop\"\n        : type === \"airplane\"\n        ? \"airport\"\n        : type === \"home\"\n        ? \"estateAgent\"\n        : \"garage\";\n\n    const ownerKey = `${propertyKey}Owner`;\n    const profitKey = `${propertyKey}Profit`;\n\n    const propertyString =\n      type === \"weapon\"\n        ? getText(\"weaponShop\")\n        : type === \"protection\"\n        ? getText(\"weaponShop\")\n        : type === \"airplane\"\n        ? getText(\"airport\")\n        : type === \"home\"\n        ? getText(\"estateAgent\")\n        : getText(\"garage\");\n    return (\n      <View style={{ margin: 15 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {propertyString}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city[ownerKey] ? (\n                    <T>{city[ownerKey]}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city[ownerKey] === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: propertyKey,\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city[profitKey]}</T>\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    return (\n      <ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"weapon\", getText(\"weapons\"), 1)}\n          {this.renderMenu(\"protection\", getText(\"protection\"), 2)}\n          {this.renderMenu(\"airplane\", getText(\"airplane\"), 1)}\n          {this.renderMenu(\"home\", getText(\"homeShop\"), 1)}\n          {this.renderMenu(\"garage\", getText(\"garage\"), 1)}\n        </View>\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n            {this.renderCities()}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, numberFormat } from \"../Util\";\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nclass Status extends Component {\n  state = {\n    stats: [],\n  };\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        this.setState({ stats });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {this.state.stats?.map((stat, index) => {\n            const key = Object.keys(stat)[0];\n            const values = Object.values(stat)[0];\n            return (\n              <View key={`index${index}`} style={{ width: 300, margin: 20 }}>\n                <T style={{ fontWeight: \"bold\" }}>{keyNames[key]}</T>\n                {values instanceof Array ? (\n                  values.map((value, i) => {\n                    let v = value[key];\n                    if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                    if (key === \"createdAt\")\n                      v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                    if (key === \"strength\") v = getStrength(v, \"both\");\n                    if (key === \"rank\") v = getRank(v, \"both\");\n\n                    return (\n                      <View\n                        key={`stat${key}-${i}`}\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{value.name}: </T>\n                        <T key={`stat${key}-${i}`}>{v}</T>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{values}</T>\n                )}\n              </View>\n            );\n          })}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Status;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n        {me?.protectionAt > Date.now() ? (\n          <TouchableOpacity\n            onPress={() => {\n              //haalweg\n              fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ token: device.loginToken }),\n              })\n                .then((response) => response.json())\n                .then(async ({ response }) => {\n                  this.setState({ response });\n                  reloadMe(device.loginToken);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            <View>\n              <T>{getText(\"protectionInfo\", uur)}</T>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n\n        <Footer screenProps={screenProps} />\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={seconds}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 150, height: 110 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListHeaderComponent={renderHeader}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Origineel\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({ type: \"SET_LOGGED\", value: true });\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.token });\n\n          reloadMe(responseJson.token);\n\n          navigation.popToTop();\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import React, { Component } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass SuperMessage extends Component {\n  state = {\n    response: null,\n    message: null,\n  };\n  renderForm() {\n    const { me, device } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1, padding: 15 }}>\n        <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n\n        <TextInput\n          style={{ ...style(device.theme).textInput, height: 200 }}\n          placeholder={getText(\"message\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          multiline\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </ScrollView>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    return this.renderForm();\n  }\n}\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"landlord\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.landlordOwner ? (\n                    <T>{city.landlordOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.landlordOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"landlord\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <T>{city.landlordProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(0);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", { work: selected });\n    setResponse(response);\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {options.map((option, index) => {\n          return (\n            <TouchableOpacity\n              onPress={() => setSelected(index)}\n              key={`key${index}`}\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                paddingVertical: 10,\n                paddingHorizontal: 10,\n                borderRadius: 5,\n              }}\n            >\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <Checkbox active={selected === index} />\n                <T style={{ marginLeft: 10 }}>{option.title}</T>\n              </View>\n              <T>\n                {option.hours} {getText(\"hours\")}\n              </T>\n            </TouchableOpacity>\n          );\n        })}\n\n        <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n      </View>\n    </View>\n  );\n};\n\nexport default Work;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = { fetchMe, fetchCities, fetchStreetraces };\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n}\n\nexport default mySaga;\n","import { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\n\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  movements: Movement[],\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: false,\n  theme: DEFAULT_THEME,\n  foregrounded: 0,\n  movements: [],\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      return action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\"device\", \"me\", \"streetraces\", \"cities\"],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as StoreReview from \"expo-store-review\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createStackNavigator } from \"react-navigation-stack\";\n// import { loadReCaptcha } from \"react-recaptcha-v3\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport Dead from \"./components/Dead\";\nimport Fly from \"./components/Fly\";\nimport Header from \"./components/Header\";\nimport Jail from \"./components/Jail\";\nimport Constants from \"./Constants\";\nimport { KeyboardAvoidingSpace } from \"./KeyboardAvoidingSpace\";\nimport { leftMenu, rightMenu } from \"./Menus\";\nimport Accomplice from \"./screens/Accomplice\";\nimport AdminEmail from \"./screens/AdminEmail\";\nimport AdminUserWatch from \"./screens/AdminUserWatch\";\nimport Airport from \"./screens/Airport\";\nimport AllBanks from \"./screens/AllBanks\";\nimport Backfire from \"./screens/Backfire\";\nimport Bank from \"./screens/Bank\";\nimport Bomb from \"./screens/Bomb\";\nimport Bulletfactory from \"./screens/Bulletfactory\";\nimport Bunker from \"./screens/Bunker\";\nimport Casino from \"./screens/Casino\";\nimport ChangeName from \"./screens/ChangeName\";\nimport ChangePassword from \"./screens/ChangePassword\";\nimport Channel from \"./screens/Channel\";\nimport Channels from \"./screens/Channels\";\nimport Chat from \"./screens/Chat\";\nimport Contribute from \"./screens/Contribute\";\nimport CreateStreetrace from \"./screens/CreateStreetrace\";\nimport Crimes from \"./screens/Crimes\";\nimport Donate from \"./screens/Donate\";\nimport DownloadApp from \"./screens/DownloadApp\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Forum from \"./screens/Forum\";\nimport Gang from \"./screens/Gang\";\nimport GangAchievements from \"./screens/GangAchievements\";\nimport GangCreate from \"./screens/GangCreate\";\nimport GangOc from \"./screens/GangOc\";\nimport Gangs from \"./screens/Gangs\";\nimport GangSettings from \"./screens/GangSettings\";\nimport GangShop from \"./screens/GangShop\";\nimport Garage from \"./screens/Garage\";\nimport Gym from \"./screens/Gym\";\nimport Hackers from \"./screens/Hackers\";\nimport Hoeren from \"./screens/Hoeren\";\nimport Home from \"./screens/Home\";\nimport Hospital from \"./screens/Hospital\";\nimport Income from \"./screens/Income\";\nimport Info from \"./screens/Info\";\nimport InfoGame from \"./screens/InfoGame\";\nimport InfoRules from \"./screens/InfoRules\";\nimport JailScreen from \"./screens/Jail\";\nimport Junkies from \"./screens/Junkies\";\nimport Kill from \"./screens/Kill\";\nimport Login from \"./screens/Login\";\nimport ManageObject from \"./screens/ManageObject\";\nimport Market from \"./screens/Market\";\nimport Members from \"./screens/Members\";\nimport Messages from \"./screens/Messages\";\nimport MollieComplete from \"./screens/MollieComplete\";\nimport MyObjects from \"./screens/MyObjects\";\nimport MyProfile from \"./screens/MyProfile\";\nimport OrganisedCrime from \"./screens/OrganisedCrime\";\nimport Poker from \"./screens/Poker\";\nimport Police from \"./screens/Police\";\nimport Privacy from \"./screens/Privacy\";\nimport Prizes from \"./screens/Prizes\";\nimport Profile from \"./screens/Profile\";\nimport Racecars from \"./screens/Racecars\";\nimport RecoverPassword from \"./screens/RecoverPassword\";\nimport Rob from \"./screens/Rob\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport SignupEmail from \"./screens/SignupEmail\";\nimport SignupEmail2 from \"./screens/SignupEmail2\";\nimport Stats from \"./screens/Stats\";\nimport Status from \"./screens/Status\";\nimport StealCar from \"./screens/StealCar\";\nimport Streetrace from \"./screens/Streetrace\";\nimport SwissBank from \"./screens/SwissBank\";\nimport Theme from \"./screens/Theme\";\nimport VerifyPhone from \"./screens/VerifyPhone\";\nimport VerifyPhoneCode from \"./screens/VerifyPhoneCode\";\nimport VIP from \"./screens/VIP\";\nimport Wiet from \"./screens/Wiet\";\nimport Work from \"./screens/Work\";\nimport { persistor, store } from \"./Store\";\nimport { getTextFunction, post } from \"./Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    //iPad|\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nexport const renderMenu = (item, index, navigation, theme: Theme, dispatch) => {\n  const isHeaderStyle = item.isHeader\n    ? {\n        marginTop: 20,\n        backgroundColor: theme.secondary,\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderTopWidth: 1,\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderLeftColor: \"black\",\n        borderRightColor: \"black\",\n        borderTopColor: \"black\",\n        padding: 10,\n      }\n    : {};\n  return (\n    <TouchableOpacity\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <View\n        style={{\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n          borderBottomColor: \"black\",\n          borderLeftWidth: 1,\n          borderRightWidth: 1,\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n\n          borderBottomWidth: 1,\n          marginHorizontal: 5,\n          padding: 3,\n          flexDirection: \"row\",\n          ...isHeaderStyle,\n        }}\n      >\n        <Text\n          style={{\n            color: item.isHeader ? theme.secondaryText : theme.primaryText,\n            textAlign: item.isHeader ? \"center\" : undefined,\n          }}\n        >\n          {item.text}\n        </Text>\n        {item.component}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport const renderDrawerMenu = (item, index, navigation, theme, dispatch) => {\n  const isHeaderStyle = item.isHeader\n    ? {\n        marginTop: 20,\n        backgroundColor: theme.secondary,\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderTopWidth: 1,\n        borderTopColor: \"black\",\n        padding: 10,\n      }\n    : { backgroundColor: theme.primary };\n  return (\n    <TouchableOpacity\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <View\n        style={{\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n          borderBottomColor: \"black\",\n          borderBottomWidth: 1,\n          marginHorizontal: 5,\n          flexDirection: \"row\",\n          padding: 20,\n          ...isHeaderStyle,\n        }}\n      >\n        <Text\n          style={{\n            textAlign: item.isHeader ? \"center\" : undefined,\n            color: item.isHeader ? theme.secondaryText : theme.primaryText,\n          }}\n        >\n          {item.text}\n        </Text>\n        {item.component}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Layout = ({ screenProps, navigation, children }) => {\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    //TODO: Fix dat hij naar chat redirect\n    // navigation.navigate(\"Channels\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      screenProps.dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (screenProps.device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const { me, device, dispatch } = screenProps;\n\n  if (Platform.OS === \"web\") {\n    if (getMobileOperatingSystem() === \"android\") {\n      console.log(\"is android\");\n      window.location.replace(Constants.ANDROID_APP_URL);\n    }\n\n    if (getMobileOperatingSystem() === \"ios\") {\n      console.log(\"is ios\");\n      window.location.replace(Constants.IOS_APP_URL);\n    }\n  }\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Channels\",\n    \"Channel\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n    \"Market\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <SafeAreaView\n      style={{\n        flexDirection: \"row\",\n        height: \"100%\",\n        backgroundColor: device.theme.primary,\n      }}\n    >\n      {Platform.OS === \"web\" && (\n        <Helmet>\n          <title>MasterCrimeZ - The Ultimate Game</title>\n          <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n          <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n          <meta property=\"og:type\" content=\"article\" />\n          <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n          <meta\n            property=\"og:description\"\n            content={getText(\"metaOgDescription\")}\n          />\n          <meta property=\"og:image\" content=\"\" />\n        </Helmet>\n      )}\n      {isSmallDevice ? null : (\n        <View style={{ width: 200 }}>\n          {leftMenu(me, device.theme).map((item, index) =>\n            renderMenu(item, index, navigation, device.theme, dispatch)\n          )}\n        </View>\n      )}\n\n      <View style={{ flex: 1 }}>\n        <Header navigation={navigation} device={device} me={me} />\n\n        {me?.reizenAt > Date.now() && !skip ? (\n          <Fly screenProps={screenProps} navigation={navigation} />\n        ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n          <Dead screenProps={screenProps} navigation={navigation} />\n        ) : me?.jailAt > Date.now() && !skip ? (\n          <Jail screenProps={screenProps} navigation={navigation} />\n        ) : (\n          <View style={{ flex: 1 }}>{children}</View>\n        )}\n        {Platform.OS === \"ios\" && <KeyboardAvoidingSpace />}\n      </View>\n      {isSmallDevice ? null : (\n        <View style={{ width: 200 }}>\n          {rightMenu(me, device.theme).map((item, index) =>\n            renderMenu(item, index, navigation, device.theme, dispatch)\n          )}\n        </View>\n      )}\n    </SafeAreaView>\n  );\n};\nexport const withLayout = (Component) => (props) => (\n  <Layout {...props}>\n    <Component {...props} />\n  </Layout>\n);\n\nconst CustomDrawerContentComponent = (props) => {\n  const {\n    navigation,\n    screenProps: { me, device, dispatch },\n  } = props;\n\n  return (\n    <ScrollView>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        forceInset={{ top: \"always\", horizontal: \"never\" }}\n      >\n        {leftMenu(me, device.theme).map((item, index) =>\n          renderDrawerMenu(item, index, navigation, device.theme, dispatch)\n        )}\n        {rightMenu(me, device.theme).map((item, index) =>\n          renderDrawerMenu(item, index, navigation, device.theme, dispatch)\n        )}\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\n\nconst rightContainer =\n  Platform.OS === \"web\" ? createBrowserApp : createAppContainer;\nconst rightNavigator =\n  Platform.OS === \"web\"\n    ? isSmallDevice\n      ? createDrawerNavigator\n      : createSwitchNavigator\n    : createStackNavigator;\n\nconst Container = rightContainer(\n  rightNavigator(\n    {\n      Home: {\n        screen: withLayout(Home),\n        path: \"\",\n      },\n\n      GangCreate: withLayout(GangCreate),\n\n      Gang: {\n        screen: withLayout(Gang),\n        path: \"Gang/:name\",\n      },\n\n      Gangs: withLayout(Gangs),\n      GangShop: withLayout(GangShop),\n      GangSettings: withLayout(GangSettings),\n      GangAchievements: withLayout(GangAchievements),\n      GangOc: withLayout(GangOc),\n\n      Status: withLayout(Status),\n      Hackers: withLayout(Hackers),\n      Police: withLayout(Police),\n      StealCar: withLayout(StealCar),\n      CreateStreetrace: withLayout(CreateStreetrace),\n      Channels: withLayout(Channels),\n      Channel: withLayout(Channel),\n      AllBanks: withLayout(AllBanks),\n      Poker: withLayout(Poker),\n      Bomb: withLayout(Bomb),\n      SwissBank: withLayout(SwissBank),\n\n      Crimes: withLayout(Crimes),\n      Jail: withLayout(JailScreen),\n      Kill: withLayout(Kill),\n      Rob: withLayout(Rob),\n      // Showroom: withLayout(Showroom),\n      Bank: withLayout(Bank),\n      Shop: withLayout(Shop),\n      Garage: withLayout(Garage),\n      ManageObject: withLayout(ManageObject),\n      MyObjects: withLayout(MyObjects),\n      Racecars: withLayout(Racecars),\n      Backfire: withLayout(Backfire),\n      Accomplice: withLayout(Accomplice),\n      Streetrace: withLayout(Streetrace),\n      Bulletfactory: withLayout(Bulletfactory),\n      Casino: withLayout(Casino),\n      Airport: withLayout(Airport),\n      Members: withLayout(Members),\n      Stats: withLayout(Stats),\n      Messages: withLayout(Messages),\n      Chat: withLayout(Chat),\n      Gym: withLayout(Gym),\n      Wiet: withLayout(Wiet),\n      MollieComplete: withLayout(MollieComplete),\n      OrganisedCrime: withLayout(OrganisedCrime),\n      Junkies: withLayout(Junkies),\n      Hoeren: withLayout(Hoeren),\n      Bunker: withLayout(Bunker),\n      Donate: withLayout(Donate),\n      Hospital: withLayout(Hospital),\n      Income: withLayout(Income),\n      AdminEmail: withLayout(AdminEmail),\n      AdminUserWatch: withLayout(AdminUserWatch),\n      Forum: withLayout(Forum),\n      Theme: withLayout(Theme),\n      DownloadApp: DownloadApp,\n      VIP: withLayout(VIP),\n      Market: withLayout(Market),\n      Profile: {\n        screen: withLayout(Profile),\n        path: \"Profile/:name\",\n      },\n\n      //SETTINGS\n      Settings: withLayout(Settings),\n      SignupEmail: withLayout(SignupEmail),\n\n      SignupEmail2: {\n        screen: withLayout(SignupEmail2),\n        path: \"SignupEmail2/:token\",\n      },\n\n      ChangeName: withLayout(ChangeName),\n      VerifyPhoneCode: withLayout(VerifyPhoneCode),\n      ForgotPassword: withLayout(ForgotPassword),\n      RecoverPassword: {\n        screen: withLayout(RecoverPassword),\n        path: \"RecoverPassword/:token\",\n      },\n      ChangePassword: {\n        screen: withLayout(ChangePassword),\n      },\n      VerifyPhone: withLayout(VerifyPhone),\n      MyProfile: withLayout(MyProfile),\n      Login: withLayout(Login),\n      Work: withLayout(Work),\n\n      //INFO\n      Info: withLayout(Info),\n      InfoGame: withLayout(InfoGame),\n      InfoRules: withLayout(InfoRules),\n      Privacy: withLayout(Privacy),\n      Contribute: withLayout(Contribute),\n      Prizes: withLayout(Prizes),\n    },\n    {\n      drawerPosition: \"right\",\n      edgeWidth: Platform.OS === \"web\" && isSmallDevice ? 0 : undefined,\n      contentComponent: CustomDrawerContentComponent,\n      unmountInactiveRoutes: true,\n      navigationOptions: {\n        drawerLockMode: \"locked-open\",\n      },\n      defaultNavigationOptions: {\n        headerShown: false,\n      },\n    }\n  ),\n  {\n    history: \"hash\",\n  }\n);\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nclass _RootContainer extends React.Component {\n  async componentDidMount() {\n    const { device, reloadMe, dispatch } = this.props;\n\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n\n    this.interval = setInterval(() => this.sendMovements(), 60000);\n    // this.meInterval = setInterval((t) => reloadMe(t), 5000, token);\n    //NB: this causes weird behavior when logging in on another account.\n\n    Linking.addEventListener(\"url\", this.openWebUrl);\n    Linking.getInitialURL().then((url) => this.openWebUrl(url));\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    // clearInterval(this.meInterval);\n  }\n  openWebUrl = (url) => {\n    console.log(\"should open web url here\", url);\n  };\n\n  sendMovements() {\n    const { dispatch, device } = this.props;\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { reloadMe, device } = this.props;\n    //if login or logout happens\n    if (prevProps.device.logged !== this.props.device.logged) {\n      reloadMe(device.loginToken);\n    }\n  }\n\n  render() {\n    const { props } = this;\n\n    return (\n      <ActionSheetProvider>\n        <Container screenProps={{ ...props }} />\n      </ActionSheetProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({ device, me, streetraces, cities }) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, cities };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) => {\n    console.log(\"reloadMe with loginToken\", loginToken);\n    dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } });\n  },\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <PersistGate persistor={persistor}>\n        <Provider store={store}>\n          <RootContainer />\n        </Provider>\n      </PersistGate>\n    );\n  }\n}\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo5.8e72dd72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bombarderen.3d0c7534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.75e0546a.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.d7c133b0.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.ada3efe7.png\";","var map = {\n\t\"./af\": 293,\n\t\"./af.js\": 293,\n\t\"./ar\": 294,\n\t\"./ar-dz\": 295,\n\t\"./ar-dz.js\": 295,\n\t\"./ar-kw\": 296,\n\t\"./ar-kw.js\": 296,\n\t\"./ar-ly\": 297,\n\t\"./ar-ly.js\": 297,\n\t\"./ar-ma\": 298,\n\t\"./ar-ma.js\": 298,\n\t\"./ar-sa\": 299,\n\t\"./ar-sa.js\": 299,\n\t\"./ar-tn\": 300,\n\t\"./ar-tn.js\": 300,\n\t\"./ar.js\": 294,\n\t\"./az\": 301,\n\t\"./az.js\": 301,\n\t\"./be\": 302,\n\t\"./be.js\": 302,\n\t\"./bg\": 303,\n\t\"./bg.js\": 303,\n\t\"./bm\": 304,\n\t\"./bm.js\": 304,\n\t\"./bn\": 305,\n\t\"./bn.js\": 305,\n\t\"./bo\": 306,\n\t\"./bo.js\": 306,\n\t\"./br\": 307,\n\t\"./br.js\": 307,\n\t\"./bs\": 308,\n\t\"./bs.js\": 308,\n\t\"./ca\": 309,\n\t\"./ca.js\": 309,\n\t\"./cs\": 310,\n\t\"./cs.js\": 310,\n\t\"./cv\": 311,\n\t\"./cv.js\": 311,\n\t\"./cy\": 312,\n\t\"./cy.js\": 312,\n\t\"./da\": 313,\n\t\"./da.js\": 313,\n\t\"./de\": 314,\n\t\"./de-at\": 315,\n\t\"./de-at.js\": 315,\n\t\"./de-ch\": 316,\n\t\"./de-ch.js\": 316,\n\t\"./de.js\": 314,\n\t\"./dv\": 317,\n\t\"./dv.js\": 317,\n\t\"./el\": 318,\n\t\"./el.js\": 318,\n\t\"./en-au\": 319,\n\t\"./en-au.js\": 319,\n\t\"./en-ca\": 320,\n\t\"./en-ca.js\": 320,\n\t\"./en-gb\": 321,\n\t\"./en-gb.js\": 321,\n\t\"./en-ie\": 322,\n\t\"./en-ie.js\": 322,\n\t\"./en-il\": 323,\n\t\"./en-il.js\": 323,\n\t\"./en-in\": 324,\n\t\"./en-in.js\": 324,\n\t\"./en-nz\": 325,\n\t\"./en-nz.js\": 325,\n\t\"./en-sg\": 326,\n\t\"./en-sg.js\": 326,\n\t\"./eo\": 327,\n\t\"./eo.js\": 327,\n\t\"./es\": 328,\n\t\"./es-do\": 329,\n\t\"./es-do.js\": 329,\n\t\"./es-us\": 330,\n\t\"./es-us.js\": 330,\n\t\"./es.js\": 328,\n\t\"./et\": 331,\n\t\"./et.js\": 331,\n\t\"./eu\": 332,\n\t\"./eu.js\": 332,\n\t\"./fa\": 333,\n\t\"./fa.js\": 333,\n\t\"./fi\": 334,\n\t\"./fi.js\": 334,\n\t\"./fil\": 335,\n\t\"./fil.js\": 335,\n\t\"./fo\": 336,\n\t\"./fo.js\": 336,\n\t\"./fr\": 337,\n\t\"./fr-ca\": 338,\n\t\"./fr-ca.js\": 338,\n\t\"./fr-ch\": 339,\n\t\"./fr-ch.js\": 339,\n\t\"./fr.js\": 337,\n\t\"./fy\": 340,\n\t\"./fy.js\": 340,\n\t\"./ga\": 341,\n\t\"./ga.js\": 341,\n\t\"./gd\": 342,\n\t\"./gd.js\": 342,\n\t\"./gl\": 343,\n\t\"./gl.js\": 343,\n\t\"./gom-deva\": 344,\n\t\"./gom-deva.js\": 344,\n\t\"./gom-latn\": 345,\n\t\"./gom-latn.js\": 345,\n\t\"./gu\": 346,\n\t\"./gu.js\": 346,\n\t\"./he\": 347,\n\t\"./he.js\": 347,\n\t\"./hi\": 348,\n\t\"./hi.js\": 348,\n\t\"./hr\": 349,\n\t\"./hr.js\": 349,\n\t\"./hu\": 350,\n\t\"./hu.js\": 350,\n\t\"./hy-am\": 351,\n\t\"./hy-am.js\": 351,\n\t\"./id\": 352,\n\t\"./id.js\": 352,\n\t\"./is\": 353,\n\t\"./is.js\": 353,\n\t\"./it\": 354,\n\t\"./it-ch\": 355,\n\t\"./it-ch.js\": 355,\n\t\"./it.js\": 354,\n\t\"./ja\": 356,\n\t\"./ja.js\": 356,\n\t\"./jv\": 357,\n\t\"./jv.js\": 357,\n\t\"./ka\": 358,\n\t\"./ka.js\": 358,\n\t\"./kk\": 359,\n\t\"./kk.js\": 359,\n\t\"./km\": 360,\n\t\"./km.js\": 360,\n\t\"./kn\": 361,\n\t\"./kn.js\": 361,\n\t\"./ko\": 362,\n\t\"./ko.js\": 362,\n\t\"./ku\": 363,\n\t\"./ku.js\": 363,\n\t\"./ky\": 364,\n\t\"./ky.js\": 364,\n\t\"./lb\": 365,\n\t\"./lb.js\": 365,\n\t\"./lo\": 366,\n\t\"./lo.js\": 366,\n\t\"./lt\": 367,\n\t\"./lt.js\": 367,\n\t\"./lv\": 368,\n\t\"./lv.js\": 368,\n\t\"./me\": 369,\n\t\"./me.js\": 369,\n\t\"./mi\": 370,\n\t\"./mi.js\": 370,\n\t\"./mk\": 371,\n\t\"./mk.js\": 371,\n\t\"./ml\": 372,\n\t\"./ml.js\": 372,\n\t\"./mn\": 373,\n\t\"./mn.js\": 373,\n\t\"./mr\": 374,\n\t\"./mr.js\": 374,\n\t\"./ms\": 375,\n\t\"./ms-my\": 376,\n\t\"./ms-my.js\": 376,\n\t\"./ms.js\": 375,\n\t\"./mt\": 377,\n\t\"./mt.js\": 377,\n\t\"./my\": 378,\n\t\"./my.js\": 378,\n\t\"./nb\": 379,\n\t\"./nb.js\": 379,\n\t\"./ne\": 380,\n\t\"./ne.js\": 380,\n\t\"./nl\": 381,\n\t\"./nl-be\": 382,\n\t\"./nl-be.js\": 382,\n\t\"./nl.js\": 381,\n\t\"./nn\": 383,\n\t\"./nn.js\": 383,\n\t\"./oc-lnc\": 384,\n\t\"./oc-lnc.js\": 384,\n\t\"./pa-in\": 385,\n\t\"./pa-in.js\": 385,\n\t\"./pl\": 386,\n\t\"./pl.js\": 386,\n\t\"./pt\": 387,\n\t\"./pt-br\": 388,\n\t\"./pt-br.js\": 388,\n\t\"./pt.js\": 387,\n\t\"./ro\": 389,\n\t\"./ro.js\": 389,\n\t\"./ru\": 390,\n\t\"./ru.js\": 390,\n\t\"./sd\": 391,\n\t\"./sd.js\": 391,\n\t\"./se\": 392,\n\t\"./se.js\": 392,\n\t\"./si\": 393,\n\t\"./si.js\": 393,\n\t\"./sk\": 394,\n\t\"./sk.js\": 394,\n\t\"./sl\": 395,\n\t\"./sl.js\": 395,\n\t\"./sq\": 396,\n\t\"./sq.js\": 396,\n\t\"./sr\": 397,\n\t\"./sr-cyrl\": 398,\n\t\"./sr-cyrl.js\": 398,\n\t\"./sr.js\": 397,\n\t\"./ss\": 399,\n\t\"./ss.js\": 399,\n\t\"./sv\": 400,\n\t\"./sv.js\": 400,\n\t\"./sw\": 401,\n\t\"./sw.js\": 401,\n\t\"./ta\": 402,\n\t\"./ta.js\": 402,\n\t\"./te\": 403,\n\t\"./te.js\": 403,\n\t\"./tet\": 404,\n\t\"./tet.js\": 404,\n\t\"./tg\": 405,\n\t\"./tg.js\": 405,\n\t\"./th\": 406,\n\t\"./th.js\": 406,\n\t\"./tk\": 407,\n\t\"./tk.js\": 407,\n\t\"./tl-ph\": 408,\n\t\"./tl-ph.js\": 408,\n\t\"./tlh\": 409,\n\t\"./tlh.js\": 409,\n\t\"./tr\": 410,\n\t\"./tr.js\": 410,\n\t\"./tzl\": 411,\n\t\"./tzl.js\": 411,\n\t\"./tzm\": 412,\n\t\"./tzm-latn\": 413,\n\t\"./tzm-latn.js\": 413,\n\t\"./tzm.js\": 412,\n\t\"./ug-cn\": 414,\n\t\"./ug-cn.js\": 414,\n\t\"./uk\": 415,\n\t\"./uk.js\": 415,\n\t\"./ur\": 416,\n\t\"./ur.js\": 416,\n\t\"./uz\": 417,\n\t\"./uz-latn\": 418,\n\t\"./uz-latn.js\": 418,\n\t\"./uz.js\": 417,\n\t\"./vi\": 419,\n\t\"./vi.js\": 419,\n\t\"./x-pseudo\": 420,\n\t\"./x-pseudo.js\": 420,\n\t\"./yo\": 421,\n\t\"./yo.js\": 421,\n\t\"./zh-cn\": 422,\n\t\"./zh-cn.js\": 422,\n\t\"./zh-hk\": 423,\n\t\"./zh-hk.js\": 423,\n\t\"./zh-mo\": 424,\n\t\"./zh-mo.js\": 424,\n\t\"./zh-tw\": 425,\n\t\"./zh-tw.js\": 425\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 673;","module.exports = __webpack_public_path__ + \"static/media/item1.a5e891d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item2.e86438ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item3.27b6a03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item4.b980bfe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item5.1da86cb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item6.935530e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item7.bf00b038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item8.e50cc6c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item9.44698ead.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item10.2cf60cef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item11.d162fbe5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item12.0bcfb4c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hacker.010dc613.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}