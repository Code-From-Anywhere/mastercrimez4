{"version":3,"sources":["assets/icon.png","assets/whatsapp.png","assets/profession/thief.jpg","assets/profession/carthief.jpg","assets/profession/weedgrower.jpg","assets/profession/killer.jpg","assets/profession/pimp.jpg","assets/profession/banker.jpg","assets/profession/jailbreaker.jpg","assets/map/market.png","assets/map/shop.png","src/Constants.js","src/Util.js","src/components/AlertProvider.js","src/components/ConnectionProvider.js","src/components/IntervalProvider.js","src/components/Button.js","src/components/Dead.js","src/components/Chat.js","src/components/Header.js","src/updateHook.js","src/components/HoverState.js","src/components/Hoverable.js","src/Style.js","src/components/T.js","src/components/LoginModal.js","src/KeyboardAvoidingSpace.js","src/Menus.js","src/Layout.js","src/screens/Accomplice.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Shop.js","src/screens/AirplaneShop.js","src/screens/Airport.js","src/components/Tabs.js","src/components/Captcha.js","src/screens/Bomb.js","src/screens/AllAirport.js","src/screens/Bank.js","src/screens/Donate.js","src/screens/Income.js","src/screens/SwissBank.js","src/screens/AllBanks.js","src/screens/Bulletfactory.js","src/components/Content.js","src/components/User.js","src/screens/GangBulletFactory.js","src/screens/AllBulletfactory.js","src/screens/GangCreate.js","src/components/H1.js","src/screens/GangMissions.js","src/screens/GangSettings.js","src/screens/GangShop.js","src/screens/AllGang.js","src/components/Separator.js","src/screens/Garage.js","src/screens/Racecars.js","src/screens/AllGarage.js","src/screens/Gangs.js","src/screens/Members.js","src/components/Gang.js","src/screens/Prizes.js","src/screens/Properties.js","src/screens/Stats.js","src/screens/AllStats.js","src/screens/Backfire.js","src/screens/Blocks.js","src/screens/Bunker.js","src/screens/Casino.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/components/ShareButtons.js","src/screens/Channel.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/ChooseProfession.js","src/screens/Code.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateOC.js","src/screens/CreateRobbery.js","src/screens/CreateStreetrace.js","src/components/Footer.js","src/screens/Crimes.js","src/screens/Detectives.js","src/screens/DownloadApp.js","src/screens/EstateAgent.js","src/screens/ForgotPassword.js","src/screens/Forum.js","src/screens/Gang.js","src/screens/GangAchievements.js","src/screens/GarageShop.js","src/screens/Gym.js","src/screens/Hackers.js","src/screens/Hoeren.js","src/screens/Home.js","src/screens/Hospital.js","src/screens/Sint.js","src/screens/MyObjects.js","src/screens/Status.js","src/screens/House.js","src/components/Menu.js","src/screens/Info.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/Lotto.js","src/screens/ManageObject.js","src/screens/Map/Overlay.js","src/screens/Map/Map.js","src/screens/Market.js","src/screens/MollieComplete.js","src/screens/Police.js","src/screens/Settings.js","src/screens/More.js","src/screens/MyProfile.js","src/screens/OC.js","src/screens/Poker.js","src/screens/Privacy.js","src/screens/Profile.js","src/screens/ProtectionShop.js","src/screens/RecoverPassword.js","src/screens/Reports.js","src/screens/Rob.js","src/screens/Robbery.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/StealCar.js","src/screens/Streetrace.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/WeaponShop.js","src/screens/Wiet.js","src/components/Checkbox.js","src/screens/Work.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","assets/dood.jpg","assets/logos/logo5.jpg","node_modules/moment/locale sync /^/.//.*$","assets/bombarderen.jpg","assets/gangshop/item1.jpg","assets/gangshop/item2.jpg","assets/gangshop/item3.jpg","assets/gangshop/item4.jpg","assets/gangshop/item5.jpg","assets/gangshop/item6.jpg","assets/gangshop/item7.jpg","assets/gangshop/item8.jpg","assets/gangshop/item9.jpg","assets/gangshop/item10.jpg","assets/gangshop/item11.jpg","assets/gangshop/item12.jpg","assets/robbery/snackbar.jpg","assets/robbery/clothesstore.jpg","assets/robbery/supermarket.jpg","assets/robbery/drugstore.jpg","assets/robbery/coffeeshop.jpg","assets/robbery/cardealer.jpg","assets/robbery/bank.jpg","assets/robbery/casino.jpg","assets/robbery/jewelrystore.jpg","assets/instagram.png","assets/spotify.png","assets/youtube.png","assets/uitgemoord.jpg","assets/hacker.jpeg","assets/map/bulletfactory.png","assets/map/airport.png","assets/map/bank.png","assets/map/casino.png","assets/map/coffeeshop.png","assets/map/junkies.png","assets/map/garage.png","assets/map/gym.png","assets/map/hospital.png","assets/map/house2.png","assets/map/headquarter.png","assets/map/jail.png","assets/map/sexshop.png","assets/politie.jpeg","assets/bank.jpg","assets/cars.jpeg","assets/shootout.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["module","exports","Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","Captcha","loginToken","useState","Math","random","setRandom","uri","View","style","flexDirection","Image","source","marginLeft","width","height","TouchableOpacity","onPress","MaterialCommunityIcons","name","size","color","withCaptcha","needCaptcha","getText","alertAlert","setCode","text","textInput","keyboardType","component","get","post","ColorLuminance","hex","lum","String","length","c","i","rgb","parseInt","substr","round","min","max","lighterHex","darkerHex","getUserColor","item","theme","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","prevExp","nowRank","diff","progress","percentage","getRank","getStrength","AlertContext","React","createContext","AlertProvider","children","alerts","setAlerts","value","setValue","textInputRef","useRef","theAlert","current","focus","Provider","title","message","buttons","options","log","newAlerts","map","includes","push","position","top","bottom","left","right","backgroundColor","justifyContent","alignItems","borderRadius","padding","Text","fontWeight","fontSize","textAlign","TextInput","onChangeText","ref","button","flex","borderRightColor","borderRightWidth","shift","filter","lenth","ConnectionProviderScreen","fetchWithTimeout","didTimeOut","Promise","resolve","reject","timeout","setTimeout","Error","clearTimeout","err","props","setIsConnected","Platform","OS","this","unsubscribe","NetInfo","addEventListener","state","isConnected","interval","setInterval","SafeAreaView","Component","connect","device","dispatch","IntervalContext","IntervalProvider","screenProps","me","reloadMe","token","setToken","intervalReloadMe","intervalMovements","sendMovements","clearInterval","movements","resetIntervalsForToken","withInterval","ChildComponent","Consumer","context","intervals","isSmall","Dimensions","Button","icon","font","disabled","TheIcon","Icon","useSelector","secondary","paddingHorizontal","marginRight","secondaryText","Dead","selected","navigation","locale","reizenAt","Date","option","setState","Chat","chat","input","getChat","allText","select","web","default","borderWidth","borderColor","numberOfLines","navigate","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","placeholder","onSubmitEditing","nativeEvent","location","reload","isSmallDevice","Header","updateAvailable","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","useExpoUpdate","textStyle","marginBottom","showNotActivated","phoneVerified","numActions","notActivated","marginTop","dontShowStatsHeader","routeName","showBackButton","statsHeader","flexWrap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","gang","cash","bank","bullets","gamepoints","city","health","strength","newVersion","chats","AntDesign","updateComponent","reloadAsync","backButton","margin","hitSlop","goBack","window","history","back","webHeader","manifest","version","toggleDrawer","Feather","showSomething","paddingTop","StatusBar","currentHeight","isEnabled","canUseDOM","lastTouchTimestamp","disableHover","document","Hoverable","onHoverIn","onHoverOut","isHovered","setHovered","showHover","setShowHover","child","cloneElement","Children","only","onMouseEnter","e","onMouseLeave","onResponderGrant","onResponderRelease","onPressIn","onPressOut","displayName","propTypes","oneOfType","func","element","StyleSheet","create","marginVertical","container","T","bold","LoginModal","setName","setResponse","email","setEmail","password","setPassword","setError","success","setSuccess","phone","setPhone","view","setView","code","changeName","login","useContext","primary","alignSelf","Entypo","id","ActivityIndicator","placeholderTextColor","secondaryTextSoft","secureTextEntry","md5","str_md5","responseJson","textDecorationLine","KeyboardAvoidingSpace","keyboardWillShow","onKeyboardWillShow","toValue","endCoordinates","offset","dim","isIPhoneXSize","isIPhoneXrSize","isIphoneX","Animated","timing","easing","Easing","ease","useNativeDriver","start","keyboardWillHide","onKeyboardWillHide","Value","bindListeners","unbindListeners","keyboardWillShowListener","Keyboard","addListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","remove","isHappyHour","isSunday","moment","day","is7pm","hour","isAfter","set","InactiveScreens","ACTIONS_BEFORE_ROBBERY","ACTIONS_BEFORE_DETECTIVES","ACTIONS_BEFORE_BOMB","ACTIONS_BEFORE_CASINO","ACTIONS_BEFORE_BUNKER","ACTIONS_BEFORE_HOSPITAL","ACTIONS_BEFORE_RACECARS","ACTIONS_BEFORE_STREETRACE","ACTIONS_AMOUNT_NEW","ACTIONS_BEFORE_ROB","ACTIONS_BEFORE_ROB_KILL_MENU","ACTIONS_BEFORE_KILL","ACTIONS_BEFORE_BULLETFACTORY","ACTIONS_BEFORE_MARKET","ACTIONS_BEFORE_AIRPORT","DAYS_NEW","ACTIONS_BEFORE_POLICE","OC_RELEASE_DATE","DETECTIVES_RELEASE_DATE","GANG_MISSIONS_RELEASE_DATE","GANG_BULLET_FACTORY_RELEASE_DATE","PRIZES_NORMAL_RELEASE_DATE","GANG_RELEASE_DATE","MARKET_RELEASE_DATE","PRIZES_RELEASE_DATE","POLICE_RELEASE_DATE","ROBBERY_RELEASE_DATE","WORK_RELEASE_DATE","leftMenu","stealcarSeconds","ceil","autostelenAt","crimeSeconds","crimeAt","bunkerSeconds","bunkerAt","attackSeconds","attackAt","robSeconds","robAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","robberySeconds","robberyAt","header","isHeader","label","content","iconType","to","until","digitStyle","digitTxtStyle","onFinish","timeToShow","timeLabels","m","s","inactive","isBefore","level","isNew","add","jail","ACtIONS_BEFORE_DETECTIVES","adminMenu","gameMod","betaTester","admin","rightMenu","ocSeconds","ocAt","isGangsReleased","gangMenus","image","thumbnail","gangId","isStats","online","year","month","date","renderMenu","isCurrent","TouchOrView","params","movement","action","locationX","locationY","timestamp","borderBottomWidth","paddingLeft","minHeight","Layout","useNewContainer","result","characters","charactersLength","charAt","floor","makeid","Linking","openWebUrl","getInitialURL","url","logged","menu","leftActive","setLeftActive","rightActive","setRightActive","_handleNotificationResponse","notification","request","data","handleChange","nextAppState","foregrounded","StoreReview","available","ExpoNotifications","AppState","removeEventListener","skip","SafeOrView","Helmet","property","ScrollView","contentContainerStyle","Accordion","expandMultiple","sections","activeSections","onChange","active","renderHeader","section","renderContent","withLayout","Accomplice","accomplice","accomplice1","setAccomplice1","accomplice2","setAccomplice2","accomplice3","setAccomplice3","accomplice4","setAccomplice4","submit","acc","alert","maxWidth","onFocus","Clipboard","setString","accomplices","styles","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","setId","user","setUser","actions","setActions","setMovements","getActions","ip","previous","Shop","fetchCities","reloadCities","fetchShop","becomeOwner","renderCities","cities","propertyKey","ownerKey","profitKey","propertyString","paddingVertical","borderBottomColor","t","buy","resizeMode","next","price","AirplaneShop","Airport","renderFooter","openActionSheet","sort","showActionSheetWithOptions","buttonIndex","connectActionSheet","Tabs","tabs","tab","isActive","onChangeCaptcha","captcha","onChangeRandom","Bomb","useActionSheet","bombs","setBombs","setCaptcha","setType","typeStrings","bulletFactory","casino","landlord","junkies","weaponShop","rld","airport","estateAgent","garage","find","airplane","Object","keys","cancelButtonIndex","destructiveButtonIndex","AllAirport","setTab","Bank","deposit","amount","row","keyValue","Donate","names","wiet","hoeren","Income","incomeAction","postGetIncome","withAlert","SwissBank","becomeOwnerResponse","setBecomeOwnerResponse","setAmount","swissBank","swissBullets","bankOwner","bankProfit","AllBanks","Bulletfactory","setBullets","bulletFactoryOwner","bulletFactoryPrice","bulletFactoryProfit","bulletFactoryDamage","UIManager","setLayoutAnimationEnabledExperimental","getData","AsyncStorage","getItem","Content","contentWidth","expanded","setExpanded","loading","setLoading","isExpanded","LayoutAnimation","linear","setItem","onLayout","event","layout","y","User","isOnline","onlineAt","extraIcon","country","GangBulletFactory","shifts","setShifts","morning","evening","night","underachievers","getShifts","renderShiftUser","members","totalShiftsDone","gangLevel","generates","initialCost","dailyCost","bf","marginHorizontal","postGangBuyBulletFactory","AllGarage","GangCreate","H1","GangMissions","setResult","getGangMissions","isPrestige","reduce","mission","time","seconds","startButton","postGangStartMission","what","amountPerMember","isEnded","isSucceeded","amountDone","createdAt","GangSettings","requests","setRequests","setGang","username","setUsername","profile","setProfile","setMessage","setImage","isBullets","setIsBullets","getGang","getGangInvites","postGangAnswerJoin","accepted","postGangTransaction","isToUser","postGangLeave","getGangLevel","postGangRemove","changeRank","userId","postGangSetRank","getPermissionAsync","Permissions","status","users","member","postGangKick","ImagePicker","mediaTypes","All","allowsEditing","base64","quality","cancelled","multiline","SIZE","GangShop","prices","items","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","power","FlatList","refreshing","onRefresh","numColumns","MARGIN","keyExtractor","renderItem","v","itemId","postGangShop","AllGang","Separator","Garage","cars","fetchGroups","carGroups","bulkAction","auto","upgradeCar","renderGroup","kogels","focusListener","ItemSeparatorComponent","Racecars","fetchGarage","sellCar","crushCar","car","extraData","Gangs","gangs","setGangs","invites","setInvites","getGangs","getInvites","postGangAnswerInvite","invite","gangName","score","filters","orders","setMembers","setSearch","orderBy","setOrderBy","setFilter","order","fetchMembers","searchedMembers","toLowerCase","ListHeaderComponent","o","openActionSheetSort","openActionSheetFilter","orderKey","secondKey","Gang","Prizes","prizes","setPrizes","prize","when","every","endOf","format","forWhat","stats","stat","prizeWhat","properties","Properties","gridStyle","borderLeftColor","borderLeftWidth","horizontal","suffix","field","fieldSuffix","formattedField","keyNames","newMembers","onlineToday","Stats","setStats","gameStats","setGameStats","values","Array","snapToEnd","fromZero","labels","datasets","opacity","onlineLastHour","onlineLastDay","onDataPointClick","xAxisLabel","xLabelsOffset","yAxisLabel","yAxisSuffix","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","strokeWidth","stroke","bezier","AllStats","Members","MyProfile","backfire","Blocks","blocks","setBlocks","getBlocks","block","user2id","postRemoveBlock","Bunker","ListFooterComponent","lottoReleaseDate","Casino","casinoOwner","casinoProfit","ChangeName","ChangePassword","password1","password2","minWidth","ImageInput","hasEdited","_pickImage","aspect","ImageManipulator","resize","PNG","manipulated","manipulatedBase64","small","Ionicons","ShareButtons","siteUrl","facebookShareUrl","openURL","isBigDevice","Footer","fetchChat","setHasEdited","send","cid","STYLE","ChatScreen","isFetching","setIsFetching","setChat","subid","isArray","initialNumToRender","isMe","avatar","IMAGE_SIZE","isSystem","isShareable","refreshControl","inverted","blocksReleaseDate","fetchChannelsubs","channelsubs","openMenu","isBlockButtonActive","openGeneralMenu","isBlocksActive","channelTitle","channel","channelThumbnail","channelOtherUserId","unread","lastmessage","lastmessageDate","startOf","PROFESSIONS","canChooseProfession","profession","postChooseProfession","Code","CreateOc","reloadOcs","racecars","setRacecars","numParticipants","setNumParticipants","setCar","TabInput","racecar","carId","RobberyTypes","cost","profit","difficulty","Robbery","robbery","CreateRobbery","reloadRobberies","CreateStreetrace","reloadStreetraces","setPrice","setPrize","setText","copy","getFullYear","Crimes","kans","maxChance","kans2","Detectives","detectives","setDetectives","getDetectives","detective","h","getMobileOperatingSystem","userAgent","navigator","vendor","opera","test","MSStream","DownloadApp","EstateAgent","Login","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","updatedAt","responses","renderNew","renderTopics","postGangJoin","totalHealth","GangAchievements","achievements","GarageShop","Gym","Hoeren","rldOwner","rldProfit","number","itemWidth","amountOfItems","Home","activeSlide","notificationsHeader","_handleAppStateChange","turnOnNotifications","sendLanguage","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","language","ExpoConstants","isDevice","existingStatus","finalStatus","pushtoken","Notifications","_renderItem","filtered","slice","IntentLauncher","_carousel","sliderWidth","onSnapToItem","dotsLength","activeDotIndex","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","appLink","renderCarousel","Hospital","heal","Sint","minute","sintEndsAt","MyObjects","p","professionReleaseDate","uur","protectionAt","Menu","IconFont","PrivacyPage","components","en","nl","strings","Jail","jailAt","jailOwner","jailProfit","ListEmptyComponent","Junkies","junkiesOwner","junkiesProfit","Kill","kill","Lotto","lottoDay","lottoWeek","lottoMonth","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","priceKey","damageKey","getZoom","delta","LN2","memo","MapIcon","iconName","Overlay","setZoom","setSelected","objects","dragAndDropMode","setDragAndDropMode","territoriesSwiperRefContainer","propertiesSwiperRefContainer","cityAreas","areas","getAreas","selectedAreaIndex","setSelectedAreaIndex","selectedArea","bombAction","takeOverAction","manageAction","badgeAmount","hospital","house","headquarter","gym","market","stockExchange","area","airplanes","connectedArea","damage","animateToCity","panTo","lat","latitude","lng","longitude","animateToRegion","latitudeDelta","longitudeDelta","renderTerritoriesSwiper","controlsEnabled","initialPage","onIndexChanged","centerLatitude","centerLongitude","biggestDelta","renderPropertiesSwiper","object","owner","ownerProfile","currentObject","requestAnimationFrame","citiesAreas","mapStyle","aspectRatio","rgbs","containerStyle","ReactMap","zoom","setMap","setMapReady","onLoad","useCallback","bounds","google","maps","LatLngBounds","fitBounds","onUnmount","googleMapsApiKey","mapContainerStyle","initialZoom","disableDefaultUI","Territories","territories","MapsComponent","onClick","fillColor","path","Polygon","tappable","coordinates","GameObjects","isSelected","myName","terri","deltaLatitude","deltaLongitude","biggestDeltaLatitude","topLeftLatitude","topLeftLongitude","bottomRightLatitude","bottomRightLongitude","topRightLongitude","bottomLeftLatitude","square","draggable","animated","onPressObject","configureNext","Presets","spring","goTo","east","south","north","west","platformBounds","center","radius","Marker","onDragEnd","coordinate","Alert","Circle","zIndex","Map","ocs","streetraces","robberies","setAreas","region","setRegion","useMemo","mapReady","objectsWithAnimated","reg","NativeMapsComponent","native","crimeIcons","workEndsAt","ocIcons","oc","streetraceIcons","robberyIcons","icons","concat","rightObjects","renderGame","renderTerritories","renderCrimes","sum","codePointAt","decimalHash","areaIndex","pseudoRandom","theIcon","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","renderAllMapObjects","shouldRenderTerritories","renderOverlay","onMapReady","customMapStyle","initialRegion","onRegionChange","absoluteFill","Market","setMarket","setBuy","getMarket","validTypes","postMarketCreateOffer","offerId","postMarketRemoveOffer","isBuy","postMarketTransaction","MollieComplete","Settings","__DEV__","Info","Police","setPhoto","images","setImages","selectedImage","setSelectedImage","bio","setBio","fetchImages","pic","Oc","RefreshControl","creator","ocParticipants","ocId","leave","Poker","poker","Config","onLinkPress","link","markdownItInstance","MarkdownIt","typographer","use","emoji","Bio","debugPrintTree","markdownit","rules","blocklink","node","parent","open","attributes","href","setWidth","setHeight","getSize","src","centertext","paragraph","textgroup","ProfileScreen","getProfile","hasImage","ban","banReason","postReport","ProtectionShop","RecoverPassword","Reports","reports","setReports","getReports","rob","robberyParticipants","robberyId","respones","activate","activationToken","StealCar","typeStart","finished","Streetrace","streetraceParticipants","streetraceId","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","save","Creditshop","setItems","credits","kooptext","kosten","Mollie","SuperMessage","schedule","setSchedule","setDate","scheduled","setScheduled","setMessages","dates","setDates","getScheduled","Switch","onValueChange","valueOf","msg","saveScheduled","VIP","WeaponShop","Wiet","landlordOwner","landlordProfit","Checkbox","Work","hours","Api","fetchMe","payload","fetchStreetraces","fetchOcs","fetchRobberies","mySaga","call","put","takeLatest","initDevice","config","storage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","rightContainer","createBrowserApp","createAppContainer","rightNavigator","createDrawerNavigator","createSwitchNavigator","createStackNavigator","routes","screen","AllBulletfactory","Hackers","Channels","Channel","JailScreen","Rob","Backfire","House","AdminEmail","Forum","Theme","ChooseProfession","Profile","SignupEmail","SignupEmail2","VerifyPhoneCode","ForgotPassword","Case","Car","VerifyPhone","OC","InfoGame","InfoRules","Privacy","Contribute","More","tabRoutes","initialRouteName","headerMode","NewContainer","createBottomTabNavigator","defaultNavigationOptions","tabBarIcon","focused","tintColor","IconComponent","badgeCount","tabBarOptions","keyboardHidesTabBar","activeTintColor","inactiveTintColor","OldContainer","drawerPosition","edgeWidth","contentComponent","forceInset","unmountInactiveRoutes","navigationOptions","drawerLockMode","headerShown","RootContainer","Container","ConnectionProvider","App","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__"],"mappings":"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AeC,EAAK,KAC1Ca,EAAY,SAACb,GAAD,OAASD,EAAeC,GAAM,KAE1Cc,EAAe,SAACC,EAAMC,GAAP,OACtB,MAAJD,OAAA,EAAAA,EAAME,eAAgB,IAClB,OACI,MAAJF,OAAA,EAAAA,EAAME,eAAgB,IACtB,SACAD,EAAME,aAENC,EAAQ,CACZ,CACEC,KAAM,SACNC,IAAK,IAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,EAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACN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AOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,sg2nCCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/app.3d61a423.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d2180cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","module.exports = __webpack_public_path__ + \"static/media/thief.fa783e06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carthief.b6f3fdd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weedgrower.0b8f1c24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/killer.fef52faa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pimp.f2697d22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banker.1d9edc53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jailbreaker.a5d507ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/market.32e2d0f1.png\";","module.exports = __webpack_public_path__ + \"static/media/shop.a9cce2eb.png\";","const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://172.20.10.2:4001\"; //192.168.1.38\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\", //https://apps.apple.com/us/app/mastercrimez/id1527333711?app=itunes\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Alert,\n  Dimensions,\n  Image,\n  Platform,\n  ScaledSize,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Captcha = ({ loginToken }) => {\n  const [random, setRandom] = useState(Math.random());\n\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${loginToken}`;\n\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      <Image\n        source={{ uri }}\n        style={{ marginLeft: 20, width: 150, height: 50 }}\n      />\n      <TouchableOpacity onPress={() => setRandom(Math.random())}>\n        <MaterialCommunityIcons name=\"reload\" size={32} color=\"black\" />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport const withCaptcha = (\n  loginToken,\n  needCaptcha,\n  getText,\n  alertAlert,\n  setCode\n) => {\n  if (needCaptcha) {\n    alertAlert(\n      getText(\"fillInCaptcha\"),\n      getText(\"pleaseFillInCaptcha\"),\n      [\n        {\n          text: getText(\"ok\"),\n          onPress: setCode,\n        },\n      ],\n      {\n        key: \"captcha\",\n        textInput: true,\n        keyboardType: \"numeric\",\n        component: <Captcha loginToken={loginToken} />,\n      }\n    );\n  } else {\n    setCode(null);\n  }\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport function ColorLuminance(hex, lum) {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  var rgb = \"#\",\n    c,\n    i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += (\"00\" + c).substr(c.length);\n  }\n\n  return rgb;\n}\n\nexport const lighterHex = (hex) => ColorLuminance(hex, 0.2);\nexport const darkerHex = (hex) => ColorLuminance(hex, -0.2);\n\nexport const getUserColor = (item, theme) =>\n  item?.creditsTotal >= 10000\n    ? \"red\"\n    : item?.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nexport const AlertContext = React.createContext({});\n\nexport const AlertProvider = ({ children }) => {\n  const [alerts, setAlerts] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const getText = getTextFunction(); //TODO: Provide me?.locale\n\n  const textInputRef = useRef(null);\n\n  const theAlert = alerts[0];\n  useEffect(() => {\n    textInputRef.current?.focus();\n  }, [textInputRef, alerts.length]);\n\n  return (\n    <AlertContext.Provider\n      value={(title, message, buttons, options) => {\n        setValue(\"\");\n\n        console.log(\"lengte\", alerts.length);\n\n        // alerts copy.\n        const newAlerts = [...alerts];\n        if (!alerts.map((x) => x.options.key).includes(options.key)) {\n          newAlerts.push({ title, message, buttons, options });\n        }\n        //NB: copy needed!!!\n        setAlerts([...newAlerts]);\n      }}\n    >\n      {children}\n      {alerts.length > 0 ? (\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: theAlert.options?.textInput ? 200 : 0,\n            left: 0,\n            right: 0,\n            backgroundColor: \"rgba(0,0,0,0.3)\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: \"#DDD\",\n              borderRadius: 20,\n              width: \"80%\",\n              alignItems: \"center\",\n            }}\n          >\n            {(theAlert.title || theAlert.message) && (\n              <View style={{ padding: 20 }}>\n                {theAlert.title && (\n                  <Text\n                    style={{\n                      fontWeight: \"bold\",\n                      fontSize: 18,\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {theAlert.title}\n                  </Text>\n                )}\n                {theAlert.message && (\n                  <Text style={{ textAlign: \"center\" }}>\n                    {theAlert.message}\n                  </Text>\n                )}\n              </View>\n            )}\n\n            {theAlert.options?.component && (\n              <View style={{ padding: 20 }}>{theAlert.options.component}</View>\n            )}\n\n            {theAlert.options?.textInput && (\n              <View style={{ padding: 20, width: \"100%\" }}>\n                <TextInput\n                  value={value}\n                  onChangeText={setValue}\n                  ref={textInputRef}\n                  style={{\n                    fontSize: 18,\n                    backgroundColor: \"white\",\n                    width: \"100%\",\n                    borderRadius: 3,\n                    padding: 3,\n                  }}\n                  keyboardType={theAlert.options?.keyboardType}\n                />\n              </View>\n            )}\n\n            <View\n              style={{ width: \"100%\", height: 1, backgroundColor: \"#BBB\" }}\n            />\n\n            {theAlert.buttons ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  width: \"100%\",\n                }}\n              >\n                {theAlert.buttons.map((button, index) => (\n                  <TouchableOpacity\n                    key={`${theAlert.options.key}button${index}`}\n                    style={{\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      height: 40,\n                      flex: 1,\n                      borderRightColor: \"#BBB\",\n                      borderRightWidth:\n                        index < theAlert.buttons.length - 1 ? 1 : 0,\n                    }}\n                    onPress={() => {\n                      const newAlerts = [...alerts];\n                      newAlerts.shift();\n\n                      console.log(\"newAlerts\", newAlerts.length);\n\n                      // NB: we need to make a copy here, otherwise it has the same reference and the component thinks that it didn't change.\n                      setAlerts([...newAlerts]);\n\n                      setValue(\"\");\n\n                      button.onPress?.(value);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: \"blue\",\n                        fontSize: 18,\n                      }}\n                    >\n                      {button.text}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            ) : (\n              <TouchableOpacity\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 40,\n                }}\n                onPress={() => {\n                  const newAlerts = alerts.filter(\n                    (x) => x.options.key !== theAlert.options.key\n                  );\n\n                  console.log(\"newAlerts\", newAlerts.lenth);\n\n                  // NB: we need to make a copy here, otherwise it has the same reference and the component thinks that it didn't change.\n                  setAlerts([...newAlerts]);\n                }}\n              >\n                <Text style={{ color: \"blue\", fontSize: 18 }}>\n                  {getText(\"ok\")}\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      ) : null}\n    </AlertContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withAlert = (ChildComponent) => (props) => (\n  <AlertContext.Consumer>\n    {(context) => <ChildComponent {...props} alert={context} />}\n  </AlertContext.Consumer>\n);\n","import NetInfo from \"@react-native-community/netinfo\";\nimport React from \"react\";\nimport { Platform, SafeAreaView, Text, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Constants from \"../Constants\";\n\nconst CONNECTION_GOOD = 2;\nconst CONNECTION_BAD = 1;\nconst CONNECTION_NONE = 0;\n\nclass ConnectionProviderScreen extends React.Component {\n  componentDidMount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe = NetInfo.addEventListener((state) => {\n        // console.log(\"Connection type\", state.type);\n        // console.log(\"Is connected?\", state.isConnected);\n        this.props.setIsConnected(\n          state.isConnected ? CONNECTION_GOOD : CONNECTION_NONE\n        );\n      });\n    }\n\n    this.interval = setInterval(this.fetchWithTimeout, 5000);\n\n    // To unsubscribe to these update, just use:\n  }\n\n  fetchWithTimeout = () => {\n    const FETCH_TIMEOUT = 5000;\n    let didTimeOut = false;\n\n    new Promise(function (resolve, reject) {\n      const timeout = setTimeout(function () {\n        didTimeOut = true;\n        reject(new Error(\"Request timed out\"));\n      }, FETCH_TIMEOUT);\n\n      fetch(Constants.SERVER_ADDR + \"/healthcheck\")\n        .then(function (response) {\n          // Clear the timeout as cleanup\n          clearTimeout(timeout);\n          if (!didTimeOut) {\n            // console.log(\"fetch good! \");\n            resolve(response);\n          }\n        })\n        .catch(function (err) {\n          // console.log(\"fetch failed! \", err);\n\n          // Rejection already happened with setTimeout\n          if (didTimeOut) return;\n          // Reject with error\n          reject(err);\n        });\n    })\n      .then(() => {\n        // Request success and no timeout\n        this.props.setIsConnected(CONNECTION_GOOD);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        this.props.setIsConnected(CONNECTION_BAD);\n        // Error: response error, request timeout or runtime error\n      });\n  };\n\n  componentWillUnmount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe();\n    }\n    clearTimeout(this.interval);\n  }\n\n  render() {\n    const { children, isConnected } = this.props;\n\n    return (\n      <View style={{ flex: 1 }}>\n        {isConnected !== CONNECTION_GOOD && (\n          <View\n            style={{\n              backgroundColor:\n                isConnected === CONNECTION_BAD ? \"orange\" : \"red\",\n              padding: 15,\n            }}\n          >\n            <SafeAreaView>\n              <Text style={{ color: \"white\" }}>\n                {isConnected === CONNECTION_BAD ? \"Slechte\" : \"Geen\"}{\" \"}\n                internetverbinding!\n              </Text>\n            </SafeAreaView>\n          </View>\n        )}\n        {children}\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isConnected: state.device.isConnected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setIsConnected: (isConnected) =>\n    dispatch({ type: \"SET_IS_CONNECTED\", value: isConnected }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectionProviderScreen);\n","import React, { useEffect, useState } from \"react\";\nimport { post } from \"../Util\";\n\nexport const IntervalContext = React.createContext({});\nexport const IntervalProvider = ({\n  children,\n  screenProps: { me, dispatch, device, reloadMe },\n}) => {\n  const [token, setToken] = useState(device.loginToken);\n\n  useEffect(() => {\n    if (token) {\n      const intervalReloadMe = setInterval(() => {\n        // console.log(\"This will run every 5 seconds! TOKEN:\", token);\n        reloadMe(device.loginToken);\n      }, 5000);\n\n      const intervalMovements = setInterval(() => {\n        // console.log(\"This will run every 60 seconds! TOKEN:\");\n        sendMovements();\n      }, 60000);\n\n      return () => {\n        // console.log(\"clearing interval because token changed\");\n        clearInterval(intervalReloadMe);\n        clearInterval(intervalMovements);\n      };\n    }\n  }, [token]);\n\n  const sendMovements = () => {\n    // console.log(\"sendMovements\", device.loginToken);\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  };\n\n  return (\n    <IntervalContext.Provider\n      value={{\n        resetIntervalsForToken: (token) => setToken(token),\n      }}\n    >\n      {children}\n    </IntervalContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withInterval = (ChildComponent) => (props) => (\n  <IntervalContext.Consumer>\n    {(context) => <ChildComponent {...props} intervals={context} />}\n  </IntervalContext.Consumer>\n);\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport { useSelector } from \"react-redux\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nconst Button = ({ icon, font, title, onPress, disabled, style }) => {\n  const TheIcon = font && icon ? Icon[font] : View;\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity onPress={disabled ? undefined : onPress}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: disabled ? `${theme.secondary}55` : theme.secondary,\n          padding: 10,\n          justifyContent: \"center\",\n          paddingHorizontal: isSmall ? 5 : 20,\n          // borderRadius: 20,\n          ...style,\n        }}\n      >\n        {font && icon ? (\n          <View style={{ marginRight: 20 }}>\n            <TheIcon name={icon} color={theme.secondaryText} size={20} />\n          </View>\n        ) : null}\n\n        {title && (\n          <Text style={{ textAlign: \"center\", color: theme.secondaryText }}>\n            {title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Image, Text, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View>\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Dead;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  chat = () => {\n    const { chat } = this.state;\n    return chat.map((item, index) => (\n      <Text key={`item${index}`}>\n        <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n        {item.message}&nbsp;&nbsp;\n      </Text>\n    ));\n  };\n  render() {\n    const { device, navigation, me } = this.props;\n\n    const { chat, input } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const allText = chat\n      .map((item) => `${item.name}${item.message}`)\n      .join(\"::::\");\n    return (\n      <View style={{ height: Platform.select({ web: 50, default: 100 }) }}>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#444\",\n            borderWidth: 1,\n            borderColor: \"black\",\n            flexDirection: Platform.select({ web: \"row\", default: undefined }),\n          }}\n        >\n          {Platform.select({\n            web: (\n              <View style={{ flex: 1, justifyContent: \"center\" }}>\n                {allText ? (\n                  <Ticker>\n                    {({ index }) => {\n                      return (\n                        <>\n                          {chat.map((item, index) => (\n                            <Text\n                              style={{ color: \"white\" }}\n                              numberOfLines={1}\n                              key={`item${index}`}\n                            >\n                              <TouchableOpacity\n                                onPress={() => {\n                                  navigation.navigate(\"Profile\", {\n                                    name: item.name,\n                                  });\n                                }}\n                              >\n                                <Text style={{ fontWeight: \"bold\" }}>\n                                  {item.name}\n                                </Text>\n                              </TouchableOpacity>\n                              :&nbsp;{item.message}&nbsp;&nbsp;\n                            </Text>\n                          ))}\n                        </>\n                      );\n                    }}\n                  </Ticker>\n                ) : null}\n              </View>\n            ),\n\n            default: (\n              <MarqueeText\n                style={{ fontSize: 20 }}\n                duration={allText.length * 50}\n                marqueeOnStart\n                loop\n                marqueeDelay={200}\n                marqueeResetDelay={1000}\n              >\n                <>\n                  {chat.map((item, index) => (\n                    <Fragment key={`item${index}`}>\n                      <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                      :&nbsp;{item.message}&nbsp;&nbsp;\n                    </Fragment>\n                  ))}\n                </>\n              </MarqueeText>\n            ),\n          })}\n          <View style={{ width: 100, height: 30 }}>\n            <TextInput\n              value={input}\n              placeholder={getText(\"chatYourMessage\")}\n              style={{\n                backgroundColor: \"#404040\",\n                fontSize: 20,\n                color: \"white\",\n                flex: 1,\n                width: 100,\n              }}\n              onChangeText={(input) => this.setState({ input })}\n              onSubmitEditing={({ nativeEvent: { text } }) => {\n                fetch(`${Constants.SERVER_ADDR}/chat`, {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    token: device.loginToken,\n                    message: text,\n                  }),\n                })\n                  .then((response) => response.json())\n                  .then((chat) => {\n                    this.getChat();\n\n                    if (Platform.OS === \"web\") {\n                      location.reload();\n                    }\n\n                    this.setState({ input: \"\" });\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  StatusBar,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Chat from \"../components/Chat\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nconst isSmallDevice = width < 800;\n\nfunction Header({ navigation, device, me }) {\n  const getText = getTextFunction(me?.locale);\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: device.theme.secondaryText,\n  };\n  const showNotActivated = me?.phoneVerified === false && me?.numActions >= 20;\n  const notActivated = showNotActivated && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const dontShowStatsHeader =\n    navigation.state.routeName === \"Channels\" ||\n    navigation.state.routeName === \"Channel\" ||\n    navigation.state.routeName === \"Chat\" ||\n    navigation.state.routeName === \"More\";\n\n  const showBackButton =\n    navigation.state.routeName !== \"Home\" &&\n    navigation.state.routeName !== \"AllStats\" &&\n    navigation.state.routeName !== \"More\" &&\n    navigation.state.routeName !== \"Channels\";\n\n  const statsHeader = dontShowStatsHeader ? null : (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2,\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5,\n        }}\n      >\n        <Text style={textStyle}>\n          😎 {me?.name} {me?.gang?.name}\n        </Text>\n        <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n        <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon.MaterialCommunityIcons\n            name=\"pistol\"\n            size={18}\n            color={device.theme.secondaryText}\n            style={{ marginRight: 5 }}\n          />\n          <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n        </View>\n        <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n        <Text style={textStyle}>🌍 {me?.city}</Text>\n        <Text style={textStyle}>❤️ {me?.health}%</Text>\n        <Text style={textStyle}>\n          ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n        </Text>\n        <Text style={textStyle}>💪 {getStrength(me?.strength, \"both\")}</Text>\n        {!me?.newVersion && (\n          <Text\n            style={textStyle}\n            onPress={() => navigation.navigate(\"Channels\")}\n          >\n            💬 {me?.chats}\n          </Text>\n        )}\n      </View>\n\n      {!me?.phoneVerified && (\n        <View\n          style={{\n            padding: 5,\n            backgroundColor: device.theme.secondary,\n            borderRadius: 5,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"VerifyPhone\")}\n          >\n            <AntDesign\n              name=\"exclamationcircleo\"\n              color=\"red\"\n              style={{ marginRight: 10 }}\n            />\n            <Text\n              style={{\n                color: device.theme.secondaryText,\n                fontWeight: \"bold\",\n              }}\n            >\n              {getText(\"headerVerifyYourAccount\")}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const backButton = (\n    <View\n      style={{\n        margin: 10,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n      }}\n    >\n      {showBackButton ? (\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => {\n            if (isSmallDevice || Platform.OS !== \"web\") {\n              navigation.goBack();\n            } else {\n              window.history.back();\n            }\n          }}\n        >\n          <AntDesign\n            name=\"arrowleft\"\n            size={32}\n            color={device.theme.secondaryText}\n          />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ height: 20 }} />\n      )}\n    </View>\n  );\n\n  const webHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n        <View style={{ width: 50 }}>{backButton}</View>\n\n        <View style={{ alignItems: \"center\", flex: 1 }}>\n          <Image\n            source={require(\"../../assets/logos/logo5.jpg\")}\n            style={{\n              margin: 10,\n              width: isSmallDevice ? 200 : 600,\n              height: isSmallDevice ? 33 : 100,\n            }}\n          />\n        </View>\n\n        <Text style={{ color: \"white\", marginTop: 20 }}>\n          v{Constants.manifest.version}\n        </Text>\n\n        {isSmallDevice ? (\n          <TouchableOpacity\n            onPress={() => {\n              navigation.toggleDrawer();\n            }}\n            style={{ margin: 10 }}\n          >\n            <Feather\n              name=\"menu\"\n              size={32}\n              color=\"#FFF\"\n              style={{ color: \"#FFF\" }}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      {isSmallDevice && statsHeader}\n\n      <Chat me={me} device={device} navigation={navigation} />\n    </View>\n  );\n\n  const showSomething =\n    showBackButton ||\n    !dontShowStatsHeader ||\n    updateAvailable ||\n    showNotActivated;\n\n  return (\n    <View style={{ justifyContent: \"center\" }}>\n      {Platform.OS === \"web\" ? (\n        webHeader\n      ) : (\n        <View\n          style={{\n            backgroundColor: device.theme.secondary,\n            paddingTop:\n              Platform.OS === \"android\" && showSomething\n                ? StatusBar.currentHeight\n                : 0,\n          }}\n        >\n          {backButton}\n          {updateComponent || notActivated || statsHeader}\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default Header;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import { canUseDOM } from \"fbjs/lib/ExecutionEnvironment\";\n\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener(\"touchstart\", disableHover, true);\n  document.addEventListener(\"touchmove\", disableHover, true);\n  document.addEventListener(\"mousemove\", enableHover, true);\n}\n\nexport function isHoverEnabled() {\n  return isEnabled;\n}\n","import { element, func, oneOfType } from \"prop-types\";\nimport React from \"react\";\nimport { isHoverEnabled } from \"./HoverState\";\n\nexport default function Hoverable({ onHoverIn, onHoverOut, children }) {\n  const [isHovered, setHovered] = React.useState(false);\n  const [showHover, setShowHover] = React.useState(true);\n\n  function handleMouseEnter(e) {\n    if (isHoverEnabled() && !isHovered) {\n      if (onHoverIn) onHoverIn();\n      setHovered(true);\n    }\n  }\n\n  function handleMouseLeave(e) {\n    if (isHovered) {\n      if (onHoverOut) onHoverOut();\n      setHovered(false);\n    }\n  }\n\n  function handleGrant() {\n    setShowHover(false);\n  }\n\n  function handleRelease() {}\n\n  const child =\n    typeof children === \"function\"\n      ? children(showHover && isHovered)\n      : children;\n\n  return React.cloneElement(React.Children.only(child), {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    // prevent hover showing while responder\n    onResponderGrant: () => setShowHover(false),\n    onResponderRelease: () => setShowHover(true),\n    // if child is Touchable\n    onPressIn: handleGrant,\n    onPressOut: handleRelease,\n  });\n}\n\nHoverable.displayName = \"Hoverable\";\n\nHoverable.propTypes = {\n  children: oneOfType([func, element]),\n  onHoverIn: func,\n  onHoverOut: func,\n};\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport { IntervalContext } from \"./IntervalProvider\";\nimport T from \"./T\";\n\nconst LoginModal = ({\n  screenProps: {\n    dispatch,\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n  navigation,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [phone, setPhone] = useState(\"\");\n  const [view, setView] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const changeName = async () => {\n    const { response, success } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    setResponse(response);\n\n    return success;\n  };\n\n  const login = () => dispatch({ type: \"SET_LOGGED\", value: true });\n  useEffect(() => {\n    setName(me?.name);\n  }, [me?.name]);\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n  const postVerifyPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n          resetIntervalsForToken(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postLogin = () => {\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        if (responseJson.error) {\n          setError(responseJson.error);\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n          reloadMe(responseJson.loginToken);\n          setError(null);\n          setSuccess(responseJson.success);\n          resetIntervalsForToken(responseJson.token);\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postSetPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token: device.loginToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          setView(\"code\");\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderEmailPassLogin = () => (\n    <View>\n      <View\n        style={{\n          margin: 20,\n          padding: 20,\n          borderRadius: 20,\n        }}\n      >\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\n\n        {success ? (\n          <Text style={{ color: \"green\" }}>{success}</Text>\n        ) : (\n          <View>\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n              <TextInput\n                placeholder={getText(\"email\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                onChangeText={setEmail}\n                value={email}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n              <TextInput\n                secureTextEntry\n                onChangeText={setPassword}\n                value={password}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <View />\n\n              <Button\n                theme={theme}\n                title={getText(\"login\")}\n                onPress={() => postLogin()}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n\n                  navigation.navigate(\"SignupEmail\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"register\")}\n                </Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n                  navigation.navigate(\"ForgotPassword\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"forgotPassword\")}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n  const renderCode = () => (\n    <View>\n      {response && <T>{response}</T>}\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n        <TextInput\n          placeholder=\"000000\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setCode}\n          value={code}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button title={getText(\"validate\")} onPress={() => postVerifyPhone()} />\n      </View>\n    </View>\n  );\n  const renderPhoneLogin = () => (\n    <View>\n      {response && <T>{response}</T>}\n\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n        <TextInput\n          placeholder=\"+31\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setPhone}\n          value={phone}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button\n          theme={theme}\n          title={getText(\"save\")}\n          onPress={() => postSetPhone()}\n        />\n      </View>\n    </View>\n  );\n  const renderMain = () => (\n    <View>\n      {/* Option 1: Just play */}\n      {response && <T>{response}</T>}\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"youAre\")}</T>\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={[style(theme).textInput, { marginLeft: 10 }]}\n          placeholder={getText(\"name\")}\n          value={name}\n          onChangeText={setName}\n        />\n      </View>\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"justPlay\")}\n        onPress={async () => {\n          if (!me) {\n            setResponse(getText(\"waitUntilLoaded\"));\n            return;\n          }\n          if (name !== me?.name) {\n            const success = await changeName();\n            if (success) {\n              reloadMe(device.loginToken);\n\n              login();\n            }\n          } else {\n            login();\n          }\n        }}\n      />\n      {/* Option 2: Login with email */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithEmail\")}\n        onPress={() => setView(\"emailPass\")}\n      />\n      {/* Option 3: Login with phone number */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithPhone\")}\n        onPress={() => setView(\"phone\")}\n      />\n    </View>\n  );\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: \"rgba(0,0,0,0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: 20,\n          padding: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={view !== null ? () => setView(null) : login}\n          style={{ alignSelf: \"flex-end\" }}\n        >\n          <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n        </TouchableOpacity>\n\n        {!me?.id ? <ActivityIndicator /> : null}\n\n        {view === \"emailPass\"\n          ? renderEmailPassLogin()\n          : view === \"phone\"\n          ? renderPhoneLogin()\n          : view === \"code\"\n          ? renderCode()\n          : renderMain()}\n      </View>\n    </View>\n  );\n};\n\nexport default LoginModal;\n","import * as React from \"react\";\nimport { Animated, Easing, Keyboard, Platform, StatusBar } from \"react-native\";\nimport { isIphoneX } from \"./Util\";\n\ninterface KeyboardAvoidingSpaceProps {\n  onKeyboardWillShow?: (duration: number) => void;\n  onKeyboardWillHide?: (duration: number) => void;\n  offset?: number;\n}\n\ninterface KeyboardAvoidingSpaceState {\n  height: Animated.Value;\n}\n\n/**\n * Made with swag by yours truly\n * @author Brad \"Swagalicious\" Johnson\n */\nexport class KeyboardAvoidingSpace extends React.Component<\n  KeyboardAvoidingSpaceProps,\n  KeyboardAvoidingSpaceState\n> {\n  constructor(props: KeyboardAvoidingSpaceProps) {\n    super(props);\n    this.state = {\n      height: new Animated.Value(0),\n    };\n  }\n\n  componentDidMount() {\n    this.bindListeners();\n  }\n\n  componentWillUnmount() {\n    this.unbindListeners();\n  }\n\n  bindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        this.keyboardWillHide\n      );\n    } else {\n      this.keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        this.keyboardWillHide\n      );\n    }\n  }\n\n  unbindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    } else {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }\n\n  keyboardWillShow = (e: any) => {\n    // because of iPhone X new screen settings, remove SafeAreaView padding-bottom when keyboard is open\n    const SafeAreaViewPaddingBottom = 34;\n    const duration = e && e.duration ? e.duration : 100;\n    let notchHeight = 0;\n    if (\n      Platform.OS === \"android\" &&\n      StatusBar.currentHeight &&\n      StatusBar.currentHeight > 24\n    ) {\n      notchHeight = StatusBar.currentHeight;\n    }\n    // let suggestHeight = 0;\n    // if (Platform.OS === \"ios\") {\n    //   suggestHeight = 30;\n    // }\n    if (this.props.onKeyboardWillShow) {\n      this.props.onKeyboardWillShow(duration);\n    }\n\n    const toValue =\n      e.endCoordinates.height -\n      // suggestHeight +\n      // notchHeight -\n      (this.props.offset || 0) -\n      (isIphoneX() ? SafeAreaViewPaddingBottom : 0);\n\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  keyboardWillHide = (e: any) => {\n    const duration = e && e.duration ? e.duration : 100;\n    if (this.props.onKeyboardWillHide) {\n      this.props.onKeyboardWillHide(duration);\n    }\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    return <Animated.View style={{ height: this.state.height }} />;\n  }\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"./Constants\";\nimport { getRank, getTextFunction, numberFormat } from \"./Util\";\n\nexport const isHappyHour = () => {\n  const isSunday = moment().day() === 0; //sunday\n  const is7pm = moment().hour() === 19; //19pm\n  const isHappyHourReleased = moment().isAfter(\n    moment(\"01/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17)\n  );\n  return isHappyHourReleased && (isSunday || is7pm);\n};\n\nexport const InactiveScreens = {\n  ACTIONS_BEFORE_ROBBERY: 120,\n  ACTIONS_BEFORE_DETECTIVES: 30,\n  ACTIONS_BEFORE_BOMB: 60,\n  ACTIONS_BEFORE_CASINO: 70,\n  ACTIONS_BEFORE_BUNKER: 20,\n  ACTIONS_BEFORE_HOSPITAL: 30,\n  ACTIONS_BEFORE_RACECARS: 80,\n  ACTIONS_BEFORE_STREETRACE: 80,\n  ACTIONS_AMOUNT_NEW: 10,\n  ACTIONS_BEFORE_ROB: 20,\n  ACTIONS_BEFORE_ROB_KILL_MENU: 20,\n  ACTIONS_BEFORE_KILL: 30,\n  ACTIONS_BEFORE_BULLETFACTORY: 40,\n  ACTIONS_BEFORE_MARKET: 50,\n  ACTIONS_BEFORE_AIRPORT: 30,\n  DAYS_NEW: 14,\n  ACTIONS_BEFORE_POLICE: 100,\n  OC_RELEASE_DATE: moment(\"01/08/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  DETECTIVES_RELEASE_DATE: moment(\"01/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  GANG_MISSIONS_RELEASE_DATE: moment(\"01/05/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_BULLET_FACTORY_RELEASE_DATE: moment(\"15/08/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  PRIZES_NORMAL_RELEASE_DATE: moment(\"01/12/2020\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_RELEASE_DATE: moment(\"30/11/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  MARKET_RELEASE_DATE: moment(\"15/12/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  PRIZES_RELEASE_DATE: moment(\"01/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  POLICE_RELEASE_DATE: moment(\"15/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  ROBBERY_RELEASE_DATE: moment(\"15/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  //happy hour 1 feb\n\n  WORK_RELEASE_DATE: moment(\"15/04/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n};\n\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const robberySeconds = Math.ceil(\n    (me?.robberyAt + me?.robberySeconds * 1000 - Date.now()) / 1000\n  );\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCrime\"),\n        label: isHappyHour() ? \"Happy Hour\" : undefined,\n      },\n\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuCrimes\"),\n          to: \"Crimes\",\n          component:\n            crimeSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={crimeSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"stepforward\",\n          text: getText(\"menuGym\"),\n          to: \"Gym\",\n          component:\n            gymSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={gymSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"tree\",\n          text: getText(\"menuWiet\"),\n          to: \"Wiet\",\n          component:\n            wietSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={wietSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialIcons\",\n          icon: \"people\",\n          text: getText(\"menuJunkies\"),\n          to: \"Junkies\",\n          component:\n            junkiesSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={junkiesSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"female\",\n          text: getText(\"menuProstitutes\"),\n          to: \"Hoeren\",\n          component:\n            hoerenSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={hoerenSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive:\n            moment().isBefore(InactiveScreens.WORK_RELEASE_DATE) &&\n            me?.level < 2,\n          isNew: moment().isBefore(\n            moment(InactiveScreens.WORK_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"tool\",\n          text: getText(\"menuWork\"),\n          to: \"Work\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bars\",\n          text: getText(\"menuJail\", me?.jail),\n          to: \"Jail\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_BOMB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BOMB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"bomb\",\n          text: getText(\"menuBomb\"),\n          to: \"Bomb\",\n        },\n\n        {\n          inactive:\n            (moment().isBefore(InactiveScreens.ROBBERY_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROBBERY,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.ROBBERY_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_ROBBERY +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuRobbery\"),\n          to: \"Robbery\",\n          component:\n            robberySeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robberySeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    !(\n      !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB_KILL_MENU\n    ) && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerRobMurder\"),\n      },\n\n      content: [\n        {\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_KILL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_KILL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuKill\"),\n          to: \"Kill\",\n          component:\n            attackSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={attackSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_ROB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuRob\"),\n          to: \"Rob\",\n          component:\n            robSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive:\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuBulletfactory\"),\n          to: \"Bulletfactory\",\n        },\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_BUNKER,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BUNKER +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"warehouse\",\n          text: getText(\"menuBunker\"),\n          to: \"Bunker\",\n          component:\n            bunkerSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={bunkerSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_HOSPITAL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_HOSPITAL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"hospital\",\n          text: getText(\"menuHospital\"),\n          to: \"Hospital\",\n        },\n\n        {\n          inactive:\n            (moment().isBefore(InactiveScreens.DETECTIVES_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_DETECTIVES,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.DETECTIVES_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACtIONS_BEFORE_DETECTIVES +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"search\",\n          text: getText(\"menuDetectives\"),\n          to: \"Detectives\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCars\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"car\",\n          text: getText(\"menuStealCar\"),\n          to: \"StealCar\",\n          component:\n            stealcarSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={stealcarSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-car\",\n          text: getText(\"menuGarage\"),\n          to: \"AllGarage\",\n        },\n        // {\n        //   inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_RACECARS,\n        //   isNew:\n        //     me?.numActions <\n        //     InactiveScreens.ACTIONS_BEFORE_RACECARS +\n        //       InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n        //   iconType: \"MaterialIcons\",\n        //   icon: \"local-car-wash\",\n        //   text: getText(\"menuRacecars\"),\n        //   to: \"Racecars\",\n        // },\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_STREETRACE,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_STREETRACE +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"car-key\",\n          text: getText(\"menuStreetrace\"),\n          to: \"Streetrace\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSpend\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuBank\"),\n          to: \"AllBanks\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me.level < 1) &&\n              moment().isBefore(InactiveScreens.MARKET_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_MARKET,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.MARKET_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_MARKET +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuMarket\"),\n          to: \"Market\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_CASINO,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_CASINO +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome5\",\n          icon: \"dice\",\n          text: getText(\"menuCasino\"),\n          to: \"Casino\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuWeaponShop\"),\n          to: \"WeaponShop\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"shield\",\n          text: getText(\"menuProtectionShop\"),\n          to: \"ProtectionShop\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-airplane\",\n          text: getText(\"menuAirplaneShop\"),\n          to: \"AirplaneShop\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"garage\",\n          text: getText(\"menuGarageShop\"),\n          to: \"GarageShop\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_AIRPORT,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_AIRPORT +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"plane\",\n          text: getText(\"menuAirport\"),\n          to: \"Airport\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n  ].filter((x) => !!x);\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level >= 5\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuReports\"),\n            to: \"Reports\",\n          },\n        ]\n      : [];\n\n  const betaTester =\n    me?.level >= 2\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"map\",\n            text: getText(\"menuMap\"),\n            to: \"Map\",\n          },\n        ]\n      : [];\n  const admin = me?.level >= 10 ? [] : [];\n\n  return (\n    me?.level > 1 && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAdminPanel\"),\n      },\n      content: [...betaTester, ...gameMod, ...admin],\n    }\n  );\n};\n\nexport const rightMenu = (me, theme) => {\n  const getText = getTextFunction(me?.locale);\n  const ocSeconds = Math.ceil((me?.ocAt + 3600000 - Date.now()) / 1000);\n\n  const isGangsReleased = new moment().isAfter(\n    InactiveScreens.GANG_RELEASE_DATE\n  );\n  const gangMenus =\n    me?.level > 1 || isGangsReleased\n      ? {\n          header: {\n            isHeader: true,\n            isNew: moment().isBefore(\n              moment(InactiveScreens.GANG_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ),\n            text: me?.gang?.name || getText(\"headerGang\"),\n            image: me?.gang?.thumbnail\n              ? Constants.SERVER_ADDR + me?.gang?.thumbnail\n              : null,\n          },\n          content: [\n            !me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangCreate\"),\n              to: \"GangCreate\",\n            },\n            {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangs\"),\n              to: \"Gangs\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangSettings\"),\n              to: \"GangSettings\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangShop\"),\n              to: \"GangShop\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangAchievements\"),\n              to: \"GangAchievements\",\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(\n                  InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE\n                ),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"MaterialCommunityIcons\",\n              icon: \"pistol\",\n              text: getText(\"menuBulletfactory\"),\n              to: \"GangBulletFactory\",\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(InactiveScreens.OC_RELEASE_DATE),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.OC_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"Ionicons\",\n              icon: \"md-cash\",\n              text: getText(\"menuOC\"),\n              to: \"OC\",\n              component:\n                ocSeconds > 0 ? (\n                  <CountDown\n                    style={{ marginLeft: 10 }}\n                    until={ocSeconds}\n                    digitStyle={{ backgroundColor: theme.secondary }}\n                    digitTxtStyle={{ color: theme.secondaryText }}\n                    onFinish={() => {}}\n                    size={8}\n                    timeToShow={[\"M\", \"S\"]}\n                    timeLabels={{ m: null, s: null }}\n                  />\n                ) : null,\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(InactiveScreens.GANG_MISSIONS_RELEASE_DATE),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.GANG_MISSIONS_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"Ionicons\",\n              icon: \"md-cash\",\n              text: getText(\"menuGangMissions\"),\n              to: \"GangMissions\",\n            },\n          ].filter((x) => !!x && !x.inactive),\n        }\n      : null;\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: me?.name,\n        image: me?.thumbnail ? Constants.SERVER_ADDR + me?.thumbnail : null,\n      },\n\n      content: [\n        {\n          isStats: true,\n          iconType: \"FontAwesome5\",\n          icon: \"coins\",\n          text: getText(\"menuCash\", numberFormat(me?.cash)),\n          to: \"AllBanks\",\n        },\n\n        {\n          isStats: true,\n\n          iconType: \"FontAwesome\",\n          icon: \"money\",\n\n          text: getText(\"menuBankMoney\", numberFormat(me?.bank)),\n          to: \"AllBanks\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"bullet\",\n\n          text: getText(\"menuBullets\", numberFormat(me?.bullets)),\n          to: \"Kill\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"SimpleLineIcons\",\n          icon: \"badge\",\n          text: getText(\"menuRank\", getRank(me?.rank, \"both\")),\n          to: \"Status\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"AntDesign\",\n          icon: \"heart\",\n\n          text: getText(\"menuHealth\", me?.health),\n          to: \"Hospital\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"Ionicons\",\n          icon: \"ios-airplane\",\n\n          text: getText(\"menuCity\", me?.city),\n          to: \"Airport\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChannels\", me?.chats),\n          to: \"Channels\",\n        },\n      ],\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSociety\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n\n          text: getText(\"menuMembers\", me?.online),\n          to: \"Members\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStats\"),\n          to: \"Stats\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStatus\"),\n          to: \"Status\",\n        },\n      ],\n    },\n\n    gangMenus,\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerGeneral\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChat\"),\n          to: \"Chat\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"wechat\",\n\n          text: getText(\"menuForum\"),\n          to: \"Forum\",\n        },\n\n        {\n          inactive:\n            me?.level < 2 &&\n            !(\n              moment().year() > 2020 &&\n              ((moment().month() === 10 && moment().date() > 15) ||\n                (moment().month() === 11 && moment().date() < 6))\n            ),\n          isNew: true,\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuSint\"),\n          to: \"Sint\",\n        },\n\n        {\n          iconType: \"SimpleLineIcons\",\n          icon: \"settings\",\n\n          text: getText(\"menuSettings\"),\n          to: \"Settings\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"info-with-circle\",\n\n          text: getText(\"menuInfo\"),\n          to: \"Info\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuHackers\"),\n          to: \"Hackers\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuPolice\"),\n          to: \"Police\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuVIP\"),\n          to: \"VIP\",\n        },\n\n        {\n          inactive:\n            me?.level < 2 &&\n            moment().isBefore(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.PRIZES_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"prizes\"),\n          to: \"Prizes\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    adminMenu(me),\n  ].filter((x) => !!x);\n};\n","import * as Icon from \"@expo/vector-icons\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as StoreReview from \"expo-store-review\";\nimport React, { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  AppState,\n  Dimensions,\n  Image,\n  Linking,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport Dead from \"./components/Dead\";\nimport Header from \"./components/Header\";\nimport Hoverable from \"./components/Hoverable\";\nimport { IntervalContext } from \"./components/IntervalProvider\";\n// import { loadReCaptcha } from \"react-recaptcha-v3\";\nimport LoginModal from \"./components/LoginModal\";\nimport T from \"./components/T\";\nimport { KeyboardAvoidingSpace } from \"./KeyboardAvoidingSpace\";\nimport { leftMenu, rightMenu } from \"./Menus\";\nimport { darkerHex, doOnce, getTextFunction, lighterHex } from \"./Util\";\n\nexport const CustomDrawerContentComponent = (props) => {\n  const {\n    navigation,\n    screenProps: { me, device, dispatch },\n  } = props;\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  return (\n    <ScrollView>\n      <SafeAreaView\n        style={{ flex: 1, backgroundColor: device.theme.primary }}\n        forceInset={{ top: \"always\", horizontal: \"never\" }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\nexport const renderMenu = (\n  item,\n  index,\n  navigation,\n  theme: Theme,\n  dispatch,\n  me\n) => {\n  const TheIcon = Icon[item.iconType];\n\n  const isCurrent = navigation.state.routeName === item.to;\n  const TouchOrView = item.isHeader ? View : TouchableOpacity;\n  const getText = getTextFunction(me?.locale);\n  return (\n    <TouchOrView\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <Hoverable onHoverIn={null} onHoverOut={null}>\n        {(isHovered) => (\n          <View\n            style={{\n              borderBottomWidth: 0,\n              padding: 3,\n              backgroundColor: item.isHeader\n                ? theme.primary\n                : darkerHex(theme.primary),\n              paddingLeft: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                minHeight: 25,\n                backgroundColor:\n                  isHovered || isCurrent\n                    ? lighterHex(theme.primary)\n                    : undefined,\n                borderRadius: isHovered || isCurrent ? 15 : undefined,\n              }}\n            >\n              <View style={{ width: 30, alignItems: \"center\" }}>\n                {TheIcon ? (\n                  <TheIcon\n                    name={item.icon}\n                    size={20}\n                    color={theme.secondaryText}\n                  />\n                ) : item.image ? (\n                  <Image\n                    source={{ uri: item.image }}\n                    style={{ width: 40, height: 40, borderRadius: 20 }}\n                  />\n                ) : null}\n              </View>\n              <Text\n                style={{\n                  marginLeft: 15,\n                  color: theme.primaryText,\n                  fontWeight: item.isHeader ? \"bold\" : undefined,\n                }}\n              >\n                {item.text}\n              </Text>\n              {item.isNew && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{getText(\"new\")}</T>\n                </View>\n              )}\n\n              {item.label && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{item.label}</T>\n                </View>\n              )}\n              {item.component}\n            </View>\n          </View>\n        )}\n      </Hoverable>\n    </TouchOrView>\n  );\n};\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nconst Layout = ({ screenProps, navigation, children }) => {\n  const { me, device, dispatch, reloadMe } = screenProps;\n\n  const useNewContainer =\n    Platform.OS !== \"web\" && me?.level >= 2 && me?.newVersion;\n\n  const window = Dimensions.get(\"window\");\n  const isSmallDevice = window.width < 800;\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n\n  doOnce(() => {\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n\n      resetIntervalsForToken(token);\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n\n    Linking.addEventListener(\"url\", openWebUrl);\n    Linking.getInitialURL().then((url) => openWebUrl(url));\n  });\n\n  const openWebUrl = (url) => {\n    console.log(\"should open web url here\", url);\n  };\n\n  useEffect(() => {\n    reloadMe(device.loginToken);\n  }, [device.logged]);\n\n  const getText = getTextFunction(me?.locale);\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    //TODO: Fix dat hij naar chat redirect\n    // navigation.navigate(\"Channels\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      screenProps.dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (screenProps.device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          // console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Channels\",\n    \"Channel\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n    \"Market\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const renderForWeb = () => (\n    <Helmet>\n      <title>MasterCrimeZ - The Ultimate Game</title>\n      <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n      <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n      <meta property=\"og:description\" content={getText(\"metaOgDescription\")} />\n      <meta property=\"og:image\" content=\"\" />\n    </Helmet>\n  );\n\n  const renderLeftMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const renderRightMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const SafeOrView = useNewContainer ? View : SafeAreaView;\n  return (\n    <View style={{ flex: 1 }}>\n      <SafeOrView\n        style={{\n          flexDirection: \"row\",\n          flex: 1,\n          backgroundColor: device.theme.primary,\n        }}\n      >\n        {Platform.OS === \"web\" && renderForWeb()}\n        {isSmallDevice ? null : renderLeftMenu()}\n\n        <View\n          style={{\n            height: Platform.OS === \"web\" ? window.height : undefined,\n            flex: 1,\n          }}\n        >\n          {(!useNewContainer ||\n            (useNewContainer && navigation.state.routeName !== \"Map\")) && (\n            <Header navigation={navigation} device={device} me={me} />\n          )}\n\n          {(me?.health <= 0 || me?.health === null) && !skip ? (\n            <Dead screenProps={screenProps} navigation={navigation} />\n          ) : (\n            <View style={{ flex: 1 }}>{children}</View>\n          )}\n          {navigation.state.routeName !== \"Map\" && (\n            <KeyboardAvoidingSpace offset={useNewContainer ? 65 : 0} />\n          )}\n        </View>\n\n        {isSmallDevice ? null : renderRightMenu()}\n      </SafeOrView>\n\n      {!device.logged && (\n        <LoginModal navigation={navigation} screenProps={screenProps} />\n      )}\n    </View>\n  );\n};\nexport const withLayout = (Component) => (props) => (\n  <Layout {...props}>\n    <Component {...props} />\n  </Layout>\n);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  ScrollView,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { default as style, default as styles } from \"../Style\";\nimport { getRank, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst Accomplice = ({\n  navigation,\n  screenProps: {\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [accomplice1, setAccomplice1] = useState(me?.accomplice);\n  const [accomplice2, setAccomplice2] = useState(me?.accomplice2);\n  const [accomplice3, setAccomplice3] = useState(me?.accomplice3);\n  const [accomplice4, setAccomplice4] = useState(me?.accomplice4);\n  const [response, setResponse] = useState(null);\n\n  const submit = (acc) => {\n    //how to set accomplice acc from params to the right body?\n\n    fetch(`${Constants.SERVER_ADDR}/setAccomplice`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        accomplice: accomplice1,\n        accomplice2,\n        accomplice3,\n        accomplice4,\n        loginToken: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response }) => {\n        setResponse(response);\n        reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    const accomplice = navigation.state.params?.accomplice;\n    if (accomplice) {\n      submit(accomplice);\n    }\n  }, []);\n\n  const rank = getRank(me?.rank, \"number\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n      }}\n    >\n      <View style={{ maxWidth: 600, margin: 20 }}>\n        <T>{getText(\"accompliceInfo\")}</T>\n\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"accompliceLinkText\")}</T>\n          <TextInput\n            value={url}\n            onFocus={() => {\n              Clipboard.setString(url);\n              setResponse(getText(\"copiedToClipboard\"));\n            }}\n            style={style(theme).textInput}\n          />\n        </View>\n\n        <T bold>{getText(\"yourAccomplicesHeader\")}</T>\n        {me?.accomplices.length > 0 ? (\n          me?.accomplices.map((accomplice) => {\n            return keyValue(accomplice.name, getRank(accomplice.rank, \"both\"));\n          })\n        ) : (\n          <T>{getText(\"accomplicesNone\")}</T>\n        )}\n\n        <T bold style={{ marginTop: 15 }}>\n          {getText(\"accompliceWhoseYouWantToBe\")}\n        </T>\n        <T>{response}</T>\n\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={styles(theme).textInput}\n          value={accomplice1}\n          onChangeText={setAccomplice1}\n          placeholder={getText(\"accomplice\", 1)}\n        />\n\n        {rank >= 11 ? (\n          <TextInput\n            placeholderTextColor={theme.secondaryTextSoft}\n            style={styles(theme).textInput}\n            value={accomplice2}\n            onChangeText={setAccomplice2}\n            placeholder={getText(\"accomplice\", 2)}\n          />\n        ) : null}\n\n        {rank >= 16 ? (\n          <>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={styles(theme).textInput}\n              value={accomplice3}\n              onChangeText={setAccomplice3}\n              placeholder={getText(\"accomplice\", 3)}\n            />\n\n            <TextInput\n              style={styles(theme).textInput}\n              value={accomplice4}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={setAccomplice4}\n              placeholder={getText(\"accomplice\", 4)}\n            />\n          </>\n        ) : null}\n\n        <Button title={getText(\"save\")} onPress={submit} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Accomplice;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <View style={{ marginTop: 20 }} />\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(this.props.type || \"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const { type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const propertyKey =\n      type === \"weapon\"\n        ? \"weaponShop\"\n        : type === \"protection\"\n        ? \"weaponShop\"\n        : type === \"airplane\"\n        ? \"airport\"\n        : type === \"home\"\n        ? \"estateAgent\"\n        : \"garage\";\n\n    const ownerKey = `${propertyKey}Owner`;\n    const profitKey = `${propertyKey}Profit`;\n\n    const propertyString =\n      type === \"weapon\"\n        ? getText(\"weaponShop\")\n        : type === \"protection\"\n        ? getText(\"weaponShop\")\n        : type === \"airplane\"\n        ? getText(\"airport\")\n        : type === \"home\"\n        ? getText(\"estateAgent\")\n        : getText(\"garage\");\n    return (\n      <View style={{ margin: 15 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {propertyString}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city[ownerKey] ? (\n                    <T>{city[ownerKey]}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city[ownerKey] === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: propertyKey,\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city[profitKey]}</T>\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    return (\n      <ScrollView>\n        {/* <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"weapon\", getText(\"weapons\"), 1)}\n          {this.renderMenu(\"protection\", getText(\"protection\"), 2)}\n          {this.renderMenu(\"airplane\", getText(\"airplane\"), 1)}\n          {this.renderMenu(\"home\", getText(\"homeShop\"), 1)}\n          {this.renderMenu(\"garage\", getText(\"garage\"), 1)}\n        </View> */}\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n            {/* {this.renderCities()} */}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst AirplaneShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"airplane\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default AirplaneShop;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Airport extends Component {\n  state = {\n    response: null,\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        style={{ borderRadius: 10, marginTop: 20 }}\n        title={getText(\"fly\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/airport`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: device.loginToken,\n              to,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      \"Paris\",\n      \"Barcelona\",\n      \"London\",\n      \"Amsterdam\",\n      \"Berlin\",\n      \"Porto\",\n      \"Rome\",\n      \"Dublin\",\n      \"Madrid\",\n      \"Brussels\",\n      \"Bali\",\n      \"New York\",\n      \"San Fransisco\",\n    ].sort();\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ to: options[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n    return (\n      <View>\n        <Button\n          title={this.state.to ? this.state.to : getText(\"chooseCity\")}\n          onPress={this.openActionSheet}\n        />\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Airport);\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab, index) => {\n        return (\n          <TouchableOpacity\n            key={`tab${index}`}\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Image, ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst Bomb = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [bombs, setBombs] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [type, setType] = useState(navigation.state.params?.type || \"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const airplanes = [\n    \"\",\n    \"Fokker\",\n    \"Fleet\",\n    \"Havilland\",\n    \"Cessna\",\n    \"Douglas\",\n    \"Lear Jet\",\n    \"Raket\",\n  ];\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"bomb\", {\n      loginToken: device.loginToken,\n      bombs,\n      type,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  const selectType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = Object.keys(typeStrings).map(\n      (type) =>\n        `${typeStrings[type]} (${city[`${type}Damage`]}% ${getText(\n          \"damage\"\n        )}, €${numberFormat(city[`${type}Profit`])} ${getText(\"profit\")})`\n    );\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex !== options.length - 1) {\n          setType(Object.keys(typeStrings)[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {\n        <>\n          <Image source={require(\"../../assets/bombarderen.jpg\")} />\n          <Text style={{ color: theme.primaryText }}>\n            {me?.airplane === 0\n              ? getText(\"bombNoAirplane\")\n              : getText(\n                  \"bombAirplaneText\",\n                  airplanes[me?.airplane],\n                  me?.airplane * 5\n                )}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <T style={{ marginTop: 15 }}>{getText(\"bombs\")}</T>\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bombs}\n            onChangeText={(x) => setBombs(x)}\n            style={style(theme).textInput}\n          />\n\n          <T style={{ marginVertical: 15 }}>{getText(\"property\")}</T>\n          <Button\n            onPress={selectType}\n            title={type ? typeStrings[type] : getText(\"whichProperty\")}\n          />\n\n          {type ? (\n            <T>\n              {getText(\n                \"bombInfo\",\n                typeStrings[type],\n                city[`${type}Damage`],\n                numberFormat(city[`${type}Profit`]),\n                city[`${type}Owner`] || `(Niemand)`\n              )}\n            </T>\n          ) : null}\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button\n            style={{ marginTop: 15 }}\n            title={getText(\"bombAction\")}\n            onPress={submit}\n          />\n        </>\n      }\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bomb;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Airport from \"./Airport\";\nimport Bomb from \"./Bomb\";\nconst AllAirport = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"airport\",\n      title: getText(\"menuAirport\"),\n      component: Airport,\n    },\n\n    {\n      key: \"bomb\",\n      title: getText(\"menuBomb\"),\n      component: Bomb,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllAirport;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { withAlert } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post, withCaptcha } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter() {\n    const { alert } = this.props;\n    const { me, device, reloadMe, reloadCities } = this.props.screenProps;\n\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const postGetIncome = async (type, captcha) => {\n      const { response } = await post(\"income\", {\n        token: device.loginToken,\n        captcha,\n        type,\n      });\n\n      reloadMe(device.loginToken);\n      reloadCities();\n      alert(response, null, null, { key: \"incomeResponse\" });\n    };\n    const incomeAction = (type) =>\n      withCaptcha(device.loginToken, me?.needCaptcha, getText, alert, (code) =>\n        postGetIncome(type, code)\n      );\n\n    return (\n      <View style={{ flexDirection: \"column\" }}>\n        <Button\n          title={\"Haal Sex Shop inkomen op\"}\n          onPress={() => incomeAction(\"rld\")}\n          style={{ margin: 10 }}\n        />\n        <Button\n          title={\"Verkoop je wiet aan de coffeeshop\"}\n          onPress={() => incomeAction(\"landlord\")}\n          style={{ margin: 10 }}\n        />\n        <Button\n          title={\"Haal Junkies inkomen op (leger des heils)\"}\n          onPress={() => incomeAction(\"junkies\")}\n          style={{ margin: 10 }}\n        />\n      </View>\n    );\n  }\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default withAlert(Income);\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bank from \"./Bank\";\nimport Donate from \"./Donate\";\nimport Income from \"./Income\";\nimport SwissBank from \"./SwissBank\";\nconst AllBanks = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const [tab, setTab] = useState(\"bank\");\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"menuBank\"),\n            isActive: tab === \"bank\",\n            onPress: () => setTab(\"bank\"),\n          },\n          {\n            title: getText(\"menuSwissBank\"),\n            isActive: tab === \"swissBank\",\n            onPress: () => setTab(\"swissBank\"),\n          },\n\n          {\n            title: getText(\"menuDonate\"),\n            isActive: tab === \"donate\",\n            onPress: () => setTab(\"donate\"),\n          },\n          {\n            title: getText(\"menuIncome\"),\n            isActive: tab === \"income\",\n            onPress: () => setTab(\"income\"),\n          },\n        ]}\n      />\n\n      {tab === \"bank\" && <Bank {...props} />}\n      {tab === \"swissBank\" && <SwissBank {...props} />}\n      {tab === \"donate\" && <Donate {...props} />}\n      {tab === \"income\" && <Income {...props} />}\n    </View>\n  );\n};\nexport default AllBanks;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  LayoutAnimation,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { lighterHex } from \"../Util\";\nimport T from \"./T\";\n\nUIManager.setLayoutAnimationEnabledExperimental &&\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n\nconst storeData = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (e) {\n    // saving error\n  }\n};\n\nconst getData = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    if (value !== null) {\n      return value;\n      // value previously stored\n    } else {\n      return undefined;\n    }\n  } catch (e) {\n    // error reading value\n    return undefined;\n  }\n};\n\nconst Content = ({ id, title, children, contentWidth }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const [expanded, setExpanded] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const isExpanded = await getData(`@content=${id}`);\n      if (isExpanded !== undefined) {\n        setExpanded(isExpanded === \"true\");\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <View\n      style={{\n        backgroundColor: lighterHex(theme.primary),\n        margin: 20,\n        padding: 20,\n        borderRadius: 20,\n        width:\n          typeof contentWidth === \"string\"\n            ? contentWidth\n            : contentWidth + 20 * 4,\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          LayoutAnimation.linear();\n          setExpanded(!expanded);\n          storeData(`@content=${id}`, String(!expanded));\n        }}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <T bold>{title}</T>\n        <AntDesign\n          name={expanded ? \"caretup\" : \"caretdown\"}\n          color={theme.primaryText}\n        />\n      </TouchableOpacity>\n\n      <View\n        onLayout={(event) => {\n          var { x, y, width, height } = event.nativeEvent.layout;\n          // setHeight(height);\n          // setWidth(width);\n        }}\n      >\n        {expanded && !loading && children}\n      </View>\n    </View>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport { getLocale, getUserColor } from \"../Util\";\nimport T from \"./T\";\n\nconst User = ({ user, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const color = getUserColor(user, theme);\n  const isOnline = (Date.now() - user.onlineAt) / 60000 < 5;\n\n  const extraIcon =\n    user.level === 2\n      ? \"💼\"\n      : user.level === 3\n      ? \"🕶\"\n      : user.level === 10\n      ? \"🤓\"\n      : null;\n\n  const country = getLocale(user.locale) === \"nl\" ? \"🇳🇱\" : \"🌍\";\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Profile\", { name: user.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {user.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + user.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n        <View style={{ position: \"absolute\", top: 0, right: 0 }}>\n          <T>{isOnline ? \"✅\" : \"🛑\"}</T>\n        </View>\n\n        {extraIcon && (\n          <View style={{ position: \"absolute\", bottom: 0, right: 0 }}>\n            <T>{extraIcon}</T>\n          </View>\n        )}\n\n        {user.gang && user.gang.thumbnail && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: -0.1 * size,\n              left: -0.1 * size,\n            }}\n          >\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + user.gang.thumbnail }}\n              style={{\n                width: size / 2,\n                height: size / 2,\n                borderRadius: size / 4,\n              }}\n            />\n          </View>\n        )}\n\n        <View style={{ position: \"absolute\", bottom: 0, left: 0 }}>\n          <T>{country}</T>\n        </View>\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T style={{ color }}>{user.name}</T>\n        {user.gang && <T>{user.gang.name}</T>}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default User;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Platform,\n  ScrollView,\n  View,\n} from \"react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst SHIFT_FACTOR = 0.45;\nconst GangBulletFactory = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [shifts, setShifts] = useState({});\n  const { morning, day, evening, night, underachievers } = shifts;\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const { alertAlert } = React.useContext(AlertContext);\n\n  /*\n  userDoShift,\n  gangBuyBulletFactory,\n  shifts,*/\n\n  const getShifts = async () => {\n    setLoading(true);\n\n    const shifts = await get(`shifts?token=${device.loginToken}`);\n    setLoading(false);\n    setShifts(shifts);\n  };\n\n  const postUserDoShift = async () => {\n    setLoading(true);\n    const { response } = await post(\"userDoShift\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    getShifts();\n  };\n\n  const postGangBuyBulletFactory = async (type) => {\n    setLoading(true);\n    const { response } = await post(\"gangBuyBulletFactory\", {\n      token: device.loginToken,\n      type,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken); //reload gang\n  };\n\n  doOnce(getShifts);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const bulletFactories = [\n    {\n      type: \"small\",\n      generates: 10000,\n      initialCost: 10000000,\n      dailyCost: 1000000,\n    },\n    {\n      type: \"medium\",\n      generates: 20000,\n      initialCost: 100000000,\n      dailyCost: 10000000,\n    },\n    {\n      type: \"big\",\n      generates: 40000,\n      initialCost: 1000000000,\n      dailyCost: 100000000,\n    },\n    {\n      type: \"mega\",\n      generates: 60000,\n      initialCost: 10000000000,\n      dailyCost: 1000000000,\n    },\n  ];\n\n  const renderShiftUser = (user) => {\n    return <User size={40} navigation={navigation} user={user} />;\n  };\n\n  const renderUnderAchieverUserRow = (user) => {\n    return (\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <User size={40} navigation={navigation} user={user} />\n        <T>\n          {user.totalShiftsDone} {getText(\"shiftsDone\")}\n        </T>\n      </View>\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        <Content\n          title={getText(\"workForBulletFactoryTitle\")}\n          contentWidth={\"90%\"}\n          id=\"userDoShift\"\n        >\n          <Button\n            onPress={postUserDoShift}\n            title={getText(\"workForBulletFactory\")}\n          />\n        </Content>\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"shiftSchedule\")}\n              contentWidth={\"90%\"}\n              id=\"shifts\"\n            >\n              <T>\n                {getText(\n                  \"shiftToDo\",\n                  me?.gang?.members,\n                  Math.floor(me?.gang?.members * SHIFT_FACTOR)\n                )}\n              </T>\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"morningShift\")}\n              </T>\n              {morning?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"dayShift\")}\n              </T>\n              {day?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"eveningShift\")}\n              </T>\n              {evening?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"nightShift\")}\n              </T>\n              {night?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"underachievers\")}\n              </T>\n              {underachievers?.map(renderUnderAchieverUserRow)}\n            </Content>\n\n            {me?.gangLevel === GANG_LEVEL_BANK ||\n              (me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Content\n                  title={getText(\"buyBulletFactory\")}\n                  contentWidth={\"90%\"}\n                  id=\"buyBulletFactory\"\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      marginTop: 20,\n                    }}\n                  >\n                    {bulletFactories.map((bf) => {\n                      return (\n                        <View style={{ width: 200, marginHorizontal: 10 }}>\n                          <T bold>{getText(`bf${bf.type}`)}</T>\n                          <T>{getText(\"generatesBullets\", bf.generates)}</T>\n                          <T>\n                            {getText(\"initialCost\")}: €\n                            {numberFormat(bf.initialCost)},-\n                          </T>\n                          <T>\n                            {getText(\"dailyCost\")}: €\n                            {numberFormat(bf.dailyCost)}\n                            ,-\n                          </T>\n                          {me?.gang?.bulletFactory === bf.type ? (\n                            <T bold>{getText(\"currentBulletFactory\")}</T>\n                          ) : (\n                            <Button\n                              title={getText(\"buy\")}\n                              onPress={() => postGangBuyBulletFactory(bf.type)}\n                            />\n                          )}\n                        </View>\n                      );\n                    })}\n                  </View>\n                </Content>\n              ))}\n\n            <Content\n              contentWidth={\"90%\"}\n              id=\"gangbulletfacotryinfo\"\n              title={getText(\"info\")}\n            >\n              <Markdown style={{ text: { color: theme.primaryText } }}>\n                {getText(\"gangBulletFactoryInfo\")}\n              </Markdown>\n            </Content>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangBulletFactory;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bulletfactory from \"./Bulletfactory\";\nimport GangBulletFactory from \"./GangBulletFactory\";\nconst AllGarage = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"bulletfactory\",\n      title: getText(\"menuBulletfactory\"),\n      component: Bulletfactory,\n    },\n\n    {\n      key: \"gangBulletfactory\",\n      title: getText(\"menuGangBulletfactory\"),\n      component: GangBulletFactory,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGarage;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  const postGangCreate = async () => {\n    const { response } = await post(\"gangCreate\", {\n      name,\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <TextInput\n        value={name}\n        onChangeText={setName}\n        style={style(theme).textInput}\n        placeholder=\"Name\"\n        placeholderTextColor={theme.secondaryTextSoft}\n      />\n      <Button\n        onPress={postGangCreate}\n        title={getText(\"gangCreateCTA\")}\n        theme={theme}\n      />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ActivityIndicator, ScrollView, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Button from \"../components/Button\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nconst GangMissions = ({ navigation, screenProps: { device, me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const postGangMissionPrestige = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangMissionPrestige\", {\n      token: device.loginToken,\n    });\n    setResponse(response);\n    getGangMissions();\n    setLoading(false);\n  };\n  const postGangStartMission = async (index) => {\n    setLoading(true);\n    const { response } = await post(\"gangStartMission\", {\n      token: device.loginToken,\n      index,\n    });\n    setResponse(response);\n    getGangMissions();\n    setLoading(false);\n  };\n\n  const getGangMissions = async () => {\n    setLoading(true);\n    const result = await get(`gangMissions?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangMissions);\n\n  const isPrestige = result?.reduce?.(\n    (prev, mission) => prev && !!mission.current\n  );\n  console.log(isPrestige);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {loading && <ActivityIndicator />}\n      {response && <T>{response}</T>}\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>{getText(\"missions\")}</H1>\n          </View>\n          {isPrestige && (\n            <Button\n              title={getText(\"youArePrestige\")}\n              onPress={postGangMissionPrestige}\n            />\n          )}\n          {result?.map((mission, index) => {\n            const time =\n              mission.seconds < 120\n                ? `${mission.seconds} ${getText(\"seconds\")}`\n                : mission.seconds < 3600\n                ? `${Math.round(mission.seconds / 60)} ${getText(\"minutes\")}`\n                : `${Math.round(mission.seconds / 3600)} ${getText(\"hours\")}`;\n\n            const startButton = (\n              <Button\n                onPress={() => postGangStartMission(index)}\n                title={getText(\"start\")}\n              />\n            );\n            return (\n              <Grid style={{ height: 50 }}>\n                <Col size={4}>\n                  <T>\n                    {getText(\n                      mission.what + \"Mission\",\n                      mission.amountPerMember * me?.gang?.members\n                    )}{\" \"}\n                    in {time}\n                  </T>\n                </Col>\n                <Col>\n                  {mission.current ? (\n                    mission.current.isEnded ? (\n                      mission.current.isSucceeded ? (\n                        <T>✅</T>\n                      ) : (\n                        <View style={{ flexDirection: \"row\" }}>\n                          <T>⛔️</T>\n                        </View>\n                      )\n                    ) : (\n                      <View style={{ flexDirection: \"row\" }}>\n                        <T>\n                          {mission.current.amountDone}/\n                          {mission.amountPerMember * me?.gang?.members}\n                        </T>\n                      </View>\n                    )\n                  ) : null}\n                </Col>\n\n                <Col style={{ alignItems: \"flex-end\" }}>\n                  {mission.current ? (\n                    mission.current.isEnded ? (\n                      mission.current.isSucceeded ? null : (\n                        <View style={{ flexDirection: \"row\" }}>\n                          {startButton}\n                        </View>\n                      )\n                    ) : (\n                      <CountDown\n                        style={{ marginLeft: 10 }}\n                        until={moment(mission.current.createdAt)\n                          .add(mission.seconds, \"seconds\")\n                          .diff(moment(), \"seconds\")}\n                        digitStyle={{\n                          backgroundColor: device.theme.secondary,\n                        }}\n                        digitTxtStyle={{ color: device.theme.secondaryText }}\n                        onFinish={() => {}}\n                        size={8}\n                        timeToShow={[\"H\", \"M\", \"S\"]}\n                        timeLabels={{ m: null, s: null }}\n                      />\n                    )\n                  ) : (\n                    <View style={{ flexDirection: \"row\" }}>{startButton}</View>\n                  )}\n                </Col>\n              </Grid>\n            );\n          })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangMissions;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangSettings = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [gang, setGang] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [gangName, setGangName] = useState(\"\");\n  const [profile, setProfile] = useState(me?.gang?.profile || \"\");\n  const [message, setMessage] = useState(me?.gang?.message || \"\");\n  const [name, setName] = useState(me?.gang?.name || \"\");\n  const [image, setImage] = useState(me?.gang?.image || \"\");\n  const [isBullets, setIsBullets] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const { alertAlert } = React.useContext(AlertContext);\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${me?.gang?.name}`);\n    setLoading(false);\n    setGang(gang);\n  };\n\n  const getGangInvites = async () => {\n    setLoading(true);\n    const { requests } = await get(`gangInvites?token=${device.loginToken}`);\n    setLoading(false);\n    setRequests(requests);\n  };\n\n  const postGangAnswerJoin = async (id, accepted) => {\n    setLoading(true);\n    const { response } = await post(\"gangAnswerJoin\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGangInvites();\n  };\n\n  const postGangUpdate = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangUpdate\", {\n      token: device.loginToken,\n      profile,\n      image,\n      message,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangInvite = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangInvite\", {\n      token: device.loginToken,\n      name: username,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangTransaction = async (isToUser) => {\n    setLoading(true);\n    const { response } = await post(\"gangTransaction\", {\n      token: device.loginToken,\n      amount,\n      isToUser,\n      isBullets,\n    });\n    reloadMe(device.loginToken);\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangLeave = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangLeave\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangKick = async (userId) => {\n    setLoading(true);\n    const { response } = await post(\"gangKick\", {\n      token: device.loginToken,\n      userId,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGang();\n  };\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const postGangRemove = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangRemove\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangSetRank = async (userId, rank) => {\n    setLoading(true);\n    const { response } = await post(\"gangSetRank\", {\n      token: device.loginToken,\n      userId,\n      rank,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getGang();\n  };\n\n  doOnce(getGangInvites);\n  doOnce(getGang);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n      }\n    }\n  };\n  const handleChoosePhoto = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"gangProfile\")}\n              contentWidth={\"90%\"}\n              id=\"gangProfile\"\n            >\n              {me?.gang?.message && (\n                <MarkdownView style={{ text: { color: theme.primaryText } }}>\n                  {me?.gang?.message}\n                </MarkdownView>\n              )}\n            </Content>\n\n            <Content\n              title={getText(\"yourStatus\")}\n              contentWidth={250}\n              id=\"settingsYourStatus\"\n            >\n              <T>{getText(\"youAreWhat\", getGangLevel(me?.gangLevel))}</T>\n            </Content>\n\n            {/* Answer join */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"gangJoinRequestsTitle\")}\n                contentWidth={250}\n                id=\"settingsAnswerJoin\"\n              >\n                {requests.length > 0 ? (\n                  requests.map((request) => {\n                    return (\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{request.user?.name}</T>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Button\n                            title={getText(\"accept\")}\n                            onPress={() => postGangAnswerJoin(request.id, true)}\n                          />\n                          <Button\n                            title={getText(\"decline\")}\n                            onPress={() =>\n                              postGangAnswerJoin(request.id, false)\n                            }\n                          />\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{getText(\"noJoinRequests\")}</T>\n                )}\n              </Content>\n            ) : null}\n\n            {/* Invite */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"invitePeople\")}\n                contentWidth={250}\n                id=\"settingsInvite\"\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={username}\n                    onChangeText={setUsername}\n                    placeholder={getText(\"name\")}\n                  />\n                  <Button\n                    title={getText(\"invite\")}\n                    onPress={postGangInvite}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </Content>\n            ) : null}\n\n            {/* Transactions */}\n            {\n              <Content\n                title={getText(\"gangBank\")}\n                contentWidth={250}\n                id=\"settingsTransactions\"\n              >\n                <T>\n                  {getText(\"bankMoney\")}: €{numberFormat(me?.gang?.bank || 0)},-\n                </T>\n                <T>\n                  {getText(\"bullets\")}: {numberFormat(me?.gang?.bullets || 0)}\n                </T>\n                <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={amount}\n                    onChangeText={setAmount}\n                    placeholder={getText(\"amount\")}\n                  />\n\n                  <Button\n                    title={isBullets ? getText(\"bullets\") : getText(\"bank\")}\n                    onPress={() => setIsBullets(!isBullets)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n\n                  <Button\n                    title={getText(\"in\")}\n                    onPress={() => postGangTransaction(false)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                  {me?.gangLevel === GANG_LEVEL_BANK ||\n                  me?.gangLevel === GANG_LEVEL_BOSS ? (\n                    <Button\n                      title={getText(\"out\")}\n                      onPress={() => postGangTransaction(true)}\n                      style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                    />\n                  ) : null}\n                </View>\n              </Content>\n            }\n\n            {/* memberview with kick or change rank, per member */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"members\")}\n                contentWidth=\"90%\"\n                id=\"memberViewSettings\"\n              >\n                {gang?.users?.map((member) => {\n                  return (\n                    <Grid>\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{member.name}</T>\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{getGangLevel(member.gangLevel)}</T>\n                      </Col>\n\n                      <Col\n                        style={{\n                          justifyContent: \"center\",\n                          alignItems: \"flex-end\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          {me?.gangLevel >= GANG_LEVEL_UNDERBOSS &&\n                            member.id !== me?.id && (\n                              <Button\n                                title={getText(\"kick\")}\n                                onPress={() => postGangKick(member.id)}\n                              />\n                            )}\n                          {me?.gangLevel === GANG_LEVEL_BOSS && (\n                            <Button\n                              title={getText(\"changeRank\")}\n                              style={{ marginLeft: 10 }}\n                              onPress={() => changeRank(member.id)}\n                            />\n                          )}\n                        </View>\n                      </Col>\n                    </Grid>\n                  );\n                })}\n              </Content>\n            )}\n            {/* update name,profile,image */}\n\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"gangProfile\")}\n                contentWidth=\"90%\"\n                id=\"updateProfileSettings\"\n              >\n                <TouchableOpacity onPress={handleChoosePhoto}>\n                  {image ? (\n                    <Image\n                      source={{\n                        uri: image.includes(\"data:image\")\n                          ? image\n                          : Constants.SERVER_ADDR + image,\n                      }}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  ) : (\n                    <Image\n                      source={require(\"../../assets/icon.png\")}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  )}\n                </TouchableOpacity>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={styles(theme).textInput}\n                  value={name}\n                  onChangeText={setName}\n                  placeholder={getText(\"gangName\")}\n                />\n                <T bold>{getText(\"gangProfile\")}</T>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={profile}\n                  onChangeText={setProfile}\n                />\n                <T bold>{getText(\"gangMessage\")}</T>\n\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={message}\n                  onChangeText={setMessage}\n                />\n\n                <Button\n                  onPress={postGangUpdate}\n                  title={getText(\"save\")}\n                  style={{ marginTop: 10 }}\n                />\n              </Content>\n            )}\n            {/* transactions */}\n\n            {/* Leave */}\n            <View style={{ marginVertical: 20 }}>\n              {\n                <Button\n                  title={getText(\"leaveGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"leaveGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangLeave },\n                        { text: getText(\"cancel\") },\n                      ],\n                      { key: \"leaveGang\" }\n                    )\n                  }\n                />\n              }\n            </View>\n\n            {/* Gang delete */}\n            <View style={{ marginVertical: 20 }}>\n              {me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Button\n                  title={getText(\"removeGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"removeGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangRemove },\n                        { text: getText(\"cancel\") },\n                      ],\n                      { key: \"removeGang\" }\n                    )\n                  }\n                />\n              )}\n            </View>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangSettings;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\nconst MARGIN = 20;\nconst { width, height } = Dimensions.get(\"window\");\nconst SIZE = width < 1000 ? 100 : 200;\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangShop = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const prices = [\n    null,\n    50000,\n    100000,\n    200000,\n    500000,\n    1000000,\n    1500000,\n    2000000,\n    3000000,\n    4000000,\n    5000000,\n    10000000,\n    20000000,\n  ];\n\n  const items = [\n    {\n      name: getText(\"gangShopItem1\"),\n      price: prices[1],\n      current: me?.gang?.item1,\n      image: require(\"../../assets/gangshop/item1.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem2\"),\n      price: prices[2],\n      current: me?.gang?.item2,\n      image: require(\"../../assets/gangshop/item2.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem3\"),\n      price: prices[3],\n      current: me?.gang?.item3,\n      image: require(\"../../assets/gangshop/item3.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem4\"),\n      price: prices[4],\n      current: me?.gang?.item4,\n      image: require(\"../../assets/gangshop/item4.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem5\"),\n      price: prices[5],\n      current: me?.gang?.item5,\n      image: require(\"../../assets/gangshop/item5.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem6\"),\n      price: prices[6],\n      current: me?.gang?.item6,\n      image: require(\"../../assets/gangshop/item6.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem7\"),\n      price: prices[7],\n      current: me?.gang?.item7,\n      image: require(\"../../assets/gangshop/item7.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem8\"),\n      price: prices[8],\n      current: me?.gang?.item8,\n      image: require(\"../../assets/gangshop/item8.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem9\"),\n      price: prices[9],\n      current: me?.gang?.item9,\n      image: require(\"../../assets/gangshop/item9.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem10\"),\n      price: prices[10],\n      current: me?.gang?.item10,\n      image: require(\"../../assets/gangshop/item10.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem11\"),\n      price: prices[11],\n      current: me?.gang?.item11,\n      image: require(\"../../assets/gangshop/item11.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem12\"),\n      price: prices[12],\n      current: me?.gang?.item12,\n      image: require(\"../../assets/gangshop/item12.jpg\"),\n    },\n  ];\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const postGangShop = async (itemId) => {\n    setLoading(true);\n    const { response } = await post(\"gangShop\", {\n      itemId,\n      amount: amount[itemId],\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    setLoading(false);\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <T>\n        {getText(\"gangBank\")}: €{numberFormat(me?.gang?.bank || 0)},-\n      </T>\n      <T>\n        {getText(\"power\")}: {me?.gang?.power}\n      </T>\n      <FlatList\n        refreshing={loading}\n        onRefresh={() => reloadMe(device.loginToken)}\n        data={items}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\", height: height - 200 }\n            : undefined\n        }\n        keyExtractor={(item, index) => `shop${index}`}\n        renderItem={({ item, index }) => {\n          return (\n            <View style={{ margin: MARGIN }}>\n              <Image\n                source={item.image}\n                style={{ width: SIZE, height: SIZE }}\n                resizeMode=\"contain\"\n              />\n              <T>{item.name}</T>\n              <T>€{item.price},-</T>\n              <T>\n                {getText(\"inPossession\")}: {item.current}\n              </T>\n              {(me?.gangLevel === GANG_LEVEL_BOSS ||\n                me?.gangLevel === GANG_LEVEL_BANK) && (\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={[styles(theme).textInput, { width: 100 }]}\n                    value={amount[index + 1] || \"\"}\n                    onChangeText={(v) =>\n                      setAmount({ ...amount, [index + 1]: v })\n                    }\n                    placeholder={getText(\"amount\")}\n                  />\n                  <Button\n                    style={{ marginVertical: 10, marginLeft: 10 }}\n                    title={getText(\"buy\")}\n                    onPress={() => postGangShop(index + 1)}\n                  />\n                </View>\n              )}\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default GangShop;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport GangCreate from \"./GangCreate\";\nimport GangMissions from \"./GangMissions\";\nimport GangSettings from \"./GangSettings\";\nimport GangShop from \"./GangShop\";\nconst AllGang = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"gangCreate\",\n      title: getText(\"menuGangCreate\"),\n      component: GangCreate,\n    },\n\n    {\n      key: \"gangSettings\",\n      title: getText(\"menuGangSettings\"),\n      component: GangSettings,\n    },\n    {\n      key: \"gangShop\",\n      title: getText(\"menuGangShop\"),\n      component: GangShop,\n    },\n    {\n      key: \"gangMissions\",\n      title: getText(\"menuGangMissions\"),\n      component: GangMissions,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGang;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      this.fetchGroups();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      console.log(\"FETCH GARAGE\");\n      this.fetchGarage();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Garage from \"./Garage\";\nimport Racecars from \"./Racecars\";\nconst AllGarage = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"garage\",\n      title: getText(\"menuGarage\"),\n      component: Garage,\n    },\n\n    {\n      key: \"racecars\",\n      title: getText(\"menuRacecars\"),\n      component: Racecars,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGarage;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 100;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [gangs, setGangs] = useState([]);\n  const [invites, setInvites] = useState([]);\n\n  const getGangs = async () => {\n    setLoading(true);\n    const { gangs } = await get(\"gangs\");\n    setLoading(false);\n    setGangs(gangs);\n  };\n\n  const getInvites = async () => {\n    const { requests, invites } = await get(\n      `gangInvites?token=${device.loginToken}`\n    );\n    setInvites(invites);\n  };\n\n  const postGangAnswerInvite = async (id, accepted) => {\n    const { response } = await post(\"gangAnswerInvite\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setResponse(response);\n    getInvites();\n  };\n\n  doOnce(getGangs);\n  doOnce(getInvites);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      {invites.length > 0 &&\n        invites.map((invite, index) => {\n          return (\n            <View key={`invite${index}`} style={{ flexDirection: \"row\" }}>\n              <T>{getText(\"gangInvitedTo\", invite.gangName)}</T>\n              <Button\n                title={getText(\"accept\")}\n                onPress={() => postGangAnswerInvite(invite.id, true)}\n              />\n              <Button\n                title={getText(\"decline\")}\n                onPress={() => postGangAnswerInvite(invite.id, false)}\n              />\n            </View>\n          );\n        })}\n\n      <FlatList\n        refreshing={loading}\n        onRefresh={getGangs}\n        data={gangs}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n            : undefined\n        }\n        keyExtractor={(item, index) => `gang${index}`}\n        renderItem={({ item, index }) => {\n          const navigate = () =>\n            navigation.navigate(\"Gang\", { name: item.name });\n          return (\n            <TouchableOpacity\n              onPress={navigate}\n              style={{ margin: MARGIN, width: SIZE }}\n            >\n              {item.thumbnail ? (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + item.thumbnail }}\n                  style={{ width: SIZE, height: SIZE }}\n                  resizeMode=\"cover\"\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              )}\n              <T>\n                {getText(\"name\")}: {item.name}\n              </T>\n              <T>\n                {getText(\"members\")}: {item.members}\n              </T>\n              <T>\n                {getText(\"bank\")}: €{numberFormat(item.bank)},-\n              </T>\n              <T>\n                {getText(\"power\")}: {item.score}\n              </T>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Dimensions, FlatList, Platform, TextInput, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, getRank, getStrength, getTextFunction } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\n\nconst filters = [\n  {\n    key: \"alive\",\n    title: \"Levend\",\n  },\n  {\n    key: \"dead\",\n    title: \"Dood\",\n  },\n  {\n    key: \"crew\",\n    title: \"Crew\",\n  },\n];\n\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\n\nconst Members = ({\n  showActionSheetWithOptions,\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: { me, device },\n}) => {\n  const [members, setMembers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [orderBy, setOrderBy] = useState(orders[0]);\n  const [filter, setFilter] = useState(filters[0]);\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    const order = params?.order;\n    if (order) {\n      setOrderBy(orders[order]);\n      fetchMembers(orders[order].key);\n    } else {\n      fetchMembers(orderBy.key);\n    }\n  });\n\n  const fetchMembers = (order, filter) => {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}&filter=${filter}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        setMembers(members);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderItem = ({ item, index }) => {\n    const orderKey = orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n          paddingVertical: 10,\n        }}\n      >\n        <User navigation={navigation} user={item} />\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  const openActionSheetSort = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          setOrderBy(orders[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filter.key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const openActionSheetFilter = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = filters.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < filters.length) {\n          console.log(\"setfilter\", filters[buttonIndex]);\n          setFilter(filters[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filters[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ backgroundColor: device.theme.primary }}>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title={getText(\"sort\")}\n            onPress={() => openActionSheetSort()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n\n          <Button\n            title={getText(\"filter\")}\n            onPress={() => openActionSheetFilter()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: device.theme.secondaryText,\n            }}\n            onChangeText={setSearch}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n\n  const searchedMembers = members.filter((m) =>\n    search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? 0 : undefined,\n        }}\n        ItemSeparatorComponent={() => <Separator />}\n        ListHeaderComponent={renderHeader}\n        data={searchedMembers}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default connectActionSheet(Members);\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport T from \"./T\";\n\nconst Gang = ({ gang, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Gang\", { name: gang.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {gang.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + gang.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T>{gang.name}</T>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Gang;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Content from \"../components/Content\";\nimport Gang from \"../components/Gang\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { InactiveScreens } from \"../Menus\";\nimport { doOnce, get, getRank, getStrength, getTextFunction } from \"../Util\";\n\n/**\n */\nconst Prizes = ({\n  navigation,\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [prizes, setPrizes] = useState([]);\n  const getPrizes = async () => {\n    const { prizes } = await get(\"prizes\");\n    setPrizes(prizes);\n  };\n  doOnce(getPrizes);\n\n  return (\n    <ScrollView>\n      {moment().isAfter(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE) &&\n        moment().isBefore(InactiveScreens.PRIZES_RELEASE_DATE) && (\n          <MarkdownView style={{ text: { color: theme.primaryText } }}>\n            {getText(\"prizesText\")}\n          </MarkdownView>\n        )}\n\n      {me?.level > 1 ||\n      moment().isAfter(InactiveScreens.PRIZES_RELEASE_DATE) ? (\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {prizes.map((prize, index) => {\n            const when =\n              prize.every === \"hour\"\n                ? getText(\"everyHour\")\n                : prize.every === \"day\"\n                ? getText(\"everyDay5pm\")\n                : prize.every === \"week\"\n                ? getText(\"everyWeekSunday5pm\")\n                : prize.every === \"month\"\n                ? moment().endOf(\"month\").format(\"DD-MM-YYYY HH:mm\")\n                : null;\n            return (\n              <Content\n                contentWidth={\"90%\"}\n                id={`prize${index}`}\n                title={getText(`prize${prize.forWhat}title`) + \" \" + when}\n              >\n                {prize.stats.map((stat, i) => {\n                  //stat is user\n                  return (\n                    <Grid key={`grid${i}x${index}`}>\n                      <Col\n                        size={2}\n                        style={{ justifyContent: \"center\", paddingTop: 10 }}\n                      >\n                        {prize.forWhat === \"gang\" ? (\n                          <Gang size={40} navigation={navigation} gang={stat} />\n                        ) : (\n                          <User size={40} navigation={navigation} user={stat} />\n                        )}\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\", paddingTop: 10 }}>\n                        <T>\n                          {stat.prize} {getText(prize.prizeWhat)}\n                        </T>\n                      </Col>\n\n                      {prize.forWhat === \"gang\" ? null : (\n                        <Col\n                          style={{ justifyContent: \"center\", paddingTop: 10 }}\n                        >\n                          <T>\n                            {prize.forWhat === \"rank\"\n                              ? getRank(stat[prize.forWhat], \"both\")\n                              : prize.forWhat === \"strength\"\n                              ? getStrength(stat[prize.forWhat], \"both\")\n                              : `${stat[prize.forWhat]} ${getText(\n                                  prize.forWhat\n                                )}`}\n                          </T>\n                        </Col>\n                      )}\n                    </Grid>\n                  );\n                })}\n              </Content>\n            );\n          })}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\nexport default Prizes;\n","import React from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, numberFormat } from \"../Util\";\n\nconst properties = [\n  { name: \"bulletFactory\" },\n  { name: \"casino\" },\n  { name: \"rld\" },\n  { name: \"landlord\" },\n  { name: \"junkies\" },\n  { name: \"weaponShop\" },\n  { name: \"airport\" },\n  { name: \"estateAgent\" },\n  { name: \"garage\" },\n  { name: \"jail\" },\n  { name: \"bank\" },\n  { name: \"gym\" },\n  { name: \"hospital\" },\n  { name: \"market\" },\n  { name: \"stockExchange\" },\n];\n\nconst Properties = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(reloadCities);\n\n  const gridStyle = {\n    paddingVertical: 10,\n    paddingLeft: 10,\n    borderBottomWidth: 0.5,\n    borderBottomColor: \"black\",\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        <View>\n          <View style={gridStyle}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          {cities?.map((city, index) => {\n            return (\n              <View\n                key={`i${index}`}\n                style={[\n                  gridStyle,\n                  {\n                    borderRightColor: \"black\",\n                    borderRightWidth: 0.5,\n                    borderLeftColor: \"black\",\n                    borderLeftWidth: 0.5,\n                    paddingLeft: 10,\n                  },\n                ]}\n              >\n                <T>{city.city}</T>\n              </View>\n            );\n          })}\n        </View>\n\n        <ScrollView horizontal>\n          <View>\n            <Grid style={gridStyle}>\n              {properties.map((property) => {\n                return [\"owner\", \"damage\", \"profit\"].map((suffix) => {\n                  const field = `${getText(property.name)} ${getText(suffix)}`;\n\n                  return (\n                    <Col style={{ width: 150 }}>\n                      <T bold numberOfLines={1}>\n                        {field}\n                      </T>\n                    </Col>\n                  );\n                });\n              })}\n            </Grid>\n\n            {cities?.map((city, index) => {\n              return (\n                <Grid style={gridStyle}>\n                  {properties.map((property) => {\n                    return [\"Owner\", \"Damage\", \"Profit\"].map((fieldSuffix) => {\n                      const field = `${property.name}${fieldSuffix}`;\n\n                      const formattedField =\n                        fieldSuffix === \"Owner\" ? (\n                          <TouchableOpacity\n                            onPress={() =>\n                              navigation.navigate(\"Profile\", {\n                                name: city[field],\n                              })\n                            }\n                          >\n                            <T>{city[field]}</T>\n                          </TouchableOpacity>\n                        ) : fieldSuffix === \"Damage\" ? (\n                          <T>{city[field]}%</T>\n                        ) : (\n                          <T>€{numberFormat(city[field])},-</T>\n                        );\n                      return <Col style={{ width: 150 }}>{formattedField}</Col>;\n                    });\n                  })}\n                </Grid>\n              );\n            })}\n          </View>\n        </ScrollView>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Properties;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Content from \"../components/Content\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getRank, getStrength, numberFormat } from \"../Util\";\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nconst Stats = ({ navigation, screenProps: { me } }) => {\n  const [stats, setStats] = useState([]);\n  const [gameStats, setGameStats] = useState([]);\n\n  const { alertAlert } = React.useContext(AlertContext);\n  const fetchStats = () => {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        setStats(stats);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchGameStats = async () => {\n    const { stats } = await get(\"gamestats\");\n    setGameStats(stats);\n  };\n\n  doOnce(fetchStats);\n  doOnce(fetchGameStats);\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          padding: 20,\n        }}\n      >\n        {stats?.map((stat, index) => {\n          const key = Object.keys(stat)[0];\n          const values = Object.values(stat)[0];\n          return (\n            <Content\n              id={`stat${index}`}\n              key={`stat${index}`}\n              contentWidth={300}\n              title={keyNames[key]}\n            >\n              <View key={`index${index}`} style={{ width: 300, marginTop: 20 }}>\n                {values instanceof Array ? (\n                  values.map((value, i) => {\n                    let v = value[key];\n                    if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                    if (key === \"createdAt\")\n                      v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                    if (key === \"strength\") v = getStrength(v, \"both\");\n                    if (key === \"rank\") v = getRank(v, \"both\");\n\n                    return (\n                      <View\n                        key={`stat${key}-${i}`}\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          marginBottom: 5,\n                        }}\n                      >\n                        <User navigation={navigation} user={value} size={40} />\n                        <View>\n                          <T key={`stat${key}-${i}`}>{v}</T>\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{values}</T>\n                )}\n              </View>\n            </Content>\n          );\n        })}\n      </View>\n      {gameStats.length > 0 && (\n        <View>\n          <H1>Online</H1>\n          <T>\n            Rood is online, groen is online per uur, blauw is online per dag.\n          </T>\n          <ScrollView horizontal snapToEnd>\n            <LineChart\n              fromZero\n              data={{\n                labels: gameStats.map((x, index) =>\n                  index === 0 || index % 6 === 0\n                    ? moment(x.createdAt).format(\"D MMM HH:00\")\n                    : \" \"\n                ),\n                datasets: [\n                  {\n                    data: gameStats.map((x) => x.online),\n                    color: (opacity) => \"red\",\n                  },\n                  {\n                    data: gameStats.map((x) => x.onlineLastHour),\n                    color: (opacity) => \"green\",\n                  },\n                  {\n                    data: gameStats.map((x) => x.onlineLastDay),\n                    color: (opacity) => \"blue\",\n                  },\n                ],\n              }}\n              onDataPointClick={(data) => {\n                const item = gameStats[data.index];\n\n                alertAlert(\n                  moment(item.createdAt).format(\"D MMM HH:00\"),\n                  `${item.online} online, ${item.onlineLastHour} online dat uur, ${item.onlineLastDay} online die dag`,\n                  null,\n                  null,\n                  { key: \"onlineInfo\" }\n                );\n              }}\n              width={gameStats.length * 20 + 100} // from react-native\n              height={225}\n              xAxisLabel=\"\"\n              xLabelsOffset={10}\n              yAxisLabel=\"\"\n              yAxisSuffix=\"\"\n              yAxisInterval={1} // optional, defaults to 1\n              chartConfig={{\n                backgroundColor: \"#e26a00\",\n                backgroundGradientFrom: \"#fb8c00\",\n                backgroundGradientTo: \"#ffa726\",\n                decimalPlaces: 0, // optional, defaults to 2dp\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                style: {\n                  borderRadius: 16,\n                },\n                propsForDots: {\n                  r: \"6\",\n                  strokeWidth: \"2\",\n                  stroke: \"#ffa726\",\n                },\n              }}\n              bezier\n              style={{\n                marginVertical: 8,\n                borderRadius: 16,\n              }}\n            />\n          </ScrollView>\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default Stats;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Gangs from \"./Gangs\";\nimport Members from \"./Members\";\nimport Prizes from \"./Prizes\";\nimport Properties from \"./Properties\";\nimport Stats from \"./Stats\";\nconst AllStats = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"members\",\n      title: getText(\"menuMembers\", props.screenProps.me?.online),\n      component: Members,\n    },\n    {\n      key: \"stats\",\n      title: getText(\"menuStats\"),\n      component: Stats,\n    },\n    {\n      key: \"gangs\",\n      title: getText(\"menuGangs\"),\n      component: Gangs,\n    },\n    {\n      key: \"prizes\",\n      title: getText(\"prizes\"),\n      component: Prizes,\n    },\n\n    {\n      key: \"properties\",\n      title: getText(\"menuProperties\"),\n      component: Properties,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllStats;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Blocks = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [blocks, setBlocks] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  const postRemoveBlock = async (user2id) => {\n    const { response } = await post(\"removeBlock\", {\n      loginToken: device.loginToken,\n      user2id,\n    });\n\n    setResponse(response);\n    getBlocks();\n  };\n\n  const getBlocks = async () => {\n    const { blocks } = await get(`blocks?loginToken=${device.loginToken}`);\n\n    setBlocks(blocks);\n  };\n\n  doOnce(getBlocks);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          {blocks?.map?.((block) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <User user={block.user} size={40} navigation={navigation} />\n\n              <TouchableOpacity onPress={() => postRemoveBlock(block.user2id)}>\n                <Entypo name=\"cross\" color=\"red\" size={33} />\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Blocks;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import { Entypo } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst lottoReleaseDate = moment(\"01/07/2021\", \"DD/MM/YYYY\").set(\"hour\", 17);\n\nconst Casino = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"casino\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.casinoOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.casinoOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"casinoInfo2\", city?.casinoProfit)}\n          </Text>\n\n          <View style={{ flexDirection: \"row\" }}>\n            <Button\n              onPress={() => navigation.navigate(\"Poker\")}\n              title={getText(\"poker\")}\n            />\n\n            {(moment().isAfter(lottoReleaseDate) || me?.level > 1) && (\n              <Button\n                style={{ marginLeft: 10 }}\n                onPress={() => navigation.navigate(\"Lotto\")}\n                title={getText(\"lotto\")}\n              />\n            )}\n          </View>\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.casinoOwner ? (\n                  <T>{city.casinoOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.casinoOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"casino\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.casinoProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Casino;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button onPress={changeName} title={getText(\"change\")} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst getText = getTextFunction();\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n        return false;\n      }\n      return true;\n    }\n    return true;\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, Linking, Platform, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nimport T from \"./T\";\n\nconst ShareButtons = ({ me, url, text }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const siteUrl = `https://mastercrimez.com/%23/${url}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=${siteUrl}`;\n\n  return (\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n      <T>{getText(\"footerShare\")}</T>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(facebookShareUrl);\n        }}\n      >\n        <View\n          style={{\n            marginLeft: 20,\n            backgroundColor: \"#3b5998\",\n            width: 40,\n            height: 40,\n            borderRadius: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n        </View>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(\n            Platform.OS === \"web\"\n              ? `https://wa.me/?text=${text}%20${siteUrl}`\n              : `whatsapp://send?text=${text}%20${siteUrl}`\n          );\n        }}\n      >\n        <Image\n          source={require(\"../../assets/whatsapp.png\")}\n          style={{ width: 55, height: 55 }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ShareButtons;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\n\nconst IMAGE_SIZE = 40;\n\nconst Footer = ({ me, device, params, fetchChat }) => {\n  const { loginToken, theme } = device;\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [hasEdited, setHasEdited] = useState(false);\n  const getText = getTextFunction(me?.locale);\n\n  const send = () => {\n    setImage(null);\n    setMessage(\"\");\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ success, response }) => {\n        if (response) {\n          alert(response);\n        }\n        if (success) {\n          fetchChat();\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  const renderFooter = () => {\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) => {\n              setImage(base64);\n              setHasEdited(true);\n            }}\n          />\n\n          <TextInput\n            multiline\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={setMessage}\n          />\n\n          <TouchableOpacity onPress={send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  return renderFooter();\n};\n\nconst ChatScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device: { loginToken },\n    device,\n    me,\n    reloadMe,\n  },\n}) => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [chat, setChat] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  useEffect(() => {\n    fetchChat();\n\n    const interval = setInterval(() => {\n      fetchChat();\n      post(\"setRead\", { loginToken, id: params?.subid });\n      reloadMe(loginToken);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchChat = async () => {\n    const url = `channelmessage?loginToken=${device.loginToken}&id=${params.id}`;\n    const response = await get(url);\n\n    if (response) {\n      setChat(response.chat);\n      setResponse(response.response);\n      setIsFetching(false);\n    }\n  };\n\n  const onRefresh = () => {\n    setIsFetching(true);\n    fetchChat();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.name });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            flex: 1,\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{item.user?.name}</Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <MarkdownView>{item.message}</MarkdownView>\n\n          {item.isShareable && (\n            <ShareButtons me={me} text={item.message} url={``} />\n          )}\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      {Array.isArray(chat) ? (\n        <FlatList\n          initialNumToRender={Platform.OS === \"web\" ? chat.length : undefined}\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 250 : undefined,\n          }}\n          data={chat}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => `index${index}`}\n          refreshControl={\n            <RefreshControl refreshing={isFetching} onRefresh={onRefresh} />\n          }\n          inverted\n        />\n      ) : (\n        <View style={{ flex: 1 }}>\n          <T>{response}</T>\n        </View>\n      )}\n      <Footer me={me} device={device} params={params} fetchChat={fetchChat} />\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst blocksReleaseDate = moment(\"15/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17);\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channelsubs: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChannelsubs();\n\n    this.interval = setInterval(() => this.fetchChannelsubs(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  fetchChannelsubs = () => {\n    const {\n      screenProps: { device },\n    } = this.props;\n    fetch(\n      `${Constants.SERVER_ADDR}/channelsubs?loginToken=${device.loginToken}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((channelsubs) => {\n        if (channelsubs.response) {\n          this.setState({ response: channelsubs.response });\n        } else {\n          this.setState({ channelsubs });\n        }\n        this.setState({ isFetching: false });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  openMenu = (id, userId) => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"delete\")];\n\n    const isBlockButtonActive =\n      (moment().isAfter(blocksReleaseDate) || me?.level > 1) && userId;\n    if (isBlockButtonActive) {\n      options.push(getText(\"blockThisUser\"));\n    }\n\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"delete\", id);\n          await post(\"setDeleted\", { loginToken: device.loginToken, id: id });\n          this.fetchChannelsubs();\n        }\n        if (isBlockButtonActive && buttonIndex === 1) {\n          const { response } = await post(\"addBlock\", {\n            loginToken: device.loginToken,\n            user2id: userId,\n          });\n          alert(response);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  openGeneralMenu = () => {\n    const { device, me } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"deleteAllChats\")];\n\n    const isBlocksActive = moment().isAfter(blocksReleaseDate) || me?.level > 1;\n\n    if (isBlocksActive) {\n      options.push(getText(\"blocks\"));\n    }\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"deleteAll\");\n          await post(\"deleteAll\", { loginToken: device.loginToken });\n          this.fetchChannelsubs();\n        }\n        if (buttonIndex === 1 && isBlocksActive) {\n          navigation.navigate(\"Blocks\");\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.name\n      : \"(System)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          ?.thumbnail\n      : null;\n\n    const channelOtherUserId = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.id\n      : null;\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel?.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          {channelThumbnail ? (\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + channelThumbnail }}\n              style={{ width: 60, height: 60, borderRadius: 30 }}\n            />\n          ) : (\n            <View\n              style={{\n                width: 60,\n                height: 60,\n                borderRadius: 30,\n                backgroundColor: \"#CCC\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n            </View>\n          )}\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20, flex: 1 }}>\n            <T bold>\n              {/* name or other person in chat */}\n              {channelTitle}\n            </T>\n            {item.lastmessage ? (\n              <T numberOfLines={1}>{item.lastmessage}</T>\n            ) : null}\n          </View>\n\n          <View>\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\" }}\n              onPress={() => this.openMenu(item.id, channelOtherUserId)}\n              hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n            >\n              <Entypo\n                style={{ marginLeft: 10 }}\n                name=\"dots-three-horizontal\"\n                size={20}\n                color={theme.primaryText}\n              />\n            </TouchableOpacity>\n            <T>\n              {moment(item.lastmessageDate).format(\n                moment(item.lastmessageDate).isAfter(moment().startOf(\"day\"))\n                  ? \"HH:mm\"\n                  : \"DD-MM-YYYY\"\n              )}\n            </T>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const { channelsubs } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          ListHeaderComponent={() => {\n            return (\n              <View>\n                <View\n                  style={{\n                    justifyContent: \"flex-end\",\n                    marginRight: 20,\n                    marginTop: 20,\n                  }}\n                >\n                  <TouchableOpacity\n                    style={{ alignSelf: \"flex-end\" }}\n                    onPress={() => this.openGeneralMenu()}\n                    hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n                  >\n                    <Entypo\n                      style={{ marginLeft: 10 }}\n                      name=\"dots-three-horizontal\"\n                      size={20}\n                      color={theme.primaryText}\n                    />\n                  </TouchableOpacity>\n                </View>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    navigation.navigate(\"Chat\");\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      paddingVertical: 10,\n                      paddingHorizontal: 20,\n                      borderBottomColor: \"black\",\n                      borderBottomWidth: 0.5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 60,\n                        height: 60,\n                        borderRadius: 30,\n                        backgroundColor: \"#CCC\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n                    </View>\n\n                    <View style={{ marginLeft: 20, flex: 1 }}>\n                      <T bold>\n                        {/* name or other person in chat */}\n                        {getText(\"everyone\")}\n                      </T>\n                    </View>\n                  </View>\n                </TouchableOpacity>\n              </View>\n            );\n          }}\n          data={channelsubs}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default connectActionSheet(ChatScreen);\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    this.interval = setInterval(() => this.getChat(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport { Dimensions, Image, ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const postChooseProfession = async (profession) => {\n    setLoading(true);\n\n    const { response } = await post(`chooseProfession`, {\n      token: device.loginToken,\n      profession,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const PROFESSIONS = [\n    { type: \"thief\", image: require(\"../../assets/profession/thief.jpg\") },\n    {\n      type: \"carthief\",\n      image: require(\"../../assets/profession/carthief.jpg\"),\n    },\n    {\n      type: \"weedgrower\",\n      image: require(\"../../assets/profession/weedgrower.jpg\"),\n    },\n    { type: \"killer\", image: require(\"../../assets/profession/killer.jpg\") },\n    { type: \"pimp\", image: require(\"../../assets/profession/pimp.jpg\") },\n    { type: \"banker\", image: require(\"../../assets/profession/banker.jpg\") },\n    {\n      type: \"jailbreaker\",\n      image: require(\"../../assets/profession/jailbreaker.jpg\"),\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response ? (\n        <T>{response}</T>\n      ) : me?.canChooseProfession ? (\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {PROFESSIONS.map((profession) => {\n            return (\n              <View style={{ width: 100, margin: 20 }}>\n                <Image\n                  source={profession.image}\n                  style={{ width: 100, height: 100 }}\n                  resizeMode=\"contain\"\n                />\n                <View style={{ height: 100 }}>\n                  <T bold>{getText(profession.type)}</T>\n                  <T>{getText(profession.type + \"Advantage\")}</T>\n                </View>\n                <Button\n                  title={getText(\"choose\")}\n                  onPress={() => postChooseProfession(profession.type)}\n                />\n              </View>\n            );\n          })}\n        </View>\n      ) : (\n        <T>{getText(\"youAreProfession\", getText(me?.profession))}</T>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default Gangs;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Code = ({\n  navigation: {\n    state: { params },\n  },\n  screenProps: { me, device, dispatch },\n}) => {\n  const [response, setResponse] = useState(null);\n\n  const code = params?.code;\n\n  //  When opening the site on web  on /Case or /Code or /StealCar on an unverified account, open modal\n  doOnce(() => {\n    if (!me?.phoneVerified) {\n      dispatch({ type: \"SET_LOGGED\", value: false });\n    }\n  });\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View>\n      {response ? (\n        <T>{response}</T>\n      ) : (\n        <Button\n          title={getText(\"openSuitcaseButton\")}\n          onPress={async () => {\n            const { response } = await post(\"enterCode\", {\n              loginToken: device.loginToken,\n              code,\n            });\n            setResponse(response);\n          }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default Code;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { ActivityIndicator, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateOc = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadOcs,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createOc\", {\n      loginToken,\n      numParticipants,\n      type,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadOcs(loginToken);\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"ocBank\"),\n              onPress: () => setType(\"bank\"),\n              isActive: type === \"bank\",\n            },\n            {\n              title: getText(\"ocCars\"),\n              onPress: () => setType(\"cars\"),\n              isActive: type === \"cars\",\n            },\n            {\n              title: getText(\"ocShootout\"),\n              onPress: () => setType(\"shootout\"),\n              isActive: type === \"shootout\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createOcOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateOc;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  Image,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nexport const RobberyTypes = [\n  {\n    type: \"snackbar\",\n    cost: 10000,\n    profit: 50000,\n    difficulty: 1,\n    seconds: 60,\n    image: require(\"../../assets/robbery/snackbar.jpg\"),\n  },\n  {\n    type: \"clothesstore\",\n    cost: 20000,\n    profit: 75000,\n    difficulty: 5,\n    seconds: 180,\n    image: require(\"../../assets/robbery/clothesstore.jpg\"),\n  },\n  {\n    type: \"supermarket\",\n    cost: 50000,\n    profit: 100000,\n    difficulty: 10,\n    seconds: 240,\n    image: require(\"../../assets/robbery/supermarket.jpg\"),\n  },\n  {\n    type: \"drugstore\",\n    cost: 100000,\n    profit: 250000,\n    difficulty: 20,\n    seconds: 300,\n    image: require(\"../../assets/robbery/drugstore.jpg\"),\n  },\n  {\n    type: \"coffeeshop\",\n    cost: 150000,\n    profit: 300000,\n    difficulty: 50,\n    seconds: 300,\n    image: require(\"../../assets/robbery/coffeeshop.jpg\"),\n  },\n  {\n    type: \"cardealer\",\n    cost: 200000,\n    profit: 400000,\n    difficulty: 100,\n    seconds: 600,\n    image: require(\"../../assets/robbery/cardealer.jpg\"),\n  },\n  {\n    type: \"bank\",\n    cost: 250000,\n    profit: 500000,\n    difficulty: 200,\n    seconds: 900,\n    image: require(\"../../assets/robbery/bank.jpg\"),\n  },\n  {\n    type: \"casino\",\n    cost: 500000,\n    profit: 1000000,\n    difficulty: 300,\n    seconds: 1800,\n    image: require(\"../../assets/robbery/casino.jpg\"),\n  },\n  {\n    type: \"jewelrystore\",\n    cost: 1000000,\n    profit: 2000000,\n    difficulty: 500,\n    seconds: 3600,\n    image: require(\"../../assets/robbery/jewelrystore.jpg\"),\n  },\n];\n\nconst Robbery = ({ robbery, isActive, onPress, title }) => {\n  return (\n    <TouchableOpacity\n      style={{\n        opacity: isActive ? 1 : 0.4,\n        marginHorizontal: 20,\n      }}\n      onPress={onPress}\n    >\n      <Image\n        source={robbery.image}\n        style={{ width: 100, height: 100 }}\n        resizeMode=\"cover\"\n      />\n      <T bold>{title}</T>\n    </TouchableOpacity>\n  );\n};\nconst CreateRobbery = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadRobberies,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [prize, setPrize] = useState(\"0\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createRobbery\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      prize,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadRobberies();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {RobberyTypes.map((t) => {\n            return (\n              <Robbery\n                robbery={t}\n                title={getText(t.type)}\n                onPress={() => setType(t.type)}\n                isActive={type === t.type}\n              />\n            );\n          })}\n        </View>\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </ScrollView>\n  );\n};\n\nexport default CreateRobbery;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [prize, setPrize] = useState(\"0\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      prize,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"addedPrizeMoney\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={prize}\n          onChangeText={(x) => setPrize(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  Image,\n  Linking,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nfunction Footer({ navigation, screenProps: { me } }) {\n  const getText = getTextFunction(me?.locale);\n\n  const theme = useSelector((state) => state.device.theme);\n  const [text, setText] = useState(\"\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmastercrimez.com%2F#%2FAccomplice%2F?accomplice=${me?.name}`;\n\n  const copy = () => {\n    Clipboard.setString(url);\n    setText(\"Gekopiëerd naar klembord\");\n  };\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 10 }}>\n        <T bold>{getText(\"footerInviteFriends\")}</T>\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"footerInviteText\")}</T>\n          <View style={{ flexDirection: \"row\" }}>\n            <TextInput\n              value={url}\n              style={{\n                color: theme.secondaryText,\n                backgroundColor: theme.secondary,\n                height: 35,\n                borderRadius: 10,\n                paddingHorizontal: 10,\n                width: 200,\n              }}\n              onFocus={copy}\n            />\n            <Button title={getText(\"footerCopy\")} onPress={copy} />\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <T>{getText(\"footerShare\")}</T>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(facebookShareUrl);\n              }}\n            >\n              <View\n                style={{\n                  marginLeft: 20,\n                  backgroundColor: \"#3b5998\",\n                  width: 40,\n                  height: 40,\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n              </View>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(\n                  `whatsapp://send?text=${getText(\"footerWhatsappText\", url)}`\n                );\n              }}\n            >\n              <Image\n                source={require(\"../../assets/whatsapp.png\")}\n                style={{ width: 55, height: 55 }}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"footerFollowUs\")}</T>\n        <TouchableOpacity\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.facebook.com/Mastercrimez-100872595072798\"\n            );\n          }}\n        >\n          <View\n            style={{\n              marginLeft: 20,\n              backgroundColor: \"#3b5998\",\n              width: 40,\n              height: 40,\n              borderRadius: 20,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\"https://www.instagram.com/mastercrimez.nl/\");\n          }}\n        >\n          <Image\n            source={require(\"../../assets/instagram.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://open.spotify.com/playlist/5n5j78gTXOM9h2SOdz0Ay5?si=9gBkeObkTXaqFZxHLFutIA\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/spotify.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.youtube.com/channel/UCGqGRq-iNxXdLrMx9AlD7qw\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/youtube.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={{ height: 20 }} />\n\n      <Text style={{ color: theme.primaryText }}>\n        &copy; MasterCrimeZ 2006-{new Date().getFullYear()}\n      </Text>\n    </View>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const maxChance = me?.profession === \"thief\" ? 99 : 75;\n    const kans2 = kans > maxChance ? maxChance : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            {response.code && (\n              <ShareButtons\n                me={me}\n                text={getText(\"crimeSuitcase\")}\n                url={`Case/${response.code}`}\n              />\n            )}\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Detectives = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [detectives, setDetectives] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [type, setType] = useState(\"slow\");\n  const [name, setName] = useState(\"\");\n\n  const postHireDetective = async () => {\n    const { response } = await post(\"hireDetective\", {\n      loginToken: device.loginToken,\n      name,\n      type,\n    });\n\n    setResponse(response);\n    getDetectives();\n  };\n\n  const getDetectives = async () => {\n    const { detectives } = await get(\n      `detectives?loginToken=${device.loginToken}`\n    );\n    setDetectives(detectives);\n  };\n\n  doOnce(getDetectives);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          <TextInput\n            style={style(theme).textInput}\n            placeholder={getText(\"name\")}\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={name}\n            onChangeText={setName}\n          />\n\n          <Button\n            style={{ marginBottom: 10 }}\n            title={getText(type + \"Detective\")}\n            onPress={() =>\n              setType(\n                type === \"slow\" ? \"normal\" : type === \"normal\" ? \"fast\" : \"slow\"\n              )\n            }\n          />\n\n          <T>\n            {getText(\n              \"detectiveCost\",\n              type === \"slow\" ? 100000 : type === \"normal\" ? 1000000 : 10000000,\n              getText(type + \"Detective\")\n            )}\n          </T>\n\n          <Button title={getText(\"hire\")} onPress={postHireDetective} />\n\n          <View style={{ height: 100 }} />\n          {detectives?.map?.((detective) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              {detective.user && (\n                <User user={detective.user} size={40} navigation={navigation} />\n              )}\n\n              {detective.city ? (\n                <T>{detective.city}</T>\n              ) : (\n                <CountDown\n                  style={{ marginLeft: 10 }}\n                  until={moment(detective.createdAt)\n                    .add(detective.seconds, \"seconds\")\n                    .diff(moment(), \"seconds\")}\n                  digitStyle={{ backgroundColor: theme.secondary }}\n                  digitTxtStyle={{ color: theme.secondaryText }}\n                  onFinish={() => {}}\n                  size={8}\n                  timeToShow={[\"H\", \"M\", \"S\"]}\n                  timeLabels={{ h: null, m: null, s: null }}\n                />\n              )}\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Detectives;\n","const { Platform, Linking, View, Text } = require(\"react-native\");\nimport React from \"react\";\nimport Constants from \"../Constants\";\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nconst DownloadApp = () => {\n  if (getMobileOperatingSystem() === \"android\") {\n    console.log(\"is android\");\n    window.location.replace(Constants.ANDROID_APP_URL);\n  }\n\n  if (getMobileOperatingSystem() === \"ios\") {\n    console.log(\"is ios\");\n    window.location.replace(Constants.IOS_APP_URL);\n  }\n\n  console.log(getMobileOperatingSystem());\n\n  return (\n    <View>\n      <Text>Download the app!</Text>\n    </View>\n  );\n};\nexport default DownloadApp;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst EstateAgent = ({ navigation, screenProps }) => {\n  return <Shop type=\"home\" navigation={navigation} screenProps={screenProps} />;\n};\n\nexport default EstateAgent;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n        <TextInput\n          multiline\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          numberOfLines={4}\n          style={{ ...style(device.theme).textInput, height: 150 }}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n\n                <MarkdownView\n                  style={{ text: { color: device.theme.primaryText } }}\n                >\n                  {response.message}\n                </MarkdownView>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={style(device.theme).textInput}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            placeholder={getText(\"react\")}\n            value={this.state.message}\n            onChangeText={(message) => this.setState({ message })}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Image,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getTextFunction,\n  getUserColor,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const [response, setResponse] = useState(null);\n\n  const name = navigation.state.params?.name;\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${name}`);\n    setLoading(false);\n    setItem(gang);\n  };\n\n  const postGangJoin = async () => {\n    setLoading(true);\n\n    const { response } = await post(`gangJoin`, {\n      token: device.loginToken,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getGang);\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const totalHealth = item.users?.reduce((prev, user) => prev + user.health, 0);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        ListFooterComponent={() => {\n          return (\n            <MarkdownView style={{ text: { color: theme.primaryText } }}>\n              {item?.profile}\n            </MarkdownView>\n          );\n        }}\n        ListHeaderComponent={() => {\n          return (\n            <View\n              style={{ margin: MARGIN, flexDirection: \"row\", flexWrap: \"wrap\" }}\n            >\n              <View>\n                {item.image ? (\n                  <Image\n                    source={{ uri: Constants.SERVER_ADDR + item.image }}\n                    style={{ width: SIZE, height: SIZE }}\n                    resizeMode=\"cover\"\n                  />\n                ) : (\n                  <Image\n                    source={require(\"../../assets/icon.png\")}\n                    style={{ width: SIZE, height: SIZE }}\n                  />\n                )}\n\n                {totalHealth === 0 ? (\n                  <Image\n                    source={require(\"../../assets/uitgemoord.jpg\")}\n                    style={{ width: SIZE, height: SIZE }}\n                  />\n                ) : null}\n              </View>\n              <View style={{ margin: MARGIN }}>\n                {loading ? <ActivityIndicator /> : null}\n                <T>\n                  {getText(\"name\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"members\")}: {item.members}\n                </T>\n                <T>\n                  {getText(\"bank\")}: €{numberFormat(item.bank)},-\n                </T>\n                <T>\n                  {getText(\"power\")}: {item.score}\n                </T>\n                {!me?.gang &&\n                  (response ? (\n                    <T>{response}</T>\n                  ) : (\n                    <Button\n                      onPress={postGangJoin}\n                      title={getText(\"gangJoinCTA\")}\n                      theme={theme}\n                    />\n                  ))}\n              </View>\n            </View>\n          );\n        }}\n        data={item.users}\n        keyExtractor={(item, index) => `item${index}`}\n        renderItem={({ item, index }) => {\n          const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n\n          const color = getUserColor(item, theme);\n\n          return (\n            <Grid key={`item${index}`} style={{}}>\n              <Col size={2} style={{ marginVertical: 5 }}>\n                <User navigation={navigation} user={item} />\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>{getGangLevel(item.gangLevel)}</T>\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>❤️ {item.health}%</T>\n              </Col>\n            </Grid>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\n\nconst GangAchievements = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n\n  const getGangAchievements = async () => {\n    setLoading(true);\n    const result = await get(`gangAchievements?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangAchievements);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>\n              {getText(\"level\")}: {result.power}\n            </H1>\n          </View>\n          {result.achievements &&\n            Object.keys(result.achievements).map((key) => {\n              const stats = result.achievements[key];\n\n              return (\n                <View style={{ marginBottom: 20 }}>\n                  <T bold style={{ alignSelf: \"center\", marginVertical: 20 }}>\n                    {getText(key)}\n                  </T>\n\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 150,\n                        backgroundColor: theme.secondary,\n                        padding: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <T>\n                        {getText(\"level\")}: {stats.level}\n                      </T>\n\n                      <T>\n                        {getText(\"average\")}: {stats.current}\n                      </T>\n                    </View>\n\n                    <AntDesign\n                      name=\"arrowright\"\n                      color={theme.primaryText}\n                      size={36}\n                    />\n\n                    <View\n                      style={{\n                        width: 150,\n                        backgroundColor: theme.secondary,\n                        padding: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      {stats.next && (\n                        <T>\n                          {getText(\"level\")}: {stats.level + 1}\n                        </T>\n                      )}\n                      <T>\n                        {stats.next\n                          ? `${getText(\"average\")}: ${stats.next}`\n                          : getText(\"maximumLevel\")}\n                      </T>\n                    </View>\n                  </View>\n                </View>\n              );\n            })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangAchievements;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst GarageShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"garage\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default GarageShop;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* Show all people with isHacker set to true */}\n      <Image\n        source={require(\"../../assets/hacker.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"hackersInfo\")}</T>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { Image, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"RLD\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.rldOwner ? (\n                    <T>{city.rldOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.rldOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"rld\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city.rldProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const number = Math.ceil(Math.random() * 60);\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Image\n                style={{ width: 100, height: 100 }}\n                source={{\n                  uri:\n                    Constants.SERVER_ADDR + \"/images/female/\" + number + \".gif\",\n                }}\n              />\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { Component } from \"react\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  NativeModules,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { leftMenu, rightMenu } from \"../Menus\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst itemWidth = width / 4 > 100 ? 100 : width / 4;\nconst isSmallDevice = width < 800;\n\nconst amountOfItems = Math.floor((height - 200) / itemWidth) * 4;\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    //iPad|\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nclass Home extends Component {\n  state = {\n    response: null,\n    activeSlide: 0,\n    notificationsHeader: false,\n  };\n\n  componentDidMount() {\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n\n    this.turnOnNotifications();\n    this.sendLanguage();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      this.turnOnNotifications();\n      this.sendLanguage();\n    }\n  };\n\n  sendLanguage = () => {\n    const { device, me } = this.props.screenProps;\n\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  turnOnNotifications = async () => {\n    const { device, me } = this.props.screenProps;\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        this.setState({ notificationsHeader: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      this.setState({ notificationsHeader: false });\n    }\n  };\n\n  _renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginVertical: 15,\n        }}\n      >\n        {item.map((menu, index) => {\n          const TheIcon = Icon[menu.iconType];\n          return (\n            <View\n              key={`i${index}`}\n              style={{ width: itemWidth, alignItems: \"center\" }}\n            >\n              <TouchableOpacity\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"#000\",\n                  backgroundColor: theme.secondary,\n                  borderRadius: 10,\n                  width: itemWidth - 25,\n                  height: itemWidth - 25,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={(e) => {\n                  navigation.navigate(menu.to);\n\n                  const movement = {\n                    action: \"App_Menu_\" + menu.to,\n                    locationX: e.nativeEvent.locationX,\n                    locationY: e.nativeEvent.locationY,\n                    timestamp: Date.now(),\n                  };\n\n                  dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n                }}\n              >\n                {TheIcon && (\n                  <TheIcon\n                    name={menu.icon}\n                    size={(itemWidth - 25) / 2}\n                    color={theme.secondaryText}\n                  />\n                )}\n              </TouchableOpacity>\n              <View>\n                <Text style={{ color: theme.primaryText }}>{menu.text}</Text>\n                {menu.component}\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCarousel() {\n    const {\n      screenProps: { dispatch, me, device },\n    } = this.props;\n\n    const { notificationsHeader } = this.state;\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    const getText = getTextFunction(me?.locale);\n\n    const data = [\n      filtered.slice(0, amountOfItems),\n      filtered.slice(amountOfItems, amountOfItems * 2),\n      amountOfItems * 2 > filtered.length\n        ? undefined\n        : filtered.slice(amountOfItems * 2, filtered.length),\n    ].filter((x) => !!x);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {notificationsHeader && (\n          <TouchableOpacity\n            onPress={() => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            }}\n          >\n            <View\n              style={{\n                padding: 5,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"exclamationcircleo\"\n                color=\"red\"\n                style={{ marginRight: 10 }}\n              />\n              <T>{getText(\"turnOnNotificationsText\")}</T>\n            </View>\n          </TouchableOpacity>\n        )}\n\n        <Carousel\n          ref={(c) => {\n            this._carousel = c;\n          }}\n          data={data}\n          renderItem={this._renderItem}\n          sliderWidth={width}\n          onSnapToItem={(index) => this.setState({ activeSlide: index })}\n          itemWidth={width}\n        />\n\n        <Pagination\n          dotsLength={data.length}\n          activeDotIndex={this.state.activeSlide}\n          // containerStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.75)\" }}\n          dotStyle={{\n            width: 10,\n            height: 10,\n            borderRadius: 5,\n            marginHorizontal: 8,\n            backgroundColor: \"rgba(255, 255, 255, 0.92)\",\n          }}\n          inactiveDotStyle={\n            {\n              // Define styles for inactive dots here\n            }\n          }\n          inactiveDotOpacity={0.4}\n          inactiveDotScale={0.6}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      device,\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    let appLink = null;\n    if (Platform.OS === \"web\") {\n      if (getMobileOperatingSystem() === \"android\") {\n        appLink = Constants.ANDROID_APP_URL;\n      }\n\n      if (getMobileOperatingSystem() === \"ios\") {\n        appLink = Constants.IOS_APP_URL;\n      }\n    }\n\n    if (Platform.OS === \"web\") {\n      if (isSmallDevice) {\n        return (\n          <ScrollView>\n            {appLink && (\n              <TouchableOpacity onPress={() => Linking.openURL(appLink)}>\n                <View\n                  style={{\n                    padding: 5,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <AntDesign\n                    name=\"exclamationcircleo\"\n                    color=\"red\"\n                    style={{ marginRight: 10 }}\n                  />\n                  <T>{getText(\"downloadTheApp\")}</T>\n                </View>\n              </TouchableOpacity>\n            )}\n\n            {this._renderItem({ item: filtered })}\n          </ScrollView>\n        );\n      } else {\n        return <T>{getText(\"welcomeBack\")}</T>;\n      }\n    }\n    return this.renderCarousel();\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst Sint = ({\n  screenProps,\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"sint\", {\n      token: device.loginToken,\n      captcha,\n    });\n    setResponse(response);\n  };\n\n  const minute = Math.round((me?.sintEndsAt - Date.now()) / (60 * 1000));\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <T>{response}</T>\n        ) : me?.sintEndsAt > Date.now() ? (\n          <T>{getText(\"sintWait\", minute)}</T>\n        ) : (\n          <View>\n            <Captcha\n              screenProps={screenProps}\n              captcha={captcha}\n              onChangeCaptcha={setCaptcha}\n              random={random}\n              onChangeRandom={setRandom}\n            />\n\n            <Button theme={theme} title={getText(\"sintCTA\")} onPress={submit} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default Sint;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction } from \"../Util\";\nconst properties = [\n  {\n    name: \"bulletFactory\",\n  },\n  {\n    name: \"casino\",\n  },\n  {\n    name: \"rld\",\n  },\n  {\n    name: \"landlord\",\n  },\n  {\n    name: \"junkies\",\n  },\n  {\n    name: \"weaponShop\",\n  },\n  {\n    name: \"airport\",\n  },\n  {\n    name: \"estateAgent\",\n  },\n  {\n    name: \"garage\",\n  },\n  {\n    name: \"jail\",\n  },\n  {\n    name: \"bank\",\n  },\n];\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    me,\n    reloadCities,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = typeStrings[property];\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  <Button\n                    key={`index${index}${property}`}\n                    style={{ marginVertical: 15 }}\n                    theme={theme}\n                    title={getText(\"manage\")}\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: property,\n                        city: city.city,\n                      })\n                    }\n                  />\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </View>\n  );\n};\n\nexport default MyObjects;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, StyleSheet, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\nimport MyObjects from \"./MyObjects\";\n\nconst professionReleaseDate = moment(\"15/03/2021\", \"DD/MM/YYYY\").set(\n  \"hour\",\n  17\n);\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n\n        {me?.protectionAt > Date.now() ? (\n          <TouchableOpacity\n            onPress={() => {\n              //haalweg\n              fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ token: device.loginToken }),\n              })\n                .then((response) => response.json())\n                .then(async ({ response }) => {\n                  this.setState({ response });\n                  reloadMe(device.loginToken);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            <View>\n              <T>{getText(\"protectionInfo\", uur)}</T>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n\n        {me?.canChooseProfession &&\n          (moment().isAfter(professionReleaseDate) || me?.level > 1) && (\n            <View>\n              <T>{getText(\"statusCanChooseProfessionText\")}</T>\n              <Button\n                title={getText(\"statusCanChooseProfessionButton\")}\n                onPress={() => navigation.navigate(\"ChooseProfession\")}\n              />\n            </View>\n          )}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n\n        <MyObjects navigation={navigation} screenProps={screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bunker from \"./Bunker\";\nimport Sint from \"./Sint\";\nimport Status from \"./Status\";\nconst AllStats = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"status\",\n      title: getText(\"menuStatus\"),\n      component: Status,\n    },\n    {\n      key: \"bunker\",\n      title: getText(\"menuBunker\"),\n      component: Bunker,\n    },\n    {\n      key: \"sint\",\n      title: getText(\"menuSint\"),\n      component: Sint,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1 }}>\n        <Component {...props} />\n      </View>\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllStats;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 1.000.000 kogels kosten Hoe dit wordt berekend, is\n        geheim, maar het ligt aan deze factoren: Voor de aanvaller: Het wapen,\n        de moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels\n        je nodig zult hebben. Voor de verdediger: De verdediging, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe meer kogels de\n        aanvaller nodig zal hebben. De rang heeft de meeste invloed, daarna het\n        wapen, de verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Coffeeshop, Leger des Heils en het Sex shop krijgen 20% van iedereens\n        inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n    this.props.screenProps.reloadCities();\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n                this.fetchMembers();\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, reloadCities, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"jail\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n            marginHorizontal: 15,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"jail\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                paddingHorizontal: 15,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.jailOwner ? (\n                    <Text style={{ color: theme.primaryText }}>\n                      {city.jailOwner}\n                    </Text>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.jailOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"jail\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <Text style={{ color: theme.primaryText }}>\n                  {city.jailProfit}\n                </Text>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListFooterComponent={this.renderCities}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"junkiesObject\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.junkiesOwner ? (\n                    <T>{city.junkiesOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.junkiesOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"junkies\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <View>\n                  <T>{city.junkiesProfit}</T>\n                </View>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Lotto = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"lottoDay\");\n  const buy = async () => {\n    const { response } = await post(\"buyLotto\", {\n      token: device.loginToken,\n      amount,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <T>{getText(\"youHaveDayTickets\", me?.lottoDay)}</T>\n            <T>{getText(\"youHaveWeekTickets\", me?.lottoWeek)}</T>\n            <T>{getText(\"youHaveMonthTickets\", me?.lottoMonth)}</T>\n\n            <T bold style={{ marginTop: 20 }}>\n              {getText(\"buy\")}\n            </T>\n            <View style={{ flexDirection: \"row\" }}>\n              <TextInput\n                style={[style(theme).textInput, { flex: 1 }]}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <Button\n                style={{ marginVertical: 10, marginLeft: 10 }}\n                title={\n                  type === \"lottoDay\"\n                    ? getText(\"dayLotto\")\n                    : type === \"lottoWeek\"\n                    ? getText(\"weekLotto\")\n                    : getText(\"monthLotto\")\n                }\n                onPress={() => {\n                  setType(\n                    type === \"lottoDay\"\n                      ? \"lottoWeek\"\n                      : type === \"lottoWeek\"\n                      ? \"lottoMonth\"\n                      : \"lottoDay\"\n                  );\n                }}\n              />\n            </View>\n\n            <Button\n              theme={theme}\n              title={getText(\"buy\")}\n              onPress={() => buy()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Lotto;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = typeStrings[type];\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  StatusBar,\n  Text,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Swiper from \"react-native-web-swiper\";\nimport { AlertContext } from \"../../components/AlertProvider\";\nimport User from \"../../components/User\";\nimport {\n  getRank,\n  getTextFunction,\n  numberFormat,\n  post,\n  withCaptcha\n} from \"../../Util\";\n\nexport const getZoom = (delta) => Math.ceil(Math.log(360 / delta) / Math.LN2);\nconst Stats = React.memo(({ me, device }) => {\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: \"white\",\n  };\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Text style={textStyle}>\n        {me?.name} {me?.gang?.name}\n      </Text>\n      <Text style={textStyle}>❤️ {me?.health}%</Text>\n\n      <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n      <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n      <View style={{ flexDirection: \"row\" }}>\n        <Icon.MaterialCommunityIcons\n          name=\"pistol\"\n          size={18}\n          color={device.theme.secondaryText}\n          style={{ marginRight: 5 }}\n        />\n        <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n      </View>\n      <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n      <Text style={textStyle}>\n        ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n      </Text>\n    </View>\n  );\n});\n\nconst MapIcon = React.memo(({ view }) => {\n  return (\n    <TouchableOpacity\n      key={`v${view.view}`}\n      hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n      style={{\n        marginBottom: 10,\n        backgroundColor: view.isActive ? \"rgba(0,0,0,0.8)\" : \"rgba(0,0,0,0.4)\",\n        borderRadius: 20,\n        width: 40,\n        height: 40,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n      onPress={view.onPress}\n    >\n      <view.icon name={view.iconName} color=\"white\" size={30} />\n    </TouchableOpacity>\n  );\n});\n\nconst Overlay = React.memo(\n  ({\n    map,\n    view,\n    setView,\n    setZoom,\n    device,\n    me,\n    selected,\n    setSelected,\n    objects,\n    dragAndDropMode,\n    setDragAndDropMode,\n    territoriesSwiperRefContainer,\n    propertiesSwiperRefContainer,\n    cityAreas,\n    areas,\n    navigation,\n    reloadCities,\n    reloadMe,\n    city,\n    getAreas,\n    selectedAreaIndex,\n    setSelectedAreaIndex,\n  }) => {\n    const { showActionSheetWithOptions } = useActionSheet();\n    const getText = getTextFunction(me?.locale);\n    const alertAlert = React.useContext(AlertContext);\n    const [loading, setLoading] = useState(false);\n\n    const selectedArea =\n      selectedAreaIndex !== undefined\n        ? areas?.find(\n            (x) => x.code === cityAreas.areas[selectedAreaIndex]?.code\n          )\n        : null;\n    // console.log(\"render overlay\");\n\n    const bombAction = (type) => ({\n      inactive: !city?.[`${type}Owner`] || city?.[`${type}Owner`] === me?.name,\n      text: getText(\"bombard\"),\n      onPress: () => {\n        const airplanes = [\n          \"\",\n          \"Fokker\",\n          \"Fleet\",\n          \"Havilland\",\n          \"Cessna\",\n          \"Douglas\",\n          \"Lear Jet\",\n          \"Raket\",\n        ];\n\n        alertAlert(\n          getText(\"fillInBombs\"),\n          me?.airplane === 0\n            ? getText(\"bombNoAirplane\")\n            : getText(\n                \"bombAirplaneText\",\n                airplanes[me?.airplane],\n                me?.airplane * 5\n              ),\n          [\n            {\n              text: getText(\"ok\"),\n              onPress: (bombs) => {\n                withCaptcha(\n                  device.loginToken,\n                  me?.needCaptcha,\n                  getText,\n                  alertAlert,\n                  async (captcha) => {\n                    setLoading(true);\n                    const { response } = await post(\"bomb\", {\n                      loginToken: device.loginToken,\n                      bombs,\n                      type,\n                      captcha,\n                    });\n                    setLoading(false);\n                    reloadMe(device.loginToken);\n                    alertAlert(response, null, null, { key: \"bombResponse\" });\n                    reloadCities();\n                  }\n                );\n              },\n            },\n            {\n              text: getText(\"cancel\"),\n            },\n          ],\n          { key: \"bomb\", textInput: true, keyboardType: \"numeric\" }\n        );\n      },\n      icon: Icon.FontAwesome,\n      iconName: \"bomb\",\n    });\n    const takeOverAction = (type) => ({\n      inactive: !!city?.[`${type}Owner`],\n      text: getText(\"takeOver\"),\n      onPress: async () => {\n        const { response } = await post(\"becomeOwner\", {\n          city: me?.city,\n          type,\n          token: device.loginToken,\n        });\n        reloadCities();\n        reloadMe(device.loginToken);\n        alertAlert(response, null, null, { key: \"becomeOwnerResponse\" });\n      },\n      icon: Icon.MaterialCommunityIcons,\n      iconName: \"account-arrow-left\",\n    });\n    const manageAction = (type) => ({\n      inactive: city?.[`${type}Owner`] !== me?.name,\n      text: getText(\"manage\"),\n      onPress: () =>\n        navigation.navigate(\"ManageObject\", { type, city: me?.city }),\n      icon: Icon.Ionicons,\n      iconName: \"md-settings\",\n    });\n\n    const postGetIncome = async (type, captcha) => {\n      setLoading(true);\n      const { response } = await post(\"income\", {\n        token: device.loginToken,\n        captcha,\n        type,\n      });\n\n      setLoading(false);\n\n      reloadMe(device.loginToken);\n      reloadCities();\n      alertAlert(response, null, null, { key: \"incomeResponse\" });\n    };\n    const incomeAction = (type) => ({\n      text: getText(\"getIncome\"),\n      onPress: () =>\n        withCaptcha(\n          device.loginToken,\n          me?.needCaptcha,\n          getText,\n          alertAlert,\n          (code) => postGetIncome(type, code)\n        ),\n      icon: Icon.FontAwesome5,\n      iconName: \"money-bill-wave\",\n    });\n\n    const allActions = {\n      casino: () => [\n        {\n          text: getText(\"poker\"),\n          onPress: () => navigation.navigate(\"Poker\"),\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"poker-chip\",\n          badgeAmount: 0,\n        },\n        {\n          text: getText(\"lotto\"),\n          onPress: () => navigation.navigate(\"Lotto\"),\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"cash-100\",\n          badgeAmount: 0,\n        },\n        bombAction(\"casino\"),\n        takeOverAction(\"casino\"),\n        manageAction(\"casino\"),\n      ],\n      bulletFactory: () => [\n        {\n          text: getText(\"buyBullets\"),\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"factory\",\n          onPress: () => {\n            //navigation.navigate(\"Bulletfactory\")\n            alertAlert(\n              getText(\"buyBullets\"),\n              getText(\"bulletsText\", city?.bulletFactoryPrice, city?.bullets),\n              [\n                {\n                  text: getText(\"ok\"),\n                  onPress: (amount) => {\n                    withCaptcha(\n                      device.loginToken,\n                      me?.needCaptcha,\n                      getText,\n                      alertAlert,\n                      async (captcha) => {\n                        setLoading(true);\n                        const { response } = await post(\"buyBullets\", {\n                          loginToken: device.loginToken,\n                          amount,\n                          captcha,\n                        });\n                        setLoading(false);\n                        reloadMe(device.loginToken);\n                        reloadCities();\n                        alertAlert(response, null, null, {\n                          key: \"buyBulletsResponse\",\n                        });\n                      }\n                    );\n                  },\n                },\n                {\n                  text: getText(\"cancel\"),\n                },\n              ],\n              { key: \"buyBullets\", textInput: true, keyboardType: \"numeric\" }\n            );\n          },\n          badgeAmount: city?.bullets,\n        },\n        {\n          text: getText(\"menuGangBulletfactory\"),\n          icon: Icon.FontAwesome,\n          iconName: \"group\",\n          onPress: () => navigation.navigate(\"GangBulletFactory\"),\n          badgeAmount: 0,\n          inactive: !me?.gangId,\n        },\n        bombAction(\"bulletFactory\"),\n        takeOverAction(\"bulletFactory\"),\n        manageAction(\"bulletFactory\"),\n      ],\n      airport: () => [\n        {\n          text: getText(\"menuAirport\"),\n          icon: Icon.Ionicons,\n          iconName: \"ios-airplane\",\n          onPress: () => navigation.navigate(\"Airport\"),\n          badgeAmount: 0,\n        },\n        {\n          text: getText(\"menuAirplaneShop\"),\n          icon: Icon.Ionicons,\n          iconName: \"ios-airplane\",\n          onPress: () => navigation.navigate(\"AirplaneShop\"),\n          badgeAmount: 0,\n        },\n        bombAction(\"airport\"),\n        takeOverAction(\"airport\"),\n        manageAction(\"airport\"),\n      ],\n\n      bank: () => [\n        {\n          text: getText(\"menuBank\"),\n          icon: Icon.FontAwesome,\n          iconName: \"bank\",\n          onPress: () => navigation.navigate(\"Bank\"),\n          badgeAmount: 0,\n        },\n        {\n          text: getText(\"menuSwissBank\"),\n          icon: Icon.FontAwesome5,\n          iconName: \"money-bill\",\n          onPress: () => navigation.navigate(\"SwissBank\"),\n          badgeAmount: 0,\n        },\n\n        {\n          text: getText(\"menuDonate\"),\n          icon: Icon.FontAwesome5,\n          iconName: \"donate\",\n          onPress: () => navigation.navigate(\"Donate\"),\n          badgeAmount: 0,\n        },\n\n        bombAction(\"bank\"),\n        takeOverAction(\"bank\"),\n        manageAction(\"bank\"),\n      ],\n\n      hospital: () => [\n        {\n          text: getText(\"menuHospital\"),\n          icon: Icon.Entypo,\n          iconName: \"heart\",\n          onPress: () => navigation.navigate(\"Hospital\"),\n          badgeAmount: 0,\n        },\n        bombAction(\"hospital\"),\n        takeOverAction(\"hospital\"),\n        manageAction(\"hospital\"),\n      ],\n      house: () => [\n        {\n          text: getText(\"menuStatus\"),\n          icon: Icon.Ionicons,\n          iconName: \"ios-stats\",\n          onPress: () => navigation.navigate(\"Status\"),\n          badgeAmount: 0,\n        },\n        {\n          text: getText(\"menuBunker\"),\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"castle\",\n          onPress: () => navigation.navigate(\"Bunker\"),\n          badgeAmount: 0,\n        },\n\n        {\n          text: getText(\"menuSint\"),\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"shoe-formal\",\n          onPress: () => navigation.navigate(\"Sint\"),\n          badgeAmount: 0,\n          inactive:\n            me?.level < 2 &&\n            !(\n              moment().year() > 2020 &&\n              ((moment().month() === 10 && moment().date() > 15) ||\n                (moment().month() === 11 && moment().date() < 6))\n            ),\n        },\n      ],\n\n      landlord: () => [\n        incomeAction(\"landlord\"),\n        bombAction(\"landlord\"),\n        takeOverAction(\"landlord\"),\n        manageAction(\"landlord\"),\n      ],\n      junkies: () => [\n        incomeAction(\"junkies\"),\n        bombAction(\"junkies\"),\n        takeOverAction(\"junkies\"),\n        manageAction(\"junkies\"),\n      ],\n      rld: () => [\n        incomeAction(\"rld\"),\n        bombAction(\"rld\"),\n        takeOverAction(\"rld\"),\n        manageAction(\"rld\"),\n      ],\n\n      headquarter: () => [\n        {\n          text: getText(\"menuCreateGang\"),\n          icon: Icon.Ionicons,\n          iconName: \"ios-people\",\n          onPress: () => navigation.navigate(\"GangCreate\"),\n          badgeAmount: 0,\n          inactive: !!me?.gangId,\n        },\n        {\n          text: getText(\"menuGangSettings\"),\n          icon: Icon.Ionicons,\n          iconName: \"ios-people\",\n          onPress: () => navigation.navigate(\"GangSettings\"),\n          badgeAmount: 0,\n          inactive: !me?.gangId,\n        },\n\n        {\n          text: getText(\"menuGangShop\"),\n          icon: Icon.Ionicons,\n          iconName: \"ios-people\",\n          onPress: () => navigation.navigate(\"GangShop\"),\n          badgeAmount: 0,\n          inactive: !me?.gangId,\n        },\n\n        {\n          text: getText(\"menuGangAchievements\"),\n          icon: Icon.Ionicons,\n          iconName: \"ios-people\",\n          onPress: () => navigation.navigate(\"GangAchievements\"),\n          badgeAmount: 0,\n          inactive: !me?.gangId,\n        },\n        {\n          text: getText(\"menuGangMissions\"),\n          icon: Icon.Ionicons,\n          iconName: \"ios-people\",\n          onPress: () => navigation.navigate(\"GangMissions\"),\n          badgeAmount: 0,\n          inactive: !me?.gangId,\n        },\n      ],\n      gym: () => [\n        {\n          text: getText(\"menuGym\"),\n          icon: Icon.Ionicons,\n          iconName: \"md-fitness\",\n          onPress: () => navigation.navigate(\"Gym\"),\n          badgeAmount: 0,\n        },\n        bombAction(\"gym\"),\n        takeOverAction(\"gym\"),\n        manageAction(\"gym\"),\n      ],\n      garage: () => [\n        {\n          text: getText(\"menuGarage\"),\n          icon: Icon.FontAwesome,\n          iconName: \"car\",\n          onPress: () => navigation.navigate(\"Garage\"),\n          badgeAmount: 0,\n        },\n\n        {\n          text: getText(\"menuRacecars\"),\n          icon: Icon.FontAwesome5,\n          iconName: \"car\",\n          onPress: () => navigation.navigate(\"Racecars\"),\n          badgeAmount: 0,\n        },\n\n        {\n          text: getText(\"menuGarageShop\"),\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"garage\",\n          onPress: () => navigation.navigate(\"GarageShop\"),\n          badgeAmount: 0,\n        },\n\n        bombAction(\"garage\"),\n        takeOverAction(\"garage\"),\n        manageAction(\"garage\"),\n      ],\n\n      jail: () => [\n        {\n          text: getText(\"menuJail2\"),\n          icon: Icon.FontAwesome,\n          iconName: \"bars\",\n          onPress: () => navigation.navigate(\"Jail\"),\n          badgeAmount: 0,\n        },\n        bombAction(\"jail\"),\n        takeOverAction(\"jail\"),\n        manageAction(\"jail\"),\n      ],\n\n      market: () => [\n        {\n          text: getText(\"menuMarket\"),\n          icon: Icon.FontAwesome,\n          iconName: \"handshake-o\",\n          onPress: () => navigation.navigate(\"Market\"),\n          badgeAmount: 0,\n        },\n        bombAction(\"market\"),\n        takeOverAction(\"market\"),\n        manageAction(\"market\"),\n      ],\n      weaponShop: () => [\n        {\n          text: getText(\"buyWeapons\"),\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"pistol\",\n          onPress: () => navigation.navigate(\"WeaponShop\"),\n          badgeAmount: 0,\n        },\n\n        {\n          text: getText(\"buyProtection\"),\n          icon: Icon.FontAwesome,\n          iconName: \"shield\",\n          onPress: () => navigation.navigate(\"ProtectionShop\"),\n          badgeAmount: 0,\n        },\n        bombAction(\"weaponShop\"),\n        takeOverAction(\"weaponShop\"),\n        manageAction(\"weaponShop\"),\n      ],\n\n      estateAgent: () => [\n        {\n          text: getText(\"menuEstateAgent\"),\n          icon: Icon.FontAwesome,\n          iconName: \"home\",\n          onPress: () => navigation.navigate(\"EstateAgent\"),\n          badgeAmount: 0,\n        },\n        bombAction(\"estateAgent\"),\n        takeOverAction(\"estateAgent\"),\n        manageAction(\"estateAgent\"),\n      ],\n\n      stockExchange: () => [\n        {\n          text: getText(\"menuStockExchange\"),\n          icon: Icon.Entypo,\n          iconName: \"area-graph\",\n          onPress: () => navigation.navigate(\"StockExchange\"),\n          badgeAmount: 0,\n        },\n        bombAction(\"stockExchange\"),\n        takeOverAction(\"stockExchange\"),\n        manageAction(\"stockExchange\"),\n      ],\n      area: () => {\n        return [\n          {\n            inactive: !!selectedArea?.userId,\n            text: getText(\"takeOver\"),\n            onPress: async () => {\n              setLoading(true);\n              const { response } = await post(\"takeEmptyArea\", {\n                loginToken: device.loginToken,\n                id: selectedArea?.id,\n              });\n\n              setLoading(false);\n\n              getAreas();\n              reloadMe(device.loginToken);\n              alertAlert(response, null, null, {\n                key: \"takeEmptyAreaResponse\",\n              });\n            },\n            icon: Icon.MaterialCommunityIcons,\n            iconName: \"account-arrow-left\",\n          },\n\n          {\n            inactive:\n              selectedArea?.userId === me?.id || selectedArea?.userId === null,\n            text: getText(\"menuBomb\"),\n            onPress: async () => {\n              const airplanes = [\n                \"\",\n                \"Fokker\",\n                \"Fleet\",\n                \"Havilland\",\n                \"Cessna\",\n                \"Douglas\",\n                \"Lear Jet\",\n                \"Raket\",\n              ];\n\n              alertAlert(\n                getText(\"fillInBombs\"),\n                me?.airplane === 0\n                  ? getText(\"bombNoAirplane\")\n                  : getText(\n                      \"bombAirplaneText\",\n                      airplanes[me?.airplane],\n                      me?.airplane * 5\n                    ),\n                [\n                  {\n                    text: getText(\"ok\"),\n                    onPress: (bombs) => {\n                      withCaptcha(\n                        device.loginToken,\n                        me?.needCaptcha,\n                        getText,\n                        alertAlert,\n                        async (captcha) => {\n                          setLoading(true);\n                          const { response } = await post(\"bombArea\", {\n                            loginToken: device.loginToken,\n                            bombs,\n                            id: connectedArea?.id,\n                            captcha,\n                          });\n                          setLoading(false);\n                          reloadMe(device.loginToken);\n                          alertAlert(response, null, null, {\n                            key: \"bombAreaResponse\",\n                          });\n                          reloadCities();\n                        }\n                      );\n                    },\n                  },\n                  {\n                    text: getText(\"cancel\"),\n                  },\n                ],\n                { key: \"bombArea\", textInput: true, keyboardType: \"numeric\" }\n              );\n            },\n            icon: Icon.FontAwesome,\n            iconName: \"bomb\",\n          },\n\n          {\n            inactive:\n              selectedArea?.userId !== me?.id || selectedArea?.damage === 0,\n            text: getText(\"repair\"),\n            onPress: async () => {\n              setLoading(true);\n              const { response } = await post(\"repairMyArea\", {\n                token: device.loginToken,\n                id: selectedArea?.id,\n              });\n              setLoading(false);\n              getAreas();\n              reloadMe(device.loginToken);\n              alertAlert(response, null, null, { key: \"repairMyAreaResponse\" });\n            },\n            icon: Icon.AntDesign,\n            iconName: \"tool\",\n          },\n        ];\n      },\n    };\n\n    const actions = selected\n      ? allActions[selected]().filter((x) => !x.inactive)\n      : [];\n\n    const openActionSheet = () => {\n      // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n      const options = [\n        getText(\"killSomeone\"),\n        getText(\"robSomeone\"),\n        getText(\"organizeStreetrace\"),\n        getText(\"organizeRobbery\"),\n      ];\n\n      if (me?.gangId) {\n        options.push(getText(\"organizeOC\"));\n      }\n\n      options.push(getText(\"cancel\"));\n      const destructiveButtonIndex = undefined;\n      const cancelButtonIndex = options.length - 1;\n\n      showActionSheetWithOptions(\n        {\n          options,\n          cancelButtonIndex,\n          destructiveButtonIndex,\n        },\n        (buttonIndex) => {\n          if (buttonIndex === 0) {\n            navigation.navigate(\"Kill\");\n          } else if (buttonIndex === 1) {\n            navigation.navigate(\"Rob\");\n          } else if (buttonIndex === 2) {\n            navigation.navigate(\"CreateStreetrace\");\n          } else if (buttonIndex === 3) {\n            navigation.navigate(\"CreateRobbery\");\n          } else if (buttonIndex === 4 && me?.gangId) {\n            navigation.navigate(\"CreateOc\");\n          }\n          // Do something here depending on the button index selected\n        }\n      );\n    };\n\n    const animateToCity = () => {\n      if (Platform.OS === \"web\") {\n        map.panTo({\n          lat: city.latitude,\n          lng: city.longitude,\n        });\n        console.log(\"animateTocity\");\n        setZoom(getZoom(city?.delta));\n      } else {\n        map.animateToRegion({\n          latitude: city.latitude,\n          longitude: city.longitude,\n          latitudeDelta: city.delta * 1.2,\n          longitudeDelta: city.delta * 1.2,\n        });\n      }\n    };\n\n    const renderTerritoriesSwiper = (\n      <View style={{ height: 150 }}>\n        <Swiper\n          controlsEnabled={false}\n          key={`Swiper1`}\n          ref={territoriesSwiperRefContainer}\n          style={{ flex: 1 }}\n          initialPage={0}\n          onIndexChanged={(position) => {\n            if (position === 0) {\n              //should animate to whole city\n              animateToCity();\n              setSelected(null);\n              setSelectedAreaIndex(null);\n            } else {\n              setSelected(\"area\");\n              setSelectedAreaIndex(position - 1);\n\n              const area = cityAreas.areas[position - 1];\n              // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n              if (Platform.OS === \"web\") {\n                map.panTo({\n                  lat: area.centerLatitude,\n                  lng: area.centerLongitude,\n                });\n                const biggestDelta =\n                  area.latitudeDelta > area.longitudeDelta\n                    ? area.latitudeDelta\n                    : area.longitudeDelta;\n\n                setZoom(getZoom(biggestDelta));\n              } else {\n                map.animateToRegion({\n                  latitude: area.centerLatitude,\n                  longitude: area.centerLongitude,\n                  latitudeDelta: area.latitudeDelta,\n                  longitudeDelta: area.longitudeDelta,\n                });\n              }\n            }\n            //improve this once i have centers.\n          }}\n        >\n          <View style={{ flex: 1 }}>\n            <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"bold\" }}>\n              {me?.city}: {cityAreas.areas.length} {getText(\"territories\")}\n            </Text>\n          </View>\n          {cityAreas.areas.map((area, index) => {\n            const connectedArea = areas?.find((x) => x.code === area.code);\n\n            return (\n              <View key={`page${index}`} style={{ height: 150, flex: 1 }}>\n                <Grid>\n                  <Col>\n                    <Text style={{ color: \"white\" }}>{getText(\"area\")}</Text>\n                  </Col>\n                  <Col size={2}>\n                    <Text style={{ color: \"white\" }}>{area.name}</Text>\n                  </Col>\n                </Grid>\n                <Grid>\n                  <Col>\n                    <Text style={{ color: \"white\" }}>{getText(\"owner\")}</Text>\n                  </Col>\n                  <Col size={2}>\n                    {connectedArea?.user && (\n                      <User\n                        size={40}\n                        user={connectedArea.user}\n                        navigation={navigation}\n                      />\n                    )}\n                  </Col>\n                </Grid>\n\n                <Grid>\n                  <Col>\n                    <Text style={{ color: \"white\" }}>{getText(\"damage\")}</Text>\n                  </Col>\n                  <Col size={2}>\n                    <Text style={{ color: \"white\" }}>\n                      {connectedArea?.damage}% {getText(\"damage\")}\n                    </Text>\n                  </Col>\n                </Grid>\n\n                <Text style={{ color: \"white\" }}></Text>\n              </View>\n            );\n          })}\n        </Swiper>\n      </View>\n    );\n\n    const renderPropertiesSwiper = (\n      <View style={{ height: 100 }}>\n        <Swiper\n          controlsEnabled={false}\n          key={`Swiper2`}\n          ref={propertiesSwiperRefContainer}\n          style={{ flex: 1 }}\n          initialPage={0}\n          onIndexChanged={(position) => {\n            if (position === 0) {\n              //should animate to whole city\n              animateToCity();\n              setSelected(null);\n            } else {\n              const object = objects[position - 1];\n              const latitude = city[`${object.type}Latitude`];\n              const longitude = city[`${object.type}Longitude`];\n\n              // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n              // if (latitude && longitude) {\n              //   map.animateToRegion({\n              //     latitude,\n              //     longitude,\n              //     latitudeDelta: (city?.delta / 100) * object.size,\n              //     longitudeDelta: (city?.delta / 100) * object.size,\n              //   });\n              // }\n\n              setSelected(object.type);\n            }\n            //improve this once i have centers.\n          }}\n        >\n          <View style={{ flex: 1 }}>\n            <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"bold\" }}>\n              {me?.city}\n            </Text>\n          </View>\n          {objects.map((object, index) => {\n            const owner = city?.[`${object.type}Owner`];\n            const damage = city?.[`${object.type}Damage`];\n            const profit = city?.[`${object.type}Profit`];\n\n            const ownerProfile = owner ? (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"Profile\", { name: owner })}\n              >\n                <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\n                  {owner}\n                </Text>\n              </TouchableOpacity>\n            ) : (\n              <Text style={{ fontWeight: \"bold\", color: \"white\" }}>\n                ({getText(\"none\")})\n              </Text>\n            );\n\n            return (\n              <View key={`page${index}`} style={{ flex: 1 }}>\n                {owner !== undefined && (\n                  <Grid>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>\n                        {getText(object.type)} {getText(\"owner\")}\n                      </Text>\n                    </Col>\n                    <Col>{ownerProfile}</Col>\n                  </Grid>\n                )}\n\n                {profit !== undefined && (\n                  <Grid>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>\n                        {getText(object.type)} {getText(\"profit\")}\n                      </Text>\n                    </Col>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>\n                        €{numberFormat(profit)},-\n                      </Text>\n                    </Col>\n                  </Grid>\n                )}\n                {damage !== undefined && (\n                  <Grid>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>\n                        {getText(object.type)} {getText(\"damage\")}\n                      </Text>\n                    </Col>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>{damage}%</Text>\n                    </Col>\n                  </Grid>\n                )}\n              </View>\n            );\n          })}\n        </Swiper>\n      </View>\n    );\n\n    const currentObject = objects.find((x) => x.type === selected);\n    const title =\n      selected === \"area\"\n        ? selectedArea?.name\n        : currentObject\n        ? getText(currentObject?.title)\n        : \"\";\n\n    return (\n      <>\n        <View\n          style={{\n            position: \"absolute\",\n            backgroundColor: \"rgba(0,0,0,0.5)\",\n            top: 0,\n            left: 0,\n            right: 0,\n            padding: 5,\n          }}\n        >\n          <SafeAreaView\n            style={{\n              marginTop:\n                Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n            }}\n          >\n            {view === \"territories\" ? (\n              renderTerritoriesSwiper\n            ) : view === \"crimes\" ? (\n              <Stats device={device} me={me} />\n            ) : (\n              renderPropertiesSwiper\n            )}\n          </SafeAreaView>\n        </View>\n\n        <View style={{ position: \"absolute\", left: 50, bottom: 90 }}>\n          <Text style={{ fontSize: 30, fontWeight: \"bold\" }}>{title}</Text>\n        </View>\n\n        {loading && (\n          <View\n            style={{\n              position: \"absolute\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              top: 0,\n              bottom: 0,\n              left: 0,\n              right: 0,\n            }}\n          >\n            <ActivityIndicator color=\"black\" size=\"large\" />\n          </View>\n        )}\n        {me?.reizenAt > Date.now() && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: 130,\n              right: 5,\n              backgroundColor: \"rgba(0,0,0,0.5)\",\n              borderRadius: 20,\n              flexDirection: \"row\",\n              padding: 10,\n            }}\n          >\n            <Icon.Ionicons name=\"ios-airplane\" color=\"white\" size={24} />\n\n            <CountDown\n              until={Math.round((me?.reizenAt - Date.now()) / 1000)}\n              onFinish={() => {\n                // reloadMe(device.loginToken);\n              }}\n              size={10}\n              timeToShow={[\"M\", \"S\"]}\n              timeLabels={{ m: null, s: null }}\n            />\n          </View>\n        )}\n\n        {me?.jailAt > Date.now() && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: 180,\n              right: 5,\n              backgroundColor: \"rgba(0,0,0,0.5)\",\n              borderRadius: 20,\n              flexDirection: \"row\",\n              padding: 10,\n            }}\n          >\n            <Icon.FontAwesome name=\"bars\" color=\"white\" size={24} />\n\n            <CountDown\n              until={Math.round((me?.jailAt - Date.now()) / 1000)}\n              onFinish={() => {\n                // reloadMe(device.loginToken);\n              }}\n              size={10}\n              timeToShow={[\"M\", \"S\"]}\n              timeLabels={{ m: null, s: null }}\n            />\n          </View>\n        )}\n\n        {actions.length > 0 && (\n          <ScrollView\n            horizontal\n            style={{\n              position: \"absolute\",\n              left: 0,\n              right: 0,\n              bottom: 8,\n              height: 70,\n              flexDirection: \"row\",\n            }}\n          >\n            {actions.map((action, index) => (\n              <View key={`action${index}`}>\n                <TouchableOpacity\n                  onPress={() => {\n                    requestAnimationFrame(() => {\n                      console.log(\"onPress action\");\n                      action.onPress();\n                    });\n                  }}\n                  style={{\n                    width: 70,\n                    marginHorizontal: 10,\n                    height: 70,\n                    borderRadius: 10,\n                    backgroundColor: device.theme.secondary,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <action.icon\n                    name={action.iconName}\n                    size={40}\n                    color={device.theme.secondaryText}\n                  />\n                  <Text\n                    style={{\n                      color: device.theme.secondaryText,\n                      fontWeight: \"bold\",\n                      fontSize: 10,\n                    }}\n                    numberOfLines={1}\n                  >\n                    {action.text}\n                  </Text>\n                </TouchableOpacity>\n                {action.badgeAmount > 0 ? (\n                  <View\n                    style={{\n                      position: \"absolute\",\n                      right: 0,\n                      top: 0,\n                      backgroundColor: \"red\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderRadius: 10,\n                      minWidth: 20,\n                      height: 20,\n                    }}\n                  >\n                    <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\n                      {action.badgeAmount}\n                    </Text>\n                  </View>\n                ) : null}\n              </View>\n            ))}\n          </ScrollView>\n        )}\n\n        <View style={{ position: \"absolute\", right: 3, bottom: 80 }}>\n          {[\n            {\n              view: \"game\",\n              icon: Icon.MaterialCommunityIcons,\n              iconName: \"factory\",\n              isActive: view === \"game\",\n              onPress: () => {\n                setSelected(null);\n\n                setView(\"game\");\n              },\n            },\n            {\n              view: \"crimes\",\n              icon: Icon.MaterialCommunityIcons,\n              iconName: \"pistol\",\n              isActive: view === \"crimes\",\n              onPress: () => {\n                setSelected(null);\n\n                setView(\"crimes\");\n              },\n            },\n            {\n              view: \"territories\",\n              icon: Icon.Ionicons,\n              iconName: \"md-grid\",\n              isActive: view === \"territories\",\n              onPress: () => {\n                setSelected(null);\n\n                setView(\"territories\");\n                animateToCity();\n              },\n            },\n            // {\n            //   view: \"all\",\n            //   icon: Icon.AntDesign,\n            //   iconName: \"star\",\n            //   isActive: view === \"all\",\n            //   onPress: () => {\n            //     setSelected(null);\n\n            //     setView(\"all\");\n            //   },\n            // },\n\n            me?.level >= 5 && {\n              icon: Icon.Feather,\n              iconName: \"move\",\n              isActive: dragAndDropMode,\n              onPress: () => {\n                setSelected(null);\n                setView(\"game\");\n                setDragAndDropMode(!dragAndDropMode);\n              },\n            },\n          ]\n            .filter((x) => !!x)\n            .map((v, index) => (\n              <MapIcon key={`icon${index}`} view={v} />\n            ))}\n        </View>\n\n        <View style={{ position: \"absolute\", left: 3, bottom: 80 }}>\n          {[\n            {\n              icon: Icon.Entypo,\n              iconName: \"plus\",\n              isActive: false,\n              onPress: openActionSheet,\n            },\n          ].map((v, index) => {\n            return <MapIcon key={`index${index}`} view={v} />;\n          })}\n        </View>\n      </>\n    );\n  }\n);\n\nexport default Overlay;\n","import {\n  Circle,\n  GoogleMap,\n  GroundOverlay,\n  LoadScript,\n  OverlayView,\n  Polygon,\n} from \"@react-google-maps/api\";\nimport moment from \"moment\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  Animated,\n  Dimensions,\n  LayoutAnimation,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport T from \"../../components/T\";\nimport { doOnce, get, post } from \"../../Util\";\nimport Overlay, { getZoom } from \"./Overlay\";\nconst citiesAreas = require(\"../../../assets/map/cities.json\");\n\nif (Platform.OS === \"android\") {\n  if (UIManager.setLayoutAnimationEnabledExperimental) {\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n}\n\nconst mapStyle = require(\"./mapStyle.json\");\nconst API_KEY = \"AIzaSyCOENphOkWqcrvmehHhhgKu7lJpwqfLQzc\";\n\nconst OBJECT_SIZE_FACTOR = 4;\nconst SIZE_FACTOR = 100;\n\nconst objects = [\n  {\n    title: \"menuBulletfactory\",\n    type: \"bulletFactory\",\n    to: \"AllBulletfactory\",\n    image: require(\"../../../assets/map/bulletfactory.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n  {\n    title: \"menuAirport\",\n    type: \"airport\",\n    to: \"AllAirport\",\n    image: require(\"../../../assets/map/airport.png\"),\n    size: 15,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuBank\",\n    type: \"bank\",\n    to: \"AllBanks\",\n    image: require(\"../../../assets/map/bank.png\"),\n    size: 8,\n    aspectRatio: 200 / 235,\n  },\n\n  {\n    title: \"menuCasino\",\n    type: \"casino\",\n    to: \"Casino\",\n    image: require(\"../../../assets/map/casino.png\"),\n    size: 20,\n    aspectRatio: 400 / 251,\n  },\n\n  {\n    title: \"menuCoffeeShop\",\n    type: \"landlord\",\n    to: \"Wiet\",\n    image: require(\"../../../assets/map/coffeeshop.png\"),\n    size: 10,\n    aspectRatio: 300 / 270,\n  },\n\n  {\n    title: \"menuSalvationArmy\",\n    type: \"junkies\",\n    to: \"Junkies\",\n    image: require(\"../../../assets/map/junkies.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuGarage\",\n    type: \"garage\",\n    to: \"AllGarage\",\n    image: require(\"../../../assets/map/garage.png\"),\n    size: 10,\n    aspectRatio: 400 / 292,\n  },\n\n  {\n    title: \"menuGym\",\n    type: \"gym\",\n    to: \"Gym\",\n    image: require(\"../../../assets/map/gym.png\"),\n    size: 10,\n    aspectRatio: 300 / 231,\n  },\n\n  {\n    title: \"menuHospital\",\n    type: \"hospital\",\n    to: \"Hospital\",\n    image: require(\"../../../assets/map/hospital.png\"),\n    size: 10,\n    aspectRatio: 300 / 270,\n  },\n\n  {\n    title: \"menuHouse\",\n    type: \"house\",\n    to: \"House\",\n    image: require(\"../../../assets/map/house2.png\"),\n    size: 10,\n    aspectRatio: 783 / 500,\n  },\n\n  {\n    title: \"menuHeadquarter\",\n    type: \"headquarter\",\n    to: \"AllGang\",\n    image: require(\"../../../assets/map/headquarter.png\"),\n    size: 10,\n    aspectRatio: 202 / 182,\n  },\n\n  {\n    title: \"menuJail2\",\n    type: \"jail\",\n    to: \"Jail\",\n    image: require(\"../../../assets/map/jail.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuMarket\",\n    type: \"market\",\n    to: \"Market\",\n    image: require(\"../../../assets/map/market.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n  {\n    title: \"menuWeaponShop\",\n    type: \"weaponShop\",\n    to: \"Shop\",\n    image: require(\"../../../assets/map/shop.png\"),\n    size: 10,\n    aspectRatio: 300 / 262,\n  },\n\n  {\n    title: \"menuEstateAgent\",\n    type: \"estateAgent\",\n    to: \"EstateAgent\",\n    image: require(\"../../../assets/map/shop.png\"),\n    size: 10,\n    aspectRatio: 300 / 262,\n  },\n\n  {\n    title: \"menuRLD\",\n    type: \"rld\",\n    to: \"Hoeren\",\n    image: require(\"../../../assets/map/sexshop.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuStockExchange\",\n    type: \"stockExchange\",\n    to: \"StockExchange\",\n    image: require(\"../../../assets/map/market.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n];\n\nconst rgbs = [\n  \"0,255,0\",\n  \"255,0,0\",\n  \"0,255,255\",\n  \"0,0,255\",\n  \"255,0,255\",\n  \"255,255,0\",\n  \"0,150,0\",\n  \"0,0,150\",\n];\n\nconst decimalHash = (string) => {\n  let sum = 0;\n  for (let i = 0; i < string.length; i++)\n    sum += ((i + 1) * string.codePointAt(i)) / (1 << 8);\n  return sum % 1;\n};\n\n// kies positiegetal deterministisch aan de hand van een string van moment().format(\"DD-MM-YY HH\") en index en type\nconst getPosition = (id, type) => {\n  const string = moment().format(\"DD-MM-YY HH\") + id?.toString() + type;\n  return decimalHash(string);\n};\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst ReactMap = React.memo(({ zoom, setMap, children, setMapReady }) => {\n  console.log(\"zoom...\", zoom);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n    setMapReady(true);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey={API_KEY}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        zoom={zoom}\n        initialZoom={zoom}\n        //center={{ lat: city?.latitude, lng: city?.longitude }}\n        onLoad={onLoad}\n        options={{ disableDefaultUI: true }}\n        onUnmount={onUnmount}\n      >\n        {children}\n      </GoogleMap>\n    </LoadScript>\n  );\n});\n\nconst Territories = React.memo(\n  ({ territories, MapsComponent, onPress, opacity }) => {\n    return territories.map(({ area, userId, gangId }, index) => {\n      const number = gangId ? gangId : userId ? userId : 0;\n      const rgb = !number ? \"255,255,255\" : rgbs[number % (rgbs.length - 1)];\n      const key = `polygon${index}`;\n      const onClick = () => onPress(index);\n      const fillColor = `rgba(${rgb},${opacity})`;\n      return Platform.OS === \"web\" ? (\n        <Polygon\n          key={key}\n          onClick={onClick}\n          path={area.map((x) => ({ lat: x.latitude, lng: x.longitude }))}\n          options={{ fillColor }}\n        />\n      ) : (\n        <MapsComponent.Polygon\n          key={key}\n          onPress={onClick}\n          tappable\n          coordinates={area}\n          fillColor={fillColor}\n        />\n      );\n    });\n  }\n);\n\nconst GameObjects = React.memo(\n  ({\n    city,\n    object,\n    index,\n    dragAndDropMode,\n    MapsComponent,\n    isSelected,\n    setSelected,\n    reloadCities,\n    cityAreas,\n    level,\n    myName,\n    device,\n    propertiesSwiperRefContainer,\n  }) => {\n    // console.log(\"RENDER GAME OBJECT\", index);\n    let latitude = city?.[`${object.type}Latitude`];\n    let longitude = city?.[`${object.type}Longitude`];\n\n    if (!latitude || !longitude) {\n      const terri = cityAreas.areas[index % (cityAreas.areas.length - 1)];\n      latitude = terri.centerLatitude;\n      longitude = terri.centerLongitude;\n    }\n\n    const deltaLatitude =\n      (city?.delta * object.size) / object.aspectRatio / SIZE_FACTOR; //width\n    const deltaLongitude = (city?.delta * object.size) / SIZE_FACTOR;\n\n    const biggestDeltaLatitude =\n      deltaLatitude > deltaLongitude ? deltaLatitude : deltaLongitude;\n    const topLeftLatitude = latitude - deltaLatitude / 2;\n    const topLeftLongitude = longitude - deltaLongitude / 2;\n    const bottomRightLatitude = latitude + deltaLatitude / 2;\n    const bottomRightLongitude = longitude + deltaLongitude / 2;\n\n    const topRightLatitude = latitude + deltaLatitude / 2;\n    const topRightLongitude = longitude - deltaLongitude / 2;\n    const bottomLeftLatitude = latitude - deltaLatitude / 2;\n    const bottomLeftLongitude = longitude + deltaLongitude / 2;\n\n    const square = [\n      { latitude: topLeftLatitude, longitude: topLeftLongitude },\n      { latitude: topRightLatitude, longitude: topRightLongitude },\n      {\n        latitude: bottomRightLatitude,\n        longitude: bottomRightLongitude,\n      },\n      { latitude: bottomLeftLatitude, longitude: bottomLeftLongitude },\n    ];\n\n    const draggable = level >= 5;\n    const onDragEnd = async ({ nativeEvent: { coordinate } }) => {\n      const { response, success } = await post(\"moveBuilding\", {\n        loginToken: device.loginToken,\n        type: object.type,\n        latitude: coordinate.latitude,\n        longitude: coordinate.longitude,\n      });\n      reloadCities();\n      if (!success) {\n        Alert.alert(response);\n      }\n    };\n\n    const image = dragAndDropMode ? (\n      <Animated.Image\n        source={object.image}\n        style={{\n          width: object.animated,\n          height: object.animated,\n        }}\n        resizeMode=\"contain\"\n      />\n    ) : null;\n\n    const onPressObject = () => {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n\n      isSelected ? setSelected(null) : setSelected(object.type);\n\n      propertiesSwiperRefContainer?.current?.goTo(index + 1);\n    };\n\n    const bounds = {\n      east: bottomRightLongitude,\n      south: bottomLeftLatitude,\n      north: bottomRightLatitude,\n      west: topRightLongitude,\n    };\n\n    const platformBounds =\n      Platform.OS === \"ios\"\n        ? [\n            [topLeftLatitude, topLeftLongitude],\n            [bottomRightLatitude, bottomRightLongitude],\n          ]\n        : [\n            [bottomRightLatitude, topLeftLongitude],\n            [topLeftLatitude, bottomRightLongitude],\n          ];\n\n    // console.log(\"BOUNDS\", bounds);\n    return Platform.OS === \"web\" ? (\n      <>\n        {isSelected ? (\n          <Circle\n            key={`circle${index}${isSelected}`}\n            center={{ lat: latitude, lng: longitude }}\n            radius={biggestDeltaLatitude * 50000}\n            options={{ fillColor: \"rgba(0,0,0,0.5)\" }}\n          />\n        ) : city?.[`${object.type}Owner`] === myName ? (\n          <Circle\n            key={`circle${index}${isSelected}`}\n            center={{ lat: latitude, lng: longitude }}\n            radius={biggestDeltaLatitude * 50000}\n            options={{ fillColor: \"rgba(0,255,0,0.5)\" }}\n          />\n        ) : null}\n\n        <GroundOverlay\n          onClick={onPressObject}\n          key={`overlay${index}${isSelected}`} //add selected to the key to ensure rerender after selected changes\n          url={object.image}\n          //dont use onpress on the overlay because it only works on android. use an invisible polygon instead at the same location\n          // tappable\n          // onPress={() => navigation.navigate(object.to)}\n          bounds={bounds}\n        />\n      </>\n    ) : dragAndDropMode ? (\n      <MapsComponent.Marker\n        draggable={draggable}\n        onDragEnd={onDragEnd}\n        key={`object${index}`}\n        coordinate={{ latitude, longitude }}\n      >\n        {image}\n      </MapsComponent.Marker>\n    ) : (\n      <>\n        {isSelected ? (\n          <MapsComponent.Circle\n            key={`circle${index}${isSelected}`}\n            center={{ latitude, longitude }}\n            radius={biggestDeltaLatitude * 50000}\n            fillColor={\"rgba(0,0,0,0.5)\"}\n          />\n        ) : city?.[`${object.type}Owner`] === myName ? (\n          <MapsComponent.Circle\n            key={`circle${index}${isSelected}`}\n            center={{ latitude, longitude }}\n            radius={biggestDeltaLatitude * 50000}\n            fillColor={\"rgba(0,255,0,0.5)\"}\n          />\n        ) : null}\n\n        <MapsComponent.Overlay\n          zIndex={1} //works for android to render it over the areas\n          key={`overlay${index}${isSelected}`} //add selected to the key to ensure rerender after selected changes\n          image={object.image}\n          //dont use onpress on the overlay because it only works on android. use an invisible polygon instead at the same location\n          // tappable\n          // onPress={() => navigation.navigate(object.to)}\n          bounds={platformBounds}\n        />\n\n        <MapsComponent.Polygon\n          key={`overlayPolygon${index}`}\n          onPress={onPressObject}\n          tappable\n          coordinates={square}\n          zIndex={2}\n          strokeWidth={0.00001}\n          // fillColor={`rgba(${rgb},${opacity})`}\n        />\n      </>\n    );\n  }\n);\n\n// GameObjects.whyDidYouRender = true;\n\nconst Map = ({\n  navigation,\n  screenProps: {\n    device,\n    cities,\n    reloadCities,\n    me,\n    ocs,\n    reloadMe,\n    streetraces,\n    robberies,\n    reloadStreetraces,\n    reloadOcs,\n    reloadRobberies,\n  },\n}) => {\n  const [dragAndDropMode, setDragAndDropMode] = useState(false);\n\n  const [selected, setSelected] = useState(null);\n  const [selectedAreaIndex, setSelectedAreaIndex] = useState(null); //index\n\n  const [map, setMap] = useState(null);\n  const [view, setView] = useState(\"game\");\n  const [areas, setAreas] = useState([]);\n  const [region, setRegion] = useState({\n    latitude: 52.378, //amsterdam\n    longitude: 4.89707,\n    latitudeDelta: 0.05,\n    longitudeDelta: 0.05,\n  });\n  const city = React.useMemo(() => cities?.find((x) => x.city === me?.city), [\n    cities,\n    me?.city,\n  ]);\n  const [mapReady, setMapReady] = useState(false);\n\n  const [zoom, setZoom] = useState(getZoom(city?.delta));\n  const territoriesSwiperRefContainer = useRef(null);\n  const propertiesSwiperRefContainer = useRef(null);\n\n  doOnce(reloadCities);\n\n  doOnce(() => reloadOcs(device.loginToken));\n  doOnce(reloadStreetraces);\n  doOnce(reloadRobberies);\n\n  const getAreas = useCallback(() => {\n    get(`areas?city=${me?.city}`).then(({ areas }) => setAreas(areas));\n  }, []);\n  useEffect(() => {\n    console.log(\"getAreas\");\n    getAreas();\n  }, [me?.city]);\n\n  useEffect(() => {\n    if (mapReady && city) {\n      console.log(\"set zoom\", city?.zoom);\n      setTimeout(() => {\n        setZoom(city?.zoom);\n      }, 1000);\n    }\n  }, [city, mapReady]);\n\n  const window = Dimensions.get(\"window\");\n\n  const cityAreas = citiesAreas.find((x) => x.city === me?.city);\n\n  const objectsWithAnimated = objects.map((object) => ({\n    ...object,\n    animated: useRef(\n      new Animated.Value(\n        (city?.delta * OBJECT_SIZE_FACTOR * object.size) / region.latitudeDelta\n      )\n    ).current,\n  }));\n\n  useEffect(() => {\n    if (map && city && mapReady) {\n      const reg = {\n        latitude: city?.latitude, //amsterdam\n        longitude: city?.longitude,\n        latitudeDelta: city?.delta,\n        longitudeDelta: city?.delta,\n      };\n      setRegion(reg);\n\n      if (Platform.OS === \"web\") {\n        console.log(\"panToCity\");\n        map.panTo({ lat: city?.latitude, lng: city?.longitude });\n      } else {\n        map.animateToRegion(reg);\n      }\n      //map.fitToElements(true);\n    }\n  }, [city, map, mapReady]);\n\n  if (!me || !city) {\n    return <T>No city, no me</T>;\n  }\n  //useEffect(() => {\n  //map?.fitToElements(true);\n  //}, [view]);\n\n  const territories = React.useMemo(\n    () =>\n      cityAreas.areas.map((area) => {\n        const connectedArea = areas?.find((x) => x.code === area.code);\n\n        return {\n          ...area,\n          userId: connectedArea?.userId,\n          gangId: connectedArea?.gangId || connectedArea?.user?.gangId,\n        };\n      }),\n    [areas]\n  );\n\n  const NativeMapsComponent = Platform.select({\n    native: () => require(\"react-native-maps\").default,\n    web: () => null,\n  })();\n\n  const crimeIcons = [\n    {\n      inactive: me?.autostelenAt + 60000 - Date.now() > 0,\n      to: \"StealCar\",\n      icon: \"🚘\",\n      type: \"stealcar\",\n    },\n\n    {\n      inactive: me?.crimeAt + 60000 - Date.now() > 0,\n      to: \"Crimes\",\n      icon: \"💰\",\n      type: \"crimes\",\n    },\n\n    {\n      inactive: me?.junkiesAt + 120000 - Date.now() > 0,\n      to: \"Junkies\",\n      icon: \"🧔\",\n      type: \"junkies\",\n    },\n\n    {\n      inactive: me?.hoerenAt + 120000 - Date.now() > 0,\n      to: \"Hoeren\",\n      icon: \"💃\",\n      type: \"hoeren\",\n    },\n    {\n      inactive: me?.workEndsAt - Date.now() > 0,\n      to: \"Work\",\n      icon: \"🛠\",\n      type: \"work\",\n    },\n\n    {\n      inactive: me?.wietAt + 120000 - Date.now() > 0,\n      to: \"Wiet\",\n      icon: \"🌳\",\n      type: \"wiet\",\n    },\n  ].filter((x) => !x.inactive);\n\n  const ocIcons = ocs\n    ?.filter((x) => x.city === me?.city)\n    .map((oc) => ({\n      icon: \"🔥\",\n      type: \"oc\",\n      to: \"OC\",\n      id: oc.id,\n      params: { id: oc.id },\n    }));\n  const streetraceIcons = streetraces\n    ?.filter((x) => x.city === me?.city)\n    .map((x) => ({\n      icon: \"🛣\",\n      type: \"streetrace\",\n      id: x.id,\n      to: \"Streetrace\",\n      params: { id: x.id },\n    }));\n\n  const robberyIcons = robberies\n    ?.filter((x) => x.city === me?.city)\n    .map((x) => ({\n      icon: \"🚨\",\n      type: \"robbery\",\n      to: \"Robbery\",\n      id: x.id,\n      params: { id: x.id },\n    }));\n\n  const icons = crimeIcons\n    .concat(ocIcons)\n    .concat(streetraceIcons)\n    .concat(robberyIcons)\n    .filter((x) => !!x);\n\n  const iconToMapIcon = (icon) => {\n    const position = getPosition(icon.id, icon.type); //0-1\n\n    const areaIndex = Math.floor(cityAreas.areas.length * position);\n\n    const area = cityAreas.areas[areaIndex];\n\n    const pseudoRandom = (x, y) => x + position * (y - x);\n\n    const latitude = pseudoRandom(\n      area.centerLatitude - area.latitudeDelta / 2,\n      area.centerLatitude + area.latitudeDelta / 2\n    );\n    const longitude = pseudoRandom(\n      area.centerLongitude - area.longitudeDelta / 2,\n      area.centerLongitude + area.longitudeDelta / 2\n    );\n\n    const onPress = () => navigation.navigate(icon.to);\n\n    const theIcon = icon.icon;\n\n    const deltaLatitude = (city?.delta * 3) / 100; //width\n    const deltaLongitude = (city?.delta * 3) / 100;\n\n    const topLeftLatitude = latitude - deltaLatitude / 2;\n    const topLeftLongitude = longitude - deltaLongitude / 2;\n    const bottomRightLatitude = latitude + deltaLatitude / 2;\n    const bottomRightLongitude = longitude + deltaLongitude / 2;\n\n    const topRightLatitude = latitude + deltaLatitude / 2;\n    const topRightLongitude = longitude - deltaLongitude / 2;\n    const bottomLeftLatitude = latitude - deltaLatitude / 2;\n    const bottomLeftLongitude = longitude + deltaLongitude / 2;\n\n    const square = [\n      { lat: topLeftLatitude, lng: topLeftLongitude },\n      { lat: topRightLatitude, lng: topRightLongitude },\n      {\n        lat: bottomRightLatitude,\n        lng: bottomRightLongitude,\n      },\n      { lat: bottomLeftLatitude, lng: bottomLeftLongitude },\n    ];\n\n    return {\n      onPress,\n      icon: theIcon,\n      latitude,\n      longitude,\n      square,\n    };\n  };\n\n  const rightObjects = React.useMemo(\n    () => (dragAndDropMode ? objectsWithAnimated : objects),\n    [dragAndDropMode, region.latitudeDelta]\n  );\n  const renderGame = React.useMemo(\n    () =>\n      rightObjects.map((object, index) => {\n        const isSelected = selected === object.type;\n\n        return (\n          <GameObjects\n            key={`game${object.type}`}\n            propertiesSwiperRefContainer={propertiesSwiperRefContainer}\n            MapsComponent={NativeMapsComponent}\n            city={city}\n            dragAndDropMode={dragAndDropMode}\n            object={object}\n            index={index}\n            isSelected={isSelected}\n            cityAreas={cityAreas}\n            setSelected={setSelected}\n            reloadCities={reloadCities}\n            level={me?.level}\n            device={device}\n            myName={me?.name}\n          />\n        );\n      }),\n    [\n      rightObjects,\n      selected,\n      city,\n      dragAndDropMode,\n      cityAreas.city,\n      me?.name,\n      me?.level,\n      device,\n    ]\n  );\n\n  const renderTerritories = React.useMemo(() => {\n    return (\n      <Territories\n        opacity={view === \"territories\" ? 0.4 : 0.2}\n        onPress={\n          view === \"territories\"\n            ? (index) => {\n                setSelected(\"area\");\n                setSelectedAreaIndex(index);\n                territoriesSwiperRefContainer?.current?.goTo(index + 1);\n              }\n            : () => null\n        }\n        territories={territories}\n        MapsComponent={NativeMapsComponent}\n      />\n    );\n  }, [view, territories]);\n\n  const renderCrimes = icons\n    .map(iconToMapIcon)\n    .map(({ onPress, icon, latitude, longitude, square }, index) => {\n      //random positions on the first territorium\n      const view = (\n        <TouchableOpacity onPress={onPress} style={{ alignItems: \"center\" }}>\n          <Text style={{ fontSize: 24 }}>{icon}</Text>\n        </TouchableOpacity>\n      );\n      return Platform.OS === \"web\" ? (\n        <OverlayView\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n          // onClick={onPress}\n          key={`icon${index}`}\n          position={{ lat: latitude, lng: longitude }}\n        >\n          {view}\n        </OverlayView>\n      ) : (\n        <NativeMapsComponent.Marker\n          key={`icon${index}`}\n          onPress={onPress}\n          coordinate={{ latitude, longitude }}\n        >\n          {view}\n        </NativeMapsComponent.Marker>\n      );\n    });\n\n  const renderAllMapObjects = React.useMemo(() => {\n    const shouldRenderTerritories =\n      Platform.OS === \"web\"\n        ? view === \"territories\"\n        : view === \"territories\" || view === \"game\" || view === \"crimes\";\n    return (\n      <>\n        {shouldRenderTerritories && renderTerritories}\n        {/* NB: areas.length moet geladen zijn voor renderGame, anders rendert hij de teritoriums over de game heen */}\n        {(view === \"all\" || view === \"game\") && areas.length > 0 && renderGame}\n\n        {(view === \"all\" || view === \"crimes\") && renderCrimes}\n      </>\n    );\n  }, [view, renderTerritories, renderGame, renderCrimes, areas.length]);\n\n  const renderMapsComponentNative = () => {\n    return (\n      <NativeMapsComponent\n        onMapReady={() => {\n          console.log(\"map ready\");\n          setMapReady(true);\n        }}\n        // provider={PROVIDER_GOOGLE}\n        customMapStyle={Platform.OS === \"android\" ? mapStyle : undefined}\n        ref={(map) => setMap(map)}\n        initialRegion={region}\n        onRegionChange={(r) => {\n          setRegion(r);\n\n          if (dragAndDropMode) {\n            objectsWithAnimated.forEach((object) => {\n              Animated.timing(object.animated, {\n                toValue:\n                  (city?.delta * OBJECT_SIZE_FACTOR * object.size) /\n                  r.latitudeDelta,\n                duration: 100,\n                useNativeDriver: false,\n              }).start();\n            });\n          }\n        }}\n        style={StyleSheet.absoluteFill}\n      >\n        {renderAllMapObjects}\n      </NativeMapsComponent>\n    );\n  };\n\n  const renderOverlay = (\n    <Overlay\n      setZoom={setZoom}\n      getAreas={getAreas}\n      map={map}\n      view={view}\n      setView={setView}\n      selected={selected}\n      setSelected={setSelected}\n      setSelectedAreaIndex={setSelectedAreaIndex}\n      selectedAreaIndex={selectedAreaIndex}\n      device={device}\n      me={me}\n      dragAndDropMode={dragAndDropMode}\n      setDragAndDropMode={setDragAndDropMode}\n      territoriesSwiperRefContainer={territoriesSwiperRefContainer}\n      propertiesSwiperRefContainer={propertiesSwiperRefContainer}\n      cityAreas={cityAreas}\n      areas={areas}\n      navigation={navigation}\n      city={city}\n      objects={objects}\n      reloadMe={reloadMe}\n      reloadCities={reloadCities}\n    />\n  );\n\n  return Platform.OS === \"web\" ? (\n    <View style={{ flex: 1 }}>\n      <ReactMap setMap={setMap} zoom={zoom} setMapReady={setMapReady}>\n        {renderAllMapObjects}\n      </ReactMap>\n      {renderOverlay}\n    </View>\n  ) : (\n    <View style={{ flex: 1 }}>\n      {renderMapsComponentNative()}\n\n      {renderOverlay}\n    </View>\n  );\n};\n\nexport default Map;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport styles from \"../Style\";\nimport {\n  darkerHex,\n  doOnce,\n  get,\n  getTextFunction,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\n\nconst SIZE = 250;\nconst MARGIN = 20;\n\nconst Market = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [market, setMarket] = useState([]);\n\n  //new offer\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [buy, setBuy] = useState(false);\n  const [type, setType] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getMarket = async () => {\n    setLoading(true);\n\n    const { market } = await get(`market`);\n    setLoading(false);\n    setMarket(market);\n  };\n\n  const postMarketCreateOffer = async () => {\n    setLoading(true);\n    const { response } = await post(\"marketCreateOffer\", {\n      token: device.loginToken,\n      type,\n      price,\n      amount,\n      buy,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  const postMarketTransaction = async (offerId) => {\n    setLoading(true);\n    const { response } = await post(\"marketTransaction\", {\n      token: device.loginToken,\n      offerId,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  const postMarketRemoveOffer = async (offerId) => {\n    setLoading(true);\n    const { response } = await post(\"marketRemoveOffer\", {\n      token: device.loginToken,\n      offerId,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  doOnce(getMarket);\n\n  const chooseType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const validTypes = [\"junkies\", \"hoeren\", \"wiet\", \"gamepoints\", \"bullets\"];\n\n    const options = validTypes.map((type) => getText(type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < validTypes.length) {\n          setType(validTypes[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {response && <T>{response}</T>}\n      </View>\n\n      <View style={{ flex: 1 }}>\n        {/* New offer */}\n\n        <View style={{ marginVertical: 20 }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Button\n              title={buy ? getText(\"buy\") : getText(\"sell\")}\n              onPress={() => setBuy(!buy)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={amount}\n              onChangeText={setAmount}\n              placeholder={getText(\"amount\")}\n            />\n\n            <Button\n              title={type ? getText(type) : getText(\"whatType\")}\n              onPress={chooseType}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <T style={{ marginLeft: 10 }}>{getText(\"for\")}</T>\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={price}\n              onChangeText={setPrice}\n              placeholder={getText(\"price\")}\n            />\n\n            <Button\n              title={getText(\"submit\")}\n              onPress={() => postMarketCreateOffer(true)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n          </View>\n        </View>\n\n        <FlatList\n          refreshControl={\n            <RefreshControl refreshing={loading} onRefresh={getMarket} />\n          }\n          data={market}\n          numColumns={\n            Platform.OS === \"web\"\n              ? undefined\n              : Math.floor(width / (SIZE + MARGIN * 2))\n          }\n          contentContainerStyle={\n            Platform.OS === \"web\"\n              ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n              : undefined\n          }\n          keyExtractor={(item, index) => `offer${index}`}\n          renderItem={({ item, index }) => {\n            return (\n              <View\n                style={{\n                  width: SIZE,\n                  backgroundColor: darkerHex(theme.primary),\n                  borderRadius: 15,\n                  padding: MARGIN,\n                  margin: MARGIN,\n                }}\n              >\n                {item.userId === me?.id && (\n                  <TouchableOpacity\n                    style={{ alignSelf: \"flex-end\" }}\n                    onPress={() => postMarketRemoveOffer(item.id)}\n                  >\n                    <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n                  </TouchableOpacity>\n                )}\n                <View style={{ flex: 1 }}>\n                  <T>\n                    {item.isBuy ? getText(\"requested\") : getText(\"forSale\")}\n                  </T>\n                </View>\n\n                <User navigation={navigation} user={item.user} />\n\n                <T>\n                  {item.amount} {getText(item.type)}\n                </T>\n                <T>€{numberFormat(item.price)},-</T>\n\n                <Button\n                  title={item.isBuy ? getText(\"sell\") : getText(\"buy\")}\n                  onPress={() => postMarketTransaction(item.id)}\n                />\n              </View>\n            );\n          }}\n        />\n\n        <View style={{ height: 80 }} />\n      </View>\n    </View>\n  );\n};\n\nexport default Market;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React, { useState } from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Gang from \"../components/Gang\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [gangs, setGangs] = useState([]);\n  const getGangs = async () => {\n    const { gangs } = await get(\"police\");\n    setGangs(gangs);\n  };\n  doOnce(getGangs);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      {gangs.map((gang) => {\n        return (\n          <View style={{ flex: 1 }}>\n            <Grid style={{ marginTop: 20 }}>\n              <Col>\n                <Gang gang={gang} navigation={navigation} />\n              </Col>\n\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>\n                  {gang.bullets} {getText(\"bullets\")}\n                </T>\n              </Col>\n            </Grid>\n            {gang.users.map((user) => (\n              <Grid style={{ marginTop: 10 }}>\n                <Col>\n                  <User navigation={navigation} user={user} size={40} />\n                </Col>\n              </Grid>\n            ))}\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst Settings = ({\n  navigation,\n  screenProps: {\n    dispatch,\n    me,\n    reloadMe,\n    device,\n    device: { theme },\n  },\n}) => {\n  const { alertAlert } = React.useContext(AlertContext);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView>\n      {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n      {__DEV__ && (\n        <Menu\n          theme={theme}\n          theme={theme}\n          IconFont=\"Ionicons\"\n          icon=\"ios-notifications\"\n          navigation={navigation}\n          title={getText(\"purge\")}\n          onPress={() =>\n            alertAlert(\n              getText(\"areYouSure\"),\n              getText(\"areYouSure\"),\n              [\n                {\n                  text: getText(\"ok\"),\n                  onPress: () => dispatch({ type: \"PURGE\" }),\n                },\n                {\n                  text: getText(\"cancel\"),\n                },\n              ],\n              { key: \"purge\" }\n            )\n          }\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        IconFont=\"Entypo\"\n        icon=\"phone\"\n        navigation={navigation}\n        title={getText(\"verifyPhone\")}\n        to=\"VerifyPhone\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuChangePassword\")}\n        to=\"ChangePassword\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"onepassword\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"signupEmail\")}\n        to=\"SignupEmail\"\n        IconFont=\"Entypo\"\n        icon=\"email\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"changeName\")}\n        to=\"ChangeName\"\n        IconFont=\"FontAwesome\"\n        icon=\"bank\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"layout\")}\n        to=\"Theme\"\n        IconFont=\"Ionicons\"\n        icon=\"ios-color-palette\"\n      />\n\n      {me?.level >= 2 && (\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={`Turn ${me?.newVersion ? \"off\" : \"on\"} new version`}\n          IconFont=\"Entypo\"\n          icon=\"new\"\n          onPress={async () => {\n            const { response } = await post(\"updateProfile\", {\n              loginToken: device.loginToken,\n              newVersion: !me?.newVersion,\n            });\n            reloadMe(device.loginToken);\n            alert(response);\n          }}\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuLogin\")}\n        IconFont=\"Entypo\"\n        icon=\"login\"\n        onPress={() => dispatch({ type: \"SET_LOGGED\", value: false })}\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuBackfire\")}\n        to=\"Backfire\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"pistol\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuAccomplice\")}\n        to=\"Accomplice\"\n        IconFont=\"FontAwesome\"\n        icon=\"universal-access\"\n      />\n    </ScrollView>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Info from \"./Info\";\nimport Police from \"./Police\";\nimport Settings from \"./Settings\";\nconst AllStats = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"settings\",\n      title: getText(\"menuSettings\"),\n      component: Settings,\n    },\n    {\n      key: \"info\",\n      title: getText(\"menuInfo\"),\n      component: Info,\n    },\n    {\n      key: \"police\",\n      title: getText(\"menuPolice\"),\n      component: Police,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1 }}>\n        <Component {...props} />\n      </View>\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllStats;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst MyProfile = ({\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n    reloadMe,\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [photo, setPhoto] = useState(null);\n  const [image, setImage] = useState(me?.image);\n\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [bio, setBio] = useState(me?.bio || \"\");\n\n  doOnce(() => {\n    getPermissionAsync();\n    fetchImages();\n  });\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${me.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleChooseImage = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleUploadPhoto = (pic) => {\n    fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: pic.uri,\n        token: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        fetchImages();\n        alert(getText(\"success\"));\n        setPhoto(null);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      console.log(\"result\", result);\n\n      if (!result.cancelled) {\n        setPhoto(result);\n        handleUploadPhoto(result);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderItem = ({ item, index }) => {\n    const uri = Constants.SERVER_ADDR + \"/\" + item.image;\n    return (\n      <TouchableOpacity onPress={() => setSelectedImage(item.id)}>\n        <View>\n          <Image\n            source={{ uri }}\n            style={{\n              width: 200,\n              height: 200,\n              ...(selectedImage === item.id\n                ? { borderWidth: 2, borderColor: \"black\" }\n                : {}),\n            }}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderFooter = () => {\n    return (\n      <Button\n        title={getText(\"delete\")}\n        onPress={() => {\n          if (selectedImage) {\n            fetch(`${Constants.SERVER_ADDR}/deleteimage`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                id: selectedImage,\n              }),\n            })\n              .then((response) => response.json())\n              .then(({ images }) => {\n                fetchImages();\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } else {\n            alert(getText(\"noPictureSelected\"));\n          }\n        }}\n      />\n    );\n  };\n\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n        margin: 20,\n      }}\n    >\n      <TouchableOpacity onPress={handleChooseImage}>\n        {image ? (\n          <Image\n            source={{\n              uri: image.includes(\"data:image\")\n                ? image\n                : Constants.SERVER_ADDR + image,\n            }}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        )}\n      </TouchableOpacity>\n\n      <TextInput\n        placeholderTextColor={theme.secondaryTextSoft}\n        style={[style(theme).textInput, { width: \"100%\", height: 200 }]}\n        multiline={true}\n        numberOfLines={4}\n        value={bio}\n        onChangeText={(x) => setBio(x)}\n      />\n      <Button\n        title={getText(\"save\")}\n        style={{ marginVertical: 20 }}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              bio: bio,\n              image,\n              loginToken: device.loginToken,\n            }),\n          })\n            .then((response) => response.json())\n            .then((response) => {\n              alert(getText(\"success\"));\n              reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.log(\"upload error\", error);\n              alert(getText(\"somethingWentWrong\"));\n            });\n        }}\n      />\n\n      <Button\n        style={{ marginVertical: 20 }}\n        title={getText(\"choosePicture\")}\n        onPress={handleChoosePhoto}\n      />\n\n      {images.map((image, index) => renderItem({ item: image, index }))}\n\n      {renderFooter()}\n    </ScrollView>\n  );\n};\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Oc = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    ocs,\n    reloadOcs,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(() => reloadOcs(loginToken));\n  doOnce(fetchRacecars);\n\n  const join = async (ocId) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadOcs(loginToken);\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (ocId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    reloadOcs(loginToken);\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (ocId) => {\n    setLoading(true);\n    const { response } = await post(\"startOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadOcs(loginToken);\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={\n            item.type === \"bank\"\n              ? require(\"../../assets/bank.jpg\")\n              : item.type === \"cars\"\n              ? require(\"../../assets/cars.jpeg\")\n              : require(\"../../assets/shootout.jpeg\")\n          }\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.ocParticipants.length}/\n            {item.numParticipants}\n          </T>\n          {item.ocParticipants.length > 0 && (\n            <T>{item.ocParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          <View style={{ flexDirection: \"row\" }}>\n            {!!item.ocParticipants.find((x) => x.name === me?.name) ? (\n              item.ocParticipants.length === item.numParticipants ? (\n                <Button\n                  theme={theme}\n                  title={getText(\"startCTA\")}\n                  onPress={() => start(item.id)}\n                />\n              ) : (\n                <Button\n                  theme={theme}\n                  title={getText(\"leaveCTA\")}\n                  onPress={() => leave(item.id)}\n                />\n              )\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"participate\")}\n                onPress={() => {\n                  join(item.id);\n                }}\n              />\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity onPress={() => navigation.navigate(\"CreateOc\")}>\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadOcs(loginToken);\n              setResponse(null);\n            }}\n          />\n        }\n        data={ocs}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Oc;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","// import color from \"markdown-it-color-text\";\nimport center from \"markdown-it-center-text\";\nimport emoji from \"markdown-it-emoji\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Linking,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Markdown, { MarkdownIt } from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n  post,\n} from \"../Util\";\n\nconst markdownItInstance = MarkdownIt({ typographer: true })\n  // .use(taskLists)\n  .use(emoji)\n  .use(center);\n// .use(color);\n\nconst Bio = React.memo(({ bio, theme }) => {\n  return (\n    <Markdown\n      debugPrintTree\n      markdownit={markdownItInstance}\n      style={{ body: { color: theme.primaryText } }}\n      rules={{\n        blocklink: (node, children, parent, styles) => {\n          return (\n            <TouchableOpacity\n              key={node.key}\n              onPress={() => {\n                if (Platform.OS == \"web\") {\n                  window.open(node.attributes.href, \"_blank\");\n                } else {\n                  Linking.openURL(node.attributes.href); // normal Linking react-native\n                }\n              }}\n            >\n              {children}\n            </TouchableOpacity>\n          );\n        },\n\n        image: (node, children, parent, styles) => {\n          const [width, setWidth] = useState(0);\n          const [height, setHeight] = useState(0);\n          Image.getSize(node.attributes.src, (width, height) => {\n            setWidth(width);\n            setHeight(height);\n          });\n\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <Image\n              key={node.key}\n              source={{ uri: node.attributes.src }}\n              style={{ width: width, height: height }}\n              resizeMode=\"contain\"\n            />\n          );\n        },\n\n        emoji: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return <Text key={node.key}>{node.content}</Text>;\n        },\n\n        centertext: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View\n              key={node.key}\n              style={{\n                flex: 1,\n                alignItems: \"center\",\n              }}\n            >\n              {children}\n            </View>\n          );\n        },\n\n        paragraph: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View key={node.key} style={{ flex: 1 }}>\n              {children}\n            </View>\n          );\n        },\n\n        textgroup: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View key={node.key} style={{ flex: 1 }}>\n              {children}\n            </View>\n          );\n        },\n      }}\n    >\n      {bio}\n    </Markdown>\n  );\n});\nconst ProfileScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    device: { theme, loginToken },\n  },\n}) => {\n  const [profile, setProfile] = useState({});\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const name = params?.name;\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    getProfile(name);\n  });\n  doOnce(reloadCities);\n\n  useEffect(() => {\n    getProfile(name);\n  }, [params?.name]);\n\n  useEffect(() => {\n    fetchImages();\n  }, [profile?.id]);\n\n  const postReport = async () => {\n    const { response } = await post(\"report\", {\n      token: device.loginToken,\n      userId: profile?.id,\n      ban: \"reported\",\n      banReason: \"profile\",\n    });\n\n    setResponse(response);\n  };\n\n  const getProfile = (name) => {\n    setLoading(true);\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        setProfile(responseJson);\n        setLoading(false);\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${profile?.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (loading) {\n    return <ActivityIndicator />;\n  }\n\n  if (!profile) {\n    return <T>{getText(\"personDoesntExist\")}</T>;\n  }\n\n  const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n  const color = getUserColor(profile, device.theme);\n\n  const uri = Constants.SERVER_ADDR + profile?.image;\n  const hasImage = !!profile?.image;\n\n  const properties = [\n    {\n      name: \"bulletFactory\",\n    },\n    {\n      name: \"casino\",\n    },\n    {\n      name: \"rld\",\n    },\n    {\n      name: \"landlord\",\n    },\n    {\n      name: \"junkies\",\n    },\n    {\n      name: \"weaponShop\",\n    },\n    {\n      name: \"airport\",\n    },\n    {\n      name: \"estateAgent\",\n    },\n    {\n      name: \"garage\",\n    },\n    {\n      name: \"jail\",\n    },\n    {\n      name: \"bank\",\n    },\n  ];\n\n  const PROFESSIONS = [\n    { type: \"thief\", image: require(\"../../assets/profession/thief.jpg\") },\n    {\n      type: \"carthief\",\n      image: require(\"../../assets/profession/carthief.jpg\"),\n    },\n    {\n      type: \"weedgrower\",\n      image: require(\"../../assets/profession/weedgrower.jpg\"),\n    },\n    { type: \"killer\", image: require(\"../../assets/profession/killer.jpg\") },\n    { type: \"pimp\", image: require(\"../../assets/profession/pimp.jpg\") },\n    { type: \"banker\", image: require(\"../../assets/profession/banker.jpg\") },\n    {\n      type: \"jailbreaker\",\n      image: require(\"../../assets/profession/jailbreaker.jpg\"),\n    },\n  ];\n  const profession = profile?.profession\n    ? PROFESSIONS.find((p) => p.type === profile.profession)\n    : null;\n\n  const professionReleaseDate = moment(\"15/03/2021\", \"DD/MM/YYYY\").set(\n    \"hour\",\n    17\n  );\n  const { alertAlert } = React.useContext(AlertContext);\n\n  return (\n    <ScrollView>\n      <View style={{ justifyContent: \"center\" }}>\n        <View\n          style={{\n            backgroundColor: \"#444\",\n            borderRadius: 10,\n            margin: 20,\n            padding: 20,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n          {response && <T>{response}</T>}\n          {hasImage ? (\n            <View>\n              <Image\n                source={{ uri }}\n                style={{\n                  width: \"100%\",\n                  height: 400,\n                }}\n                resizeMode=\"contain\"\n              />\n            </View>\n          ) : null}\n\n          {profile?.gang ? (\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"Gang\", { name: profile?.gang?.name });\n              }}\n            >\n              <T>Gang</T>\n              {profile?.gang?.image && (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + profile?.gang?.image }}\n                  style={{ width: 200, height: 200 }}\n                  resizeMode=\"contain\"\n                />\n              )}\n              <T>{profile?.gang?.name}</T>\n            </TouchableOpacity>\n          ) : null}\n\n          {profession && moment().isAfter(professionReleaseDate) && (\n            <View style={{ width: 100, margin: 20 }}>\n              <Image\n                source={profession.image}\n                style={{ width: 100, height: 100 }}\n                resizeMode=\"contain\"\n              />\n              <View>\n                <T bold>{getText(profession.type)}</T>\n              </View>\n            </View>\n          )}\n\n          {keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n          {keyValue(\n            getText(\"lastOnline\"),\n            moment(profile?.onlineAt).format(\"DD-MM-YYYY\")\n          )}\n          {keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n          {keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n          {keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n          {keyValue(\n            getText(\"strength\"),\n            getStrength(profile?.strength, \"both\")\n          )}\n          {keyValue(getText(\"health\"), `${profile?.health}%`)}\n          {keyValue(getText(\"weed\"), profile?.wiet)}\n          {keyValue(getText(\"junkies\"), profile?.junkies)}\n          {keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n          <T bold>{getText(\"properties\")}</T>\n          {properties\n            .map((p) => p.name)\n            .map((property) => {\n              return (\n                cities &&\n                cities.map((city, index) => {\n                  const ownerKey = `${property}Owner`;\n                  if (profile?.name === city[ownerKey]) {\n                    return (\n                      <T>\n                        {getText(property)} in {city.city}\n                      </T>\n                    );\n                  }\n\n                  return null;\n                })\n              );\n            })}\n\n          <View style={styles.row}>\n            <Button\n              title={getText(\"chat\")}\n              onPress={async () => {\n                const { id } = await get(\n                  `pm?loginToken=${loginToken}&userId=${profile.id}`\n                );\n\n                navigation.navigate(\"Channel\", { id });\n              }}\n            />\n\n            <Button\n              title={getText(\"rob\")}\n              onPress={() =>\n                navigation.navigate(\"Rob\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"attack\")}\n              onPress={() =>\n                navigation.navigate(\"Kill\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"donate\")}\n              onPress={() =>\n                navigation.navigate(\"Donate\", {\n                  to: profile.name,\n                })\n              }\n            />\n\n            <Button\n              title={getText(\"report\")}\n              onPress={() =>\n                alertAlert(\n                  getText(\"areYouSure\"),\n                  getText(\"areYouSure\"),\n                  [\n                    { text: getText(\"ok\"), onPress: () => postReport() },\n                    { text: getText(\"cancel\") },\n                  ],\n                  { key: \"postReport\" }\n                )\n              }\n            />\n          </View>\n        </View>\n\n        <View style={{ marginVertical: 20 }}>\n          {profile?.ban !== \"shadowBanned\" && profile?.ban !== \"banned\" && (\n            <Bio theme={theme} bio={profile?.bio} />\n          )}\n        </View>\n\n        <View>\n          {images.map((image) => {\n            const uri = Constants.SERVER_ADDR + \"/\" + image.image;\n            return (\n              <View>\n                <Image\n                  source={{ uri }}\n                  style={{\n                    width: \"100%\",\n                    height: 400,\n                  }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n            );\n          })}\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst ProtectionShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"protection\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default ProtectionShop;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Reports = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [reports, setReports] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [banReason, setBanReason] = useState(\"\");\n\n  const postReport = async (ban, userId) => {\n    const { response } = await post(\"report\", {\n      token: device.loginToken,\n      userId,\n      ban,\n      banReason,\n    });\n\n    setResponse(response);\n    getReports();\n  };\n\n  const getReports = async () => {\n    const { reports } = await get(`reports?token=${device.loginToken}`);\n    setReports(reports);\n  };\n\n  doOnce(getReports);\n\n  console.log(\"reports\", reports);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          {reports?.map?.((user) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <User user={user} size={40} navigation={navigation} />\n\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{getText(user.ban)}</T>\n                <T>\n                  {getText(\"reason\")}: {user.banReason}\n                </T>\n                <Button\n                  title={getText(\"ban\")}\n                  onPress={() => postReport(\"banned\", user.id)}\n                />\n                <Button\n                  title={getText(\"shadowBan\")}\n                  onPress={() => postReport(\"shadowBanned\", user.id)}\n                />\n                <TouchableOpacity onPress={() => postReport(\"none\", user.id)}>\n                  <Entypo name=\"cross\" color=\"red\" size={33} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Reports;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nimport { RobberyTypes } from \"./CreateRobbery\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Robbery = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    robberies,\n    reloadRobberies,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadRobberies);\n  doOnce(fetchRacecars);\n\n  const join = async (robberyId) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadRobberies();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (robberyId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    reloadRobberies();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (robberyId) => {\n    setLoading(true);\n    const { response } = await post(\"startRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadRobberies();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const type = RobberyTypes.find((x) => x.type === item.type);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={type.image}\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.robberyParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{type.cost},-\n          </T>\n          <T>\n            {getText(\"profit\")}: €{type.profit * item.numParticipants},-\n          </T>\n\n          <T>\n            {getText(\"difficulty\")}: {type.difficulty}\n          </T>\n          {item.robberyParticipants.length > 0 &&\n            item.robberyParticipants.map((p) => (\n              <User user={p.user} navigation={navigation} size={40} />\n            ))}\n\n          {!!item.robberyParticipants.find((x) => x?.user?.id === me?.id) ? (\n            item.robberyParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                join(item.id);\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateRobbery\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadRobberies();\n              setResponse(null);\n            }}\n          />\n        }\n        data={robberies}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Robbery;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n\n        <Footer screenProps={screenProps} />\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={seconds}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          <T>\n            {getText(\"addedPrizeMoney\")}: €{item.prize},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Original\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          // reloadMe(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Switch, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nconst SuperMessage = ({ screenProps: { me, device } }) => {\n  const [response, setResponse] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [schedule, setSchedule] = useState(false);\n  const [date, setDate] = useState(moment().format(\"DD/MM/YYYY\"));\n\n  //for admin\n  const [scheduled, setScheduled] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [dates, setDates] = useState({});\n\n  const getScheduled = async () => {\n    if (me?.level === 10) {\n      const { scheduled, response } = await get(\n        `scheduled?token=${device.loginToken}`\n      );\n      if (scheduled) {\n        setScheduled(scheduled);\n        setMessages(\n          scheduled.reduce(\n            (previous, current) => ({\n              ...previous,\n              [current.id]: current.message,\n            }),\n            {}\n          )\n        );\n\n        setDates(\n          scheduled.reduce(\n            (previous, current) => ({\n              ...previous,\n              [current.id]: moment(current.date).format(\"DD/MM/YYYY\"),\n            }),\n            {}\n          )\n        );\n      }\n    }\n  };\n  doOnce(getScheduled);\n\n  const saveScheduled = async (id) => {\n    const { response } = await post(\"updateScheduled\", {\n      token: device.loginToken,\n      message: messages[id],\n      date: moment(dates[id], \"DD/MM/YYYY\").set(\"hours\", 17).valueOf(),\n      id,\n    });\n\n    getScheduled();\n\n    setResponse(response);\n  };\n  const sendMessage = () => {\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        date: date\n          ? moment(date, \"DD/MM/YYYY\").set(\"hours\", 17).valueOf()\n          : undefined,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResponse(response?.response);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n      {response ? <T>{response}</T> : null}\n\n      {me?.level === 10 && (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Switch value={schedule} onValueChange={setSchedule} />\n          {schedule && (\n            <TextInput\n              style={style(device.theme).textInput}\n              placeholder={getText(\"date\")}\n              placeholderTextColor={device.theme.secondaryTextSoft}\n              value={date}\n              onChangeText={setDate}\n            />\n          )}\n        </View>\n      )}\n      <TextInput\n        style={[style(device.theme).textInput, { height: 200 }]}\n        placeholder={getText(\"message\")}\n        placeholderTextColor={device.theme.secondaryTextSoft}\n        multiline\n        value={message}\n        onChangeText={setMessage}\n      />\n\n      <Button\n        theme={device.theme}\n        style={{ marginVertical: 10 }}\n        title={getText(\"send\")}\n        onPress={sendMessage}\n      />\n\n      {me?.level === 10 && (\n        <View>\n          <H1>{getText(\"scheduled\")}</H1>\n\n          {scheduled?.map((message, index) => {\n            return (\n              <View key={`message${index}`} style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  style={[\n                    style(device.theme).textInput,\n                    { height: 100, width: 200, flex: 1 },\n                  ]}\n                  placeholder={getText(\"message\")}\n                  placeholderTextColor={device.theme.secondaryTextSoft}\n                  multiline\n                  value={messages[message.id]}\n                  onChangeText={(msg) =>\n                    setMessages({ ...messages, [message.id]: msg })\n                  }\n                />\n\n                <TextInput\n                  style={[\n                    style(device.theme).textInput,\n                    { marginHorizontal: 10, height: 40 },\n                  ]}\n                  placeholder={getText(\"date\")}\n                  placeholderTextColor={device.theme.secondaryTextSoft}\n                  value={dates[message.id]}\n                  onChangeText={(date) =>\n                    setDates({ ...dates, [message.id]: date })\n                  }\n                />\n\n                <Button\n                  theme={device.theme}\n                  style={{ marginVertical: 10 }}\n                  title={getText(\"send\")}\n                  onPress={() => saveScheduled(message.id)}\n                />\n              </View>\n            );\n          })}\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst WeaponShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"weapon\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default WeaponShop;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"landlord\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.landlordOwner ? (\n                    <T>{city.landlordOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.landlordOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"landlord\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <T>{city.landlordProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps,\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(1);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", {\n      token: device.loginToken,\n      captcha,\n      option: selected,\n    });\n    setResponse(response);\n  };\n\n  const minute = Math.round((me?.workEndsAt - Date.now()) / (60 * 1000));\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <T>{response}</T>\n        ) : me?.workEndsAt > Date.now() ? (\n          <T>{getText(\"workWait\", minute)}</T>\n        ) : (\n          <View>\n            {options.map((option, index) => {\n              return (\n                <TouchableOpacity\n                  onPress={() => setSelected(index + 1)}\n                  key={`key${index}`}\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    paddingVertical: 10,\n                    paddingHorizontal: 10,\n                    borderRadius: 5,\n                  }}\n                >\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Checkbox active={selected === index + 1} />\n                    <T style={{ marginLeft: 10 }}>{option.title}</T>\n                  </View>\n                  <T>\n                    {option.hours} {getText(\"hours\")}\n                  </T>\n                </TouchableOpacity>\n              );\n            })}\n\n            <Captcha\n              screenProps={screenProps}\n              captcha={captcha}\n              onChangeCaptcha={setCaptcha}\n              random={random}\n              onChangeRandom={setRandom}\n            />\n\n            <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n          </View>\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Work;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchRobberies = (payload) => {\n  return get(\"robberies\");\n};\n\nconst fetchOcs = (payload) => {\n  return get(`ocs?token=${payload.token}`);\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      // console.log(\"got me\", me);\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = {\n  fetchMe,\n  fetchCities,\n  fetchStreetraces,\n  fetchOcs,\n  fetchRobberies,\n};\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchRobberies(action) {\n  try {\n    const { robberies } = yield call(Api.fetchRobberies, action.payload);\n\n    yield put({ type: \"ROBBERIES_FETCH_SUCCEEDED\", robberies });\n  } catch (e) {\n    yield put({ type: \"ROBBERIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchOcs(action) {\n  try {\n    const { ocs } = yield call(Api.fetchOcs, action.payload);\n\n    yield put({ type: \"OCS_FETCH_SUCCEEDED\", ocs });\n  } catch (e) {\n    yield put({ type: \"OCS_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n  yield takeLatest(\"OCS_FETCH_REQUESTED\", fetchOcs);\n  yield takeLatest(\"ROBBERIES_FETCH_REQUESTED\", fetchRobberies);\n}\n\nexport default mySaga;\n","import { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\n\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  movements: Movement[],\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: false,\n  theme: DEFAULT_THEME,\n  isConnected: 2,\n  foregrounded: 0,\n  movements: [],\n  menu: {\n    left: [0, 1, 2, 3, 4, 5, 6],\n    right: [0, 1, 2, 3, 4, 5, 6],\n  },\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"MENU_SET_RIGHT_ACTIVE_SECTIONS\": {\n      return { ...state, menu: { left: state.menu.left, right: action.value } };\n    }\n    case \"MENU_SET_LEFT_ACTIVE_SECTIONS\": {\n      return {\n        ...state,\n        menu: { right: state.menu.right, left: action.value },\n      };\n    }\n\n    case \"SET_IS_CONNECTED\": {\n      return { ...state, isConnected: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN_AND_LOGIN\": {\n      return { ...initDevice, loginToken: action.value, logged: true };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      return action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initRobberies = null;\nconst robberiesReducer = (state = initRobberies, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initRobberies;\n    }\n\n    case \"ROBBERIES_FETCH_SUCCEEDED\": {\n      return action.robberies;\n    }\n\n    case \"ROBBERIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initOcs = null;\nconst ocsReducer = (state = initOcs, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initOcs;\n    }\n\n    case \"OCS_FETCH_SUCCEEDED\": {\n      return action.ocs;\n    }\n\n    case \"OCS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\"device\", \"me\", \"streetraces\", \"cities\", \"ocs\", \"robberies\"],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n  ocs: ocsReducer,\n  robberies: robberiesReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport React from \"react\";\nimport { Dimensions, Platform, Text, View } from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { AlertProvider } from \"./components/AlertProvider\";\nimport ConnectionProvider from \"./components/ConnectionProvider\";\nimport { IntervalProvider } from \"./components/IntervalProvider\";\nimport { CustomDrawerContentComponent, withLayout } from \"./Layout\";\nimport Accomplice from \"./screens/Accomplice\";\nimport AdminEmail from \"./screens/AdminEmail\";\nimport AdminUserWatch from \"./screens/AdminUserWatch\";\nimport AirplaneShop from \"./screens/AirplaneShop\";\nimport Airport from \"./screens/Airport\";\nimport AllAirport from \"./screens/AllAirport\";\nimport AllBanks from \"./screens/AllBanks\";\nimport AllBulletfactory from \"./screens/AllBulletfactory\";\nimport AllGang from \"./screens/AllGang\";\nimport AllGarage from \"./screens/AllGarage\";\nimport AllStats from \"./screens/AllStats\";\nimport Backfire from \"./screens/Backfire\";\nimport Bank from \"./screens/Bank\";\nimport Blocks from \"./screens/Blocks\";\nimport Bomb from \"./screens/Bomb\";\nimport Bulletfactory from \"./screens/Bulletfactory\";\nimport Bunker from \"./screens/Bunker\";\nimport Casino from \"./screens/Casino\";\nimport ChangeName from \"./screens/ChangeName\";\nimport ChangePassword from \"./screens/ChangePassword\";\nimport Channel from \"./screens/Channel\";\nimport Channels from \"./screens/Channels\";\nimport Chat from \"./screens/Chat\";\nimport ChooseProfession from \"./screens/ChooseProfession\";\nimport Code from \"./screens/Code\";\nimport Contribute from \"./screens/Contribute\";\nimport CreateOc from \"./screens/CreateOC\";\nimport CreateRobbery from \"./screens/CreateRobbery\";\nimport CreateStreetrace from \"./screens/CreateStreetrace\";\nimport Crimes from \"./screens/Crimes\";\nimport Detectives from \"./screens/Detectives\";\nimport Donate from \"./screens/Donate\";\nimport DownloadApp from \"./screens/DownloadApp\";\nimport EstateAgent from \"./screens/EstateAgent\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Forum from \"./screens/Forum\";\nimport Gang from \"./screens/Gang\";\nimport GangAchievements from \"./screens/GangAchievements\";\nimport GangBulletFactory from \"./screens/GangBulletFactory\";\nimport GangCreate from \"./screens/GangCreate\";\nimport GangMissions from \"./screens/GangMissions\";\nimport Gangs from \"./screens/Gangs\";\nimport GangSettings from \"./screens/GangSettings\";\nimport GangShop from \"./screens/GangShop\";\nimport Garage from \"./screens/Garage\";\nimport GarageShop from \"./screens/GarageShop\";\nimport Gym from \"./screens/Gym\";\nimport Hackers from \"./screens/Hackers\";\nimport Hoeren from \"./screens/Hoeren\";\nimport Home from \"./screens/Home\";\nimport Hospital from \"./screens/Hospital\";\nimport House from \"./screens/House\";\nimport Income from \"./screens/Income\";\nimport Info from \"./screens/Info\";\nimport InfoGame from \"./screens/InfoGame\";\nimport InfoRules from \"./screens/InfoRules\";\nimport JailScreen from \"./screens/Jail\";\nimport Junkies from \"./screens/Junkies\";\nimport Kill from \"./screens/Kill\";\nimport Login from \"./screens/Login\";\nimport Lotto from \"./screens/Lotto\";\nimport ManageObject from \"./screens/ManageObject\";\nimport Map from \"./screens/Map/Map\";\nimport Market from \"./screens/Market\";\nimport Members from \"./screens/Members\";\nimport MollieComplete from \"./screens/MollieComplete\";\nimport More from \"./screens/More\";\nimport MyObjects from \"./screens/MyObjects\";\nimport MyProfile from \"./screens/MyProfile\";\nimport OC from \"./screens/OC\";\nimport Poker from \"./screens/Poker\";\nimport Police from \"./screens/Police\";\nimport Privacy from \"./screens/Privacy\";\nimport Prizes from \"./screens/Prizes\";\nimport Profile from \"./screens/Profile\";\nimport ProtectionShop from \"./screens/ProtectionShop\";\nimport Racecars from \"./screens/Racecars\";\nimport RecoverPassword from \"./screens/RecoverPassword\";\nimport Reports from \"./screens/Reports\";\nimport Rob from \"./screens/Rob\";\nimport Robbery from \"./screens/Robbery\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport SignupEmail from \"./screens/SignupEmail\";\nimport SignupEmail2 from \"./screens/SignupEmail2\";\nimport Sint from \"./screens/Sint\";\nimport Stats from \"./screens/Stats\";\nimport Status from \"./screens/Status\";\nimport StealCar from \"./screens/StealCar\";\nimport Streetrace from \"./screens/Streetrace\";\nimport SwissBank from \"./screens/SwissBank\";\nimport Theme from \"./screens/Theme\";\nimport VerifyPhone from \"./screens/VerifyPhone\";\nimport VerifyPhoneCode from \"./screens/VerifyPhoneCode\";\nimport VIP from \"./screens/VIP\";\nimport WeaponShop from \"./screens/WeaponShop\";\nimport Wiet from \"./screens/Wiet\";\nimport Work from \"./screens/Work\";\nimport { persistor, store } from \"./Store\";\nimport { getTextFunction } from \"./Util\";\n\n//hoi\n\n// if (process.env.NODE_ENV === \"development\") {\n//   const whyDidYouRender = require(\"@welldone-software/why-did-you-render\");\n//   whyDidYouRender(React, {\n//     trackAllPureComponents: false,\n//   });\n// }\n\nconst rightContainer =\n  Platform.OS === \"web\" ? createBrowserApp : createAppContainer;\n\nconst window = Dimensions.get(\"window\");\nconst isSmallDevice = window.width < 800;\n\nconst rightNavigator =\n  Platform.OS === \"web\"\n    ? isSmallDevice\n      ? createDrawerNavigator\n      : createSwitchNavigator\n    : createStackNavigator;\n\nconst routes = {\n  Home: {\n    screen: withLayout(Home),\n    path: \"\",\n  },\n\n  GangCreate: withLayout(GangCreate),\n  AllGang: withLayout(AllGang),\n\n  Gang: {\n    screen: withLayout(Gang),\n    path: \"Gang/:name\",\n  },\n\n  Gangs: withLayout(Gangs),\n  GangShop: withLayout(GangShop),\n  GangSettings: withLayout(GangSettings),\n  GangAchievements: withLayout(GangAchievements),\n  GangMissions: withLayout(GangMissions),\n  GangBulletFactory: withLayout(GangBulletFactory),\n  AllBulletfactory: withLayout(AllBulletfactory),\n\n  Robbery: withLayout(Robbery),\n  CreateRobbery: withLayout(CreateRobbery),\n\n  Status: withLayout(Status),\n  Hackers: withLayout(Hackers),\n  Police: withLayout(Police),\n  StealCar: withLayout(StealCar),\n  CreateStreetrace: withLayout(CreateStreetrace),\n  Channels: withLayout(Channels),\n  Channel: withLayout(Channel),\n  AllBanks: withLayout(AllBanks),\n  Poker: withLayout(Poker),\n  Lotto: withLayout(Lotto),\n  Bomb: withLayout(Bomb),\n  Detectives: withLayout(Detectives),\n  SwissBank: withLayout(SwissBank),\n\n  Crimes: withLayout(Crimes),\n  Jail: withLayout(JailScreen),\n  Kill: withLayout(Kill),\n  Rob: withLayout(Rob),\n  // Showroom: withLayout(Showroom),\n  Bank: withLayout(Bank),\n  Shop: withLayout(Shop),\n  Garage: withLayout(Garage),\n  GarageShop: withLayout(GarageShop),\n  WeaponShop: withLayout(WeaponShop),\n  ProtectionShop: withLayout(ProtectionShop),\n\n  AllGarage: withLayout(AllGarage),\n  ManageObject: withLayout(ManageObject),\n  MyObjects: withLayout(MyObjects),\n  Racecars: withLayout(Racecars),\n  Backfire: withLayout(Backfire),\n  Accomplice: withLayout(Accomplice),\n  Streetrace: withLayout(Streetrace),\n  Bulletfactory: withLayout(Bulletfactory),\n  Casino: withLayout(Casino),\n  Airport: withLayout(Airport),\n  AllAirport: withLayout(AllAirport),\n  Members: withLayout(Members),\n  Stats: withLayout(Stats),\n  Chat: withLayout(Chat),\n  Gym: withLayout(Gym),\n  Wiet: withLayout(Wiet),\n  MollieComplete: withLayout(MollieComplete),\n  Junkies: withLayout(Junkies),\n  Hoeren: withLayout(Hoeren),\n  Bunker: withLayout(Bunker),\n  House: withLayout(House),\n  Donate: withLayout(Donate),\n  Hospital: withLayout(Hospital),\n  Income: withLayout(Income),\n  AdminEmail: withLayout(AdminEmail),\n  AdminUserWatch: withLayout(AdminUserWatch),\n  Forum: withLayout(Forum),\n  Theme: withLayout(Theme),\n  DownloadApp: DownloadApp,\n  VIP: withLayout(VIP),\n  Market: withLayout(Market),\n  Sint: withLayout(Sint),\n  ChooseProfession: withLayout(ChooseProfession),\n  Profile: {\n    screen: withLayout(Profile),\n    path: \"Profile/:name\",\n  },\n\n  //SETTINGS\n  Settings: withLayout(Settings),\n  SignupEmail: withLayout(SignupEmail),\n\n  SignupEmail2: {\n    screen: withLayout(SignupEmail2),\n    path: \"SignupEmail2/:token\",\n  },\n\n  ChangeName: withLayout(ChangeName),\n  VerifyPhoneCode: withLayout(VerifyPhoneCode),\n  ForgotPassword: withLayout(ForgotPassword),\n  Blocks: withLayout(Blocks),\n  Reports: withLayout(Reports),\n  Map: withLayout(Map),\n  RecoverPassword: {\n    screen: withLayout(RecoverPassword),\n    path: \"RecoverPassword/:token\",\n  },\n\n  Code: {\n    screen: withLayout(Code),\n    path: \"Code/:code\",\n  },\n  Case: {\n    screen: withLayout(Code),\n    path: \"Case/:code\",\n  },\n  Car: {\n    screen: withLayout(Code),\n    path: \"Car/:code\",\n  },\n\n  ChangePassword: {\n    screen: withLayout(ChangePassword),\n  },\n  VerifyPhone: withLayout(VerifyPhone),\n  MyProfile: withLayout(MyProfile),\n  Login: withLayout(Login),\n  Work: withLayout(Work),\n  OC: withLayout(OC),\n  CreateOc: withLayout(CreateOc),\n\n  AirplaneShop: withLayout(AirplaneShop),\n  EstateAgent: withLayout(EstateAgent),\n  //INFO\n  Info: withLayout(Info),\n  InfoGame: withLayout(InfoGame),\n  InfoRules: withLayout(InfoRules),\n  Privacy: withLayout(Privacy),\n  Contribute: withLayout(Contribute),\n  Prizes: withLayout(Prizes),\n  AllStats: withLayout(AllStats),\n  More: withLayout(More),\n};\n\nconst tabRoutes = {\n  Map: createStackNavigator(routes, {\n    initialRouteName: \"Map\",\n    headerMode: \"none\",\n  }),\n  Stats: createStackNavigator(routes, {\n    initialRouteName: \"AllStats\",\n    headerMode: \"none\",\n  }),\n  Channels: createStackNavigator(routes, {\n    initialRouteName: \"Channels\",\n    headerMode: \"none\",\n  }),\n  More: createStackNavigator(routes, {\n    initialRouteName: \"More\",\n    headerMode: \"none\",\n  }),\n};\n\nconst NewContainer = createAppContainer(\n  createBottomTabNavigator(tabRoutes, {\n    defaultNavigationOptions: ({ navigation, screenProps: { me } }) => {\n      const getText = getTextFunction(me?.locale);\n      const routeName = navigation.state.routeName;\n\n      return {\n        title:\n          routeName === \"Map\"\n            ? getText(\"menuMap\")\n            : routeName === \"More\"\n            ? getText(\"menuMore\")\n            : routeName === \"Channels\"\n            ? getText(\"menuChat\")\n            : getText(\"menuStats\"),\n\n        tabBarIcon: ({ focused, horizontal, tintColor }) => {\n          const { routeName } = navigation.state;\n          let IconComponent = Icon.FontAwesome;\n          let badgeCount = 0;\n          let iconName;\n          if (routeName === \"Map\") {\n            iconName = focused ? \"map\" : \"map-o\";\n          } else if (routeName === \"More\") {\n            iconName = \"dots-three-horizontal\";\n            IconComponent = Icon.Entypo;\n          } else if (routeName === \"Stats\") {\n            iconName = \"bar-graph\";\n            IconComponent = Icon.Entypo;\n          } else {\n            // hoe krijgen we hier de aantal nieuwe chats?\n            iconName = \"ios-chatbubbles\";\n            IconComponent = Icon.Ionicons;\n            badgeCount = me?.chats;\n          }\n\n          // You can return any component that you like here!\n          return (\n            <View>\n              <IconComponent name={iconName} size={25} color={tintColor} />\n              {badgeCount > 0 && (\n                <View\n                  style={{\n                    backgroundColor: \"red\",\n                    borderRadius: 6,\n                    minWidth: 12,\n                    height: 12,\n                    position: \"absolute\",\n                    right: -6,\n                    top: -3,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    paddingHorizontal: 2,\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", fontSize: 10, fontWeight: \"bold\" }}\n                  >\n                    {badgeCount}\n                  </Text>\n                </View>\n              )}\n            </View>\n          );\n        },\n      };\n    },\n    tabBarOptions: {\n      keyboardHidesTabBar: false, //on ios keyboard goes over tabbar anyway, and if you hide it, the map moves a bit.\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"gray\",\n    },\n  })\n);\nconst OldContainer = rightContainer(\n  rightNavigator(routes, {\n    drawerPosition: \"right\",\n    edgeWidth: Platform.OS === \"web\" && isSmallDevice ? 0 : undefined,\n    contentComponent: CustomDrawerContentComponent,\n    unmountInactiveRoutes: true,\n    navigationOptions: {\n      drawerLockMode: \"locked-open\",\n    },\n    defaultNavigationOptions: {\n      headerShown: false,\n    },\n  }),\n  {\n    history: \"hash\",\n  }\n);\n\nconst _RootContainer = (props) => {\n  // NB: we got screenProps here , but not navigation\n  // if you also need navigation, use withLayout/Layout\n\n  const Container =\n    props.me?.level >= 2 && props.me?.newVersion && Platform.OS !== \"web\"\n      ? NewContainer\n      : OldContainer;\n  return (\n    <IntervalProvider screenProps={props}>\n      <ActionSheetProvider>\n        <ConnectionProvider>\n          <AlertProvider>\n            <Container screenProps={props} />\n          </AlertProvider>\n        </ConnectionProvider>\n      </ActionSheetProvider>\n    </IntervalProvider>\n  );\n};\n\nconst mapStateToProps = ({\n  device,\n  me,\n  streetraces,\n  ocs,\n  cities,\n  robberies,\n}) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, ocs, cities, robberies };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) => {\n    // console.log(\"reloadMe with loginToken\", loginToken);\n    dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } });\n  },\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadRobberies: () =>\n    dispatch({ type: \"ROBBERIES_FETCH_REQUESTED\", payload: null }),\n  reloadOcs: (token) =>\n    dispatch({ type: \"OCS_FETCH_REQUESTED\", payload: { token } }),\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nconst App = () => {\n  return (\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <RootContainer />\n      </Provider>\n    </PersistGate>\n  );\n};\nexport default App;\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo5.8e72dd72.jpg\";","var map = {\n\t\"./af\": 338,\n\t\"./af.js\": 338,\n\t\"./ar\": 339,\n\t\"./ar-dz\": 340,\n\t\"./ar-dz.js\": 340,\n\t\"./ar-kw\": 341,\n\t\"./ar-kw.js\": 341,\n\t\"./ar-ly\": 342,\n\t\"./ar-ly.js\": 342,\n\t\"./ar-ma\": 343,\n\t\"./ar-ma.js\": 343,\n\t\"./ar-sa\": 344,\n\t\"./ar-sa.js\": 344,\n\t\"./ar-tn\": 345,\n\t\"./ar-tn.js\": 345,\n\t\"./ar.js\": 339,\n\t\"./az\": 346,\n\t\"./az.js\": 346,\n\t\"./be\": 347,\n\t\"./be.js\": 347,\n\t\"./bg\": 348,\n\t\"./bg.js\": 348,\n\t\"./bm\": 349,\n\t\"./bm.js\": 349,\n\t\"./bn\": 350,\n\t\"./bn.js\": 350,\n\t\"./bo\": 351,\n\t\"./bo.js\": 351,\n\t\"./br\": 352,\n\t\"./br.js\": 352,\n\t\"./bs\": 353,\n\t\"./bs.js\": 353,\n\t\"./ca\": 354,\n\t\"./ca.js\": 354,\n\t\"./cs\": 355,\n\t\"./cs.js\": 355,\n\t\"./cv\": 356,\n\t\"./cv.js\": 356,\n\t\"./cy\": 357,\n\t\"./cy.js\": 357,\n\t\"./da\": 358,\n\t\"./da.js\": 358,\n\t\"./de\": 359,\n\t\"./de-at\": 360,\n\t\"./de-at.js\": 360,\n\t\"./de-ch\": 361,\n\t\"./de-ch.js\": 361,\n\t\"./de.js\": 359,\n\t\"./dv\": 362,\n\t\"./dv.js\": 362,\n\t\"./el\": 363,\n\t\"./el.js\": 363,\n\t\"./en-au\": 364,\n\t\"./en-au.js\": 364,\n\t\"./en-ca\": 365,\n\t\"./en-ca.js\": 365,\n\t\"./en-gb\": 366,\n\t\"./en-gb.js\": 366,\n\t\"./en-ie\": 367,\n\t\"./en-ie.js\": 367,\n\t\"./en-il\": 368,\n\t\"./en-il.js\": 368,\n\t\"./en-in\": 369,\n\t\"./en-in.js\": 369,\n\t\"./en-nz\": 370,\n\t\"./en-nz.js\": 370,\n\t\"./en-sg\": 371,\n\t\"./en-sg.js\": 371,\n\t\"./eo\": 372,\n\t\"./eo.js\": 372,\n\t\"./es\": 373,\n\t\"./es-do\": 374,\n\t\"./es-do.js\": 374,\n\t\"./es-us\": 375,\n\t\"./es-us.js\": 375,\n\t\"./es.js\": 373,\n\t\"./et\": 376,\n\t\"./et.js\": 376,\n\t\"./eu\": 377,\n\t\"./eu.js\": 377,\n\t\"./fa\": 378,\n\t\"./fa.js\": 378,\n\t\"./fi\": 379,\n\t\"./fi.js\": 379,\n\t\"./fil\": 380,\n\t\"./fil.js\": 380,\n\t\"./fo\": 381,\n\t\"./fo.js\": 381,\n\t\"./fr\": 382,\n\t\"./fr-ca\": 383,\n\t\"./fr-ca.js\": 383,\n\t\"./fr-ch\": 384,\n\t\"./fr-ch.js\": 384,\n\t\"./fr.js\": 382,\n\t\"./fy\": 385,\n\t\"./fy.js\": 385,\n\t\"./ga\": 386,\n\t\"./ga.js\": 386,\n\t\"./gd\": 387,\n\t\"./gd.js\": 387,\n\t\"./gl\": 388,\n\t\"./gl.js\": 388,\n\t\"./gom-deva\": 389,\n\t\"./gom-deva.js\": 389,\n\t\"./gom-latn\": 390,\n\t\"./gom-latn.js\": 390,\n\t\"./gu\": 391,\n\t\"./gu.js\": 391,\n\t\"./he\": 392,\n\t\"./he.js\": 392,\n\t\"./hi\": 393,\n\t\"./hi.js\": 393,\n\t\"./hr\": 394,\n\t\"./hr.js\": 394,\n\t\"./hu\": 395,\n\t\"./hu.js\": 395,\n\t\"./hy-am\": 396,\n\t\"./hy-am.js\": 396,\n\t\"./id\": 397,\n\t\"./id.js\": 397,\n\t\"./is\": 398,\n\t\"./is.js\": 398,\n\t\"./it\": 399,\n\t\"./it-ch\": 400,\n\t\"./it-ch.js\": 400,\n\t\"./it.js\": 399,\n\t\"./ja\": 401,\n\t\"./ja.js\": 401,\n\t\"./jv\": 402,\n\t\"./jv.js\": 402,\n\t\"./ka\": 403,\n\t\"./ka.js\": 403,\n\t\"./kk\": 404,\n\t\"./kk.js\": 404,\n\t\"./km\": 405,\n\t\"./km.js\": 405,\n\t\"./kn\": 406,\n\t\"./kn.js\": 406,\n\t\"./ko\": 407,\n\t\"./ko.js\": 407,\n\t\"./ku\": 408,\n\t\"./ku.js\": 408,\n\t\"./ky\": 409,\n\t\"./ky.js\": 409,\n\t\"./lb\": 410,\n\t\"./lb.js\": 410,\n\t\"./lo\": 411,\n\t\"./lo.js\": 411,\n\t\"./lt\": 412,\n\t\"./lt.js\": 412,\n\t\"./lv\": 413,\n\t\"./lv.js\": 413,\n\t\"./me\": 414,\n\t\"./me.js\": 414,\n\t\"./mi\": 415,\n\t\"./mi.js\": 415,\n\t\"./mk\": 416,\n\t\"./mk.js\": 416,\n\t\"./ml\": 417,\n\t\"./ml.js\": 417,\n\t\"./mn\": 418,\n\t\"./mn.js\": 418,\n\t\"./mr\": 419,\n\t\"./mr.js\": 419,\n\t\"./ms\": 420,\n\t\"./ms-my\": 421,\n\t\"./ms-my.js\": 421,\n\t\"./ms.js\": 420,\n\t\"./mt\": 422,\n\t\"./mt.js\": 422,\n\t\"./my\": 423,\n\t\"./my.js\": 423,\n\t\"./nb\": 424,\n\t\"./nb.js\": 424,\n\t\"./ne\": 425,\n\t\"./ne.js\": 425,\n\t\"./nl\": 426,\n\t\"./nl-be\": 427,\n\t\"./nl-be.js\": 427,\n\t\"./nl.js\": 426,\n\t\"./nn\": 428,\n\t\"./nn.js\": 428,\n\t\"./oc-lnc\": 429,\n\t\"./oc-lnc.js\": 429,\n\t\"./pa-in\": 430,\n\t\"./pa-in.js\": 430,\n\t\"./pl\": 431,\n\t\"./pl.js\": 431,\n\t\"./pt\": 432,\n\t\"./pt-br\": 433,\n\t\"./pt-br.js\": 433,\n\t\"./pt.js\": 432,\n\t\"./ro\": 434,\n\t\"./ro.js\": 434,\n\t\"./ru\": 435,\n\t\"./ru.js\": 435,\n\t\"./sd\": 436,\n\t\"./sd.js\": 436,\n\t\"./se\": 437,\n\t\"./se.js\": 437,\n\t\"./si\": 438,\n\t\"./si.js\": 438,\n\t\"./sk\": 439,\n\t\"./sk.js\": 439,\n\t\"./sl\": 440,\n\t\"./sl.js\": 440,\n\t\"./sq\": 441,\n\t\"./sq.js\": 441,\n\t\"./sr\": 442,\n\t\"./sr-cyrl\": 443,\n\t\"./sr-cyrl.js\": 443,\n\t\"./sr.js\": 442,\n\t\"./ss\": 444,\n\t\"./ss.js\": 444,\n\t\"./sv\": 445,\n\t\"./sv.js\": 445,\n\t\"./sw\": 446,\n\t\"./sw.js\": 446,\n\t\"./ta\": 447,\n\t\"./ta.js\": 447,\n\t\"./te\": 448,\n\t\"./te.js\": 448,\n\t\"./tet\": 449,\n\t\"./tet.js\": 449,\n\t\"./tg\": 450,\n\t\"./tg.js\": 450,\n\t\"./th\": 451,\n\t\"./th.js\": 451,\n\t\"./tk\": 452,\n\t\"./tk.js\": 452,\n\t\"./tl-ph\": 453,\n\t\"./tl-ph.js\": 453,\n\t\"./tlh\": 454,\n\t\"./tlh.js\": 454,\n\t\"./tr\": 455,\n\t\"./tr.js\": 455,\n\t\"./tzl\": 456,\n\t\"./tzl.js\": 456,\n\t\"./tzm\": 457,\n\t\"./tzm-latn\": 458,\n\t\"./tzm-latn.js\": 458,\n\t\"./tzm.js\": 457,\n\t\"./ug-cn\": 459,\n\t\"./ug-cn.js\": 459,\n\t\"./uk\": 460,\n\t\"./uk.js\": 460,\n\t\"./ur\": 461,\n\t\"./ur.js\": 461,\n\t\"./uz\": 462,\n\t\"./uz-latn\": 463,\n\t\"./uz-latn.js\": 463,\n\t\"./uz.js\": 462,\n\t\"./vi\": 464,\n\t\"./vi.js\": 464,\n\t\"./x-pseudo\": 465,\n\t\"./x-pseudo.js\": 465,\n\t\"./yo\": 466,\n\t\"./yo.js\": 466,\n\t\"./zh-cn\": 467,\n\t\"./zh-cn.js\": 467,\n\t\"./zh-hk\": 468,\n\t\"./zh-hk.js\": 468,\n\t\"./zh-mo\": 469,\n\t\"./zh-mo.js\": 469,\n\t\"./zh-tw\": 470,\n\t\"./zh-tw.js\": 470\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 728;","module.exports = __webpack_public_path__ + \"static/media/bombarderen.3d0c7534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item1.a5e891d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item2.e86438ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item3.27b6a03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item4.b980bfe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item5.1da86cb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item6.935530e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item7.bf00b038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item8.e50cc6c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item9.44698ead.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item10.2cf60cef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item11.d162fbe5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item12.0bcfb4c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snackbar.a17d7683.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clothesstore.5d863b13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/supermarket.1313f5be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drugstore.4fbc8e73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop.bd3dee77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cardealer.9341f232.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a34b0cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/casino.701d6832.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jewelrystore.e2f62912.jpg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.75e0546a.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.d7c133b0.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.ada3efe7.png\";","module.exports = __webpack_public_path__ + \"static/media/uitgemoord.89bc3b35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hacker.010dc613.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bulletfactory.e58e7c97.png\";","module.exports = __webpack_public_path__ + \"static/media/airport.72e68404.png\";","module.exports = __webpack_public_path__ + \"static/media/bank.94332498.png\";","module.exports = __webpack_public_path__ + \"static/media/casino.63f60844.png\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop.0f0755bd.png\";","module.exports = __webpack_public_path__ + \"static/media/junkies.c17461b4.png\";","module.exports = __webpack_public_path__ + \"static/media/garage.6bda310e.png\";","module.exports = __webpack_public_path__ + \"static/media/gym.8d563841.png\";","module.exports = __webpack_public_path__ + \"static/media/hospital.77df0a1e.png\";","module.exports = __webpack_public_path__ + \"static/media/house2.a0265669.png\";","module.exports = __webpack_public_path__ + \"static/media/headquarter.e93c6de6.png\";","module.exports = __webpack_public_path__ + \"static/media/jail.138d3d71.png\";","module.exports = __webpack_public_path__ + \"static/media/sexshop.7153d904.png\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a34b0cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cars.a3f3b108.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/shootout.f88bc10f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}