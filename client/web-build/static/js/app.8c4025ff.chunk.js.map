{"version":3,"sources":["assets/icon.png","assets/map/market.png","assets/map/shop.png","assets/profession/thief.jpg","assets/profession/carthief.jpg","assets/profession/weedgrower.jpg","assets/profession/killer.jpg","assets/profession/pimp.jpg","assets/profession/banker.jpg","assets/profession/jailbreaker.jpg","src/Constants.js","src/Util.js","src/components/AlertProvider.js","src/components/ConnectionProvider.js","src/components/IntervalProvider.js","src/Style.js","src/components/Button.js","src/components/T.js","src/components/LoginModal.js","src/layout/Logic.js","src/layout/MapUtil.js","src/components/Chat.js","src/components/Countdown.js","src/components/Dead.js","src/components/Fly.js","src/components/Jail.js","src/components/User.js","src/layout/ActionsBar.js","src/layout/MapIcon.js","src/layout/BottomTabs.js","src/react-native-bottom-sheet/contexts/internal.ts","src/react-native-bottom-sheet/hooks/useBottomSheetInternal.ts","src/react-native-bottom-sheet/hooks/useScrollableInternal.ts","src/react-native-bottom-sheet/hooks/useStableCallback.ts","src/react-native-bottom-sheet/hooks/useReactiveValue.ts","src/react-native-bottom-sheet/utilities/normalizeSnapPoints.ts","src/react-native-bottom-sheet/utilities/validateSnapPoint.ts","src/react-native-bottom-sheet/components/bottomSheetDraggableView/styles.ts","src/react-native-bottom-sheet/components/bottomSheetDraggableView/DraggableView.tsx","src/react-native-bottom-sheet/components/bottomSheetContentWrapper/BottomSheetContentWrapper.web.tsx","src/react-native-bottom-sheet/components/bottomSheetContentWrapper/index.ts","src/react-native-bottom-sheet/components/bottomSheetContainer/styles.ts","src/react-native-bottom-sheet/constants.ts","src/react-native-bottom-sheet/components/bottomSheetContainer/BottomSheetContainer.tsx","src/react-native-bottom-sheet/components/bottomSheetHandle/styles.ts","src/react-native-bottom-sheet/components/bottomSheetHandle/BottomSheetHandle.tsx","src/react-native-bottom-sheet/components/bottomSheetHandleContainer/BottomSheetHandleContainer.tsx","src/react-native-bottom-sheet/components/bottomSheetBackground/styles.ts","src/react-native-bottom-sheet/components/bottomSheetBackground/BottomSheetBackground.tsx","src/react-native-bottom-sheet/components/bottomSheetBackgroundContainer/styles.ts","src/react-native-bottom-sheet/components/bottomSheetBackgroundContainer/BottomSheetBackgroundContainer.tsx","src/react-native-bottom-sheet/components/bottomSheet/useTransition.ts","src/react-native-bottom-sheet/hooks/useReactiveValues.ts","src/react-native-bottom-sheet/contexts/external.ts","src/react-native-bottom-sheet/contexts/modal.ts","src/react-native-bottom-sheet/components/bottomSheet/constants.ts","src/react-native-bottom-sheet/components/bottomSheet/styles.ts","src/react-native-bottom-sheet/components/bottomSheet/BottomSheet.tsx","src/react-native-bottom-sheet/hooks/usePropsValidator.ts","src/react-native-bottom-sheet/hooks/useScrollable.ts","src/react-native-bottom-sheet/hooks/useNormalizedSnapPoints.ts","src/react-native-bottom-sheet/components/flatList/styles.ts","src/react-native-bottom-sheet/components/flatList/FlatList.tsx","src/react-native-bottom-sheet/components/sectionList/styles.ts","src/react-native-bottom-sheet/components/sectionList/SectionList.tsx","src/react-native-bottom-sheet/components/scrollView/styles.ts","src/react-native-bottom-sheet/components/scrollView/ScrollView.tsx","src/react-native-bottom-sheet/components/view/styles.ts","src/react-native-bottom-sheet/components/view/View.tsx","src/react-native-bottom-sheet/components/touchables/index.ts","src/react-native-bottom-sheet/components/overlay/styles.ts","src/react-native-bottom-sheet/components/overlay/Overlay.tsx","src/react-native-bottom-sheet/components/bottomSheetModal/BottomSheetModal.tsx","src/react-native-bottom-sheet/components/bottomSheetModal/constants.ts","src/react-native-bottom-sheet/components/bottomSheetModalContainer/BottomSheetModalContainer.tsx","src/layout/Guy.js","src/layout/IntroOrInfo.js","src/components/HoverState.js","src/components/Hoverable.js","src/layout/Menus.js","src/layout/Modal.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Shop.js","src/screens/AirplaneShop.js","src/screens/Backfire.js","src/screens/Bank.js","src/screens/Blocks.js","src/components/Captcha.js","src/screens/Bulletfactory.js","src/screens/Bunker.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/components/ShareButtons.js","src/screens/Channel.js","src/components/Separator.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/ChooseProfession.js","src/screens/Code.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateOC.js","src/screens/CreateRobbery.js","src/screens/CreateStreetrace.js","src/screens/Crimes.js","src/screens/Detectives.js","src/screens/Donate.js","src/screens/EstateAgent.js","src/screens/ForgotPassword.js","src/components/MarkdownEditor.js","src/components/Tabs.js","src/screens/Forum.js","src/screens/Gang.js","src/components/H1.js","src/screens/GangAchievements.js","src/components/Content.js","src/screens/GangBulletFactory.js","src/screens/GangCreate.js","src/screens/GangMissions.js","src/screens/Gangs.js","src/screens/GangSettings.js","src/screens/GangShop.js","src/screens/Garage.js","src/screens/GarageShop.js","src/screens/Gym.js","src/screens/Hoeren.js","src/screens/Hospital.js","src/screens/Income.js","src/components/Menu.js","src/screens/Info.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/Lotto.js","src/screens/ManageObject.js","src/screens/Market.js","src/screens/Members.js","src/screens/MollieComplete.js","src/screens/MyObjects.js","src/screens/MyProfile.js","src/screens/OC.js","src/screens/Poker.js","src/components/Gang.js","src/screens/Police.js","src/screens/Privacy.js","src/screens/Prizes.js","src/screens/Profile.js","src/screens/Properties.js","src/screens/ProtectionShop.js","src/screens/Racecars.js","src/screens/RecoverPassword.js","src/screens/Reports.js","src/screens/Rob.js","src/screens/Robbery.js","src/screens/Settings.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/Sint.js","src/screens/Stats.js","src/screens/Status.js","src/screens/StealCar.js","src/screens/StockExchange.js","src/screens/Streetrace.js","src/screens/SwissBank.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/WeaponShop.js","src/screens/Wiet.js","src/components/Checkbox.js","src/layout/Screen.js","src/screens/Work.js","src/layout/StatsHeader.js","src/updateHook.js","src/layout/Overlay.js","src/layout/Map.js","src/layout/Container.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","node_modules/moment/locale sync /^/.//.*$","assets/map/house2.png","assets/map/headquarter.png","assets/map/bulletfactory.png","assets/map/airport.png","assets/map/bank.png","assets/map/casino.png","assets/map/coffeeshop.png","assets/map/junkies.png","assets/map/garage.png","assets/map/gym.png","assets/map/hospital.png","assets/map/jail.png","assets/map/sexshop.png","assets/dood.jpg","assets/gangster3.png","assets/whatsapp.png","assets/robbery/snackbar.jpg","assets/robbery/clothesstore.jpg","assets/robbery/supermarket.jpg","assets/robbery/drugstore.jpg","assets/robbery/coffeeshop.jpg","assets/robbery/cardealer.jpg","assets/robbery/bank.jpg","assets/robbery/casino.jpg","assets/robbery/jewelrystore.jpg","assets/uitgemoord.jpg","assets/gangshop/item1.jpg","assets/gangshop/item2.jpg","assets/gangshop/item3.jpg","assets/gangshop/item4.jpg","assets/gangshop/item5.jpg","assets/gangshop/item6.jpg","assets/gangshop/item7.jpg","assets/gangshop/item8.jpg","assets/gangshop/item9.jpg","assets/gangshop/item10.jpg","assets/gangshop/item11.jpg","assets/gangshop/item12.jpg","assets/bank.jpg","assets/cars.jpeg","assets/shootout.jpeg","assets/politie.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["module","exports","Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","Captcha","loginToken","useState","Math","random","setRandom","uri","View","style","flexDirection","Image","source","marginLeft","width","height","TouchableOpacity","onPress","MaterialCommunityIcons","name","size","color","withCaptcha","needCaptcha","getText","alertAlert","setCode","text","textInput","keyboardType","component","InactiveScreens","ACTIONS_BEFORE_ROBBERY","ACTIONS_BEFORE_DETECTIVES","ACTIONS_BEFORE_BOMB","ACTIONS_BEFORE_CASINO","ACTIONS_BEFORE_BUNKER","ACTIONS_BEFORE_HOSPITAL","ACTIONS_BEFORE_RACECARS","ACTIONS_BEFORE_STREETRACE","ACTIONS_AMOUNT_NEW","ACTIONS_BEFORE_ROB","ACTIONS_BEFORE_ROB_KILL_MENU","ACTIONS_BEFORE_KILL","ACTIONS_BEFORE_BULLETFACTORY","ACTIONS_BEFORE_MARKET","ACTIONS_BEFORE_AIRPORT","DAYS_NEW","ACTIONS_BEFORE_POLICE","HAPPY_HOUR_RELEASE_DATE","moment","set","BLOCKS_RELEASE_DATE","PROFESSIONS_RELEASE_DATE","STOCK_MARKET_RELEASE_DATE","LOTTO_RELEASE_DATE","OC_RELEASE_DATE","DETECTIVES_RELEASE_DATE","GANG_MISSIONS_RELEASE_DATE","GANG_BULLET_FACTORY_RELEASE_DATE","PRIZES_NORMAL_RELEASE_DATE","GANG_RELEASE_DATE","MARKET_RELEASE_DATE","PRIZES_RELEASE_DATE","POLICE_RELEASE_DATE","ROBBERY_RELEASE_DATE","WORK_RELEASE_DATE","get","post","ColorLuminance","hex","lum","String","length","c","i","rgb","parseInt","substr","round","min","max","lighterHex","getUserColor","item","theme","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","properties","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","prevExp","nowRank","diff","progress","percentage","getRank","getStrength","AlertContext","React","createContext","AlertProvider","children","alerts","setAlerts","value","setValue","textInputRef","useRef","theAlert","current","focus","alert","useCallback","title","message","buttons","options","log","newAlerts","map","includes","push","Provider","position","top","bottom","left","right","backgroundColor","justifyContent","alignItems","borderRadius","padding","Text","fontWeight","fontSize","textAlign","TextInput","onChangeText","ref","button","flex","borderRightColor","borderRightWidth","shift","filter","lenth","ConnectionProviderScreen","fetchWithTimeout","didTimeOut","Promise","resolve","reject","timeout","setTimeout","Error","clearTimeout","err","props","setIsConnected","Platform","OS","this","unsubscribe","NetInfo","addEventListener","state","isConnected","interval","setInterval","SafeAreaView","Component","connect","device","dispatch","IntervalContext","IntervalProvider","screenProps","me","reloadMe","token","setToken","intervalReloadMe","intervalMovements","sendMovements","clearInterval","movements","resetIntervalsForToken","withInterval","ChildComponent","Consumer","context","intervals","StyleSheet","create","secondaryText","secondary","paddingHorizontal","marginVertical","container","margin","isSmall","Dimensions","Button","icon","font","disabled","textStyle","TheIcon","Icon","useSelector","marginRight","T","bold","LoginModal","navigation","locale","setName","setResponse","email","setEmail","password","setPassword","setError","success","setSuccess","phone","setPhone","view","setView","code","changeName","login","introLevel","useContext","primary","alignSelf","Entypo","id","ActivityIndicator","placeholder","placeholderTextColor","secondaryTextSoft","secureTextEntry","md5","str_md5","responseJson","flexWrap","navigate","textDecorationLine","Logic","reloadChannels","AppState","handleAppStateChange","turnOnNotifications","sendLanguage","removeEventListener","fetchChannelsubs","nextAppState","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","navigator","language","ExpoConstants","isDevice","Permissions","existingStatus","status","finalStatus","pushtoken","ExpoNotifications","data","result","characters","charactersLength","charAt","floor","makeid","logged","_handleNotificationResponse","notification","request","content","handleChange","foregrounded","StoreReview","available","Helmet","property","objects","image","aspectRatio","to","selectBuilding","city","cityAreas","setZoom","setSelected","animate","objectIndex","object","hasSeenInfo","setHasSeenInfo","getObjectMeta","latitude","longitude","zoom","deltaLatitude","deltaLongitude","panTo","lat","lng","animateToRegion","latitudeDelta","longitudeDelta","rgbs","getZoom","delta","ceil","LN2","DEFAULT_CITY","animateToCity","delayZoom","animationTime","zoom2","doZoom","animateToWorld","shouldRenderCities","region","terri","areas","centerLatitude","centerLongitude","biggestDeltaLatitude","topLeftLatitude","topLeftLongitude","bottomRightLatitude","bottomRightLongitude","topRightLongitude","bottomLeftLatitude","square","bounds","east","south","north","west","platformBounds","radius","MessageInput","getChat","input","setInput","onSubmitEditing","nativeEvent","chat","location","reload","Chat","setChat","routeName","allText","useMemo","borderWidth","borderColor","select","web","default","numberOfLines","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","Countdown","memo","until","timeToShow","timeLabels","onFinish","digitStyle","digitTxtStyle","newTimeLeft","Date","finished","setFinished","setTimeLeft","timeLeft","label","format","isEqual","whyDidYouRender","Dead","selected","ScrollView","option","setState","Fly","onFinishCallback","reizenAt","mm","ss","Jail","jail","renderItem","jailAt","m","s","buyOut","fetchMembers","order","FlatList","ListHeaderComponent","renderHeader","User","user","isOnline","onlineAt","extraIcon","level","country","thumbnail","gang","ActionsBar","setLoading","reloadCities","selectedArea","reloadAreas","useDispatch","bombAction","inactive","bombAt","siteUrl","Linking","openURL","airplane","bombs","captcha","iconName","takeOverAction","manageAction","resetTo","incomeAction","postGetIncome","allActions","casino","isSelected","badgeAmount","isBefore","bulletFactory","bulletFactoryPrice","bullets","amount","gangId","isNew","add","airport","bank","hospital","house","year","month","date","landlord","junkies","rld","headquarter","gym","garage","market","weaponShop","estateAgent","stockExchange","area","userId","airplanes","areaId","damage","statsActions","online","moreActions","citiesActions","canChooseCity","actions","horizontal","zIndex","action","requestAnimationFrame","marginHorizontal","minWidth","MapIcon","hitSlop","marginBottom","isActive","onLongPress","badgeCount","BottomTabs","dragAndDropMode","setDragAndDropMode","chatBadgeCount","territoriesBadgeCount","crimesBadgeCount","gameBadgeCount","showActionSheetWithOptions","useActionSheet","pointerEvents","popToTop","o","cancelButtonIndex","destructiveButtonIndex","buttonIndex","v","BottomSheetInternalContext","BottomSheetInternalProvider","useBottomSheetInternal","useScrollableInternal","scrollableContentOffsetYRef","scrollableContentOffsetY","useValue","scrollableRef","_scrollableContentOffsetY","setScrollableRef","removeScrollableRef","handleScrollEvent","event","contentOffset","y","handleSettingScrollable","findNodeHandle","node","getNode","warn","useCode","onChange","call","useStableCallback","callback","callbackRef","memoCallback","useReactiveValue","Animated","Value","normalizeSnapPoints","snapPoints","containerHeight","topInset","snapPoint","invariant","Number","validateSnapPoint","styles","BottomSheetDraggableView","nativeGestureRef","gestureType","rest","panGestureRef","enableContentPanningGesture","containerTapGestureRef","handlePanGestureState","handlePanGestureTranslationY","handlePanGestureVelocityY","contentPanGestureState","contentPanGestureTranslationY","contentPanGestureVelocityY","simultaneousHandlers","containerStyle","handleGestureEvent","translationY","velocityY","enabled","shouldCancelWhenOutside","onGestureEvent","onHandlerStateChange","ContentWrapperComponent","forwardRef","initialMaxDeltaY","maxDurationMs","maxDeltaY","BottomSheetContentWrapper","GESTURE","absoluteFillObject","BottomSheetContainer","shouldMeasureHeight","onMeasureHeight","handleOnLayout","layout","onLayout","windowWidth","indicator","BottomSheetHandle","BottomSheetHandleContainer","animatedIndex","animatedPosition","enableHandlePanningGesture","_providedHandleComponent","handleComponent","shouldRenderHandle","renderHandle","HandleComponent","borderTopLeftRadius","borderTopRightRadius","BottomSheetBackground","BottomSheetBackgroundContainer","_providedBackgroundComponent","backgroundComponent","BackgroundComponent","useTransition","isLayoutCalculated","animationDuration","animationEasing","_snapPoints","currentIndexRef","initialPosition","onAnimate","isReady","currentGesture","UNDETERMINED","currentPosition","values","lastValue","useReactiveValues","isPanningContent","eq","State","ACTIVE","isPanningHandle","isPanning","or","shouldAnimate","manualSnapToPoint","clock","useClock","config","toValue","easing","animationState","frameTime","time","finishTiming","stopClock","translateY","cond","CONTENT","multiply","isAnimationInterrupted","and","clockRunning","neq","block","HANDLE","not","greaterOrEq","lessOrEq","END","_toValue","_animatedSnapPoints","currentIndex","nextIndex","indexOf","startClock","timing","BottomSheetContext","BottomSheetProvider","BottomSheetModalContext","EasingV1","Easing","EasingNode","DEFAULT_ANIMATION_EASING","out","NORMAL_DECELERATION_RATE","ios","android","contentContainer","debug","debugText","interpolateV1","interpolate","interpolateNode","windowHeight","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","usePropsValidator","_providedIndex","_providedSnapPoints","_providedHandleHeight","handleHeight","_providedContainerHeight","animateOnMount","_providedAnimatedPosition","_providedAnimatedIndex","_providedOnChange","_providedOnAnimate","setContainerHeight","setHandleHeight","safeHandleHeight","safeContainerHeight","shouldMeasureContainerHeight","shouldMeasureHandleHeight","didSetHandleHeight","didSetContainerHeight","didMountOnAnimate","previousScrollableRef","scrollToTop","scrollToOffset","animated","offset","scrollTo","sections","scrollToLocation","itemIndex","sectionIndex","viewPosition","viewOffset","flashScrollableIndicators","flashScrollIndicators","useScrollable","normalizedSnapPoint","useNormalizedSnapPoints","sheetHeight","useTapGestureHandler","containerTapGestureState","containerTapGestureHandler","gestureHandler","usePanGestureHandler","translation","velocity","handlePanGestureHandler","handleOnAnimate","fromIndex","toIndex","adjustedSnapPoints","slice","reverse","adjustedSnapPointsIndexes","_","inputRange","outputRange","extrapolate","Extrapolate","CLAMP","abs","sub","greaterThan","handleOnContainerMeasureHeight","handleOnHandleMeasureHeight","refreshUIElements","currentPositionIndex","setNativeProps","handleOnChange","handleSettingScrollableRef","handleSnapTo","handleClose","handleExpand","handleCollapse","internalContextVariables","externalContextVariables","snapTo","expand","collapse","close","useImperativeHandle","opacity","transform","contentContainerStyle","useLayoutEffect","FAILED","Code","exec","BottomSheet","AnimatedFlatList","createAnimatedComponent","RNFlatList","BottomSheetFlatListComponent","focusHook","useFocusHook","waitFor","overScrollMode","bounces","scrollEventThrottle","onScrollBeginDrag","AnimatedSectionList","RNSectionList","BottomSheetSectionListComponent","AnimatedScrollView","RNScrollView","BottomSheetScrollViewComponent","onScroll","reset","TouchableHighlight","TouchableWithoutFeedback","animatedOpacity","BottomSheetModalComponent","configs","unmount","_initialSnapIndex","_animatedIndex","allowTouchThroughOverlay","OverlayComponent","overlayComponent","overlayOpacity","dismissOnOverlayPress","dismissOnScrollDown","bottomSheetProps","bottomSheetRef","isTemporaryClosing","lastSheetPosition","animatedOverlayOpacity","initialSnapIndex","overlayPointerEvents","handleTemporaryCloseSheet","handleRestoreSheetPosition","handleOverlayPress","temporaryCloseSheet","restoreSheetPosition","BottomSheetModal","BottomSheetModalContainerComponent","sheets","setSheets","currentPresentedSheet","previousPresentedSheet","didHandleRestorePreviousSheet","unmountSheet","uniqueId","splice","sheetIndex","_sheets","Object","keys","reduce","handlePresent","createRef","handleDismiss","handleDismissAll","present","dismiss","dismissAll","renderSheets","Guy","onClose","visible","window","handleSheetChanges","resizeMode","IntroOrInfo","intros","shouldOpen","upLevel","intro","guyText","guyVisible","isEnabled","canUseDOM","lastTouchTimestamp","disableHover","document","Hoverable","onHoverIn","onHoverOut","isHovered","setHovered","showHover","setShowHover","child","cloneElement","Children","only","onMouseEnter","e","onMouseLeave","onResponderGrant","onResponderRelease","onPressIn","onPressOut","displayName","propTypes","oneOfType","func","element","isHappyHour","isSunday","day","is7pm","hour","isAfter","leftMenu","stealcarSeconds","autostelenAt","crimeSeconds","crimeAt","attackSeconds","attackAt","robSeconds","robAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","robberySeconds","robberyAt","ocSeconds","ocAt","header","isHeader","iconType","numActions","buildingType","adminMenu","gameMod","betaTester","admin","rightMenu","channels","allAreasMenus","goToArea","last10ChannelsMenus","channel","channelsubs","find","unread","params","subid","renderMenu","setSelectedAreaIndex","isCurrent","TouchOrView","specialColor","gangMembers","owner","isYours","isGang","hasDamage","hasProfit","incomeJunkies","junkiesIncomeAt","incomeLandlord","landlordIncomeAt","incomeRLD","rldIncomeAt","incomeToGet","jailPrisoners","gymTrain","connectedArea","profit","movement","locationX","locationY","timestamp","biggestDelta","borderBottomWidth","paddingLeft","minHeight","Menus","menu","leftActive","setLeftActive","rightActive","setRightActive","menuShown","Accordion","expandMultiple","activeSections","active","section","renderContent","Modal","headerHeight","keyboardHeight","setKeyboardHeight","keyboardWillShowListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","Keyboard","addListener","keyboardWillShow","keyboardWillHide","remove","endCoordinates","keydown","keyCode","defaultBottom","history","goBack","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","setId","setUser","setActions","setMovements","getActions","ip","previous","marginTop","Shop","fetchCities","fetchShop","becomeOwner","t","buy","keyValue","cash","swissBank","next","price","AirplaneShop","MyProfile","backfire","bf","Bank","deposit","row","Blocks","blocks","setBlocks","getBlocks","user2id","postRemoveBlock","onChangeCaptcha","onChangeRandom","Bulletfactory","cities","becomeOwnerResponse","setBecomeOwnerResponse","setBullets","setCaptcha","bulletFactoryOwner","bulletFactoryProfit","paddingVertical","borderBottomColor","bulletFactoryDamage","Bunker","renderFooter","keyExtractor","extraData","ListFooterComponent","ChangeName","ChangePassword","password1","password2","ImageInput","hasEdited","getPermissionAsync","_pickImage","loading","ImagePicker","mediaTypes","All","allowsEditing","aspect","base64","cancelled","ImageManipulator","resize","PNG","manipulated","manipulatedBase64","SIZE","small","Ionicons","ShareButtons","url","facebookShareUrl","isBigDevice","Footer","fetchChat","setImage","setMessage","setHasEdited","send","cid","multiline","STYLE","ChatScreen","isFetching","setIsFetching","Array","isArray","initialNumToRender","isMe","avatar","IMAGE_SIZE","isSystem","maxWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","isShareable","refreshControl","refreshing","onRefresh","inverted","Separator","blocksReleaseDate","openMenu","isBlockButtonActive","openGeneralMenu","isBlocksActive","channelTitle","channelThumbnail","channelOtherUserId","lastmessage","lastmessageDate","startOf","ItemSeparatorComponent","connectActionSheet","Gangs","PROFESSIONS","canChooseProfession","profession","postChooseProfession","param","phoneVerified","Tabs","tabs","tab","CreateOc","reloadOcs","racecars","setRacecars","numParticipants","setNumParticipants","setType","car","setCar","cars","TabInput","auto","racecar","power","carId","RobberyTypes","cost","difficulty","seconds","Robbery","robbery","CreateRobbery","reloadRobberies","prize","CreateStreetrace","reloadStreetraces","setPrice","setPrize","Crimes","kans","maxChance","kans2","submit","Detectives","detectives","setDetectives","getDetectives","detective","createdAt","valueOf","Donate","openActionSheet","names","wiet","hoeren","gamepoints","EstateAgent","Login","MarkdownEditor","selection","setSelection","handleChoosePhoto","quality","pic","path","before","substring","start","end","after","fontStyle","newSelection","onSelectionChange","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","updatedAt","responses","renderNew","renderTopics","profile","GangMember","gangLevel","getGangLevel","health","Header","postGangJoin","myGangId","totalHealth","users","members","score","Gang","setItem","H1","GangAchievements","setResult","achievements","stats","AntDesign","UIManager","setLayoutAnimationEnabledExperimental","getData","AsyncStorage","getItem","Content","contentWidth","expanded","setExpanded","isExpanded","LayoutAnimation","linear","GangBulletFactory","shifts","setShifts","morning","evening","night","underachievers","getShifts","renderShiftUser","totalShiftsDone","generates","initialCost","dailyCost","postGangBuyBulletFactory","GangCreate","GangMissions","getGangMissions","isPrestige","mission","startButton","postGangStartMission","what","amountPerMember","isEnded","isSucceeded","amountDone","gangs","setGangs","invites","setInvites","getGangs","getInvites","requests","postGangAnswerInvite","accepted","invite","gangName","numColumns","GangSettings","setRequests","setGang","username","setUsername","setProfile","isBullets","setIsBullets","setAmount","getGang","getGangInvites","postGangAnswerJoin","postGangTransaction","isToUser","postGangLeave","postGangRemove","changeRank","postGangSetRank","member","postGangKick","GangShop","prices","items","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","MARGIN","itemId","postGangShop","Garage","fetchGroups","carGroups","bulkAction","upgradeCar","renderGroup","kogels","GarageShop","Gym","strength","Hoeren","Hospital","heal","Income","withAlert","Menu","IconFont","PrivacyPage","components","en","nl","strings","ListEmptyComponent","Junkies","Kill","kill","Lotto","lottoDay","lottoWeek","lottoMonth","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","profitKey","priceKey","ownerKey","damageKey","Market","setMarket","setBuy","getMarket","validTypes","postMarketCreateOffer","offerId","postMarketRemoveOffer","isBuy","postMarketTransaction","filters","orders","setMembers","setSearch","orderBy","setOrderBy","setFilter","searchedMembers","toLowerCase","openActionSheetSort","openActionSheetFilter","orderKey","secondKey","MollieComplete","MyObjects","p","propertyString","bio","setBio","setBioCallback","Oc","ocs","RefreshControl","creator","ocParticipants","ocId","leave","Poker","poker","Config","onLinkPress","link","Prizes","prizes","setPrizes","when","every","endOf","forWhat","stat","paddingTop","prizeWhat","markdownItInstance","MarkdownIt","typographer","use","emoji","center","Bio","debugPrintTree","markdownit","rules","blocklink","parent","open","attributes","href","setWidth","setHeight","getSize","src","centertext","paragraph","textgroup","ProfileScreen","getProfile","hasImage","professionReleaseDate","ban","banReason","postReport","Properties","gridStyle","borderLeftColor","borderLeftWidth","suffix","field","fieldSuffix","formattedField","ProtectionShop","Racecars","fetchGarage","sellCar","crushCar","RecoverPassword","Reports","reports","setReports","getReports","rob","robberies","robberyParticipants","robberyId","Settings","__DEV__","hideMap","respones","activate","activationToken","Sint","minute","sintEndsAt","keyNames","newMembers","onlineToday","Stats","setStats","gameStats","setGameStats","snapToEnd","fromZero","labels","datasets","onlineLastHour","onlineLastDay","onDataPointClick","xAxisLabel","xLabelsOffset","yAxisLabel","yAxisSuffix","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","strokeWidth","stroke","bezier","protectionAt","StealCar","typeStart","StockExchange","Streetrace","streetraces","streetraceParticipants","streetraceId","SwissBank","swissBullets","bankOwner","bankProfit","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderBottomLeftRadius","borderBottomRightRadius","save","Creditshop","setItems","credits","kooptext","kosten","Mollie","SuperMessage","schedule","setSchedule","setDate","scheduled","setScheduled","setMessages","dates","setDates","getScheduled","Switch","onValueChange","msg","saveScheduled","VIP","setTab","WeaponShop","Wiet","Checkbox","screens","Channels","Profile","Members","Info","Police","AdminEmail","Backfire","Channel","ChooseProfession","Contribute","ForgotPassword","Forum","InfoGame","InfoRules","OC","Privacy","Rob","SignupEmail","SignupEmail2","Theme","VerifyPhone","VerifyPhoneCode","Work","hours","workEndsAt","Screen","screen","StatsHeader","updateAvailable","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","useExpoUpdate","notActivated","updateComponent","reloadAsync","renderNotVerified","Overlay","territoriesSwiperRefContainer","propertiesSwiperRefContainer","selectedAreaIndex","isSmallDevice","setHeaderHeight","territoriesSwiperChildren","territoriesSwiperKey","renderTerritoriesSwiper","controlsEnabled","from","onIndexChanged","propertiesSwiperFirstPage","swiper1Children","ownerProfile","selectedIndex","renderPropertiesSwiper","currentObject","StatusBar","currentHeight","skip","guyVisibleTitleStyle","renderTimers","bunkerAt","chats","mapStyle","mapStyleNight","citiesAreas","ReactMap","setMap","setMapReady","onLoad","google","maps","LatLngBounds","fitBounds","onUnmount","googleMapsApiKey","clickableIcons","mapContainerStyle","onZoomChanged","disableDefaultUI","featureType","elementType","stylers","visibility","Territories","territories","MapsComponent","number","onClick","fillColor","Polygon","tappable","coordinates","GameObjects","myName","peopleInJail","draggable","onPressObject","configureNext","Presets","spring","strokeColor","Marker","onDragEnd","coordinate","Circle","Map","setRegion","mapReady","objectsWithAnimated","goTo","reg","NativeMapsComponent","native","icons","rightObjects","renderGame","renderTerritories","renderCities","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","renderCrimes","sum","codePointAt","decimalHash","areaIndex","pseudoRandom","theIcon","renderAllMapObjects","shouldRenderTerritories","shouldRenderGame","renderOverlay","pitchEnabled","rotateEnabled","onMapReady","customMapStyle","initialRegion","onRegionChange","useNativeDriver","absoluteFill","initialNavigationState","Container","navigationState","setNavigationState","openWebUrl","getInitialURL","parts","newHistory","concat","pushState","pop","Api","fetchMe","payload","fetchStreetraces","fetchOcs","fetchRobberies","fetchAreas","fetchChannels","mySaga","put","takeLatest","initDevice","showNotificatonsHeader","initAreas","initChannels","storage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","RootContainer","ConnectionProvider","App","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__"],"mappings":"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CNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,EAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,kBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAIIE,EAAa,CACxB,CAAEzE,KAAM,iBACR,CAAEA,KAAM,UACR,CAAEA,KAAM,OACR,CAAEA,KAAM,YACR,CAAEA,KAAM,WACR,CAAEA,KAAM,cACR,CAAEA,KAAM,WACR,CAAEA,KAAM,eACR,CAAEA,KAAM,UACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,YACR,CAAEA,KAAM,UACR,CAAEA,KAAM,kBAGJ0E,EAAe,SAACJ,EAAMK,EAAYC,GACtC,IAAMC,EA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U,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/app.8c4025ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d2180cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/market.32e2d0f1.png\";","module.exports = __webpack_public_path__ + \"static/media/shop.a9cce2eb.png\";","module.exports = __webpack_public_path__ + \"static/media/thief.fa783e06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carthief.b6f3fdd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weedgrower.0b8f1c24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/killer.fef52faa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pimp.f2697d22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banker.1d9edc53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jailbreaker.a5d507ae.jpg\";","const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://192.168.1.100:4001\"; //192.168.1.38\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\", //https://apps.apple.com/us/app/mastercrimez/id1527333711?app=itunes\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Alert,\n  Dimensions,\n  Image,\n  Platform,\n  ScaledSize,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Captcha = ({ loginToken }) => {\n  const [random, setRandom] = useState(Math.random());\n\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${loginToken}`;\n\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      <Image\n        source={{ uri }}\n        style={{ marginLeft: 20, width: 150, height: 50 }}\n      />\n      <TouchableOpacity onPress={() => setRandom(Math.random())}>\n        <MaterialCommunityIcons name=\"reload\" size={32} color=\"black\" />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport const withCaptcha = (\n  loginToken,\n  needCaptcha,\n  getText,\n  alertAlert,\n  setCode\n) => {\n  if (needCaptcha) {\n    alertAlert(\n      getText(\"fillInCaptcha\"),\n      getText(\"pleaseFillInCaptcha\"),\n      [\n        {\n          text: getText(\"ok\"),\n          onPress: setCode,\n        },\n      ],\n      {\n        key: \"captcha\",\n        textInput: true,\n        keyboardType: \"numeric\",\n        component: <Captcha loginToken={loginToken} />,\n      }\n    );\n  } else {\n    setCode(null);\n  }\n};\n\nexport const InactiveScreens = {\n  ACTIONS_BEFORE_ROBBERY: 120,\n  ACTIONS_BEFORE_DETECTIVES: 30,\n  ACTIONS_BEFORE_BOMB: 60,\n  ACTIONS_BEFORE_CASINO: 70,\n  ACTIONS_BEFORE_BUNKER: 20,\n  ACTIONS_BEFORE_HOSPITAL: 30,\n  ACTIONS_BEFORE_RACECARS: 80,\n  ACTIONS_BEFORE_STREETRACE: 80,\n  ACTIONS_AMOUNT_NEW: 10,\n  ACTIONS_BEFORE_ROB: 20,\n  ACTIONS_BEFORE_ROB_KILL_MENU: 20,\n  ACTIONS_BEFORE_KILL: 30,\n  ACTIONS_BEFORE_BULLETFACTORY: 40,\n  ACTIONS_BEFORE_MARKET: 50,\n  ACTIONS_BEFORE_AIRPORT: 30,\n  DAYS_NEW: 14,\n  ACTIONS_BEFORE_POLICE: 100,\n\n  HAPPY_HOUR_RELEASE_DATE: moment(\"01/01/2022\", \"DD/MM/YYYY\").set(\"hour\", 17),\n  BLOCKS_RELEASE_DATE: moment(\"15/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17),\n  PROFESSIONS_RELEASE_DATE: moment(\"15/03/2021\", \"DD/MM/YYYY\").set(\"hour\", 17),\n  STOCK_MARKET_RELEASE_DATE: moment(\"15/09/2021\", \"DD/MM/YYYY\").set(\"hour\", 17),\n\n  LOTTO_RELEASE_DATE: moment(\"01/07/2021\", \"DD/MM/YYYY\").set(\"hour\", 17),\n  OC_RELEASE_DATE: moment(\"15/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  DETECTIVES_RELEASE_DATE: moment(\"01/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  GANG_MISSIONS_RELEASE_DATE: moment(\"01/05/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_BULLET_FACTORY_RELEASE_DATE: moment(\"15/08/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  PRIZES_NORMAL_RELEASE_DATE: moment(\"01/12/2020\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_RELEASE_DATE: moment(\"30/11/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  MARKET_RELEASE_DATE: moment(\"15/12/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  PRIZES_RELEASE_DATE: moment(\"01/02/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  POLICE_RELEASE_DATE: moment(\"01/08/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  ROBBERY_RELEASE_DATE: moment(\"15/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  //happy hour 1 feb\n\n  WORK_RELEASE_DATE: moment(\"15/04/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport function ColorLuminance(hex, lum) {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  var rgb = \"#\",\n    c,\n    i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += (\"00\" + c).substr(c.length);\n  }\n\n  return rgb;\n}\n\nexport const lighterHex = (hex) => ColorLuminance(hex, 0.2);\nexport const darkerHex = (hex) => ColorLuminance(hex, -0.2);\n\nexport const getUserColor = (item, theme) =>\n  item?.creditsTotal >= 10000\n    ? \"red\"\n    : item?.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nexport const properties = [\n  { name: \"bulletFactory\" },\n  { name: \"casino\" },\n  { name: \"rld\" },\n  { name: \"landlord\" },\n  { name: \"junkies\" },\n  { name: \"weaponShop\" },\n  { name: \"airport\" },\n  { name: \"estateAgent\" },\n  { name: \"garage\" },\n  { name: \"jail\" },\n  { name: \"bank\" },\n  { name: \"gym\" },\n  { name: \"hospital\" },\n  { name: \"market\" },\n  { name: \"stockExchange\" },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nexport const AlertContext = React.createContext({});\n\nexport const AlertProvider = ({ children }) => {\n  const [alerts, setAlerts] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const getText = getTextFunction(); //TODO: Provide me?.locale\n\n  const textInputRef = useRef(null);\n\n  const theAlert = alerts[0];\n  useEffect(() => {\n    textInputRef.current?.focus();\n  }, [textInputRef, alerts.length]);\n\n  const alert = useCallback(\n    (title, message, buttons, options) => {\n      setValue(\"\");\n\n      console.log(\"lengte\", alerts.length);\n\n      // alerts copy.\n      const newAlerts = [...alerts];\n      if (!alerts.map((x) => x.options.key).includes(options.key)) {\n        newAlerts.push({ title, message, buttons, options });\n      }\n      //NB: copy needed!!!\n      setAlerts([...newAlerts]);\n    },\n    [setValue, alerts, setAlerts]\n  );\n\n  return (\n    <AlertContext.Provider value={alert}>\n      {children}\n      {alerts.length > 0 ? (\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: theAlert.options?.textInput ? 200 : 0,\n            left: 0,\n            right: 0,\n            backgroundColor: \"rgba(0,0,0,0.3)\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: \"#DDD\",\n              borderRadius: 20,\n              width: \"80%\",\n              alignItems: \"center\",\n            }}\n          >\n            {(theAlert.title || theAlert.message) && (\n              <View style={{ padding: 20 }}>\n                {theAlert.title && (\n                  <Text\n                    style={{\n                      fontWeight: \"bold\",\n                      fontSize: 18,\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {theAlert.title}\n                  </Text>\n                )}\n                {theAlert.message && (\n                  <Text style={{ textAlign: \"center\" }}>\n                    {theAlert.message}\n                  </Text>\n                )}\n              </View>\n            )}\n\n            {theAlert.options?.component && (\n              <View style={{ padding: 20 }}>{theAlert.options.component}</View>\n            )}\n\n            {theAlert.options?.textInput && (\n              <View style={{ padding: 20, width: \"100%\" }}>\n                <TextInput\n                  value={value}\n                  onChangeText={setValue}\n                  ref={textInputRef}\n                  style={{\n                    fontSize: 18,\n                    backgroundColor: \"white\",\n                    width: \"100%\",\n                    borderRadius: 3,\n                    padding: 3,\n                  }}\n                  keyboardType={theAlert.options?.keyboardType}\n                />\n              </View>\n            )}\n\n            <View\n              style={{ width: \"100%\", height: 1, backgroundColor: \"#BBB\" }}\n            />\n\n            {theAlert.buttons ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  width: \"100%\",\n                }}\n              >\n                {theAlert.buttons.map((button, index) => (\n                  <TouchableOpacity\n                    key={`${theAlert.options.key}button${index}`}\n                    style={{\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      height: 40,\n                      flex: 1,\n                      borderRightColor: \"#BBB\",\n                      borderRightWidth:\n                        index < theAlert.buttons.length - 1 ? 1 : 0,\n                    }}\n                    onPress={() => {\n                      const newAlerts = [...alerts];\n                      newAlerts.shift();\n\n                      console.log(\"newAlerts\", newAlerts.length);\n\n                      // NB: we need to make a copy here, otherwise it has the same reference and the component thinks that it didn't change.\n                      setAlerts([...newAlerts]);\n\n                      setValue(\"\");\n\n                      button.onPress?.(value);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: \"blue\",\n                        fontSize: 18,\n                      }}\n                    >\n                      {button.text}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            ) : (\n              <TouchableOpacity\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 40,\n                }}\n                onPress={() => {\n                  const newAlerts = alerts.filter(\n                    (x) => x.options.key !== theAlert.options.key\n                  );\n\n                  console.log(\"newAlerts\", newAlerts.lenth);\n\n                  // NB: we need to make a copy here, otherwise it has the same reference and the component thinks that it didn't change.\n                  setAlerts([...newAlerts]);\n                }}\n              >\n                <Text style={{ color: \"blue\", fontSize: 18 }}>\n                  {getText(\"ok\")}\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      ) : null}\n    </AlertContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withAlert = (ChildComponent) => (props) => (\n  <AlertContext.Consumer>\n    {(context) => <ChildComponent {...props} alert={context} />}\n  </AlertContext.Consumer>\n);\n","import NetInfo from \"@react-native-community/netinfo\";\nimport React from \"react\";\nimport { Platform, SafeAreaView, Text, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Constants from \"../Constants\";\n\nconst CONNECTION_GOOD = 2;\nconst CONNECTION_BAD = 1;\nconst CONNECTION_NONE = 0;\n\nclass ConnectionProviderScreen extends React.Component {\n  componentDidMount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe = NetInfo.addEventListener((state) => {\n        // console.log(\"Connection type\", state.type);\n        // console.log(\"Is connected?\", state.isConnected);\n        this.props.setIsConnected(\n          state.isConnected ? CONNECTION_GOOD : CONNECTION_NONE\n        );\n      });\n    }\n\n    this.interval = setInterval(this.fetchWithTimeout, 5000);\n\n    // To unsubscribe to these update, just use:\n  }\n\n  fetchWithTimeout = () => {\n    const FETCH_TIMEOUT = 5000;\n    let didTimeOut = false;\n\n    new Promise(function (resolve, reject) {\n      const timeout = setTimeout(function () {\n        didTimeOut = true;\n        reject(new Error(\"Request timed out\"));\n      }, FETCH_TIMEOUT);\n\n      fetch(Constants.SERVER_ADDR + \"/healthcheck\")\n        .then(function (response) {\n          // Clear the timeout as cleanup\n          clearTimeout(timeout);\n          if (!didTimeOut) {\n            // console.log(\"fetch good! \");\n            resolve(response);\n          }\n        })\n        .catch(function (err) {\n          // console.log(\"fetch failed! \", err);\n\n          // Rejection already happened with setTimeout\n          if (didTimeOut) return;\n          // Reject with error\n          reject(err);\n        });\n    })\n      .then(() => {\n        // Request success and no timeout\n        this.props.setIsConnected(CONNECTION_GOOD);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        this.props.setIsConnected(CONNECTION_BAD);\n        // Error: response error, request timeout or runtime error\n      });\n  };\n\n  componentWillUnmount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe();\n    }\n    clearTimeout(this.interval);\n  }\n\n  render() {\n    const { children, isConnected } = this.props;\n\n    return (\n      <View style={{ flex: 1 }}>\n        {isConnected !== CONNECTION_GOOD && (\n          <View\n            style={{\n              backgroundColor:\n                isConnected === CONNECTION_BAD ? \"orange\" : \"red\",\n              padding: 15,\n            }}\n          >\n            <SafeAreaView>\n              <Text style={{ color: \"white\" }}>\n                {isConnected === CONNECTION_BAD ? \"Slechte\" : \"Geen\"}{\" \"}\n                internetverbinding!\n              </Text>\n            </SafeAreaView>\n          </View>\n        )}\n        {children}\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isConnected: state.device.isConnected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setIsConnected: (isConnected) =>\n    dispatch({ type: \"SET_IS_CONNECTED\", value: isConnected }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectionProviderScreen);\n","import React, { useEffect, useState } from \"react\";\nimport { post } from \"../Util\";\n\nexport const IntervalContext = React.createContext({});\nexport const IntervalProvider = ({\n  children,\n  screenProps: { me, dispatch, device, reloadMe },\n}) => {\n  const [token, setToken] = useState(device.loginToken);\n\n  useEffect(() => {\n    if (token) {\n      const intervalReloadMe = setInterval(() => {\n        // console.log(\"This will run every 5 seconds! TOKEN:\", token);\n        reloadMe(device.loginToken);\n      }, 5000);\n\n      const intervalMovements = setInterval(() => {\n        // console.log(\"This will run every 60 seconds! TOKEN:\");\n        sendMovements();\n      }, 60000);\n\n      return () => {\n        // console.log(\"clearing interval because token changed\");\n        clearInterval(intervalReloadMe);\n        clearInterval(intervalMovements);\n      };\n    }\n  }, [token]);\n\n  const sendMovements = () => {\n    // console.log(\"sendMovements\", device.loginToken);\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  };\n\n  return (\n    <IntervalContext.Provider\n      value={{\n        resetIntervalsForToken: (token) => setToken(token),\n      }}\n    >\n      {children}\n    </IntervalContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withInterval = (ChildComponent) => (props) => (\n  <IntervalContext.Consumer>\n    {(context) => <ChildComponent {...props} intervals={context} />}\n  </IntervalContext.Consumer>\n);\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport { useSelector } from \"react-redux\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nconst Button = ({ icon, font, title, onPress, disabled, style, textStyle }) => {\n  const TheIcon = font && icon ? Icon[font] : View;\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity onPress={disabled ? undefined : onPress}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: disabled ? `${theme.secondary}55` : theme.secondary,\n          padding: 10,\n          justifyContent: \"center\",\n          paddingHorizontal: isSmall ? 5 : 20,\n          // borderRadius: 20,\n          ...style,\n        }}\n      >\n        {font && icon ? (\n          <View style={{ marginRight: 20 }}>\n            <TheIcon name={icon} color={theme.secondaryText} size={20} />\n          </View>\n        ) : null}\n\n        {title && (\n          <Text\n            style={[\n              { textAlign: \"center\", color: theme.secondaryText },\n              textStyle,\n            ]}\n          >\n            {title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport { IntervalContext } from \"./IntervalProvider\";\nimport T from \"./T\";\n\nconst LoginModal = ({\n  screenProps: {\n    dispatch,\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n  navigation,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [phone, setPhone] = useState(\"\");\n  const [view, setView] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const changeName = async () => {\n    const { response, success } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    setResponse(response);\n\n    return success;\n  };\n\n  const login = () => {\n    dispatch({ type: \"SET_LOGGED\", value: true });\n    if (device.introLevel === 1) {\n      dispatch({ type: \"UP_INTRO_LEVEL\" });\n    }\n  };\n  useEffect(() => {\n    setName(me?.name);\n  }, [me?.name]);\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n  const postVerifyPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n          resetIntervalsForToken(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postLogin = () => {\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        if (responseJson.error) {\n          setError(responseJson.error);\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n          reloadMe(responseJson.loginToken);\n          setError(null);\n          setSuccess(responseJson.success);\n          resetIntervalsForToken(responseJson.token);\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postSetPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token: device.loginToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          setView(\"code\");\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderEmailPassLogin = () => (\n    <View>\n      <View\n        style={{\n          margin: 20,\n          padding: 20,\n          borderRadius: 20,\n        }}\n      >\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\n\n        {success ? (\n          <Text style={{ color: \"green\" }}>{success}</Text>\n        ) : (\n          <View>\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n              <TextInput\n                placeholder={getText(\"email\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                onChangeText={setEmail}\n                value={email}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n              <TextInput\n                secureTextEntry\n                onChangeText={setPassword}\n                value={password}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <View />\n\n              <Button\n                theme={theme}\n                title={getText(\"login\")}\n                onPress={() => postLogin()}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n\n                  navigation.navigate(\"SignupEmail\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"register\")}\n                </Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n                  navigation.navigate(\"ForgotPassword\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"forgotPassword\")}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n  const renderCode = () => (\n    <View>\n      {response && <T>{response}</T>}\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n        <TextInput\n          placeholder=\"000000\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setCode}\n          value={code}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button title={getText(\"validate\")} onPress={() => postVerifyPhone()} />\n      </View>\n    </View>\n  );\n  const renderPhoneLogin = () => (\n    <View>\n      {response && <T>{response}</T>}\n\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n        <TextInput\n          placeholder=\"+31\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setPhone}\n          value={phone}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button\n          theme={theme}\n          title={getText(\"save\")}\n          onPress={() => postSetPhone()}\n        />\n      </View>\n    </View>\n  );\n  const renderMain = () => (\n    <View>\n      {/* Option 1: Just play */}\n      {response && <T>{response}</T>}\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"youAre\")}</T>\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={[style(theme).textInput, { marginLeft: 10 }]}\n          placeholder={getText(\"name\")}\n          value={name}\n          onChangeText={setName}\n        />\n      </View>\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"justPlay\")}\n        onPress={async () => {\n          if (!me) {\n            setResponse(getText(\"waitUntilLoaded\"));\n            return;\n          }\n          if (name !== me?.name) {\n            const success = await changeName();\n            if (success) {\n              reloadMe(device.loginToken);\n\n              login();\n            }\n          } else {\n            login();\n          }\n        }}\n      />\n      {/* Option 2: Login with email */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithEmail\")}\n        onPress={() => setView(\"emailPass\")}\n      />\n      {/* Option 3: Login with phone number */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithPhone\")}\n        onPress={() => setView(\"phone\")}\n      />\n    </View>\n  );\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: \"rgba(0,0,0,0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: 20,\n          padding: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={view !== null ? () => setView(null) : login}\n          style={{ alignSelf: \"flex-end\" }}\n        >\n          <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n        </TouchableOpacity>\n\n        {!me?.id ? <ActivityIndicator /> : null}\n\n        {view === \"emailPass\"\n          ? renderEmailPassLogin()\n          : view === \"phone\"\n          ? renderPhoneLogin()\n          : view === \"code\"\n          ? renderCode()\n          : renderMain()}\n      </View>\n    </View>\n  );\n};\n\nexport default LoginModal;\n","import ExpoConstants from \"expo-constants\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport * as StoreReview from \"expo-store-review\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { AppState, NativeModules, Platform, View } from \"react-native\";\nimport { IntervalContext } from \"../components/IntervalProvider\";\nimport LoginModal from \"../components/LoginModal\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nconst Logic = ({\n  children,\n  screenProps,\n  navigation,\n  screenProps: { device, dispatch, me, reloadMe, reloadChannels },\n}) => {\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n  const getText = getTextFunction(me?.locale);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleAppStateChange);\n    turnOnNotifications();\n    sendLanguage();\n\n    return () => AppState.removeEventListener(\"change\", handleAppStateChange);\n  }, []);\n\n  useEffect(() => {\n    fetchChannelsubs();\n\n    const interval = setInterval(() => fetchChannelsubs(), 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchChannelsubs = () => {\n    reloadChannels(device.loginToken);\n  };\n\n  const handleAppStateChange = (nextAppState) => {\n    //giving token udefined will not set an interval on the next token\n    if (nextAppState === \"background\") {\n      resetIntervalsForToken(undefined);\n    }\n\n    if (nextAppState === \"active\") {\n      turnOnNotifications();\n      resetIntervalsForToken(device.loginToken);\n      sendLanguage();\n    }\n  };\n\n  const sendLanguage = () => {\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  const turnOnNotifications = async () => {\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        dispatch({ type: \"SET_SHOW_NOTIFICATIONS_HEADER\", value: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await ExpoNotifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      dispatch({ type: \"SET_SHOW_NOTIFICATIONS_HEADER\", value: false });\n    }\n  };\n\n  doOnce(() => {\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n\n      resetIntervalsForToken(token);\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n  });\n\n  useEffect(() => {\n    reloadMe(device.loginToken);\n  }, [device.logged]);\n\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    //TODO: Fix dat hij naar chat redirect\n    // navigation.navigate(\"Channels\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          // console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const renderForWeb = () => (\n    <Helmet>\n      <title>MasterCrimeZ - The Ultimate Game</title>\n      <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n      <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n      <meta property=\"og:description\" content={getText(\"metaOgDescription\")} />\n      <meta property=\"og:image\" content=\"\" />\n    </Helmet>\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      {Platform.OS === \"web\" && renderForWeb()}\n      {children}\n\n      {!device.logged && (\n        <LoginModal navigation={navigation} screenProps={screenProps} />\n      )}\n    </View>\n  );\n};\n\nexport default Logic;\n","import moment from \"moment\";\nimport { Platform } from \"react-native\";\nexport const API_KEY = \"AIzaSyCOENphOkWqcrvmehHhhgKu7lJpwqfLQzc\";\n\nexport const OBJECT_SIZE_FACTOR = 4;\nexport const SIZE_FACTOR = 100;\n\nexport const objects = [\n  {\n    title: \"menuHouse\",\n    type: \"house\",\n    image: require(\"../../assets/map/house2.png\"),\n    size: 10,\n    aspectRatio: 783 / 500,\n  },\n\n  {\n    title: \"menuHeadquarter\",\n    type: \"headquarter\",\n    image: require(\"../../assets/map/headquarter.png\"),\n    size: 10,\n    aspectRatio: 202 / 182,\n  },\n\n  {\n    title: \"menuBulletfactory\",\n    type: \"bulletFactory\",\n    image: require(\"../../assets/map/bulletfactory.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n  {\n    title: \"menuAirport\",\n    type: \"airport\",\n    image: require(\"../../assets/map/airport.png\"),\n    size: 15,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuBank\",\n    type: \"bank\",\n    image: require(\"../../assets/map/bank.png\"),\n    size: 8,\n    aspectRatio: 200 / 235,\n  },\n\n  {\n    title: \"menuCasino\",\n    type: \"casino\",\n    image: require(\"../../assets/map/casino.png\"),\n    size: 20,\n    aspectRatio: 400 / 251,\n  },\n\n  {\n    title: \"menuCoffeeShop\",\n    type: \"landlord\",\n    image: require(\"../../assets/map/coffeeshop.png\"),\n    size: 10,\n    aspectRatio: 300 / 270,\n  },\n\n  {\n    title: \"menuSalvationArmy\",\n    type: \"junkies\",\n    image: require(\"../../assets/map/junkies.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuGarage\",\n    type: \"garage\",\n    image: require(\"../../assets/map/garage.png\"),\n    size: 10,\n    aspectRatio: 400 / 292,\n  },\n\n  {\n    title: \"menuGym\",\n    type: \"gym\",\n    to: \"Gym\",\n    image: require(\"../../assets/map/gym.png\"),\n    size: 10,\n    aspectRatio: 300 / 231,\n  },\n\n  {\n    title: \"menuHospital\",\n    type: \"hospital\",\n    to: \"Hospital\",\n    image: require(\"../../assets/map/hospital.png\"),\n    size: 10,\n    aspectRatio: 300 / 270,\n  },\n\n  {\n    title: \"menuJail2\",\n    type: \"jail\",\n    to: \"Jail\",\n    image: require(\"../../assets/map/jail.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuMarket\",\n    type: \"market\",\n    to: \"Market\",\n    image: require(\"../../assets/map/market.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n  {\n    title: \"menuWeaponShop\",\n    type: \"weaponShop\",\n    image: require(\"../../assets/map/shop.png\"),\n    size: 10,\n    aspectRatio: 300 / 262,\n  },\n\n  {\n    title: \"menuEstateAgent\",\n    type: \"estateAgent\",\n    to: \"EstateAgent\",\n    image: require(\"../../assets/map/shop.png\"),\n    size: 10,\n    aspectRatio: 300 / 262,\n  },\n\n  {\n    title: \"menuRLD\",\n    type: \"rld\",\n    image: require(\"../../assets/map/sexshop.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuStockExchange\",\n    type: \"stockExchange\",\n    to: \"StockExchange\",\n    image: require(\"../../assets/map/market.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n];\n\nexport const selectBuilding = ({\n  type,\n  city,\n  cityAreas,\n  map,\n  setZoom,\n  setView,\n  setSelected,\n  animate,\n  device,\n  dispatch,\n  getText,\n}) => {\n  const objectIndex = objects.findIndex((x) => x.type === type);\n  const object = objects[objectIndex];\n\n  console.log(\"hasseeninfo\", device.hasSeenInfo);\n  if (!device.hasSeenInfo[`${type}Building`]) {\n    dispatch({\n      type: \"SET_GUY_TEXT\",\n      setHasSeenInfo: `${type}Building`,\n      value: getText(`${type}BuildingInfo`),\n    });\n  }\n\n  if (animate) {\n    const {\n      latitude,\n      longitude,\n      zoom,\n      deltaLatitude,\n      deltaLongitude,\n    } = getObjectMeta({\n      city,\n      cityAreas,\n      index: objectIndex,\n      object,\n    });\n\n    if (latitude && longitude) {\n      if (Platform.OS === \"web\") {\n        map.panTo({\n          lat: latitude,\n          lng: longitude,\n        });\n\n        setZoom(zoom - 2);\n      } else {\n        map.animateToRegion({\n          latitude: latitude,\n          longitude: longitude,\n          latitudeDelta: deltaLatitude,\n          longitudeDelta: deltaLongitude,\n        });\n      }\n    }\n  }\n\n  setView(\"game\");\n  setSelected(type);\n};\nexport const rgbs = [\n  \"0,255,0\",\n  \"255,0,0\",\n  \"0,255,255\",\n  \"0,0,255\",\n  \"255,0,255\",\n  \"255,255,0\",\n  \"0,150,0\",\n  \"0,0,150\",\n];\n\nconst decimalHash = (string) => {\n  let sum = 0;\n  for (let i = 0; i < string.length; i++)\n    sum += ((i + 1) * string.codePointAt(i)) / (1 << 8);\n  return sum % 1;\n};\n\n// kies positiegetal deterministisch aan de hand van een string van moment().format(\"DD-MM-YY HH\") en index en type\nexport const getPosition = (id, type) => {\n  const string = moment().format(\"DD-MM-YY HH\") + id?.toString() + type;\n  return decimalHash(string);\n};\n\nexport const getZoom = (delta) => Math.ceil(Math.log(360 / delta) / Math.LN2);\n\nexport const DEFAULT_CITY = {\n  latitude: 52.378, //amsterdam\n  longitude: 4.89707,\n  delta: 0.3,\n};\n\nexport const animateToCity = ({\n  map,\n  dispatch,\n  city,\n  delayZoom,\n  zoom,\n  animationTime,\n}) => {\n  if (Platform.OS === \"web\") {\n    const zoom2 = zoom ? zoom : getZoom(city?.delta || DEFAULT_CITY.delta);\n    console.log(\"animateTocity\", zoom2);\n\n    const doZoom = () => dispatch({ type: \"SET_ZOOM\", value: zoom2 });\n\n    if (delayZoom) {\n      setTimeout(() => doZoom(), 2000);\n    } else {\n      doZoom();\n    }\n    map?.panTo({\n      lat: city?.latitude || DEFAULT_CITY.latitude,\n      lng: city?.longitude || DEFAULT_CITY.longitude,\n    });\n  } else {\n    map?.animateToRegion(\n      {\n        latitude: city?.latitude || DEFAULT_CITY.latitude,\n        longitude: city?.longitude || DEFAULT_CITY.longitude,\n        latitudeDelta: city?.delta || DEFAULT_CITY.delta * 1.2,\n        longitudeDelta: city?.delta || DEFAULT_CITY.delta * 1.2,\n      },\n      animationTime\n    );\n  }\n};\n\nexport const animateToWorld = ({ map, dispatch, city }) => {\n  if (Platform.OS === \"web\") {\n    const doZoom = () => dispatch({ type: \"SET_ZOOM\", value: 3 });\n\n    doZoom();\n\n    map?.panTo({\n      lat: city.latitude,\n      lng: city.longitude,\n    });\n  } else {\n    map?.animateToRegion({\n      latitude: city.latitude,\n      longitude: city.longitude,\n      latitudeDelta: 100,\n      longitudeDelta: 100,\n    });\n  }\n};\n\nexport const shouldRenderCities = (device, region) =>\n  Platform.OS === \"web\" ? device.map.zoom < 5 : region.latitudeDelta > 3;\nexport const getObjectMeta = ({ object, index, city, cityAreas }) => {\n  let latitude = city?.[`${object.type}Latitude`];\n  let longitude = city?.[`${object.type}Longitude`];\n\n  if (!latitude || !longitude) {\n    const terri = cityAreas.areas[index % (cityAreas.areas.length - 1)];\n    latitude = terri.centerLatitude;\n    longitude = terri.centerLongitude;\n  }\n\n  const deltaLatitude =\n    (city?.delta * object.size) / object.aspectRatio / SIZE_FACTOR; //width\n  const deltaLongitude = (city?.delta * object.size) / SIZE_FACTOR;\n\n  const biggestDeltaLatitude =\n    deltaLatitude > deltaLongitude ? deltaLatitude : deltaLongitude;\n  const topLeftLatitude = latitude - deltaLatitude / 2;\n  const topLeftLongitude = longitude - deltaLongitude / 2;\n  const bottomRightLatitude = latitude + deltaLatitude / 2;\n  const bottomRightLongitude = longitude + deltaLongitude / 2;\n\n  const topRightLatitude = latitude + deltaLatitude / 2;\n  const topRightLongitude = longitude - deltaLongitude / 2;\n  const bottomLeftLatitude = latitude - deltaLatitude / 2;\n  const bottomLeftLongitude = longitude + deltaLongitude / 2;\n\n  const square = [\n    { latitude: topLeftLatitude, longitude: topLeftLongitude },\n    { latitude: topRightLatitude, longitude: topRightLongitude },\n    {\n      latitude: bottomRightLatitude,\n      longitude: bottomRightLongitude,\n    },\n    { latitude: bottomLeftLatitude, longitude: bottomLeftLongitude },\n  ];\n\n  const bounds = {\n    east: bottomRightLongitude,\n    south: bottomLeftLatitude,\n    north: bottomRightLatitude,\n    west: topRightLongitude,\n  };\n\n  const platformBounds =\n    Platform.OS === \"ios\"\n      ? [\n          [topLeftLatitude, topLeftLongitude],\n          [bottomRightLatitude, bottomRightLongitude],\n        ]\n      : [\n          [bottomRightLatitude, topLeftLongitude],\n          [topLeftLatitude, bottomRightLongitude],\n        ];\n\n  const radius = biggestDeltaLatitude * 50000;\n\n  const zoom = getZoom(biggestDeltaLatitude);\n  return {\n    latitude,\n    longitude,\n    deltaLatitude,\n    deltaLongitude,\n    biggestDeltaLatitude,\n    radius,\n    zoom,\n    square,\n    bounds,\n    platformBounds,\n  };\n};\n","import React, { Fragment, useEffect, useMemo, useState } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { doOnce, getTextFunction } from \"../Util\";\n\nconst MessageInput = ({ device, locale, getChat }) => {\n  const getText = getTextFunction(locale);\n  const [input, setInput] = useState(\"\");\n\n  return (\n    <TextInput\n      value={input}\n      placeholder={getText(\"chatYourMessage\")}\n      style={{\n        backgroundColor: \"#404040\",\n        fontSize: 20,\n        color: \"white\",\n        flex: 1,\n        width: 100,\n      }}\n      onChangeText={setInput}\n      onSubmitEditing={({ nativeEvent: { text } }) => {\n        fetch(`${Constants.SERVER_ADDR}/chat`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            token: device.loginToken,\n            message: text,\n          }),\n        })\n          .then((response) => response.json())\n          .then((chat) => {\n            getChat();\n\n            if (Platform.OS === \"web\") {\n              location.reload();\n            }\n\n            setInput(\"\");\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }}\n    />\n  );\n};\nconst Chat = ({ device, navigation, me }) => {\n  const [chat, setChat] = useState([]);\n\n  const getChat = () => {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        setChat(chat);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  doOnce(() => getChat());\n\n  useEffect(() => {\n    getChat();\n  }, [navigation.state.routeName]);\n\n  // const renderChat = () => {\n  //   return chat.map((item, index) => (\n  //     <Text key={`item${index}`}>\n  //       <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n  //       {item.message}&nbsp;&nbsp;\n  //     </Text>\n  //   ));\n  // };\n\n  const allText = chat\n    .map((item) => `${item.name}${item.message}`)\n    .join(\"::::\");\n\n  const key = useMemo(() => `chat${Math.random().toString()}`, [\n    navigation.state.routeName,\n  ]);\n\n  return (\n    <View key={key}>\n      <View\n        style={{\n          width: \"100%\",\n          backgroundColor: \"#444\",\n          borderWidth: 1,\n          borderColor: \"black\",\n          flexDirection: Platform.select({ web: \"row\", default: undefined }),\n        }}\n      >\n        {Platform.select({\n          web: (\n            <View style={{ flex: 1, justifyContent: \"center\" }}>\n              {allText ? (\n                <Ticker>\n                  {({ index }) => {\n                    return (\n                      <>\n                        {chat.map((item, index) => (\n                          <Text\n                            style={{ color: \"white\" }}\n                            numberOfLines={1}\n                            key={`item${index}`}\n                          >\n                            <TouchableOpacity\n                              onPress={() => {\n                                navigation.navigate(\"Profile\", {\n                                  name: item.name,\n                                });\n                              }}\n                            >\n                              <Text style={{ fontWeight: \"bold\" }}>\n                                {item.name}\n                              </Text>\n                            </TouchableOpacity>\n                            :&nbsp;{item.message}&nbsp;&nbsp;\n                          </Text>\n                        ))}\n                      </>\n                    );\n                  }}\n                </Ticker>\n              ) : null}\n            </View>\n          ),\n\n          default: (\n            <MarqueeText\n              style={{ fontSize: 20 }}\n              duration={allText.length * 50}\n              marqueeOnStart\n              loop\n              marqueeDelay={200}\n              marqueeResetDelay={1000}\n            >\n              <>\n                {chat.map((item, index) => (\n                  <Fragment key={`item${index}`}>\n                    <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                    :&nbsp;{item.message}&nbsp;&nbsp;\n                  </Fragment>\n                ))}\n              </>\n            </MarqueeText>\n          ),\n        })}\n        <View style={{ width: 100, height: 30 }}>\n          <MessageInput locale={me?.locale} device={device} getChat={getChat} />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Chat;\n","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport isEqual from \"react-fast-compare\";\nimport { Text, View } from \"react-native\";\n\nconst Countdown = React.memo(function CountdownPure({\n  until,\n  timeToShow,\n  timeLabels,\n  size,\n  onFinish,\n  digitStyle,\n  digitTxtStyle,\n  style,\n}) {\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const newTimeLeft = until - Date.now();\n      if (newTimeLeft < 0) {\n        if (!finished) {\n          setFinished(true);\n          onFinish?.();\n        }\n      }\n      setTimeLeft(newTimeLeft);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n  const [timeLeft, setTimeLeft] = useState(until - Date.now());\n  const [finished, setFinished] = useState(false);\n\n  return (\n    <View style={[{ flexDirection: \"row\" }, style]}>\n      {timeToShow.map((label) => {\n        return (\n          <View key={label} style={[{ paddingHorizontal: 5 }, digitStyle]}>\n            <Text\n              style={[\n                { color: \"white\", fontWeight: \"bold\", fontSize: size },\n                digitTxtStyle,\n              ]}\n            >\n              {timeLeft < 0 ? \"00\" : moment(timeLeft).format(label)}\n            </Text>\n            {timeLabels?.[label] && (\n              <Text style={[{ color: \"white\" }, digitTxtStyle]}>\n                {timeLabels?.[label]}\n              </Text>\n            )}\n          </View>\n        );\n      })}\n    </View>\n  );\n},\nisEqual);\n\nCountdown.whyDidYouRender = true;\n\nexport default Countdown;\n","import React from \"react\";\nimport { Image, ScrollView, Text, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n        >\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Dead;\n","import React, { useCallback } from \"react\";\nimport { Text, View } from \"react-native\";\nimport CountDown from \"../components/Countdown\";\nimport { getTextFunction } from \"../Util\";\n\nconst Fly = ({ screenProps: { me, device, reloadMe } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const onFinishCallback = useCallback(() => {\n    reloadMe(device.loginToken);\n  }, [reloadMe, device.loginToken]);\n\n  return (\n    <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text style={{ color: device.theme.primaryText }}>\n        {getText(\"flyYoureTravelingTo\", me?.city)}\n      </Text>\n      <CountDown\n        until={me?.reizenAt}\n        onFinish={onFinishCallback}\n        size={20}\n        timeToShow={[\"mm\", \"ss\"]}\n        timeLabels={{ mm: getText(\"minutes\"), ss: getText(\"seconds\") }}\n      />\n    </View>\n  );\n};\n\nexport default Fly;\n","import React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"../components/Countdown\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\nclass Jail extends React.Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n\n    const { reloadMe, device } = this.props.screenProps;\n    this.interval = setInterval(() => {\n      reloadMe(device.loginToken);\n      this.fetchMembers();\n    }, 2500);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clear interval jail\");\n    clearInterval(this.interval);\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={item.jailAt}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          size={8}\n          timeToShow={[\"mm\", \"ss\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n      </View>\n    );\n  };\n\n  buyOut = async (type) => {\n    const { device, reloadMe } = this.props.screenProps;\n    const { response } = await post(\"buyout\", {\n      token: device.loginToken,\n      type,\n    });\n    this.setState({ response });\n    reloadMe(device.loginToken);\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { response } = this.state;\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <T>{getText(\"jailYoureInJail\")}</T>\n\n        <CountDown\n          until={me.jailAt}\n          size={20}\n          timeToShow={[\"mm\", \"ss\"]}\n          timeLabels={{ mm: getText(\"minutes\"), ss: getText(\"seconds\") }}\n        />\n\n        <View style={{ height: 15 }} />\n\n        {response && <T>{response}</T>}\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCredits\")}\n          onPress={() => this.buyOut(\"credits\")}\n        />\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCash\")}\n          onPress={() => this.buyOut(\"cash\")}\n        />\n\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport { getLocale, getUserColor } from \"../Util\";\nimport T from \"./T\";\n\nconst User = ({ user, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const color = getUserColor(user, theme);\n  const isOnline = (Date.now() - user.onlineAt) / 60000 < 5;\n\n  const extraIcon =\n    user.level === 2\n      ? \"💼\"\n      : user.level === 3\n      ? \"🕶\"\n      : user.level === 10\n      ? \"🤓\"\n      : null;\n\n  const country = getLocale(user.locale) === \"nl\" ? \"🇳🇱\" : \"🌍\";\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Profile\", { name: user.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {user.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + user.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n        <View style={{ position: \"absolute\", top: 0, right: 0 }}>\n          <T>{isOnline ? \"✅\" : \"🛑\"}</T>\n        </View>\n\n        {extraIcon && (\n          <View style={{ position: \"absolute\", bottom: 0, right: 0 }}>\n            <T>{extraIcon}</T>\n          </View>\n        )}\n\n        {user.gang && user.gang.thumbnail && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: -0.1 * size,\n              left: -0.1 * size,\n            }}\n          >\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + user.gang.thumbnail }}\n              style={{\n                width: size / 2,\n                height: size / 2,\n                borderRadius: size / 4,\n              }}\n            />\n          </View>\n        )}\n\n        <View style={{ position: \"absolute\", bottom: 0, left: 0 }}>\n          <T>{country}</T>\n        </View>\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T style={{ color }}>{user.name}</T>\n        {user.gang && <T>{user.gang.name}</T>}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default User;\n","import * as Icon from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport {\n  Linking,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Countdown from \"../components/Countdown\";\nimport {\n  getTextFunction,\n  InactiveScreens,\n  lighterHex,\n  post,\n  withCaptcha,\n} from \"../Util\";\nimport { animateToCity, animateToWorld } from \"./MapUtil\";\n\nconst ActionsBar = ({\n  selected,\n  city,\n  me,\n  device,\n  navigation,\n  setLoading,\n  reloadMe,\n  reloadCities,\n  selectedArea,\n  reloadAreas,\n  view,\n  map,\n  shouldRenderCities,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const alertAlert = React.useContext(AlertContext);\n\n  const dispatch = useDispatch();\n  const bombAction = (type) => ({\n    inactive: !city?.[`${type}Owner`] || city?.[`${type}Owner`] === me?.name,\n    text: getText(\"bombard\"),\n    onPress: () => {\n      if (me?.bombAt + 300000 > Date.now()) {\n        alertAlert(\n          getText(\"bombWait\"),\n          getText(\"bombWaitText\"),\n          [\n            {\n              text: getText(\"ok\"),\n              onPress: () => {\n                const text = getText(\n                  \"bombAskOnWhatsAppText\",\n                  getText(type),\n                  me?.city,\n                  city?.[`${type}Damage`]\n                );\n                const siteUrl = \"https://mastercrimez.com\";\n                Linking.openURL(\n                  Platform.OS === \"web\"\n                    ? `https://wa.me/?text=${text} ${siteUrl}`\n                    : `whatsapp://send?text=${text} ${siteUrl}`\n                );\n              },\n            },\n            { text: getText(\"cancel\") },\n          ],\n          { key: \"bombWait\" }\n        );\n      } else {\n        const airplanes = [\n          \"\",\n          \"Fokker\",\n          \"Fleet\",\n          \"Havilland\",\n          \"Cessna\",\n          \"Douglas\",\n          \"Lear Jet\",\n          \"Raket\",\n        ];\n\n        alertAlert(\n          getText(\"fillInBombs\"),\n          me?.airplane === 0\n            ? getText(\"bombNoAirplane\")\n            : getText(\n                \"bombAirplaneText\",\n                airplanes[me?.airplane],\n                me?.airplane * 5\n              ),\n          [\n            {\n              text: getText(\"ok\"),\n              onPress: (bombs) => {\n                withCaptcha(\n                  device.loginToken,\n                  me?.needCaptcha,\n                  getText,\n                  alertAlert,\n                  async (captcha) => {\n                    setLoading(true);\n                    const { response } = await post(\"bomb\", {\n                      loginToken: device.loginToken,\n                      bombs,\n                      type,\n                      captcha,\n                    });\n                    setLoading(false);\n                    reloadMe(device.loginToken);\n                    alertAlert(response, null, null, { key: \"bombResponse\" });\n                    reloadCities();\n                  }\n                );\n              },\n            },\n            {\n              text: getText(\"cancel\"),\n            },\n          ],\n          { key: \"bomb\", textInput: true, keyboardType: \"numeric\" }\n        );\n      }\n    },\n    icon: Icon.FontAwesome,\n    iconName: \"bomb\",\n    component: me?.bombAt + 300000 > Date.now() && (\n      <Countdown\n        until={me?.bombAt + 300000}\n        timeToShow={[\"mm\", \"ss\"]}\n        size={10}\n      />\n    ),\n  });\n  const takeOverAction = (type) => ({\n    inactive: !!city?.[`${type}Owner`],\n    text: getText(\"takeOver\"),\n    onPress: async () => {\n      const { response } = await post(\"becomeOwner\", {\n        city: me?.city,\n        type,\n        token: device.loginToken,\n      });\n      reloadCities();\n      reloadMe(device.loginToken);\n      alertAlert(response, null, null, { key: \"becomeOwnerResponse\" });\n    },\n    icon: Icon.MaterialCommunityIcons,\n    iconName: \"account-arrow-left\",\n  });\n  const manageAction = (type) => ({\n    inactive: city?.[`${type}Owner`] !== me?.name,\n    text: getText(\"manage\"),\n    onPress: () => navigation.resetTo(\"ManageObject\", { type, city: me?.city }),\n    icon: Icon.Ionicons,\n    iconName: \"md-settings\",\n  });\n\n  const postGetIncome = async (type, captcha) => {\n    setLoading(true);\n    const { response } = await post(\"income\", {\n      token: device.loginToken,\n      captcha,\n      type,\n    });\n\n    setLoading(false);\n\n    reloadMe(device.loginToken);\n    reloadCities();\n    alertAlert(response, null, null, { key: \"incomeResponse\" });\n  };\n  const incomeAction = (type) => ({\n    text: getText(\"getIncome\"),\n    onPress: () =>\n      withCaptcha(\n        device.loginToken,\n        me?.needCaptcha,\n        getText,\n        alertAlert,\n        (code) => postGetIncome(type, code)\n      ),\n    icon: Icon.FontAwesome5,\n    iconName: \"money-bill-wave\",\n  });\n\n  const allActions = {\n    casino: () => [\n      {\n        text: getText(\"poker\"),\n        onPress: () => navigation.resetTo(\"Poker\"),\n        isSelected: navigation.state.routeName === \"Poker\",\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"poker-chip\",\n        badgeAmount: 0,\n      },\n      {\n        inactive:\n          me?.level < 2 &&\n          InactiveScreens.LOTTO_RELEASE_DATE.isBefore(moment()),\n        text: getText(\"lotto\"),\n        onPress: () => navigation.resetTo(\"Lotto\"),\n        isSelected: navigation.state.routeName === \"Lotto\",\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"cash-100\",\n        badgeAmount: 0,\n      },\n      bombAction(\"casino\"),\n      takeOverAction(\"casino\"),\n      manageAction(\"casino\"),\n    ],\n    bulletFactory: () => [\n      {\n        text: getText(\"buyBullets\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"factory\",\n        onPress: () => {\n          alertAlert(\n            getText(\"buyBullets\"),\n            getText(\"bulletsText\", city?.bulletFactoryPrice, city?.bullets),\n            [\n              {\n                text: getText(\"ok\"),\n                onPress: (amount) => {\n                  withCaptcha(\n                    device.loginToken,\n                    me?.needCaptcha,\n                    getText,\n                    alertAlert,\n                    async (captcha) => {\n                      setLoading(true);\n                      const { response } = await post(\"buyBullets\", {\n                        loginToken: device.loginToken,\n                        amount,\n                        captcha,\n                      });\n                      setLoading(false);\n                      reloadMe(device.loginToken);\n                      reloadCities();\n                      alertAlert(response, null, null, {\n                        key: \"buyBulletsResponse\",\n                      });\n                    }\n                  );\n                },\n              },\n              {\n                text: getText(\"cancel\"),\n              },\n            ],\n            { key: \"buyBullets\", textInput: true, keyboardType: \"numeric\" }\n          );\n        },\n        badgeAmount: city?.bullets,\n      },\n\n      {\n        text: getText(\"menuGangBulletfactory\"),\n        icon: Icon.FontAwesome,\n        iconName: \"group\",\n        onPress: () => navigation.resetTo(\"GangBulletFactory\"),\n        isSelected: navigation.state.routeName === \"GangBulletFactory\",\n        badgeAmount: 0,\n\n        inactive:\n          !me?.gangId ||\n          (me?.level < 2 &&\n            moment().isBefore(\n              InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE\n            )),\n        isNew: moment().isBefore(\n          moment(InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE).add(\n            InactiveScreens.DAYS_NEW,\n            \"days\"\n          )\n        ),\n      },\n      bombAction(\"bulletFactory\"),\n      takeOverAction(\"bulletFactory\"),\n      manageAction(\"bulletFactory\"),\n    ],\n    airport: () => [\n      {\n        text: getText(\"menuAirport\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-airplane\",\n        onPress: () => {\n          animateToWorld({ map, dispatch, city });\n        },\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuAirplaneShop\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-airplane\",\n        isSelected: navigation.state.routeName === \"AirplaneShop\",\n        onPress: () => navigation.resetTo(\"AirplaneShop\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"airport\"),\n      takeOverAction(\"airport\"),\n      manageAction(\"airport\"),\n    ],\n\n    bank: () => [\n      {\n        text: getText(\"menuBank\"),\n        icon: Icon.FontAwesome,\n        iconName: \"bank\",\n        isSelected: navigation.state.routeName === \"Bank\",\n        onPress: () => navigation.resetTo(\"Bank\"),\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuSwissBank\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"money-bill\",\n        onPress: () => navigation.resetTo(\"SwissBank\"),\n        isSelected: navigation.state.routeName === \"SwissBank\",\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuDonate\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"donate\",\n        onPress: () => navigation.resetTo(\"Donate\"),\n        isSelected: navigation.state.routeName === \"Donate\",\n        badgeAmount: 0,\n      },\n\n      bombAction(\"bank\"),\n      takeOverAction(\"bank\"),\n      manageAction(\"bank\"),\n    ],\n\n    hospital: () => [\n      {\n        text: getText(\"menuHospital\"),\n        icon: Icon.Entypo,\n        iconName: \"heart\",\n        onPress: () => navigation.resetTo(\"Hospital\"),\n        isSelected: navigation.state.routeName === \"Hospital\",\n\n        badgeAmount: 0,\n      },\n      bombAction(\"hospital\"),\n      takeOverAction(\"hospital\"),\n      manageAction(\"hospital\"),\n    ],\n    house: () => [\n      {\n        text: getText(\"menuStatus\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-stats\",\n        onPress: () => navigation.resetTo(\"Status\"),\n        isSelected: navigation.state.routeName === \"Status\",\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuBunker\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"castle\",\n        onPress: () => navigation.resetTo(\"Bunker\"),\n        isSelected: navigation.state.routeName === \"Bunker\",\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuSint\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"shoe-formal\",\n        onPress: () => navigation.resetTo(\"Sint\"),\n        isSelected: navigation.state.routeName === \"Sint\",\n        badgeAmount: 0,\n        inactive:\n          me?.level < 2 &&\n          !(\n            moment().year() > 2020 &&\n            ((moment().month() === 10 && moment().date() > 15) ||\n              (moment().month() === 11 && moment().date() < 6))\n          ),\n      },\n    ],\n\n    landlord: () => [\n      incomeAction(\"landlord\"),\n      bombAction(\"landlord\"),\n      takeOverAction(\"landlord\"),\n      manageAction(\"landlord\"),\n    ],\n    junkies: () => [\n      incomeAction(\"junkies\"),\n      bombAction(\"junkies\"),\n      takeOverAction(\"junkies\"),\n      manageAction(\"junkies\"),\n    ],\n    rld: () => [\n      incomeAction(\"rld\"),\n      bombAction(\"rld\"),\n      takeOverAction(\"rld\"),\n      manageAction(\"rld\"),\n    ],\n\n    headquarter: () => [\n      {\n        text: getText(\"menuGangCreate\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangCreate\"),\n        isSelected: navigation.state.routeName === \"GangCreate\",\n\n        badgeAmount: 0,\n        inactive: !!me?.gangId,\n      },\n      {\n        text: getText(\"menuGangSettings\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangSettings\"),\n        isSelected: navigation.state.routeName === \"GangSettings\",\n\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n\n      {\n        text: getText(\"menuGangShop\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangShop\"),\n        isSelected: navigation.state.routeName === \"GangShop\",\n\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n\n      {\n        text: getText(\"menuGangAchievements\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangAchievements\"),\n        isSelected: navigation.state.routeName === \"GangAchievements\",\n\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n      {\n        inactive:\n          !me?.gangId ||\n          (me?.level < 2 &&\n            moment().isBefore(InactiveScreens.GANG_MISSIONS_RELEASE_DATE)),\n        isNew: moment().isBefore(\n          moment(InactiveScreens.GANG_MISSIONS_RELEASE_DATE).add(\n            InactiveScreens.DAYS_NEW,\n            \"days\"\n          )\n        ),\n        text: getText(\"menuGangMissions\"),\n        isSelected: navigation.state.routeName === \"GangMissions\",\n\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangMissions\"),\n        badgeAmount: 0,\n      },\n    ],\n    gym: () => [\n      {\n        text: getText(\"menuGym\"),\n        icon: Icon.Ionicons,\n        iconName: \"md-fitness\",\n        onPress: () => navigation.resetTo(\"Gym\"),\n        isSelected: navigation.state.routeName === \"Gym\",\n\n        badgeAmount: 0,\n      },\n      bombAction(\"gym\"),\n      takeOverAction(\"gym\"),\n      manageAction(\"gym\"),\n    ],\n    garage: () => [\n      {\n        text: getText(\"menuGarage\"),\n        icon: Icon.FontAwesome,\n        iconName: \"car\",\n        onPress: () => navigation.resetTo(\"Garage\"),\n        isSelected: navigation.state.routeName === \"Garage\",\n\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuRacecars\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"car\",\n        onPress: () => navigation.resetTo(\"Racecars\"),\n        isSelected: navigation.state.routeName === \"Racecars\",\n\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuGarageShop\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"garage\",\n        onPress: () => navigation.resetTo(\"GarageShop\"),\n        isSelected: navigation.state.routeName === \"GarageShop\",\n\n        badgeAmount: 0,\n      },\n\n      bombAction(\"garage\"),\n      takeOverAction(\"garage\"),\n      manageAction(\"garage\"),\n    ],\n\n    jail: () => [\n      {\n        text: getText(\"menuJail2\"),\n        icon: Icon.FontAwesome,\n        iconName: \"bars\",\n        onPress: () => navigation.resetTo(\"Jail\"),\n        isSelected: navigation.state.routeName === \"Jail\",\n\n        badgeAmount: me?.jail,\n      },\n      bombAction(\"jail\"),\n      takeOverAction(\"jail\"),\n      manageAction(\"jail\"),\n    ],\n\n    market: () => [\n      {\n        text: getText(\"menuMarket\"),\n        icon: Icon.FontAwesome,\n        iconName: \"handshake-o\",\n        onPress: () => navigation.resetTo(\"Market\"),\n        isSelected: navigation.state.routeName === \"Market\",\n        inactive:\n          me?.level < 2 &&\n          InactiveScreens.MARKET_RELEASE_DATE.isBefore(moment()),\n\n        badgeAmount: 0,\n      },\n      bombAction(\"market\"),\n      takeOverAction(\"market\"),\n      manageAction(\"market\"),\n    ],\n    weaponShop: () => [\n      {\n        text: getText(\"buyWeapons\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"pistol\",\n        onPress: () => navigation.resetTo(\"WeaponShop\"),\n        isSelected: navigation.state.routeName === \"WeaponShop\",\n\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"buyProtection\"),\n        icon: Icon.FontAwesome,\n        iconName: \"shield\",\n        onPress: () => navigation.resetTo(\"ProtectionShop\"),\n        isSelected: navigation.state.routeName === \"ProtectionShop\",\n\n        badgeAmount: 0,\n      },\n      bombAction(\"weaponShop\"),\n      takeOverAction(\"weaponShop\"),\n      manageAction(\"weaponShop\"),\n    ],\n\n    estateAgent: () => [\n      {\n        text: getText(\"menuEstateAgent\"),\n        icon: Icon.FontAwesome,\n        iconName: \"home\",\n        onPress: () => navigation.resetTo(\"EstateAgent\"),\n        isSelected: navigation.state.routeName === \"EstateAgent\",\n\n        badgeAmount: 0,\n      },\n      bombAction(\"estateAgent\"),\n      takeOverAction(\"estateAgent\"),\n      manageAction(\"estateAgent\"),\n    ],\n\n    stockExchange: () => [\n      {\n        text: getText(\"menuStockExchange\"),\n        icon: Icon.Entypo,\n        iconName: \"area-graph\",\n        onPress: () => navigation.resetTo(\"StockExchange\"),\n        isSelected: navigation.state.routeName === \"StockExchange\",\n        inactive:\n          me?.level < 2 &&\n          InactiveScreens.STOCK_MARKET_RELEASE_DATE.isBefore(moment()),\n\n        badgeAmount: 0,\n      },\n      bombAction(\"stockExchange\"),\n      takeOverAction(\"stockExchange\"),\n      manageAction(\"stockExchange\"),\n    ],\n    area: () => {\n      return [\n        {\n          inactive: !!selectedArea?.userId,\n          text: getText(\"takeOver\"),\n          onPress: async () => {\n            setLoading(true);\n            const { response } = await post(\"takeEmptyArea\", {\n              loginToken: device.loginToken,\n              id: selectedArea?.id,\n            });\n\n            setLoading(false);\n            alertAlert(response, null, null, {\n              key: \"takeEmptyAreaResponse\",\n            });\n\n            reloadAreas(me?.city);\n            reloadMe(device.loginToken);\n          },\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"account-arrow-left\",\n        },\n\n        {\n          inactive:\n            selectedArea?.userId === me?.id || selectedArea?.userId === null,\n          text: getText(\"menuBomb\"),\n          onPress: async () => {\n            const airplanes = [\n              \"\",\n              \"Fokker\",\n              \"Fleet\",\n              \"Havilland\",\n              \"Cessna\",\n              \"Douglas\",\n              \"Lear Jet\",\n              \"Raket\",\n            ];\n\n            alertAlert(\n              getText(\"fillInBombs\"),\n              me?.airplane === 0\n                ? getText(\"bombNoAirplane\")\n                : getText(\n                    \"bombAirplaneText\",\n                    airplanes[me?.airplane],\n                    me?.airplane * 5\n                  ),\n              [\n                {\n                  text: getText(\"ok\"),\n                  onPress: (bombs) => {\n                    withCaptcha(\n                      device.loginToken,\n                      me?.needCaptcha,\n                      getText,\n                      alertAlert,\n                      async (captcha) => {\n                        setLoading(true);\n                        const { response } = await post(\"bombArea\", {\n                          loginToken: device.loginToken,\n                          bombs,\n                          areaId: selectedArea?.id,\n                          captcha,\n                        });\n                        setLoading(false);\n                        reloadMe(device.loginToken);\n                        alertAlert(response, null, null, {\n                          key: \"bombAreaResponse\",\n                        });\n                        reloadAreas(me?.city);\n                      }\n                    );\n                  },\n                },\n                {\n                  text: getText(\"cancel\"),\n                },\n              ],\n              { key: \"bombArea\", textInput: true, keyboardType: \"numeric\" }\n            );\n          },\n          icon: Icon.FontAwesome,\n          iconName: \"bomb\",\n        },\n\n        {\n          inactive:\n            selectedArea?.userId !== me?.id || selectedArea?.damage === 0,\n          text: getText(\"repair\"),\n          onPress: async () => {\n            setLoading(true);\n            const { response } = await post(\"repairMyArea\", {\n              loginToken: device.loginToken,\n              id: selectedArea?.id,\n            });\n            setLoading(false);\n            reloadAreas(me?.city);\n            reloadMe(device.loginToken);\n            alertAlert(response, null, null, { key: \"repairMyAreaResponse\" });\n          },\n          icon: Icon.AntDesign,\n          iconName: \"tool\",\n        },\n      ];\n    },\n  };\n\n  const statsActions = [\n    {\n      text: getText(\"menuMembers\", me?.online),\n      icon: Icon.FontAwesome,\n      iconName: \"group\",\n      onPress: () => navigation.resetTo(\"Members\"),\n      isSelected: navigation.state.routeName === \"Members\",\n\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuStats\"),\n      icon: Icon.Entypo,\n      iconName: \"area-graph\",\n      onPress: () => navigation.resetTo(\"Stats\"),\n      isSelected: navigation.state.routeName === \"Stats\",\n\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuGangs\"),\n      icon: Icon.MaterialCommunityIcons,\n      iconName: \"home-group\",\n      onPress: () => navigation.resetTo(\"Gangs\"),\n      isSelected: navigation.state.routeName === \"Gangs\",\n\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"prizes\"),\n      icon: Icon.FontAwesome5,\n      iconName: \"award\",\n      onPress: () => navigation.resetTo(\"Prizes\"),\n      isSelected: navigation.state.routeName === \"Prizes\",\n\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuProperties\"),\n      icon: Icon.FontAwesome5,\n      iconName: \"house-damage\",\n      onPress: () => navigation.resetTo(\"Properties\"),\n      isSelected: navigation.state.routeName === \"Properties\",\n\n      badgeAmount: 0,\n    },\n  ];\n\n  const moreActions = [\n    {\n      text: getText(\"menuSettings\"),\n      icon: Icon.Ionicons,\n      iconName: \"ios-settings\",\n      onPress: () => navigation.resetTo(\"Settings\"),\n      isSelected: navigation.state.routeName === \"Settings\",\n    },\n\n    {\n      text: getText(\"menuInfo\"),\n      icon: Icon.Entypo,\n      iconName: \"info\",\n      onPress: () => navigation.resetTo(\"Info\"),\n      isSelected: navigation.state.routeName === \"Info\",\n    },\n\n    {\n      text: getText(\"menuPolice\"),\n      icon: Icon.Foundation,\n      iconName: \"sheriff-badge\",\n      onPress: () => navigation.resetTo(\"Police\"),\n      isSelected: navigation.state.routeName === \"Police\",\n    },\n    {\n      text: getText(\"menuVIP\"),\n      icon: Icon.MaterialIcons,\n      iconName: \"person-add\",\n      onPress: () => navigation.resetTo(\"VIP\"),\n      isSelected: navigation.state.routeName === \"VIP\",\n    },\n\n    {\n      text: getText(\"menuForum\"),\n      icon: Icon.MaterialIcons,\n      iconName: \"forum\",\n      onPress: () => navigation.resetTo(\"Forum\"),\n      isSelected: navigation.state.routeName === \"Forum\",\n    },\n  ];\n\n  const citiesActions = me?.canChooseCity\n    ? []\n    : [\n        {\n          text: getText(\"goBack\"),\n          icon: Icon.AntDesign,\n          iconName: \"back\",\n          onPress: () => animateToCity({ city, dispatch, map }),\n          isSelected: false,\n        },\n      ];\n\n  const actions = shouldRenderCities\n    ? citiesActions\n    : view === \"territories\" || view === \"game\"\n    ? selected\n      ? allActions[selected]().filter((x) => !x.inactive)\n      : []\n    : view === \"stats\"\n    ? statsActions\n    : view === \"more\"\n    ? moreActions\n    : [];\n\n  return (\n    actions.length > 0 && (\n      <ScrollView\n        horizontal\n        style={{\n          zIndex: 1,\n          position: \"absolute\",\n          left: 0,\n          bottom: 60,\n          height: 70,\n          flexDirection: \"row\",\n        }}\n      >\n        {actions.map((action, index) => (\n          <View key={`action${index}`}>\n            <TouchableOpacity\n              onPress={() => {\n                requestAnimationFrame(() => {\n                  console.log(\"onPress action\");\n                  action.onPress();\n                });\n              }}\n              style={{\n                width: 70,\n                marginHorizontal: 10,\n                height: 70,\n                borderRadius: 10,\n                backgroundColor: action.isSelected\n                  ? lighterHex(device.theme.primary)\n                  : device.theme.secondary,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <action.icon\n                name={action.iconName}\n                size={40}\n                color={device.theme.secondaryText}\n              />\n              <Text\n                style={{\n                  color: device.theme.secondaryText,\n                  fontWeight: \"bold\",\n                  fontSize: 10,\n                }}\n                numberOfLines={1}\n              >\n                {action.text}\n              </Text>\n            </TouchableOpacity>\n\n            {action.component ? (\n              <View\n                style={{\n                  position: \"absolute\",\n                  right: 0,\n                  top: 0,\n                  backgroundColor: \"#404040\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderRadius: 10,\n                }}\n              >\n                {action.component}\n              </View>\n            ) : action.badgeAmount > 0 ? (\n              <View\n                style={{\n                  position: \"absolute\",\n                  right: 0,\n                  top: 0,\n                  backgroundColor: \"red\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderRadius: 10,\n                  minWidth: 20,\n                  height: 20,\n                }}\n              >\n                <Text\n                  style={{ color: \"white\", fontWeight: \"bold\", fontSize: 10 }}\n                >\n                  {action.badgeAmount}\n                </Text>\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </ScrollView>\n    )\n  );\n};\n\nexport default ActionsBar;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\n\nconst MapIcon = React.memo(({ view }) => {\n  return (\n    <TouchableOpacity\n      key={`v${view.view}`}\n      hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n      style={{\n        marginBottom: 10,\n        backgroundColor: view.isActive ? \"rgba(0,0,0,0.8)\" : \"rgba(0,0,0,0.4)\",\n        borderRadius: 20,\n        width: 40,\n        height: 40,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n      onPress={view.onPress}\n      onLongPress={view.onLongPress}\n    >\n      <view.icon name={view.iconName} color=\"white\" size={30} />\n      {view.badgeCount > 0 && (\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            backgroundColor: \"red\",\n            borderRadius: 10,\n            width: 20,\n            height: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text style={{ color: \"white\", fontWeight: \"bold\", fontSize: 10 }}>\n            {view.badgeCount}\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n});\n\nexport default MapIcon;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport MapIcon from \"./MapIcon\";\nimport { animateToCity, objects, selectBuilding } from \"./MapUtil\";\nconst BottomTabs = ({\n  view,\n  setSelected,\n  navigation,\n  setView,\n  dragAndDropMode,\n  setDragAndDropMode,\n  level,\n  chatBadgeCount,\n  territoriesBadgeCount,\n  crimesBadgeCount,\n  gameBadgeCount,\n  getText,\n  map,\n  city,\n  cityAreas,\n  setZoom,\n  device,\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n  const dispatch = useDispatch();\n\n  const openGameActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = objects.map((o) => getText(o.type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          const type = objects[buttonIndex].type;\n          const to = objects[buttonIndex].to;\n          if (to) {\n            navigation.resetTo(to);\n          }\n\n          selectBuilding({\n            type,\n            city,\n            cityAreas,\n            map,\n            setSelected,\n            setView,\n            setZoom,\n            animate: true,\n            device,\n            dispatch,\n            getText,\n          });\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={{\n        zIndex: 2,\n        position: \"absolute\",\n        flexDirection: \"row\",\n        left: 0,\n        right: 0,\n        justifyContent: \"space-around\",\n        bottom: 0,\n      }}\n    >\n      {[\n        {\n          view: \"crimes\",\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"pistol\",\n          isActive: view === \"crimes\",\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"crimes\");\n            animateToCity({ map, dispatch, city });\n          },\n          badgeCount: crimesBadgeCount,\n        },\n\n        {\n          view: \"game\",\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"factory\",\n          isActive: view === \"game\",\n          onLongPress: Platform.OS === \"web\" ? undefined : openGameActionSheet,\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"game\");\n            animateToCity({ map, dispatch, city });\n          },\n          badgeCount: gameBadgeCount,\n        },\n\n        moment(\"01/02/2021\", \"DD/MM/YYYY\")\n          .add(city?.id || 1, \"weeks\")\n          .isBefore(moment()) && {\n          view: \"territories\",\n          icon: Icon.Ionicons,\n          iconName: \"md-grid\",\n          isActive: view === \"territories\",\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"territories\");\n            animateToCity({ map, dispatch, city });\n          },\n          badgeCount: territoriesBadgeCount,\n        },\n\n        {\n          view: \"stats\",\n          icon: Icon.Entypo,\n          iconName: \"bar-graph\",\n          isActive: view === \"stats\",\n          onPress: () => {\n            if (view === \"stats\") {\n              navigation.popToTop();\n              setView(\"game\");\n            } else {\n              setSelected(null);\n              setView(\"stats\");\n              navigation.resetTo(\"Members\");\n            }\n          },\n        },\n\n        {\n          view: \"chat\",\n          icon: Icon.Ionicons,\n          iconName: \"ios-chatbubbles\",\n          isActive: view === \"chat\",\n          onPress: () => {\n            if (view === \"chat\") {\n              setView(\"game\");\n              navigation.popToTop();\n            } else {\n              setSelected(null);\n              setView(\"chat\");\n              navigation.resetTo(\"Channels\");\n            }\n          },\n          badgeCount: chatBadgeCount,\n        },\n\n        {\n          view: \"more\",\n          icon: Icon.Entypo,\n          iconName: \"dots-three-horizontal\",\n          isActive: view === \"more\",\n          onPress: () => {\n            if (view === \"more\") {\n              setView(\"game\");\n              navigation.popToTop();\n            } else {\n              setSelected(null);\n              setView(\"more\");\n              navigation.resetTo(\"Settings\");\n            }\n          },\n        },\n\n        level >= 5 && {\n          icon: Icon.Feather,\n          iconName: \"move\",\n          isActive: dragAndDropMode,\n          onPress: () => {\n            setSelected(null);\n            setView(\"game\");\n            setDragAndDropMode(!dragAndDropMode);\n          },\n        },\n      ]\n        .filter((x) => !!x)\n        .map((v, index) => (\n          <MapIcon key={`icon${index}`} view={v} />\n        ))}\n    </View>\n  );\n};\n\nexport default BottomTabs;\n","import { createContext, Ref, RefObject } from 'react';\nimport { TapGestureHandler, State } from 'react-native-gesture-handler';\nimport type Animated from 'react-native-reanimated';\nimport { Scrollable, ScrollableRef } from '../types';\n\nexport type BottomSheetInternalContextType = {\n  enableContentPanningGesture: boolean;\n  containerTapGestureRef: Ref<TapGestureHandler>;\n  contentPanGestureState: Animated.Value<State>;\n  contentPanGestureTranslationY: Animated.Value<number>;\n  contentPanGestureVelocityY: Animated.Value<number>;\n  handlePanGestureState: Animated.Value<State>;\n  handlePanGestureTranslationY: Animated.Value<number>;\n  handlePanGestureVelocityY: Animated.Value<number>;\n  scrollableContentOffsetY: Animated.Value<number>;\n  decelerationRate: Animated.Node<number>;\n  setScrollableRef: (ref: ScrollableRef) => void;\n  removeScrollableRef: (ref: RefObject<Scrollable>) => void;\n};\n\n// @ts-ignore\nexport const BottomSheetInternalContext = createContext<BottomSheetInternalContextType>();\n\nexport const BottomSheetInternalProvider = BottomSheetInternalContext.Provider;\n","import { useContext } from 'react';\nimport { BottomSheetInternalContext } from '../contexts/internal';\n\nexport const useBottomSheetInternal = () => {\n  return useContext(BottomSheetInternalContext);\n};\n","import { useCallback, useRef, useMemo } from 'react';\nimport { findNodeHandle } from 'react-native';\nimport { event, useCode, onChange, set, call } from 'react-native-reanimated';\nimport { useValue } from 'react-native-redash';\nimport { useBottomSheetInternal } from '../hooks/useBottomSheetInternal';\nimport type { Scrollable, ScrollableType } from '../types';\n\nexport const useScrollableInternal = (type: ScrollableType) => {\n  // refs\n  const scrollableContentOffsetYRef = useRef<number>(0);\n  const scrollableContentOffsetY = useValue<number>(0);\n  const scrollableRef = useRef<Scrollable>(null);\n\n  // hooks\n  const {\n    scrollableContentOffsetY: _scrollableContentOffsetY,\n    setScrollableRef,\n    removeScrollableRef,\n  } = useBottomSheetInternal();\n\n  // callbacks\n  const handleScrollEvent = useMemo(\n    () =>\n      event([\n        {\n          nativeEvent: {\n            contentOffset: { y: scrollableContentOffsetY },\n          },\n        },\n      ]),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  const handleSettingScrollable = useCallback(() => {\n    _scrollableContentOffsetY.setValue(scrollableContentOffsetYRef.current);\n\n    const id = findNodeHandle(scrollableRef.current);\n\n    if (id) {\n      setScrollableRef({\n        id: id,\n        type,\n        // @ts-ignore\n        node: scrollableRef.current!.getNode(),\n      });\n    } else {\n      console.warn(`Couldn't find the scrollable node handle id!`);\n    }\n\n    return () => {\n      removeScrollableRef(scrollableRef);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // effects\n  useCode(\n    () =>\n      onChange(scrollableContentOffsetY, [\n        set(_scrollableContentOffsetY, scrollableContentOffsetY),\n        call([scrollableContentOffsetY], args => {\n          scrollableContentOffsetYRef.current = args[0];\n        }),\n      ]),\n    []\n  );\n\n  return {\n    scrollableRef,\n    handleScrollEvent,\n    handleSettingScrollable,\n  };\n};\n","import { useRef, useCallback, useEffect } from 'react';\n\ntype Callback = (...args: any[]) => any;\n/**\n * Provide a stable version of useCallback\n * https://gist.github.com/JakeCoxon/c7ebf6e6496f8468226fd36b596e1985\n */\nexport const useStableCallback = (callback: Callback) => {\n  const callbackRef = useRef<Callback>();\n  const memoCallback = useCallback(\n    (...args) => callbackRef.current && callbackRef.current(...args),\n    []\n  );\n  useEffect(() => {\n    callbackRef.current = callback;\n    return () => (callbackRef.current = undefined);\n  });\n  return memoCallback;\n};\n","import { useEffect, useRef } from 'react';\nimport Animated from 'react-native-reanimated';\n\nexport const useReactiveValue = (value: number) => {\n  // ref\n  const ref = useRef<Animated.Value<number>>(null);\n  if (ref.current === null) {\n    // @ts-ignore\n    ref.current = new Animated.Value(value);\n  }\n\n  // effects\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.setValue(value);\n    }\n  }, [value]);\n\n  return ref.current;\n};\n","import { validateSnapPoint } from './validateSnapPoint';\n\n/**\n * Converts snap points with percentage to fixed numbers.\n */\nexport const normalizeSnapPoints = (\n  snapPoints: Array<number | string>,\n  containerHeight: number,\n  topInset: number\n) =>\n  snapPoints.map(snapPoint => {\n    validateSnapPoint(snapPoint);\n    return typeof snapPoint === 'number'\n      ? snapPoint\n      : (Number(snapPoint.split('%')[0]) * (containerHeight - topInset)) / 100;\n  });\n","import invariant from 'invariant';\n\nexport const validateSnapPoint = (snapPoint: any) => {\n  invariant(\n    typeof snapPoint === 'number' || typeof snapPoint === 'string',\n    `'${snapPoint}' is not a valid snap point! expected types are string or number.`\n  );\n\n  invariant(\n    typeof snapPoint === 'number' ||\n      (typeof snapPoint === 'string' && snapPoint.includes('%')),\n    `'${snapPoint}' is not a valid percentage snap point! expected percentage snap point must include '%'. e.g. '50%'`\n  );\n\n  invariant(\n    typeof snapPoint === 'number' ||\n      (typeof snapPoint === 'string' && Number(snapPoint.split('%')[0])),\n    `'${snapPoint}' is not a valid percentage snap point! expected percentage snap point must be only numbers and '%'. e.g. '50%'`\n  );\n};\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import React, { useMemo, useRef, memo } from 'react';\nimport isEqual from 'lodash.isequal';\nimport Animated, { event } from 'react-native-reanimated';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport { useBottomSheetInternal } from '../../hooks';\nimport type { BottomSheetDraggableViewProps } from './types';\nimport { styles } from './styles';\n\nconst BottomSheetDraggableViewComponent = ({\n  nativeGestureRef,\n  gestureType = 'HANDLE',\n  style,\n  children,\n  ...rest\n}: BottomSheetDraggableViewProps) => {\n  // refs\n  const panGestureRef = useRef<PanGestureHandler>(null);\n\n  // hooks\n  const {\n    enableContentPanningGesture,\n    containerTapGestureRef,\n    handlePanGestureState,\n    handlePanGestureTranslationY,\n    handlePanGestureVelocityY,\n    contentPanGestureState,\n    contentPanGestureTranslationY,\n    contentPanGestureVelocityY,\n  } = useBottomSheetInternal();\n\n  // variables\n  const simultaneousHandlers = useMemo(\n    () =>\n      nativeGestureRef\n        ? [containerTapGestureRef, nativeGestureRef]\n        : containerTapGestureRef,\n    [containerTapGestureRef, nativeGestureRef]\n  );\n\n  // styles\n  const containerStyle = useMemo(\n    () => (style ? [styles.container, style] : styles.container),\n    [style]\n  );\n\n  // callbacks\n  const handleGestureEvent = useMemo(\n    () =>\n      gestureType === 'CONTENT'\n        ? event([\n            {\n              nativeEvent: {\n                state: contentPanGestureState,\n                translationY: contentPanGestureTranslationY,\n                velocityY: contentPanGestureVelocityY,\n              },\n            },\n          ])\n        : event([\n            {\n              nativeEvent: {\n                state: handlePanGestureState,\n                translationY: handlePanGestureTranslationY,\n                velocityY: handlePanGestureVelocityY,\n              },\n            },\n          ]),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [gestureType]\n  );\n\n  // effects\n  return (\n    <PanGestureHandler\n      ref={panGestureRef}\n      enabled={enableContentPanningGesture}\n      simultaneousHandlers={simultaneousHandlers}\n      shouldCancelWhenOutside={false}\n      onGestureEvent={handleGestureEvent}\n      onHandlerStateChange={handleGestureEvent}\n    >\n      <Animated.View style={containerStyle} {...rest}>\n        {children}\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n\nconst BottomSheetDraggableView = memo(\n  BottomSheetDraggableViewComponent,\n  isEqual\n);\n\nexport default BottomSheetDraggableView;\n","import isEqual from \"lodash.isequal\";\nimport React, { forwardRef, memo } from \"react\";\nimport { TapGestureHandler } from \"react-native-gesture-handler\";\nimport Animated from \"react-native-reanimated\";\nimport type { BottomSheetContentWrapperProps } from \"./types\";\n\nconst ContentWrapperComponent = forwardRef<\n  TapGestureHandler,\n  BottomSheetContentWrapperProps\n>(\n  (\n    { children, initialMaxDeltaY, style, onGestureEvent, onHandlerStateChange },\n    ref\n  ) => {\n    return (\n      <TapGestureHandler\n        ref={ref}\n        maxDurationMs={1000000}\n        maxDeltaY={initialMaxDeltaY}\n        shouldCancelWhenOutside={false}\n        onGestureEvent={onGestureEvent}\n        onHandlerStateChange={onHandlerStateChange}\n      >\n        <Animated.View pointerEvents=\"box-none\" style={style}>\n          {children}\n        </Animated.View>\n      </TapGestureHandler>\n    );\n  }\n);\n\nconst ContentWrapper = memo(ContentWrapperComponent, isEqual);\n\nexport default ContentWrapper;\n","import type { BottomSheetContentWrapper as BottomSheetContentWrapperType } from './types';\n// @ts-ignore\nimport { default as BottomSheetContentWrapper } from './BottomSheetContentWrapper';\nexport default BottomSheetContentWrapper as BottomSheetContentWrapperType;\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n  },\n});\n","export enum GESTURE {\n  UNDETERMINED = 0,\n  CONTENT,\n  HANDLE,\n}\n","import React, { memo, useCallback } from 'react';\nimport { View } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport type { BottomSheetContainerProps } from './types';\nimport { styles } from './styles';\n\nconst BottomSheetContainerComponent = ({\n  shouldMeasureHeight,\n  onMeasureHeight,\n  children,\n}: BottomSheetContainerProps) => {\n  //#region callbacks\n  const handleOnLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { height },\n      },\n    }) => {\n      onMeasureHeight(height);\n    },\n    [onMeasureHeight]\n  );\n  //#endregion\n\n  //#region render\n  // console.log('BottomSheetContainer', 'render', shouldMeasureHeight);\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={styles.container}\n      onLayout={shouldMeasureHeight ? handleOnLayout : undefined}\n      children={children}\n    />\n  );\n  //#endregion\n};\n\nconst BottomSheetContainer = memo(BottomSheetContainerComponent, isEqual);\n\nexport default BottomSheetContainer;\n","import { Dimensions, StyleSheet } from 'react-native';\n\nconst { width: windowWidth } = Dimensions.get('window');\n\nexport const styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n\n  indicator: {\n    alignSelf: 'center',\n    width: (7.5 * windowWidth) / 100,\n    height: 4,\n    borderRadius: 4,\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n  },\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport { styles } from './styles';\n\nconst BottomSheetHandleComponent = () => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.indicator} />\n    </View>\n  );\n};\n\nconst BottomSheetHandle = memo(BottomSheetHandleComponent, isEqual);\n\nexport default BottomSheetHandle;\n","import React, { memo, useCallback, useMemo } from 'react';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport isEqual from 'lodash.isequal';\nimport BottomSheetHandle from '../bottomSheetHandle';\nimport type { BottomSheetHandleContainerProps } from './types';\n\nconst BottomSheetHandleContainerComponent = ({\n  animatedIndex,\n  animatedPosition,\n  simultaneousHandlers,\n  enableHandlePanningGesture,\n  shouldMeasureHeight,\n  handleComponent: _providedHandleComponent,\n  onGestureEvent,\n  onHandlerStateChange,\n  onMeasureHeight,\n}: BottomSheetHandleContainerProps) => {\n  //#region variables\n  const shouldRenderHandle = useMemo(() => _providedHandleComponent !== null, [\n    _providedHandleComponent,\n  ]);\n  //#endregion\n\n  //#region callbacks\n  const handleOnLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { height },\n      },\n    }) => {\n      onMeasureHeight(height);\n    },\n    [onMeasureHeight]\n  );\n  //#endregion\n\n  //#region renders\n  const renderHandle = useCallback(() => {\n    if (_providedHandleComponent === null) {\n      return null;\n    }\n    const HandleComponent =\n      _providedHandleComponent === undefined\n        ? BottomSheetHandle\n        : _providedHandleComponent;\n\n    return (\n      <HandleComponent\n        animatedIndex={animatedIndex}\n        animatedPosition={animatedPosition}\n      />\n    );\n  }, [animatedIndex, animatedPosition, _providedHandleComponent]);\n\n  // console.log(\n  //   'BottomSheetHandleContainer',\n  //   'render',\n  //   shouldRenderHandle,\n  //   shouldMeasureHeight\n  // );\n  return shouldRenderHandle ? (\n    <PanGestureHandler\n      simultaneousHandlers={simultaneousHandlers}\n      shouldCancelWhenOutside={false}\n      enabled={enableHandlePanningGesture}\n      onGestureEvent={onGestureEvent}\n      onHandlerStateChange={onHandlerStateChange}\n    >\n      <Animated.View\n        onLayout={shouldMeasureHeight ? handleOnLayout : undefined}\n      >\n        {renderHandle()}\n      </Animated.View>\n    </PanGestureHandler>\n  ) : null;\n  //#endregion\n};\n\nconst BottomSheetHandleContainer = memo(\n  BottomSheetHandleContainerComponent,\n  isEqual\n);\n\nexport default BottomSheetHandleContainer;\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n  },\n});\n","import React, { memo } from 'react';\nimport { View } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport type { BottomSheetBackgroundProps } from './types';\nimport { styles } from './styles';\n\nconst BottomSheetBackgroundComponent = ({\n  pointerEvents,\n  style,\n}: BottomSheetBackgroundProps) => (\n  <View pointerEvents={pointerEvents} style={[style, styles.container]} />\n);\n\nconst BottomSheetBackground = memo(BottomSheetBackgroundComponent, isEqual);\n\nexport default BottomSheetBackground;\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: -100,\n  },\n});\n","import React, { memo, useMemo } from 'react';\nimport isEqual from 'lodash.isequal';\nimport BottomSheetBackground from '../bottomSheetBackground';\nimport type { BottomSheetBackgroundContainerProps } from './types';\nimport { styles } from './styles';\n\nconst BottomSheetBackgroundContainerComponent = ({\n  animatedIndex,\n  animatedPosition,\n  backgroundComponent: _providedBackgroundComponent,\n}: BottomSheetBackgroundContainerProps) => {\n  const BackgroundComponent = useMemo(\n    () => _providedBackgroundComponent || BottomSheetBackground,\n    [_providedBackgroundComponent]\n  );\n  return _providedBackgroundComponent === null ? null : (\n    <BackgroundComponent\n      pointerEvents=\"none\"\n      animatedIndex={animatedIndex}\n      animatedPosition={animatedPosition}\n      style={styles.container}\n    />\n  );\n};\n\nconst BottomSheetBackgroundContainer = memo(\n  BottomSheetBackgroundContainerComponent,\n  isEqual\n);\n\nexport default BottomSheetBackgroundContainer;\n","import { useMemo } from 'react';\nimport Animated, {\n  eq,\n  set,\n  add,\n  greaterOrEq,\n  lessOrEq,\n  and,\n  not,\n  clockRunning,\n  startClock,\n  timing,\n  stopClock,\n  multiply,\n  neq,\n  onChange,\n  or,\n  cond,\n  block,\n  call,\n  // debug,\n} from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\nimport { useClock, useValue, snapPoint } from 'react-native-redash';\nimport { GESTURE } from '../../constants';\nimport { useReactiveValue, useReactiveValues } from '../../hooks';\nimport type { BottomSheetTransitionConfig } from './types';\n\nexport const useTransition = ({\n  isLayoutCalculated,\n  animationDuration,\n  animationEasing,\n  contentPanGestureState,\n  contentPanGestureTranslationY,\n  contentPanGestureVelocityY,\n  handlePanGestureState,\n  handlePanGestureTranslationY,\n  handlePanGestureVelocityY,\n  scrollableContentOffsetY,\n  snapPoints: _snapPoints,\n  currentIndexRef,\n  initialPosition,\n  onAnimate,\n}: BottomSheetTransitionConfig) => {\n  const isReady = useReactiveValue(isLayoutCalculated ? 1 : 0);\n  const currentGesture = useValue<GESTURE>(GESTURE.UNDETERMINED);\n  const currentPosition = useReactiveValue(initialPosition);\n  const snapPoints = useReactiveValues(_snapPoints);\n\n  const isPanningContent = useMemo(\n    () => eq(contentPanGestureState, State.ACTIVE),\n    [contentPanGestureState]\n  );\n  const isPanningHandle = useMemo(\n    () => eq(handlePanGestureState, State.ACTIVE),\n    [handlePanGestureState]\n  );\n  const isPanning = useMemo(() => or(isPanningContent, isPanningHandle), [\n    isPanningContent,\n    isPanningHandle,\n  ]);\n  const shouldAnimate = useValue(0);\n  const manualSnapToPoint = useValue<number>(-1);\n\n  const clock = useClock();\n  const config = useMemo(\n    () => ({\n      toValue: new Animated.Value(0),\n      duration: animationDuration,\n      easing: animationEasing,\n    }),\n    [animationEasing, animationDuration]\n  );\n\n  const animationState = useMemo(\n    () => ({\n      finished: new Animated.Value(0),\n      position: new Animated.Value(initialPosition),\n      frameTime: new Animated.Value(0),\n      time: new Animated.Value(0),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const finishTiming = useMemo(\n    () => [\n      // debug('finish timing', config.toValue),\n      set(currentGesture, GESTURE.UNDETERMINED),\n      set(shouldAnimate, 0),\n      set(currentPosition, config.toValue),\n      set(animationState.frameTime, 0),\n      set(animationState.time, 0),\n      stopClock(clock),\n    ],\n    [\n      animationState.frameTime,\n      animationState.time,\n      clock,\n      config.toValue,\n      currentGesture,\n      currentPosition,\n      shouldAnimate,\n    ]\n  );\n\n  const translateY = useMemo(\n    () =>\n      cond(\n        eq(currentGesture, GESTURE.CONTENT),\n        cond(\n          eq(currentPosition, snapPoints[snapPoints.length - 1]),\n          add(\n            contentPanGestureTranslationY,\n            multiply(scrollableContentOffsetY, -1)\n          ),\n          contentPanGestureTranslationY\n        ),\n        handlePanGestureTranslationY\n      ),\n    [\n      snapPoints,\n      currentGesture,\n      currentPosition,\n      contentPanGestureTranslationY,\n      handlePanGestureTranslationY,\n      scrollableContentOffsetY,\n    ]\n  );\n  const velocityY = useMemo(\n    () =>\n      cond(\n        eq(currentGesture, GESTURE.CONTENT),\n        contentPanGestureVelocityY,\n        handlePanGestureVelocityY\n      ),\n    [contentPanGestureVelocityY, handlePanGestureVelocityY, currentGesture]\n  );\n  const isAnimationInterrupted = useMemo(\n    () =>\n      and(\n        clockRunning(clock),\n        or(\n          isPanning,\n          and(\n            neq(manualSnapToPoint, -1),\n            neq(manualSnapToPoint, config.toValue)\n          )\n        )\n      ),\n    [clock, isPanning, config.toValue, manualSnapToPoint]\n  );\n  const position = useMemo(\n    () =>\n      block([\n        cond(\n          eq(isReady, 1),\n          [\n            // debug('current gesture', currentGesture),\n            /**\n             * In case animation get interrupted, we execute the finishTiming node and\n             * set current position the the animated position.\n             */\n            cond(isAnimationInterrupted, [\n              // debug('animation interrupted', isAnimationInterrupted),\n              finishTiming,\n              set(currentPosition, animationState.position),\n            ]),\n\n            /**\n             * Panning node\n             */\n            cond(isPanning, [\n              set(\n                currentGesture,\n                cond(isPanningContent, GESTURE.CONTENT, GESTURE.HANDLE)\n              ),\n              // debug('start panning', translateY),\n              cond(\n                not(\n                  greaterOrEq(\n                    add(currentPosition, translateY),\n                    snapPoints[snapPoints.length - 1]\n                  )\n                ),\n                [\n                  set(\n                    animationState.position,\n                    snapPoints[snapPoints.length - 1]\n                  ),\n                  set(animationState.finished, 0),\n                ],\n                cond(\n                  not(\n                    lessOrEq(add(currentPosition, translateY), snapPoints[0])\n                  ),\n                  [\n                    set(animationState.position, snapPoints[0]),\n                    set(animationState.finished, 0),\n                  ],\n                  [\n                    set(\n                      animationState.position,\n                      add(currentPosition, translateY)\n                    ),\n                    set(animationState.finished, 0),\n                  ]\n                )\n              ),\n            ]),\n\n            /**\n             * Gesture ended node.\n             */\n            onChange(\n              add(contentPanGestureState, handlePanGestureState),\n              cond(\n                or(\n                  and(\n                    eq(currentGesture, GESTURE.CONTENT),\n                    eq(contentPanGestureState, State.END)\n                  ),\n                  and(\n                    eq(currentGesture, GESTURE.HANDLE),\n                    eq(handlePanGestureState, State.END)\n                  )\n                ),\n                [\n                  // debug('gesture end', currentGesture),\n                  set(\n                    config.toValue,\n                    snapPoint(\n                      add(currentPosition, translateY),\n                      velocityY,\n                      snapPoints\n                    )\n                  ),\n                  /**\n                   * here we make sure that captured gesture was not the content scrolling.\n                   */\n                  cond(\n                    neq(config.toValue, animationState.position),\n                    set(shouldAnimate, 1),\n                    finishTiming\n                  ),\n                ]\n              )\n            ),\n\n            /**\n             * Manual snapping node.\n             */\n            cond(\n              and(\n                neq(manualSnapToPoint, -1),\n                or(\n                  neq(manualSnapToPoint, currentPosition),\n                  neq(manualSnapToPoint, animationState.position)\n                ),\n                neq(manualSnapToPoint, config.toValue)\n              ),\n              [\n                // debug('manualSnapToPoint', manualSnapToPoint),\n                set(config.toValue, manualSnapToPoint),\n                set(animationState.finished, 0),\n                set(shouldAnimate, 1),\n                set(manualSnapToPoint, -1),\n              ],\n              set(manualSnapToPoint, -1)\n            ),\n\n            /**\n             * Animation Node.\n             */\n            cond(shouldAnimate, [\n              // debug('animating', shouldAnimate),\n              cond(\n                and(not(clockRunning(clock)), not(animationState.finished)),\n                [\n                  // debug('start animating', shouldAnimate),\n                  /**\n                   * `onAnimate` node\n                   */\n                  call(\n                    [config.toValue, ...snapPoints],\n                    ([_toValue, ..._animatedSnapPoints]) => {\n                      const currentIndex = currentIndexRef.current!;\n                      const nextIndex = _animatedSnapPoints.indexOf(_toValue);\n\n                      if (onAnimate) {\n                        onAnimate(currentIndex, nextIndex);\n                      }\n                    }\n                  ),\n\n                  set(animationState.finished, 0),\n                  set(animationState.frameTime, 0),\n                  set(animationState.time, 0),\n                  startClock(clock),\n                ]\n              ),\n              timing(clock, animationState, config),\n              cond(animationState.finished, finishTiming),\n            ]),\n\n            animationState.position,\n          ],\n          0\n        ),\n      ]),\n    [\n      isReady,\n      animationState,\n      clock,\n      config,\n      currentGesture,\n      currentPosition,\n      finishTiming,\n      isAnimationInterrupted,\n      isPanning,\n      isPanningContent,\n      manualSnapToPoint,\n      shouldAnimate,\n      snapPoints,\n      translateY,\n      velocityY,\n      contentPanGestureState,\n      handlePanGestureState,\n      currentIndexRef,\n      onAnimate,\n    ]\n  );\n\n  return {\n    position,\n    translateY,\n    manualSnapToPoint,\n    currentPosition,\n    currentGesture,\n  };\n};\n","import { useEffect, useRef } from 'react';\nimport Animated from 'react-native-reanimated';\n\nexport const useReactiveValues = (values: number[]) => {\n  // ref\n  const ref = useRef<Animated.Value<number>[]>(null);\n  if (ref.current === null) {\n    // @ts-ignore\n    ref.current = [];\n    values.map(value => {\n      // @ts-ignore\n      ref.current.push(new Animated.Value(value));\n    });\n  }\n\n  // effects\n  useEffect(() => {\n    if (ref.current) {\n      values.map((value, index) => {\n        // @ts-ignore\n        if (ref.current[index]) {\n          // update current value\n          // @ts-ignore\n          ref.current[index].setValue(value);\n        } else {\n          // insert current value\n          // @ts-ignore\n          ref.current.push(new Animated.Value(value));\n        }\n      });\n\n      /**\n       * if previous animated array has more values than the updated\n       * array, we will need to set the extra values to the last\n       * value of the updated array.\n       */\n      if (values.length < ref.current.length) {\n        const lastValue = values[values.length - 1];\n        for (let i = values.length - 1; i <= ref.current.length - 1; i++) {\n          ref.current[i].setValue(lastValue);\n        }\n      }\n    }\n  }, [values]);\n\n  return ref.current!;\n};\n","import { createContext } from 'react';\nimport type { BottomSheetMethods } from '../types';\n\n// @ts-ignore\nexport const BottomSheetContext = createContext<BottomSheetMethods>();\n\nexport const BottomSheetProvider = BottomSheetContext.Provider;\n","import { createContext, ReactNode } from 'react';\nimport type { BottomSheetModalConfigs } from '../types';\n\nexport type BottomSheetModalContextType = {\n  present: (\n    uniqueId: string,\n    content: ReactNode,\n    configs: BottomSheetModalConfigs\n  ) => void;\n  dismiss: (uniqueId: string) => void;\n  dismissAll: () => void;\n  snapTo: (uniqueId: string, index: number) => void;\n  expand: (uniqueId: string) => void;\n  collapse: (uniqueId: string) => void;\n};\n\n// @ts-ignore\nexport const BottomSheetModalContext = createContext<BottomSheetModalContextType>();\n\nexport const BottomSheetModalProvider = BottomSheetModalContext.Provider;\n","import { Platform } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nconst {\n  Easing: EasingV1,\n  EasingNode: EasingV2,\n} = require('react-native-reanimated');\nconst Easing = EasingV2 || EasingV1;\n\n// defaults\nconst DEFAULT_ANIMATION_EASING: Animated.EasingFunction = Easing.out(\n  Easing.exp\n);\nconst DEFAULT_ANIMATION_DURATION = 500;\nconst DEFAULT_ANIMATE_ON_MOUNT = false;\nconst DEFAULT_HANDLE_HEIGHT = 24;\nconst DEFAULT_ENABLE_CONTENT_PANNING_GESTURE = true;\nconst DEFAULT_ENABLE_HANDLE_PANNING_GESTURE = true;\n\nconst NORMAL_DECELERATION_RATE = Platform.select({\n  ios: 0.998,\n  android: 0.985,\n});\n\nexport {\n  DEFAULT_ANIMATION_EASING,\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_ANIMATE_ON_MOUNT,\n  DEFAULT_HANDLE_HEIGHT,\n  DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n  DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n  NORMAL_DECELERATION_RATE,\n};\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n  },\n  contentContainer: {},\n  debug: {\n    position: 'absolute',\n    left: 20,\n    top: 100,\n    backgroundColor: 'rgba(0, 0,0,0.5)',\n  },\n  debugText: {\n    fontSize: 24,\n    color: 'white',\n  },\n});\n","import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  useLayoutEffect,\n  useEffect,\n} from 'react';\nimport { Dimensions, ViewStyle } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport invariant from 'invariant';\nimport Animated, {\n  useCode,\n  onChange,\n  call,\n  eq,\n  cond,\n  neq,\n  and,\n  Extrapolate,\n  set,\n  sub,\n  abs,\n  greaterThan,\n} from 'react-native-reanimated';\nimport { State, TapGestureHandler } from 'react-native-gesture-handler';\nimport {\n  usePanGestureHandler,\n  useTapGestureHandler,\n} from 'react-native-redash';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport BottomSheetContentWrapper from '../bottomSheetContentWrapper';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport BottomSheetHandleContainer from '../bottomSheetHandleContainer';\nimport BottomSheetBackgroundContainer from '../bottomSheetBackgroundContainer';\n// import BottomSheetDebugView from '../bottomSheetDebugView';\nimport { useTransition } from './useTransition';\nimport {\n  useStableCallback,\n  useScrollable,\n  useNormalizedSnapPoints,\n  usePropsValidator,\n} from '../../hooks';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport { GESTURE } from '../../constants';\nimport {\n  NORMAL_DECELERATION_RATE,\n  DEFAULT_ANIMATE_ON_MOUNT,\n  DEFAULT_ANIMATION_EASING,\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_HANDLE_HEIGHT,\n  DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n  DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n} from './constants';\nimport type { ScrollableRef, BottomSheetMethods } from '../../types';\nimport type { BottomSheetProps } from './types';\nimport { styles } from './styles';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\nconst { height: windowHeight } = Dimensions.get('window');\n\ntype BottomSheet = BottomSheetMethods;\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  (props, ref) => {\n    //#region validate props\n    usePropsValidator(props);\n    //#endregion\n\n    //#region extract props\n    const {\n      // animations configurations\n      animationDuration = DEFAULT_ANIMATION_DURATION,\n      animationEasing = DEFAULT_ANIMATION_EASING,\n      // configurations\n      index: _providedIndex = 0,\n      snapPoints: _providedSnapPoints,\n      handleHeight: _providedHandleHeight,\n      containerHeight: _providedContainerHeight,\n      topInset = 0,\n      enableContentPanningGesture = DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n      enableHandlePanningGesture = DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n      animateOnMount = DEFAULT_ANIMATE_ON_MOUNT,\n      // animated nodes callback\n      animatedPosition: _providedAnimatedPosition,\n      animatedIndex: _providedAnimatedIndex,\n      // callbacks\n      onChange: _providedOnChange,\n      onAnimate: _providedOnAnimate,\n      // components\n      handleComponent,\n      backgroundComponent,\n      children,\n    } = props;\n    //#endregion\n\n    //#region component refs\n    const containerTapGestureRef = useRef<TapGestureHandler>(null);\n    //#endregion\n\n    //#region layout variables\n    // state\n    const [containerHeight, setContainerHeight] = useState(\n      _providedContainerHeight\n    );\n    const [handleHeight, setHandleHeight] = useState(_providedHandleHeight);\n\n    // safe layout values\n\n    const safeHandleHeight = useMemo(\n      () => handleHeight || DEFAULT_HANDLE_HEIGHT,\n      [handleHeight]\n    );\n    const safeContainerHeight = useMemo(() => containerHeight || windowHeight, [\n      containerHeight,\n    ]);\n\n    // conditions\n    const shouldMeasureContainerHeight = useMemo(\n      () => _providedContainerHeight === undefined,\n      [_providedContainerHeight]\n    );\n    const shouldMeasureHandleHeight = useMemo(\n      () =>\n        _providedHandleHeight === undefined &&\n        backgroundComponent !== undefined,\n      [_providedHandleHeight, backgroundComponent]\n    );\n\n    // refs\n    const didSetHandleHeight = useRef(!shouldMeasureHandleHeight);\n    const didSetContainerHeight = useRef(!shouldMeasureContainerHeight);\n\n    const isLayoutCalculated = useMemo(\n      () => {\n        return didSetHandleHeight.current && didSetContainerHeight.current;\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [containerHeight, handleHeight]\n    );\n    //#endregion\n\n    //#region variables\n\n    // refs\n    const currentIndexRef = useRef<number>(_providedIndex);\n    const didMountOnAnimate = useRef(false);\n\n    const {\n      scrollableContentOffsetY,\n      setScrollableRef,\n      removeScrollableRef,\n      scrollToTop,\n      flashScrollableIndicators,\n    } = useScrollable();\n\n    const snapPoints = useNormalizedSnapPoints(\n      _providedSnapPoints,\n      topInset,\n      safeContainerHeight,\n      safeHandleHeight\n    );\n\n    const sheetHeight = useMemo(\n      () =>\n        safeContainerHeight -\n        snapPoints[snapPoints.length - 1] -\n        safeHandleHeight,\n      [snapPoints, safeContainerHeight, safeHandleHeight]\n    );\n\n    const initialPosition = useMemo(() => {\n      return currentIndexRef.current < 0 || animateOnMount\n        ? safeContainerHeight - topInset\n        : snapPoints[currentIndexRef.current];\n    }, [snapPoints, animateOnMount, safeContainerHeight, topInset]);\n    //#endregion\n\n    //#region gestures\n    const {\n      state: containerTapGestureState,\n      gestureHandler: containerTapGestureHandler,\n    } = useTapGestureHandler();\n    const {\n      state: handlePanGestureState,\n      translation: { y: handlePanGestureTranslationY },\n      velocity: { y: handlePanGestureVelocityY },\n      gestureHandler: handlePanGestureHandler,\n    } = usePanGestureHandler();\n    const {\n      state: contentPanGestureState,\n      translation: { y: contentPanGestureTranslationY },\n      velocity: { y: contentPanGestureVelocityY },\n    } = usePanGestureHandler();\n    //#endregion\n\n    //#region animated variables\n    const handleOnAnimate = useStableCallback(\n      (fromIndex: number, toIndex: number) => {\n        if (_providedOnAnimate) {\n          _providedOnAnimate(fromIndex, toIndex);\n        }\n      }\n    );\n    const {\n      position,\n      manualSnapToPoint,\n      currentPosition,\n      currentGesture,\n    } = useTransition({\n      animationDuration,\n      animationEasing,\n      contentPanGestureState,\n      contentPanGestureTranslationY,\n      contentPanGestureVelocityY,\n      handlePanGestureState,\n      handlePanGestureTranslationY,\n      handlePanGestureVelocityY,\n      scrollableContentOffsetY,\n      snapPoints,\n      initialPosition,\n      currentIndexRef,\n      isLayoutCalculated,\n      onAnimate: handleOnAnimate,\n    });\n\n    // animated values\n    const animatedIndex = useMemo(() => {\n      const adjustedSnapPoints = snapPoints.slice().reverse();\n      const adjustedSnapPointsIndexes = snapPoints\n        .slice()\n        .map((_, index) => index)\n        .reverse();\n\n      /**\n       * this been added to resolve issues when provide\n       * one snap point.\n       */\n      if (snapPoints.length === 1) {\n        adjustedSnapPoints.push(safeContainerHeight);\n        adjustedSnapPointsIndexes.push(-1);\n      }\n\n      return interpolate(position, {\n        inputRange: adjustedSnapPoints,\n        outputRange: adjustedSnapPointsIndexes,\n        extrapolate: Extrapolate.CLAMP,\n      });\n    }, [position, safeContainerHeight, snapPoints]);\n\n    const animatedPosition = useMemo(\n      () => abs(sub(safeContainerHeight, position)),\n      [safeContainerHeight, position]\n    );\n\n    /**\n     * Scrollable animated props.\n     */\n    const decelerationRate = useMemo(\n      () =>\n        cond(\n          greaterThan(position, snapPoints[snapPoints.length - 1]),\n          0.001,\n          NORMAL_DECELERATION_RATE\n        ),\n      [position, snapPoints]\n    );\n    //#endregion\n\n    //#region layout callbacks\n    const handleOnContainerMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnContainerMeasureHeight', height);\n      didSetContainerHeight.current = true;\n      setContainerHeight(height);\n    }, []);\n\n    const handleOnHandleMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnHandleMeasureHeight', height);\n      didSetHandleHeight.current = true;\n      setHandleHeight(height);\n    }, []);\n    //#endregion\n\n    //#region private methods\n    const refreshUIElements = useCallback(() => {\n      const currentPositionIndex = Math.max(currentIndexRef.current, 0);\n      if (containerTapGestureRef.current) {\n        // @ts-ignore\n        containerTapGestureRef.current.setNativeProps({\n          maxDeltaY: Math.abs(\n            snapPoints[snapPoints.length - 1] - snapPoints[currentPositionIndex]\n          ),\n        });\n      }\n\n      if (currentPositionIndex === snapPoints.length - 1) {\n        flashScrollableIndicators();\n      }\n    }, [snapPoints, containerTapGestureRef, flashScrollableIndicators]);\n    const handleOnChange = useStableCallback((index: number) => {\n      if (_providedOnChange) {\n        _providedOnChange(index);\n      }\n    });\n    const handleSettingScrollableRef = useCallback(\n      (scrollableRef: ScrollableRef) => {\n        setScrollableRef(scrollableRef);\n        refreshUIElements();\n      },\n      [setScrollableRef, refreshUIElements]\n    );\n    //#endregion\n\n    //#region public methods\n    const handleSnapTo = useCallback(\n      (index: number) => {\n        invariant(\n          index >= -1 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        manualSnapToPoint.setValue(snapPoints[index]);\n      },\n      [snapPoints, manualSnapToPoint]\n    );\n    const handleClose = useCallback(() => {\n      manualSnapToPoint.setValue(safeContainerHeight);\n    }, [manualSnapToPoint, safeContainerHeight]);\n    const handleExpand = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[snapPoints.length - 1]);\n    }, [snapPoints, manualSnapToPoint]);\n    const handleCollapse = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[0]);\n    }, [snapPoints, manualSnapToPoint]);\n    //#endregion\n\n    //#region context variables\n    const internalContextVariables = useMemo(\n      () => ({\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        scrollableContentOffsetY,\n        decelerationRate,\n        setScrollableRef: handleSettingScrollableRef,\n        removeScrollableRef,\n      }),\n      [\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        decelerationRate,\n        scrollableContentOffsetY,\n        handleSettingScrollableRef,\n        removeScrollableRef,\n      ]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        snapTo: handleSnapTo,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n      }),\n      [handleSnapTo, handleExpand, handleCollapse, handleClose]\n    );\n    //#endregion\n\n    //#region expose public methods\n    useImperativeHandle(ref, () => ({\n      snapTo: handleSnapTo,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n    }));\n    //#endregion\n\n    //#region styles\n    const containerStyle = useMemo<Animated.AnimateStyle<ViewStyle>>(\n      () => ({\n        ...styles.container,\n        opacity: isLayoutCalculated ? 1 : 0,\n        transform: [\n          { translateY: isLayoutCalculated ? position : safeContainerHeight },\n        ],\n      }),\n      [safeContainerHeight, position, isLayoutCalculated]\n    );\n    const contentContainerStyle = useMemo(\n      () => ({\n        ...styles.contentContainer,\n        height: sheetHeight,\n      }),\n      [sheetHeight]\n    );\n    //#endregion\n\n    //#region effects\n\n    /**\n     * This will animate the sheet to the initial snap point\n     * when component is mounted.\n     */\n    useLayoutEffect(() => {\n      if (\n        animateOnMount &&\n        isLayoutCalculated &&\n        didMountOnAnimate.current === false\n      ) {\n        manualSnapToPoint.setValue(snapPoints[_providedIndex]);\n        didMountOnAnimate.current = true;\n      }\n    }, [\n      _providedIndex,\n      animateOnMount,\n      isLayoutCalculated,\n      manualSnapToPoint,\n      snapPoints,\n    ]);\n\n    /*\n     * keep animated position synced with snap points.\n     */\n    useEffect(() => {\n      if (isLayoutCalculated && currentIndexRef.current !== -1) {\n        manualSnapToPoint.setValue(snapPoints[currentIndexRef.current]);\n      }\n    }, [isLayoutCalculated, snapPoints, manualSnapToPoint]);\n\n    /**\n     * @DEV\n     * here we track the current position and\n     * - call on change ( if provided ).\n     * - flash scrollable component scroll indicators.\n     * - manipulate the root tap gesture handler maxDeltaY,\n     *   which allows the scrollable component to be activated.\n     */\n    useCode(\n      () =>\n        onChange(currentPosition, [\n          call([currentPosition], args => {\n            const currentPositionIndex = snapPoints.indexOf(args[0]);\n\n            /**\n             * if animation was interrupted, we ignore the change.\n             */\n            if (\n              currentPositionIndex === -1 &&\n              args[0] !== safeContainerHeight - topInset\n            ) {\n              return;\n            }\n            currentIndexRef.current = currentPositionIndex;\n            refreshUIElements();\n            handleOnChange(currentPositionIndex);\n          }),\n        ]),\n      [snapPoints, safeContainerHeight, topInset, refreshUIElements]\n    );\n\n    /**\n     * @DEV\n     * Once the root tap gesture handler states change to failed\n     * and the sheet not fully extended, we make sure to prevent the\n     * scrollable component from scrolling.\n     */\n    useCode(\n      () =>\n        cond(\n          and(\n            eq(containerTapGestureState, State.FAILED),\n            eq(currentGesture, GESTURE.CONTENT),\n            neq(position, snapPoints[snapPoints.length - 1])\n          ),\n          call([], () => {\n            scrollToTop();\n          })\n        ),\n      [snapPoints]\n    );\n    //#endregion\n\n    //#region render\n    // console.log('BottomSheet', 'render', shouldMeasureContainerHeight);\n    return (\n      <BottomSheetContainer\n        shouldMeasureHeight={shouldMeasureContainerHeight}\n        onMeasureHeight={handleOnContainerMeasureHeight}\n      >\n        <BottomSheetContentWrapper\n          ref={containerTapGestureRef}\n          {...containerTapGestureHandler}\n        >\n          <Animated.View style={containerStyle}>\n            <BottomSheetInternalProvider value={internalContextVariables}>\n              <BottomSheetProvider value={externalContextVariables}>\n                <BottomSheetBackgroundContainer\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  backgroundComponent={backgroundComponent}\n                />\n                <BottomSheetHandleContainer\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  simultaneousHandlers={containerTapGestureRef}\n                  shouldMeasureHeight={shouldMeasureHandleHeight}\n                  enableHandlePanningGesture={enableHandlePanningGesture}\n                  handleComponent={handleComponent}\n                  onMeasureHeight={handleOnHandleMeasureHeight}\n                  {...handlePanGestureHandler}\n                />\n                <BottomSheetDraggableView style={contentContainerStyle}>\n                  {children}\n                </BottomSheetDraggableView>\n              </BottomSheetProvider>\n            </BottomSheetInternalProvider>\n          </Animated.View>\n        </BottomSheetContentWrapper>\n\n        {_providedAnimatedPosition && (\n          <Animated.Code\n            exec={set(_providedAnimatedPosition, animatedPosition)}\n          />\n        )}\n\n        {_providedAnimatedIndex && (\n          <Animated.Code exec={set(_providedAnimatedIndex, animatedIndex)} />\n        )}\n\n        {/* <BottomSheetDebugView\n          values={{\n            position,\n            manualSnapToPoint,\n          }}\n        /> */}\n      </BottomSheetContainer>\n    );\n    //#endregion\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent, isEqual);\n\nexport default BottomSheet;\n","import invariant from \"invariant\";\nimport { useMemo } from \"react\";\nimport type { BottomSheetProps } from \"../components/bottomSheet\";\n\nexport const usePropsValidator = ({\n  index,\n  snapPoints,\n  topInset,\n  // animation\n  animationDuration,\n  animationEasing,\n}: BottomSheetProps) => {\n  useMemo(() => {\n    invariant(\n      snapPoints,\n      `'snapPoints' was not provided! please provide at least one snap point.`\n    );\n\n    invariant(\n      snapPoints.length > 0,\n      `'snapPoints' was provided with no points! please provide at least one snap point.`\n    );\n\n    // validate `index`\n    invariant(\n      typeof index === \"number\",\n      `'index' was provided but with wrong type ! expected type is a number.`\n    );\n\n    invariant(\n      index >= -1 && index <= snapPoints.length - 1,\n      `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n        snapPoints.length - 1\n      }`\n    );\n\n    // topInset\n    invariant(\n      typeof topInset === \"number\" || typeof topInset === \"undefined\",\n      `'topInset' was provided but with wrong type ! expected type is a number.`\n    );\n\n    // validate animations\n    invariant(\n      typeof animationDuration === \"number\" ||\n        typeof animationDuration === \"undefined\",\n      `'animationDuration' was provided but with wrong type ! expected type is a number.`\n    );\n\n    invariant(\n      typeof animationDuration === \"number\" ? animationDuration > 0 : true,\n      `'animationDuration' was provided but the value is very low! expected value to be greater than 0`\n    );\n\n    invariant(\n      typeof animationEasing === \"function\" ||\n        typeof animationEasing === \"undefined\",\n      `'animationEasing' was provided but with wrong type ! expected type is a Animated.EasingFunction.`\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n","import { useCallback, useRef, RefObject } from 'react';\nimport {\n  findNodeHandle,\n  FlatList,\n  ScrollView,\n  SectionList,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { useValue } from 'react-native-redash';\nimport type { ScrollableRef, Scrollable } from '../types';\n\nexport const useScrollable = () => {\n  // refs\n  const scrollableRef = useRef<ScrollableRef>(null);\n  const previousScrollableRef = useRef<ScrollableRef>(null);\n\n  // variables\n  const scrollableContentOffsetY: Animated.Value<number> = useValue<number>(0);\n\n  // callbacks\n  const setScrollableRef = useCallback((ref: ScrollableRef) => {\n    // get current node handle id\n    let currentRefId = scrollableRef.current?.id ?? null;\n\n    if (currentRefId !== ref.id) {\n      if (scrollableRef.current) {\n        // @ts-ignore\n        previousScrollableRef.current = scrollableRef.current;\n      }\n      // @ts-ignore\n      scrollableRef.current = ref;\n    }\n  }, []);\n\n  const removeScrollableRef = useCallback((ref: RefObject<Scrollable>) => {\n    // find node handle id\n    let id = findNodeHandle(ref.current);\n\n    // get current node handle id\n    let currentRefId = scrollableRef.current?.id ?? null;\n\n    /**\n     * @DEV\n     * when the incoming node is actually the current node, we reset\n     * the current scrollable ref to the previous one.\n     */\n    if (id === currentRefId) {\n      // @ts-ignore\n      scrollableRef.current = previousScrollableRef.current;\n    }\n  }, []);\n\n  const scrollToTop = useCallback(() => {\n    let type = scrollableRef.current?.type ?? undefined;\n    let node = scrollableRef.current?.node ?? undefined;\n\n    if (!type || !node) {\n      return;\n    }\n\n    switch (type) {\n      case 'FlatList':\n        (node as FlatList).scrollToOffset({\n          animated: false,\n          offset: 0,\n        });\n        break;\n\n      case 'ScrollView':\n        (node as ScrollView).scrollTo({\n          y: 0,\n          animated: false,\n        });\n        break;\n\n      case 'SectionList':\n        if ((node as SectionList).props.sections.length === 0) {\n          return;\n        }\n        (node as SectionList).scrollToLocation({\n          itemIndex: 0,\n          sectionIndex: 0,\n          viewPosition: 0,\n          viewOffset: 1000,\n          animated: false,\n        });\n        break;\n    }\n  }, []);\n\n  const flashScrollableIndicators = useCallback(() => {\n    let type = scrollableRef.current?.type ?? undefined;\n    let node = scrollableRef.current?.node ?? undefined;\n\n    if (!type || !node) {\n      return;\n    }\n\n    // @ts-ignore\n    if (node.flashScrollIndicators) {\n      // @ts-ignore\n      node.flashScrollIndicators();\n    }\n  }, []);\n\n  return {\n    scrollableRef,\n    scrollableContentOffsetY,\n    setScrollableRef,\n    removeScrollableRef,\n    scrollToTop,\n    flashScrollableIndicators,\n  };\n};\n","import { useMemo } from 'react';\nimport { normalizeSnapPoints } from '../utilities';\n\nexport const useNormalizedSnapPoints = (\n  snapPoints: Array<number | string>,\n  topInset: number,\n  containerHeight: number = 0,\n  handleHeight: number = 0\n) =>\n  useMemo(() => {\n    let normalizedSnapPoints = normalizeSnapPoints(\n      snapPoints,\n      containerHeight,\n      topInset\n    );\n    return normalizedSnapPoints.map(normalizedSnapPoint => {\n      /**\n       * if user sets point to zero and `excludeHandleHeight` true,\n       * we subset handleHeight from the `normalizedSnapPoint` to make\n       * sure that sheets and its handle will be out of the screen.\n       */\n      if (normalizedSnapPoint === 0 && handleHeight !== 0) {\n        normalizedSnapPoint = normalizedSnapPoint - handleHeight;\n      }\n\n      return Math.ceil(\n        Math.max(containerHeight - normalizedSnapPoint - handleHeight, topInset)\n      );\n    });\n  }, [snapPoints, topInset, containerHeight, handleHeight]);\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import React, {\n  forwardRef,\n  Ref,\n  useRef,\n  useImperativeHandle,\n  useEffect,\n  memo,\n} from 'react';\nimport {\n  FlatList as RNFlatList,\n  FlatListProps as RNFlatListProps,\n  ViewStyle,\n} from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport Animated from 'react-native-reanimated';\nimport { NativeViewGestureHandler } from 'react-native-gesture-handler';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport { useScrollableInternal, useBottomSheetInternal } from '../../hooks';\nimport type {\n  BottomSheetFlatListProps,\n  BottomSheetFlatListType,\n} from './types';\nimport { styles } from './styles';\n\nconst AnimatedFlatList = Animated.createAnimatedComponent(\n  RNFlatList\n) as React.ComponentClass<\n  Animated.AnimateProps<ViewStyle, RNFlatListProps<any>>,\n  any\n>;\n\nconst BottomSheetFlatListComponent = forwardRef(\n  (props: BottomSheetFlatListProps<any>, ref: Ref<RNFlatList>) => {\n    // props\n    const { focusHook: useFocusHook = useEffect, ...rest } = props;\n\n    // refs\n    const nativeGestureRef = useRef<NativeViewGestureHandler>(null);\n\n    // hooks\n    const {\n      scrollableRef,\n      handleScrollEvent,\n      handleSettingScrollable,\n    } = useScrollableInternal('FlatList');\n    const {\n      enableContentPanningGesture,\n      containerTapGestureRef,\n      decelerationRate,\n    } = useBottomSheetInternal();\n\n    // effects\n    // @ts-ignore\n    useImperativeHandle(ref, () => scrollableRef.current!.getNode());\n    useFocusHook(handleSettingScrollable);\n\n    // render\n    return (\n      <BottomSheetDraggableView\n        nativeGestureRef={nativeGestureRef}\n        gestureType=\"CONTENT\"\n        style={styles.container}\n      >\n        <NativeViewGestureHandler\n          ref={nativeGestureRef}\n          enabled={enableContentPanningGesture}\n          waitFor={containerTapGestureRef}\n        >\n          <AnimatedFlatList\n            {...rest}\n            // @ts-ignore\n            ref={scrollableRef}\n            overScrollMode=\"never\"\n            bounces={false}\n            decelerationRate={decelerationRate}\n            scrollEventThrottle={1}\n            onScrollBeginDrag={handleScrollEvent}\n          />\n        </NativeViewGestureHandler>\n      </BottomSheetDraggableView>\n    );\n  }\n);\n\nconst BottomSheetFlatList = memo(BottomSheetFlatListComponent, isEqual);\n\nexport default (BottomSheetFlatList as any) as typeof BottomSheetFlatListType;\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import React, {\n  useImperativeHandle,\n  useEffect,\n  useRef,\n  Ref,\n  forwardRef,\n  memo,\n} from 'react';\nimport {\n  SectionList as RNSectionList,\n  SectionListProps as RNSectionListProps,\n  ViewStyle,\n} from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport Animated from 'react-native-reanimated';\nimport { NativeViewGestureHandler } from 'react-native-gesture-handler';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport { useScrollableInternal, useBottomSheetInternal } from '../../hooks';\nimport type {\n  BottomSheetSectionListProps,\n  BottomSheetSectionListType,\n} from './types';\nimport { styles } from './styles';\n\nconst AnimatedSectionList = Animated.createAnimatedComponent(\n  RNSectionList\n) as React.ComponentClass<\n  Animated.AnimateProps<ViewStyle, RNSectionListProps<any>>,\n  any\n>;\n\nconst BottomSheetSectionListComponent = forwardRef(\n  (props: BottomSheetSectionListProps<any>, ref: Ref<RNSectionList>) => {\n    // props\n    const { focusHook: useFocusHook = useEffect, ...rest } = props;\n\n    // refs\n    const nativeGestureRef = useRef<NativeViewGestureHandler>(null);\n\n    // hooks\n    const {\n      scrollableRef,\n      handleScrollEvent,\n      handleSettingScrollable,\n    } = useScrollableInternal('SectionList');\n    const {\n      enableContentPanningGesture,\n      containerTapGestureRef,\n      decelerationRate,\n    } = useBottomSheetInternal();\n    // effects\n    // @ts-ignore\n    useImperativeHandle(ref, () => scrollableRef.current!.getNode());\n    useFocusHook(handleSettingScrollable);\n\n    // render\n    return (\n      <BottomSheetDraggableView\n        nativeGestureRef={nativeGestureRef}\n        gestureType=\"CONTENT\"\n        style={styles.container}\n      >\n        <NativeViewGestureHandler\n          ref={nativeGestureRef}\n          enabled={enableContentPanningGesture}\n          waitFor={containerTapGestureRef}\n        >\n          <AnimatedSectionList\n            {...rest}\n            // @ts-ignore\n            ref={scrollableRef}\n            overScrollMode=\"never\"\n            bounces={false}\n            decelerationRate={decelerationRate}\n            scrollEventThrottle={1}\n            onScrollBeginDrag={handleScrollEvent}\n          />\n        </NativeViewGestureHandler>\n      </BottomSheetDraggableView>\n    );\n  }\n);\n\nconst BottomSheetSectionList = memo(BottomSheetSectionListComponent, isEqual);\n\nexport default (BottomSheetSectionList as any) as typeof BottomSheetSectionListType;\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import React, {\n  useRef,\n  useImperativeHandle,\n  useEffect,\n  forwardRef,\n  Ref,\n  memo,\n} from 'react';\nimport {\n  ScrollView as RNScrollView,\n  ScrollViewProps as RNScrollViewProps,\n  ViewStyle,\n} from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport Animated from 'react-native-reanimated';\nimport { NativeViewGestureHandler } from 'react-native-gesture-handler';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport { useScrollableInternal, useBottomSheetInternal } from '../../hooks';\nimport type {\n  BottomSheetScrollViewType,\n  BottomSheetScrollViewProps,\n} from './types';\nimport { styles } from './styles';\n\nconst AnimatedScrollView = Animated.createAnimatedComponent(\n  RNScrollView\n) as React.ComponentClass<\n  Animated.AnimateProps<ViewStyle, RNScrollViewProps>,\n  any\n>;\n\nconst BottomSheetScrollViewComponent = forwardRef(\n  (props: BottomSheetScrollViewProps, ref: Ref<RNScrollView>) => {\n    // props\n    const { focusHook: useFocusHook = useEffect, ...rest } = props;\n\n    // refs\n    const nativeGestureRef = useRef<NativeViewGestureHandler>(null);\n\n    // hooks\n    const {\n      scrollableRef,\n      handleScrollEvent,\n      handleSettingScrollable,\n    } = useScrollableInternal('ScrollView');\n    const {\n      enableContentPanningGesture,\n      containerTapGestureRef,\n      decelerationRate,\n    } = useBottomSheetInternal();\n\n    // effects\n    // @ts-ignore\n    useImperativeHandle(ref, () => scrollableRef.current!.getNode());\n    useFocusHook(handleSettingScrollable);\n\n    return (\n      <BottomSheetDraggableView\n        nativeGestureRef={nativeGestureRef}\n        gestureType=\"CONTENT\"\n        style={styles.container}\n      >\n        <NativeViewGestureHandler\n          ref={nativeGestureRef}\n          enabled={enableContentPanningGesture}\n          waitFor={containerTapGestureRef}\n        >\n          <AnimatedScrollView\n            {...rest}\n            ref={scrollableRef}\n            overScrollMode=\"never\"\n            bounces={false}\n            decelerationRate={decelerationRate}\n            scrollEventThrottle={1}\n            onScroll={handleScrollEvent}\n            onScrollBeginDrag={handleScrollEvent}\n          />\n        </NativeViewGestureHandler>\n      </BottomSheetDraggableView>\n    );\n  }\n);\n\nconst BottomSheetScrollView = memo(BottomSheetScrollViewComponent, isEqual);\n\nexport default (BottomSheetScrollView as any) as typeof BottomSheetScrollViewType;\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n  },\n});\n","import React, { memo, useMemo, useEffect, useCallback } from 'react';\nimport { View as RNView } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport { useBottomSheetInternal } from '../../hooks';\nimport type { BottomSheetViewProps } from './types';\nimport { styles } from './styles';\n\nconst BottomSheetViewComponent = ({\n  style,\n  focusHook: useFocusHook = useEffect,\n  children,\n  ...reset\n}: BottomSheetViewProps) => {\n  // hooks\n  const { scrollableContentOffsetY } = useBottomSheetInternal();\n\n  // styles\n  const containerStyle = useMemo(\n    () => ({\n      ...styles.container,\n      // @ts-ignore\n      ...style,\n    }),\n    [style]\n  );\n\n  // callback\n  const handleSettingScrollable = useCallback(() => {\n    scrollableContentOffsetY.setValue(0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // effects\n  useFocusHook(handleSettingScrollable);\n\n  //render\n  return (\n    <RNView {...reset} style={containerStyle}>\n      {children}\n    </RNView>\n  );\n};\n\nconst BottomSheetView = memo(BottomSheetViewComponent, isEqual);\n\nexport default BottomSheetView;\n","import type {\n  TouchableOpacity as RNTouchableOpacity,\n  TouchableHighlight as RNTouchableHighlight,\n  TouchableWithoutFeedback as RNTouchableWithoutFeedback,\n} from 'react-native';\n\nimport {\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  // @ts-ignore\n} from './Touchables';\n\nexport default {\n  TouchableOpacity: TouchableOpacity as typeof RNTouchableOpacity,\n  TouchableHighlight: TouchableHighlight as typeof RNTouchableHighlight,\n  TouchableWithoutFeedback: TouchableWithoutFeedback as typeof RNTouchableWithoutFeedback,\n};\n","import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n  },\n});\n","import React, { memo, useMemo } from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport isEqual from 'lodash.isequal';\nimport { styles } from './styles';\nimport type { BottomSheetOverlayProps } from './types';\n\nconst BottomSheetOverlayComponent = ({\n  color = 'black',\n  pointerEvents,\n  animatedOpacity,\n  onPress,\n}: BottomSheetOverlayProps) => {\n  //#region styles\n  const containerStyle = useMemo(\n    () => [\n      styles.container,\n      { opacity: animatedOpacity, backgroundColor: color },\n    ],\n    [color, animatedOpacity]\n  );\n  //#endregion\n\n  //#region render\n  if (onPress) {\n    return (\n      <TouchableWithoutFeedback onPress={onPress} style={styles.container}>\n        <Animated.View pointerEvents={pointerEvents} style={containerStyle} />\n      </TouchableWithoutFeedback>\n    );\n  } else {\n    return (\n      <Animated.View pointerEvents={pointerEvents} style={containerStyle} />\n    );\n  }\n  //#endregion\n};\n\nconst BottomSheetOverlay = memo(BottomSheetOverlayComponent, isEqual);\n\nexport default BottomSheetOverlay;\n","import React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n} from 'react';\nimport isEqual from 'lodash.isequal';\nimport { useValue } from 'react-native-redash';\nimport Animated, { Extrapolate, set } from 'react-native-reanimated';\nimport BottomSheet from '../bottomSheet';\nimport {\n  DEFAULT_OVERLAY_OPACITY,\n  DEFAULT_DISMISS_ON_OVERLAY_PRESS,\n  DEFAULT_DISMISS_ON_SCROLL_DOWN,\n  DEFAULT_ALLOW_TOUCH_THROUGH_OVERLAY,\n} from './constants';\nimport type { BottomSheetModalType, BottomSheetModalProps } from './types';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\ntype BottomSheetModal = BottomSheetModalType;\n\nconst BottomSheetModalComponent = forwardRef<\n  BottomSheetModal,\n  BottomSheetModalProps\n>(({ content, configs, unmount }, ref) => {\n  const {\n    index: _initialSnapIndex = 0,\n    snapPoints: _snapPoints,\n    animatedIndex: _animatedIndex,\n    allowTouchThroughOverlay = DEFAULT_ALLOW_TOUCH_THROUGH_OVERLAY,\n    overlayComponent: OverlayComponent,\n    overlayOpacity = DEFAULT_OVERLAY_OPACITY,\n    dismissOnOverlayPress = DEFAULT_DISMISS_ON_OVERLAY_PRESS,\n    dismissOnScrollDown = DEFAULT_DISMISS_ON_SCROLL_DOWN,\n    onChange,\n    ...bottomSheetProps\n  } = configs;\n\n  //#region refs\n  const bottomSheetRef = useRef<BottomSheet>(null);\n  const isTemporaryClosing = useRef(false);\n  const lastSheetPosition = useRef(0);\n  //#endregion\n\n  //#region variables\n  const animatedIndex = useValue(0);\n  const animatedOverlayOpacity = useMemo(\n    () =>\n      interpolate(animatedIndex, {\n        inputRange: [0, 1],\n        outputRange: [0, overlayOpacity],\n        extrapolate: Extrapolate.CLAMP,\n      }),\n    [animatedIndex, overlayOpacity]\n  );\n  const initialSnapIndex = useMemo(\n    () => (dismissOnScrollDown ? _initialSnapIndex + 1 : _initialSnapIndex),\n    [_initialSnapIndex, dismissOnScrollDown]\n  );\n  const snapPoints = useMemo(\n    () => (dismissOnScrollDown ? [0, ..._snapPoints] : _snapPoints),\n    [_snapPoints, dismissOnScrollDown]\n  );\n  const overlayPointerEvents = useMemo(\n    () => (allowTouchThroughOverlay ? 'none' : 'auto'),\n    [allowTouchThroughOverlay]\n  );\n  //#endregion\n\n  //#region callbacks\n  const handleChange = useCallback(\n    index => {\n      if (onChange) {\n        onChange(index);\n      }\n\n      if (!isTemporaryClosing.current) {\n        lastSheetPosition.current = index;\n\n        if (index < (dismissOnScrollDown ? 1 : 0)) {\n          unmount();\n        }\n      }\n    },\n    [unmount, onChange, dismissOnScrollDown]\n  );\n  const handleClose = useCallback(() => {\n    if (isTemporaryClosing.current) {\n      unmount();\n      return;\n    }\n    bottomSheetRef.current?.close();\n  }, [unmount]);\n  const handleCollapse = useCallback(() => {\n    if (dismissOnScrollDown) {\n      bottomSheetRef.current?.snapTo(1);\n    } else {\n      bottomSheetRef.current?.collapse();\n    }\n  }, [dismissOnScrollDown]);\n  const handleExpand = useCallback(() => {\n    bottomSheetRef.current?.expand();\n  }, []);\n  const handleSnapTo = useCallback(\n    (index: number) => {\n      bottomSheetRef.current?.snapTo(index + (dismissOnScrollDown ? 1 : 0));\n    },\n    [dismissOnScrollDown]\n  );\n  const handleTemporaryCloseSheet = useCallback(() => {\n    isTemporaryClosing.current = true;\n    bottomSheetRef.current?.close();\n  }, []);\n  const handleRestoreSheetPosition = useCallback(() => {\n    isTemporaryClosing.current = false;\n    bottomSheetRef.current?.snapTo(lastSheetPosition.current);\n  }, []);\n  const handleOverlayPress = useCallback(() => {\n    bottomSheetRef.current?.close();\n  }, []);\n  //#endregion\n\n  //#region effects\n  useImperativeHandle(ref, () => ({\n    close: handleClose,\n    snapTo: handleSnapTo,\n    expand: handleExpand,\n    collapse: handleCollapse,\n    temporaryCloseSheet: handleTemporaryCloseSheet,\n    restoreSheetPosition: handleRestoreSheetPosition,\n  }));\n  //#endregion\n\n  // render\n  return (\n    <>\n      {OverlayComponent && (\n        <OverlayComponent\n          animatedOpacity={animatedOverlayOpacity}\n          pointerEvents={overlayPointerEvents}\n          {...(dismissOnOverlayPress ? { onPress: handleOverlayPress } : {})}\n        />\n      )}\n\n      {_animatedIndex && (\n        <Animated.Code exec={set(_animatedIndex, animatedIndex)} />\n      )}\n      <BottomSheet\n        ref={bottomSheetRef}\n        {...bottomSheetProps}\n        index={initialSnapIndex}\n        snapPoints={snapPoints}\n        animateOnMount={true}\n        animatedIndex={animatedIndex}\n        onChange={handleChange}\n      >\n        {content}\n      </BottomSheet>\n    </>\n  );\n});\n\nconst BottomSheetModal = memo(BottomSheetModalComponent, isEqual);\n\nexport default BottomSheetModal;\n","export const DEFAULT_OVERLAY_OPACITY = 0.5;\nexport const DEFAULT_DISMISS_ON_OVERLAY_PRESS = true;\nexport const DEFAULT_DISMISS_ON_SCROLL_DOWN = true;\nexport const DEFAULT_ALLOW_TOUCH_THROUGH_OVERLAY = false;\n","import React, {\n  useCallback,\n  useImperativeHandle,\n  useState,\n  useRef,\n  forwardRef,\n  ReactNode,\n  createRef,\n  RefObject,\n  memo,\n  useMemo,\n} from 'react';\nimport { Dimensions } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport BottomSheetModal from '../bottomSheetModal';\nimport type { BottomSheetModalConfigs } from '../../types';\nimport type { BottomSheetModalContextType } from '../../contexts/modal';\nimport BottomSheetContainer from '../bottomSheetContainer';\n\ntype BottomSheetModalContainer = BottomSheetModalContextType;\n\ntype BottomSheetItem = {\n  ref: RefObject<BottomSheetModal>;\n  content: ReactNode;\n  configs: BottomSheetModalConfigs;\n};\n\nconst { height: windowHeight } = Dimensions.get('window');\n\nconst BottomSheetModalContainerComponent = forwardRef<\n  BottomSheetModalContainer,\n  {}\n>((_, ref) => {\n  //#region state\n  const [sheets, setSheets] = useState<Record<string, BottomSheetItem>>({});\n  const [containerHeight, setContainerHeight] = useState(windowHeight);\n  //#endregion\n\n  //#region refs\n  const currentPresentedSheet = useRef<string>(null);\n  const previousPresentedSheet = useRef<string[]>([]);\n  const didHandleRestorePreviousSheet = useRef(false);\n  //#endregion\n\n  //#region methods\n  const unmountSheet = useCallback(\n    (uniqueId: string) => {\n      /**\n       * dismissing the current sheet\n       */\n      if (uniqueId === currentPresentedSheet.current) {\n        /**\n         * no previous sheets presented.\n         */\n        if (previousPresentedSheet.current.length === 0) {\n          // @ts-ignore\n          currentPresentedSheet.current = null;\n        } else if (previousPresentedSheet.current.length > 0) {\n          // @ts-ignore\n          currentPresentedSheet.current = previousPresentedSheet.current[0];\n          previousPresentedSheet.current.splice(0, 1);\n\n          if (!didHandleRestorePreviousSheet.current) {\n            sheets[\n              currentPresentedSheet.current\n            ].ref.current?.restoreSheetPosition();\n          }\n          didHandleRestorePreviousSheet.current = false;\n        }\n      } else {\n        /**\n         * dismissing a sheet in the background.\n         */\n        const sheetIndex = previousPresentedSheet.current.indexOf(uniqueId);\n        previousPresentedSheet.current.splice(sheetIndex, 1);\n      }\n\n      setSheets(_sheets =>\n        Object.keys(_sheets).reduce((object, key) => {\n          if (key !== uniqueId) {\n            object[key] = _sheets[key];\n          }\n          return object;\n        }, {} as Record<string, BottomSheetItem>)\n      );\n    },\n    [sheets]\n  );\n  const handleSnapTo = useCallback(\n    (uniqueId: string, index: number) => {\n      if (sheets[uniqueId]) {\n        sheets[uniqueId].ref.current?.snapTo(index);\n      }\n    },\n    [sheets]\n  );\n  const handleExpand = useCallback(\n    (uniqueId: string) => {\n      if (sheets[uniqueId]) {\n        sheets[uniqueId].ref.current?.expand();\n      }\n    },\n    [sheets]\n  );\n  const handleCollapse = useCallback(\n    (uniqueId: string) => {\n      if (sheets[uniqueId]) {\n        sheets[uniqueId].ref.current?.collapse();\n      }\n    },\n    [sheets]\n  );\n  const handlePresent = useCallback(\n    (\n      uniqueId: string,\n      content: ReactNode,\n      configs: BottomSheetModalConfigs\n    ) => {\n      if (!sheets[uniqueId]) {\n        if (currentPresentedSheet.current) {\n          // collapse current sheet\n          sheets[\n            currentPresentedSheet.current\n          ].ref.current?.temporaryCloseSheet();\n          // @ts-ignore\n          previousPresentedSheet.current = [\n            currentPresentedSheet.current,\n            ...previousPresentedSheet.current,\n          ];\n        }\n\n        // @ts-ignore\n        currentPresentedSheet.current = uniqueId;\n        setSheets(state => ({\n          ...state,\n          [uniqueId]: {\n            ref: createRef(),\n            content,\n            configs: { ...configs, containerHeight },\n          },\n        }));\n      }\n    },\n    [sheets, containerHeight]\n  );\n  const handleDismiss = useCallback(\n    (uniqueId: string) => {\n      if (sheets[uniqueId]) {\n        sheets[uniqueId].ref.current?.close();\n\n        /**\n         * dismissing the current sheet\n         */\n        if (\n          uniqueId === currentPresentedSheet.current &&\n          previousPresentedSheet.current.length > 0\n        ) {\n          didHandleRestorePreviousSheet.current = true;\n          sheets[\n            previousPresentedSheet.current[0]\n          ].ref.current?.restoreSheetPosition();\n        }\n      }\n    },\n    [sheets]\n  );\n  const handleDismissAll = useCallback(() => {\n    Object.keys(sheets).map(key => {\n      sheets[key].ref.current!.close();\n    });\n  }, [sheets]);\n  //#endregion\n\n  //#region callback\n  const handleOnContainerMeasureHeight = useCallback((height: number) => {\n    setContainerHeight(height);\n  }, []);\n  //#endregion\n\n  //#region expose public methods\n  useImperativeHandle(ref, () => ({\n    present: handlePresent,\n    dismiss: handleDismiss,\n    dismissAll: handleDismissAll,\n    snapTo: handleSnapTo,\n    expand: handleExpand,\n    collapse: handleCollapse,\n  }));\n  //#endregion\n\n  //#region renders\n  const renderSheets = useMemo(() => {\n    return Object.keys(sheets).map(key => (\n      <BottomSheetModal\n        key={key}\n        ref={sheets[key].ref}\n        content={sheets[key].content}\n        configs={sheets[key].configs}\n        unmount={() => unmountSheet(key)}\n      />\n    ));\n  }, [sheets, unmountSheet]);\n  return (\n    <BottomSheetContainer\n      shouldMeasureHeight={true}\n      onMeasureHeight={handleOnContainerMeasureHeight}\n      children={renderSheets}\n    />\n  );\n  //#endregion\n});\n\nconst BottomSheetModalContainer = memo(\n  BottomSheetModalContainerComponent,\n  isEqual\n);\n\nexport default BottomSheetModalContainer;\n","import React, { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { Dimensions, Image, Text, TouchableOpacity, View } from \"react-native\";\nimport BottomSheet from \"../react-native-bottom-sheet\";\n\nconst Guy = ({ text, onClose, visible, button }) => {\n  useEffect(() => {\n    setTimeout(() => {\n      bottomSheetRef.current?.expand();\n    }, 1000);\n  }, [visible, text]);\n  // hooks\n  const window = Dimensions.get(\"window\");\n  const bottomSheetRef = useRef(null);\n\n  // variables\n  const snapPoints = useMemo(() => [-1, \"55%\"], []);\n\n  // callbacks\n  const handleSheetChanges = useCallback(\n    (index) => {\n      if (index === 0) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  return visible ? (\n    <BottomSheet\n      ref={bottomSheetRef}\n      initialSnapIndex={1}\n      index={1}\n      snapPoints={snapPoints}\n      onChange={handleSheetChanges}\n      backgroundComponent={() => <View />}\n      animateOnMount={true}\n    >\n      <View\n        style={{\n          justifyContent: \"flex-end\",\n          flex: 1,\n        }}\n      >\n        <Image\n          source={require(\"../../assets/gangster3.png\")}\n          style={{\n            width: window.width < 380 ? window.width : 380,\n            height: window.height * 0.5,\n          }}\n          resizeMode=\"contain\"\n          onLayout={({ nativeEvent: { layout } }) => console.log(layout)}\n        />\n\n        <View\n          style={{\n            position: \"absolute\",\n            top: 70,\n            left: 220,\n            width: 120,\n            height: 150,\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Text>{text}</Text>\n          <TouchableOpacity onPress={() => bottomSheetRef.current.collapse()}>\n            <Text style={{ fontWeight: \"bold\" }}>{button ? button : \"OK\"}</Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* <View\n              style={{ backgroundColor: \"black\", width: \"100%\", height: 100 }}\n            /> */}\n      </View>\n    </BottomSheet>\n  ) : null;\n};\n\nexport default Guy;\n","import React, { useEffect } from \"react\";\nimport { getTextFunction } from \"../Util\";\nimport Guy from \"./Guy\";\nimport { animateToWorld } from \"./MapUtil\";\n\nconst IntroOrInfo = ({ city, map, screenProps: { dispatch, device, me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  useEffect(() => {\n    if (intros[device.introLevel]?.shouldOpen()) {\n      dispatch({ type: \"SET_GUY_VISIBLE\", value: true });\n    }\n  }, [device.introLevel]);\n  /*\n    deze guy moet visible worden als je iets gedaan hebt. dat kan een actie zijn die aan de backend of frontend geferifieerd wordt. \n\n    wat ik wil doen in de demo:\n    - welcome \n    - choose name\n    - choose city\n    */\n  const upLevel = () => {\n    dispatch({ type: \"UP_INTRO_LEVEL\" });\n  };\n\n  const intros = [\n    //0=welcome\n    // open map on zoomlevel 0\n    {\n      text: getText(\"intro0\"),\n      onClose: () => upLevel(),\n      shouldOpen: () => true,\n    },\n\n    //1=choose name\n    {\n      text: getText(\"intro1\"),\n      button: getText(\"intro1button\"),\n      onClose: () => {\n        dispatch({ type: \"SET_LOGGED\", value: false });\n        dispatch({ type: \"SET_GUY_VISIBLE\", value: false });\n        //open name alert. when logged in, up level.\n      },\n      shouldOpen: () => true,\n    },\n\n    //2=choose city\n    {\n      text: getText(\"intro2\", me?.name),\n      button: getText(\"intro2button\"),\n      onClose: () => {\n        dispatch({ type: \"SET_GUY_VISIBLE\", value: false });\n        animateToWorld({ city, dispatch, map });\n        // open nothing, just let the user choose a city like traveling.\n        // when a city is chosen, animate to that city, up level\n      },\n      shouldOpen: () => true,\n    },\n\n    //3=welcome to city\n    {\n      text: getText(\"intro3\", me?.city, me?.name),\n      onClose: () => {\n        upLevel();\n      },\n      shouldOpen: () => true,\n    },\n  ];\n\n  const intro = intros[device.introLevel];\n\n  let text = device.guyText;\n  let button = null;\n  if (intro) {\n    text = intro?.text;\n    button = intro?.button;\n  }\n  return (\n    <Guy\n      button={button}\n      text={text}\n      onClose={\n        intros[device.introLevel]?.onClose ||\n        (() => dispatch({ type: \"SET_GUY_VISIBLE\", value: false }))\n      }\n      visible={device.guyVisible}\n    />\n  );\n};\n\nexport default IntroOrInfo;\n","import { canUseDOM } from \"fbjs/lib/ExecutionEnvironment\";\n\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener(\"touchstart\", disableHover, true);\n  document.addEventListener(\"touchmove\", disableHover, true);\n  document.addEventListener(\"mousemove\", enableHover, true);\n}\n\nexport function isHoverEnabled() {\n  return isEnabled;\n}\n","import { element, func, oneOfType } from \"prop-types\";\nimport React from \"react\";\nimport { isHoverEnabled } from \"./HoverState\";\n\nexport default function Hoverable({ onHoverIn, onHoverOut, children }) {\n  const [isHovered, setHovered] = React.useState(false);\n  const [showHover, setShowHover] = React.useState(true);\n\n  function handleMouseEnter(e) {\n    if (isHoverEnabled() && !isHovered) {\n      if (onHoverIn) onHoverIn();\n      setHovered(true);\n    }\n  }\n\n  function handleMouseLeave(e) {\n    if (isHovered) {\n      if (onHoverOut) onHoverOut();\n      setHovered(false);\n    }\n  }\n\n  function handleGrant() {\n    setShowHover(false);\n  }\n\n  function handleRelease() {}\n\n  const child =\n    typeof children === \"function\"\n      ? children(showHover && isHovered)\n      : children;\n\n  return React.cloneElement(React.Children.only(child), {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    // prevent hover showing while responder\n    onResponderGrant: () => setShowHover(false),\n    onResponderRelease: () => setShowHover(true),\n    // if child is Touchable\n    onPressIn: handleGrant,\n    onPressOut: handleRelease,\n  });\n}\n\nHoverable.displayName = \"Hoverable\";\n\nHoverable.propTypes = {\n  children: oneOfType([func, element]),\n  onHoverIn: func,\n  onHoverOut: func,\n};\n","import * as Icon from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport CountDown from \"../components/Countdown\";\nimport Hoverable from \"../components/Hoverable\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, InactiveScreens, lighterHex, post } from \"../Util\";\nimport { getZoom, selectBuilding } from \"./MapUtil\";\n\nexport const isHappyHour = () => {\n  const isSunday = moment().day() === 0; //sunday\n  const is7pm = moment().hour() === 19; //19pm\n  const isHappyHourReleased = moment().isAfter(\n    InactiveScreens.HAPPY_HOUR_RELEASE_DATE\n  );\n  return isHappyHourReleased && (isSunday || is7pm);\n};\n\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const robberySeconds = Math.ceil(\n    (me?.robberyAt + me?.robberySeconds * 1000 - Date.now()) / 1000\n  );\n\n  const ocSeconds = Math.ceil((me?.ocAt + 3600000 - Date.now()) / 1000);\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCrime\"),\n        label: isHappyHour() ? \"Happy Hour\" : undefined,\n      },\n\n      content: [\n        {\n          view: \"crimes\",\n          iconType: \"FontAwesome\",\n          icon: \"car\",\n          text: getText(\"menuStealCar\"),\n          to: \"StealCar\",\n          component:\n            stealcarSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.autostelenAt + 60000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuCrimes\"),\n          to: \"Crimes\",\n          view: \"crimes\",\n          component:\n            crimeSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.crimeAt + 60000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"tree\",\n          text: getText(\"menuWiet\"),\n          to: \"Wiet\",\n          component:\n            wietSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.wietAt + 120000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"MaterialIcons\",\n          icon: \"people\",\n          text: getText(\"menuJunkies\"),\n          to: \"Junkies\",\n          component:\n            junkiesSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.junkiesAt + 120000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"FontAwesome\",\n          icon: \"female\",\n          text: getText(\"menuProstitutes\"),\n          to: \"Hoeren\",\n          component:\n            hoerenSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.hoerenAt + 120000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            moment().isBefore(InactiveScreens.WORK_RELEASE_DATE) &&\n            me?.level < 2,\n          isNew: moment().isBefore(\n            moment(InactiveScreens.WORK_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"tool\",\n          text: getText(\"menuWork\"),\n          to: \"Work\",\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_KILL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_KILL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuKill\"),\n          to: \"Kill\",\n          component:\n            attackSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.attackAt + 120000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n        {\n          view: \"crimes\",\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_ROB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuRob\"),\n          to: \"Rob\",\n          component:\n            robSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.robAt + 30000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            (moment().isBefore(InactiveScreens.ROBBERY_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROBBERY,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.ROBBERY_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_ROBBERY +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuRobbery\"),\n          to: \"Robbery\",\n          component:\n            robberySeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.robberyAt + me?.robberySeconds * 1000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_STREETRACE,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_STREETRACE +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"car-crash\",\n          text: getText(\"menuStreetrace\"),\n          to: \"Streetrace\",\n        },\n\n        me?.gangId && {\n          view: \"crimes\",\n          inactive:\n            me?.level < 2 && moment().isBefore(InactiveScreens.OC_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.OC_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuOC\"),\n          to: \"OC\",\n          component:\n            ocSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.ocAt + 3600000}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerBuildings\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome5\",\n          icon: \"home\",\n          text: getText(\"menuHome\"),\n          buildingType: \"house\",\n          to: \"Status\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"home-analytics\",\n          text: getText(\"menuHeadquarter\"),\n          buildingType: \"headquarter\",\n          to: \"GangSettings\",\n        },\n\n        {\n          iconType: \"FontAwesome5\",\n          icon: \"beer\",\n          text: getText(\"menuSalvationArmy\"),\n          buildingType: \"junkies\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"heart\",\n          text: getText(\"menuSexShop\"),\n          buildingType: \"rld\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"shop\",\n          text: getText(\"menuCoffeeShop\"),\n          buildingType: \"landlord\",\n        },\n\n        {\n          inactive:\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuBulletfactory\"),\n          buildingType: \"bulletFactory\",\n        },\n\n        {\n          view: \"game\",\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_AIRPORT,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_AIRPORT +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"plane\",\n          text: getText(\"menuAirport\"),\n          buildingType: \"airport\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuBank\"),\n          buildingType: \"bank\",\n          to: \"Bank\",\n        },\n\n        {\n          view: \"game\",\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_CASINO,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_CASINO +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome5\",\n          icon: \"dice\",\n          text: getText(\"menuCasino\"),\n          buildingType: \"casino\",\n          to: \"Poker\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-car\",\n          text: getText(\"menuGarage\"),\n          buildingType: \"garage\",\n          to: \"Garage\",\n        },\n\n        {\n          to: \"Gym\",\n          iconType: \"AntDesign\",\n          icon: \"stepforward\",\n          text: getText(\"menuGym\"),\n          buildingType: \"gym\",\n          component:\n            gymSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={me?.gymAt + me?.gymTime}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                size={8}\n                timeToShow={[\"mm\", \"ss\"]}\n              />\n            ) : null,\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_HOSPITAL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_HOSPITAL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"hospital\",\n          text: getText(\"menuHospital\"),\n          buildingType: \"hospital\",\n          to: \"Hospital\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bars\",\n          text: getText(\"menuJail2\"),\n          buildingType: \"jail\",\n          badgeCount: me?.jail,\n          to: \"Jail\",\n        },\n\n        {\n          view: \"game\",\n          inactive:\n            ((!me?.id || me.level < 1) &&\n              moment().isBefore(InactiveScreens.MARKET_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_MARKET,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.MARKET_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_MARKET +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuMarket\"),\n          buildingType: \"market\",\n          to: \"Market\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"Entypo\",\n          icon: \"home\",\n          text: getText(\"homeShop\"),\n          buildingType: \"estateAgent\",\n          to: \"EstateAgent\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuWeaponShop\"),\n          buildingType: \"weaponShop\",\n          to: \"WeaponShop\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"Entypo\",\n          icon: \"line-graph\",\n          inactive:\n            me?.level < 2 &&\n            InactiveScreens.STOCK_MARKET_RELEASE_DATE.isBefore(moment()),\n          text: getText(\"menuStockExchange\"),\n          buildingType: \"stockExchange\",\n          to: \"StockExchange\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n  ].filter((x) => !!x);\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level >= 5\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuReports\"),\n            to: \"Reports\",\n          },\n        ]\n      : [];\n\n  const betaTester = me?.level >= 2 ? [] : [];\n  const admin = me?.level >= 10 ? [] : [];\n\n  return (\n    me?.level > 1 && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAdminPanel\"),\n      },\n      content: [...betaTester, ...gameMod, ...admin],\n    }\n  );\n};\n\nexport const rightMenu = (me, theme, areas, channels, device, city) => {\n  const getText = getTextFunction(me?.locale);\n\n  const allAreasMenus = areas.map((area, index) => {\n    return {\n      image: area.user?.thumbnail,\n      iconType: \"Feather\",\n      icon: \"map-pin\",\n      text: area.name,\n      goToArea: index,\n    };\n  });\n\n  const last10ChannelsMenus = channels?.slice\n    ? channels.slice(0, 10).map((item) => {\n        const channelTitle = item.channel?.name\n          ? item.channel?.name\n          : item.channel?.channelsubs.length === 2\n          ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n              ?.name\n          : \"(System)\";\n\n        const channelThumbnail = item.channel?.image\n          ? item.channel?.image\n          : item.channel?.channelsubs.length === 2\n          ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n              ?.thumbnail\n          : null;\n\n        return {\n          image: null,\n          text: channelTitle,\n          image: channelThumbnail,\n          iconType: \"Ionicons\",\n          view: \"chat\",\n          icon: \"ios-person\",\n          badgeCount: item.unread,\n          to: \"Channel\",\n          params: { subid: item.id, id: item.channel.id },\n          onPress: () => {\n            post(\"setRead\", { loginToken: device.loginToken, id: item.id });\n          },\n        };\n      })\n    : [];\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerStats\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n          text: getText(\"menuMembers\", me?.online),\n          to: \"Members\",\n          view: \"stats\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStats\"),\n          to: \"Stats\",\n\n          view: \"stats\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n          text: getText(\"menuGangs\"),\n          to: \"Gangs\",\n\n          view: \"stats\",\n        },\n\n        {\n          text: getText(\"prizes\"),\n          iconType: \"FontAwesome5\",\n          icon: \"award\",\n          to: \"Prizes\",\n\n          view: \"stats\",\n          inactive:\n            me?.level < 2 &&\n            moment().isBefore(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.PRIZES_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n        },\n\n        {\n          text: getText(\"menuProperties\"),\n          iconType: \"FontAwesome5\",\n          icon: \"house-damage\",\n          to: \"Properties\",\n\n          view: \"stats\",\n        },\n      ],\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerChat\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"everyone\"),\n          to: \"Chat\",\n          view: \"chat\",\n        },\n\n        ...last10ChannelsMenus,\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"allChats\"),\n          to: \"Channels\",\n          view: \"chat\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    moment(\"01/02/2021\", \"DD/MM/YYYY\")\n      .add(city?.id || 1, \"weeks\")\n      .isBefore(moment()) && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAreas\"),\n      },\n      content: allAreasMenus,\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerMore\"),\n      },\n      content: [\n        {\n          iconType: \"SimpleLineIcons\",\n          icon: \"settings\",\n          view: \"more\",\n          text: getText(\"menuSettings\"),\n          to: \"Settings\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"info-with-circle\",\n\n          view: \"more\",\n          text: getText(\"menuInfo\"),\n          to: \"Info\",\n        },\n\n        {\n          view: \"more\",\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuPolice\"),\n          to: \"Police\",\n        },\n\n        {\n          view: \"more\",\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuVIP\"),\n          to: \"VIP\",\n        },\n\n        {\n          view: \"more\",\n          iconType: \"FontAwesome\",\n          icon: \"wechat\",\n          text: getText(\"menuForum\"),\n          to: \"Forum\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    adminMenu(me),\n  ].filter((x) => !!x);\n};\n\nexport const renderMenu = ({\n  item,\n  index,\n  navigation,\n  theme,\n  dispatch,\n  me,\n  cityAreas,\n  setSelectedAreaIndex,\n  map,\n  setSelected,\n  setZoom,\n  city,\n  setView,\n  areas,\n  device,\n}) => {\n  const TheIcon = Icon[item.iconType];\n\n  const isCurrent = navigation.state.routeName === item.to;\n  const TouchOrView = item.isHeader ? View : TouchableOpacity;\n  const getText = getTextFunction(me?.locale);\n\n  let specialColor = null;\n  const gangMembers = me?.gangMembers; //should be an {name,id}[] of users in your gang\n\n  if (item.buildingType !== undefined) {\n    const owner = city?.[`${item.buildingType}Owner`];\n    const isYours = owner === me?.name;\n    const isGang = gangMembers?.map((x) => x.name).includes(owner);\n    const hasDamage = city?.[`${item.buildingType}Damage`] > 0;\n    const hasProfit = city?.[`${item.buildingType}Profit`] > 0;\n\n    const incomeJunkies =\n      item.buildingType === \"junkies\" &&\n      Math.floor((Date.now() - me?.junkiesIncomeAt) / 3600000) > 0;\n    const incomeLandlord =\n      item.buildingType === \"landlord\" &&\n      Math.floor((Date.now() - me?.landlordIncomeAt) / 3600000) > 0;\n    const incomeRLD =\n      item.buildingType === \"rld\" &&\n      Math.floor((Date.now() - me?.rldIncomeAt) / 3600000) > 0;\n\n    const incomeToGet = incomeJunkies || incomeRLD || incomeLandlord;\n    const jailPrisoners = item.buildingType === \"jail\" && me?.jail > 0;\n    const gymTrain =\n      item.buildingType === \"gym\" && me?.gymAt + me?.gymTime - Date.now() < 0;\n    const canDoSomething = jailPrisoners || gymTrain;\n\n    specialColor =\n      isYours && hasDamage\n        ? \"darkred\"\n        : (isYours && hasProfit) || incomeToGet || canDoSomething\n        ? \"yellow\"\n        : isYours\n        ? \"blue\"\n        : !owner &&\n          item.buildingType !== \"house\" &&\n          item.buildingType !== \"headquarter\"\n        ? \"lightblue\"\n        : hasDamage\n        ? \"red\"\n        : isGang\n        ? \"green\"\n        : null;\n  } else if (item.goToArea !== undefined) {\n    const area = cityAreas.areas[item.goToArea];\n    const connectedArea = areas?.find((x) => x?.code === area?.code);\n\n    const isYours = connectedArea?.userId === me?.id;\n    const isGang =\n      connectedArea?.gangId === me?.gangId ||\n      connectedArea?.user?.gangId === me?.gangId;\n    const hasDamage = connectedArea?.damage > 0;\n    const hasProfit = connectedArea?.profit > 0;\n\n    specialColor =\n      isYours && hasDamage\n        ? \"darkred\"\n        : isYours && hasProfit\n        ? \"yellow\"\n        : isYours\n        ? \"blue\"\n        : !connectedArea?.userId\n        ? \"lightblue\"\n        : hasDamage\n        ? \"red\"\n        : isGang\n        ? \"green\"\n        : null;\n  }\n  return (\n    <TouchOrView\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.onPress) {\n          item.onPress();\n        }\n        if (item.to) {\n          navigation.resetTo(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        } else {\n          navigation.popToTop();\n        }\n\n        if (item.view) {\n          setView(item.view);\n        }\n        if (item.buildingType) {\n          selectBuilding({\n            type: item.buildingType,\n            city,\n            cityAreas,\n            map,\n            setSelected,\n            setView,\n            setZoom,\n            animate: true,\n            device,\n            dispatch,\n            getText,\n          });\n        }\n\n        if (item.goToArea !== undefined) {\n          const area = cityAreas.areas[item.goToArea];\n          // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n          if (Platform.OS === \"web\") {\n            map.panTo({\n              lat: area.centerLatitude,\n              lng: area.centerLongitude,\n            });\n            const biggestDelta =\n              area.latitudeDelta > area.longitudeDelta\n                ? area.latitudeDelta\n                : area.longitudeDelta;\n\n            setZoom(getZoom(biggestDelta));\n          } else {\n            map.animateToRegion({\n              latitude: area.centerLatitude,\n              longitude: area.centerLongitude,\n              latitudeDelta: area.latitudeDelta,\n              longitudeDelta: area.longitudeDelta,\n            });\n          }\n\n          setView(\"territories\");\n          setSelected(\"area\");\n          setSelectedAreaIndex(item.goToArea);\n        }\n      }}\n    >\n      <Hoverable onHoverIn={null} onHoverOut={null}>\n        {(isHovered) => (\n          <View\n            style={{\n              borderBottomWidth: 0,\n              padding: 3,\n              backgroundColor: item.isHeader\n                ? theme.primary\n                : `${theme.primary}CC`,\n              paddingLeft: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                minHeight: 25,\n                backgroundColor:\n                  isHovered || isCurrent\n                    ? lighterHex(theme.primary)\n                    : undefined,\n                borderRadius: isHovered || isCurrent ? 15 : undefined,\n              }}\n            >\n              <View style={{ width: 30, alignItems: \"center\" }}>\n                {item.image ? (\n                  <Image\n                    source={{ uri: Constants.SERVER_ADDR + item.image }}\n                    style={{\n                      width: 40,\n                      height: 40,\n                      borderRadius: 20,\n                      borderWidth: specialColor ? 2 : 0,\n                      borderColor: specialColor ? specialColor : undefined,\n                    }}\n                  />\n                ) : TheIcon ? (\n                  <TheIcon\n                    name={item.icon}\n                    size={20}\n                    color={specialColor ? specialColor : theme.secondaryText}\n                  />\n                ) : null}\n              </View>\n              <Text\n                numberOfLines={1}\n                style={{\n                  marginLeft: 15,\n                  color: theme.primaryText,\n                  fontWeight: item.isHeader ? \"bold\" : undefined,\n                }}\n              >\n                {item.text}\n              </Text>\n              {item.isNew && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{getText(\"new\")}</T>\n                </View>\n              )}\n\n              {item.label && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{item.label}</T>\n                </View>\n              )}\n\n              {item.badgeCount > 0 ? (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    borderRadius: 10,\n                    width: 20,\n                    height: 20,\n                    backgroundColor: \"red\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", fontSize: 10, fontWeight: \"bold\" }}\n                  >\n                    {item.badgeCount}\n                  </Text>\n                </View>\n              ) : null}\n              {item.component}\n            </View>\n          </View>\n        )}\n      </Hoverable>\n    </TouchOrView>\n  );\n};\n\nconst Menus = ({\n  children,\n  device,\n  me,\n  navigation,\n  dispatch,\n  cityAreas,\n  setSelectedAreaIndex,\n  map,\n  setSelected,\n  setZoom,\n  setView,\n  city,\n  areas,\n  channels,\n}) => {\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  const window = Dimensions.get(\"window\");\n  const isSmallDevice = window.width < 800;\n\n  const renderLeftMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu({\n              item: section.header,\n              index,\n              navigation,\n              theme: device.theme,\n              dispatch,\n              me,\n              cityAreas,\n              setSelectedAreaIndex,\n              map,\n              setSelected,\n              setZoom,\n              city,\n              setView,\n              areas,\n              device,\n            })\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu({\n                item,\n                index,\n                navigation,\n                theme: device.theme,\n                dispatch,\n                me,\n                cityAreas,\n                setSelectedAreaIndex,\n                map,\n                setSelected,\n                setZoom,\n                city,\n                setView,\n                areas,\n                device,\n              })\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const renderRightMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme, areas, channels, device, city)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu({\n              item: section.header,\n              index,\n              navigation,\n              theme: device.theme,\n              dispatch,\n              me,\n              cityAreas,\n              setSelectedAreaIndex,\n              map,\n              setSelected,\n              setZoom,\n              city,\n              areas,\n              setView,\n              device,\n            })\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu({\n                item,\n                index,\n                navigation,\n                theme: device.theme,\n                dispatch,\n                me,\n                cityAreas,\n                setSelectedAreaIndex,\n                map,\n                setSelected,\n                setZoom,\n                city,\n                setView,\n                areas,\n                device,\n              })\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  return isSmallDevice ? (\n    children\n  ) : (\n    <View\n      style={{\n        flexDirection: \"row\",\n        height: \"100%\",\n        width: \"100%\",\n        position: \"absolute\",\n      }}\n      pointerEvents=\"box-none\"\n    >\n      {me?.id && device.menuShown\n        ? !me?.canChooseCity\n          ? renderLeftMenu()\n          : null\n        : null}\n      <View style={{ flex: 1 }} pointerEvents=\"box-none\">\n        {children}\n      </View>\n      {me?.id && device.menuShown\n        ? !me?.canChooseCity\n          ? renderRightMenu()\n          : null\n        : null}\n    </View>\n  );\n};\n\nexport default Menus;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Keyboard, Platform, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst Modal = ({ view, navigation, setView, children, headerHeight }) => {\n  const [keyboardHeight, setKeyboardHeight] = useState(null);\n  useEffect(() => {\n    let keyboardWillShowListener;\n    let keyboardWillHideListener;\n    let keyboardDidShowListener;\n    let keyboardDidHideListener;\n    if (Platform.OS === \"ios\") {\n      keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        keyboardWillShow\n      );\n      keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        keyboardWillHide\n      );\n    } else {\n      keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        keyboardWillShow\n      );\n      keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        keyboardWillHide\n      );\n    }\n\n    return () => {\n      if (Platform.OS === \"ios\") {\n        keyboardWillShowListener.remove();\n        keyboardWillHideListener.remove();\n      } else {\n        keyboardDidShowListener.remove();\n        keyboardDidHideListener.remove();\n      }\n    };\n  });\n\n  const keyboardWillShow = (e) => {\n    const toValue = e.endCoordinates.height;\n    setKeyboardHeight(toValue);\n  };\n\n  const keyboardWillHide = (e) => {\n    setKeyboardHeight(null);\n  };\n\n  const keydown = useCallback((event) => {\n    if (event.keyCode === 27) {\n      //esc\n      //Do whatever when esc is pressed\n      close();\n    }\n  }, []);\n\n  const close = () => {\n    if (view !== \"game\" && view !== \"territories\" && view !== \"crimes\") {\n      setView(\"game\");\n    }\n\n    navigation.popToTop();\n  };\n  useEffect(() => {\n    if (Platform.OS === \"web\") {\n      document.addEventListener(\"keydown\", keydown, false);\n\n      return () => {\n        document.removeEventListener(\"keydown\", keydown, false);\n      };\n    }\n  }, []);\n\n  const theme = useSelector((state) => state.device.theme);\n\n  const defaultBottom = view === \"chat\" || view === \"crimes\" ? 70 : 170;\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: headerHeight + 20,\n        bottom: keyboardHeight ? keyboardHeight : defaultBottom,\n        left: 5,\n        right: 5,\n        backgroundColor: `${theme.primary}CC`,\n        borderRadius: 10,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {navigation.state.history.length > 1 ? (\n          <TouchableOpacity\n            hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n            onPress={() => {\n              navigation.goBack();\n            }}\n          >\n            <Icon.AntDesign\n              name=\"arrowleft\"\n              size={32}\n              color={theme.secondaryText}\n            />\n          </TouchableOpacity>\n        ) : (\n          <View />\n        )}\n\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={close}\n        >\n          <Icon.AntDesign name=\"close\" size={32} color={theme.secondaryText} />\n        </TouchableOpacity>\n      </View>\n      {children}\n    </View>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <View style={{ marginTop: 20 }} />\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(this.props.type || \"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    const keyValue = (key, value) => {\n      return (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <T>{key}</T>\n          <T>{value}</T>\n        </View>\n      );\n    };\n    return (\n      <ScrollView>\n        {keyValue(getText(\"cash\"), `€${me?.cash}`)}\n        {keyValue(getText(\"bank\"), `€${me?.bank}`)}\n        {keyValue(getText(\"swissBank\"), `€${me?.swissBank}`)}\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst AirplaneShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"airplane\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default AirplaneShop;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Blocks = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [blocks, setBlocks] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  const postRemoveBlock = async (user2id) => {\n    const { response } = await post(\"removeBlock\", {\n      loginToken: device.loginToken,\n      user2id,\n    });\n\n    setResponse(response);\n    getBlocks();\n  };\n\n  const getBlocks = async () => {\n    const { blocks } = await get(`blocks?loginToken=${device.loginToken}`);\n\n    setBlocks(blocks);\n  };\n\n  doOnce(getBlocks);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          {blocks?.map?.((block) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <User user={block.user} size={40} navigation={navigation} />\n\n              <TouchableOpacity onPress={() => postRemoveBlock(block.user2id)}>\n                <Entypo name=\"cross\" color=\"red\" size={33} />\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Blocks;\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button onPress={changeName} title={getText(\"change\")} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst getText = getTextFunction();\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n        return false;\n      }\n      return true;\n    }\n    return true;\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, Linking, Platform, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nimport T from \"./T\";\n\nconst ShareButtons = ({ me, url, text }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const siteUrl = `https://mastercrimez.com/%23/${url}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=${siteUrl}`;\n\n  return (\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n      <T>{getText(\"footerShare\")}</T>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(facebookShareUrl);\n        }}\n      >\n        <View\n          style={{\n            marginLeft: 20,\n            backgroundColor: \"#3b5998\",\n            width: 40,\n            height: 40,\n            borderRadius: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n        </View>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(\n            Platform.OS === \"web\"\n              ? `https://wa.me/?text=${text}%20${siteUrl}`\n              : `whatsapp://send?text=${text}%20${siteUrl}`\n          );\n        }}\n      >\n        <Image\n          source={require(\"../../assets/whatsapp.png\")}\n          style={{ width: 55, height: 55 }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ShareButtons;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\n\nconst IMAGE_SIZE = 40;\n\nconst Footer = ({ me, device, params, fetchChat }) => {\n  const { loginToken, theme } = device;\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [hasEdited, setHasEdited] = useState(false);\n  const getText = getTextFunction(me?.locale);\n\n  const send = () => {\n    setImage(null);\n    setMessage(\"\");\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ success, response }) => {\n        if (response) {\n          alert(response);\n        }\n        if (success) {\n          fetchChat();\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  const renderFooter = () => {\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) => {\n              setImage(base64);\n              setHasEdited(true);\n            }}\n          />\n\n          <TextInput\n            multiline\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={setMessage}\n          />\n\n          <TouchableOpacity onPress={send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  return renderFooter();\n};\n\nconst ChatScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device: { loginToken },\n    device,\n    me,\n    reloadMe,\n  },\n}) => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [chat, setChat] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  if (!params?.id) {\n    return <T>No id given</T>;\n  }\n  useEffect(() => {\n    fetchChat();\n\n    const interval = setInterval(() => {\n      fetchChat();\n      post(\"setRead\", { loginToken, id: params?.subid });\n      reloadMe(loginToken);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [params.id]);\n\n  const fetchChat = async () => {\n    const url = `channelmessage?loginToken=${device.loginToken}&id=${params.id}`;\n    const response = await get(url);\n\n    if (response) {\n      setChat(response.chat);\n      setResponse(response.response);\n      setIsFetching(false);\n    }\n  };\n\n  const onRefresh = () => {\n    setIsFetching(true);\n    fetchChat();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.name });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            flex: 1,\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{item.user?.name}</Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <MarkdownView>{item.message}</MarkdownView>\n\n          {item.isShareable && (\n            <ShareButtons me={me} text={item.message} url={``} />\n          )}\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      {Array.isArray(chat) ? (\n        <FlatList\n          initialNumToRender={Platform.OS === \"web\" ? chat.length : undefined}\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 250 : undefined,\n          }}\n          data={chat}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => `index${index}`}\n          refreshControl={\n            <RefreshControl refreshing={isFetching} onRefresh={onRefresh} />\n          }\n          inverted\n        />\n      ) : (\n        <View style={{ flex: 1 }}>\n          <T>{response}</T>\n        </View>\n      )}\n      <Footer me={me} device={device} params={params} fetchChat={fetchChat} />\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, InactiveScreens, post } from \"../Util\";\n\nconst blocksReleaseDate = InactiveScreens.BLOCKS_RELEASE_DATE;\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFetching: true,\n    };\n  }\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  openMenu = (id, userId) => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"delete\")];\n\n    const isBlockButtonActive =\n      (moment().isAfter(blocksReleaseDate) || me?.level > 1) && userId;\n    if (isBlockButtonActive) {\n      options.push(getText(\"blockThisUser\"));\n    }\n\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"delete\", id);\n          await post(\"setDeleted\", { loginToken: device.loginToken, id: id });\n          this.fetchChannelsubs();\n        }\n        if (isBlockButtonActive && buttonIndex === 1) {\n          const { response } = await post(\"addBlock\", {\n            loginToken: device.loginToken,\n            user2id: userId,\n          });\n          alert(response);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  openGeneralMenu = () => {\n    const { device, me } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"deleteAllChats\")];\n\n    const isBlocksActive = moment().isAfter(blocksReleaseDate) || me?.level > 1;\n\n    if (isBlocksActive) {\n      options.push(getText(\"blocks\"));\n    }\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"deleteAll\");\n          await post(\"deleteAll\", { loginToken: device.loginToken });\n          this.fetchChannelsubs();\n        }\n        if (buttonIndex === 1 && isBlocksActive) {\n          navigation.navigate(\"Blocks\");\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.name\n      : \"(System)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          ?.thumbnail\n      : null;\n\n    const channelOtherUserId = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.id\n      : null;\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel?.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          {channelThumbnail ? (\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + channelThumbnail }}\n              style={{ width: 60, height: 60, borderRadius: 30 }}\n            />\n          ) : (\n            <View\n              style={{\n                width: 60,\n                height: 60,\n                borderRadius: 30,\n                backgroundColor: \"#CCC\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n            </View>\n          )}\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20, flex: 1 }}>\n            <T bold>\n              {/* name or other person in chat */}\n              {channelTitle}\n            </T>\n            {item.lastmessage ? (\n              <T numberOfLines={1}>{item.lastmessage}</T>\n            ) : null}\n          </View>\n\n          <View>\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\" }}\n              onPress={() => this.openMenu(item.id, channelOtherUserId)}\n              hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n            >\n              <Entypo\n                style={{ marginLeft: 10 }}\n                name=\"dots-three-horizontal\"\n                size={20}\n                color={theme.primaryText}\n              />\n            </TouchableOpacity>\n            <T>\n              {moment(item.lastmessageDate).format(\n                moment(item.lastmessageDate).isAfter(moment().startOf(\"day\"))\n                  ? \"HH:mm\"\n                  : \"DD-MM-YYYY\"\n              )}\n            </T>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n        channels,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          ListHeaderComponent={() => {\n            return (\n              <View>\n                <View\n                  style={{\n                    justifyContent: \"flex-end\",\n                    marginRight: 20,\n                    marginTop: 20,\n                  }}\n                >\n                  <TouchableOpacity\n                    style={{ alignSelf: \"flex-end\" }}\n                    onPress={() => this.openGeneralMenu()}\n                    hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n                  >\n                    <Entypo\n                      style={{ marginLeft: 10 }}\n                      name=\"dots-three-horizontal\"\n                      size={20}\n                      color={theme.primaryText}\n                    />\n                  </TouchableOpacity>\n                </View>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    navigation.navigate(\"Chat\");\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      paddingVertical: 10,\n                      paddingHorizontal: 20,\n                      borderBottomColor: \"black\",\n                      borderBottomWidth: 0.5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 60,\n                        height: 60,\n                        borderRadius: 30,\n                        backgroundColor: \"#CCC\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n                    </View>\n\n                    <View style={{ marginLeft: 20, flex: 1 }}>\n                      <T bold>\n                        {/* name or other person in chat */}\n                        {getText(\"everyone\")}\n                      </T>\n                    </View>\n                  </View>\n                </TouchableOpacity>\n              </View>\n            );\n          }}\n          data={channels}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default connectActionSheet(ChatScreen);\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    this.interval = setInterval(() => this.getChat(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport { Dimensions, Image, ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const postChooseProfession = async (profession) => {\n    setLoading(true);\n\n    const { response } = await post(`chooseProfession`, {\n      token: device.loginToken,\n      profession,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const PROFESSIONS = [\n    { type: \"thief\", image: require(\"../../assets/profession/thief.jpg\") },\n    {\n      type: \"carthief\",\n      image: require(\"../../assets/profession/carthief.jpg\"),\n    },\n    {\n      type: \"weedgrower\",\n      image: require(\"../../assets/profession/weedgrower.jpg\"),\n    },\n    { type: \"killer\", image: require(\"../../assets/profession/killer.jpg\") },\n    { type: \"pimp\", image: require(\"../../assets/profession/pimp.jpg\") },\n    { type: \"banker\", image: require(\"../../assets/profession/banker.jpg\") },\n    {\n      type: \"jailbreaker\",\n      image: require(\"../../assets/profession/jailbreaker.jpg\"),\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response ? (\n        <T>{response}</T>\n      ) : me?.canChooseProfession ? (\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {PROFESSIONS.map((profession) => {\n            return (\n              <View style={{ width: 100, margin: 20 }}>\n                <Image\n                  source={profession.image}\n                  style={{ width: 100, height: 100 }}\n                  resizeMode=\"contain\"\n                />\n                <View style={{ height: 100 }}>\n                  <T bold>{getText(profession.type)}</T>\n                  <T>{getText(profession.type + \"Advantage\")}</T>\n                </View>\n                <Button\n                  title={getText(\"choose\")}\n                  onPress={() => postChooseProfession(profession.type)}\n                />\n              </View>\n            );\n          })}\n        </View>\n      ) : (\n        <T>{getText(\"youAreProfession\", getText(me?.profession))}</T>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default Gangs;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Code = ({\n  navigation: {\n    state: { params },\n  },\n  screenProps: { me, device, dispatch },\n}) => {\n  const [response, setResponse] = useState(null);\n\n  const code = params?.param;\n  //  When opening the site on web  on /Case or /Code or /StealCar on an unverified account, open modal\n  doOnce(() => {\n    if (!me?.phoneVerified) {\n      dispatch({ type: \"SET_LOGGED\", value: false });\n    }\n  });\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View>\n      {response ? (\n        <T>{response}</T>\n      ) : (\n        <Button\n          title={getText(\"openSuitcaseButton\")}\n          onPress={async () => {\n            const { response } = await post(\"enterCode\", {\n              loginToken: device.loginToken,\n              code,\n            });\n            setResponse(response);\n          }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default Code;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { ActivityIndicator, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateOc = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadOcs,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createOc\", {\n      loginToken,\n      numParticipants,\n      type,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadOcs(loginToken);\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"ocBank\"),\n              onPress: () => setType(\"bank\"),\n              isActive: type === \"bank\",\n            },\n            {\n              title: getText(\"ocCars\"),\n              onPress: () => setType(\"cars\"),\n              isActive: type === \"cars\",\n            },\n            {\n              title: getText(\"ocShootout\"),\n              onPress: () => setType(\"shootout\"),\n              isActive: type === \"shootout\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createOcOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateOc;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  Image,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nexport const RobberyTypes = [\n  {\n    type: \"snackbar\",\n    cost: 10000,\n    profit: 50000,\n    difficulty: 1,\n    seconds: 60,\n    image: require(\"../../assets/robbery/snackbar.jpg\"),\n  },\n  {\n    type: \"clothesstore\",\n    cost: 20000,\n    profit: 75000,\n    difficulty: 5,\n    seconds: 180,\n    image: require(\"../../assets/robbery/clothesstore.jpg\"),\n  },\n  {\n    type: \"supermarket\",\n    cost: 50000,\n    profit: 100000,\n    difficulty: 10,\n    seconds: 240,\n    image: require(\"../../assets/robbery/supermarket.jpg\"),\n  },\n  {\n    type: \"drugstore\",\n    cost: 100000,\n    profit: 250000,\n    difficulty: 20,\n    seconds: 300,\n    image: require(\"../../assets/robbery/drugstore.jpg\"),\n  },\n  {\n    type: \"coffeeshop\",\n    cost: 150000,\n    profit: 300000,\n    difficulty: 50,\n    seconds: 300,\n    image: require(\"../../assets/robbery/coffeeshop.jpg\"),\n  },\n  {\n    type: \"cardealer\",\n    cost: 200000,\n    profit: 400000,\n    difficulty: 100,\n    seconds: 600,\n    image: require(\"../../assets/robbery/cardealer.jpg\"),\n  },\n  {\n    type: \"bank\",\n    cost: 250000,\n    profit: 500000,\n    difficulty: 200,\n    seconds: 900,\n    image: require(\"../../assets/robbery/bank.jpg\"),\n  },\n  {\n    type: \"casino\",\n    cost: 500000,\n    profit: 1000000,\n    difficulty: 300,\n    seconds: 1800,\n    image: require(\"../../assets/robbery/casino.jpg\"),\n  },\n  {\n    type: \"jewelrystore\",\n    cost: 1000000,\n    profit: 2000000,\n    difficulty: 500,\n    seconds: 3600,\n    image: require(\"../../assets/robbery/jewelrystore.jpg\"),\n  },\n];\n\nconst Robbery = ({ robbery, isActive, onPress, title }) => {\n  return (\n    <TouchableOpacity\n      style={{\n        opacity: isActive ? 1 : 0.4,\n        marginHorizontal: 20,\n      }}\n      onPress={onPress}\n    >\n      <Image\n        source={robbery.image}\n        style={{ width: 100, height: 100 }}\n        resizeMode=\"cover\"\n      />\n      <T bold>{title}</T>\n    </TouchableOpacity>\n  );\n};\nconst CreateRobbery = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadRobberies,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [prize, setPrize] = useState(\"0\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createRobbery\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      prize,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadRobberies();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {RobberyTypes.map((t) => {\n            return (\n              <Robbery\n                robbery={t}\n                title={getText(t.type)}\n                onPress={() => setType(t.type)}\n                isActive={type === t.type}\n              />\n            );\n          })}\n        </View>\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </ScrollView>\n  );\n};\n\nexport default CreateRobbery;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [prize, setPrize] = useState(\"0\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      prize,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"addedPrizeMoney\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={prize}\n          onChangeText={(x) => setPrize(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const maxChance = me?.profession === \"thief\" ? 99 : 75;\n    const kans2 = kans > maxChance ? maxChance : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            {response.code && (\n              <ShareButtons\n                me={me}\n                text={getText(\"crimeSuitcase\")}\n                url={`Case/${response.code}`}\n              />\n            )}\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport CountDown from \"../components/Countdown\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Detectives = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [detectives, setDetectives] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [type, setType] = useState(\"slow\");\n  const [name, setName] = useState(\"\");\n\n  const postHireDetective = async () => {\n    const { response } = await post(\"hireDetective\", {\n      loginToken: device.loginToken,\n      name,\n      type,\n    });\n\n    setResponse(response);\n    getDetectives();\n  };\n\n  const getDetectives = async () => {\n    const { detectives } = await get(\n      `detectives?loginToken=${device.loginToken}`\n    );\n    setDetectives(detectives);\n  };\n\n  doOnce(getDetectives);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          <TextInput\n            style={style(theme).textInput}\n            placeholder={getText(\"name\")}\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={name}\n            onChangeText={setName}\n          />\n\n          <Button\n            style={{ marginBottom: 10 }}\n            title={getText(type + \"Detective\")}\n            onPress={() =>\n              setType(\n                type === \"slow\" ? \"normal\" : type === \"normal\" ? \"fast\" : \"slow\"\n              )\n            }\n          />\n\n          <T>\n            {getText(\n              \"detectiveCost\",\n              type === \"slow\" ? 100000 : type === \"normal\" ? 1000000 : 10000000,\n              getText(type + \"Detective\")\n            )}\n          </T>\n\n          <Button title={getText(\"hire\")} onPress={postHireDetective} />\n\n          <View style={{ height: 100 }} />\n          {detectives?.map?.((detective) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              {detective.user && (\n                <User user={detective.user} size={40} navigation={navigation} />\n              )}\n\n              {detective.city ? (\n                <T>{detective.city}</T>\n              ) : (\n                <CountDown\n                  style={{ marginLeft: 10 }}\n                  until={moment(detective.createdAt)\n                    .add(detective.seconds, \"seconds\")\n                    .valueOf()}\n                  digitStyle={{ backgroundColor: theme.secondary }}\n                  digitTxtStyle={{ color: theme.secondaryText }}\n                  size={8}\n                  timeToShow={[\"mm\", \"ss\"]}\n                />\n              )}\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Detectives;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst EstateAgent = ({ navigation, screenProps }) => {\n  return <Shop type=\"home\" navigation={navigation} screenProps={screenProps} />;\n};\n\nexport default EstateAgent;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useRef, useState } from \"react\";\nimport { Platform, TextInput, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst MarkdownEditor = React.memo(function MarkdownEditorPure({\n  value,\n  onChange,\n}) {\n  console.log(\"RENDER MARKDOWN EDItoR\");\n  const theme = useSelector((state) => state.device.theme);\n  const loginToken = useSelector((state) => state.device.loginToken);\n  const locale = useSelector((state) => state.me?.locale);\n  const getText = getTextFunction(locale);\n\n  const textInputRef = useRef(null);\n  const [selection, setSelection] = useState({});\n  const alertAlert = React.useContext(AlertContext);\n\n  const handleUploadPhoto = (pic) => {\n    console.log(\"PIC\", pic);\n    return fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: Platform.OS === \"web\" ? pic.uri : pic.base64,\n        token: loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ path }) => {\n        return path;\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const handleChoosePhoto = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      console.log(\"result\", result);\n\n      if (!result.cancelled) {\n        return handleUploadPhoto(result);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View>\n      <View style={{ flexDirection: \"row\" }}>\n        <Button\n          title=\"B\"\n          style={{ marginRight: 10 }}\n          textStyle={{ fontWeight: \"bold\" }}\n          onPress={() => {\n            if (selection) {\n              const text = value;\n              const aroundChars = 2;\n              const before = text.substring(0, selection.start);\n              const current = text.substring(selection.start, selection.end);\n              const after = text.substring(selection.end, text.length);\n              const newText = `${before}**${current}**${after}`;\n              onChange(newText);\n\n              textInputRef.current?.focus();\n              setTimeout(() => {\n                setSelection({\n                  start: selection.start + aroundChars,\n                  end: selection.end + aroundChars,\n                });\n              }, 100);\n            }\n          }}\n        />\n\n        <Button\n          title=\"I\"\n          style={{ marginRight: 10 }}\n          textStyle={{ fontStyle: \"italic\" }}\n          onPress={() => {\n            if (selection) {\n              const text = value;\n              const aroundChars = 1;\n              const before = text.substring(0, selection.start);\n              const current = text.substring(selection.start, selection.end);\n              const after = text.substring(selection.end, text.length);\n              const newText = `${before}*${current}*${after}`;\n              onChange(newText);\n\n              textInputRef.current?.focus();\n              setTimeout(() => {\n                setSelection({\n                  start: selection.start + aroundChars,\n                  end: selection.end + aroundChars,\n                });\n              }, 100);\n            }\n          }}\n        />\n\n        <Button\n          title=\"H1\"\n          style={{ marginRight: 10 }}\n          onPress={() => {\n            if (selection) {\n              const text = value;\n              const beforeChars = 3;\n              const before = text.substring(0, selection.start);\n              const current = text.substring(selection.start, selection.end);\n              const after = text.substring(selection.end, text.length);\n              const newText = `${before}\\n# ${current}\\n${after}`;\n              onChange(newText);\n\n              textInputRef.current?.focus();\n              setTimeout(() => {\n                setSelection({\n                  start: selection.start + beforeChars,\n                  end: selection.end + beforeChars,\n                });\n              }, 100);\n            }\n          }}\n        />\n\n        <Button\n          style={{ marginRight: 10 }}\n          title=\"H2\"\n          onPress={() => {\n            if (selection) {\n              const text = value;\n              const beforeChars = 4;\n              const before = text.substring(0, selection.start);\n              const current = text.substring(selection.start, selection.end);\n              const after = text.substring(selection.end, text.length);\n              const newText = `${before}\\n## ${current}\\n${after}`;\n              onChange(newText);\n\n              textInputRef.current?.focus();\n              setTimeout(() => {\n                setSelection({\n                  start: selection.start + beforeChars,\n                  end: selection.end + beforeChars,\n                });\n              }, 100);\n            }\n          }}\n        />\n\n        <Button\n          title=\"H3\"\n          style={{ marginRight: 10 }}\n          onPress={() => {\n            if (selection) {\n              const text = value;\n              const beforeChars = 5;\n              const before = text.substring(0, selection.start);\n              const current = text.substring(selection.start, selection.end);\n              const after = text.substring(selection.end, text.length);\n              const newText = `${before}\\n### ${current}\\n${after}`;\n              onChange(newText);\n\n              textInputRef.current?.focus();\n              setTimeout(() => {\n                setSelection({\n                  start: selection.start + beforeChars,\n                  end: selection.end + beforeChars,\n                });\n              }, 100);\n            }\n          }}\n        />\n\n        <Button\n          title=\"Link\"\n          style={{ marginRight: 10 }}\n          onPress={() => {\n            alertAlert(\n              getText(\"fillInUrl\"),\n              getText(\"fillInUrlText\"),\n              [\n                { text: getText(\"cancel\") },\n                {\n                  text: getText(\"ok\"),\n                  onPress: (url) => {\n                    const text = value;\n                    const beforeChars = 1;\n                    const before = text.substring(0, selection.start);\n                    const current = text.substring(\n                      selection.start,\n                      selection.end\n                    );\n                    const after = text.substring(selection.end, text.length);\n                    const newSelection = `[${\n                      current.length > 0 ? current : getText(\"clickHere\")\n                    }](${url})`;\n                    const newText = `${before}${newSelection}${after}`;\n                    onChange(newText);\n\n                    textInputRef.current?.focus();\n                    setTimeout(() => {\n                      setSelection({\n                        start: selection.start + beforeChars,\n                        end: selection.end + beforeChars,\n                      });\n                    }, 100);\n                  },\n                },\n              ],\n              { textInput: true }\n            );\n          }}\n        />\n\n        <Button\n          title=\"Image\"\n          style={{ marginRight: 10 }}\n          onPress={async () => {\n            const path = await handleChoosePhoto();\n\n            if (path) {\n              const text = value;\n              const beforeChars = 2;\n              const before = text.substring(0, selection.start);\n              const current = text.substring(selection.start, selection.end);\n              const after = text.substring(selection.end, text.length);\n\n              const newSelection = `![${\n                current.length > 0 ? current : \"image\"\n              }](${Constants.SERVER_ADDR + \"/\" + path})`;\n\n              const newText = `${before}${newSelection}${after}`;\n              onChange(newText);\n\n              textInputRef.current?.focus();\n              setTimeout(() => {\n                setSelection({\n                  start: selection.start + beforeChars,\n                  end: selection.end + beforeChars,\n                });\n              }, 100);\n            }\n          }}\n        />\n      </View>\n      <TextInput\n        ref={textInputRef}\n        selection={selection}\n        placeholderTextColor={theme.secondaryTextSoft}\n        style={[style(theme).textInput, { width: \"100%\", height: 200 }]}\n        multiline={true}\n        onSelectionChange={({ nativeEvent: { selection } }) => {\n          if (selection.start !== 0 && selection.end !== 0) {\n            console.log(\"selection\", selection);\n            setSelection(selection);\n          }\n        }}\n        numberOfLines={4}\n        value={value}\n        onChangeText={(x) => onChange(x)}\n      />\n    </View>\n  );\n});\n\n// MarkdownEditor.whyDidYouRender = { logOnDifferentValues: true };\n// It does just render once on pageload! :D\n\nexport default MarkdownEditor;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab, index) => {\n        return (\n          <TouchableOpacity\n            key={`tab${index}`}\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Button from \"../components/Button\";\nimport MarkdownEditor from \"../components/MarkdownEditor\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n    message: \"\",\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n\n        <MarkdownEditor\n          value={this.state.message}\n          onChange={(message) => this.setState({ message })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n\n                <MarkdownView\n                  style={{ text: { color: device.theme.primaryText } }}\n                >\n                  {response.message}\n                </MarkdownView>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <MarkdownEditor\n            value={this.state.message}\n            onChange={(message) => this.setState({ message })}\n          />\n\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport isEqual from \"react-fast-compare\";\nimport { ActivityIndicator, FlatList, Image, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst SIZE = 300;\nconst MARGIN = 10;\n\nconst Footer = React.memo(({ profile }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <MarkdownView style={{ text: { color: theme.primaryText } }}>\n      {profile}\n    </MarkdownView>\n  );\n});\n\nconst getGangLevel = (gangLevel, getText) =>\n  getText(\n    gangLevel === GANG_LEVEL_BOSS\n      ? \"gangLevelBoss\"\n      : gangLevel === GANG_LEVEL_UNDERBOSS\n      ? \"gangLevelUnderboss\"\n      : gangLevel === GANG_LEVEL_BANK\n      ? \"gangLevelBank\"\n      : \"gangLevelMember\"\n  );\n\nconst GangMember = React.memo(\n  function GangMemberPure({ item, index, navigation, getText }) {\n    return (\n      <Grid key={`item${index}`}>\n        <Col size={2} style={{ marginVertical: 5 }}>\n          <User navigation={navigation} user={item} />\n        </Col>\n        <Col style={{ justifyContent: \"center\" }}>\n          <T>{getGangLevel(item.gangLevel, getText)}</T>\n        </Col>\n        <Col style={{ justifyContent: \"center\" }}>\n          <T>❤️ {item.health}%</T>\n        </Col>\n      </Grid>\n    );\n  },\n\n  isEqual\n);\n\nconst Header = React.memo(function HeaderPure({\n  item,\n  getText,\n  postGangJoin,\n  response,\n  loading,\n  myGangId,\n}) {\n  const totalHealth = item.users?.reduce((prev, user) => prev + user.health, 0);\n\n  return (\n    <View style={{ margin: MARGIN, flexDirection: \"row\", flexWrap: \"wrap\" }}>\n      <View>\n        {item.image ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + item.image }}\n            style={{ width: SIZE, height: SIZE }}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: SIZE, height: SIZE }}\n          />\n        )}\n\n        {totalHealth === 0 ? (\n          <Image\n            source={require(\"../../assets/uitgemoord.jpg\")}\n            style={{ width: SIZE, height: SIZE }}\n          />\n        ) : null}\n      </View>\n      <View style={{ margin: MARGIN }}>\n        {loading ? <ActivityIndicator /> : null}\n        <T>\n          {getText(\"name\")}: {item.name}\n        </T>\n        <T>\n          {getText(\"members\")}: {item.members}\n        </T>\n        <T>\n          {getText(\"bank\")}: €{numberFormat(item.bank)},-\n        </T>\n        <T>\n          {getText(\"power\")}: {item.score}\n        </T>\n        {!myGangId &&\n          (response ? (\n            <T>{response}</T>\n          ) : (\n            <Button\n              onPress={postGangJoin}\n              title={getText(\"gangJoinCTA\")}\n              theme={theme}\n            />\n          ))}\n      </View>\n    </View>\n  );\n},\nisEqual);\n\n// Header.whyDidYouUpdate = { logOnDifferentValues: true };\n\nconst Gang = React.memo(function GangPure({\n  navigation,\n  screenProps: { device, me },\n}) {\n  console.log(\"RENDER GANG\");\n  const getText = useMemo(() => getTextFunction(me?.locale), [me?.locale]);\n\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const [response, setResponse] = useState(null);\n\n  const name = navigation.state.params?.name;\n\n  const getGang = async () => {\n    setLoading(true);\n    const gang = await get(`gang?name=${name}`);\n    setLoading(false);\n    setItem(gang);\n  };\n\n  const postGangJoin = useCallback(async () => {\n    setLoading(true);\n    const { response } = await post(`gangJoin`, {\n      token: device.loginToken,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n  }, [device.loginToken, name]);\n\n  doOnce(getGang);\n\n  const footer = () => <Footer profile={item.profile} />;\n\n  const header = () => {\n    return (\n      <Header\n        item={item}\n        getText={getText}\n        postGangJoin={postGangJoin}\n        response={response}\n        loading={loading}\n        myGangId={me?.gangId}\n      />\n    );\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <GangMember\n        item={item}\n        index={index}\n        navigation={navigation}\n        getText={getText}\n      />\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        ListFooterComponent={footer}\n        ListHeaderComponent={header}\n        data={item.users}\n        keyExtractor={(item, index) => `item${index}`}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n},\nisEqual);\n\n// Gang.whyDidYouRender = { logOnDifferentValues: true };\n\nexport default Gang;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\n\nconst GangAchievements = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n\n  const getGangAchievements = async () => {\n    setLoading(true);\n    const result = await get(`gangAchievements?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangAchievements);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>\n              {getText(\"level\")}: {result.power}\n            </H1>\n          </View>\n          {result.achievements &&\n            Object.keys(result.achievements).map((key) => {\n              const stats = result.achievements[key];\n\n              return (\n                <View style={{ marginBottom: 20 }}>\n                  <T bold style={{ alignSelf: \"center\", marginVertical: 20 }}>\n                    {getText(key)}\n                  </T>\n\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 150,\n                        backgroundColor: theme.secondary,\n                        padding: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <T>\n                        {getText(\"level\")}: {stats.level}\n                      </T>\n\n                      <T>\n                        {getText(\"average\")}: {stats.current}\n                      </T>\n                    </View>\n\n                    <AntDesign\n                      name=\"arrowright\"\n                      color={theme.primaryText}\n                      size={36}\n                    />\n\n                    <View\n                      style={{\n                        width: 150,\n                        backgroundColor: theme.secondary,\n                        padding: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      {stats.next && (\n                        <T>\n                          {getText(\"level\")}: {stats.level + 1}\n                        </T>\n                      )}\n                      <T>\n                        {stats.next\n                          ? `${getText(\"average\")}: ${stats.next}`\n                          : getText(\"maximumLevel\")}\n                      </T>\n                    </View>\n                  </View>\n                </View>\n              );\n            })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangAchievements;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  LayoutAnimation,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { lighterHex } from \"../Util\";\nimport T from \"./T\";\n\nUIManager.setLayoutAnimationEnabledExperimental &&\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n\nconst storeData = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (e) {\n    // saving error\n  }\n};\n\nconst getData = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    if (value !== null) {\n      return value;\n      // value previously stored\n    } else {\n      return undefined;\n    }\n  } catch (e) {\n    // error reading value\n    return undefined;\n  }\n};\n\nconst Content = ({ id, title, children, contentWidth }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const [expanded, setExpanded] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const isExpanded = await getData(`@content=${id}`);\n      if (isExpanded !== undefined) {\n        setExpanded(isExpanded === \"true\");\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <View\n      style={{\n        backgroundColor: lighterHex(theme.primary),\n        margin: 20,\n        padding: 20,\n        borderRadius: 20,\n        width:\n          typeof contentWidth === \"string\"\n            ? contentWidth\n            : contentWidth + 20 * 4,\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          LayoutAnimation.linear();\n          setExpanded(!expanded);\n          storeData(`@content=${id}`, String(!expanded));\n        }}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <T bold>{title}</T>\n        <AntDesign\n          name={expanded ? \"caretup\" : \"caretdown\"}\n          color={theme.primaryText}\n        />\n      </TouchableOpacity>\n\n      <View\n        onLayout={(event) => {\n          var { x, y, width, height } = event.nativeEvent.layout;\n          // setHeight(height);\n          // setWidth(width);\n        }}\n      >\n        {expanded && !loading && children}\n      </View>\n    </View>\n  );\n};\n\nexport default Content;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Platform,\n  ScrollView,\n  View,\n} from \"react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst SHIFT_FACTOR = 0.45;\nconst GangBulletFactory = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [shifts, setShifts] = useState({});\n  const { morning, day, evening, night, underachievers } = shifts;\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const alertAlert = React.useContext(AlertContext);\n\n  /*\n  userDoShift,\n  gangBuyBulletFactory,\n  shifts,*/\n\n  const getShifts = async () => {\n    setLoading(true);\n\n    const shifts = await get(`shifts?token=${device.loginToken}`);\n    setLoading(false);\n    setShifts(shifts);\n  };\n\n  const postUserDoShift = async () => {\n    setLoading(true);\n    const { response } = await post(\"userDoShift\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    getShifts();\n  };\n\n  const postGangBuyBulletFactory = async (type) => {\n    setLoading(true);\n    const { response } = await post(\"gangBuyBulletFactory\", {\n      token: device.loginToken,\n      type,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken); //reload gang\n  };\n\n  doOnce(getShifts);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const bulletFactories = [\n    {\n      type: \"small\",\n      generates: 10000,\n      initialCost: 10000000,\n      dailyCost: 1000000,\n    },\n    {\n      type: \"medium\",\n      generates: 20000,\n      initialCost: 100000000,\n      dailyCost: 10000000,\n    },\n    {\n      type: \"big\",\n      generates: 40000,\n      initialCost: 1000000000,\n      dailyCost: 100000000,\n    },\n    {\n      type: \"mega\",\n      generates: 60000,\n      initialCost: 10000000000,\n      dailyCost: 1000000000,\n    },\n  ];\n\n  const renderShiftUser = (user) => {\n    return <User size={40} navigation={navigation} user={user} />;\n  };\n\n  const renderUnderAchieverUserRow = (user) => {\n    return (\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <User size={40} navigation={navigation} user={user} />\n        <T>\n          {user.totalShiftsDone} {getText(\"shiftsDone\")}\n        </T>\n      </View>\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        <Content\n          title={getText(\"workForBulletFactoryTitle\")}\n          contentWidth={\"90%\"}\n          id=\"userDoShift\"\n        >\n          <Button\n            onPress={postUserDoShift}\n            title={getText(\"workForBulletFactory\")}\n          />\n        </Content>\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"shiftSchedule\")}\n              contentWidth={\"90%\"}\n              id=\"shifts\"\n            >\n              <T>\n                {getText(\n                  \"shiftToDo\",\n                  me?.gang?.members,\n                  Math.floor(me?.gang?.members * SHIFT_FACTOR)\n                )}\n              </T>\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"morningShift\")}\n              </T>\n              {morning?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"dayShift\")}\n              </T>\n              {day?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"eveningShift\")}\n              </T>\n              {evening?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"nightShift\")}\n              </T>\n              {night?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"underachievers\")}\n              </T>\n              {underachievers?.map(renderUnderAchieverUserRow)}\n            </Content>\n\n            {me?.gangLevel === GANG_LEVEL_BANK ||\n              (me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Content\n                  title={getText(\"buyBulletFactory\")}\n                  contentWidth={\"90%\"}\n                  id=\"buyBulletFactory\"\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      marginTop: 20,\n                    }}\n                  >\n                    {bulletFactories.map((bf) => {\n                      return (\n                        <View style={{ width: 200, marginHorizontal: 10 }}>\n                          <T bold>{getText(`bf${bf.type}`)}</T>\n                          <T>{getText(\"generatesBullets\", bf.generates)}</T>\n                          <T>\n                            {getText(\"initialCost\")}: €\n                            {numberFormat(bf.initialCost)},-\n                          </T>\n                          <T>\n                            {getText(\"dailyCost\")}: €\n                            {numberFormat(bf.dailyCost)}\n                            ,-\n                          </T>\n                          {me?.gang?.bulletFactory === bf.type ? (\n                            <T bold>{getText(\"currentBulletFactory\")}</T>\n                          ) : (\n                            <Button\n                              title={getText(\"buy\")}\n                              onPress={() => postGangBuyBulletFactory(bf.type)}\n                            />\n                          )}\n                        </View>\n                      );\n                    })}\n                  </View>\n                </Content>\n              ))}\n\n            <Content\n              contentWidth={\"90%\"}\n              id=\"gangbulletfacotryinfo\"\n              title={getText(\"info\")}\n            >\n              <Markdown style={{ text: { color: theme.primaryText } }}>\n                {getText(\"gangBulletFactoryInfo\")}\n              </Markdown>\n            </Content>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangBulletFactory;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  const postGangCreate = async () => {\n    const { response } = await post(\"gangCreate\", {\n      name,\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <TextInput\n        value={name}\n        onChangeText={setName}\n        style={style(theme).textInput}\n        placeholder=\"Name\"\n        placeholderTextColor={theme.secondaryTextSoft}\n      />\n      <Button\n        onPress={postGangCreate}\n        title={getText(\"gangCreateCTA\")}\n        theme={theme}\n      />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ActivityIndicator, ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Button from \"../components/Button\";\nimport CountDown from \"../components/Countdown\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nconst GangMissions = ({ navigation, screenProps: { device, me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const postGangMissionPrestige = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangMissionPrestige\", {\n      token: device.loginToken,\n    });\n    setResponse(response);\n    getGangMissions();\n    setLoading(false);\n  };\n  const postGangStartMission = async (index) => {\n    setLoading(true);\n    const { response } = await post(\"gangStartMission\", {\n      token: device.loginToken,\n      index,\n    });\n    setResponse(response);\n    getGangMissions();\n    setLoading(false);\n  };\n\n  const getGangMissions = async () => {\n    setLoading(true);\n    const result = await get(`gangMissions?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangMissions);\n\n  const isPrestige = result?.reduce?.(\n    (prev, mission) => prev && !!mission.current\n  );\n  console.log(isPrestige);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {loading && <ActivityIndicator />}\n      {response && <T>{response}</T>}\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>{getText(\"missions\")}</H1>\n          </View>\n          {isPrestige && (\n            <Button\n              title={getText(\"youArePrestige\")}\n              onPress={postGangMissionPrestige}\n            />\n          )}\n          {result?.map((mission, index) => {\n            const time =\n              mission.seconds < 120\n                ? `${mission.seconds} ${getText(\"seconds\")}`\n                : mission.seconds < 3600\n                ? `${Math.round(mission.seconds / 60)} ${getText(\"minutes\")}`\n                : `${Math.round(mission.seconds / 3600)} ${getText(\"hours\")}`;\n\n            const startButton = (\n              <Button\n                onPress={() => postGangStartMission(index)}\n                title={getText(\"start\")}\n              />\n            );\n            return (\n              <Grid style={{ height: 50 }}>\n                <Col size={4}>\n                  <T>\n                    {getText(\n                      mission.what + \"Mission\",\n                      mission.amountPerMember * me?.gang?.members\n                    )}{\" \"}\n                    in {time}\n                  </T>\n                </Col>\n                <Col>\n                  {mission.current ? (\n                    mission.current.isEnded ? (\n                      mission.current.isSucceeded ? (\n                        <T>✅</T>\n                      ) : (\n                        <View style={{ flexDirection: \"row\" }}>\n                          <T>⛔️</T>\n                        </View>\n                      )\n                    ) : (\n                      <View style={{ flexDirection: \"row\" }}>\n                        <T>\n                          {mission.current.amountDone}/\n                          {mission.amountPerMember * me?.gang?.members}\n                        </T>\n                      </View>\n                    )\n                  ) : null}\n                </Col>\n\n                <Col style={{ alignItems: \"flex-end\" }}>\n                  {mission.current ? (\n                    mission.current.isEnded ? (\n                      mission.current.isSucceeded ? null : (\n                        <View style={{ flexDirection: \"row\" }}>\n                          {startButton}\n                        </View>\n                      )\n                    ) : (\n                      <CountDown\n                        style={{ marginLeft: 10 }}\n                        until={moment(mission.current.createdAt)\n                          .add(mission.seconds, \"seconds\")\n                          .valueOf()}\n                        digitStyle={{\n                          backgroundColor: device.theme.secondary,\n                        }}\n                        digitTxtStyle={{ color: device.theme.secondaryText }}\n                        size={8}\n                        timeToShow={[\"H\", \"mm\", \"ss\"]}\n                      />\n                    )\n                  ) : (\n                    <View style={{ flexDirection: \"row\" }}>{startButton}</View>\n                  )}\n                </Col>\n              </Grid>\n            );\n          })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangMissions;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 100;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [gangs, setGangs] = useState([]);\n  const [invites, setInvites] = useState([]);\n\n  const getGangs = async () => {\n    setLoading(true);\n    const { gangs } = await get(\"gangs\");\n    setLoading(false);\n    setGangs(gangs);\n  };\n\n  const getInvites = async () => {\n    const { requests, invites } = await get(\n      `gangInvites?token=${device.loginToken}`\n    );\n    setInvites(invites);\n  };\n\n  const postGangAnswerInvite = async (id, accepted) => {\n    const { response } = await post(\"gangAnswerInvite\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setResponse(response);\n    getInvites();\n  };\n\n  doOnce(getGangs);\n  doOnce(getInvites);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      {invites.length > 0 &&\n        invites.map((invite, index) => {\n          return (\n            <View key={`invite${index}`} style={{ flexDirection: \"row\" }}>\n              <T>{getText(\"gangInvitedTo\", invite.gangName)}</T>\n              <Button\n                title={getText(\"accept\")}\n                onPress={() => postGangAnswerInvite(invite.id, true)}\n              />\n              <Button\n                title={getText(\"decline\")}\n                onPress={() => postGangAnswerInvite(invite.id, false)}\n              />\n            </View>\n          );\n        })}\n\n      <FlatList\n        refreshing={loading}\n        onRefresh={getGangs}\n        data={gangs}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n            : undefined\n        }\n        keyExtractor={(item, index) => `gang${index}`}\n        renderItem={({ item, index }) => {\n          const navigate = () =>\n            navigation.navigate(\"Gang\", { name: item.name });\n          return (\n            <TouchableOpacity\n              onPress={navigate}\n              style={{ margin: MARGIN, width: SIZE }}\n            >\n              {item.thumbnail ? (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + item.thumbnail }}\n                  style={{ width: SIZE, height: SIZE }}\n                  resizeMode=\"cover\"\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              )}\n              <T>\n                {getText(\"name\")}: {item.name}\n              </T>\n              <T>\n                {getText(\"members\")}: {item.members}\n              </T>\n              <T>\n                {getText(\"bank\")}: €{numberFormat(item.bank)},-\n              </T>\n              <T>\n                {getText(\"power\")}: {item.score}\n              </T>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport MarkdownEditor from \"../components/MarkdownEditor\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangSettings = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [gang, setGang] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [gangName, setGangName] = useState(\"\");\n  const [profile, setProfile] = useState(me?.gang?.profile || \"\");\n  const [message, setMessage] = useState(me?.gang?.message || \"\");\n  const [name, setName] = useState(me?.gang?.name || \"\");\n  const [image, setImage] = useState(me?.gang?.image || \"\");\n  const [isBullets, setIsBullets] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const alertAlert = React.useContext(AlertContext);\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${me?.gang?.name}`);\n    setLoading(false);\n    setGang(gang);\n  };\n\n  const getGangInvites = async () => {\n    setLoading(true);\n    const { requests } = await get(`gangInvites?token=${device.loginToken}`);\n    setLoading(false);\n    setRequests(requests);\n  };\n\n  const postGangAnswerJoin = async (id, accepted) => {\n    setLoading(true);\n    const { response } = await post(\"gangAnswerJoin\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGangInvites();\n  };\n\n  const postGangUpdate = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangUpdate\", {\n      token: device.loginToken,\n      profile,\n      image,\n      message,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangInvite = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangInvite\", {\n      token: device.loginToken,\n      name: username,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangTransaction = async (isToUser) => {\n    setLoading(true);\n    const { response } = await post(\"gangTransaction\", {\n      token: device.loginToken,\n      amount,\n      isToUser,\n      isBullets,\n    });\n    reloadMe(device.loginToken);\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangLeave = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangLeave\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangKick = async (userId) => {\n    setLoading(true);\n    const { response } = await post(\"gangKick\", {\n      token: device.loginToken,\n      userId,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGang();\n  };\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const postGangRemove = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangRemove\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangSetRank = async (userId, rank) => {\n    setLoading(true);\n    const { response } = await post(\"gangSetRank\", {\n      token: device.loginToken,\n      userId,\n      rank,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getGang();\n  };\n\n  doOnce(getGangInvites);\n  doOnce(getGang);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n      }\n    }\n  };\n  const handleChoosePhoto = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"gangProfile\")}\n              contentWidth={\"90%\"}\n              id=\"gangProfile\"\n            >\n              {me?.gang?.message && (\n                <MarkdownView style={{ text: { color: theme.primaryText } }}>\n                  {me?.gang?.message}\n                </MarkdownView>\n              )}\n            </Content>\n\n            <Content\n              title={getText(\"yourStatus\")}\n              contentWidth={250}\n              id=\"settingsYourStatus\"\n            >\n              <T>{getText(\"youAreWhat\", getGangLevel(me?.gangLevel))}</T>\n            </Content>\n\n            {/* Answer join */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"gangJoinRequestsTitle\")}\n                contentWidth={250}\n                id=\"settingsAnswerJoin\"\n              >\n                {requests.length > 0 ? (\n                  requests.map((request) => {\n                    return (\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{request.user?.name}</T>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Button\n                            title={getText(\"accept\")}\n                            onPress={() => postGangAnswerJoin(request.id, true)}\n                          />\n                          <Button\n                            title={getText(\"decline\")}\n                            onPress={() =>\n                              postGangAnswerJoin(request.id, false)\n                            }\n                          />\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{getText(\"noJoinRequests\")}</T>\n                )}\n              </Content>\n            ) : null}\n\n            {/* Invite */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"invitePeople\")}\n                contentWidth={250}\n                id=\"settingsInvite\"\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={username}\n                    onChangeText={setUsername}\n                    placeholder={getText(\"name\")}\n                  />\n                  <Button\n                    title={getText(\"invite\")}\n                    onPress={postGangInvite}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </Content>\n            ) : null}\n\n            {/* Transactions */}\n            {\n              <Content\n                title={getText(\"gangBank\")}\n                contentWidth={250}\n                id=\"settingsTransactions\"\n              >\n                <T>\n                  {getText(\"bankMoney\")}: €{numberFormat(me?.gang?.bank || 0)},-\n                </T>\n                <T>\n                  {getText(\"bullets\")}: {numberFormat(me?.gang?.bullets || 0)}\n                </T>\n                <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={amount}\n                    onChangeText={setAmount}\n                    placeholder={getText(\"amount\")}\n                  />\n\n                  <Button\n                    title={isBullets ? getText(\"bullets\") : getText(\"bank\")}\n                    onPress={() => setIsBullets(!isBullets)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n\n                  <Button\n                    title={getText(\"in\")}\n                    onPress={() => postGangTransaction(false)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                  {me?.gangLevel === GANG_LEVEL_BANK ||\n                  me?.gangLevel === GANG_LEVEL_BOSS ? (\n                    <Button\n                      title={getText(\"out\")}\n                      onPress={() => postGangTransaction(true)}\n                      style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                    />\n                  ) : null}\n                </View>\n              </Content>\n            }\n\n            {/* memberview with kick or change rank, per member */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"members\")}\n                contentWidth=\"90%\"\n                id=\"memberViewSettings\"\n              >\n                {gang?.users?.map((member) => {\n                  return (\n                    <Grid>\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{member.name}</T>\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{getGangLevel(member.gangLevel)}</T>\n                      </Col>\n\n                      <Col\n                        style={{\n                          justifyContent: \"center\",\n                          alignItems: \"flex-end\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          {me?.gangLevel >= GANG_LEVEL_UNDERBOSS &&\n                            member.id !== me?.id && (\n                              <Button\n                                title={getText(\"kick\")}\n                                onPress={() => postGangKick(member.id)}\n                              />\n                            )}\n                          {me?.gangLevel === GANG_LEVEL_BOSS && (\n                            <Button\n                              title={getText(\"changeRank\")}\n                              style={{ marginLeft: 10 }}\n                              onPress={() => changeRank(member.id)}\n                            />\n                          )}\n                        </View>\n                      </Col>\n                    </Grid>\n                  );\n                })}\n              </Content>\n            )}\n            {/* update name,profile,image */}\n\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"gangProfile\")}\n                contentWidth=\"90%\"\n                id=\"updateProfileSettings\"\n              >\n                <TouchableOpacity onPress={handleChoosePhoto}>\n                  {image ? (\n                    <Image\n                      source={{\n                        uri: image.includes(\"data:image\")\n                          ? image\n                          : Constants.SERVER_ADDR + image,\n                      }}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  ) : (\n                    <Image\n                      source={require(\"../../assets/icon.png\")}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  )}\n                </TouchableOpacity>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={styles(theme).textInput}\n                  value={name}\n                  onChangeText={setName}\n                  placeholder={getText(\"gangName\")}\n                />\n                <T bold>{getText(\"gangProfile\")}</T>\n\n                <MarkdownEditor value={profile} onChange={setProfile} />\n                <T bold>{getText(\"gangMessage\")}</T>\n\n                <MarkdownEditor value={message} onChange={setMessage} />\n\n                <Button\n                  onPress={postGangUpdate}\n                  title={getText(\"save\")}\n                  style={{ marginTop: 10 }}\n                />\n              </Content>\n            )}\n            {/* transactions */}\n\n            {/* Leave */}\n            <View style={{ marginVertical: 20 }}>\n              {\n                <Button\n                  title={getText(\"leaveGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"leaveGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangLeave },\n                        { text: getText(\"cancel\") },\n                      ],\n                      { key: \"leaveGang\" }\n                    )\n                  }\n                />\n              }\n            </View>\n\n            {/* Gang delete */}\n            <View style={{ marginVertical: 20 }}>\n              {me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Button\n                  title={getText(\"removeGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"removeGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangRemove },\n                        { text: getText(\"cancel\") },\n                      ],\n                      { key: \"removeGang\" }\n                    )\n                  }\n                />\n              )}\n            </View>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangSettings;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\nconst MARGIN = 20;\nconst { width, height } = Dimensions.get(\"window\");\nconst SIZE = width < 1000 ? 100 : 200;\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangShop = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const prices = [\n    null,\n    50000,\n    100000,\n    200000,\n    500000,\n    1000000,\n    1500000,\n    2000000,\n    3000000,\n    4000000,\n    5000000,\n    10000000,\n    20000000,\n  ];\n\n  const items = [\n    {\n      name: getText(\"gangShopItem1\"),\n      price: prices[1],\n      current: me?.gang?.item1,\n      image: require(\"../../assets/gangshop/item1.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem2\"),\n      price: prices[2],\n      current: me?.gang?.item2,\n      image: require(\"../../assets/gangshop/item2.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem3\"),\n      price: prices[3],\n      current: me?.gang?.item3,\n      image: require(\"../../assets/gangshop/item3.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem4\"),\n      price: prices[4],\n      current: me?.gang?.item4,\n      image: require(\"../../assets/gangshop/item4.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem5\"),\n      price: prices[5],\n      current: me?.gang?.item5,\n      image: require(\"../../assets/gangshop/item5.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem6\"),\n      price: prices[6],\n      current: me?.gang?.item6,\n      image: require(\"../../assets/gangshop/item6.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem7\"),\n      price: prices[7],\n      current: me?.gang?.item7,\n      image: require(\"../../assets/gangshop/item7.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem8\"),\n      price: prices[8],\n      current: me?.gang?.item8,\n      image: require(\"../../assets/gangshop/item8.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem9\"),\n      price: prices[9],\n      current: me?.gang?.item9,\n      image: require(\"../../assets/gangshop/item9.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem10\"),\n      price: prices[10],\n      current: me?.gang?.item10,\n      image: require(\"../../assets/gangshop/item10.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem11\"),\n      price: prices[11],\n      current: me?.gang?.item11,\n      image: require(\"../../assets/gangshop/item11.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem12\"),\n      price: prices[12],\n      current: me?.gang?.item12,\n      image: require(\"../../assets/gangshop/item12.jpg\"),\n    },\n  ];\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const postGangShop = async (itemId) => {\n    setLoading(true);\n    const { response } = await post(\"gangShop\", {\n      itemId,\n      amount: amount[itemId],\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    setLoading(false);\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <T>\n        {getText(\"gangBank\")}: €{numberFormat(me?.gang?.bank || 0)},-\n      </T>\n      <T>\n        {getText(\"power\")}: {me?.gang?.power}\n      </T>\n      <FlatList\n        refreshing={loading}\n        onRefresh={() => reloadMe(device.loginToken)}\n        data={items}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\", height: height - 200 }\n            : undefined\n        }\n        keyExtractor={(item, index) => `shop${index}`}\n        renderItem={({ item, index }) => {\n          return (\n            <View style={{ margin: MARGIN }}>\n              <Image\n                source={item.image}\n                style={{ width: SIZE, height: SIZE }}\n                resizeMode=\"contain\"\n              />\n              <T>{item.name}</T>\n              <T>€{item.price},-</T>\n              <T>\n                {getText(\"inPossession\")}: {item.current}\n              </T>\n              {(me?.gangLevel === GANG_LEVEL_BOSS ||\n                me?.gangLevel === GANG_LEVEL_BANK) && (\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={[styles(theme).textInput, { width: 100 }]}\n                    value={amount[index + 1] || \"\"}\n                    onChangeText={(v) =>\n                      setAmount({ ...amount, [index + 1]: v })\n                    }\n                    placeholder={getText(\"amount\")}\n                  />\n                  <Button\n                    style={{ marginVertical: 10, marginLeft: 10 }}\n                    title={getText(\"buy\")}\n                    onPress={() => postGangShop(index + 1)}\n                  />\n                </View>\n              )}\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default GangShop;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    // this.focusListener = navigation.addListener(\"didFocus\", () => {\n    //   // The screen is focused\n    //   // Call any action\n    //   this.fetchGroups();\n    // });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    // this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst GarageShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"garage\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default GarageShop;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        key={`item${index}`}\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React, { Component } from \"react\";\nimport { Image, ScrollView, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              {response.success && (\n                <Image\n                  style={{ width: 100, height: 100 }}\n                  source={{\n                    uri:\n                      Constants.SERVER_ADDR +\n                      \"/images/female/\" +\n                      response.success +\n                      \".gif\",\n                  }}\n                />\n              )}\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { withAlert } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post, withCaptcha } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter() {\n    const { alert } = this.props;\n    const { me, device, reloadMe, reloadCities } = this.props.screenProps;\n\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const postGetIncome = async (type, captcha) => {\n      const { response } = await post(\"income\", {\n        token: device.loginToken,\n        captcha,\n        type,\n      });\n\n      reloadMe(device.loginToken);\n      reloadCities();\n      alert(response, null, null, { key: \"incomeResponse\" });\n    };\n    const incomeAction = (type) =>\n      withCaptcha(device.loginToken, me?.needCaptcha, getText, alert, (code) =>\n        postGetIncome(type, code)\n      );\n\n    return (\n      <View style={{ flexDirection: \"column\" }}>\n        <Button\n          title={\"Haal Sex Shop inkomen op\"}\n          onPress={() => incomeAction(\"rld\")}\n          style={{ margin: 10 }}\n        />\n        <Button\n          title={\"Verkoop je wiet aan de coffeeshop\"}\n          onPress={() => incomeAction(\"landlord\")}\n          style={{ margin: 10 }}\n        />\n        <Button\n          title={\"Haal Junkies inkomen op (leger des heils)\"}\n          onPress={() => incomeAction(\"junkies\")}\n          style={{ margin: 10 }}\n        />\n      </View>\n    );\n  }\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default withAlert(Income);\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 1.000.000 kogels kosten Hoe dit wordt berekend, is\n        geheim, maar het ligt aan deze factoren: Voor de aanvaller: Het wapen,\n        de moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels\n        je nodig zult hebben. Voor de verdediger: De verdediging, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe meer kogels de\n        aanvaller nodig zal hebben. De rang heeft de meeste invloed, daarna het\n        wapen, de verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Coffeeshop, Leger des Heils en het Sex shop krijgen 20% van iedereens\n        inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React, { Component } from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport CountDown from \"../components/Countdown\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n  }\n\n  fetchMembers() {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={item.jailAt}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          size={8}\n          timeToShow={[\"mm\", \"ss\"]}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n\n                setTimeout(() => {\n                  this.fetchMembers();\n                  reloadMe(device.loginToken);\n                }, 200);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          extraData={this.state.jail.length}\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Lotto = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"lottoDay\");\n  const buy = async () => {\n    const { response } = await post(\"buyLotto\", {\n      token: device.loginToken,\n      amount,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          paddingHorizontal: 20,\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {keyValue(getText(\"cash\"), `€${me?.cash}`)}\n      {keyValue(getText(\"bank\"), `€${me?.bank}`)}\n      {keyValue(getText(\"swissBank\"), `€${me?.swissBank}`)}\n\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <T>{getText(\"youHaveDayTickets\", me?.lottoDay)}</T>\n            <T>{getText(\"youHaveWeekTickets\", me?.lottoWeek)}</T>\n            <T>{getText(\"youHaveMonthTickets\", me?.lottoMonth)}</T>\n\n            <T bold style={{ marginTop: 20 }}>\n              {getText(\"buy\")}\n            </T>\n            <View style={{ flexDirection: \"row\" }}>\n              <TextInput\n                style={[style(theme).textInput, { flex: 1 }]}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <Button\n                style={{ marginVertical: 10, marginLeft: 10 }}\n                title={\n                  type === \"lottoDay\"\n                    ? getText(\"dayLotto\")\n                    : type === \"lottoWeek\"\n                    ? getText(\"weekLotto\")\n                    : getText(\"monthLotto\")\n                }\n                onPress={() => {\n                  setType(\n                    type === \"lottoDay\"\n                      ? \"lottoWeek\"\n                      : type === \"lottoWeek\"\n                      ? \"lottoMonth\"\n                      : \"lottoDay\"\n                  );\n                }}\n              />\n            </View>\n\n            <Button\n              theme={theme}\n              title={getText(\"buy\")}\n              onPress={() => buy()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Lotto;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = getText(type);\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport styles from \"../Style\";\nimport {\n  darkerHex,\n  doOnce,\n  get,\n  getTextFunction,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\n\nconst SIZE = 250;\nconst MARGIN = 20;\n\nconst Market = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [market, setMarket] = useState([]);\n\n  //new offer\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [buy, setBuy] = useState(false);\n  const [type, setType] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getMarket = async () => {\n    setLoading(true);\n\n    const { market } = await get(`market`);\n    setLoading(false);\n    setMarket(market);\n  };\n\n  const postMarketCreateOffer = async () => {\n    setLoading(true);\n    const { response } = await post(\"marketCreateOffer\", {\n      token: device.loginToken,\n      type,\n      price,\n      amount,\n      buy,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  const postMarketTransaction = async (offerId) => {\n    setLoading(true);\n    const { response } = await post(\"marketTransaction\", {\n      token: device.loginToken,\n      offerId,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  const postMarketRemoveOffer = async (offerId) => {\n    setLoading(true);\n    const { response } = await post(\"marketRemoveOffer\", {\n      token: device.loginToken,\n      offerId,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  doOnce(getMarket);\n\n  const chooseType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const validTypes = [\"junkies\", \"hoeren\", \"wiet\", \"gamepoints\", \"bullets\"];\n\n    const options = validTypes.map((type) => getText(type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < validTypes.length) {\n          setType(validTypes[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {response && <T>{response}</T>}\n      </View>\n\n      <View style={{ flex: 1 }}>\n        {/* New offer */}\n\n        <View style={{ marginVertical: 20 }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Button\n              title={buy ? getText(\"buy\") : getText(\"sell\")}\n              onPress={() => setBuy(!buy)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={amount}\n              onChangeText={setAmount}\n              placeholder={getText(\"amount\")}\n            />\n\n            <Button\n              title={type ? getText(type) : getText(\"whatType\")}\n              onPress={chooseType}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <T style={{ marginLeft: 10 }}>{getText(\"for\")}</T>\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={price}\n              onChangeText={setPrice}\n              placeholder={getText(\"price\")}\n            />\n\n            <Button\n              title={getText(\"submit\")}\n              onPress={() => postMarketCreateOffer(true)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n          </View>\n        </View>\n\n        <FlatList\n          refreshControl={\n            <RefreshControl refreshing={loading} onRefresh={getMarket} />\n          }\n          data={market}\n          numColumns={\n            Platform.OS === \"web\"\n              ? undefined\n              : Math.floor(width / (SIZE + MARGIN * 2))\n          }\n          contentContainerStyle={\n            Platform.OS === \"web\"\n              ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n              : undefined\n          }\n          keyExtractor={(item, index) => `offer${index}`}\n          renderItem={({ item, index }) => {\n            return (\n              <View\n                style={{\n                  width: SIZE,\n                  backgroundColor: darkerHex(theme.primary),\n                  borderRadius: 15,\n                  padding: MARGIN,\n                  margin: MARGIN,\n                }}\n              >\n                {item.userId === me?.id && (\n                  <TouchableOpacity\n                    style={{ alignSelf: \"flex-end\" }}\n                    onPress={() => postMarketRemoveOffer(item.id)}\n                  >\n                    <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n                  </TouchableOpacity>\n                )}\n                <View style={{ flex: 1 }}>\n                  <T>\n                    {item.isBuy ? getText(\"requested\") : getText(\"forSale\")}\n                  </T>\n                </View>\n\n                <User navigation={navigation} user={item.user} />\n\n                <T>\n                  {item.amount} {getText(item.type)}\n                </T>\n                <T>€{numberFormat(item.price)},-</T>\n\n                <Button\n                  title={item.isBuy ? getText(\"sell\") : getText(\"buy\")}\n                  onPress={() => postMarketTransaction(item.id)}\n                />\n              </View>\n            );\n          }}\n        />\n\n        <View style={{ height: 80 }} />\n      </View>\n    </View>\n  );\n};\n\nexport default Market;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Dimensions, FlatList, Platform, TextInput, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, getRank, getStrength, getTextFunction } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\n\nconst filters = [\n  {\n    key: \"alive\",\n    title: \"Levend\",\n  },\n  {\n    key: \"dead\",\n    title: \"Dood\",\n  },\n  {\n    key: \"crew\",\n    title: \"Crew\",\n  },\n];\n\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\n\nconst Members = ({\n  showActionSheetWithOptions,\n  screenProps: { me, device },\n  navigation,\n}) => {\n  const [members, setMembers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [orderBy, setOrderBy] = useState(orders[0]);\n  const [filter, setFilter] = useState(filters[0]);\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    //   if (order) {\n    //     setOrderBy(orders[order]);\n    //     fetchMembers(orders[order].key);\n    //   } else {\n    fetchMembers(orderBy.key);\n    //   }\n  });\n\n  const fetchMembers = (order, filter) => {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}&filter=${filter}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        setMembers(members);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderItem = ({ item, index }) => {\n    const orderKey = orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n          paddingVertical: 10,\n        }}\n      >\n        <User navigation={navigation} user={item} />\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  const openActionSheetSort = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          setOrderBy(orders[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filter.key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const openActionSheetFilter = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = filters.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < filters.length) {\n          console.log(\"setfilter\", filters[buttonIndex]);\n          setFilter(filters[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filters[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ backgroundColor: device.theme.primary }}>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title={getText(\"sort\")}\n            onPress={() => openActionSheetSort()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n\n          <Button\n            title={getText(\"filter\")}\n            onPress={() => openActionSheetFilter()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: device.theme.secondaryText,\n            }}\n            onChangeText={setSearch}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n\n  const searchedMembers = members.filter((m) =>\n    search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? 0 : undefined,\n        }}\n        ItemSeparatorComponent={() => <Separator />}\n        ListHeaderComponent={renderHeader}\n        data={searchedMembers}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default connectActionSheet(Members);\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, properties } from \"../Util\";\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    me,\n    reloadCities,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = getText(property);\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  {city.city === me?.city && (\n                    <Button\n                      key={`index${index}${property}`}\n                      style={{ marginVertical: 15 }}\n                      theme={theme}\n                      title={getText(\"manage\")}\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: property,\n                          city: city.city,\n                        })\n                      }\n                    />\n                  )}\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </View>\n  );\n};\n\nexport default MyObjects;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useCallback, useState } from \"react\";\nimport { Image, Platform, ScrollView, TouchableOpacity } from \"react-native\";\nimport Button from \"../components/Button\";\nimport MarkdownEditor from \"../components/MarkdownEditor\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst MyProfile = ({ screenProps: { me, device, reloadMe } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [image, setImage] = useState(me?.image);\n  const [bio, setBio] = useState(me?.bio || \"\");\n  const setBioCallback = useCallback((bio) => setBio(bio), [setBio]);\n\n  const handleChooseImage = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n        margin: 5,\n      }}\n    >\n      <TouchableOpacity onPress={handleChooseImage}>\n        {image ? (\n          <Image\n            source={{\n              uri: image.includes(\"data:image\")\n                ? image\n                : Constants.SERVER_ADDR + image,\n            }}\n            style={{ width: 40, height: 40 }}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: 40, height: 40 }}\n            resizeMode=\"cover\"\n          />\n        )}\n      </TouchableOpacity>\n\n      <MarkdownEditor value={bio} onChange={setBioCallback} />\n      <Button\n        title={getText(\"save\")}\n        style={{ marginVertical: 5 }}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              bio: bio,\n              image,\n              loginToken: device.loginToken,\n            }),\n          })\n            .then((response) => response.json())\n            .then((response) => {\n              alert(getText(\"success\"));\n              reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.log(\"upload error\", error);\n              alert(getText(\"somethingWentWrong\"));\n            });\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Oc = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    ocs,\n    reloadOcs,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(() => reloadOcs(loginToken));\n  doOnce(fetchRacecars);\n\n  const join = async (ocId) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadOcs(loginToken);\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (ocId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    reloadOcs(loginToken);\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (ocId) => {\n    setLoading(true);\n    const { response } = await post(\"startOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadOcs(loginToken);\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={\n            item.type === \"bank\"\n              ? require(\"../../assets/bank.jpg\")\n              : item.type === \"cars\"\n              ? require(\"../../assets/cars.jpeg\")\n              : require(\"../../assets/shootout.jpeg\")\n          }\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.ocParticipants.length}/\n            {item.numParticipants}\n          </T>\n          {item.ocParticipants.length > 0 && (\n            <T>{item.ocParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          <View style={{ flexDirection: \"row\" }}>\n            {!!item.ocParticipants.find((x) => x.name === me?.name) ? (\n              item.ocParticipants.length === item.numParticipants ? (\n                <Button\n                  theme={theme}\n                  title={getText(\"startCTA\")}\n                  onPress={() => start(item.id)}\n                />\n              ) : (\n                <Button\n                  theme={theme}\n                  title={getText(\"leaveCTA\")}\n                  onPress={() => leave(item.id)}\n                />\n              )\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"participate\")}\n                onPress={() => {\n                  join(item.id);\n                }}\n              />\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity onPress={() => navigation.navigate(\"CreateOc\")}>\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadOcs(loginToken);\n              setResponse(null);\n            }}\n          />\n        }\n        data={ocs}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Oc;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          paddingHorizontal: 20,\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {keyValue(getText(\"cash\"), `€${me?.cash}`)}\n      {keyValue(getText(\"bank\"), `€${me?.bank}`)}\n      {keyValue(getText(\"swissBank\"), `€${me?.swissBank}`)}\n\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport T from \"./T\";\n\nconst Gang = ({ gang, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Gang\", { name: gang.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {gang.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + gang.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T>{gang.name}</T>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Gang;\n","import React, { useState } from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Gang from \"../components/Gang\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [gangs, setGangs] = useState([]);\n  const getGangs = async () => {\n    const { gangs } = await get(\"police\");\n    setGangs(gangs);\n  };\n  doOnce(getGangs);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      {gangs.map((gang) => {\n        return (\n          <View style={{ flex: 1 }}>\n            <Grid style={{ marginTop: 20 }}>\n              <Col>\n                <Gang gang={gang} navigation={navigation} />\n              </Col>\n\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>\n                  {gang.bullets} {getText(\"bullets\")}\n                </T>\n              </Col>\n            </Grid>\n            {gang.users.map((user) => (\n              <Grid style={{ marginTop: 10 }}>\n                <Col>\n                  <User navigation={navigation} user={user} size={40} />\n                </Col>\n              </Grid>\n            ))}\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Content from \"../components/Content\";\nimport Gang from \"../components/Gang\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport {\n  doOnce,\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  InactiveScreens,\n} from \"../Util\";\n\n/**\n */\nconst Prizes = ({\n  navigation,\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [prizes, setPrizes] = useState([]);\n  const getPrizes = async () => {\n    const { prizes } = await get(\"prizes\");\n    setPrizes(prizes);\n  };\n  doOnce(getPrizes);\n\n  return (\n    <ScrollView>\n      {moment().isAfter(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE) &&\n        moment().isBefore(InactiveScreens.PRIZES_RELEASE_DATE) && (\n          <MarkdownView style={{ text: { color: theme.primaryText } }}>\n            {getText(\"prizesText\")}\n          </MarkdownView>\n        )}\n\n      {me?.level > 1 ||\n      moment().isAfter(InactiveScreens.PRIZES_RELEASE_DATE) ? (\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {prizes.map((prize, index) => {\n            const when =\n              prize.every === \"hour\"\n                ? getText(\"everyHour\")\n                : prize.every === \"day\"\n                ? getText(\"everyDay5pm\")\n                : prize.every === \"week\"\n                ? getText(\"everyWeekSunday5pm\")\n                : prize.every === \"month\"\n                ? moment().endOf(\"month\").format(\"DD-MM-YYYY HH:mm\")\n                : null;\n            return (\n              <Content\n                contentWidth={\"90%\"}\n                id={`prize${index}`}\n                title={getText(`prize${prize.forWhat}title`) + \" \" + when}\n              >\n                {prize.stats.map((stat, i) => {\n                  //stat is user\n                  return (\n                    <Grid key={`grid${i}x${index}`}>\n                      <Col\n                        size={2}\n                        style={{ justifyContent: \"center\", paddingTop: 10 }}\n                      >\n                        {prize.forWhat === \"gang\" ? (\n                          <Gang size={40} navigation={navigation} gang={stat} />\n                        ) : (\n                          <User size={40} navigation={navigation} user={stat} />\n                        )}\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\", paddingTop: 10 }}>\n                        <T>\n                          {stat.prize} {getText(prize.prizeWhat)}\n                        </T>\n                      </Col>\n\n                      {prize.forWhat === \"gang\" ? null : (\n                        <Col\n                          style={{ justifyContent: \"center\", paddingTop: 10 }}\n                        >\n                          <T>\n                            {prize.forWhat === \"rank\"\n                              ? getRank(stat[prize.forWhat], \"both\")\n                              : prize.forWhat === \"strength\"\n                              ? getStrength(stat[prize.forWhat], \"both\")\n                              : `${stat[prize.forWhat]} ${getText(\n                                  prize.forWhat\n                                )}`}\n                          </T>\n                        </Col>\n                      )}\n                    </Grid>\n                  );\n                })}\n              </Content>\n            );\n          })}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\nexport default Prizes;\n","// import color from \"markdown-it-color-text\";\nimport center from \"markdown-it-center-text\";\nimport emoji from \"markdown-it-emoji\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Linking,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Markdown, { MarkdownIt } from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n  InactiveScreens,\n  post,\n  properties,\n} from \"../Util\";\n\nconst markdownItInstance = MarkdownIt({ typographer: true })\n  // .use(taskLists)\n  .use(emoji)\n  .use(center);\n// .use(color);\n\nconst Bio = React.memo(({ bio, theme }) => {\n  return (\n    <Markdown\n      debugPrintTree\n      markdownit={markdownItInstance}\n      style={{ body: { color: theme.primaryText } }}\n      rules={{\n        blocklink: (node, children, parent, styles) => {\n          return (\n            <TouchableOpacity\n              key={node.key}\n              onPress={() => {\n                if (Platform.OS == \"web\") {\n                  window.open(node.attributes.href, \"_blank\");\n                } else {\n                  Linking.openURL(node.attributes.href); // normal Linking react-native\n                }\n              }}\n            >\n              {children}\n            </TouchableOpacity>\n          );\n        },\n\n        image: (node, children, parent, styles) => {\n          const [width, setWidth] = useState(0);\n          const [height, setHeight] = useState(0);\n          Image.getSize(node.attributes.src, (width, height) => {\n            setWidth(width);\n            setHeight(height);\n          });\n\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <Image\n              key={node.key}\n              source={{ uri: node.attributes.src }}\n              style={{ width: width, height: height }}\n              resizeMode=\"contain\"\n            />\n          );\n        },\n\n        emoji: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return <Text key={node.key}>{node.content}</Text>;\n        },\n\n        centertext: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View\n              key={node.key}\n              style={{\n                flex: 1,\n                alignItems: \"center\",\n              }}\n            >\n              {children}\n            </View>\n          );\n        },\n\n        paragraph: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View key={node.key} style={{ flex: 1 }}>\n              {children}\n            </View>\n          );\n        },\n\n        textgroup: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View key={node.key} style={{ flex: 1 }}>\n              {children}\n            </View>\n          );\n        },\n      }}\n    >\n      {bio}\n    </Markdown>\n  );\n});\nconst ProfileScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    device: { theme, loginToken },\n  },\n}) => {\n  const [profile, setProfile] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const name = params?.name;\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    getProfile(name);\n  });\n  doOnce(reloadCities);\n\n  useEffect(() => {\n    getProfile(name);\n  }, [params?.name]);\n\n  const postReport = async () => {\n    const { response } = await post(\"report\", {\n      token: device.loginToken,\n      userId: profile?.id,\n      ban: \"reported\",\n      banReason: \"profile\",\n    });\n\n    setResponse(response);\n  };\n\n  const getProfile = (name) => {\n    setLoading(true);\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        setProfile(responseJson);\n        setLoading(false);\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  const alertAlert = React.useContext(AlertContext);\n\n  if (loading) {\n    return <ActivityIndicator />;\n  }\n\n  if (!profile) {\n    return <T>{getText(\"personDoesntExist\")}</T>;\n  }\n\n  const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n  const color = getUserColor(profile, device.theme);\n\n  const uri = Constants.SERVER_ADDR + profile?.image;\n  const hasImage = !!profile?.image;\n\n  const PROFESSIONS = [\n    { type: \"thief\", image: require(\"../../assets/profession/thief.jpg\") },\n    {\n      type: \"carthief\",\n      image: require(\"../../assets/profession/carthief.jpg\"),\n    },\n    {\n      type: \"weedgrower\",\n      image: require(\"../../assets/profession/weedgrower.jpg\"),\n    },\n    { type: \"killer\", image: require(\"../../assets/profession/killer.jpg\") },\n    { type: \"pimp\", image: require(\"../../assets/profession/pimp.jpg\") },\n    { type: \"banker\", image: require(\"../../assets/profession/banker.jpg\") },\n    {\n      type: \"jailbreaker\",\n      image: require(\"../../assets/profession/jailbreaker.jpg\"),\n    },\n  ];\n  const profession = profile?.profession\n    ? PROFESSIONS.find((p) => p.type === profile.profession)\n    : null;\n\n  const professionReleaseDate = InactiveScreens.PROFESSIONS_RELEASE_DATE;\n\n  return (\n    <ScrollView>\n      <View style={{ justifyContent: \"center\" }}>\n        <View\n          style={{\n            backgroundColor: \"#444\",\n            borderRadius: 10,\n            margin: 20,\n            padding: 20,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n          {response && <T>{response}</T>}\n          {hasImage ? (\n            <View>\n              <Image\n                source={{ uri }}\n                style={{\n                  width: \"100%\",\n                  height: 400,\n                }}\n                resizeMode=\"contain\"\n              />\n            </View>\n          ) : null}\n\n          {profile?.gang ? (\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"Gang\", { name: profile?.gang?.name });\n              }}\n            >\n              <T>Gang</T>\n              {profile?.gang?.image && (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + profile?.gang?.image }}\n                  style={{ width: 200, height: 200 }}\n                  resizeMode=\"contain\"\n                />\n              )}\n              <T>{profile?.gang?.name}</T>\n            </TouchableOpacity>\n          ) : null}\n\n          {profession && moment().isAfter(professionReleaseDate) && (\n            <View style={{ width: 100, margin: 20 }}>\n              <Image\n                source={profession.image}\n                style={{ width: 100, height: 100 }}\n                resizeMode=\"contain\"\n              />\n              <View>\n                <T bold>{getText(profession.type)}</T>\n              </View>\n            </View>\n          )}\n\n          {keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n          {keyValue(\n            getText(\"lastOnline\"),\n            moment(profile?.onlineAt).format(\"DD-MM-YYYY\")\n          )}\n          {keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n          {keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n          {keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n          {keyValue(\n            getText(\"strength\"),\n            getStrength(profile?.strength, \"both\")\n          )}\n          {keyValue(getText(\"health\"), `${profile?.health}%`)}\n          {keyValue(getText(\"weed\"), profile?.wiet)}\n          {keyValue(getText(\"junkies\"), profile?.junkies)}\n          {keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n          <T bold>{getText(\"properties\")}</T>\n          {properties\n            .map((p) => p.name)\n            .map((property) => {\n              return (\n                cities &&\n                cities.map((city, index) => {\n                  const ownerKey = `${property}Owner`;\n                  if (profile?.name === city[ownerKey]) {\n                    return (\n                      <T>\n                        {getText(property)} in {city.city}\n                      </T>\n                    );\n                  }\n\n                  return null;\n                })\n              );\n            })}\n\n          <View style={styles.row}>\n            <Button\n              title={getText(\"chat\")}\n              onPress={async () => {\n                const { id } = await get(\n                  `pm?loginToken=${loginToken}&userId=${profile.id}`\n                );\n\n                navigation.navigate(\"Channel\", { id });\n              }}\n            />\n\n            <Button\n              title={getText(\"rob\")}\n              onPress={() =>\n                navigation.navigate(\"Rob\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"attack\")}\n              onPress={() =>\n                navigation.navigate(\"Kill\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"donate\")}\n              onPress={() =>\n                navigation.navigate(\"Donate\", {\n                  to: profile.name,\n                })\n              }\n            />\n\n            <Button\n              title={getText(\"report\")}\n              onPress={() =>\n                alertAlert(\n                  getText(\"areYouSure\"),\n                  getText(\"areYouSure\"),\n                  [\n                    { text: getText(\"ok\"), onPress: () => postReport() },\n                    { text: getText(\"cancel\") },\n                  ],\n                  { key: \"postReport\" }\n                )\n              }\n            />\n          </View>\n        </View>\n\n        <View style={{ marginVertical: 20 }}>\n          {profile?.ban !== \"shadowBanned\" && profile?.ban !== \"banned\" && (\n            <Bio theme={theme} bio={profile?.bio} />\n          )}\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, numberFormat, properties } from \"../Util\";\n\nconst Properties = ({\n  navigation,\n  screenProps: { me, cities, reloadCities },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(reloadCities);\n\n  const gridStyle = {\n    paddingVertical: 10,\n    paddingLeft: 10,\n    borderBottomWidth: 0.5,\n    borderBottomColor: \"black\",\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        <View>\n          <View style={gridStyle}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          {cities?.map((city, index) => {\n            return (\n              <View\n                key={`i${index}`}\n                style={[\n                  gridStyle,\n                  {\n                    borderRightColor: \"black\",\n                    borderRightWidth: 0.5,\n                    borderLeftColor: \"black\",\n                    borderLeftWidth: 0.5,\n                    paddingLeft: 10,\n                  },\n                ]}\n              >\n                <T>{city.city}</T>\n              </View>\n            );\n          })}\n        </View>\n\n        <ScrollView horizontal>\n          <View style={{ width: properties.length * 3 * 150 }}>\n            <Grid style={gridStyle}>\n              {properties.map((property, index) => {\n                return [\"owner\", \"damage\", \"profit\", \"price\", \"bullets\"].map(\n                  (suffix) => {\n                    if (\n                      (suffix === \"price\" || suffix === \"bullets\") &&\n                      property.name !== \"bulletFactory\"\n                    ) {\n                      return;\n                    }\n                    const field = `${getText(property.name)} ${getText(\n                      suffix\n                    )}`;\n\n                    return (\n                      <Col size={1} key={`prop${index}${suffix}`}>\n                        <T bold numberOfLines={1}>\n                          {field}\n                        </T>\n                      </Col>\n                    );\n                  }\n                );\n              })}\n            </Grid>\n\n            {cities?.map((city, index) => {\n              return (\n                <Grid style={gridStyle}>\n                  {properties.map((property) => {\n                    return [\n                      \"Owner\",\n                      \"Damage\",\n                      \"Profit\",\n                      \"Price\",\n                      \"bullets\",\n                    ].map((fieldSuffix) => {\n                      if (\n                        (fieldSuffix === \"Price\" ||\n                          fieldSuffix === \"bullets\") &&\n                        property.name !== \"bulletFactory\"\n                      ) {\n                        return;\n                      }\n                      const field =\n                        fieldSuffix === \"bullets\"\n                          ? fieldSuffix\n                          : `${property.name}${fieldSuffix}`;\n\n                      const formattedField =\n                        fieldSuffix === \"Owner\" ? (\n                          <TouchableOpacity\n                            onPress={() =>\n                              navigation.navigate(\"Profile\", {\n                                name: city[field],\n                              })\n                            }\n                          >\n                            <T>{city[field]}</T>\n                          </TouchableOpacity>\n                        ) : fieldSuffix === \"Damage\" ? (\n                          <T>{city[field]}%</T>\n                        ) : fieldSuffix === \"Profit\" ||\n                          fieldSuffix === \"Price\" ? (\n                          <T>€{numberFormat(city[field])},-</T>\n                        ) : (\n                          <T>{numberFormat(city[field])}</T>\n                        );\n                      return <Col>{formattedField}</Col>;\n                    });\n                  })}\n                </Grid>\n              );\n            })}\n          </View>\n        </ScrollView>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Properties;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst ProtectionShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"protection\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default ProtectionShop;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    // this.focusListener = navigation.addListener(\"didFocus\", () => {\n    //   // The screen is focused\n    //   // Call any action\n    //   console.log(\"FETCH GARAGE\");\n    //   this.fetchGarage();\n    // });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    // this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Reports = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [reports, setReports] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [banReason, setBanReason] = useState(\"\");\n\n  const postReport = async (ban, userId) => {\n    const { response } = await post(\"report\", {\n      token: device.loginToken,\n      userId,\n      ban,\n      banReason,\n    });\n\n    setResponse(response);\n    getReports();\n  };\n\n  const getReports = async () => {\n    const { reports } = await get(`reports?token=${device.loginToken}`);\n    setReports(reports);\n  };\n\n  doOnce(getReports);\n\n  console.log(\"reports\", reports);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          {reports?.map?.((user) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <User user={user} size={40} navigation={navigation} />\n\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{getText(user.ban)}</T>\n                <T>\n                  {getText(\"reason\")}: {user.banReason}\n                </T>\n                <Button\n                  title={getText(\"ban\")}\n                  onPress={() => postReport(\"banned\", user.id)}\n                />\n                <Button\n                  title={getText(\"shadowBan\")}\n                  onPress={() => postReport(\"shadowBanned\", user.id)}\n                />\n                <TouchableOpacity onPress={() => postReport(\"none\", user.id)}>\n                  <Entypo name=\"cross\" color=\"red\" size={33} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Reports;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nimport { RobberyTypes } from \"./CreateRobbery\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Robbery = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    robberies,\n    reloadRobberies,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadRobberies);\n  doOnce(fetchRacecars);\n\n  const join = async (robberyId) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadRobberies();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (robberyId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    reloadRobberies();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (robberyId) => {\n    setLoading(true);\n    const { response } = await post(\"startRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadRobberies();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const type = RobberyTypes.find((x) => x.type === item.type);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={type.image}\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.robberyParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{type.cost},-\n          </T>\n          <T>\n            {getText(\"profit\")}: €{type.profit * item.numParticipants},-\n          </T>\n\n          <T>\n            {getText(\"difficulty\")}: {type.difficulty}\n          </T>\n          {item.robberyParticipants.length > 0 &&\n            item.robberyParticipants.map((p) => (\n              <User user={p.user} navigation={navigation} size={40} />\n            ))}\n\n          {!!item.robberyParticipants.find((x) => x?.user?.id === me?.id) ? (\n            item.robberyParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                join(item.id);\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateRobbery\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadRobberies();\n              setResponse(null);\n            }}\n          />\n        }\n        data={robberies}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Robbery;\n","import React from \"react\";\nimport { Platform, ScrollView } from \"react-native\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\n\nconst Settings = ({\n  navigation,\n  screenProps: {\n    dispatch,\n    me,\n    reloadMe,\n    device,\n    device: { theme },\n  },\n}) => {\n  const alertAlert = React.useContext(AlertContext);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView>\n      {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n      {__DEV__ && (\n        <>\n          <Menu\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title={getText(\"purge\")}\n            onPress={() =>\n              alertAlert(\n                getText(\"areYouSure\"),\n                getText(\"areYouSure\"),\n                [\n                  {\n                    text: getText(\"ok\"),\n                    onPress: () => dispatch({ type: \"PURGE\" }),\n                  },\n                  {\n                    text: getText(\"cancel\"),\n                  },\n                ],\n                { key: \"purge\" }\n              )\n            }\n          />\n\n          <Menu\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title={\"Reset info\"}\n            onPress={() =>\n              alertAlert(\n                getText(\"areYouSure\"),\n                getText(\"areYouSure\"),\n                [\n                  {\n                    text: getText(\"ok\"),\n                    onPress: () => dispatch({ type: \"RESET_HAS_SEEN_INFO\" }),\n                  },\n                  {\n                    text: getText(\"cancel\"),\n                  },\n                ],\n                { key: \"purge\" }\n              )\n            }\n          />\n\n          <Menu\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title={\"Reset intro\"}\n            onPress={() =>\n              alertAlert(\n                getText(\"areYouSure\"),\n                getText(\"areYouSure\"),\n                [\n                  {\n                    text: getText(\"ok\"),\n                    onPress: () => dispatch({ type: \"RESET_INTRO_LEVEL\" }),\n                  },\n                  {\n                    text: getText(\"cancel\"),\n                  },\n                ],\n                { key: \"purge\" }\n              )\n            }\n          />\n        </>\n      )}\n\n      <Menu\n        theme={theme}\n        IconFont=\"Entypo\"\n        icon=\"phone\"\n        navigation={navigation}\n        title={getText(\"verifyPhone\")}\n        to=\"VerifyPhone\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuChangePassword\")}\n        to=\"ChangePassword\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"onepassword\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"signupEmail\")}\n        to=\"SignupEmail\"\n        IconFont=\"Entypo\"\n        icon=\"email\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"changeName\")}\n        to=\"ChangeName\"\n        IconFont=\"FontAwesome\"\n        icon=\"bank\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"layout\")}\n        to=\"Theme\"\n        IconFont=\"Ionicons\"\n        icon=\"ios-color-palette\"\n      />\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuLogin\")}\n        IconFont=\"Entypo\"\n        icon=\"login\"\n        onPress={() => dispatch({ type: \"SET_LOGGED\", value: false })}\n      />\n\n      {Platform.OS === \"web\" && (\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={device.hideMap ? getText(\"showMap\") : getText(\"hideMap\")}\n          IconFont=\"Entypo\"\n          icon=\"map\"\n          onPress={() =>\n            dispatch({ type: \"SET_HIDE_MAP\", value: !device.hideMap })\n          }\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuBackfire\")}\n        to=\"Backfire\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"pistol\"\n      />\n    </ScrollView>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst Sint = ({\n  screenProps,\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"sint\", {\n      token: device.loginToken,\n      captcha,\n    });\n    setResponse(response);\n  };\n\n  const minute = Math.round((me?.sintEndsAt - Date.now()) / (60 * 1000));\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <T>{response}</T>\n        ) : me?.sintEndsAt > Date.now() ? (\n          <T>{getText(\"sintWait\", minute)}</T>\n        ) : (\n          <View>\n            <Captcha\n              screenProps={screenProps}\n              captcha={captcha}\n              onChangeCaptcha={setCaptcha}\n              random={random}\n              onChangeRandom={setRandom}\n            />\n\n            <Button theme={theme} title={getText(\"sintCTA\")} onPress={submit} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default Sint;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Content from \"../components/Content\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getRank, getStrength, numberFormat } from \"../Util\";\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nconst Stats = ({ navigation, screenProps: { me } }) => {\n  const [stats, setStats] = useState([]);\n  const [gameStats, setGameStats] = useState([]);\n\n  const alertAlert = React.useContext(AlertContext);\n  const fetchStats = () => {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        setStats(stats);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchGameStats = async () => {\n    const { stats } = await get(\"gamestats\");\n    setGameStats(stats);\n  };\n\n  doOnce(fetchStats);\n  doOnce(fetchGameStats);\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          padding: 20,\n        }}\n      >\n        {stats?.map((stat, index) => {\n          const key = Object.keys(stat)[0];\n          const values = Object.values(stat)[0];\n          return (\n            <Content\n              id={`stat${index}`}\n              key={`stat${index}`}\n              contentWidth={300}\n              title={keyNames[key]}\n            >\n              <View key={`index${index}`} style={{ width: 300, marginTop: 20 }}>\n                {values instanceof Array ? (\n                  values.map((value, i) => {\n                    let v = value[key];\n                    if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                    if (key === \"createdAt\")\n                      v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                    if (key === \"strength\") v = getStrength(v, \"both\");\n                    if (key === \"rank\") v = getRank(v, \"both\");\n\n                    return (\n                      <View\n                        key={`stat${key}-${i}`}\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          marginBottom: 5,\n                        }}\n                      >\n                        <User navigation={navigation} user={value} size={40} />\n                        <View>\n                          <T key={`stat${key}-${i}`}>{v}</T>\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{values}</T>\n                )}\n              </View>\n            </Content>\n          );\n        })}\n      </View>\n      {gameStats.length > 0 && (\n        <View>\n          <H1>Online</H1>\n          <T>\n            Rood is online, groen is online per uur, blauw is online per dag.\n          </T>\n          <ScrollView horizontal snapToEnd>\n            <LineChart\n              fromZero\n              data={{\n                labels: gameStats.map((x, index) =>\n                  index === 0 || index % 6 === 0\n                    ? moment(x.createdAt).format(\"D MMM HH:00\")\n                    : \" \"\n                ),\n                datasets: [\n                  {\n                    data: gameStats.map((x) => x.online),\n                    color: (opacity) => \"red\",\n                  },\n                  {\n                    data: gameStats.map((x) => x.onlineLastHour),\n                    color: (opacity) => \"green\",\n                  },\n                  {\n                    data: gameStats.map((x) => x.onlineLastDay),\n                    color: (opacity) => \"blue\",\n                  },\n                ],\n              }}\n              onDataPointClick={(data) => {\n                const item = gameStats[data.index];\n\n                alertAlert(\n                  moment(item.createdAt).format(\"D MMM HH:00\"),\n                  `${item.online} online, ${item.onlineLastHour} online dat uur, ${item.onlineLastDay} online die dag`,\n                  null,\n                  { key: \"onlineInfo\" }\n                );\n              }}\n              width={gameStats.length * 20 + 100} // from react-native\n              height={225}\n              xAxisLabel=\"\"\n              xLabelsOffset={10}\n              yAxisLabel=\"\"\n              yAxisSuffix=\"\"\n              yAxisInterval={1} // optional, defaults to 1\n              chartConfig={{\n                backgroundColor: \"#e26a00\",\n                backgroundGradientFrom: \"#fb8c00\",\n                backgroundGradientTo: \"#ffa726\",\n                decimalPlaces: 0, // optional, defaults to 2dp\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                style: {\n                  borderRadius: 16,\n                },\n                propsForDots: {\n                  r: \"6\",\n                  strokeWidth: \"2\",\n                  stroke: \"#ffa726\",\n                },\n              }}\n              bezier\n              style={{\n                marginVertical: 8,\n                borderRadius: 16,\n              }}\n            />\n          </ScrollView>\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default Stats;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, StyleSheet, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport {\n  getRank,\n  getStrength,\n  getTextFunction,\n  InactiveScreens,\n} from \"../Util\";\nimport MyObjects from \"./MyObjects\";\n\nconst professionReleaseDate = InactiveScreens.PROFESSIONS_RELEASE_DATE;\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n\n        {me?.canChooseProfession &&\n          (moment().isAfter(professionReleaseDate) || me?.level > 1) && (\n            <View>\n              <T>{getText(\"statusCanChooseProfessionText\")}</T>\n              <Button\n                title={getText(\"statusCanChooseProfessionButton\")}\n                onPress={() => navigation.navigate(\"ChooseProfession\")}\n              />\n            </View>\n          )}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n\n        <MyObjects navigation={navigation} screenProps={screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport CountDown from \"../components/Countdown\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={me.autostelenAt + 60000}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"mm\", \"ss\"]}\n            timeLabels={{ mm: getText(\"minutes\"), ss: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import React from \"react\";\nimport { View } from \"react-native\";\nconst StockExchange = () => {\n  return <View />;\n};\nexport default StockExchange;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          <T>\n            {getText(\"addedPrizeMoney\")}: €{item.prize},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Original\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          // reloadMe(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Switch, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport H1 from \"../components/H1\";\nimport MarkdownEditor from \"../components/MarkdownEditor\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nconst SuperMessage = ({ screenProps: { me, device } }) => {\n  const [response, setResponse] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [schedule, setSchedule] = useState(false);\n  const [date, setDate] = useState(moment().format(\"DD/MM/YYYY\"));\n\n  //for admin\n  const [scheduled, setScheduled] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [dates, setDates] = useState({});\n\n  const getScheduled = async () => {\n    if (me?.level === 10) {\n      const { scheduled, response } = await get(\n        `scheduled?token=${device.loginToken}`\n      );\n      if (scheduled) {\n        setScheduled(scheduled);\n        setMessages(\n          scheduled.reduce(\n            (previous, current) => ({\n              ...previous,\n              [current.id]: current.message,\n            }),\n            {}\n          )\n        );\n\n        setDates(\n          scheduled.reduce(\n            (previous, current) => ({\n              ...previous,\n              [current.id]: moment(current.date).format(\"DD/MM/YYYY\"),\n            }),\n            {}\n          )\n        );\n      }\n    }\n  };\n  doOnce(getScheduled);\n\n  const saveScheduled = async (id) => {\n    const { response } = await post(\"updateScheduled\", {\n      token: device.loginToken,\n      message: messages[id],\n      date: moment(dates[id], \"DD/MM/YYYY\").set(\"hours\", 17).valueOf(),\n      id,\n    });\n\n    getScheduled();\n\n    setResponse(response);\n  };\n  const sendMessage = () => {\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        date:\n          schedule && date\n            ? moment(date, \"DD/MM/YYYY\").set(\"hours\", 17).valueOf()\n            : undefined,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResponse(response?.response);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n      {response ? <T>{response}</T> : null}\n\n      {me?.level === 10 && (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Switch value={schedule} onValueChange={setSchedule} />\n          {schedule && (\n            <TextInput\n              style={style(device.theme).textInput}\n              placeholder={getText(\"date\")}\n              placeholderTextColor={device.theme.secondaryTextSoft}\n              value={date}\n              onChangeText={setDate}\n            />\n          )}\n        </View>\n      )}\n      <MarkdownEditor value={message} onChange={setMessage} />\n\n      <Button\n        theme={device.theme}\n        style={{ marginVertical: 10 }}\n        title={getText(\"send\")}\n        onPress={sendMessage}\n      />\n\n      {me?.level === 10 && (\n        <View>\n          <H1>{getText(\"scheduled\")}</H1>\n\n          {scheduled?.map((message, index) => {\n            return (\n              <View key={`message${index}`} style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  style={[\n                    style(device.theme).textInput,\n                    { height: 100, width: 200, flex: 1 },\n                  ]}\n                  placeholder={getText(\"message\")}\n                  placeholderTextColor={device.theme.secondaryTextSoft}\n                  multiline\n                  value={messages[message.id]}\n                  onChangeText={(msg) =>\n                    setMessages({ ...messages, [message.id]: msg })\n                  }\n                />\n\n                <TextInput\n                  style={[\n                    style(device.theme).textInput,\n                    { marginHorizontal: 10, height: 40 },\n                  ]}\n                  placeholder={getText(\"date\")}\n                  placeholderTextColor={device.theme.secondaryTextSoft}\n                  value={dates[message.id]}\n                  onChangeText={(date) =>\n                    setDates({ ...dates, [message.id]: date })\n                  }\n                />\n\n                <Button\n                  theme={device.theme}\n                  style={{ marginVertical: 10 }}\n                  title={getText(\"send\")}\n                  onPress={() => saveScheduled(message.id)}\n                />\n              </View>\n            );\n          })}\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst WeaponShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"weapon\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default WeaponShop;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport AdminEmail from \"../screens/AdminEmail\";\nimport AdminUserWatch from \"../screens/AdminUserWatch\";\nimport AirplaneShop from \"../screens/AirplaneShop\";\nimport Backfire from \"../screens/Backfire\";\nimport Bank from \"../screens/Bank\";\nimport Blocks from \"../screens/Blocks\";\nimport Bulletfactory from \"../screens/Bulletfactory\";\nimport Bunker from \"../screens/Bunker\";\nimport ChangeName from \"../screens/ChangeName\";\nimport ChangePassword from \"../screens/ChangePassword\";\nimport Channel from \"../screens/Channel\";\nimport Channels from \"../screens/Channels\";\nimport Chat from \"../screens/Chat\";\nimport ChooseProfession from \"../screens/ChooseProfession\";\nimport Code from \"../screens/Code\";\nimport Contribute from \"../screens/Contribute\";\nimport CreateOc from \"../screens/CreateOC\";\nimport CreateRobbery from \"../screens/CreateRobbery\";\nimport CreateStreetrace from \"../screens/CreateStreetrace\";\nimport Crimes from \"../screens/Crimes\";\nimport Detectives from \"../screens/Detectives\";\nimport Donate from \"../screens/Donate\";\nimport EstateAgent from \"../screens/EstateAgent\";\nimport ForgotPassword from \"../screens/ForgotPassword\";\nimport Forum from \"../screens/Forum\";\nimport Gang from \"../screens/Gang\";\nimport GangAchievements from \"../screens/GangAchievements\";\nimport GangBulletFactory from \"../screens/GangBulletFactory\";\nimport GangCreate from \"../screens/GangCreate\";\nimport GangMissions from \"../screens/GangMissions\";\nimport Gangs from \"../screens/Gangs\";\nimport GangSettings from \"../screens/GangSettings\";\nimport GangShop from \"../screens/GangShop\";\nimport Garage from \"../screens/Garage\";\nimport GarageShop from \"../screens/GarageShop\";\nimport Gym from \"../screens/Gym\";\nimport Hoeren from \"../screens/Hoeren\";\nimport Hospital from \"../screens/Hospital\";\nimport Income from \"../screens/Income\";\nimport Info from \"../screens/Info\";\nimport InfoGame from \"../screens/InfoGame\";\nimport InfoRules from \"../screens/InfoRules\";\nimport Jail from \"../screens/Jail\";\nimport Junkies from \"../screens/Junkies\";\nimport Kill from \"../screens/Kill\";\nimport Login from \"../screens/Login\";\nimport Lotto from \"../screens/Lotto\";\nimport ManageObject from \"../screens/ManageObject\";\nimport Market from \"../screens/Market\";\nimport Members from \"../screens/Members\";\nimport MollieComplete from \"../screens/MollieComplete\";\nimport MyObjects from \"../screens/MyObjects\";\nimport MyProfile from \"../screens/MyProfile\";\nimport OC from \"../screens/OC\";\nimport Poker from \"../screens/Poker\";\nimport Police from \"../screens/Police\";\nimport Privacy from \"../screens/Privacy\";\nimport Prizes from \"../screens/Prizes\";\nimport Profile from \"../screens/Profile\";\nimport Properties from \"../screens/Properties\";\nimport ProtectionShop from \"../screens/ProtectionShop\";\nimport Racecars from \"../screens/Racecars\";\nimport RecoverPassword from \"../screens/RecoverPassword\";\nimport Reports from \"../screens/Reports\";\nimport Rob from \"../screens/Rob\";\nimport Robbery from \"../screens/Robbery\";\nimport Settings from \"../screens/Settings\";\nimport Shop from \"../screens/Shop\";\nimport SignupEmail from \"../screens/SignupEmail\";\nimport SignupEmail2 from \"../screens/SignupEmail2\";\nimport Sint from \"../screens/Sint\";\nimport Stats from \"../screens/Stats\";\nimport Status from \"../screens/Status\";\nimport StealCar from \"../screens/StealCar\";\nimport StockExchange from \"../screens/StockExchange\";\nimport Streetrace from \"../screens/Streetrace\";\nimport SwissBank from \"../screens/SwissBank\";\nimport Theme from \"../screens/Theme\";\nimport VerifyPhone from \"../screens/VerifyPhone\";\nimport VerifyPhoneCode from \"../screens/VerifyPhoneCode\";\nimport VIP from \"../screens/VIP\";\nimport WeaponShop from \"../screens/WeaponShop\";\nimport Wiet from \"../screens/Wiet\";\nimport Work from \"../screens/Work\";\n\nexport const screens = {\n  Stats,\n  Channels,\n  Profile,\n  Members,\n  Gangs,\n  Prizes,\n  Properties,\n  Settings,\n  Info,\n  Police,\n  VIP,\n  AdminEmail,\n  AdminUserWatch,\n  AirplaneShop,\n  Backfire,\n  Bank,\n  Blocks,\n  Bulletfactory,\n  Bunker,\n  ChangeName,\n  ChangePassword,\n  Channel,\n  Chat,\n  ChooseProfession,\n  Code,\n  Contribute,\n  CreateOc,\n  CreateRobbery,\n  CreateStreetrace,\n  Crimes,\n  Detectives,\n  Donate,\n  EstateAgent,\n  ForgotPassword,\n  Forum,\n  Gang,\n  GangAchievements,\n  GangBulletFactory,\n  GangCreate,\n  GangMissions,\n  GangSettings,\n  GangShop,\n  Garage,\n  GarageShop,\n  Gym,\n  Hoeren,\n  Hospital,\n  Income,\n  InfoGame,\n  InfoRules,\n  Jail,\n  Junkies,\n  Kill,\n  Login,\n  Lotto,\n  ManageObject,\n  Market,\n  MollieComplete,\n  MyObjects,\n  MyProfile,\n  OC,\n  Poker,\n  Privacy,\n  ProtectionShop,\n  Racecars,\n  RecoverPassword,\n  Reports,\n  Rob,\n  Robbery,\n  Shop,\n  SignupEmail,\n  SignupEmail2,\n  Sint,\n  Status,\n  StealCar,\n  SwissBank,\n  Theme,\n  Streetrace,\n  VerifyPhone,\n  VerifyPhoneCode,\n  WeaponShop,\n  Wiet,\n  Work,\n  StockExchange,\n};\n\nconst Screen = ({ navigation, screenProps }) => {\n  const screen = navigation.state.routeName;\n\n  const Component = screens[screen];\n  return <Component navigation={navigation} screenProps={screenProps} />;\n};\n\nexport default Screen;\n","import React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps,\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(1);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", {\n      token: device.loginToken,\n      captcha,\n      option: selected,\n    });\n    setResponse(response);\n  };\n\n  const minute = Math.round((me?.workEndsAt - Date.now()) / (60 * 1000));\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <T>{response}</T>\n        ) : me?.workEndsAt > Date.now() ? (\n          <T>{getText(\"workWait\", minute)}</T>\n        ) : (\n          <View>\n            {options.map((option, index) => {\n              return (\n                <TouchableOpacity\n                  onPress={() => setSelected(index + 1)}\n                  key={`key${index}`}\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    paddingVertical: 10,\n                    paddingHorizontal: 10,\n                    borderRadius: 5,\n                  }}\n                >\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Checkbox active={selected === index + 1} />\n                    <T style={{ marginLeft: 10 }}>{option.title}</T>\n                  </View>\n                  <T>\n                    {option.hours} {getText(\"hours\")}\n                  </T>\n                </TouchableOpacity>\n              );\n            })}\n\n            <Captcha\n              screenProps={screenProps}\n              captcha={captcha}\n              onChangeCaptcha={setCaptcha}\n              random={random}\n              onChangeRandom={setRandom}\n            />\n\n            <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n          </View>\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Work;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Platform, Text, TouchableOpacity, View } from \"react-native\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getTextFunction, numberFormat } from \"../Util\";\nconst StatsHeader = React.memo(({ me, device, navigation }) => {\n  const getText = getTextFunction(me?.locale);\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: \"white\",\n  };\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n  const showNotActivated = me?.phoneVerified === false && me?.numActions >= 20;\n\n  const notActivated = showNotActivated && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const renderNotVerified = !me?.phoneVerified && (\n    <View\n      style={{\n        padding: 5,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <TouchableOpacity\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => navigation.navigate(\"VerifyPhone\")}\n      >\n        <AntDesign\n          name=\"exclamationcircleo\"\n          color=\"red\"\n          style={{ marginRight: 10 }}\n        />\n        <Text\n          style={{\n            color: device.theme.secondaryText,\n            fontWeight: \"bold\",\n          }}\n        >\n          {getText(\"headerVerifyYourAccount\")}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    updateComponent ||\n    notActivated || (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Profile\", { name: me?.name })}\n        >\n          <Text style={textStyle}>\n            {me?.name} {me?.gang?.name}\n          </Text>\n        </TouchableOpacity>\n\n        {me?.gangId && (\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate(\"Gang\", { name: me?.gang?.name })\n            }\n          >\n            <Text style={textStyle}>{me?.gang?.name}</Text>\n          </TouchableOpacity>\n        )}\n        <Text style={textStyle}>❤️ {me?.health}%</Text>\n\n        <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n        <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon.MaterialCommunityIcons\n            name=\"pistol\"\n            size={18}\n            color={device.theme.secondaryText}\n            style={{ marginRight: 5 }}\n          />\n          <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n        </View>\n        <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n        <Text style={textStyle}>\n          ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n        </Text>\n\n        {renderNotVerified}\n      </View>\n    )\n  );\n});\n\nexport default StatsHeader;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport React, { useMemo, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Platform,\n  SafeAreaView,\n  StatusBar,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Swiper from \"react-native-web-swiper\";\nimport { useDispatch } from \"react-redux\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Chat from \"../components/Chat\";\nimport Countdown from \"../components/Countdown\";\nimport Dead from \"../components/Dead\";\nimport Fly from \"../components/Fly\";\nimport Jail from \"../components/Jail\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport {\n  getRank,\n  getStrength,\n  getTextFunction,\n  lighterHex,\n  numberFormat,\n} from \"../Util\";\nimport ActionsBar from \"./ActionsBar\";\nimport BottomTabs from \"./BottomTabs\";\nimport IntroOrInfo from \"./IntroOrInfo\";\nimport MapIcon from \"./MapIcon\";\nimport { animateToCity, getZoom, shouldRenderCities } from \"./MapUtil\";\nimport Menus from \"./Menus\";\nimport Modal from \"./Modal\";\nimport Screen from \"./Screen\";\nimport StatsHeader from \"./StatsHeader\";\n\nconst window = Dimensions.get(\"window\");\n\nconst Overlay = ({\n  screenProps,\n  navigation,\n  map,\n  view,\n  setView,\n  setZoom,\n  device,\n  me,\n  selected,\n  setSelected,\n  objects,\n  dragAndDropMode,\n  setDragAndDropMode,\n  territoriesSwiperRefContainer,\n  propertiesSwiperRefContainer,\n  cityAreas,\n  areas,\n  reloadCities,\n  reloadMe,\n  city,\n  selectedAreaIndex,\n  setSelectedAreaIndex,\n  region,\n}) => {\n  const dispatch = useDispatch();\n  const window = Dimensions.get(\"window\");\n  const isSmallDevice = window.width < 800;\n  const alertAlert = React.useContext(AlertContext);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n\n  const [headerHeight, setHeaderHeight] = useState(0);\n\n  const selectedArea =\n    selectedAreaIndex !== undefined\n      ? areas?.find((x) => x.code === cityAreas.areas[selectedAreaIndex]?.code)\n      : null;\n  // console.log(\"render overlay\");\n\n  const openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = [\n      getText(\"killSomeone\"),\n      getText(\"robSomeone\"),\n      getText(\"organizeStreetrace\"),\n      getText(\"organizeRobbery\"),\n    ];\n\n    if (me?.gangId) {\n      options.push(getText(\"organizeOC\"));\n    }\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex === 0) {\n          navigation.navigate(\"Kill\");\n        } else if (buttonIndex === 1) {\n          navigation.navigate(\"Rob\");\n        } else if (buttonIndex === 2) {\n          navigation.navigate(\"CreateStreetrace\");\n        } else if (buttonIndex === 3) {\n          navigation.navigate(\"CreateRobbery\");\n        } else if (buttonIndex === 4 && me?.gangId) {\n          navigation.navigate(\"CreateOc\");\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const territoriesSwiperChildren = useMemo(\n    () => [\n      <View key={`territoriesHome`} style={{ flex: 1 }}>\n        <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"bold\" }}>\n          {me?.city}: {cityAreas.areas.length} {getText(\"territories\")}\n        </Text>\n      </View>,\n      ...cityAreas.areas.map((area, index) => {\n        const connectedArea = areas?.find((x) => x?.code === area?.code);\n\n        return (\n          <View key={`page${index}`} style={{ height: 150, flex: 1 }}>\n            <Grid>\n              <Col>\n                <Text style={{ color: \"white\" }}>{getText(\"area\")}</Text>\n              </Col>\n              <Col size={2}>\n                <Text style={{ color: \"white\" }}>{area.name}</Text>\n              </Col>\n            </Grid>\n            <Grid>\n              <Col>\n                <Text style={{ color: \"white\" }}>{getText(\"owner\")}</Text>\n              </Col>\n              <Col size={2}>\n                {connectedArea?.user && (\n                  <User\n                    size={40}\n                    user={connectedArea.user}\n                    navigation={navigation}\n                  />\n                )}\n              </Col>\n            </Grid>\n\n            <Grid>\n              <Col>\n                <Text style={{ color: \"white\" }}>{getText(\"damage\")}</Text>\n              </Col>\n              <Col size={2}>\n                <Text style={{ color: \"white\" }}>\n                  {connectedArea?.damage}% {getText(\"damage\")}\n                </Text>\n              </Col>\n            </Grid>\n\n            <Text style={{ color: \"white\" }}></Text>\n          </View>\n        );\n      }),\n    ],\n    [areas]\n  );\n\n  const territoriesSwiperKey = useMemo(() => Math.random().toString(), [areas]);\n\n  const onTerritoriesIndexChanged = (position) => {\n    if (position === 0) {\n      //should animate to whole city\n      animateToCity({ map, dispatch, city });\n      setSelected(null);\n      setSelectedAreaIndex(null);\n    } else {\n      setSelected(\"area\");\n      setSelectedAreaIndex(position - 1);\n\n      const area = cityAreas.areas[position - 1];\n      // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n      if (Platform.OS === \"web\") {\n        map.panTo({\n          lat: area.centerLatitude,\n          lng: area.centerLongitude,\n        });\n        const biggestDelta =\n          area.latitudeDelta > area.longitudeDelta\n            ? area.latitudeDelta\n            : area.longitudeDelta;\n\n        setZoom(getZoom(biggestDelta));\n      } else {\n        map.animateToRegion({\n          latitude: area.centerLatitude,\n          longitude: area.centerLongitude,\n          latitudeDelta: area.latitudeDelta,\n          longitudeDelta: area.longitudeDelta,\n        });\n      }\n    }\n    //improve this once i have centers.\n  };\n\n  const renderTerritoriesSwiper = (\n    <View style={{ height: 150 }}>\n      <Swiper\n        controlsEnabled={false}\n        key={territoriesSwiperKey}\n        ref={territoriesSwiperRefContainer}\n        style={{ flex: 1 }}\n        from={selectedAreaIndex + 1}\n        onIndexChanged={onTerritoriesIndexChanged}\n      >\n        {territoriesSwiperChildren}\n      </Swiper>\n    </View>\n  );\n\n  const propertiesSwiperFirstPage = (\n    <View key={`firstPage`} style={{ flex: 1 }}>\n      <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"bold\" }}>\n        {me?.city}\n      </Text>\n    </View>\n  );\n\n  const swiper1Children = useMemo(\n    () => [\n      propertiesSwiperFirstPage,\n\n      ...objects.map((object, index) => {\n        const keyValue = (key, value) => {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                paddingHorizontal: 20,\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{key}</Text>\n              <Text style={{ color: \"white\" }}>{value}</Text>\n            </View>\n          );\n        };\n        if (object.type === \"house\") {\n          return (\n            <View\n              key={`house${index}`}\n              style={{\n                flexDirection: \"row\",\n              }}\n            >\n              <View style={{ flex: 1 }}>\n                {keyValue(getText(\"cash\"), `€${numberFormat(me?.cash)}`)}\n                {keyValue(getText(\"bank\"), `€${numberFormat(me?.bank)}`)}\n                {keyValue(getText(\"gamepoints\"), numberFormat(me?.gamepoints))}\n                {keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n                {keyValue(\n                  getText(\"strength\"),\n                  getStrength(me?.strength, \"both\")\n                )}\n              </View>\n\n              <View style={{ flex: 1 }}>\n                {keyValue(getText(\"health\"), `${me?.health}%`)}\n                {keyValue(getText(\"bullets\"), numberFormat(me?.bullets))}\n                {keyValue(getText(\"weed\"), numberFormat(me?.wiet))}\n                {keyValue(getText(\"junkies\"), numberFormat(me?.junkies))}\n                {keyValue(getText(\"prostitutes\"), numberFormat(me?.hoeren))}\n              </View>\n            </View>\n          );\n        }\n\n        if (object.type === \"headquarter\") {\n          return me?.gangId ? (\n            <View\n              key={`object${index}`}\n              style={{\n                flexDirection: \"row\",\n              }}\n            >\n              <View style={{ flex: 1 }}>\n                {keyValue(getText(\"gang\"), `${me?.gang?.name}`)}\n                {keyValue(getText(\"bank\"), `€${numberFormat(me?.gang?.bank)}`)}\n                {keyValue(getText(\"bullets\"), numberFormat(me?.gang?.bullets))}\n                {keyValue(getText(\"members\"), `${me?.gang?.members}`)}\n              </View>\n\n              <View style={{ flex: 1 }}></View>\n            </View>\n          ) : (\n            <View key={`object${index}`} />\n          );\n        }\n\n        const owner = city?.[`${object.type}Owner`];\n        const damage = city?.[`${object.type}Damage`];\n        const profit = city?.[`${object.type}Profit`];\n\n        const ownerProfile = owner ? (\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"Profile\", { name: owner })}\n          >\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>{owner}</Text>\n          </TouchableOpacity>\n        ) : (\n          <Text style={{ fontWeight: \"bold\", color: \"white\" }}>\n            ({getText(\"none\")})\n          </Text>\n        );\n\n        return (\n          <View key={`page${index}`} style={{ flex: 1 }}>\n            {owner !== undefined && (\n              <Grid>\n                <Col>\n                  <Text style={{ color: \"white\" }}>\n                    {getText(object.type)} {getText(\"owner\")}\n                  </Text>\n                </Col>\n                <Col>{ownerProfile}</Col>\n              </Grid>\n            )}\n\n            {profit !== undefined && (\n              <Grid>\n                <Col>\n                  <Text style={{ color: \"white\" }}>\n                    {getText(object.type)} {getText(\"profit\")}\n                  </Text>\n                </Col>\n                <Col>\n                  <Text style={{ color: \"white\" }}>\n                    €{numberFormat(profit)},-\n                  </Text>\n                </Col>\n              </Grid>\n            )}\n            {damage !== undefined && (\n              <Grid>\n                <Col>\n                  <Text style={{ color: \"white\" }}>\n                    {getText(object.type)} {getText(\"damage\")}\n                  </Text>\n                </Col>\n                <Col>\n                  <Text style={{ color: \"white\" }}>{damage}%</Text>\n                </Col>\n              </Grid>\n            )}\n          </View>\n        );\n      }),\n    ],\n    [\n      city,\n      me?.city,\n      me?.gang?.name,\n      me?.gang?.bank,\n      me?.gang?.bullets,\n      me?.gang?.members,\n      me?.cash,\n      me?.bank,\n      me?.health,\n      me?.rank,\n      me?.gamepoints,\n      me?.bullets,\n      me?.wiet,\n      me?.junkies,\n      me?.hoeren,\n    ]\n  );\n  const keyValue = useMemo(() => Math.random().toString(), [swiper1Children]);\n\n  const selectedIndex = useMemo(\n    () => objects.findIndex((x) => x.type === selected),\n    [swiper1Children]\n  );\n  const renderPropertiesSwiper = (\n    <View style={{ height: 100 }}>\n      <Swiper\n        controlsEnabled={false}\n        key={keyValue}\n        ref={propertiesSwiperRefContainer}\n        style={{ flex: 1 }}\n        from={selectedIndex !== -1 ? selectedIndex + 1 : 0}\n        onIndexChanged={(position) => {\n          if (position === 0) {\n            //should animate to whole city\n            animateToCity({ map, dispatch, city });\n            setSelected(null);\n          } else {\n            const object = objects[position - 1];\n            setSelected(object.type);\n          }\n          //improve this once i have centers.\n        }}\n      >\n        {swiper1Children}\n      </Swiper>\n    </View>\n  );\n\n  const currentObject = objects.find((x) => x.type === selected);\n  const title =\n    view === \"game\" || view === \"territories\"\n      ? selected === \"area\"\n        ? selectedArea?.name\n        : currentObject\n        ? getText(currentObject?.title)\n        : \"\"\n      : \"\";\n\n  const renderHeader = (\n    <View\n      style={{\n        position: \"absolute\",\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        top: 0,\n        left: 0,\n        right: 0,\n        padding: 5,\n      }}\n      onLayout={({\n        nativeEvent: {\n          layout: { width, height },\n        },\n      }) => {\n        setHeaderHeight(height);\n      }}\n    >\n      <SafeAreaView\n        style={{\n          marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n        }}\n      >\n        {view === \"territories\" ? (\n          renderTerritoriesSwiper\n        ) : view === \"game\" ? (\n          renderPropertiesSwiper\n        ) : view === \"crimes\" || view === \"stats\" ? (\n          <StatsHeader navigation={navigation} device={device} me={me} />\n        ) : null}\n        {!isSmallDevice && (\n          <Chat me={me} device={device} navigation={navigation} />\n        )}\n      </SafeAreaView>\n    </View>\n  );\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Channels\",\n    \"Channel\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n    \"Market\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const guyVisibleTitleStyle = device.guyVisible\n    ? {\n        color: \"white\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n\n        elevation: 5,\n      }\n    : {};\n\n  const renderTimers = !navigation.state.routeName && (\n    <View\n      style={{\n        position: \"absolute\",\n        top: headerHeight + 60,\n\n        right: 5,\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        borderRadius: 20,\n      }}\n    >\n      {me?.reizenAt > Date.now() && (\n        <View\n          style={{\n            flexDirection: \"row\",\n            padding: 10,\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.Ionicons name=\"ios-airplane\" color=\"white\" size={24} />\n\n          <Countdown until={me?.reizenAt} size={10} timeToShow={[\"mm\", \"ss\"]} />\n        </View>\n      )}\n\n      {me?.jailAt > Date.now() && (\n        <View\n          style={{\n            flexDirection: \"row\",\n            padding: 10,\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.FontAwesome name=\"bars\" color=\"white\" size={24} />\n\n          <Countdown until={me?.jailAt} size={10} timeToShow={[\"mm\", \"ss\"]} />\n        </View>\n      )}\n\n      {me?.bunkerAt > Date.now() && (\n        <View\n          style={{\n            flexDirection: \"row\",\n            padding: 10,\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.FontAwesome name=\"shield\" color=\"white\" size={24} />\n\n          <Countdown until={me?.bunkerAt} size={10} timeToShow={[\"mm\", \"ss\"]} />\n        </View>\n      )}\n\n      {me?.protectionAt > Date.now() ? (\n        <TouchableOpacity\n          onPress={() => {\n            alertAlert(\n              getText(\"removeProtection\"),\n              getText(\"removeProtectionText\"),\n              [\n                {\n                  text: getText(\"ok\"),\n                  onPress: () => {\n                    fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({ token: device.loginToken }),\n                    })\n                      .then((response) => response.json())\n                      .then(async ({ response }) => {\n                        alertAlert(response, null, null, {\n                          key: \"removeprotectionResponse\",\n                        });\n\n                        reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  },\n                },\n                { text: getText(\"cancel\") },\n              ],\n              { key: \"removeprotection\" }\n            );\n\n            //haalweg\n          }}\n          style={{\n            flexDirection: \"row\",\n            padding: 10,\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.FontAwesome name=\"shield\" color=\"white\" size={24} />\n\n          <Countdown\n            until={me?.protectionAt - 3600000}\n            size={10}\n            timeToShow={[\"H\", \"mm\", \"ss\"]}\n          />\n        </TouchableOpacity>\n      ) : null}\n    </View>\n  );\n\n  return (\n    <>\n      {!device.hideMap ||\n      view === \"territories\" ||\n      (view === \"game\" && selected === \"airport\") ? null : (\n        <View\n          style={{\n            zIndex: 0,\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            backgroundColor: lighterHex(lighterHex(device.theme.primary)),\n          }}\n        />\n      )}\n\n      <Menus\n        areas={screenProps.areas}\n        channels={screenProps.channels}\n        city={city}\n        cityAreas={cityAreas}\n        setSelectedAreaIndex={setSelectedAreaIndex}\n        map={map}\n        setSelected={setSelected}\n        setZoom={setZoom}\n        setView={setView}\n        dispatch={dispatch}\n        device={device}\n        me={me}\n        navigation={navigation}\n      >\n        {renderHeader}\n\n        {!shouldRenderCities(device, region) && (\n          <View\n            style={{ position: \"absolute\", zIndex: 2, left: 10, bottom: 135 }}\n          >\n            <Text\n              style={[\n                {\n                  fontSize: 30,\n                  fontWeight: \"bold\",\n                },\n                guyVisibleTitleStyle,\n              ]}\n            >\n              {title}\n            </Text>\n          </View>\n        )}\n\n        {view === \"crimes\" && !navigation.state.routeName && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: headerHeight + 10,\n              left: 5,\n            }}\n          >\n            <MapIcon\n              view={{\n                icon: Icon.AntDesign,\n                iconName: \"plus\",\n                isActive: false,\n                onPress: openActionSheet,\n              }}\n            />\n          </View>\n        )}\n\n        {!isSmallDevice && !navigation.state.routeName && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: headerHeight + 10,\n              right: 5,\n            }}\n          >\n            <MapIcon\n              view={{\n                icon: Icon.Entypo,\n                iconName: \"menu\",\n                isActive: false,\n                onPress: () =>\n                  dispatch({\n                    type: \"SET_MENU_SHOWN\",\n                    value: !device.menuShown,\n                  }),\n              }}\n            />\n          </View>\n        )}\n\n        {loading && (\n          <View\n            style={{\n              position: \"absolute\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              top: 0,\n              bottom: 0,\n              left: 0,\n              right: 0,\n            }}\n          >\n            <ActivityIndicator color=\"black\" size=\"large\" />\n          </View>\n        )}\n\n        {renderTimers}\n\n        <ActionsBar\n          shouldRenderCities={shouldRenderCities(device, region)}\n          map={map}\n          selected={selected}\n          view={view}\n          city={city}\n          me={me}\n          device={device}\n          navigation={navigation}\n          setLoading={setLoading}\n          reloadMe={reloadMe}\n          reloadCities={reloadCities}\n          reloadAreas={screenProps.reloadAreas}\n          selectedArea={selectedArea}\n        />\n\n        {navigation.state.routeName ? (\n          <Modal\n            headerHeight={headerHeight}\n            view={view}\n            navigation={navigation}\n            setView={setView}\n          >\n            {me?.reizenAt > Date.now() && !skip ? (\n              <Fly screenProps={screenProps} navigation={navigation} />\n            ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n              <Dead screenProps={screenProps} navigation={navigation} />\n            ) : me?.jailAt > Date.now() && !skip ? (\n              <Jail screenProps={screenProps} navigation={navigation} />\n            ) : (\n              <Screen navigation={navigation} screenProps={screenProps} />\n            )}\n          </Modal>\n        ) : null}\n\n        <BottomTabs\n          getText={getText}\n          view={view}\n          setSelected={setSelected}\n          navigation={navigation}\n          setView={setView}\n          map={map}\n          setZoom={setZoom}\n          city={city}\n          dragAndDropMode={dragAndDropMode}\n          setDragAndDropMode={setDragAndDropMode}\n          level={me?.level}\n          chatBadgeCount={me?.chats}\n          territoriesBadgeCount={0}\n          crimesBadgeCount={0}\n          gameBadgeCount={0}\n          cityAreas={cityAreas}\n          setZoom={setZoom}\n          device={device}\n        />\n\n        <IntroOrInfo city={city} map={map} screenProps={screenProps} />\n      </Menus>\n    </>\n  );\n};\n\nexport default Overlay;\n","import {\n  Circle,\n  GoogleMap,\n  GroundOverlay,\n  LoadScript,\n  OverlayView,\n  Polygon,\n} from \"@react-google-maps/api\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Animated,\n  LayoutAnimation,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nimport Logic from \"./Logic\";\nimport {\n  animateToCity,\n  API_KEY,\n  getObjectMeta,\n  getPosition,\n  getZoom,\n  objects,\n  OBJECT_SIZE_FACTOR,\n  rgbs,\n  selectBuilding,\n  shouldRenderCities,\n} from \"./MapUtil\";\nimport Overlay from \"./Overlay\";\nconst mapStyle = require(\"./mapStyle.json\");\nconst mapStyleNight = require(\"./mapStyleNight.json\");\n\nconst citiesAreas = require(\"../../assets/map/cities.json\");\n\nif (Platform.OS === \"android\") {\n  if (UIManager.setLayoutAnimationEnabledExperimental) {\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n}\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst ReactMap = React.memo(\n  ({ zoom, map, setMap, children, view, setMapReady }) => {\n    const dispatch = useDispatch();\n    const onLoad = React.useCallback(function callback(map) {\n      const bounds = new window.google.maps.LatLngBounds();\n      map.fitBounds(bounds);\n      setMap(map);\n      setMapReady(true);\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n      setMap(null);\n    }, []);\n\n    return (\n      <LoadScript googleMapsApiKey={API_KEY}>\n        <GoogleMap\n          clickableIcons={false}\n          mapContainerStyle={containerStyle}\n          zoom={zoom}\n          onZoomChanged={() => {\n            const zoom = map?.getZoom();\n            // console.log(\"zoom changed to \", zoom);\n            dispatch({ type: \"SET_ZOOM\", value: zoom });\n          }}\n          //center={{ lat: city?.latitude, lng: city?.longitude }}\n          onLoad={onLoad}\n          options={{\n            disableDefaultUI: true,\n\n            //https://developers.google.com/maps/documentation/javascript/style-reference\n            styles:\n              view === \"territories\"\n                ? [\n                    {\n                      featureType: \"all\",\n                      elementType: \"labels\",\n                      stylers: [{ visibility: \"off\" }],\n                    },\n                    {\n                      featureType: \"road\",\n                      elementType: \"geometry.fill\",\n                      stylers: [{ visibility: \"off\" }],\n                    },\n                  ]\n                : undefined,\n          }}\n          onUnmount={onUnmount}\n        >\n          {children}\n        </GoogleMap>\n      </LoadScript>\n    );\n  }\n);\n\nconst Territories = React.memo(\n  ({ territories, MapsComponent, onPress, opacity, selectedAreaIndex }) => {\n    return territories.map(({ area, userId, gangId }, index) => {\n      const number = gangId ? gangId : userId ? userId : 0;\n      const rgb = !number ? \"255,255,255\" : rgbs[number % (rgbs.length - 1)];\n      const key = `polygon${index}`;\n      const onClick = () => onPress(index);\n      const realOpacity = index === selectedAreaIndex ? 0.4 : opacity;\n\n      const fillColor = `rgba(${rgb},${realOpacity})`;\n      return Platform.OS === \"web\" ? (\n        <Polygon\n          key={key}\n          onClick={onClick}\n          path={area.map((x) => ({ lat: x.latitude, lng: x.longitude }))}\n          options={{ fillColor }}\n        />\n      ) : (\n        <MapsComponent.Polygon\n          key={key}\n          onPress={onClick}\n          tappable\n          coordinates={area}\n          fillColor={fillColor}\n        />\n      );\n    });\n  }\n);\n\nconst GameObjects = React.memo(\n  ({\n    city,\n    object,\n    index,\n    dragAndDropMode,\n    MapsComponent,\n    isSelected,\n    setSelected,\n    reloadCities,\n    cityAreas,\n    level,\n    gangMembers,\n    setView,\n    myName,\n    device,\n    junkiesIncomeAt,\n    landlordIncomeAt,\n    rldIncomeAt,\n    getText,\n    gymAt,\n    gymTime,\n    peopleInJail,\n  }) => {\n    // console.log(\"RENDER GAME OBJECT\", index);\n    const dispatch = useDispatch();\n    const alertAlert = React.useContext(AlertContext);\n\n    const {\n      latitude,\n      longitude,\n      radius,\n      square,\n      bounds,\n      platformBounds,\n    } = getObjectMeta({ object, index, city, cityAreas });\n\n    const draggable = level >= 5;\n    const onDragEnd = async ({ nativeEvent: { coordinate } }) => {\n      const { response, success } = await post(\"moveBuilding\", {\n        loginToken: device.loginToken,\n        type: object.type,\n        latitude: coordinate.latitude,\n        longitude: coordinate.longitude,\n      });\n      reloadCities();\n      if (!success) {\n        alertAlert(response, null, null, { key: \"moveBuildingResponse\" });\n      }\n    };\n\n    const image = dragAndDropMode ? (\n      <Animated.Image\n        source={object.image}\n        style={{\n          width: object.animated,\n          height: object.animated,\n        }}\n        resizeMode=\"contain\"\n      />\n    ) : null;\n\n    const onPressObject = () => {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n      isSelected\n        ? setSelected(null)\n        : selectBuilding({\n            type: object.type,\n            animate: false,\n            setSelected,\n            setView,\n            device,\n            dispatch,\n            getText,\n          });\n    };\n    const owner = city?.[`${object.type}Owner`];\n\n    const isYours = owner === myName;\n    const isGang = gangMembers?.map((x) => x.name).includes(owner);\n    const hasDamage = city?.[`${object.type}Damage`] > 0;\n    const hasProfit = city?.[`${object.type}Profit`] > 0;\n\n    const incomeJunkies =\n      object.type === \"junkies\" &&\n      Math.floor((Date.now() - junkiesIncomeAt) / 3600000) > 0;\n    const incomeLandlord =\n      object.type === \"landlord\" &&\n      Math.floor((Date.now() - landlordIncomeAt) / 3600000) > 0;\n    const incomeRLD =\n      object.type === \"rld\" &&\n      Math.floor((Date.now() - rldIncomeAt) / 3600000) > 0;\n\n    const incomeToGet = incomeJunkies || incomeRLD || incomeLandlord;\n    const jailPrisoners = object.type === \"jail\" && peopleInJail > 0;\n    const gymTrain = object.type === \"gym\" && gymAt + gymTime - Date.now() < 0;\n    const canDoSomething = jailPrisoners || gymTrain;\n    const specialColor = isSelected\n      ? \"rgba(0,0,0,0.5)\"\n      : isYours && hasDamage\n      ? \"rgba(139,0,0,0.5)\"\n      : (isYours && hasProfit) || incomeToGet || canDoSomething\n      ? \"rgba(255,255,0,0.5)\"\n      : isYours\n      ? \"rgba(0,0,255,0.5)\"\n      : !owner && object.type !== \"house\" && object.type !== \"headquarter\"\n      ? \"rgba(172,216,230,0.5)\" //lightblue\n      : hasDamage\n      ? \"rgba(255,0,0,0.5)\"\n      : isGang\n      ? \"rgba(0,255,0,0.5)\"\n      : null;\n\n    return Platform.OS === \"web\" ? (\n      <>\n        {specialColor ? (\n          <Circle\n            key={`circle${index}${isSelected}`}\n            center={{ lat: latitude, lng: longitude }}\n            radius={radius}\n            options={{ fillColor: specialColor, strokeColor: specialColor }}\n            onClick={onPressObject}\n          />\n        ) : null}\n\n        <GroundOverlay\n          onClick={onPressObject}\n          key={`overlay${index}${isSelected}`} //add selected to the key to ensure rerender after selected changes\n          url={object.image}\n          //dont use onpress on the overlay because it only works on android. use an invisible polygon instead at the same location\n          // tappable\n          // onPress={() => navigation.navigate(object.to)}\n          bounds={bounds}\n        />\n      </>\n    ) : dragAndDropMode ? (\n      <MapsComponent.Marker\n        draggable={draggable}\n        onDragEnd={onDragEnd}\n        key={`object${index}`}\n        coordinate={{ latitude, longitude }}\n      >\n        {image}\n      </MapsComponent.Marker>\n    ) : (\n      <>\n        {specialColor ? (\n          <MapsComponent.Circle\n            key={`circle${index}${isSelected}`}\n            center={{ latitude, longitude }}\n            radius={radius}\n            fillColor={specialColor}\n            strokeColor={specialColor}\n          />\n        ) : null}\n\n        <MapsComponent.Overlay\n          zIndex={1} //works for android to render it over the areas\n          key={`overlay${index}${isSelected}`} //add selected to the key to ensure rerender after selected changes\n          image={object.image}\n          //dont use onpress on the overlay because it only works on android. use an invisible polygon instead at the same location\n          // tappable\n          // onPress={() => navigation.navigate(object.to)}\n          bounds={platformBounds}\n        />\n\n        <MapsComponent.Polygon\n          key={`overlayPolygon${index}`}\n          onPress={onPressObject}\n          tappable\n          coordinates={square}\n          zIndex={2}\n          strokeWidth={0.00001}\n          // fillColor={`rgba(${rgb},${opacity})`}\n        />\n      </>\n    );\n  }\n);\n\n// GameObjects.whyDidYouRender = true;\n\nconst DEFAULT_CITY = \"Amsterdam\";\nconst Map = React.memo(function MapPure({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    cities,\n    areas,\n    me,\n    ocs,\n    dispatch,\n    reloadMe,\n    streetraces,\n    robberies,\n    reloadCities,\n    reloadStreetraces,\n    reloadOcs,\n    reloadRobberies,\n    reloadAreas,\n  },\n}) {\n  doOnce(() => {\n    dispatch({ type: \"SET_ZOOM\", value: getZoom(city?.delta) });\n  });\n\n  const [dragAndDropMode, setDragAndDropMode] = useState(false);\n\n  const [selected, setSelected] = useState(null);\n  const [selectedAreaIndex, setSelectedAreaIndex] = useState(null); //index\n\n  const getText = getTextFunction(me?.locale);\n  const [map, setMap] = useState(null);\n  const [view, setView] = useState(\"crimes\");\n\n  const delta = me?.canChooseCity ? 5 : 0.05;\n\n  const city = React.useMemo(\n    () => cities?.find((x) => x.city === (me?.city ? me?.city : DEFAULT_CITY)),\n    [cities, me?.city]\n  );\n\n  const [region, setRegion] = useState({\n    latitude: city?.latitude || 52.378, //amsterdam\n    longitude: city?.longitude || 4.89707,\n    latitudeDelta: city?.delta || delta,\n    longitudeDelta: city?.delta || delta,\n  });\n\n  const [mapReady, setMapReady] = useState(false);\n\n  const territoriesSwiperRefContainer = useRef(null);\n  const propertiesSwiperRefContainer = useRef(null);\n\n  doOnce(reloadCities);\n\n  const alertAlert = React.useContext(AlertContext);\n\n  doOnce(() => reloadOcs(device.loginToken));\n  doOnce(reloadStreetraces);\n  doOnce(reloadRobberies);\n  useEffect(() => {\n    reloadAreas(me?.city);\n  }, [me?.city]);\n\n  const cityAreas = citiesAreas.find(\n    (x) => x.city === (me?.city || DEFAULT_CITY)\n  );\n\n  const objectsWithAnimated = objects.map((object) => ({\n    ...object,\n    animated: useRef(\n      new Animated.Value(\n        (city?.delta * OBJECT_SIZE_FACTOR * object.size) / region.latitudeDelta\n      )\n    ).current,\n  }));\n\n  useEffect(() => {\n    if (selected === \"area\") {\n      territoriesSwiperRefContainer?.current?.goTo(selectedAreaIndex + 1);\n    } else if (selected) {\n      const index = objects.findIndex((o) => o.type === selected);\n      propertiesSwiperRefContainer?.current?.goTo(index + 1);\n    }\n  }, [selected, selectedAreaIndex]);\n\n  useEffect(() => {\n    if (city) {\n      const reg = {\n        latitude: city?.latitude, //amsterdam\n        longitude: city?.longitude,\n        latitudeDelta: city?.delta,\n        longitudeDelta: city?.delta,\n      };\n      setRegion(reg);\n    }\n    if (map && mapReady) {\n      animateToCity({\n        map,\n        dispatch,\n        city,\n        delayZoom: true,\n        zoom: !me || !me?.id || me?.canChooseCity ? 3 : undefined,\n      });\n\n      //map.fitToElements(true);\n    }\n  }, [me?.city, map, mapReady]);\n\n  const territories = React.useMemo(\n    () =>\n      cityAreas?.areas.map((area) => {\n        const connectedArea = areas?.find((x) => x?.code === area?.code);\n\n        return {\n          ...area,\n          userId: connectedArea?.userId,\n          gangId: connectedArea?.gangId || connectedArea?.user?.gangId,\n        };\n      }),\n    [areas, cityAreas]\n  );\n\n  //useEffect(() => {\n  //map?.fitToElements(true);\n  //}, [view]);\n\n  const NativeMapsComponent = Platform.select({\n    native: () => require(\"react-native-maps\").default,\n    web: () => null,\n  })();\n\n  const crimeIcons = [\n    {\n      id: 1,\n      inactive: me?.autostelenAt + 60000 - Date.now() > 0,\n      to: \"StealCar\",\n      icon: \"🚘\",\n      type: \"stealcar\",\n    },\n\n    {\n      id: 2,\n      inactive: me?.crimeAt + 60000 - Date.now() > 0,\n      to: \"Crimes\",\n      icon: \"💰\",\n      type: \"crimes\",\n    },\n\n    {\n      id: 3,\n      inactive: me?.junkiesAt + 120000 - Date.now() > 0,\n      to: \"Junkies\",\n      icon: \"🧔\",\n      type: \"junkies\",\n    },\n\n    {\n      id: 4,\n      inactive: me?.hoerenAt + 120000 - Date.now() > 0,\n      to: \"Hoeren\",\n      icon: \"💃\",\n      type: \"hoeren\",\n    },\n    {\n      id: 5,\n      inactive: me?.workEndsAt - Date.now() > 0,\n      to: \"Work\",\n      icon: \"🛠\",\n      type: \"work\",\n    },\n\n    {\n      id: 6,\n      inactive: me?.wietAt + 120000 - Date.now() > 0,\n      to: \"Wiet\",\n      icon: \"🌳\",\n      type: \"wiet\",\n    },\n\n    {\n      id: 7,\n      inactive: !me?.gangId || ocs?.length === 0,\n      icon: \"🔥\",\n      type: \"oc\",\n      to: \"OC\",\n    },\n\n    {\n      id: 8,\n      inactive: streetraces?.length === 0,\n      icon: \"🛣\",\n      type: \"streetrace\",\n      to: \"Streetrace\",\n    },\n\n    {\n      id: 9,\n      inactive: robberies?.length === 0,\n      icon: \"🚨\",\n      type: \"robbery\",\n      to: \"Robbery\",\n    },\n  ].filter((x) => !x.inactive);\n\n  const icons = crimeIcons.filter((x) => !!x);\n\n  const iconToMapIcon = (icon) => {\n    const position = getPosition(icon.id, icon.type); //0-1\n\n    const areaIndex = Math.floor(cityAreas?.areas.length * position);\n\n    const area = cityAreas?.areas[areaIndex];\n\n    if (!area) return {};\n    const pseudoRandom = (x, y) => x + position * (y - x);\n\n    const latitude = pseudoRandom(\n      area.centerLatitude - area.latitudeDelta / 2,\n      area.centerLatitude + area.latitudeDelta / 2\n    );\n    const longitude = pseudoRandom(\n      area.centerLongitude - area.longitudeDelta / 2,\n      area.centerLongitude + area.longitudeDelta / 2\n    );\n\n    const onPress = () => navigation.resetTo(icon.to);\n\n    const theIcon = icon.icon;\n\n    const deltaLatitude = (city?.delta * 3) / 100; //width\n    const deltaLongitude = (city?.delta * 3) / 100;\n\n    const topLeftLatitude = latitude - deltaLatitude / 2;\n    const topLeftLongitude = longitude - deltaLongitude / 2;\n    const bottomRightLatitude = latitude + deltaLatitude / 2;\n    const bottomRightLongitude = longitude + deltaLongitude / 2;\n\n    const topRightLatitude = latitude + deltaLatitude / 2;\n    const topRightLongitude = longitude - deltaLongitude / 2;\n    const bottomLeftLatitude = latitude - deltaLatitude / 2;\n    const bottomLeftLongitude = longitude + deltaLongitude / 2;\n\n    const square = [\n      { lat: topLeftLatitude, lng: topLeftLongitude },\n      { lat: topRightLatitude, lng: topRightLongitude },\n      {\n        lat: bottomRightLatitude,\n        lng: bottomRightLongitude,\n      },\n      { lat: bottomLeftLatitude, lng: bottomLeftLongitude },\n    ];\n\n    return {\n      onPress,\n      icon: theIcon,\n      latitude,\n      longitude,\n      square,\n    };\n  };\n\n  const rightObjects = React.useMemo(\n    () => (dragAndDropMode ? objectsWithAnimated : objects),\n    [dragAndDropMode, region.latitudeDelta]\n  );\n  const renderGame = React.useMemo(\n    () =>\n      rightObjects.map((object, index) => {\n        const isSelected = selected === object.type;\n\n        return (\n          <GameObjects\n            getText={getText}\n            gangMembers={me?.gangMembers}\n            key={`game${object.type}`}\n            MapsComponent={NativeMapsComponent}\n            city={city}\n            setView={setView}\n            dragAndDropMode={dragAndDropMode}\n            object={object}\n            index={index}\n            isSelected={isSelected}\n            cityAreas={cityAreas}\n            setSelected={setSelected}\n            reloadCities={reloadCities}\n            level={me?.level}\n            device={device}\n            myName={me?.name}\n            junkiesIncomeAt={me?.junkiesIncomeAt}\n            landlordIncomeAt={me?.landlordIncomeAt}\n            rldIncomeAt={me?.rldIncomeAt}\n            gymAt={me?.gymAt}\n            gymTime={me?.gymTime}\n            peopleInJail={me?.jail}\n          />\n        );\n      }),\n    [\n      rightObjects,\n      selected,\n      city,\n      dragAndDropMode,\n      cityAreas?.city,\n      me?.name,\n      me?.level,\n      device,\n    ]\n  );\n\n  const renderTerritories = React.useMemo(() => {\n    return (\n      <Territories\n        opacity={view === \"territories\" ? 0.8 : 0.2}\n        onPress={\n          view === \"territories\"\n            ? (index) => {\n                setSelected(\"area\");\n                setSelectedAreaIndex(index);\n              }\n            : () => null\n        }\n        selectedAreaIndex={selectedAreaIndex}\n        territories={territories}\n        MapsComponent={NativeMapsComponent}\n      />\n    );\n  }, [view, territories, selectedAreaIndex]);\n\n  const renderCities = cities?.map((city, index) => {\n    const onPress = async () => {\n      const airplanes = [\n        \"Geen vliegtuig\",\n        \"Fokker\",\n        \"Fleet\",\n        \"Havilland\",\n        \"Cessna\",\n        \"Douglas\",\n        \"Lear Jet\",\n        \"Raket\",\n      ];\n      const airplane = airplanes[me?.airplane];\n      const times = [0, 180, 120, 90, 60, 30, 20, 10];\n      const time = times[me?.airplane];\n      const costs = [0, 5000, 10000, 15000, 25000, 50000, 100000, 200000];\n      const cost = costs[me?.airplane];\n\n      alertAlert(\n        city.city,\n        me?.canChooseCity\n          ? getText(\"chooseCityText\", city.city)\n          : me?.airplane === 0\n          ? getText(\"noAirplane\")\n          : getText(\"travelToCityXYZ\", airplane, city.city, time, cost),\n        [\n          (me?.airplane > 0 || me?.canChooseCity) && {\n            text: getText(\"ok\"),\n            onPress: async () => {\n              const { response } = await post(\"airport\", {\n                token: device.loginToken,\n                to: city.city,\n              });\n\n              reloadMe(device.loginToken);\n              alertAlert(response, null, null, { key: \"airportResponse\" });\n              animateToCity({ city, dispatch, map, animationTime: 10000 });\n              if (device.introLevel === 2) {\n                dispatch({ type: \"UP_INTRO_LEVEL\" });\n              }\n            },\n          },\n          {\n            text: getText(\"cancel\"),\n          },\n        ].filter((x) => !!x),\n        { key: \"airport\" }\n      );\n    };\n    //random positions on the first territorium\n    const view = (\n      <TouchableOpacity\n        style={\n          Platform.OS === \"web\"\n            ? { position: \"absolute\", top: -10, left: -10 }\n            : undefined\n        }\n        onPress={onPress}\n      >\n        <Text style={{ fontSize: 24 }}>✈️</Text>\n      </TouchableOpacity>\n    );\n    return Platform.OS === \"web\" ? (\n      <OverlayView\n        mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n        // onClick={onPress}\n        key={`city${index}`}\n        position={{ lat: city.latitude, lng: city.longitude }}\n      >\n        {view}\n      </OverlayView>\n    ) : (\n      <NativeMapsComponent.Marker\n        key={`city${index}`}\n        onPress={onPress}\n        coordinate={{ latitude: city.latitude, longitude: city.longitude }}\n      >\n        {view}\n      </NativeMapsComponent.Marker>\n    );\n  });\n  const renderCrimes = icons\n    .map(iconToMapIcon)\n    .map(({ onPress, icon, latitude, longitude, square }, index) => {\n      //random positions on the first territorium\n      const view = (\n        <TouchableOpacity onPress={onPress} style={{ alignItems: \"center\" }}>\n          <Text style={{ fontSize: 24 }}>{icon}</Text>\n        </TouchableOpacity>\n      );\n      return Platform.OS === \"web\" ? (\n        <OverlayView\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n          // onClick={onPress}\n          key={`icon${index}`}\n          position={{ lat: latitude, lng: longitude }}\n        >\n          {view}\n        </OverlayView>\n      ) : (\n        <NativeMapsComponent.Marker\n          key={`icon${index}`}\n          onPress={onPress}\n          coordinate={{ latitude, longitude }}\n        >\n          {view}\n        </NativeMapsComponent.Marker>\n      );\n    });\n\n  const renderAllMapObjects = React.useMemo(() => {\n    const shouldRenderTerritories =\n      Platform.OS === \"web\" ? view === \"territories\" : true;\n\n    const shouldRenderGame =\n      view === \"stats\" || view === \"more\" || view === \"game\" || view === \"chat\";\n\n    return shouldRenderCities(device, region) ? (\n      renderCities\n    ) : (\n      <>\n        {shouldRenderTerritories && renderTerritories}\n        {/* NB: areas.length moet geladen zijn voor renderGame, anders rendert hij de teritoriums over de game heen */}\n        {shouldRenderGame && areas.length > 0 && renderGame}\n        {view === \"crimes\" && renderCrimes}\n      </>\n    );\n  }, [view, renderTerritories, renderGame, renderCrimes, areas.length]);\n\n  const renderMapsComponentNative = () => {\n    return (\n      <NativeMapsComponent\n        pitchEnabled={false}\n        rotateEnabled={false}\n        onMapReady={() => {\n          console.log(\"map ready\");\n          setMapReady(true);\n        }}\n        // provider={PROVIDER_GOOGLE}\n        customMapStyle={\n          Platform.OS === \"android\"\n            ? moment().hour() > 18 && moment().hour() < 7\n              ? mapStyleNight\n              : mapStyle\n            : undefined\n        }\n        ref={(map) => setMap(map)}\n        initialRegion={region}\n        onRegionChange={(r) => {\n          setRegion(r);\n\n          if (dragAndDropMode) {\n            objectsWithAnimated.forEach((object) => {\n              Animated.timing(object.animated, {\n                toValue:\n                  (city?.delta * OBJECT_SIZE_FACTOR * object.size) /\n                  r.latitudeDelta,\n                duration: 100,\n                useNativeDriver: false,\n              }).start();\n            });\n          }\n        }}\n        style={StyleSheet.absoluteFill}\n      >\n        {renderAllMapObjects}\n      </NativeMapsComponent>\n    );\n  };\n\n  const setZoom = (zoom) => dispatch({ type: \"SET_ZOOM\", value: zoom });\n\n  const renderOverlay = (\n    <Overlay\n      region={region}\n      screenProps={screenProps}\n      map={map}\n      view={view}\n      setView={setView}\n      selected={selected}\n      setSelected={setSelected}\n      setSelectedAreaIndex={setSelectedAreaIndex}\n      selectedAreaIndex={selectedAreaIndex}\n      device={device}\n      me={me}\n      dragAndDropMode={dragAndDropMode}\n      setDragAndDropMode={setDragAndDropMode}\n      territoriesSwiperRefContainer={territoriesSwiperRefContainer}\n      propertiesSwiperRefContainer={propertiesSwiperRefContainer}\n      cityAreas={cityAreas}\n      areas={areas}\n      navigation={navigation}\n      city={city}\n      objects={objects}\n      reloadMe={reloadMe}\n      reloadCities={reloadCities}\n      setZoom={setZoom}\n    />\n  );\n\n  return Platform.OS === \"web\" ? (\n    <Logic screenProps={screenProps} navigation={navigation}>\n      <View style={{ flex: 1 }}>\n        <ReactMap\n          map={map}\n          setMap={setMap}\n          zoom={device.map.zoom}\n          setMapReady={setMapReady}\n          view={view}\n        >\n          {renderAllMapObjects}\n        </ReactMap>\n        {renderOverlay}\n      </View>\n    </Logic>\n  ) : (\n    <Logic screenProps={screenProps} navigation={navigation}>\n      <View style={{ flex: 1 }}>\n        {renderMapsComponentNative()}\n        {renderOverlay}\n      </View>\n    </Logic>\n  );\n});\n\n// Map.whyDidYouRender = { logOnDifferentValues: true };\n\nexport default Map;\n","import React, { useMemo, useState } from \"react\";\nimport isEqual from \"react-fast-compare\";\nimport { Linking, Platform } from \"react-native\";\nimport { doOnce } from \"../Util\";\nimport Map from \"./Map\";\nimport { screens } from \"./Screen\";\n\nconst initialNavigationState = {\n  params: null,\n  routeName: null,\n  history: [],\n};\nconst Container = React.memo(function ContainerPure({ screenProps }) {\n  const [navigationState, setNavigationState] = useState(\n    initialNavigationState\n  );\n  doOnce(() => {\n    Linking.addEventListener(\"url\", openWebUrl);\n    Linking.getInitialURL().then((url) => openWebUrl(url));\n  });\n  const openWebUrl = (url) => {\n    if (Platform.OS === \"web\") {\n      const parts = url?.split(\"://\")[1].split(\"/\");\n      //parts is now [\"masercrimez.com\",\"#\",\"Junkies\",\"param\"]\n      const routeName = parts[2];\n      const params = parts[3] ? { param: parts[3] } : undefined;\n\n      if (Object.keys(screens).includes(routeName)) {\n        setNavigationState({\n          history: [{ routeName, params }],\n          routeName,\n          params,\n        });\n      }\n    }\n  };\n\n  const navigation = useMemo(\n    () => ({\n      navigate: (routeName, params) => {\n        const newHistory = navigationState.history.concat([\n          { routeName, params },\n        ]);\n        setNavigationState({ history: newHistory, routeName, params });\n        if (Platform.OS === \"web\") {\n          window.history.pushState(routeName, routeName, `/#/${routeName}`);\n        }\n      },\n\n      resetTo: (routeName, params) => {\n        const newHistory = [{ routeName, params }];\n        setNavigationState({ history: newHistory, routeName, params });\n        if (Platform.OS === \"web\") {\n          window.history.pushState(routeName, routeName, `/#/${routeName}`);\n        }\n      },\n\n      state: navigationState,\n      popToTop: () => {\n        setNavigationState(initialNavigationState);\n        if (Platform.OS === \"web\") {\n          window.history.pushState(\"home\", \"Home\", \"/#/\");\n        }\n      },\n      goBack: () => {\n        navigationState.history.pop();\n        setNavigationState({\n          history: navigationState.history,\n          ...(navigationState.history.length > 0\n            ? navigationState.history[navigationState.history.length - 1]\n            : {}),\n        });\n      },\n    }),\n    [navigationState, setNavigationState]\n  );\n\n  return <Map navigation={navigation} screenProps={screenProps} />;\n}, isEqual);\n\n// Container.whyDidYouRender = { logOnDifferentValues: true };\nexport default Container;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchRobberies = (payload) => {\n  return get(\"robberies\");\n};\n\nconst fetchOcs = (payload) => {\n  return get(`ocs?token=${payload.token}`);\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchChannels = (payload) => {\n  return get(`channelsubs?loginToken=${payload.token}`);\n};\n\nconst fetchAreas = (payload) => {\n  return get(`areas?city=${payload.city}`);\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      // console.log(\"got me\", me);\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = {\n  fetchMe,\n  fetchCities,\n  fetchStreetraces,\n  fetchOcs,\n  fetchRobberies,\n  fetchAreas,\n  fetchChannels,\n};\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchRobberies(action) {\n  try {\n    const { robberies } = yield call(Api.fetchRobberies, action.payload);\n\n    yield put({ type: \"ROBBERIES_FETCH_SUCCEEDED\", robberies });\n  } catch (e) {\n    yield put({ type: \"ROBBERIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchOcs(action) {\n  try {\n    const { ocs } = yield call(Api.fetchOcs, action.payload);\n\n    yield put({ type: \"OCS_FETCH_SUCCEEDED\", ocs });\n  } catch (e) {\n    yield put({ type: \"OCS_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchChannels(action) {\n  try {\n    const channels = yield call(Api.fetchChannels, action.payload);\n\n    yield put({ type: \"CHANNELS_FETCH_SUCCEEDED\", channels });\n  } catch (e) {\n    yield put({ type: \"CHANNELS_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchAreas(action) {\n  try {\n    const { areas } = yield call(Api.fetchAreas, action.payload);\n\n    yield put({ type: \"AREAS_FETCH_SUCCEEDED\", areas });\n  } catch (e) {\n    yield put({ type: \"AREAS_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"CHANNELS_FETCH_REQUESTED\", fetchChannels);\n  yield takeLatest(\"AREAS_FETCH_REQUESTED\", fetchAreas);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n  yield takeLatest(\"OCS_FETCH_REQUESTED\", fetchOcs);\n  yield takeLatest(\"ROBBERIES_FETCH_REQUESTED\", fetchRobberies);\n}\n\nexport default mySaga;\n","import isEqual from \"react-fast-compare\";\nimport { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  menuShown: Boolean,\n  movements: Movement[],\n  menu: { left: number[], right: number[] },\n  map: { zoom: number },\n  showNotificatonsHeader: boolean,\n  guyVisible: boolean,\n  introLevel: number,\n  guyText: string,\n  hasSeenInfo: {\n    [key: string]: boolean,\n  },\n  hideMap: boolean,\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: true,\n  theme: DEFAULT_THEME,\n  isConnected: 2,\n  menuShown: true,\n  foregrounded: 0,\n  movements: [],\n  menu: {\n    left: [0, 1, 2, 3, 4, 5, 6],\n    right: [0, 1, 2, 3, 4, 5, 6],\n  },\n  map: {\n    zoom: 3,\n  },\n  showNotificatonsHeader: false,\n  guyVisible: true,\n  introLevel: 0,\n  guyText: null,\n  hasSeenInfo: {},\n  hideMap: false,\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"SET_SHOW_NOTIFICATIONS_HEADER\": {\n      return { ...state, showNotificatonsHeader: action.value };\n    }\n\n    case \"SET_GUY_VISIBLE\": {\n      return {\n        ...state,\n        guyVisible: action.value,\n        guyText: action.value === false ? null : state.guyText,\n      };\n    }\n\n    case \"SET_HIDE_MAP\": {\n      return {\n        ...state,\n        hideMap: action.value,\n      };\n    }\n\n    case \"UP_INTRO_LEVEL\": {\n      console.log(\"up intro level\");\n      return { ...state, guyVisible: false, introLevel: state.introLevel + 1 };\n    }\n\n    case \"RESET_INTRO_LEVEL\": {\n      return { ...state, introLevel: 0 };\n    }\n\n    case \"SET_GUY_TEXT\": {\n      return {\n        ...state,\n        guyText: action.value,\n        guyVisible: true,\n        hasSeenInfo: action.setHasSeenInfo\n          ? { ...state.hasSeenInfo, [action.setHasSeenInfo]: true }\n          : state.hasSeenInfo,\n      };\n    }\n\n    case \"RESET_HAS_SEEN_INFO\": {\n      return { ...state, hasSeenInfo: {} };\n    }\n\n    case \"MENU_SET_RIGHT_ACTIVE_SECTIONS\": {\n      return { ...state, menu: { left: state.menu.left, right: action.value } };\n    }\n    case \"MENU_SET_LEFT_ACTIVE_SECTIONS\": {\n      return {\n        ...state,\n        menu: { right: state.menu.right, left: action.value },\n      };\n    }\n\n    case \"SET_IS_CONNECTED\": {\n      return { ...state, isConnected: action.value };\n    }\n\n    case \"SET_ZOOM\": {\n      return { ...state, map: { ...state.map, zoom: action.value } };\n    }\n\n    case \"SET_MENU_SHOWN\": {\n      return { ...state, menuShown: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN_AND_LOGIN\": {\n      return { ...initDevice, loginToken: action.value, logged: true };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      // NB: I think this would help if sometimes me doesn't change. Keep the same object and prevent rerenders. but unfortunately, me is different every time because of onlineAt/updatedAt. This makes every screen rerender every 5 seconds by default.\n      return isEqual(state, action.me) ? state : action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initRobberies = null;\nconst robberiesReducer = (state = initRobberies, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initRobberies;\n    }\n\n    case \"ROBBERIES_FETCH_SUCCEEDED\": {\n      return action.robberies;\n    }\n\n    case \"ROBBERIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initOcs = null;\nconst ocsReducer = (state = initOcs, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initOcs;\n    }\n\n    case \"OCS_FETCH_SUCCEEDED\": {\n      return action.ocs;\n    }\n\n    case \"OCS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initAreas = [];\nconst areasReducer = (state = initAreas, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initAreas;\n    }\n    case \"AREAS_FETCH_SUCCEEDED\": {\n      return action.areas;\n    }\n    case \"AREAS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initChannels = [];\nconst channelsReducer = (state = initChannels, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initChannels;\n    }\n    case \"CHANNELS_FETCH_SUCCEEDED\": {\n      return action.channels;\n    }\n    case \"CHANNELS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\n    \"device\",\n    \"me\",\n    \"streetraces\",\n    \"cities\",\n    \"ocs\",\n    \"robberies\",\n    \"areas\",\n    \"channels\",\n  ],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n  ocs: ocsReducer,\n  robberies: robberiesReducer,\n  areas: areasReducer,\n  channels: channelsReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport React from \"react\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { AlertProvider } from \"./components/AlertProvider\";\nimport ConnectionProvider from \"./components/ConnectionProvider\";\nimport { IntervalProvider } from \"./components/IntervalProvider\";\nimport NewContainer from \"./layout/Container\";\nimport { persistor, store } from \"./Store\";\n\n//hoi\n\nif (process.env.NODE_ENV === \"development\") {\n  const whyDidYouRender = require(\"@welldone-software/why-did-you-render\");\n  whyDidYouRender(React, {\n    trackAllPureComponents: false,\n  });\n}\n\nconst _RootContainer = (props) => {\n  // NB: we got screenProps here , but not navigation\n  // if you also need navigation, use withLayout/Layout\n\n  return (\n    <IntervalProvider screenProps={props}>\n      <ActionSheetProvider>\n        <ConnectionProvider>\n          <AlertProvider>\n            <NewContainer screenProps={props} />\n          </AlertProvider>\n        </ConnectionProvider>\n      </ActionSheetProvider>\n    </IntervalProvider>\n  );\n};\n\nconst mapStateToProps = ({\n  device,\n  me,\n  streetraces,\n  ocs,\n  cities,\n  robberies,\n  channels,\n  areas,\n}) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, ocs, cities, robberies, channels, areas };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) => {\n    // console.log(\"reloadMe with loginToken\", loginToken);\n    if (loginToken) {\n      dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } });\n    }\n  },\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadRobberies: () =>\n    dispatch({ type: \"ROBBERIES_FETCH_REQUESTED\", payload: null }),\n  reloadOcs: (token) => {\n    if (token) {\n      dispatch({ type: \"OCS_FETCH_REQUESTED\", payload: { token } });\n    }\n  },\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n  reloadChannels: (token) => {\n    if (token) {\n      dispatch({ type: \"CHANNELS_FETCH_REQUESTED\", payload: { token } });\n    }\n  },\n  reloadAreas: (city) =>\n    dispatch({ type: \"AREAS_FETCH_REQUESTED\", payload: { city } }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nconst App = () => {\n  return (\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <RootContainer />\n      </Provider>\n    </PersistGate>\n  );\n};\nexport default App;\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 286,\n\t\"./af.js\": 286,\n\t\"./ar\": 287,\n\t\"./ar-dz\": 288,\n\t\"./ar-dz.js\": 288,\n\t\"./ar-kw\": 289,\n\t\"./ar-kw.js\": 289,\n\t\"./ar-ly\": 290,\n\t\"./ar-ly.js\": 290,\n\t\"./ar-ma\": 291,\n\t\"./ar-ma.js\": 291,\n\t\"./ar-sa\": 292,\n\t\"./ar-sa.js\": 292,\n\t\"./ar-tn\": 293,\n\t\"./ar-tn.js\": 293,\n\t\"./ar.js\": 287,\n\t\"./az\": 294,\n\t\"./az.js\": 294,\n\t\"./be\": 295,\n\t\"./be.js\": 295,\n\t\"./bg\": 296,\n\t\"./bg.js\": 296,\n\t\"./bm\": 297,\n\t\"./bm.js\": 297,\n\t\"./bn\": 298,\n\t\"./bn.js\": 298,\n\t\"./bo\": 299,\n\t\"./bo.js\": 299,\n\t\"./br\": 300,\n\t\"./br.js\": 300,\n\t\"./bs\": 301,\n\t\"./bs.js\": 301,\n\t\"./ca\": 302,\n\t\"./ca.js\": 302,\n\t\"./cs\": 303,\n\t\"./cs.js\": 303,\n\t\"./cv\": 304,\n\t\"./cv.js\": 304,\n\t\"./cy\": 305,\n\t\"./cy.js\": 305,\n\t\"./da\": 306,\n\t\"./da.js\": 306,\n\t\"./de\": 307,\n\t\"./de-at\": 308,\n\t\"./de-at.js\": 308,\n\t\"./de-ch\": 309,\n\t\"./de-ch.js\": 309,\n\t\"./de.js\": 307,\n\t\"./dv\": 310,\n\t\"./dv.js\": 310,\n\t\"./el\": 311,\n\t\"./el.js\": 311,\n\t\"./en-au\": 312,\n\t\"./en-au.js\": 312,\n\t\"./en-ca\": 313,\n\t\"./en-ca.js\": 313,\n\t\"./en-gb\": 314,\n\t\"./en-gb.js\": 314,\n\t\"./en-ie\": 315,\n\t\"./en-ie.js\": 315,\n\t\"./en-il\": 316,\n\t\"./en-il.js\": 316,\n\t\"./en-in\": 317,\n\t\"./en-in.js\": 317,\n\t\"./en-nz\": 318,\n\t\"./en-nz.js\": 318,\n\t\"./en-sg\": 319,\n\t\"./en-sg.js\": 319,\n\t\"./eo\": 320,\n\t\"./eo.js\": 320,\n\t\"./es\": 321,\n\t\"./es-do\": 322,\n\t\"./es-do.js\": 322,\n\t\"./es-us\": 323,\n\t\"./es-us.js\": 323,\n\t\"./es.js\": 321,\n\t\"./et\": 324,\n\t\"./et.js\": 324,\n\t\"./eu\": 325,\n\t\"./eu.js\": 325,\n\t\"./fa\": 326,\n\t\"./fa.js\": 326,\n\t\"./fi\": 327,\n\t\"./fi.js\": 327,\n\t\"./fil\": 328,\n\t\"./fil.js\": 328,\n\t\"./fo\": 329,\n\t\"./fo.js\": 329,\n\t\"./fr\": 330,\n\t\"./fr-ca\": 331,\n\t\"./fr-ca.js\": 331,\n\t\"./fr-ch\": 332,\n\t\"./fr-ch.js\": 332,\n\t\"./fr.js\": 330,\n\t\"./fy\": 333,\n\t\"./fy.js\": 333,\n\t\"./ga\": 334,\n\t\"./ga.js\": 334,\n\t\"./gd\": 335,\n\t\"./gd.js\": 335,\n\t\"./gl\": 336,\n\t\"./gl.js\": 336,\n\t\"./gom-deva\": 337,\n\t\"./gom-deva.js\": 337,\n\t\"./gom-latn\": 338,\n\t\"./gom-latn.js\": 338,\n\t\"./gu\": 339,\n\t\"./gu.js\": 339,\n\t\"./he\": 340,\n\t\"./he.js\": 340,\n\t\"./hi\": 341,\n\t\"./hi.js\": 341,\n\t\"./hr\": 342,\n\t\"./hr.js\": 342,\n\t\"./hu\": 343,\n\t\"./hu.js\": 343,\n\t\"./hy-am\": 344,\n\t\"./hy-am.js\": 344,\n\t\"./id\": 345,\n\t\"./id.js\": 345,\n\t\"./is\": 346,\n\t\"./is.js\": 346,\n\t\"./it\": 347,\n\t\"./it-ch\": 348,\n\t\"./it-ch.js\": 348,\n\t\"./it.js\": 347,\n\t\"./ja\": 349,\n\t\"./ja.js\": 349,\n\t\"./jv\": 350,\n\t\"./jv.js\": 350,\n\t\"./ka\": 351,\n\t\"./ka.js\": 351,\n\t\"./kk\": 352,\n\t\"./kk.js\": 352,\n\t\"./km\": 353,\n\t\"./km.js\": 353,\n\t\"./kn\": 354,\n\t\"./kn.js\": 354,\n\t\"./ko\": 355,\n\t\"./ko.js\": 355,\n\t\"./ku\": 356,\n\t\"./ku.js\": 356,\n\t\"./ky\": 357,\n\t\"./ky.js\": 357,\n\t\"./lb\": 358,\n\t\"./lb.js\": 358,\n\t\"./lo\": 359,\n\t\"./lo.js\": 359,\n\t\"./lt\": 360,\n\t\"./lt.js\": 360,\n\t\"./lv\": 361,\n\t\"./lv.js\": 361,\n\t\"./me\": 362,\n\t\"./me.js\": 362,\n\t\"./mi\": 363,\n\t\"./mi.js\": 363,\n\t\"./mk\": 364,\n\t\"./mk.js\": 364,\n\t\"./ml\": 365,\n\t\"./ml.js\": 365,\n\t\"./mn\": 366,\n\t\"./mn.js\": 366,\n\t\"./mr\": 367,\n\t\"./mr.js\": 367,\n\t\"./ms\": 368,\n\t\"./ms-my\": 369,\n\t\"./ms-my.js\": 369,\n\t\"./ms.js\": 368,\n\t\"./mt\": 370,\n\t\"./mt.js\": 370,\n\t\"./my\": 371,\n\t\"./my.js\": 371,\n\t\"./nb\": 372,\n\t\"./nb.js\": 372,\n\t\"./ne\": 373,\n\t\"./ne.js\": 373,\n\t\"./nl\": 374,\n\t\"./nl-be\": 375,\n\t\"./nl-be.js\": 375,\n\t\"./nl.js\": 374,\n\t\"./nn\": 376,\n\t\"./nn.js\": 376,\n\t\"./oc-lnc\": 377,\n\t\"./oc-lnc.js\": 377,\n\t\"./pa-in\": 378,\n\t\"./pa-in.js\": 378,\n\t\"./pl\": 379,\n\t\"./pl.js\": 379,\n\t\"./pt\": 380,\n\t\"./pt-br\": 381,\n\t\"./pt-br.js\": 381,\n\t\"./pt.js\": 380,\n\t\"./ro\": 382,\n\t\"./ro.js\": 382,\n\t\"./ru\": 383,\n\t\"./ru.js\": 383,\n\t\"./sd\": 384,\n\t\"./sd.js\": 384,\n\t\"./se\": 385,\n\t\"./se.js\": 385,\n\t\"./si\": 386,\n\t\"./si.js\": 386,\n\t\"./sk\": 387,\n\t\"./sk.js\": 387,\n\t\"./sl\": 388,\n\t\"./sl.js\": 388,\n\t\"./sq\": 389,\n\t\"./sq.js\": 389,\n\t\"./sr\": 390,\n\t\"./sr-cyrl\": 391,\n\t\"./sr-cyrl.js\": 391,\n\t\"./sr.js\": 390,\n\t\"./ss\": 392,\n\t\"./ss.js\": 392,\n\t\"./sv\": 393,\n\t\"./sv.js\": 393,\n\t\"./sw\": 394,\n\t\"./sw.js\": 394,\n\t\"./ta\": 395,\n\t\"./ta.js\": 395,\n\t\"./te\": 396,\n\t\"./te.js\": 396,\n\t\"./tet\": 397,\n\t\"./tet.js\": 397,\n\t\"./tg\": 398,\n\t\"./tg.js\": 398,\n\t\"./th\": 399,\n\t\"./th.js\": 399,\n\t\"./tk\": 400,\n\t\"./tk.js\": 400,\n\t\"./tl-ph\": 401,\n\t\"./tl-ph.js\": 401,\n\t\"./tlh\": 402,\n\t\"./tlh.js\": 402,\n\t\"./tr\": 403,\n\t\"./tr.js\": 403,\n\t\"./tzl\": 404,\n\t\"./tzl.js\": 404,\n\t\"./tzm\": 405,\n\t\"./tzm-latn\": 406,\n\t\"./tzm-latn.js\": 406,\n\t\"./tzm.js\": 405,\n\t\"./ug-cn\": 407,\n\t\"./ug-cn.js\": 407,\n\t\"./uk\": 408,\n\t\"./uk.js\": 408,\n\t\"./ur\": 409,\n\t\"./ur.js\": 409,\n\t\"./uz\": 410,\n\t\"./uz-latn\": 411,\n\t\"./uz-latn.js\": 411,\n\t\"./uz.js\": 410,\n\t\"./vi\": 412,\n\t\"./vi.js\": 412,\n\t\"./x-pseudo\": 413,\n\t\"./x-pseudo.js\": 413,\n\t\"./yo\": 414,\n\t\"./yo.js\": 414,\n\t\"./zh-cn\": 415,\n\t\"./zh-cn.js\": 415,\n\t\"./zh-hk\": 416,\n\t\"./zh-hk.js\": 416,\n\t\"./zh-mo\": 417,\n\t\"./zh-mo.js\": 417,\n\t\"./zh-tw\": 418,\n\t\"./zh-tw.js\": 418\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 578;","module.exports = __webpack_public_path__ + \"static/media/house2.a0265669.png\";","module.exports = __webpack_public_path__ + \"static/media/headquarter.e93c6de6.png\";","module.exports = __webpack_public_path__ + \"static/media/bulletfactory.e58e7c97.png\";","module.exports = __webpack_public_path__ + \"static/media/airport.72e68404.png\";","module.exports = __webpack_public_path__ + \"static/media/bank.94332498.png\";","module.exports = __webpack_public_path__ + \"static/media/casino.63f60844.png\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop.0f0755bd.png\";","module.exports = __webpack_public_path__ + \"static/media/junkies.c17461b4.png\";","module.exports = __webpack_public_path__ + \"static/media/garage.6bda310e.png\";","module.exports = __webpack_public_path__ + \"static/media/gym.8d563841.png\";","module.exports = __webpack_public_path__ + \"static/media/hospital.77df0a1e.png\";","module.exports = __webpack_public_path__ + \"static/media/jail.138d3d71.png\";","module.exports = __webpack_public_path__ + \"static/media/sexshop.7153d904.png\";","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gangster3.65c72ef7.png\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","module.exports = __webpack_public_path__ + \"static/media/snackbar.a17d7683.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clothesstore.5d863b13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/supermarket.1313f5be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drugstore.4fbc8e73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop.bd3dee77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cardealer.9341f232.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a34b0cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/casino.701d6832.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jewelrystore.e2f62912.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uitgemoord.89bc3b35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item1.a5e891d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item2.e86438ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item3.27b6a03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item4.b980bfe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item5.1da86cb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item6.935530e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item7.bf00b038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item8.e50cc6c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item9.44698ead.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item10.2cf60cef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item11.d162fbe5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item12.0bcfb4c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a34b0cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cars.a3f3b108.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/shootout.f88bc10f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}