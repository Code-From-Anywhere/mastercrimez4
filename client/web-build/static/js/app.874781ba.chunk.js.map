{"version":3,"sources":["assets/icon.png","src/Constants.js","src/Util.js","src/components/Button.js","src/components/AlertProvider.js","src/components/ConnectionProvider.js","src/components/Dead.js","src/components/Fly.js","src/components/Chat.js","src/components/Header.js","src/updateHook.js","src/components/HoverState.js","src/components/Hoverable.js","src/components/T.js","src/components/Jail.js","src/Style.js","src/components/LoginModal.js","src/KeyboardAvoidingSpace.js","src/Menus.js","src/screens/Accomplice.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Airport.js","src/components/Tabs.js","src/screens/Bank.js","src/screens/Donate.js","src/components/Captcha.js","src/screens/Income.js","src/screens/SwissBank.js","src/screens/AllBanks.js","src/screens/Backfire.js","src/screens/Bomb.js","src/screens/Bulletfactory.js","src/screens/Bunker.js","src/screens/Casino.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/screens/Channel.js","src/components/Separator.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/Code.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateStreetrace.js","src/components/Footer.js","src/screens/Crimes.js","src/screens/DownloadApp.js","src/screens/ForgotPassword.js","src/screens/Forum.js","src/components/User.js","src/screens/Gang.js","src/components/H1.js","src/screens/GangAchievements.js","src/screens/GangCreate.js","src/screens/GangOc.js","src/screens/Gangs.js","src/components/Content.js","src/screens/GangSettings.js","src/screens/GangShop.js","src/screens/Garage.js","src/screens/Gym.js","src/screens/Hackers.js","src/screens/Hoeren.js","src/screens/Home.js","src/screens/Hospital.js","src/components/Menu.js","src/screens/Info.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/ManageObject.js","src/screens/Market.js","src/screens/Members.js","src/screens/MollieComplete.js","src/screens/MyObjects.js","src/screens/MyProfile.js","src/screens/OrganisedCrime.js","src/screens/Poker.js","src/screens/Police.js","src/screens/Privacy.js","src/screens/Prizes.js","src/screens/Profile.js","src/screens/Racecars.js","src/screens/RecoverPassword.js","src/screens/Rob.js","src/screens/Settings.js","src/screens/Shop.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/Stats.js","src/screens/Status.js","src/screens/StealCar.js","src/screens/Streetrace.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/Wiet.js","src/components/Checkbox.js","src/screens/Work.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","assets/dood.jpg","assets/logos/logo5.jpg","assets/bombarderen.jpg","node_modules/moment/locale sync /^/.//.*$","assets/whatsapp.png","assets/instagram.png","assets/spotify.png","assets/youtube.png","assets/gangshop/item1.jpg","assets/gangshop/item2.jpg","assets/gangshop/item3.jpg","assets/gangshop/item4.jpg","assets/gangshop/item5.jpg","assets/gangshop/item6.jpg","assets/gangshop/item7.jpg","assets/gangshop/item8.jpg","assets/gangshop/item9.jpg","assets/gangshop/item10.jpg","assets/gangshop/item11.jpg","assets/gangshop/item12.jpg","assets/hacker.jpeg","assets/politie.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["module","exports","Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","get","post","ColorLuminance","hex","lum","String","length","c","i","rgb","parseInt","substr","Math","round","min","max","lighterHex","getUserColor","item","theme","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","prevExp","nowRank","diff","progress","percentage","getRank","getStrength","isSmall","Dimensions","width","Button","icon","font","title","onPress","disabled","style","TheIcon","Icon","View","useSelector","state","device","TouchableOpacity","flexDirection","backgroundColor","secondary","padding","justifyContent","paddingHorizontal","marginRight","name","color","secondaryText","size","textAlign","AlertContext","React","createContext","AlertProvider","children","useState","alertVisible","setAlertVisible","alert","setAlert","getText","Provider","value","message","buttons","options","log","Platform","OS","Alert","position","top","bottom","left","right","alignItems","borderRadius","fontWeight","map","button","text","ConnectionProviderScreen","fetchWithTimeout","didTimeOut","Promise","resolve","reject","timeout","setTimeout","Error","clearTimeout","err","props","setIsConnected","this","unsubscribe","NetInfo","addEventListener","isConnected","interval","setInterval","flex","SafeAreaView","Component","connect","dispatch","Dead","selected","screenProps","me","reloadMe","navigation","locale","reizenAt","Date","Image","source","height","Text","token","loginToken","option","setState","Fly","sec","city","until","onFinish","timeToShow","timeLabels","m","s","Chat","chat","input","getChat","allText","select","web","default","borderWidth","borderColor","numberOfLines","navigate","fontSize","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","TextInput","placeholder","onChangeText","onSubmitEditing","nativeEvent","location","reload","isSmallDevice","Header","updateAvailable","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","useExpoUpdate","textStyle","marginBottom","notActivated","phoneVerified","numActions","marginTop","statsHeader","flexWrap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","gang","cash","bank","bullets","gamepoints","health","strength","chats","AntDesign","updateComponent","reloadAsync","backButton","margin","routeName","hitSlop","goBack","window","history","back","webHeader","manifest","version","toggleDrawer","Feather","isEnabled","canUseDOM","lastTouchTimestamp","disableHover","document","Hoverable","onHoverIn","onHoverOut","isHovered","setHovered","showHover","setShowHover","child","cloneElement","Children","only","onMouseEnter","e","onMouseLeave","onResponderGrant","onResponderRelease","onPressIn","onPressOut","displayName","propTypes","oneOfType","func","element","T","bold","Jail","jail","renderItem","seconds","floor","jailAt","marginLeft","digitStyle","digitTxtStyle","buyOut","fetchMembers","clearInterval","order","marginVertical","FlatList","data","ListHeaderComponent","renderHeader","StyleSheet","create","textInput","container","LoginModal","setName","setResponse","email","setEmail","password","setPassword","setError","success","setSuccess","phone","setPhone","view","setView","code","setCode","changeName","login","primary","alignSelf","Entypo","ActivityIndicator","placeholderTextColor","secondaryTextSoft","secureTextEntry","md5","str_md5","responseJson","textDecorationLine","KeyboardAvoidingSpace","keyboardWillShow","StatusBar","currentHeight","onKeyboardWillShow","toValue","endCoordinates","offset","dim","isIPhoneXSize","isIPhoneXrSize","isIphoneX","Animated","timing","easing","Easing","ease","useNativeDriver","start","keyboardWillHide","onKeyboardWillHide","Value","bindListeners","unbindListeners","keyboardWillShowListener","Keyboard","addListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","remove","leftMenu","stealcarSeconds","ceil","autostelenAt","crimeSeconds","crimeAt","bunkerSeconds","bunkerAt","attackSeconds","attackAt","robSeconds","robAt","ocSeconds","ocAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","workSeconds","workAt","header","isHeader","content","iconType","to","component","level","filter","adminMenu","gameMod","admin","rightMenu","gangMenus","image","thumbnail","gangId","isStats","online","Accomplice","accomplice","accomplice1","setAccomplice1","accomplice2","setAccomplice2","accomplice3","setAccomplice3","accomplice4","setAccomplice4","submit","acc","params","url","ScrollView","maxWidth","onFocus","Clipboard","setString","accomplices","styles","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","id","setId","user","setUser","actions","setActions","movements","setMovements","getActions","ip","previous","Airport","renderFooter","openActionSheet","showActionSheetWithOptions","buttonIndex","connectActionSheet","Tabs","tabs","tab","isActive","borderRightWidth","borderRightColor","Bank","deposit","amount","row","keyValue","Donate","keys","names","wiet","junkies","hoeren","Captcha","onChangeCaptcha","captcha","random","onChangeRandom","uri","needCaptcha","MaterialCommunityIcons","Income","incomeAt","uren","uren2","sqrt","SwissBank","cities","reloadCities","becomeOwnerResponse","setBecomeOwnerResponse","setAmount","setType","becomeOwner","find","swissBank","swissBullets","bankOwner","bankProfit","paddingVertical","borderBottomWidth","borderBottomColor","AllBanks","setTab","MyProfile","backfire","bf","Bomb","useActionSheet","bombs","setBombs","setCaptcha","setRandom","typeStrings","bulletFactory","casino","landlord","weaponShop","rld","airport","estateAgent","garage","airplane","Object","push","cancelButtonIndex","destructiveButtonIndex","Bulletfactory","setBullets","bulletFactoryOwner","bulletFactoryPrice","bulletFactoryProfit","bulletFactoryDamage","Bunker","price","minHeight","keyExtractor","extraData","ListFooterComponent","Casino","casinoOwner","casinoProfit","ChangeName","ChangePassword","password1","password2","minWidth","ImageInput","hasEdited","getPermissionAsync","Permissions","status","_pickImage","loading","ImagePicker","mediaTypes","All","allowsEditing","aspect","base64","result","cancelled","ImageManipulator","resize","format","PNG","manipulated","manipulatedBase64","onChange","SIZE","small","Ionicons","isBigDevice","ChatScreen","fetchChat","isFetching","onRefresh","isMe","avatar","IMAGE_SIZE","marginHorizontal","isSystem","resizeMode","send","cid","multiline","STYLE","members","subid","Array","isArray","contentContainerStyle","refreshControl","refreshing","inverted","ref","flatList","Separator","fetchChannelsubs","channelsubs","openMenu","openGeneralMenu","channelTitle","channel","userId","channelThumbnail","unread","lastmessage","moment","lastmessageDate","isAfter","startOf","ItemSeparatorComponent","Code","Linking","openURL","CreateStreetrace","reloadStreetraces","setLoading","racecars","setRacecars","numParticipants","setNumParticipants","setPrice","car","setCar","cars","TabInput","auto","racecar","power","carId","Footer","setText","facebookShareUrl","copy","getFullYear","Crimes","kans","kans2","getMobileOperatingSystem","userAgent","navigator","vendor","opera","test","MSStream","DownloadApp","Login","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","updatedAt","responses","createdAt","renderNew","renderTopics","User","isOnline","onlineAt","extraIcon","country","Gangs","setItem","postGangJoin","score","users","gangLevel","H1","GangAchievements","setResult","achievements","stats","current","next","GangCreate","gangs","setGangs","invites","setInvites","getGangs","postGangAnswerInvite","accepted","requests","invite","gangName","numColumns","UIManager","setLayoutAnimationEnabledExperimental","getData","AsyncStorage","getItem","Content","contentWidth","expanded","setExpanded","isExpanded","LayoutAnimation","linear","onLayout","event","layout","y","GangSettings","setRequests","setGang","username","setUsername","profile","setProfile","setImage","isBullets","setIsBullets","alertAlert","useContext","getGang","postGangAnswerJoin","postGangTransaction","isToUser","postGangLeave","getGangLevel","postGangRemove","changeRank","postGangSetRank","request","member","postGangKick","quality","includes","GangShop","prices","items","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","MARGIN","v","itemId","postGangShop","Garage","fetchGroups","carGroups","reduce","bulkAction","action","upgradeCar","renderGroup","kogels","focusListener","Gym","Hoeren","renderCities","rldOwner","rldProfit","number","itemWidth","amountOfItems","Home","activeSlide","notificationsHeader","_handleAppStateChange","nextAppState","turnOnNotifications","sendLanguage","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","language","ExpoConstants","isDevice","existingStatus","finalStatus","pushtoken","Notifications","_renderItem","menu","movement","locationX","locationY","timestamp","AppState","removeEventListener","filtered","slice","IntentLauncher","_carousel","sliderWidth","onSnapToItem","dotsLength","activeDotIndex","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","renderCarousel","Hospital","heal","Menu","IconFont","StoreReview","PrivacyPage","components","en","nl","strings","jailOwner","jailProfit","ListEmptyComponent","Junkies","junkiesOwner","junkiesProfit","Kill","kill","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","profitKey","priceKey","ownerKey","damageKey","Market","market","setMarket","buy","setBuy","validTypes","postMarketCreateOffer","orders","Members","orderKey","orderBy","secondKey","o","searchedMembers","toLowerCase","MollieComplete","properties","MyObjects","p","property","propertyString","setPhoto","images","setImages","selectedImage","setSelectedImage","bio","setBio","fetchImages","pic","Wiet","Poker","poker","Config","onLinkPress","link","Prizes","ProfileScreen","getProfile","hasImage","Racecars","fetchGarage","sellCar","crushCar","RecoverPassword","rob","Settings","__DEV__","Shop","fetchCities","fetchShop","propertyKey","renderMenu","t","respones","activate","activationToken","keyNames","newMembers","onlineToday","fetchStats","stat","values","uur","protectionAt","StealCar","typeStart","finished","Streetrace","streetraces","RefreshControl","creator","streetraceParticipants","streetraceId","leave","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","save","Creditshop","setItems","credits","kooptext","kosten","Mollie","SuperMessage","VIP","landlordOwner","landlordProfit","Checkbox","active","Work","hours","setSelected","work","Api","fetchMe","payload","fetchStreetraces","mySaga","call","put","takeLatest","initDevice","logged","foregrounded","config","storage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","concat","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","isCurrent","TouchOrView","paddingLeft","Layout","leftActive","setLeftActive","rightActive","setRightActive","_handleNotificationResponse","notification","handleChange","available","ExpoNotifications","skip","Helmet","Accordion","expandMultiple","sections","activeSections","section","renderContent","withLayout","Container","createBrowserApp","createAppContainer","createDrawerNavigator","createSwitchNavigator","createStackNavigator","screen","path","Gang","GangOc","Hackers","Police","Channels","Channel","JailScreen","Rob","Backfire","Stats","OrganisedCrime","AdminEmail","Forum","Theme","Profile","SignupEmail","SignupEmail2","VerifyPhoneCode","ForgotPassword","Case","Car","VerifyPhone","Info","InfoGame","InfoRules","Privacy","Contribute","drawerPosition","edgeWidth","contentComponent","forceInset","horizontal","unmountInactiveRoutes","navigationOptions","drawerLockMode","defaultNavigationOptions","headerShown","makeid","characters","charactersLength","charAt","_RootContainer","openWebUrl","sendMovements","meInterval","getInitialURL","prevProps","ConnectionProvider","RootContainer","App","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,gaCa5BC,EATG,CAChBC,YALiB,2BAMjBC,QAAS,2CACTC,YACE,2FACFC,gBACE,gFCFEC,EAAa,SAACC,EAAQC,EAAQC,GAAjB,OACjBF,EAAOG,MAAMF,GAAQG,KAAKF,IAEfG,EAAY,SAACC,GAGxB,MAAqB,QAFHA,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,IAExC,KAAO,MAExBI,EAAkB,SAACD,GAAD,OAAgB,SAACE,GAC9C,IAAMC,EAAYH,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGhEO,EAAiBC,EAAQ,KAEX,OAAdF,IACFC,EAAiBC,EAAQ,MAPoC,IAU/D,IAAIX,EACFU,EAAeF,IAAf,sBACsBA,EADtB,iBAC0CF,EAD1C,IAX6D,mBAATM,EAAS,iCAATA,EAAS,kBAkB/D,OAJAA,EAAKC,SAAQ,SAACC,EAAKC,GACjBf,EAASD,EAAWC,EAAD,KAAae,EAAQ,GAAKD,MAGxCd,IAGIgB,EAAe,SAACC,GAC3B,aAAOA,OAAP,EAAOA,EAAGC,WAAWC,QAAQ,wBAAyB,MAuDjD,IAiBMC,GAAS,SAACC,EAAIC,GACzBC,qBAAU,WAER,OADAF,IACA,MAAOC,OAAP,EAAOA,MACN,KAEQE,GAAU,SAACC,EAAUC,EAAQC,GACxC,OAAOC,MAASlC,EAAUC,YAAd,IAA6B8B,EAAY,CACnDC,SACAG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAiB,SAAXD,EAAoBK,KAAKC,UAAUL,QAAQM,IAEhDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,yEACGH,GADH,+DAGLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIPE,GAAM,SAACjB,GAAD,OAAcD,GAAQC,EAAU,QACtCkB,GAAO,SAAClB,EAAUE,GAAX,OAAoBH,GAAQC,EAAU,OAAQE,IAqB3D,SAASiB,GAAeC,EAAKC,IAElCD,EAAME,OAAOF,GAAK1B,QAAQ,cAAe,KACjC6B,OAAS,IACfH,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAEzDC,EAAMA,GAAO,EAGb,IACEG,EACAC,EAFEC,EAAM,IAGV,IAAKD,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIG,SAASP,EAAIQ,OAAW,EAAJH,EAAO,GAAI,IAEnCC,IAAQ,MADRF,EAAIK,KAAKC,MAAMD,KAAKE,IAAIF,KAAKG,IAAI,EAAGR,EAAIA,EAAIH,GAAM,MAAM5B,SAAS,MAC/CmC,OAAOJ,EAAED,QAG7B,OAAOG,EAGF,IAAMO,GAAa,SAACb,GAAD,OAASD,GAAeC,EAAK,KAG1Cc,GAAe,SAACC,EAAMC,GAAP,OACtB,MAAJD,OAAA,EAAAA,EAAME,eAAgB,IAClB,OACI,MAAJF,OAAA,EAAAA,EAAME,eAAgB,IACtB,SACAD,EAAME,aAENC,GAAQ,CACZ,CACEC,KAAM,SACNC,IAAK,IAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,GAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,kBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAIHE,GAAe,SAACH,EAAMI,EAAYC,GACtC,IAAMC,EAAMD,EAAKE,WAAU,SAACC,GAAD,OAAOR,EAAOQ,EAAEP,OACrCQ,EAAOH,EAAM,EAEbI,EAASL,EAAKC,GAAOD,EAAKC,GAAKL,IAAMI,EAAKA,EAAKtB,OAAS,GAAGkB,IAC3DU,EAAUN,EAAKI,GAAQJ,EAAKI,GAAMR,IAAM,EAExCW,EAAUP,EAAKC,GAAOD,EAAKC,GAAKN,KAAOK,EAAKA,EAAKtB,OAAS,GAAGiB,KAE7Da,EAAOH,EAASC,EAChBG,EAAWd,EAAOW,EAClBI,EAAa1B,KAAKC,MAAOwB,EAAWD,EAAQ,IAAM,IAAM,GAE9D,MAAmB,aAAfT,EACKQ,EACiB,WAAfR,GACO,IAATE,EAAaA,EAAM,EAAID,EAAKtB,OACX,eAAfqB,EACFW,EACiB,SAAfX,EACFQ,EAAU,IAAMG,EAAa,SAD/B,GAKIC,GAAU,SAAChB,EAAMI,GAAP,OACrBD,GAAaH,EAAMI,EAAYL,KACpBkB,GAAc,SAACjB,EAAMI,GAAP,OACzBD,GAAaH,EAAMI,EAAYF,K,ykBCnX3BgB,GADYC,IAAW1C,IAAI,UAAzB2C,MACgB,IAmCTC,GAjCA,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAChDC,EAAUL,GAAQD,EAAOO,EAAKN,GAAQO,UACtClC,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAElD,OACE,kBAACsC,EAAA,EAAD,CAAkBT,QAASC,OAAW1D,EAAYyD,GAChD,kBAACK,EAAA,QAAD,CACEH,MAAK,IACHQ,cAAe,MACfC,gBAAiBV,EAAc9B,EAAMyC,UAAZ,KAA4BzC,EAAMyC,UAC3DC,QAAS,GACTC,eAAgB,SAChBC,kBAAmBtB,GAAU,EAAI,IAE9BS,IAGJJ,GAAQD,EACP,kBAACQ,EAAA,QAAD,CAAMH,MAAO,CAAEc,YAAa,KAC1B,kBAACb,EAAD,CAASc,KAAMpB,EAAMqB,MAAO/C,EAAMgD,cAAeC,KAAM,MAEvD,KAEHrB,GACC,kBAAC,UAAD,CAAMG,MAAO,CAAEmB,UAAW,SAAUH,MAAO/C,EAAMgD,gBAC9CpB,MC3BAuB,GAAeC,IAAMC,cAAc,IAEnCC,GAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLC,oBAAS,GADJ,WACtCC,EADsC,KACxBC,EADwB,OAEnBF,mBAAS,IAFU,WAEtCG,EAFsC,KAE/BC,EAF+B,KAIvCC,EAAUnH,IAChB,OACE,kBAACyG,GAAaW,SAAd,CACEC,MAAO,SAACnC,EAAOoC,EAASC,EAASC,GAC/BtF,QAAQuF,IAAI,WACQ,QAAhBC,UAASC,IACXX,GAAiBD,GACjBG,EAAS,CAAEhC,QAAOoC,UAASC,UAASC,aAEpCI,IAAMX,MAAM/B,EAAOoC,EAASC,EAASC,KAIxCX,EAEAE,GACC,kBAACvB,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPnC,gBAAiB,kBACjBG,eAAgB,SAChBiC,WAAY,WAGd,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CAAES,gBAAiB,QAASqC,aAAc,GAAInC,QAAS,KAE9D,kBAAC,UAAD,CAAMX,MAAO,CAAE+C,WAAY,SAAWnB,EAAM/B,OAC5C,kBAAC,UAAD,KAAO+B,EAAMK,SAEZL,EAAMM,QACL,kBAAC/B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,kBAGjBgB,EAAMM,QAAQc,KAAI,SAACC,GAAD,OACjB,kBAAC,GAAD,CACEpD,MAAOoD,EAAOC,KACdpD,QAAS,WACP,MAAAmD,EAAOnD,SAAPmD,EAAOnD,UACP6B,GAAgB,UAMxB,kBAAC,GAAD,CACE9B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM6B,GAAgB,U,qbC3D/C,IAIMwB,G,mLAiBJC,iBAAmB,WACjB,IACIC,GAAa,EAEjB,IAAIC,SAAQ,SAAUC,EAASC,GAC7B,IAAMC,EAAUC,YAAW,WACzBL,GAAa,EACbG,EAAO,IAAIG,MAAM,wBANC,KASpB3H,MAAMlC,EAAUC,YAAc,gBAC3BuC,MAAK,SAAUC,GAEdqH,aAAaH,GACRJ,GAEHE,EAAQhH,MAGXI,OAAM,SAAUkH,GAIXR,GAEJG,EAAOK,SAGVvH,MAAK,WAEJ,EAAKwH,MAAMC,eAnDK,MAqDjBpH,OAAM,SAACkH,GACNhH,QAAQuF,IAAI,MAAOyB,GACnB,EAAKC,MAAMC,eAtDI,O,0DAIA,IAAD,OACE,QAAhB1B,UAASC,KACX0B,KAAKC,YAAcC,KAAQC,kBAAiB,SAAC9D,GAG3C,EAAKyD,MAAMC,eACT1D,EAAM+D,YAXQ,EAEA,OAcpBJ,KAAKK,SAAWC,YAAYN,KAAKZ,iBAAkB,O,6CA6C/B,QAAhBf,UAASC,IACX0B,KAAKC,cAEPL,aAAaI,KAAKK,Y,+BAGV,IAAD,EAC2BL,KAAKF,MAA/BtC,EADD,EACCA,SAAU4C,EADX,EACWA,YAElB,OACE,kBAACjE,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAvEH,IAwEfH,GACC,kBAACjE,EAAA,QAAD,CACEH,MAAO,CACLS,gBA1ES,IA2EP2D,EAAiC,SAAW,MAC9CzD,QAAS,KAGX,kBAAC6D,EAAA,EAAD,KACE,kBAAC,UAAD,CAAMxE,MAAO,CAAEgB,MAAO,UAhFb,IAiFNoD,EAAiC,UAAY,OAAQ,IADxD,yBAOL5C,O,GApF8BH,IAAMoD,WAmG9BC,gBATS,SAACrE,GAAD,MAAY,CAClC+D,YAAa/D,EAAMC,OAAO8D,gBAGD,SAACO,GAAD,MAAe,CACxCZ,eAAgB,SAACK,GAAD,OACdO,EAAS,CAAEjG,KAAM,mBAAoBsD,MAAOoC,QAGjCM,CAGbvB,I,+aClDayB,G,mLAxDbvE,MAAQ,CACNwE,SAAU,KACVtI,SAAU,M,+CAEF,IAAD,SAIHyH,KAAKF,MAJF,IAELgB,YAAeC,EAFV,EAEUA,GAAIzE,EAFd,EAEcA,OAAQ0E,EAFtB,EAEsBA,SAIvBlD,GANC,EAGLmD,WAGctK,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAExBxH,KAAKC,OAAOoH,EAAGI,SAAWC,KAAKzG,OAAS,KACpD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,KACE,kBAACkF,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,OAE9BvB,KAAK3D,MAAM9D,SACV,kBAACiJ,KAAD,CAAMxF,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC6F,KAAK3D,MAAM9D,SAASA,UAErB,KACJ,kBAAC,GAAD,CACEsD,MAAOiC,EAAQ,mBACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,aAGpBvI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJsI,EAAS1E,EAAOoF,YAEhB,EAAKE,SAAS,CAAErJ,aAHZ,+DAKLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,e,GA/CbyE,IAAMoD,W,wbC4BVoB,G,sIA3BH,IAAD,EAIH7B,KAAKF,MAJF,IAELgB,YAAeC,EAFV,EAEUA,GAAIzE,EAFd,EAEcA,OAAQ0E,EAFtB,EAEsBA,SAGvBc,GALC,EAGLb,WAEUvH,KAAKC,OAAOoH,EAAGI,SAAWC,KAAKzG,OAAS,MAC9CmD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,SAAUiC,WAAY,WACnD,kBAAC,UAAD,CAAM7C,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC2D,EAAQ,sBAAD,MAAwBiD,OAAxB,EAAwBA,EAAIgB,OAEtC,kBAAC,KAAD,CACEC,MAAOF,EACPG,SAAU,WACRjB,EAAS1E,EAAOoF,aAElBxE,KAAM,GACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAGtE,EAAQ,WAAYuE,EAAGvE,EAAQ,mB,GArBxCT,IAAMoD,W,0eCuKT6B,G,mLA9JbjG,MAAQ,CACNkG,KAAM,GACNC,MAAO,I,EAwBTD,KAAO,WAEL,OADiB,EAAKlG,MAAdkG,KACIvD,KAAI,SAAChF,EAAM7C,GAAP,OACd,kBAAC,UAAD,CAAMP,IAAG,OAASO,GAChB,kBAAC,UAAD,CAAM6E,MAAO,CAAE+C,WAAY,SAAW/E,EAAK+C,MAD7C,QAEG/C,EAAKiE,QAFR,gB,0DAvBF+B,KAAKyC,Y,gCAGI,IAAD,OACRzK,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiK,GACL,EAAKX,SAAS,CAAEW,YAEjB5J,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAaV,IAAD,SAC4BoH,KAAKF,MAAhCxD,EADD,EACCA,OAAQ2E,EADT,EACSA,WAAYF,EADrB,EACqBA,GADrB,EAGiBf,KAAK3D,MAArBkG,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAER1E,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BwB,EAAUH,EACbvD,KAAI,SAAChF,GAAD,SAAaA,EAAK+C,KAAO/C,EAAKiE,WAClCzH,KAAK,QACR,OACE,kBAAC2F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQlD,UAASsE,OAAO,CAAEC,IAAK,GAAIC,QAAS,QACzD,kBAAC1G,EAAA,QAAD,CACEH,MAAO,CACLP,MAAO,OACPgB,gBAAiB,OACjBqG,YAAa,EACbC,YAAa,QACbvG,cAAe6B,UAASsE,OAAO,CAAEC,IAAK,MAAOC,aAASxK,MAGvDgG,UAASsE,OAAO,CACfC,IACE,kBAACzG,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,WACrC8F,EACC,kBAAC,KAAD,MACG,YAAe,EAAZvL,MACF,OACE,oCACGoL,EAAKvD,KAAI,SAAChF,EAAM7C,GAAP,OACR,kBAAC,UAAD,CACE6E,MAAO,CAAEgB,MAAO,SAChBgG,cAAe,EACfpM,IAAG,OAASO,GAEZ,kBAACoF,EAAA,EAAD,CACET,QAAS,WACPmF,EAAWgC,SAAS,UAAW,CAC7BlG,KAAM/C,EAAK+C,SAIf,kBAAC,UAAD,CAAMf,MAAO,CAAE+C,WAAY,SACxB/E,EAAK+C,OAbZ,QAgBU/C,EAAKiE,QAhBf,mBAuBR,MAIR4E,QACE,kBAAC,KAAD,CACE7G,MAAO,CAAEkH,SAAU,IACnBC,SAA2B,GAAjBT,EAAQtJ,OAClBgK,gBAAc,EACdC,MAAI,EACJC,aAAc,IACdC,kBAAmB,KAEnB,oCACGhB,EAAKvD,KAAI,SAAChF,EAAM7C,GAAP,OACR,kBAAC,WAAD,CAAUP,IAAG,OAASO,GACpB,kBAAC,UAAD,CAAM6E,MAAO,CAAE+C,WAAY,SAAW/E,EAAK+C,MAD7C,QAEU/C,EAAKiE,QAFf,mBASV,kBAAC9B,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KACjC,kBAACiC,GAAA,EAAD,CACExF,MAAOwE,EACPiB,YAAa3F,EAAQ,mBACrB9B,MAAO,CACLS,gBAAiB,UACjByG,SAAU,GACVlG,MAAO,QACPuD,KAAM,EACN9E,MAAO,KAETiI,aAAc,SAAClB,GAAD,OAAW,EAAKZ,SAAS,CAAEY,WACzCmB,gBAAiB,YAAgC,IAAdzE,EAAa,EAA5B0E,YAAe1E,KACjClH,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdzD,QAASiB,MAGV5G,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiK,GACL,EAAKE,UAEe,QAAhBpE,UAASC,IACXuF,SAASC,SAGX,EAAKlC,SAAS,CAAEY,MAAO,QAExB7J,OAAM,SAACC,GACNC,QAAQD,MAAMA,gB,GApJf6H,a,UCKbsD,GAFYvI,IAAW1C,IAAI,UAAzB2C,MAEsB,IAoOfuI,OAlOf,YAA6C,IAAD,EAA1B/C,EAA0B,EAA1BA,WAAY3E,EAAc,EAAdA,OAAQyE,EAAM,EAANA,GAC9BjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEhC+C,GAAkB,EACF,QAAhB5F,UAASC,KACX2F,ECtByB,WAAO,IAAD,EACaxG,oBAAS,GADtB,WAC1BwG,EAD0B,KACTC,EADS,KAEjCvM,qBAAU,WAENwM,IACAC,MAAoB,kBAAMC,OAC1BA,MAED,IAEH,IAAMF,EAAoB,WACxBC,MAAoB,kBAAMC,QAEtBA,EAAc,WAClBD,OAA8B9L,MAAK,SAACgM,GAC9BA,EAAIC,aACNH,OAA2B9L,MAAK,SAACgM,GAC/BJ,GAAmB,UAM3B,OAAOD,EDDaO,IAGpB,IAAMC,EAAY,CAChB3H,YAAa,GACb4H,aAAc,GACd1H,MAAOV,EAAOrC,MAAMgD,eAGhB0H,GAAqC,KAApB,MAAF5D,OAAA,EAAAA,EAAI6D,iBAA6B,MAAF7D,OAAA,EAAAA,EAAI8D,aAAc,IACpE,kBAAC1I,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTF,gBAAiBH,EAAOrC,MAAMyC,UAC9BoC,aAAc,IAGhB,kBAAC,UAAD,CAAM9C,MAAO,CAAEgB,MAAOV,EAAOrC,MAAMgD,gBAChCa,EAAQ,sBAEX,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACL8I,UAAW,GACXtI,cAAe,MACfI,eAAgB,kBAGlB,kBAAC,GAAD,CACEf,MAAOiC,EAAQ,gBACfhC,QAAS,kBAAMmF,EAAWgC,SAAS,kBAErC,kBAAC,GAAD,CACEpH,MAAOiC,EAAQ,wBACfhC,QAAS,kBAAMmF,EAAWgC,SAAS,cAMrC8B,EACJ,kBAAC5I,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,SAChBqI,YAAa,OACbC,aAAc,CACZzJ,MAAO,EACP8F,OAAQ,GAEV4D,cAAe,IACfC,aAAc,KACdC,UAAW,IAGb,kBAAC,UAAD,CAAMrJ,MAAOyI,GAAb,sBACM1D,OADN,EACMA,EAAIhE,KADV,UACiBgE,GADjB,SACiBA,EAAIuE,WADrB,EACiB,EAAUvI,MAE3B,kBAAC,UAAD,CAAMf,MAAOyI,GAAb,sBAA6BrN,EAAY,MAAC2J,OAAD,EAACA,EAAIwE,MAA9C,MACA,kBAAC,UAAD,CAAMvJ,MAAOyI,GAAb,sBAA6BrN,EAAY,MAAC2J,OAAD,EAACA,EAAIyE,MAA9C,MACA,kBAACrJ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,KAAD,CACEO,KAAK,SACLG,KAAM,GACNF,MAAOV,EAAOrC,MAAMgD,cACpBjB,MAAO,CAAEc,YAAa,KAExB,kBAAC,UAAD,CAAMd,MAAOyI,GAAYrN,EAAY,MAAC2J,OAAD,EAACA,EAAI0E,WAE5C,kBAAC,UAAD,CAAMzJ,MAAOyI,GAAb,sBAA4B1D,OAA5B,EAA4BA,EAAI2E,YAChC,kBAAC,UAAD,CAAM1J,MAAOyI,GAAb,sBAA4B1D,OAA5B,EAA4BA,EAAIgB,MAChC,kBAAC,UAAD,CAAM/F,MAAOyI,GAAb,sBAA4B1D,OAA5B,EAA4BA,EAAI4E,OAAhC,KACA,kBAAC,UAAD,CAAM3J,MAAOyI,GAAb,gBACMpJ,GAAO,MAAC0F,OAAD,EAACA,EAAI1G,KAAM,QADxB,WACmC0G,OADnC,EACmCA,EAAIvC,SADvC,MAGA,kBAAC,UAAD,CAAMxC,MAAOyI,GAAb,gBAA4BnJ,GAAW,MAACyF,OAAD,EAACA,EAAI6E,SAAU,SACtD,kBAAC,UAAD,CAAM5J,MAAOyI,EAAW3I,QAAS,kBAAMmF,EAAWgC,SAAS,cAA3D,sBACMlC,OADN,EACMA,EAAI8E,UAIX,MAAC9E,OAAD,EAACA,EAAI6D,gBACJ,kBAACzI,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,EACTF,gBAAiBH,EAAOrC,MAAMyC,UAC9BoC,aAAc,IAGhB,kBAACvC,EAAA,EAAD,CACEP,MAAO,CACLQ,cAAe,MACfI,eAAgB,SAChBiC,WAAY,UAEd/C,QAAS,kBAAMmF,EAAWgC,SAAS,iBAEnC,kBAAC6C,GAAA,EAAD,CACE/I,KAAK,qBACLC,MAAM,MACNhB,MAAO,CAAEc,YAAa,MAExB,kBAAC,UAAD,CACEd,MAAO,CAAEgB,MAAOV,EAAOrC,MAAMgD,cAAe8B,WAAY,SAEvDjB,EAAQ,+BAOfiI,EAAkB9B,GACtB,kBAAC1H,EAAA,EAAD,CACET,QAAS,kBAAMsI,QAAQ4B,eACvBhK,MAAO,CACLW,QAAS,GACTF,gBAAiBH,EAAOrC,MAAMyC,UAC9BoC,aAAc,IAGhB,kBAAC,UAAD,CAAM9C,MAAO,CAAEgB,MAAOV,EAAOrC,MAAMgD,gBAChCa,EAAQ,2BAKTmI,EACJ,kBAAC9J,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRtJ,eAAgB,gBAChBJ,cAAe,QAGe,SAA/ByE,EAAW5E,MAAM8J,UAChB,kBAAC5J,EAAA,EAAD,CACE6J,QAAS,CAAE3H,IAAK,GAAIE,KAAM,GAAIC,MAAO,GAAIF,OAAQ,IACjD5C,QAAS,WACHiI,IAAiC,QAAhB1F,UAASC,GAC5B2C,EAAWoF,SAEXC,OAAOC,QAAQC,SAInB,kBAACV,GAAA,EAAD,CACE/I,KAAK,YACLG,KAAM,GACNF,MAAOV,EAAOrC,MAAMgD,iBAIxB,kBAACd,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,OAKvBkF,EACJ,kBAACtK,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,WAGlB,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,KAAOwK,GAE7B,kBAAC9J,EAAA,QAAD,CAAMH,MAAO,CAAE6C,WAAY,SAAU0B,KAAM,IACzC,kBAACc,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CACLkK,OAAQ,GACRzK,MAAOsI,GAAgB,IAAM,IAC7BxC,OAAQwC,GAAgB,GAAK,QAKnC,kBAAC,UAAD,CAAM/H,MAAO,CAAEgB,MAAO,QAAS8H,UAAW,KAA1C,IACIhP,IAAU4Q,SAASC,SAGtB5C,GACC,kBAACxH,EAAA,EAAD,CACET,QAAS,WACPmF,EAAW2F,gBAEb5K,MAAO,CAAEkK,OAAQ,KAEjB,kBAACW,GAAA,EAAD,CACE9J,KAAK,OACLG,KAAM,GACNF,MAAM,OACNhB,MAAO,CAAEgB,MAAO,WAGlB,MAGL+G,IAAiBgB,EAElB,kBAAC,GAAD,CAAMhE,GAAIA,EAAIzE,OAAQA,EAAQ2E,WAAYA,KAI9C,OACE,kBAAC9E,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,WACZ,QAAhByB,UAASC,GACRmI,EAEA,kBAACtK,EAAA,QAAD,CAAMH,MAAO,CAAES,gBAAiBH,EAAOrC,MAAMyC,YAC1CuJ,EACAF,GAAmBpB,GAAgBI,K,iBE7O1C+B,IAAY,EAEhB,GAAIC,aAAW,CASb,IACIC,GAAqB,EASzB,SAASC,KACPD,GAAqB5F,KAAKzG,MACtBmM,KACFA,IAAY,GAIhBI,SAAS/G,iBAAiB,aAAc8G,IAAc,GACtDC,SAAS/G,iBAAiB,YAAa8G,IAAc,GACrDC,SAAS/G,iBAAiB,aAhB1B,WACM2G,IAAa1F,KAAKzG,MAAQqM,GAJL,MAOzBF,IAAY,MAYsC,GC5BvC,SAASK,GAAT,GAAyD,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,WAAY7J,EAAY,EAAZA,SAAY,EACrCH,IAAMI,UAAS,GADsB,WAC9D6J,EAD8D,KACnDC,EADmD,OAEnClK,IAAMI,UAAS,GAFoB,WAE9D+J,EAF8D,KAEnDC,EAFmD,KAwBrE,IAAMC,EACgB,oBAAblK,EACHA,EAASgK,GAAaF,GACtB9J,EAEN,OAAOH,IAAMsK,aAAatK,IAAMuK,SAASC,KAAKH,GAAQ,CACpDI,aA1BF,SAA0BC,GD4BnBjB,KC3BoBQ,IACnBF,GAAWA,IACfG,GAAW,KAwBbS,aApBF,SAA0BD,GACpBT,IACED,GAAYA,IAChBE,GAAW,KAmBbU,iBAAkB,kBAAMR,GAAa,IACrCS,mBAAoB,kBAAMT,GAAa,IAEvCU,UAlBF,WACEV,GAAa,IAkBbW,WAfF,eAmBFjB,GAAUkB,YAAc,YAExBlB,GAAUmB,UAAY,CACpB9K,SAAU+K,qBAAU,CAACC,QAAMC,aAC3BrB,UAAWoB,QACXnB,WAAYmB,S,iCC/BCE,GAfL,SAAC,GAAkC,IAAhClL,EAA+B,EAA/BA,SAAUmL,EAAqB,EAArBA,KAAS7I,EAAY,4BACpC7F,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAClD,OACE,kBAAC,UAAD,OACM6F,EADN,CAEE9D,MAAO,CACL,CAAEgB,MAAO/C,EAAME,YAAa4E,WAAY4J,EAAO,YAAStQ,GACxDyH,EAAM9D,SAGPwB,I,+aC2GQoL,G,mLAjHbvM,MAAQ,CACNwM,KAAM,I,EAkCRC,WAAa,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAKR+O,GAL0B,EAAZ5R,MAGhB,EAAK2I,MADPgB,YAAexE,OAGD5C,KAAKsP,OAAOhP,EAAKiP,OAAS7H,KAAKzG,OAAS,MAExD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,KAAIxC,EAAK+C,MACT,kBAAC,KAAD,CACEf,MAAO,CAAEkN,WAAY,IACrBlH,MAAO+G,EACPI,WAAY,CAAE1M,gBAAiB,WAC/B2M,cAAe,CAAEpM,MAAO,SACxBiF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,U,EAMlCgH,OAAS,SAAO3O,GAAP,uBAAAjC,EAAAC,OAAA,yDACsB,EAAKoH,MAAMgB,YAAhCxE,EADD,EACCA,OAAQ0E,EADT,EACSA,SADT,WAAAvI,EAAA,MAEoBM,GAAK,SAAU,CACxC0I,MAAOnF,EAAOoF,WACdhH,UAJK,gBAECnC,EAFD,EAECA,SAIR,EAAKqJ,SAAS,CAAErJ,aAChByI,EAAS1E,EAAOoF,YAPT,6D,0DAxDY,IAAD,OAClB1B,KAAKsJ,eADa,MAGWtJ,KAAKF,MAAMgB,YAAhCE,EAHU,EAGVA,SAAU1E,EAHA,EAGAA,OAClB0D,KAAKK,SAAWC,aAAY,WAC1BU,EAAS1E,EAAOoF,YAChB,EAAK4H,iBACJ,Q,6CAIHzQ,QAAQuF,IAAI,uBACZmL,cAAcvJ,KAAKK,Y,mCAGRmJ,GAAQ,IAAD,OAClBxR,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASmQ,EAAT,EAASA,KACb,EAAKjH,SAAS,CAAEiH,SADZ,+DAGLlQ,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAqCV,IAAD,SAIHoH,KAAKF,MAJF,IAELgB,YAAeC,EAFV,EAEUA,GAIXjD,GANC,EAEcxB,OAFd,EAEsB0E,SAFtB,EAGLC,WAGctK,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAE5B3I,EAAayH,KAAK3D,MAAlB9D,SACFuJ,EAAMpI,KAAKC,OAAOoH,EAAGkI,OAAS7H,KAAKzG,OAAS,KAClD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,WAClC,kBAAC,GAAD,KAAIf,EAAQ,oBAEZ,kBAAC,KAAD,CACEkE,MAAOF,EACP5E,KAAM,GACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAGtE,EAAQ,WAAYuE,EAAGvE,EAAQ,cAGlD,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEtBhJ,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,CACEyD,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,qBACfhC,QAAS,kBAAM,EAAKuN,OAAO,cAE7B,kBAAC,GAAD,CACErN,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,kBACfhC,QAAS,kBAAM,EAAKuN,OAAO,WAG7B,kBAACK,GAAA,EAAD,CACEC,KAAM3J,KAAK3D,MAAMwM,KACjBC,WAAY9I,KAAK8I,WACjBc,oBAAqB5J,KAAK6J,oB,GA3GjBxM,IAAMoD,W,iDCYVzE,GAjBD,SAAC/B,GAAD,OACZ6P,KAAWC,OAAO,CAChBC,UAAW,CACThN,MAAO/C,EAAMgD,cACbR,gBAAiBxC,EAAMyC,UACvBC,QAAS,GACTC,eAAgB,SAChBC,kBAAmB,GAEnB4M,eAAgB,IAElBQ,UAAW,CACT1J,KAAM,EACN2F,OAAQ,OC6YCgE,GA3YI,SAAC,GASb,IAAD,IARJpJ,YACEH,EAOE,EAPFA,SACAI,EAME,EANFA,GACAzE,EAKE,EALFA,OACA0E,EAIE,EAJFA,SACU/G,EAGR,EAHFqC,OAAUrC,MAEZgH,EACI,EADJA,WAEMnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAEoBzD,mBAAQ,MAACsD,OAAD,EAACA,EAAIhE,MAFjC,WAEGA,EAFH,KAESoN,EAFT,OAG4B1M,mBAAS,MAHrC,WAGGlF,EAHH,KAGa6R,EAHb,OAIsB3M,mBAAS,IAJ/B,WAIG4M,EAJH,KAIUC,EAJV,OAK4B7M,mBAAS,IALrC,WAKG8M,EALH,KAKaC,EALb,OAMsB/M,mBAAS,MAN/B,WAMG7E,EANH,KAMU6R,EANV,OAO0BhN,mBAAS,MAPnC,WAOGiN,EAPH,KAOYC,EAPZ,OAQsBlN,mBAAS,IAR/B,WAQGmN,EARH,KAQUC,EARV,OASoBpN,mBAAS,MAT7B,WASGqN,EATH,KASSC,EATT,OAUoBtN,mBAAS,IAV7B,WAUGuN,EAVH,KAUSC,GAVT,KAWEC,GAAa,8BAAAzS,EAAAC,OAAA,kEAAAD,EAAA,MACmBM,GAAK,aAAc,CACrD2I,WAAYpF,EAAOoF,WACnB3E,UAHe,uBACTxE,EADS,EACTA,SAAUmS,EADD,EACCA,QAIlBN,EAAY7R,GALK,kBAOVmS,GAPU,6DAUbS,GAAQ,kBAAMxK,EAAS,CAAEjG,KAAM,aAAcsD,OAAO,KAC1DrG,qBAAU,WACRwS,EAAO,MAACpJ,OAAD,EAACA,EAAIhE,QACX,OAACgE,OAAD,EAACA,EAAIhE,OAiUR,OACE,kBAACZ,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPnC,gBAAiB,kBACjBG,eAAgB,SAChBiC,WAAY,WAGd,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiBxC,EAAMmR,QACvBtM,aAAc,GACdnC,QAAS,KAGX,kBAACJ,EAAA,EAAD,CACET,QAAkB,OAATgP,EAAgB,kBAAMC,EAAQ,OAAQI,GAC/CnP,MAAO,CAAEqP,UAAW,aAEpB,kBAACC,GAAA,EAAD,CAAQvO,KAAK,QAAQC,MAAO/C,EAAME,YAAa+C,KAAM,MAGrD6D,EAA6B,KAAxB,kBAACwK,GAAA,EAAD,MAEG,cAATT,EAlQL,kBAAC3O,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRvJ,QAAS,GACTmC,aAAc,KAGflG,EAAQ,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUpE,GAAgB,KAExD8R,EACC,kBAAC,UAAD,CAAM1O,MAAO,CAAEgB,MAAO,UAAY0N,GAElC,kBAACvO,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,UAExC,kBAAC0F,GAAA,EAAD,CACEC,YAAa3F,EAAQ,SACrB0N,qBAAsBvR,EAAMwR,kBAC5B/H,aAAc4G,EACdtM,MAAOqM,EACPrO,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,aAExC,kBAAC0F,GAAA,EAAD,CACEkI,iBAAe,EACfhI,aAAc8G,EACdxM,MAAOuM,EACPvO,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAOA,EACP4B,MAAOiC,EAAQ,SACfhC,QAAS,WApHrB9D,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEiS,QAAOE,SAAUoB,KAAIC,QAAQrB,OAEnDjS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOuT,GAAP,SAAApT,EAAAC,OAAA,uDACAmT,EAAajT,MACf6R,EAASoB,EAAajT,QAGtB+H,EAAS,CAAEjG,KAAM,kBAAmBsD,MAAO6N,EAAanK,aACxDV,EAAS6K,EAAanK,YACtB+I,EAAS,MACTE,EAAWkB,EAAanB,SAEJ,QAAhBrM,UAASC,GACXuF,SAASC,SAETM,QAAQ4B,eAbR,kBAiBG6F,GAjBH,+DAmBLlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,UA2FV,kBAACuD,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTqI,SAAU,OACVpI,eAAgB,kBAGlB,kBAACL,EAAA,EAAD,CACET,QAAS,WACPqP,KAEAlK,EAAWgC,SAAS,iBAGtB,kBAAC,UAAD,CACEjH,MAAO,CACLkK,OAAQ,GACRhD,SAAU,GACV4I,mBAAoB,cAGrBhO,EAAQ,cAIb,kBAACvB,EAAA,EAAD,CACET,QAAS,WACPqP,KACAlK,EAAWgC,SAAS,oBAGtB,kBAAC,UAAD,CACEjH,MAAO,CACLkK,OAAQ,GACRhD,SAAU,GACV4I,mBAAoB,cAGrBhO,EAAQ,wBA8JN,UAATgN,EAnHR,kBAAC3O,EAAA,QAAD,KACG5D,GAAY,kBAAC,GAAD,KAAIA,GAEjB,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,gBACxC,kBAAC0F,GAAA,EAAD,CACEC,YAAY,MACZ+H,qBAAsBvR,EAAMwR,kBAC5B/H,aAAcmH,EACd7M,MAAO4M,EACP5O,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAOA,EACP4B,MAAOiC,EAAQ,QACfhC,QAAS,WAvMf9D,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEwS,QAAOnJ,MAAOnF,EAAOoF,eAE3CpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GAML,OALAzB,EAAYyB,EAAatT,UAErBsT,EAAanB,SACfK,EAAQ,QAEHc,KAERlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,WA2QD,SAATkS,EAtJR,kBAAC3O,EAAA,QAAD,KACG5D,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB2D,EAAQ,SAEpD,kBAAC0F,GAAA,EAAD,CACEC,YAAY,SACZ+H,qBAAsBvR,EAAMwR,kBAC5B/H,aAAcuH,GACdjN,MAAOgN,EACPhP,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CAAQN,MAAOiC,EAAQ,YAAahC,QAAS,WArOjD9D,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnB4S,OACAJ,YAGDtS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GAYL,OAXAzB,EAAYyB,EAAatT,UAErBsT,EAAanB,UACf/J,EAAS,CAAEjG,KAAM,kBAAmBsD,MAAO6N,EAAapK,QAEpC,QAAhBpD,UAASC,GACXuF,SAASC,SAETM,QAAQ4B,eAGL6F,KAERlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,WAoPlB,kBAACuD,EAAA,QAAD,KAEG5D,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,KAAIf,EAAQ,WACZ,kBAAC0F,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO,CAACA,GAAM/B,GAAO+P,UAAW,CAAEd,WAAY,KAC9CzF,YAAa3F,EAAQ,QACrBE,MAAOjB,EACP2G,aAAcyG,KAGlB,kBAAC,GAAD,CACEnO,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,YACfhC,QAAS,oBAAArD,EAAAC,OAAA,mDACFqI,EADE,uBAELqJ,EAAYtM,EAAQ,oBAFf,6BAKHf,KAAI,MAAKgE,OAAL,EAAKA,EAAIhE,MALV,mCAAAtE,EAAA,MAMiByS,MANjB,gBAQHlK,EAAS1E,EAAOoF,YAEhByJ,MAVG,wBAaLA,KAbK,gEAkBX,kBAAC,GAAD,CACEnP,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,kBACfhC,QAAS,kBAAMiP,EAAQ,gBAGzB,kBAAC,GAAD,CACE/O,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,kBACfhC,QAAS,kBAAMiP,EAAQ,gB,+cC7VxB,IAAMgB,GAAb,iCAIE,WAAYjM,GAAoC,IAAD,sBAC7C,cAAMA,IA8CRkM,iBAAmB,SAACjE,GAElB,IACM5E,EAAW4E,GAAKA,EAAE5E,SAAW4E,EAAE5E,SAAW,IAG9B,YAAhB9E,UAASC,IACT2N,KAAUC,eACVD,KAAUC,cAAgB,IAEZD,KAAUC,cAMtB,EAAKpM,MAAMqM,oBACb,EAAKrM,MAAMqM,mBAAmBhJ,GAGhC,IAAMiJ,EACJrE,EAAEsE,eAAe9K,QAGhB,EAAKzB,MAAMwM,QAAU,IfoDH,WACvB,IAAMC,EAAM/Q,IAAW1C,IAAI,UAE3B,MAEkB,QAAhBuF,UAASC,KAbS,SAACiO,GACrB,OAAqB,KAAdA,EAAIhL,QAA8B,KAAbgL,EAAI9Q,MAc7B+Q,CAAcD,IAXI,SAACA,GACtB,OAAqB,KAAdA,EAAIhL,QAA8B,KAAbgL,EAAI9Q,MAUPgR,CAAeF,Ie1DnCG,GAvB+B,GAuBW,GAE7CC,KAASC,OAAO,EAAKvQ,MAAMkF,OAAQ,CACjC4B,WACA0J,OAAQC,KAAOC,KACfX,UACAY,iBAAiB,IAChBC,SA/E0C,EAkF/CC,iBAAmB,SAACnF,GAClB,IAAM5E,EAAW4E,GAAKA,EAAE5E,SAAW4E,EAAE5E,SAAW,IAC5C,EAAKrD,MAAMqN,oBACb,EAAKrN,MAAMqN,mBAAmBhK,GAEhCwJ,KAASC,OAAO,EAAKvQ,MAAMkF,OAAQ,CACjC4B,WACA0J,OAAQC,KAAOC,KACfX,QAAS,EACTY,iBAAiB,IAChBC,SA1FH,EAAK5Q,MAAQ,CACXkF,OAAQ,IAAIoL,KAASS,MAAM,IAHgB,EAJjD,wDAYIpN,KAAKqN,kBAZT,6CAgBIrN,KAAKsN,oBAhBT,sCAoBwB,QAAhBjP,UAASC,IACX0B,KAAKuN,yBAA2BC,KAASC,YACvC,mBACAzN,KAAKgM,kBAEPhM,KAAK0N,yBAA2BF,KAASC,YACvC,mBACAzN,KAAKkN,oBAGPlN,KAAK2N,wBAA0BH,KAASC,YACtC,kBACAzN,KAAKgM,kBAEPhM,KAAK4N,wBAA0BJ,KAASC,YACtC,kBACAzN,KAAKkN,qBApCb,wCA0CwB,QAAhB7O,UAASC,IACX0B,KAAKuN,yBAAyBM,SAC9B7N,KAAK0N,yBAAyBG,WAE9B7N,KAAK2N,wBAAwBE,SAC7B7N,KAAK4N,wBAAwBC,YA/CnC,+BAoGI,OAAO,gBAAClB,GAAA,EAASxQ,KAAV,CAAeH,MAAO,CAAEuF,OAAQvB,KAAK3D,MAAMkF,cApGtD,GAA2ClE,aCd9ByQ,GAAW,SAAC/M,EAAI9G,GAC3B,IAAM8T,EAAkBrU,KAAKsU,OACxB,MAAFjN,OAAA,EAAAA,EAAIkN,cAAe,IAAQ7M,KAAKzG,OAAS,KAGtCuT,EAAexU,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAIoN,SAAU,IAAQ/M,KAAKzG,OAAS,KAC9DyT,EAAgB1U,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAIsN,UAAWjN,KAAKzG,OAAS,KAExD2T,EAAgB5U,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAIwN,UAAW,KAASnN,KAAKzG,OAAS,KAEjE6T,EAAa9U,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAI0N,OAAQ,IAAQrN,KAAKzG,OAAS,KAC1D+T,EAAYhV,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAI4N,MAAO,KAASvN,KAAKzG,OAAS,KAEzDiU,EAAalV,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAI8N,QAAJ,MAAY9N,OAAZ,EAAYA,EAAI+N,SAAU1N,KAAKzG,OAAS,KAChEoU,EAAcrV,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAIiO,QAAS,KAAS5N,KAAKzG,OAAS,KAC7DsU,EAAiBvV,KAAKsU,OACvB,MAAFjN,OAAA,EAAAA,EAAImO,WAAY,KAAS9N,KAAKzG,OAAS,KAEpCwU,EAAgBzV,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAIqO,UAAW,KAAShO,KAAKzG,OAAS,KACjE0U,EAAc3V,KAAKsU,OAAQ,MAAFjN,OAAA,EAAAA,EAAIuO,QAASlO,KAAKzG,OAAS,KAEpDmD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,MAAO,CACL,CACEqO,OAAQ,CACNC,UAAU,EACVtQ,KAAMpB,EAAQ,gBAGhB2R,QAAS,CACP,CACEC,SAAU,cACV/T,KAAM,MACNuD,KAAMpB,EAAQ,gBACd6R,GAAI,WACJC,UACE7B,EAAkB,EAChB,kBAAC,KAAD,CACE/R,MAAO,CAAEkN,WAAY,IACrBlH,MAAO+L,EACP5E,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEqN,SAAU,WACV/T,KAAM,UACNuD,KAAMpB,EAAQ,cACd6R,GAAI,SACJC,UACE1B,EAAe,EACb,kBAAC,KAAD,CACElS,MAAO,CAAEkN,WAAY,IACrBlH,MAAOkM,EACP/E,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAER,CACEqN,SAAU,yBACV/T,KAAM,SACNuD,KAAMpB,EAAQ,YACd6R,GAAI,OACJC,UACEtB,EAAgB,EACd,kBAAC,KAAD,CACEtS,MAAO,CAAEkN,WAAY,IACrBlH,MAAOsM,EACPnF,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAER,CACEqN,SAAU,yBACV/T,KAAM,SACNuD,KAAMpB,EAAQ,WACd6R,GAAI,MACJC,UACEpB,EAAa,EACX,kBAAC,KAAD,CACExS,MAAO,CAAEkN,WAAY,IACrBlH,MAAOwM,EACPrF,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAER,CACEqN,SAAU,WACV/T,KAAM,UACNuD,KAAMpB,EAAQ,UACd6R,GAAI,iBACJC,UACElB,EAAY,EACV,kBAAC,KAAD,CACE1S,MAAO,CAAEkN,WAAY,IACrBlH,MAAO0M,EACPvF,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAER,CACEqN,SAAU,YACV/T,KAAM,cAENuD,KAAMpB,EAAQ,WACd6R,GAAI,MACJC,UACEhB,EAAa,EACX,kBAAC,KAAD,CACE5S,MAAO,CAAEkN,WAAY,IACrBlH,MAAO4M,EACPzF,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEqN,SAAU,yBACV/T,KAAM,OAENuD,KAAMpB,EAAQ,YACd6R,GAAI,OACJC,UACEb,EAAc,EACZ,kBAAC,KAAD,CACE/S,MAAO,CAAEkN,WAAY,IACrBlH,MAAO+M,EACP5F,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEqN,SAAU,gBACV/T,KAAM,SAENuD,KAAMpB,EAAQ,eACd6R,GAAI,UACJC,UACEX,EAAiB,EACf,kBAAC,KAAD,CACEjT,MAAO,CAAEkN,WAAY,IACrBlH,MAAOiN,EACP9F,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEqN,SAAU,cACV/T,KAAM,SAENuD,KAAMpB,EAAQ,mBACd6R,GAAI,SACJC,UACET,EAAgB,EACd,kBAAC,KAAD,CACEnT,MAAO,CAAEkN,WAAY,IACrBlH,MAAOmN,EACPhG,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,OAGN,MAAFtB,OAAA,EAAAA,EAAI8O,OAAQ,GAAK,CACfH,SAAU,YACV/T,KAAM,OACNuD,KAAMpB,EAAQ,YACd6R,GAAI,OACJC,UACEP,EAAc,EACZ,kBAAC,KAAD,CACErT,MAAO,CAAEkN,WAAY,IACrBlH,MAAOqN,EACPlG,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEqN,SAAU,cACV/T,KAAM,OAENuD,KAAMpB,EAAQ,WAAD,MAAaiD,OAAb,EAAaA,EAAI8H,MAC9B8G,GAAI,SAENG,QAAO,SAACzY,GAAD,QAASA,MAGpB,CACEkY,OAAQ,CACNC,UAAU,EACVtQ,KAAMpB,EAAQ,gBAGhB2R,QAAS,CACP,CACEC,SAAU,cACV/T,KAAM,OACNuD,KAAMpB,EAAQ,YACd6R,GAAI,aAGJ,MAAF5O,OAAA,EAAAA,EAAI8O,OAAQ,GAAK,CACfH,SAAU,cACV/T,KAAM,OACNuD,KAAMpB,EAAQ,cACd6R,GAAI,UAGN,CACED,SAAU,yBACV/T,KAAM,SACNuD,KAAMpB,EAAQ,qBACd6R,GAAI,iBAGN,CACED,SAAU,cACV/T,KAAM,OACNuD,KAAMpB,EAAQ,YACd6R,GAAI,QAGN,CACED,SAAU,eACV/T,KAAM,OACNuD,KAAMpB,EAAQ,cACd6R,GAAI,UAGN,CACED,SAAU,yBACV/T,KAAM,YACNuD,KAAMpB,EAAQ,cACd6R,GAAI,SACJC,UACExB,EAAgB,EACd,kBAAC,KAAD,CACEpS,MAAO,CAAEkN,WAAY,IACrBlH,MAAOoM,EACPjF,WAAY,CAAE1M,gBAAiBxC,EAAMyC,WACrC0M,cAAe,CAAEpM,MAAO/C,EAAMgD,eAC9BgF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEqN,SAAU,eACV/T,KAAM,WACNuD,KAAMpB,EAAQ,gBACd6R,GAAI,YAGN,CACED,SAAU,SACV/T,KAAM,OACNuD,KAAMpB,EAAQ,YACd6R,GAAI,QAGN,CACED,SAAU,WACV/T,KAAM,UACNuD,KAAMpB,EAAQ,cACd6R,GAAI,UAEN,CACED,SAAU,gBACV/T,KAAM,iBACNuD,KAAMpB,EAAQ,gBACd6R,GAAI,YAEN,CACED,SAAU,yBACV/T,KAAM,UACNuD,KAAMpB,EAAQ,kBACd6R,GAAI,cAGN,CACED,SAAU,cACV/T,KAAM,QACNuD,KAAMpB,EAAQ,eACd6R,GAAI,YAENG,QAAO,SAACzY,GAAD,QAASA,QAKlB0Y,GAAY,SAAChP,GACjB,IAAMjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B8O,GACF,MAAFjP,OAAA,EAAAA,EAAI8O,OAAQ,EACR,CACE,CACEH,SAAU,SACV/T,KAAM,MACNuD,KAAMpB,EAAQ,iBACd6R,GAAI,kBAGN,CACED,SAAU,SACV/T,KAAM,MACNuD,KAAMpB,EAAQ,eACd6R,GAAI,WAGN,CACED,SAAU,SACV/T,KAAM,MACNuD,KAAMpB,EAAQ,cACd6R,GAAI,WAGR,GAEAM,GACF,MAAFlP,OAAA,EAAAA,EAAI8O,QAAS,GACT,CACE,CACEH,SAAU,cACV/T,KAAM,OACNuD,KAAMpB,EAAQ,kBACd6R,GAAI,eAGR,GAEN,OACI,MAAF5O,OAAA,EAAAA,EAAI8O,OAAQ,GAAK,CACfN,OAAQ,CACNC,UAAU,EACVtQ,KAAMpB,EAAQ,qBAEhB2R,QAAQ,GAAD,OAAMO,EAAYC,KAKlBC,GAAY,SAACnP,EAAI9G,GAAW,IAAD,MAChC6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BiP,GACF,MAAFpP,OAAA,EAAAA,EAAI8O,OAAQ,EACR,CACEN,OAAQ,CACNC,UAAU,EACVtQ,MAAQ,MAAF6B,GAAA,SAAAA,EAAIuE,WAAJ,IAAUvI,OAAQe,EAAQ,cAChCsS,OAAS,MAAFrP,GAAA,SAAAA,EAAIuE,WAAJ,IAAU+K,WACbva,EAAUC,aAAV,MAAwBgL,GAAxB,SAAwBA,EAAIuE,WAA5B,EAAwB,EAAU+K,WAClC,MAENZ,QAAS,GACP,MAAC1O,OAAD,EAACA,EAAIuP,SAAU,CACbZ,SAAU,WACV/T,KAAM,aACNuD,KAAMpB,EAAQ,kBACd6R,GAAI,cAEN,CACED,SAAU,WACV/T,KAAM,aACNuD,KAAMpB,EAAQ,aACd6R,GAAI,UAGJ,MAAF5O,OAAA,EAAAA,EAAIuP,SAAU,CACZZ,SAAU,WACV/T,KAAM,aACNuD,KAAMpB,EAAQ,oBACd6R,GAAI,iBAGJ,MAAF5O,OAAA,EAAAA,EAAIuP,SAAU,CACZZ,SAAU,WACV/T,KAAM,aACNuD,KAAMpB,EAAQ,gBACd6R,GAAI,aAGJ,MAAF5O,OAAA,EAAAA,EAAIuP,SAAU,CACZZ,SAAU,WACV/T,KAAM,aACNuD,KAAMpB,EAAQ,wBACd6R,GAAI,qBAQNG,QAAO,SAACzY,GAAD,QAASA,MAEpB,KAEN,MAAO,CACL,CACEkY,OAAQ,CACNC,UAAU,EACVtQ,KAAI,MAAE6B,OAAF,EAAEA,EAAIhE,KACVqT,OAAS,MAAFrP,OAAA,EAAAA,EAAIsP,WAAYva,EAAUC,aAAV,MAAwBgL,OAAxB,EAAwBA,EAAIsP,WAAY,MAGjEZ,QAAS,CACP,CACEc,SAAS,EACTb,SAAU,eACV/T,KAAM,QACNuD,KAAMpB,EAAQ,WAAY1G,EAAY,MAAC2J,OAAD,EAACA,EAAIwE,OAC3CoK,GAAI,YAGN,CACEY,SAAS,EAETb,SAAU,cACV/T,KAAM,QAENuD,KAAMpB,EAAQ,gBAAiB1G,EAAY,MAAC2J,OAAD,EAACA,EAAIyE,OAChDmK,GAAI,YAEN,CACEY,SAAS,EAETb,SAAU,yBACV/T,KAAM,SAENuD,KAAMpB,EAAQ,cAAe1G,EAAY,MAAC2J,OAAD,EAACA,EAAI0E,UAC9CkK,GAAI,QAEN,CACEY,SAAS,EAETb,SAAU,kBACV/T,KAAM,QACNuD,KAAMpB,EAAQ,WAAYzC,GAAO,MAAC0F,OAAD,EAACA,EAAI1G,KAAM,SAC5CsV,GAAI,UAEN,CACEY,SAAS,EAETb,SAAU,YACV/T,KAAM,QAENuD,KAAMpB,EAAQ,aAAD,MAAeiD,OAAf,EAAeA,EAAI4E,QAChCgK,GAAI,YAEN,CACEY,SAAS,EAETb,SAAU,WACV/T,KAAM,eAENuD,KAAMpB,EAAQ,WAAD,MAAaiD,OAAb,EAAaA,EAAIgB,MAC9B4N,GAAI,WAGN,CACED,SAAU,WACV/T,KAAM,kBACNuD,KAAMpB,EAAQ,eAAD,MAAiBiD,OAAjB,EAAiBA,EAAI8E,OAClC8J,GAAI,cAKV,CACEJ,OAAQ,CACNC,UAAU,EACVtQ,KAAMpB,EAAQ,kBAEhB2R,QAAS,CACP,CACEC,SAAU,WACV/T,KAAM,aAENuD,KAAMpB,EAAQ,cAAD,MAAgBiD,OAAhB,EAAgBA,EAAIyP,QACjCb,GAAI,WAGN,CACED,SAAU,YACV/T,KAAM,OACNuD,KAAMpB,EAAQ,aACd6R,GAAI,SAGN,CACED,SAAU,YACV/T,KAAM,OACNuD,KAAMpB,EAAQ,iBACd6R,GAAI,aAGN,CACED,SAAU,YACV/T,KAAM,OACNuD,KAAMpB,EAAQ,cACd6R,GAAI,YAKVQ,EAEA,CACEZ,OAAQ,CACNC,UAAU,EACVtQ,KAAMpB,EAAQ,kBAEhB2R,QAAS,CACP,CACEC,SAAU,WACV/T,KAAM,kBACNuD,KAAMpB,EAAQ,YACd6R,GAAI,QAGN,CACED,SAAU,cACV/T,KAAM,SAENuD,KAAMpB,EAAQ,aACd6R,GAAI,SAGN,CACED,SAAU,kBACV/T,KAAM,WAENuD,KAAMpB,EAAQ,gBACd6R,GAAI,YAGN,CACED,SAAU,SACV/T,KAAM,mBAENuD,KAAMpB,EAAQ,YACd6R,GAAI,QAGN,CACED,SAAU,cACV/T,KAAM,OACNuD,KAAMpB,EAAQ,WACd6R,GAAI,SAKVI,GAAUhP,IACV+O,QAAO,SAACzY,GAAD,QAASA,M,UClcLoZ,IAzJGjV,IAAW1C,IAAI,UAAzB2C,MAGW,SAAC,GAQb,IAPLwF,EAOI,EAPJA,WAOI,IANJH,YACEC,EAKE,EALFA,GACAzE,EAIE,EAJFA,OACA0E,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAGkCzD,mBAAQ,MAACsD,OAAD,EAACA,EAAI2P,YAH/C,WAGGC,EAHH,KAGgBC,EAHhB,OAIkCnT,mBAAQ,MAACsD,OAAD,EAACA,EAAI8P,aAJ/C,WAIGA,EAJH,KAIgBC,EAJhB,OAKkCrT,mBAAQ,MAACsD,OAAD,EAACA,EAAIgQ,aAL/C,WAKGA,EALH,KAKgBC,EALhB,OAMkCvT,mBAAQ,MAACsD,OAAD,EAACA,EAAIkQ,aAN/C,WAMGA,EANH,KAMgBC,EANhB,OAO4BzT,mBAAS,MAPrC,WAOGlF,EAPH,KAOa6R,EAPb,KASE+G,EAAS,SAACC,GAGdpZ,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsY,WAAYC,EACZE,cACAE,cACAE,cACAvP,WAAYpF,EAAOoF,eAGpBpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACP6R,EAAY7R,GACZyI,EAAS1E,EAAOoF,eAEjB/I,OAAM,SAACC,GACNC,QAAQuF,IAAI,eAAgBxF,GAC5BgF,MAAME,EAAQ,2BAqBpBnG,qBAAU,WAAO,IAAD,EACR+Y,EAAU,SAAGzP,EAAW5E,MAAMgV,aAApB,EAAG,EAAyBX,WACxCA,GACFS,MAED,IAEH,IAAM9W,EAAOgB,GAAO,MAAC0F,OAAD,EAACA,EAAI1G,KAAM,UACzBiX,EAAG,2DAAuDvQ,OAAvD,EAAuDA,EAAIhE,MACpE,OACE,kBAACwU,EAAA,EAAD,CACEvV,MAAO,CACLuE,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEwV,SAAU,IAAKtL,OAAQ,KACpC,kBAAC,GAAD,KAAIpI,EAAQ,mBAEZ,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAE0I,aAAc,KAC3B,kBAAC,GAAD,KAAI5G,EAAQ,uBACZ,kBAAC0F,GAAA,EAAD,CACExF,MAAOsT,EACPG,QAAS,WACPC,KAAUC,UAAUL,GACpBlH,EAAYtM,EAAQ,uBAEtB9B,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC,GAAD,CAAGrB,MAAI,GAAE7K,EAAQ,2BACd,MAAFiD,OAAA,EAAAA,EAAI6Q,YAAYxY,QAAS,EAAzB,MACC2H,OADD,EACCA,EAAI6Q,YAAY5S,KAAI,SAAC0R,GACnB,OAlDQ9Z,EAkDQ8Z,EAAW3T,KAlDdiB,EAkDoB3C,GAAQqV,EAAWrW,KAAM,QAhDhE,kBAAC8B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,IAZO,IAACpH,EAAKoH,KAqDf,kBAAC,GAAD,KAAIF,EAAQ,oBAGd,kBAAC,GAAD,CAAG6K,MAAI,EAAC3M,MAAO,CAAE8I,UAAW,KACzBhH,EAAQ,+BAEX,kBAAC,GAAD,KAAIvF,GAEJ,kBAACiL,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO6V,GAAO5X,GAAO+P,UACrBhM,MAAO2S,EACPjN,aAAckN,EACdnN,YAAa3F,EAAQ,aAAc,KAGpCzD,GAAQ,GACP,kBAACmJ,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO6V,GAAO5X,GAAO+P,UACrBhM,MAAO6S,EACPnN,aAAcoN,EACdrN,YAAa3F,EAAQ,aAAc,KAEnC,KAEHzD,GAAQ,GACP,oCACE,kBAACmJ,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO6V,GAAO5X,GAAO+P,UACrBhM,MAAO+S,EACPrN,aAAcsN,EACdvN,YAAa3F,EAAQ,aAAc,KAGrC,kBAAC0F,GAAA,EAAD,CACExH,MAAO6V,GAAO5X,GAAO+P,UACrBhM,MAAOiT,EACPzF,qBAAsBvR,EAAMwR,kBAC5B/H,aAAcwN,EACdzN,YAAa3F,EAAQ,aAAc,MAGrC,KAEJ,kBAAC,GAAD,CAAQjC,MAAOiC,EAAQ,QAAShC,QAASqV,Q,+aC9ElCW,G,mLA1EbzV,MAAQ,CACN9D,SAAU,KACVwZ,QAAS,KACT9T,QAAS,M,EAmCX+T,YAAc,WAAO,IACX1V,EAAW,EAAKwD,MAAMgB,YAAtBxE,OADU,EAEW,EAAKD,MAA1B4B,EAFU,EAEVA,QAAS8T,EAFC,EAEDA,QACjB/Z,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdzD,UACA8T,cAGDzZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKqJ,SAAS,CAAErJ,gBAEjBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,mDArDN,IAAD,SAGPoH,KAAKF,MADPgB,YAAexE,EAFN,EAEMA,OAAQyE,EAFd,EAEcA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACG6D,KAAK3D,MAAM9D,SAAW,kBAAC,GAAD,KAAIyH,KAAK3D,MAAM9D,SAASA,UAAgB,KAC/D,kBAACiL,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO+P,UAC3BwB,qBAAsBlP,EAAOrC,MAAMwR,kBACnChI,YAAa3F,EAAQ,WACrBE,MAAOgC,KAAK3D,MAAM0V,QAClBrO,aAAc,SAACqO,GAAD,OAAa,EAAKnQ,SAAS,CAAEmQ,eAE7C,kBAACvO,GAAA,EAAD,CACEgI,qBAAsBlP,EAAOrC,MAAMwR,kBACnCzP,MAAOA,GAAMM,EAAOrC,OAAO+P,UAC3BvG,YAAa3F,EAAQ,WACrBE,MAAOgC,KAAK3D,MAAM4B,QAClByF,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAE7C,kBAAC,GAAD,CACEjC,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,QACfhC,QAASkE,KAAKgS,iB,+BA8BZ,IAAD,EAIHhS,KAAKF,MADQiB,GAHV,EAELE,WAFK,EAGLH,YAAeC,IAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OAAOH,EAAG8O,MAAQ,GAAK,kBAAC,GAAD,KAAI/R,EAAQ,aAAmBkC,KAAKiS,iB,GAvE1CxR,aCgFNyR,GApFQ,SAAC,GAOlB,EANJjR,WAMI,EALJH,YAKK,IAAD,IAJJA,YACEC,EAGE,EAHFA,GAGE,IAFFzE,OAAiBoF,GAEf,EAFQzH,MAER,EAFeyH,YAGb5D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAGkBzD,mBAAS,IAH3B,WAGG0U,EAHH,KAGQC,EAHR,OAIgB3U,mBAAS,MAJzB,WAIG4U,EAJH,KAIOC,EAJP,OAKoB7U,mBAAS,MAL7B,WAKG8U,EALH,KAKSC,EALT,OAM0B/U,mBAAS,MANnC,WAMGgV,EANH,KAMYC,EANZ,OAO8BjV,mBAAS,MAPvC,WAOGkV,EAPH,KAOcC,EAPd,KA2BJ,OAlBApb,IAAO,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACiBK,GAAI,mBAAmB4I,IADxC,gBACGyQ,EADH,EACGA,IACRC,EAAOD,GAFF,+DAKPxa,qBAAU,YACW,yBAAAc,EAAAC,OAAA,kEAAAD,EAAA,MAC0BK,GAAI,uBACtB4I,EADqB,WACA2Q,IAF7B,gBACTE,EADS,EACTA,KAAME,EADG,EACHA,QAASE,EADN,EACMA,UAGvBH,EAAQD,GACRG,EAAWD,GACXG,EAAaD,GANI,4DASnBE,KACC,CAACR,IAGF,kBAACd,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,MAClC,MAAFoE,OAAA,EAAAA,EAAI8O,OAAQ,EACX,kBAAC,GAAD,KAAI/R,EAAQ,aAEZ,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAClB8R,GAAME,GAAQE,GAAWE,EACxB,kBAACxW,EAAA,QAAD,KACE,kBAACI,EAAA,EAAD,CAAkBT,QAAS,kBAAMwW,EAAM,QACrC,kBAAC,GAAD,CAAG3J,MAAI,EAAC3M,MAAO,CAAE0I,aAAc,KAC5B5G,EAAQ,UAIb,kBAAC,GAAD,KACGA,EAAQ,QADX,KACsByU,EAAKxV,MAG3B,kBAAC,GAAD,KACGe,EAAQ,WADX,KACyB2U,EAAQrZ,QAEjC,kBAAC,GAAD,KACG0E,EAAQ,aADX,KAC2B6U,EAAUvZ,SAIvC+Y,EAAInT,KAAI,SAAC8T,EAAI3b,GACX,IAAM4b,EAAWZ,EAAIhb,EAAQ,GAE7B,OACE,kBAACgF,EAAA,QAAD,CAAMvF,IAAG,KAAOO,IACL,MAAR4b,OAAA,EAAAA,EAAUD,MAAOA,EAAGA,GAAK,KACxB,kBAAC,GAAD,CAAGnK,MAAI,EAAC3M,MAAO,CAAE8I,UAAW,KACzBgO,EAAGA,IAGR,kBAACvW,EAAA,EAAD,CAAkBT,QAAS,kBAAMwW,EAAMQ,EAAGT,MACxC,kBAAC,GAAD,KAAIS,EAAG/V,YAQrB,kBAACZ,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,+aC5EvByR,G,mLACJ3W,MAAQ,CACN9D,SAAU,M,EAEZ0a,aAAe,WAAO,IAAD,EACI,EAAKnT,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GACR4O,EAAO,EAAKtT,MAAZsT,GAEF7R,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC,GAAD,CACElF,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,OACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdiO,SAGDrX,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,U,EAO1Bsa,gBAAkB,WAEhB,IAAM/U,EAAU,CACd,QACA,YACA,SACA,SACA,SACA,OACA,SACA,SACA,WACA,OACA,WACA,gBACA,aAEF,EAAK2B,MAAMqT,2BACT,CACEhV,YAIF,SAACiV,GACC,EAAKxR,SAAS,CAAE+N,GAAIxR,EAAQiV,S,mDAKpB,IAAD,EACLtV,EAAUnH,EAAe,SAACqJ,KAAKF,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAC3D,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACEN,MAAOmE,KAAK3D,MAAMsT,GAAK3P,KAAK3D,MAAMsT,GAAK7R,EAAQ,cAC/ChC,QAASkE,KAAKkT,kBAGflT,KAAKiT,kB,+BAIF,IAAD,EAOHjT,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aAEY7G,GALP,EAIH8G,GAJG,EAKHzE,OAAUrC,OAGN1B,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,WAClC,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAIzK,MAAO,MAC/BlD,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KAEHyH,KAAKiS,mB,GApGMxR,aA2GP4S,gCAAmBL,IC3EnBM,GAlCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACRtZ,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAElD,OACE,kBAACkC,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,iBAGjB2W,EAAKvU,KAAI,SAACwU,GACT,OACE,kBAACjX,EAAA,EAAD,CACEP,MAAO,CACLuE,KAAM,EACNgB,OAAQ,GACR9E,gBAAiB+W,EAAIC,SACdxZ,EAAMyC,UADI,KAEbzC,EAAMyC,UACVgX,iBAAkB,EAClBC,iBAAkB,QAClB9U,WAAY,SACZjC,eAAgB,UAElBd,QAAS0X,EAAI1X,SAEb,kBAAC,GAAD,KAAI0X,EAAI3X,a,+aCjBd+X,G,mLACJvX,MAAQ,CACN9D,SAAU,M,EAGZsb,QAAU,SAAOA,GAAP,iBAAApb,EAAAC,OAAA,uDACA4D,EAAW,EAAKwD,MAAMgB,YAAtBxE,OADA,WAAA7D,EAAA,MAGeM,GAAK,OAAQ,CAClC0I,MAAOnF,EAAOoF,WACdoS,OAAQ,EAAKzX,MAAMyX,OACnBD,aANM,OAGFtb,EAHE,OASR,EAAKqJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAV/B,6D,+CAaD9K,EAAKoH,EAAOlC,GACnB,OACE,kBAACK,EAAA,QAAD,CAAMH,MAAO6V,GAAOkC,KAClB,kBAAC,GAAD,CAAG3N,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAAOhI,GAC3D,kBAAC2F,EAAA,EAAD,CACER,UAAWD,EACXsK,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjD9C,QAASA,GAET,kBAAC,GAAD,KAAIkC,O,+BAMF,IAAD,SAOHgC,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAT7B,EAWgClB,KAAK3D,MAAlB9D,GAXnB,EAWCoX,GAXD,EAWKmE,OAXL,EAWapZ,KAXb,EAWmBnC,UAE1B,OACE,kBAACgZ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAI3F,KAAM,IAC9BhI,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KACHyH,KAAKgU,SAASlW,EAAQ,QAAS1G,EAAY,MAAC2J,OAAD,EAACA,EAAIwE,OAAO,kBACtD,EAAK3D,SAAS,CAAEkS,OAAQ3a,OAAO4H,EAAGwE,WAEnCvF,KAAKgU,SAASlW,EAAQ,QAAS1G,EAAY,MAAC2J,OAAD,EAACA,EAAIyE,OAAO,kBACtD,EAAK5D,SAAS,CAAEkS,OAAQ3a,OAAO4H,EAAGyE,WAEnCxF,KAAKgU,SAASlW,EAAQ,QAASA,EAAQ,eACxC,kBAAC3B,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAOA,GAAM/B,GAAO+P,UACpBvG,YAAa3F,EAAQ,UACrBE,MAAOgC,KAAK3D,MAAMyX,OAClBpQ,aAAc,SAACoQ,GAAD,OAAY,EAAKlS,SAAS,CAAEkS,cAG5C,kBAAC3X,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC,GAAD,CACEjJ,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK+X,SAAQ,IAC5B7X,MAAO,CAAEP,MAAO,MAElB,kBAAC,GAAD,CACEI,MAAOiC,EAAQ,OACfhC,QAAS,kBAAM,EAAK+X,SAAQ,IAC5B7X,MAAO,CAAEP,MAAO,c,GArFbgF,aA+FboR,GAAS/H,KAAWC,OAAO,CAC/BgK,IAAK,CACHvX,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAGD+U,M,+aC7GTK,G,mLACJ5X,MAAQ,CACN9D,SAAU,M,EAUZ0a,aAAe,WAAO,IAAD,EACI,EAAKnT,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GADG,EAEU,EAAK1E,MAA1BsT,EAFW,EAEXA,GAAImE,EAFO,EAEPA,OAAQpZ,EAFD,EAECA,KAEdoD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC,GAAD,CACEjH,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,UACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsJ,WAAYpF,EAAOoF,WACnBiO,KACAjV,OACAoZ,aAGDxb,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,U,EAO1Bsa,gBAAkB,WAAO,IACfnS,EAAO,EAAKjB,MAAMgB,YAAlBC,GACFjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAG9B/C,EAAU,CACdL,EAAQ,aACRA,EAAQ,WACRA,EAAQ,QACRA,EAAQ,WACRA,EAAQ,eACRA,EAAQ,eAEJoW,EAAO,CAAC,OAAQ,UAAW,OAAQ,UAAW,SAAU,cAC9D,EAAKpU,MAAMqT,2BACT,CACEhV,YAIF,SAACiV,GACC,EAAKxR,SAAS,CAAElH,KAAMwZ,EAAKd,S,0DAlEZ,IAAD,EACZzD,EAAE,SAAG3P,KAAKF,MAAMmB,WAAW5E,MAAMgV,aAA/B,EAAG,EAAoC1B,GAC3CA,GACF3P,KAAK4B,SAAS,CAAE+N,S,mCAoEN,IAAD,SAGP3P,KAAKF,MADPgB,YAAexE,EAFN,EAEMA,OAAQyE,EAFd,EAEcA,GAEnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BiT,EAAQ,CACZ1O,QAAS3H,EAAQ,WACjB0H,KAAM1H,EAAQ,aACdsW,KAAMtW,EAAQ,QACduW,QAASvW,EAAQ,WACjBwW,OAAQxW,EAAQ,eAChB4H,WAAY5H,EAAQ,eAEtB,OACE,kBAAC3B,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO+P,UAC3BwB,qBAAsBlP,EAAOrC,MAAMwR,kBACnChI,YAAa3F,EAAQ,MACrBE,MAAOgC,KAAK3D,MAAMsT,GAClBjM,aAAc,SAACiM,GAAD,OAAQ,EAAK/N,SAAS,CAAE+N,UAExC,kBAACnM,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO+P,UAC3BwB,qBAAsBlP,EAAOrC,MAAMwR,kBACnChI,YAAa3F,EAAQ,UACrBE,MAAOgC,KAAK3D,MAAMyX,OAClBpQ,aAAc,SAACoQ,GAAD,OAAY,EAAKlS,SAAS,CAAEkS,cAE5C,kBAAC,GAAD,CACE7Z,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAEyN,eAAgB,IACzB5N,MACEmE,KAAK3D,MAAM3B,KACPyZ,EAAMnU,KAAK3D,MAAM3B,MACjBoD,EAAQ,uBAEdhC,QAASkE,KAAKkT,kBAEflT,KAAKiT,kB,+BAIF,IAAD,EAIHjT,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAmBxE,GAHd,EAGUyE,GAHV,EAGczE,QAEb/D,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAACgZ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAIzK,MAAO,MAC/BlD,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC5B,EAASA,UAEV,KAEHyH,KAAKiS,mB,GAxIKxR,aA+IN4S,gCAAmBY,ICxGnBM,GAzCC,SAAC,GAMV,IALLzT,EAKI,EALJA,YACA0T,EAII,EAJJA,gBACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,OACAC,EACI,EADJA,eAEMC,EACJ9e,EAAUC,YAAV,uBACuB2e,EADvB,eAC4C5T,EAAYxE,OAAOoF,WAEjE,OACEZ,EAAYC,GAAG8T,aACb,kBAAC1Y,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,SAChBiC,WAAY,WAGd,kBAACwC,EAAA,EAAD,CACEC,OAAQ,CAAEsT,OACV5Y,MAAO,CAAEkN,WAAY,GAAIzN,MAAO,IAAK8F,OAAQ,MAE/C,kBAACiC,GAAA,EAAD,CACExH,MAAO,CAACA,GAAM8E,EAAYxE,OAAOrC,OAAO+P,UAAW,CAAEvO,MAAO,MAC5DuC,MAAOyW,EACP/Q,aAAc,SAACrM,GAAD,OAAOmd,EAAgBnd,MAEvC,kBAACkF,EAAA,EAAD,CAAkBT,QAAS,kBAAM6Y,EAAejb,KAAKgb,YACnD,kBAACI,GAAA,EAAD,CACE/X,KAAK,SACLG,KAAM,GACNF,MAAO8D,EAAYxE,OAAOrC,MAAME,iB,+aC/BtC4a,G,mLACJ1Y,MAAQ,CACN9D,SAAU,KACVkc,QAAS,GACTC,OAAQhb,KAAKgb,U,EAWfzB,aAAe,WAAO,IAAD,EACI,EAAKnT,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GADG,EAEU,EAAK1E,MAE5ByB,GAJa,EAEX6R,GAFW,EAEPmE,OAFO,EAECpZ,KAEJ/D,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAa,EAAKhB,MAAMgB,YACxB2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,UACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd+S,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAUkc,QAAS,GAAIC,OAAQhb,KAAKgb,WACpD,EAAK5U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,W,+CAhDnBhC,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CAAMH,MAAO6V,GAAOkC,KAClB,kBAAC,GAAD,KAAInd,GACJ,kBAAC,GAAD,KAAIoH,M,mCA0DI,IAAD,EAIPgC,KAAKF,MADQiB,GAHN,EAETE,WAFS,EAGTH,YAAeC,IAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B8T,EAAWjU,EAAGiU,SAAWjU,EAAGiU,SAAW,EACvCC,EAAOvb,KAAKC,OAAOyH,KAAKzG,MAAQqa,GAAY,MAC5CE,EAAQD,EAAO,GAAK,GAAKA,EACzBnB,EAASpa,KAAKC,MACmB,IAApCoH,EAAGsT,QAAUtT,EAAGuT,OAASvT,EAAGqT,MAAa1a,KAAKyb,KAAKD,IAGtD,OACE,kBAAC/Y,EAAA,QAAD,KACG6D,KAAKgU,SAASlW,EAAQ,QAAtB,MAA+BiD,OAA/B,EAA+BA,EAAIqT,MACnCpU,KAAKgU,SAASlW,EAAQ,WAAtB,MAAkCiD,OAAlC,EAAkCA,EAAIsT,SACtCrU,KAAKgU,SAASlW,EAAQ,eAAtB,MAAsCiD,OAAtC,EAAsCA,EAAIuT,QAE1CtU,KAAKgU,SAASlW,EAAQ,SAAUA,EAAQ,SAAUoX,IAClDlV,KAAKgU,SAASlW,EAAQ,eAAmBgW,EAAzC,MACA9T,KAAKiT,kB,+BAIF,IAAD,EAIHjT,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAmBxE,GAHd,EAGUyE,GAHV,EAGczE,QAEb/D,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAAC4D,EAAA,QAAD,CAAMH,MAAOA,GAAMM,EAAOrC,OAAOgQ,WAC/B,kBAAC9N,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAIzK,MAAO,MAC/BlD,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC5B,EAASA,UAGZyH,KAAKiS,mB,GA9GIxR,aAsHfoR,GAAS/H,KAAWC,OAAO,CAC/BgK,IAAK,CACHvX,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAGDkW,M,qkBCxHf,IAqPMlD,GAAS/H,KAAWC,OAAO,CAC/BgK,IAAK,CACHvX,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAGDuW,GA7PG,SAAC,GAUZ,IATLnU,EASI,EATJA,WASI,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACAsU,EAKE,EALFA,OACArU,EAIE,EAJFA,SACAsU,EAGE,EAHFA,aACUrb,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,KAGa6R,EAHb,OAIkD3M,mBAAS,MAJ3D,WAIG8X,EAJH,KAIwBC,EAJxB,OAKwB/X,mBAAS,IALjC,WAKGqW,EALH,KAKW2B,EALX,OAMoBhY,mBAAS,QAN7B,WAMG/C,EANH,KAMSgb,EANT,KAOJle,GAAO8d,GAEP,IAAMK,EAAc,SAAO5T,GAAP,iBAAAtJ,EAAAC,OAAA,kEAAAD,EAAA,MACSM,GAAK,cAAe,CAC7CgJ,OACArH,KAAM,OACN+G,MAAOnF,EAAOoF,cAJE,gBACVnJ,EADU,EACVA,SAKR+c,IACAtU,EAAS1E,EAAOoF,YAChB8T,EAAuBjd,GARL,6DAWdsb,EAAU,SAAOA,GAAP,iBAAApb,EAAAC,OAAA,kEAAAD,EAAA,MACaM,GAAK,YAAa,CAC3C0I,MAAOnF,EAAOoF,WACdoS,SACAD,UACAnZ,UALY,gBACNnC,EADM,EACNA,SAOR6R,EAAY7R,GACZyI,EAAS1E,EAAOoF,YATF,6DAYVsS,EAAW,SAACpd,EAAKoH,EAAOlC,GAC5B,OACE,kBAACK,EAAA,QAAD,CAAMH,MAAO6V,GAAOkC,KAClB,kBAAC,GAAD,CAAG3N,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAAOhI,GAC3D,kBAAC2F,EAAA,EAAD,CACER,UAAWD,EACXsK,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjD9C,QAASA,GAET,kBAAC,GAAD,KAAIkC,MAKN+D,EAAI,MAAGsT,OAAH,EAAGA,EAAQO,MAAK,SAACve,GAAD,OAAOA,EAAE0K,QAAF,MAAWhB,OAAX,EAAWA,EAAIgB,SAEhD,OACE,kBAACwP,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAACR,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG2F,OAAQ,KAC9B,kBAAC/J,EAAA,QAAD,KACG5D,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAC/Byb,EAASlW,EAAQ,QAAS1G,EAAY,MAAC2J,OAAD,EAACA,EAAIyE,OAAO,kBACjDiQ,EAAUtc,OAAO4H,EAAGyE,UAErBwO,EAASlW,EAAQ,aAAc1G,EAAY,MAAC2J,OAAD,EAACA,EAAI8U,YAAY,kBAC3DJ,EAAUtc,OAAO4H,EAAG8U,eAGrB7B,EAASlW,EAAQ,SAAUA,EAAQ,kBAEnCkW,EAASlW,EAAQ,WAAY1G,EAAY,MAAC2J,OAAD,EAACA,EAAI0E,UAAU,kBACvDgQ,EAAUtc,OAAO4H,EAAG0E,aAErBuO,EACClW,EAAQ,mBACR1G,EAAY,MAAC2J,OAAD,EAACA,EAAI+U,eACjB,kBAAML,EAAUtc,OAAO4H,EAAG+U,kBAG3B9B,EAASlW,EAAQ,SAAUA,EAAQ,wBAEpC,kBAAC3B,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO+P,WAApB,IAA+BzJ,KAAM,IAC1CkD,YAAa3F,EAAQ,UACrB0N,qBAAsBvR,EAAMwR,kBAC5BzN,MAAO8V,EACPpQ,aAAc,SAACoQ,GAAD,OAAY2B,EAAU3B,MAGtC,kBAACvX,EAAA,EAAD,CACEP,MAAO,CACLS,gBAAiBxC,EAAMyC,UACvBC,QAAS,GACTmC,aAAc,EACdoK,WAAY,IAEdpN,QAAS,kBAAM4Z,EAAiB,SAAThb,EAAkB,UAAY,UAErD,kBAAC,GAAD,KACqBoD,EAAT,SAATpD,EAA0B,YAAuB,cAKxD,kBAACyB,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC,GAAD,CACE7K,MAAOA,EACP4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM+X,GAAQ,IACvB7X,MAAO,CAAEP,MAAO,MAElB,kBAAC,GAAD,CACExB,MAAOA,EACP4B,MAAOiC,EAAQ,OACfhC,QAAS,kBAAM+X,GAAQ,IACvB7X,MAAO,CAAEP,MAAO,WAOzB,MAACsG,OAAD,EAACA,EAAMgU,WAaN,oCACE,kBAAC,UAAD,CAAM/Z,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,kBAAmB,IAC5B,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,SAA3B,MAAsCgC,OAAtC,EAAsCA,EAAIgB,MAAa,IACtDjE,EAAQ,MAAO,IAChB,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,UACpB,MAAJgD,OAAA,EAAAA,EAAMgU,YAAajY,EAAQ,WALhC,KAOKA,EAAQ,iBAAD,MAAmBiE,OAAnB,EAAmBA,EAAMiU,aAGpCzd,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,YAAasP,eAAgB,KACtDlR,IAzBP,kBAAC4D,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,qBAEVyX,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACEtb,MAAOA,EACP4B,MAAOiC,EAAQ,eACfhC,QAAS,kBAAM6Z,EAAW,MAAC5U,OAAD,EAACA,EAAIgB,UAuBrC,kBAAC5F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEvB,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBACnD,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aA5HjB,MAgIGuX,OAhIH,EAgIGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKgU,UACJ,kBAAC,GAAD,KAAIhU,EAAKgU,WAET,kBAACxZ,EAAA,EAAD,CAAkBT,QAAS,kBAAM6Z,EAAY5T,EAAKA,QAChD,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKgU,aAAL,MAAmBhV,OAAnB,EAAmBA,EAAIhE,MACtB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,OACNqH,KAAMA,EAAKA,SAIf,kBAACuJ,GAAA,EAAD,CAAQvO,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,UAAD,CAAMlB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAKiU,iBAOhB,kBAAC7Z,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QC9Md6U,GAxCE,SAACtW,GAAW,IAAD,EACpBhC,EAAUnH,EAAe,SAACmJ,EAAMgB,YAAYC,SAAnB,EAAC,EAAsBG,QAD5B,EAGJzD,mBAAS,QAHL,WAGnB+V,EAHmB,KAGd6C,EAHc,KAK1B,OACE,kBAACla,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CACEgT,KAAM,CACJ,CACE1X,MAAOiC,EAAQ,YACf2V,SAAkB,SAARD,EACV1X,QAAS,kBAAMua,EAAO,UAExB,CACExa,MAAOiC,EAAQ,iBACf2V,SAAkB,cAARD,EACV1X,QAAS,kBAAMua,EAAO,eAGxB,CACExa,MAAOiC,EAAQ,cACf2V,SAAkB,WAARD,EACV1X,QAAS,kBAAMua,EAAO,YAExB,CACExa,MAAOiC,EAAQ,cACf2V,SAAkB,WAARD,EACV1X,QAAS,kBAAMua,EAAO,eAKnB,SAAR7C,GAAkB,kBAAC,GAAS1T,GACpB,cAAR0T,GAAuB,kBAAC,GAAc1T,GAC9B,WAAR0T,GAAoB,kBAAC,GAAW1T,GACxB,WAAR0T,GAAoB,kBAAC,GAAW1T,K,2aCrCrBtE,IAAW1C,IAAI,UAAzB2C,M,IA4DO6a,G,qLAxDbja,MAAQ,CACNka,SAAQ,SAAE,EAAKzW,MAAMgB,YAAYC,SAAzB,EAAE,EAA2BwV,U,+CAE7B,IAAD,SAC0BvW,KAAKF,MAAMgB,YAApCxE,EADD,EACCA,OAAQyE,EADT,EACSA,GAAIC,EADb,EACaA,SAEdlD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,SAAUjC,eAAgB,WAC5D,kBAAC,GAAD,KAAIkB,EAAQ,eAA+B,KAAb,MAAFiD,OAAA,EAAAA,EAAIwV,YAE/B,CAAC,EAAG,GAAK,IAAM,GAAK,GAAGvX,KAAI,SAACwX,GAC3B,OACE,kBAACja,EAAA,EAAD,CAAkBT,QAAS,kBAAM,EAAK8F,SAAS,CAAE2U,SAAUC,MACzD,kBAACra,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTF,gBACE,EAAKJ,MAAMka,WAAaC,EAAK,YAASne,IAG1C,kBAAC,GAAD,KAAIyF,EAAQ,gBAAsB,IAAL0Y,SAKrC,kBAAC,GAAD,CACE3a,MAAOiC,EAAQ,QACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBme,SAAU,EAAKla,MAAMka,SACrB7U,WAAYpF,EAAOoF,eAGpBpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLyI,EAAS1E,EAAOoF,eAEjB/I,OAAM,SAACC,GACNC,QAAQuF,IAAI,eAAgBxF,GAC5BgF,MAAME,EAAQ,kC,GAhDNT,IAAMoD,WCmKfgW,GApKF,SAAC,GAWR,EAVJxV,WAUK,IATLH,EASI,EATJA,YASI,IARJA,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACAsU,EAKE,EALFA,OACArU,EAIE,EAJFA,SACAsU,EAGE,EAHFA,aACUrb,EAER,EAFFqC,OAAUrC,MAGJkZ,EAA+BuD,2BAA/BvD,2BAEFrV,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAHhC,EAK4BzD,mBAAS,MALrC,WAKGlF,EALH,KAKa6R,EALb,OAMkD3M,mBAAS,MAN3D,wBAOsBA,mBAAS,OAP/B,WAOGkZ,EAPH,KAOUC,EAPV,OAQ0BnZ,mBAAS,IARnC,WAQGgX,EARH,KAQYoC,EARZ,OASoBpZ,mBAAS,IAT7B,WASG/C,EATH,KASSgb,EATT,OAUwBjY,mBAAS/D,KAAKgb,UAVtC,WAUGA,EAVH,KAUWoC,EAVX,KAYJtf,GAAO8d,GAEP,IAAMyB,EAAc,CAClBC,cAAelZ,EAAQ,iBACvBmZ,OAAQnZ,EAAQ,UAChBoZ,SAAUpZ,EAAQ,YAClBuW,QAASvW,EAAQ,iBACjBqZ,WAAYrZ,EAAQ,cACpBsZ,IAAKtZ,EAAQ,OACbuZ,QAASvZ,EAAQ,WACjBwZ,YAAaxZ,EAAQ,eACrB0H,KAAM1H,EAAQ,cACd+K,KAAM/K,EAAQ,QACdyZ,OAAQzZ,EAAQ,WAGZiE,EAAI,MAAGsT,OAAH,EAAGA,EAAQO,MAAK,SAACve,GAAD,OAAOA,EAAE0K,QAAF,MAAWhB,OAAX,EAAWA,EAAIgB,SAwDhD,OACE,kBAACwP,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAEnC,oCACE,kBAAC0E,EAAA,EAAD,CAAOC,OAAQvK,EAAQ,OACvB,kBAAC,UAAD,CAAMiF,MAAO,CAAEgB,MAAO/C,EAAME,cACR,KAAf,MAAF4G,OAAA,EAAAA,EAAIyW,UACD1Z,EAAQ,kBACRA,EACE,mBAjDE,CAChB,GACA,SACA,QACA,YACA,SACA,UACA,WACA,SA0CuB,MAACiD,OAAD,EAACA,EAAIyW,UACC,GAAb,MAAFzW,OAAA,EAAAA,EAAIyW,YAIXjf,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,YAAasP,eAAgB,KACtDlR,GAIL,kBAAC,GAAD,CAAGyD,MAAO,CAAE8I,UAAW,KAAOhH,EAAQ,UACtC,kBAAC0F,GAAA,EAAD,CACEC,YAAY,IACZ+H,qBAAsBvR,EAAMwR,kBAC5BzN,MAAO2Y,EACPjT,aAAc,SAACrM,GAAD,OAAOuf,EAASvf,IAC9B2E,MAAOA,GAAM/B,GAAO+P,YAGtB,kBAAC,GAAD,CAAGhO,MAAO,CAAEyN,eAAgB,KAAO3L,EAAQ,aAC3C,kBAAC,GAAD,CACEhC,QA7DS,WAGjB,IAAMqC,EAAUsZ,OAAOvD,KAAK6C,GAAa/X,KACvC,SAACtE,GAAD,OACKqc,EAAYrc,GADjB,KAC2BqH,EAAQrH,EAAJ,UAD/B,KACqDoD,EACjD,UAFJ,WAGS1G,EAAa2K,EAAQrH,EAAJ,WAH1B,IAGgDoD,EAAQ,UAHxD,OAMFK,EAAQuZ,KAAK5Z,EAAQ,WACrB,IACM6Z,EAAoBxZ,EAAQ/E,OAAS,EAE3C+Z,EACE,CACEhV,UACAwZ,oBACAC,4BAP2Bvf,IAS7B,SAAC+a,GACKA,IAAgBjV,EAAQ/E,OAAS,GACnCsc,EAAQ+B,OAAOvD,KAAK6C,GAAa3D,QAwC/BvX,MAAOnB,EAAOqc,EAAYrc,GAAQoD,EAAQ,mBAG3CpD,EACC,kBAAC,GAAD,KACGoD,EACC,WACAiZ,EAAYrc,GACZqH,EAAQrH,EAAJ,UACJtD,EAAa2K,EAAQrH,EAAJ,WACjBqH,EAAQrH,EAAJ,UAAJ,cAGF,KAEJ,kBAAC,GAAD,CACEoG,YAAaA,EACb2T,QAASA,EACTD,gBAAiB,SAACnd,GAAD,OAAOwf,EAAWxf,IACnCqd,OAAQA,EACRC,eAAgB,SAACtd,GAAD,OAAOyf,EAAUzf,MAGnC,kBAAC,GAAD,CACE2E,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,cACfhC,QAjHK,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcM,GAAK,OAAQ,CACtC2I,WAAYpF,EAAOoF,WACnBiV,QACAjc,OACA+Z,aALW,gBACLlc,EADK,EACLA,SAMRyI,EAAS1E,EAAOoF,YAChB0I,EAAY7R,GACZ+c,IACAuB,EAAW,IACXC,EAAUpd,KAAKgb,UAXF,gEAsHX,kBAACvY,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QC6FdsW,GAvPO,SAAC,GAWhB,IAVL5W,EAUI,EAVJA,WACAH,EASI,EATJA,YASI,IARJA,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACAsU,EAKE,EALFA,OACArU,EAIE,EAJFA,SACAsU,EAGE,EAHFA,aACUrb,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,KAGa6R,EAHb,OAIkD3M,mBAAS,MAJ3D,WAIG8X,EAJH,KAIwBC,EAJxB,OAK0B/X,mBAAS,MALnC,WAKGgI,EALH,KAKYqS,EALZ,OAM0Bra,mBAAS,IANnC,WAMGgX,EANH,KAMYoC,EANZ,OAOwBpZ,mBAAS/D,KAAKgb,UAPtC,WAOGA,EAPH,KAOWoC,EAPX,KASJtf,GAAO8d,GAEP,IAAMK,EAAc,SAAO5T,GAAP,iBAAAtJ,EAAAC,OAAA,kEAAAD,EAAA,MACSM,GAAK,cAAe,CAC7CgJ,OACArH,KAAM,gBACN+G,MAAOnF,EAAOoF,cAJE,gBACVnJ,EADU,EACVA,SAKR+c,IACAtU,EAAS1E,EAAOoF,YAChB8T,EAAuBjd,GARL,6DAWdwJ,EAAI,MAAGsT,OAAH,EAAGA,EAAQO,MAAK,SAACve,GAAD,OAAOA,EAAE0K,QAAF,MAAWhB,OAAX,EAAWA,EAAIgB,SAehD,OACE,kBAACwP,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,MACpC,MAACoF,OAAD,EAACA,EAAMgW,oBAYN,oCACE,kBAAC,UAAD,CAAM/b,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,sBAAuB,IAChC,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,SAA3B,MAAsCgC,OAAtC,EAAsCA,EAAIgB,MAAa,IACtDjE,EAAQ,MAAO,IAChB,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,UACpB,MAAJgD,OAAA,EAAAA,EAAMgW,qBAAsBja,EAAQ,WALzC,IAOI,IACDA,EACC,qBADM,MAENiE,OAFM,EAENA,EAAMiW,mBAFA,MAGNjW,OAHM,EAGNA,EAAMkW,sBAIV,kBAAC,UAAD,CAAMjc,MAAO,CAAEgB,MAAO/C,EAAME,YAAa2K,UAAW,KACjDhH,EAAQ,sBAAuB,IAChC,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,SAA3B,MAAsCgD,OAAtC,EAAsCA,EAAM0D,SAAgB,IAC3D3H,EAAQ,uBAGVvF,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,YAAasP,eAAgB,KACtDlR,GAIL,kBAACiL,GAAA,EAAD,CACEC,YAAY,IACZ+H,qBAAsBvR,EAAMwR,kBAC5BzN,MAAOyH,EACP/B,aAAc,SAACrM,GAAD,OAAOygB,EAAWzgB,IAChC2E,MAAOA,GAAM/B,GAAO+P,YAGtB,kBAAC,GAAD,CACElJ,YAAaA,EACb2T,QAASA,EACTD,gBAAiB,SAACnd,GAAD,OAAOwf,EAAWxf,IACnCqd,OAAQA,EACRC,eAAgB,SAACtd,GAAD,OAAOyf,EAAUzf,MAGnC,kBAAC,GAAD,CAAQwE,MAAOiC,EAAQ,OAAQhC,QAvExB,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcM,GAAK,aAAc,CAC5C2I,WAAYpF,EAAOoF,WACnBoS,OAAQrO,EACRgP,aAJW,gBACLlc,EADK,EACLA,SAKRyI,EAAS1E,EAAOoF,YAChB0I,EAAY7R,GACZ+c,IACAuB,EAAW,IACXC,EAAUpd,KAAKgb,UAVF,gEAgBT,kBAACvY,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,yBAEVyX,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACE1Z,MAAOiC,EAAQ,eACfhC,QAAS,kBAAM6Z,EAAW,MAAC5U,OAAD,EAACA,EAAIgB,UAoDrC,kBAAC5F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEvB,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBACnD,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,cAhFjB,MAoFGuX,OApFH,EAoFGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB4H,EAAKA,OAEnD,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKgW,mBACJ,kBAAC,UAAD,CAAM/b,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAKgW,oBAGR,kBAACxb,EAAA,EAAD,CAAkBT,QAAS,kBAAM6Z,EAAY5T,EAAKA,QAChD,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKgW,sBAAL,MAA4BhX,OAA5B,EAA4BA,EAAIhE,MAC/B,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,gBACNqH,KAAMA,EAAKA,SAIf,kBAACuJ,GAAA,EAAD,CAAQvO,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,UAAD,CAAMlB,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB4H,EAAK0D,cAMzD,kBAACtJ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBACnD,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,WAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,qBA1JjB,MA8JGuX,OA9JH,EA8JGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB4H,EAAKA,OAEnD,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,KAAIuF,EAAKmW,oBAAT,MAGF,kBAAC,UAAD,CAAMlc,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,SACI4H,EAAKiW,yBAOjB,kBAAC7b,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,+aCzHd4W,G,mLA/Hb9b,MAAQ,CACNwE,SAAU,KACVtI,SAAU,KACVkc,QAAS,GACTC,OAAQhb,KAAKgb,U,EAEf5L,WAAa,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MAGN8C,EAEV,EAAK6F,MAHPgB,YACExE,OAAUrC,MAIRwC,EACJ,EAAKJ,MAAMwE,WAAa7G,EAAKqY,GAAK,eAAYha,EAChD,OACE,kBAACkE,EAAA,EAAD,CACET,QAAS,WACP,EAAK8F,SAAS,CAAEf,SAAU7G,EAAKqY,OAGjC,kBAAClW,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdnC,QAAS,GACTC,eAAgB,gBAChBH,oBAGF,kBAAC,UAAD,CAAMT,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK2H,QACjD,kBAAC,UAAD,CAAM3F,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,SAAkDH,EAAKoe,U,EAM/DnF,aAAe,WAAO,IAAD,EACI,EAAKnT,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GACVjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,oCACE,kBAAC,GAAD,CACEJ,YAAa,EAAKhB,MAAMgB,YACxB2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE2E,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,aACfhC,QAAS,0BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACgBM,GAAK,SAAU,CACpC0I,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,SACnB4T,QAAS,EAAKpY,MAAMoY,WAJf,OACDlc,EADC,OAMP,EAAKqJ,SAAS,CAAErJ,WAAUkc,QAAS,GAAIC,OAAQhb,KAAKgb,WACpD,EAAK5U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPhC,iE,+CAaP,IAAD,SAOH1B,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAGR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAR7B,EAUwBlB,KAAK3D,MAA5B9D,EAVD,EAUCA,SAAUsI,EAVX,EAUWA,SAEZ1C,EAAU,CACd,CACEkU,GAAI,EACJ1Q,OAAQ7D,EAAQ,mBAChBsa,MAAO,SAET,CACE/F,GAAI,EACJ1Q,OAAQ7D,EAAQ,qBAChBsa,MAAO,UAGT,CACE/F,GAAI,EACJ1Q,OAAQ7D,EAAQ,mBAChBsa,MAAO,YAIX,OACE,kBAACjc,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG8X,UAAW,MACjC,kBAAC,UAAD,CAAMrc,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACEsD,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7C,kBAACmR,GAAA,EAAD,CACE4O,aAAc,SAACte,EAAM7C,GAAP,aAAwBA,GACtCwS,KAAMxL,EACNoa,UAAW1X,EACX+I,oBAAqB,kBAAM,kBAAC,GAAD,KAAI9L,EAAQ,gBACvCgL,WAAY9I,KAAK8I,WACjB0P,oBAAqBxY,KAAKiT,oB,GAxHjBxS,aCqJNgY,GAtJA,SAAC,GAUT,IATLxX,EASI,EATJA,WASI,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACAsU,EAKE,EALFA,OACAC,EAIE,EAJFA,aACAtU,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,aAIkDkF,mBAAS,OAJ3D,WAIG8X,EAJH,KAIwBC,EAJxB,KAMJhe,GAAO8d,GAEP,IAAMK,EAAc,SAAO5T,GAAP,iBAAAtJ,EAAAC,OAAA,kEAAAD,EAAA,MACSM,GAAK,cAAe,CAC7CgJ,OACArH,KAAM,SACN+G,MAAOnF,EAAOoF,cAJE,gBACVnJ,EADU,EACVA,SAKR+c,IACAtU,EAAS1E,EAAOoF,YAChB8T,EAAuBjd,GARL,6DAWdwJ,EAAI,MAAGsT,OAAH,EAAGA,EAAQO,MAAK,SAACve,GAAD,OAAOA,EAAE0K,QAAF,MAAWhB,OAAX,EAAWA,EAAIgB,SAEhD,OACE,kBAACwP,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,MACpC,MAACoF,OAAD,EAACA,EAAM2W,aAYN,oCACE,kBAAC,UAAD,CAAM1c,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,eAAgB,IACzB,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,SAA3B,MAAsCgC,OAAtC,EAAsCA,EAAIgB,MAAa,IACtDjE,EAAQ,MAAO,IAChB,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,UACpB,MAAJgD,OAAA,EAAAA,EAAM2W,cAAe5a,EAAQ,WALlC,KAOKA,EAAQ,cAAD,MAAgBiE,OAAhB,EAAgBA,EAAM4W,eAGlC,kBAAC,GAAD,CACE7c,QAAS,kBAAMmF,EAAWgC,SAAS,UACnCpH,MAAOiC,EAAQ,WAGhBvF,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,YAAasP,eAAgB,KACtDlR,IA7BP,kBAAC4D,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,kBAEVyX,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACE1Z,MAAOiC,EAAQ,eACfhC,QAAS,kBAAM6Z,EAAW,MAAC5U,OAAD,EAACA,EAAIgB,UA4BrC,kBAAC5F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEvB,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBACnD,kBAACT,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAxDjB,MA4DGuX,OA5DH,EA4DGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAK2W,YACJ,kBAAC,GAAD,KAAI3W,EAAK2W,aAET,kBAACnc,EAAA,EAAD,CAAkBT,QAAS,kBAAM6Z,EAAY5T,EAAKA,QAChD,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAK2W,eAAL,MAAqB3X,OAArB,EAAqBA,EAAIhE,MACxB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,SACNqH,KAAMA,EAAKA,SAIf,kBAACuJ,GAAA,EAAD,CAAQvO,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,UAAD,CAAMlB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAK4W,mBAOhB,kBAACxc,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,qkBChJ7B,IAiDeqX,GAjDI,SAAC,GAQd,EAPJ3X,WAOK,IAAD,IANJH,YACExE,EAKE,EALFA,OACA0E,EAIE,EAJFA,SACAD,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAGoBzD,mBAAQ,MAACsD,OAAD,EAACA,EAAIhE,MAHjC,WAGGA,EAHH,KAGSoN,EAHT,OAI4B1M,mBAAS,MAJrC,WAIGlF,EAJH,KAIa6R,EAJb,KAeJ,OACE,kBAACmH,EAAA,EAAD,KACE,kBAACpV,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAEhC,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLyN,eAAgB,GAChBjN,cAAe,MACfqC,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO+P,WAApB,IAA+BzJ,KAAM,IAC1CiL,qBAAsBvR,EAAMwR,kBAC5BhI,YAAa3F,EAAQ,QACrBE,MAAOjB,EACP2G,aAAc,SAACrM,GAAD,OAAO8S,EAAQ9S,MAE/B,kBAAC,GAAD,CAAQyE,QA5BG,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACUM,GAAK,aAAc,CAC5C2I,WAAYpF,EAAOoF,WACnB3E,UAHe,gBACTxE,EADS,EACTA,SAIRyI,EAAS1E,EAAOoF,YAChB0I,EAAY7R,GANK,6DA4BkBsD,MAAOiC,EAAQ,gB,+aCqFvC+a,G,mLA7Hbxc,MAAQ,CACNyc,UAAW,GACXC,UAAW,GACXngB,MAAO,KACP8R,QAAS,M,8CAGF,IAAD,SACA5M,EAAUnH,EAAe,SAACqJ,KAAKF,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAErDO,EAAQzB,KAAKF,MAAMgB,YAAYxE,OAAOoF,WAHtC,EAK2B1B,KAAK3D,MAA9Byc,EALF,EAKEA,UAEJA,IAPE,EAKaC,UAOnB/gB,MAASlC,EAAUC,YAAd,kBAA4C,CAC/C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEmS,SAAUoB,KAAIC,QAAQkN,GAAYrX,YAExDnJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GAYL,OAXAhT,QAAQuF,IAAI,eAAgByN,GAExBA,EAAajT,MACf,EAAKgJ,SAAS,CAAE8I,QAAS,KAAM9R,MAAOiT,EAAajT,QAEnD,EAAKgJ,SACH,CAAEhJ,MAAO,KAAM8R,QAASmB,EAAanB,UACrC,eAIGmB,KAERlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,MA5BhBoH,KAAK4B,SAAS,CAAEhJ,MAAOkF,EAAQ,0B,+BAgCzB,IAAD,WAMHkC,KAAKF,MAFK7F,GAJP,EAELgH,WAFK,EAGLH,YACExE,OAAUrC,OAGR6D,EAAUnH,EAAe,SAACqJ,KAAKF,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAE3D,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTqc,SAAU,IACVla,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzCoH,KAAK3D,MAAMqO,QACb,kBAAC,UAAD,CAAM1O,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMqO,SAC3C,KAEJ,kBAACvO,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAEkH,SAAU,GAAIlG,MAAO/C,EAAME,cACvC2D,EAAQ,gBAGX,kBAAC0F,GAAA,EAAD,CACEkI,iBAAe,EACfhI,aAAc,SAACoV,GAAD,OAAe,EAAKlX,SAAS,CAAEkX,eAC7C9a,MAAOgC,KAAK3D,MAAMyc,UAClB9c,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAEkH,SAAU,GAAIlG,MAAO/C,EAAME,cACvC2D,EAAQ,WAGX,kBAAC0F,GAAA,EAAD,CACEkI,iBAAe,EACfhI,aAAc,SAACqV,GAAD,OAAe,EAAKnX,SAAS,CAAEmX,eAC7C/a,MAAOgC,KAAK3D,MAAM0c,UAClB/c,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACEN,MAAOiC,EAAQ,kBACfhC,QAAS,kBAAM,EAAKqP,kB,GArHL9N,IAAMoD,W,seCOnC,IAAM3C,GAAUnH,IAwGDsiB,G,mLArGb5c,MAAQ,CAAE6c,WAAW,G,EACrBC,mBAAqB,4BAAA1gB,EAAAC,OAAA,mDACC,QAAhB2F,UAASC,IAAgC,YAAhBD,UAASC,GADnB,mCAAA7F,EAAA,MAEQ2gB,IAAqBA,MAF7B,mBAETC,EAFS,EAETA,OAERxgB,QAAQuF,IAAI,UAAWib,GAER,YAAXA,EANa,uBAOfzb,MAAME,GAAQ,2BAPC,mBAQR,GARQ,yCAYZ,GAZY,8D,EAerBwb,WAAa,gCAAA7gB,EAAAC,OAAA,kEAAAD,EAAA,MACiB,EAAK0gB,sBADtB,mDAIP,EAAKvX,SAAS,CAAE2X,SAAS,IAJlB,WAAA9gB,EAAA,MAMY+gB,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAQ,KAVH,WAMHC,EANG,QAaKC,UAbL,wBAcCF,EACY,QAAhBxb,UAASC,GACLwb,EAAOlF,IACP,yBAA2BkF,EAAOD,OAjBnC,YAAAphB,EAAA,MAmBqBuhB,KACR,QAAhB3b,UAASC,GAAeub,EAASC,EAAOlF,IACxC,CAAC,CAAEqF,OAAQ,CAAExe,MAAO,IAAK8F,OAAQ,OACjC,CACE2Y,OAAQF,KAA4BG,IACpCN,QAAQ,IAEVlhB,OAAM,SAACoP,GAAD,OAAOlP,QAAQuF,IAAI,IAAK2J,OA1B3B,QAmBCqS,EAnBD,OA4BCC,EACY,QAAhBhc,UAASC,GACL8b,EAAYP,OACZ,yBAA2BO,EAAYP,OAE7C,EAAKjY,SAAS,CAAE2X,SAAS,EAAOL,WAAW,IAAQ,WACjD,EAAKpZ,MAAMwa,SAASD,MAlCjB,wBAqCL,EAAKzY,SAAS,CAAE2X,SAAS,IArCpB,0DAwCP1gB,QAAQuF,IAAR,MAxCO,kE,+CA6CH,IAAD,EACwB4B,KAAK3D,MAA5B6c,EADD,EACCA,UAAWK,EADZ,EACYA,QADZ,EAEkBvZ,KAAKF,MAAtB9B,EAFD,EAECA,MAEFuc,EAJC,EAEQC,MAEM,GAAK,IAC1B,OACE,gBAACre,EAAA,QAAD,CAAMH,MAAO,CAAE6C,WAAY,SAAUjC,eAAgB,WACnD,gBAACL,EAAA,EAAD,CAAkBT,QAASkE,KAAKsZ,YAC7Btb,EACC,gBAACqD,EAAA,EAAD,CACEC,OAAQ,CACNsT,IAAKsE,EAAYlb,EAAQlI,EAAUC,YAAciI,GAEnDhC,MAAO,CAAEP,MAAO8e,EAAMhZ,OAAQgZ,EAAMzb,aAAcyb,EAAO,KAG3D,gBAACpe,EAAA,QAAD,CACEH,MAAO,CACL8C,aAAcyb,EAAO,EACrBzX,YAAa,EACbC,YAAa,OACbtH,MAAO8e,EACPhZ,OAAQgZ,EACR3d,eAAgB,SAChBiC,WAAY,WAGb0a,EACC,gBAAChO,GAAA,EAAD,MAEA,gBAACkP,GAAA,EAAD,CAAU1d,KAAK,YAAYC,MAAM,OAAOE,KAAMqd,EAAO,W,GA5F5Cld,a,kbCIC7B,IAAW1C,IAAI,UAAjC2C,G,GAAAA,MAAO8F,G,GAAAA,OACTmZ,GAAcjf,GAAQ,IAKtBkf,G,iCACJ,WAAY7a,GAAQ,IAAD,sBACjB,cAAMA,IAiCR8a,UAAY,kCAAAniB,EAAAC,OAAA,yDAMN,EAAKoH,MAJQxD,EAFP,EAERwE,YAAexE,OAEJ+U,EAJH,EAGRpQ,WACE5E,MAASgV,OAIPC,EARI,6BAQ+BhV,EAAOoF,WARtC,OAQuD2P,EAAOgB,GAExExZ,QAAQuF,IAAIkT,GAVF,WAAA7Y,EAAA,MAWaK,GAAIwY,IAXjB,QAWJ/Y,EAXI,SAcR,EAAKqJ,SAAS,CAAEW,KAAMhK,EAASgK,KAAMsY,YAAY,IAdzC,6DAlCO,EAoDnBC,UAAY,WACV,EAAKlZ,SAAS,CAAEiZ,YAAY,IAAQ,WAClC7a,KAAK4a,gBAtDU,EA0DnB9R,WAAa,YAAsB,IAAD,MAAlB9O,EAAkB,EAAlBA,KAAkB,KAAZ7C,MAIhB,EAAK2I,OAFQiB,EAFe,EAE9BD,YAAeC,GACfE,EAH8B,EAG9BA,WAEI8Z,GAAO,SAAA/gB,EAAKuY,WAAL,IAAWF,OAAX,MAAkBtR,OAAlB,EAAkBA,EAAIsR,IAC7B2I,EACJ,gBAACze,EAAA,EAAD,CACET,QAAS,WAAO,IAAD,EACbmF,EAAWgC,SAAS,UAAW,CAAElG,KAAI,SAAE/C,EAAKuY,WAAP,EAAE,EAAWxV,SAGpD,gBAACsE,EAAA,EAAD,CACEC,OAAQ,CAAEsT,IAAK9e,EAAUC,aAAV,SAAwBiE,EAAKuY,WAA7B,EAAwB,EAAWlC,YAClDrU,MAAO,CACLP,MA5EO,GA6EP8F,OA7EO,GA8EPzC,aAAcmc,OAKtB,OACE,gBAAC9e,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZqc,iBAAkB,EAClBte,eAAgBme,EAAO,WAAa,eAGpCA,EAAgB,KAATC,EACT,gBAAC7e,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACNkJ,eAAgB,GAChByR,iBAAkB,GAClBze,gBAAiBzC,EAAKmhB,SAClB,OACAJ,EACA,UACA,QACJpe,QAAS,GACT6U,SAAUxX,EAAKmhB,cAAW9iB,EAAYqiB,GAAc,IAAM,IAC1D5b,aAAc,GACdgE,YAAa,GACbC,YAAa,OACbkC,YAAa,OACbC,aAAc,CACZzJ,MAAO,EACP8F,OAAQ,GAEV4D,cAAe,IACfC,aAAc,KACdC,UAAW,IAGb,gBAAClJ,EAAA,QAAD,CACEH,MAAO,CAAEQ,cAAe,MAAOI,eAAgB,kBAE/C,gBAAC,UAAD,CAAMZ,MAAO,CAAE+C,WAAY,SAA3B,SAAsC/E,EAAKuY,WAA3C,EAAsC,EAAWxV,OAElD/C,EAAKoW,MACJ,gBAAC/O,EAAA,EAAD,CACEC,OAAQ,CACNsT,IAAK9e,EAAUC,YAAciE,EAAKoW,OAEpCpU,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7B6Z,WAAW,UAEX,KAEJ,gBAAC,UAAD,KAAOphB,EAAKiE,UAEb8c,EAAOC,EAAS,OApIJ,EAyInBK,KAAO,WAAO,IAAD,EAMP,EAAKvb,MAJQxD,EAFN,EAETwE,YAAexE,OAEJ+U,EAJF,EAGTpQ,WACE5E,MAASgV,OAJF,EAO2B,EAAKhV,MAAnC+T,EAPG,EAOHA,MAAOnS,EAPJ,EAOIA,QAASib,EAPb,EAOaA,UAExB,EAAKtX,SAAS,CAAE3D,QAAS,GAAImS,MAAO,OAEpC,IAAMkB,EAASxb,EAAUC,YAAhB,kBACTiC,MAAMsZ,EAAK,CACTxZ,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsJ,WAAYpF,EAAOoF,WACnB0O,MAAO8I,EAAY9I,OAAQ/X,EAC3B4F,UACAqd,IAAG,MAAEjK,OAAF,EAAEA,EAAQgB,OAGd/Z,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,SAAUmS,EAAc,EAAdA,QACjB,EAAK9I,SAAS,CAAErJ,aACZmS,GACF,EAAKkQ,eAGRjiB,OAAM,SAACC,GACNC,QAAQuF,IAAIxF,EAAO0Y,OA1KN,EA8KnB2B,aAAe,WAAO,IAAD,EAMf,EAAKnT,MAJPgB,YACY7G,EAHK,EAGfqC,OAAUrC,MACV8G,EAJe,EAIfA,GAGEjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAPjB,EAS6B,EAAK7E,MAA7C+T,EATW,EASXA,MAAOnS,EATI,EASJA,QATI,EASKib,UATL,EASgB3gB,SACnC,OACE,gBAAC4D,EAAA,QAAD,KACE,gBAACA,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZqc,iBAAkB,KAGpB,gBAAC,GAAD,CACEV,OAAK,EACLxc,MAAOoS,EACPkK,SAAU,SAACT,GAAD,OACR,EAAKjY,SAAS,CACZsX,WAAW,EACX9I,MAAOyJ,OAKb,gBAACrW,GAAA,EAAD,CACE+X,WAAS,EAETvf,MAAO,CAACwf,GAAMvhB,GAAO+P,UAAW,CAAEzJ,KAAM,IACxCvC,MAAOC,EACPwF,YAAa3F,EAAQ,WACrB4F,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAG7C,gBAAC1B,EAAA,EAAD,CAAkBT,QAAS,EAAKuf,MAC9B,gBAACZ,GAAA,EAAD,CAAU1d,KAAK,WAAWG,KAAM,SAnNxC,EAAKb,MAAQ,CACXof,QAAS,GACTZ,YAAY,EACZtY,KAAM,IANS,E,wDAUE,IAAD,SASdvC,KAAKF,MANIuR,EAHK,EAEhBpQ,WACE5E,MAASgV,OAHK,IAKhBvQ,YACYY,EANI,EAMdpF,OAAUoF,WACVV,EAPc,EAOdA,SAGJhB,KAAK4a,YAEL5a,KAAKK,SAAWC,aAAY,WAC1B,EAAKsa,YACL/hB,QAAQuF,IAAI,WACZrF,GAAK,UAAW,CAAE2I,aAAY2Q,GAAE,MAAEhB,OAAF,EAAEA,EAAQqK,QAC1C1a,EAASU,KACR,O,6CAIH6H,cAAcvJ,KAAKK,Y,+BA8LX,IAAD,OACCkC,EAASvC,KAAK3D,MAAdkG,KACR,OACE,gBAAC/B,EAAA,EAAD,CAAcxE,MAAO6V,GAAO5H,WACzB0R,MAAMC,QAAQrZ,GACb,gBAACmH,GAAA,EAAD,CACEmS,sBAAuB,CACrBta,OAAwB,QAAhBlD,UAASC,GAAeiD,GAAS,SAAMlJ,GAEjDsR,KAAMpH,EACNuG,WAAY9I,KAAK8I,WACjBwP,aAAc,SAACte,EAAM7C,GAAP,OAAiBA,EAAMG,YACrCwkB,eACE,gBAAC,KAAD,CACEC,WAAY/b,KAAK3D,MAAMwe,WACvBC,UAAW9a,KAAK8a,YAGpBkB,UAAQ,EACRC,IAAK,SAACA,GAAD,OAAU,EAAKC,SAAWD,KAGjC,gBAAC,GAAD,WAAI1Z,OAAJ,EAAIA,EAAMhK,UAEXyH,KAAKiT,oB,GAtPW5V,aA4PnBwU,GAAS/H,KAAWC,OAAO,CAC/BE,UAAW,CACT1J,KAAM,KAIKoa,M,oBCpRAwB,GANG,WAChB,OACE,kBAAChgB,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,OAAQ8F,OAAQ,GAAK9E,gBAAiB,W,+aCc1Dke,G,iCACJ,WAAY7a,GAAQ,IAAD,sBACjB,cAAMA,IAkBRsc,iBAAmB,WAAO,IAEP9f,EACb,EAAKwD,MADPgB,YAAexE,OAEjBtE,MACKlC,EAAUC,YADV,2BACgDuG,EAAOoF,WAC1D,CACE5J,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC+jB,GACDA,EAAY9jB,SACd,EAAKqJ,SAAS,CAAErJ,SAAU8jB,EAAY9jB,WAEtC,EAAKqJ,SAAS,CAAEya,gBAElB,EAAKza,SAAS,CAAEiZ,YAAY,OAE7BliB,OAAM,SAACC,GACNC,QAAQD,MAAMA,OA3CD,EA+CnBkiB,UAAY,WACV,EAAKlZ,SAAS,CAAEiZ,YAAY,IAAQ,WAClC7a,KAAKoc,uBAjDU,EAqDnBE,SAAW,SAACjK,GAAQ,IAAD,EACT/V,EAAW,EAAKwD,MAAMgB,YAAtBxE,OACFwB,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAGrD/C,EAAU,CAACL,EAAQ,WAEzBK,EAAQuZ,KAAK5Z,EAAQ,WAErB,EAAKgC,MAAMqT,2BACT,CACEhV,UACAwZ,kBAAmBxZ,EAAQ/E,OAAS,EACpCwe,uBAAwB,OAE1B,SAAOxE,GAAP,SAAA3a,EAAAC,OAAA,mDACsB,IAAhB0a,EADN,uBAEIva,QAAQuF,IAAI,SAAUiU,GAF1B,WAAA5Z,EAAA,MAGUM,GAAK,aAAc,CAAE2I,WAAYpF,EAAOoF,WAAY2Q,GAAIA,KAHlE,OAII,EAAK+J,mBAJT,gEApEe,EA+EnBG,gBAAkB,WAAO,IAAD,EACdjgB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OACFwB,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAGrD/C,EAAU,CAACL,EAAQ,mBAEzBK,EAAQuZ,KAAK5Z,EAAQ,WAErB,EAAKgC,MAAMqT,2BACT,CACEhV,UACAwZ,kBAAmBxZ,EAAQ/E,OAAS,EACpCwe,uBAAwB,OAE1B,SAAOxE,GAAP,SAAA3a,EAAAC,OAAA,mDACsB,IAAhB0a,EADN,uBAEIva,QAAQuF,IAAI,aAFhB,WAAA3F,EAAA,MAGUM,GAAK,YAAa,CAAE2I,WAAYpF,EAAOoF,cAHjD,OAII,EAAK0a,mBAJT,gEA9Fe,EAwGnBtT,WAAa,YAAsB,IAAD,wBAAlB9O,EAAkB,EAAlBA,KAAkB,KAAZ7C,MAOhB,EAAK2I,OALPmB,EAF8B,EAE9BA,WAF8B,IAG9BH,YACEC,EAJ4B,EAI5BA,GAJ4B,IAK5BzE,OAAUrC,EALkB,EAKlBA,MAAOyH,EALW,EAKXA,WAKf8a,GAAe,SAAAxiB,EAAKyiB,cAAL,IAAc1f,MAAd,SACjB/C,EAAKyiB,cADY,EACjB,EAAc1f,KACuB,KAArC,SAAA/C,EAAKyiB,cAAL,IAAcJ,YAAYjjB,QAA1B,SACAY,EAAKyiB,UADL,SACA,EAAcJ,YAAYzG,MAAK,SAACve,GAAD,OAAOA,EAAEqlB,UAAF,MAAa3b,OAAb,EAAaA,EAAIsR,SADvD,SACA,EAA4DE,WAD5D,EACA,EAAkExV,KAClE,iBAEE4f,GAAmB,SAAA3iB,EAAKyiB,cAAL,IAAcrM,OAAd,SACrBpW,EAAKyiB,cADgB,EACrB,EAAcrM,MACuB,KAArC,SAAApW,EAAKyiB,cAAL,IAAcJ,YAAYjjB,QAA1B,SACAY,EAAKyiB,UADL,SACA,EAAcJ,YAAYzG,MAAK,SAACve,GAAD,OAAOA,EAAEqlB,UAAF,MAAa3b,OAAb,EAAaA,EAAIsR,SADvD,SACA,EAA4DE,WAD5D,EACA,EACIlC,UACJ,KAEJ,OACE,gBAAC9T,EAAA,EAAD,CACET,QAAS,WAAO,IAAD,EACb/C,GAAK,UAAW,CAAE2I,aAAY2Q,GAAIrY,EAAKqY,KACvCpR,EAAWgC,SAAS,UAAW,CAC7BoP,GAAE,SAAErY,EAAKyiB,cAAP,EAAE,EAAcpK,GAClBqJ,MAAO1hB,EAAKqY,OAIhB,gBAAClW,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZ4K,eAAgB,GAChByR,iBAAkB,KAGnByB,EACC,gBAACtb,EAAA,EAAD,CACEC,OAAQ,CAAEsT,IAAK9e,EAAUC,YAAc4mB,GACvC3gB,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,GAAIzC,aAAc,MAGhD,gBAAC3C,EAAA,QAAD,CACEH,MAAO,CACLP,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdrC,gBAAiB,OACjBG,eAAgB,SAChBiC,WAAY,WAGd,gBAAC4b,GAAA,EAAD,CAAU1d,KAAK,aAAaC,MAAM,QAAQE,KAAM,MAGnDlD,EAAK4iB,OAAS,EACb,gBAACzgB,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACVC,IAAK,EACLE,KAAM,GACNlD,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdrC,gBAAiB,MACjBG,eAAgB,SAChBiC,WAAY,WAGd,gBAAC,UAAD,CAAM7C,MAAO,CAAEgB,MAAO,UAAYhD,EAAK4iB,SAEvC,KAEJ,gBAACzgB,EAAA,QAAD,CAAMH,MAAO,CAAEkN,WAAY,GAAI3I,KAAM,IACnC,gBAAC,GAAD,CAAGoI,MAAI,GAEJ6T,GAEFxiB,EAAK6iB,YACJ,gBAAC,GAAD,CAAG7Z,cAAe,GAAIhJ,EAAK6iB,aACzB,MAGN,gBAAC1gB,EAAA,QAAD,KACE,gBAACI,EAAA,EAAD,CACEP,MAAO,CAAEqP,UAAW,YACpBvP,QAAS,kBAAM,EAAKwgB,SAAStiB,EAAKqY,KAClCjM,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAEjD,gBAAC0M,GAAA,EAAD,CACEtP,MAAO,CAAEkN,WAAY,IACrBnM,KAAK,wBACLG,KAAM,GACNF,MAAO/C,EAAME,eAGjB,gBAAC,GAAD,KACG2iB,KAAO9iB,EAAK+iB,iBAAiB7C,OAC5B4C,KAAO9iB,EAAK+iB,iBAAiBC,QAAQF,OAASG,QAAQ,QAClD,QACA,mBA9MhB,EAAK5gB,MAAQ,CACXggB,YAAa,GACbxB,YAAY,GALG,E,wDASE,IAAD,OAClB7a,KAAKoc,mBAELpc,KAAKK,SAAWC,aAAY,kBAAM,EAAK8b,qBAAoB,O,6CAI3D7S,cAAcvJ,KAAKK,Y,+BA0MX,IAAD,SAMHL,KAAKF,MAFK7F,GAJP,EAELgH,WAFK,EAGLH,YACExE,OAAUrC,OAGNoiB,EAAgBrc,KAAK3D,MAArBggB,YACR,OACE,gBAAC7b,EAAA,EAAD,CAAcxE,MAAO6V,GAAO5H,WAC1B,gBAACP,GAAA,EAAD,CACEE,oBAAqB,WACnB,OACE,gBAACzN,EAAA,QAAD,CACEH,MAAO,CACLY,eAAgB,WAChBE,YAAa,GACbgI,UAAW,KAGb,gBAACvI,EAAA,EAAD,CACEP,MAAO,CAAEqP,UAAW,YACpBvP,QAAS,kBAAM,EAAKygB,mBACpBnW,QAAS,CAAE3H,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAEjD,gBAAC0M,GAAA,EAAD,CACEtP,MAAO,CAAEkN,WAAY,IACrBnM,KAAK,wBACLG,KAAM,GACNF,MAAO/C,EAAME,iBAMvBwP,KAAM0S,EACNvT,WAAY9I,KAAK8I,WACjBoU,uBAAwB,kBAAM,gBAAC,GAAD,OAC9B5E,aAAc,SAACte,EAAM7C,GAAP,OAAiBA,EAAMG,YACrCwkB,eACE,gBAAC,KAAD,CACEC,WAAY/b,KAAK3D,MAAMwe,WACvBC,UAAW9a,KAAK8a,mB,GArQLzd,aA8QnBwU,GAAS/H,KAAWC,OAAO,CAC/BE,UAAW,CACT1J,KAAM,EACN5D,QAAS,MAIE0W,gCAAmBsH,I,+aCxMnBrY,G,mLA3FbjG,MAAQ,CACNkG,KAAM,GACNC,MAAO,I,0DAGY,IAAD,OAClBxC,KAAKyC,UACLzC,KAAKK,SAAWC,aAAY,kBAAM,EAAKmC,YAAW,O,6CAIlD8G,cAAcvJ,KAAKK,Y,gCAGV,IAAD,OACRrI,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiK,GACL,EAAKX,SAAS,CAAEW,YAEjB5J,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAIHoH,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAexE,EAHV,EAGUA,OAAQyE,EAHlB,EAGkBA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAN7B,EAQiBlB,KAAK3D,MAArBkG,EARD,EAQCA,KAAMC,EARP,EAQOA,MAEd,OACE,kBAACrG,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAC9B4F,EAAKvD,KAAI,SAAChF,EAAM7C,GAAP,OACR,kBAAC,UAAD,CACEP,IAAG,IAAMO,EACT6E,MAAO,CAAEgB,MAAO,EAAK8C,MAAMgB,YAAYxE,OAAOrC,MAAME,cAEnDH,EAAK+C,KAJR,KAIgB/C,EAAKiE,QAAS,SAIlC,kBAACuF,GAAA,EAAD,CACExF,MAAOwE,EACPxG,MAAO,CACLS,gBAAiB,OACjByG,SAAU,GACVgD,OAAQ,GACRvJ,QAAS,EACTmC,aAAc,GAEhB2E,YAAa3F,EAAQ,eACrB4F,aAAc,SAAClB,GAAD,OAAW,EAAKZ,SAAS,CAAEY,WACzCmB,gBAAiB,YAAgC,IAAdzE,EAAa,EAA5B0E,YAAe1E,KACjClH,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdzD,QAASiB,MAGV5G,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACiK,GACL,EAAKE,UACL,EAAKb,SAAS,CAAEY,MAAO,QAExB7J,OAAM,SAACC,GACNC,QAAQD,MAAMA,c,GAnFX6H,aCeJ0c,GAfF,SAAC,GAA+C,IAAD,IAA5Crc,YAAeC,EAA6B,EAA7BA,GAAYJ,GAAiB,EAAzBrE,OAAyB,EAAjBqE,UAQzC,OANAnJ,IAAO,YACD,MAACuJ,OAAD,EAACA,EAAI6D,gBACPjE,EAAS,CAAEjG,KAAM,aAAcsD,OAAO,OAKxC,kBAAC7B,EAAA,QAAD,KACE,kBAAC,GAAD,kB,+aCoBS2V,G,sIA3BH,IAAD,EAIH9R,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAeC,EAHV,EAGUA,GAAIzE,EAHd,EAGcA,OAGfwB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAOA,GAAMM,EAAOrC,OAAOgQ,WAC/B,kBAAC,UAAD,CAAMjO,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC2D,EAAQ,mBAGX,kBAAC,GAAD,CACEjC,MAAOiC,EAAQ,qBACfhC,QAAS,WACPshB,UAAQC,QACN,iE,GAnBO5c,aCiCN6S,GAlCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACRtZ,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAElD,OACE,kBAACkC,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,iBAGjB2W,EAAKvU,KAAI,SAACwU,GACT,OACE,kBAACjX,EAAA,EAAD,CACEP,MAAO,CACLuE,KAAM,EACNgB,OAAQ,GACR9E,gBAAiB+W,EAAIC,SACdxZ,EAAMyC,UADI,KAEbzC,EAAMyC,UACVgX,iBAAkB,EAClBC,iBAAkB,QAClB9U,WAAY,SACZjC,eAAgB,UAElBd,QAAS0X,EAAI1X,SAEb,kBAAC,GAAD,KAAI0X,EAAI3X,aCmGLyhB,GAzHU,SAAC,GASnB,IARLrc,EAQI,EARJA,WAQI,KAPJH,YAOI,EANJA,aACEC,EAKE,EALFA,GACAC,EAIE,EAJFA,SACAuc,EAGE,EAHFA,kBAGE,IAFFjhB,OAAUrC,EAER,EAFQA,MAAOyH,EAEf,EAFeA,WAGb5D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG0BzD,oBAAS,GAHnC,WAGY+f,GAHZ,aAI4B/f,mBAAS,MAJrC,WAIGggB,EAJH,KAIaC,EAJb,OAK4BjgB,mBAAS,MALrC,WAKGlF,EALH,KAKa6R,EALb,OAM0C3M,mBAAS,KANnD,WAMGkgB,EANH,KAMoBC,EANpB,OAOoBngB,mBAAS,WAP7B,WAOG/C,EAPH,KAOSgb,EAPT,OAQsBjY,mBAAS,IAR/B,WAQG2a,EARH,KAQUyF,EARV,OASkBpgB,qBATlB,WASGqgB,EATH,KASQC,EATR,KAoCJvmB,IAzBsB,0BAAAiB,EAAAC,OAAA,uDACpB8kB,GAAW,GADS,WAAA/kB,EAAA,MAEDK,GAAI,kBAAkB4I,IAFrB,OAEdsc,EAFc,OAGpBN,EAAYM,GAEZR,GAAW,GALS,+DAXlB,IAqCIrK,EAA+BuD,2BAA/BvD,2BAER,OACE,kBAAChX,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,kBACtC,kBAACT,EAAA,QAAD,KACG5D,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,KAAIuF,EAAQ,uBACZ,kBAAC0F,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO+P,UACpBhM,MAAO2f,EACPja,aAAc,SAACrM,GAAD,OAAOumB,EAAmBvmB,MAG1C,kBAAC,GAAD,CAAG2E,MAAO,CAAE0I,aAAc,KAA1B,QACA,kBAACuZ,GAAD,CACE1K,KAAM,CACJ,CACE1X,MAAOiC,EAAQ,WACfhC,QAAS,kBAAM4Z,EAAQ,YACvBjC,SAAmB,YAAT/Y,GAEZ,CACEmB,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM4Z,EAAQ,SACvBjC,SAAmB,SAAT/Y,GAEZ,CACEmB,MAAOiC,EAAQ,UACfhC,QAAS,kBAAM4Z,EAAQ,WACvBjC,SAAmB,WAAT/Y,MAKhB,kBAAC,GAAD,CAAGsB,MAAO,CAAE8I,UAAW,KAAOhH,EAAQ,yBACtC,kBAAC0F,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO+P,UACpBhM,MAAOoa,EACP1U,aAAc,SAACrM,GAAD,OAAOwmB,EAASxmB,MAGhC,kBAAC,GAAD,CAAG2E,MAAO,CAAE8I,UAAW,GAAIJ,aAAc,KACtC5G,EAAQ,iBADX,KAGA,kBAAC,GAAD,CACEjC,MAAOiiB,EAAMA,EAAII,KAAOpgB,EAAQ,cAChChC,QAAS,WAEP,IAAMqC,EAAUsf,EAASze,KAAI,SAACmf,GAAD,OAC3BrgB,EAAQ,yBAA0BqgB,EAAQD,KAAMC,EAAQC,UAE1DjgB,EAAQuZ,KAAK5Z,EAAQ,WACrB,IACM6Z,EAAoBxZ,EAAQ/E,OAAS,EAE3C+Z,EACE,CACEhV,UACAwZ,oBACAC,4BAP2Bvf,IAS7B,SAAC+a,GACC2K,EAAON,EAASrK,WAQ1B,kBAAC,GAAD,CAAQtX,QAxFG,8BAAArD,EAAAC,OAAA,uDACb8kB,GAAW,GADE,WAAA/kB,EAAA,MAEuBM,GAAK,mBAAoB,CAC3D2I,aACAic,kBACAjjB,OACA0d,QACAiG,MAAK,MAAEP,OAAF,EAAEA,EAAKzL,MAPD,gBAEL3H,EAFK,EAELA,QAASnS,EAFJ,EAEIA,SAOjByI,EAASU,GACT0I,EAAY7R,GACZglB,IACAC,GAAW,GACP9S,GACFzJ,EAAWoF,OAAO,GAdP,8DAwFcxK,MAAOiC,EAAQ,c,UC7G5BtC,IAAW1C,IAAI,UAAzB2C,MAmJO6iB,OAjJf,YAAqD,EAAnCrd,WAAoC,IAATF,EAAQ,EAAvBD,YAAeC,GACrCjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BjH,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAHC,EAI3BwD,mBAAS,IAJkB,WAItC8gB,GAJsC,WAK7CjN,EAAG,2DAAuDvQ,OAAvD,EAAuDA,EAAIhE,MAC9DyhB,EAAgB,qHAAiHzd,OAAjH,EAAiHA,EAAIhE,MAErI0hB,EAAO,WACX/M,KAAUC,UAAUL,GACpBiN,EAAQ,gCAEV,OACE,kBAACpiB,EAAA,QAAD,CAAMH,MAAO,CAAE6C,WAAY,WACzB,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,GAAD,CAAGyC,MAAI,GAAE7K,EAAQ,wBACjB,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAE0I,aAAc,KAC3B,kBAAC,GAAD,KAAI5G,EAAQ,qBACZ,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAACgH,GAAA,EAAD,CACExF,MAAOsT,EACPtV,MAAO,CACLgB,MAAO/C,EAAMgD,cACbR,gBAAiBxC,EAAMyC,UACvB6E,OAAQ,GACRzC,aAAc,GACdjC,kBAAmB,GACnBpB,MAAO,KAETgW,QAASgN,IAEX,kBAAC,GAAD,CAAQ5iB,MAAOiC,EAAQ,cAAehC,QAAS2iB,KAEjD,kBAACtiB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,KAAIf,EAAQ,gBAEZ,kBAACvB,EAAA,EAAD,CACET,QAAS,WACPshB,UAAQC,QAAQmB,KAGlB,kBAACriB,EAAA,QAAD,CACEH,MAAO,CACLkN,WAAY,GACZzM,gBAAiB,UACjBhB,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdlC,eAAgB,SAChBiC,WAAY,WAGd,kBAAC,KAAD,CAAkB9B,KAAK,WAAWC,MAAM,QAAQE,KAAM,OAI1D,kBAACX,EAAA,EAAD,CACET,QAAS,WACPshB,UAAQC,QAAR,wBAC0Bvf,EAAQ,qBAAsBwT,MAI1D,kBAACjQ,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,UAOtC,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,KAAIf,EAAQ,mBACZ,kBAACvB,EAAA,EAAD,CACET,QAAS,WACPshB,UAAQC,QACN,2DAIJ,kBAAClhB,EAAA,QAAD,CACEH,MAAO,CACLkN,WAAY,GACZzM,gBAAiB,UACjBhB,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdlC,eAAgB,SAChBiC,WAAY,WAGd,kBAAC,KAAD,CAAkB9B,KAAK,WAAWC,MAAM,QAAQE,KAAM,OAI1D,kBAACX,EAAA,EAAD,CACEP,MAAO,CAAEkN,WAAY,IACrBpN,QAAS,WACPshB,UAAQC,QAAQ,gDAGlB,kBAAChc,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,OAIhC,kBAAChF,EAAA,EAAD,CACEP,MAAO,CAAEkN,WAAY,IACrBpN,QAAS,WACPshB,UAAQC,QACN,wFAIJ,kBAAChc,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,OAIhC,kBAAChF,EAAA,EAAD,CACEP,MAAO,CAAEkN,WAAY,IACrBpN,QAAS,WACPshB,UAAQC,QACN,8DAIJ,kBAAChc,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,QAIlC,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,MAEvB,kBAAC,UAAD,CAAMvF,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,2BAC4B,IAAIiH,MAAOsd,iB,+aCiB9BC,G,iCArKb,WAAY7e,GAAQ,IAAD,sBACjB,cAAMA,IAURgJ,WAAa,SAAC9O,EAAM7C,GAAW,IAAD,EAIxB,EAAK2I,MAAMgB,YAFbC,EAF0B,EAE1BA,GACU9G,EAHgB,EAG1BqC,OAAUrC,MAGN2kB,EAAOllB,KAAKC,QAAS,MAAFoH,OAAA,EAAAA,EAAI1G,MAAO,KAAOL,EAAKqY,GAAKrY,EAAKqY,KACpDwM,EAAQD,EAAO,GAAK,GAAKA,EAEzBniB,EACJ,EAAKJ,MAAMwE,WAAa7G,EAAKqY,GAAK,eAAYha,EAChD,OACE,kBAACkE,EAAA,EAAD,CACET,QAAS,WACP,EAAK8F,SAAS,CAAEf,SAAU7G,EAAKqY,OAGjC,kBAAClW,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdnC,QAAS,GACTC,eAAgB,gBAChBH,oBAGF,kBAAC,UAAD,CAAMT,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK2H,QACjD,kBAAC,UAAD,CAAM3F,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB0kB,EAA5C,QAvCW,EA6CnB1N,OAAS,WAAO,IACN7U,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAE2X,SAAS,IACzBvhB,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,SACnB4T,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAghB,SAAS,EACT7E,OAAQhb,KAAKgb,SACbD,QAAS,KAEX,EAAK3U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAxED,EA4EnBqa,aAAe,WAAO,IAAD,EACbnV,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAE3D,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAa,EAAKhB,MAAMgB,YACxB2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,SACfhC,QAAS,EAAKqV,SAGhB,kBAAC,GAAD,CAAQrQ,YAAa,EAAKhB,MAAMgB,gBA9FpC,EAAKzE,MAAQ,CACXwE,SAAU,KACVtI,SAAU,KACVkc,QAAS,GACTC,OAAQhb,KAAKgb,UAPE,E,6CAqGT,IAAD,SAOH1U,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MALP,EAQwB+F,KAAK3D,MAA5B9D,EARD,EAQCA,SAEFuF,GAVC,EAQW+C,SAEFlK,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAE9B/C,EAAU,CACd,CACEkU,GAAI,EACJ1Q,OAAQ7D,EAAQ,iBAElB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,iBAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,iBAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,iBAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,kBAIpB,OACE,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG8X,UAAW,MACjC,kBAAC,UAAD,CAAMrc,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAOA,EACP4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7C,kBAACgZ,EAAA,EAAD,KACGpT,EAAQa,IAAIgB,KAAK8I,YAEjB9I,KAAKiT,qB,GA9JGxS,a,8DCJrB,SAASqe,KACP,IAAIC,EAAYC,UAAUD,WAAaC,UAAUC,QAAU3Y,OAAO4Y,MAGlE,MAAI,iBAAiBC,KAAKJ,GACjB,UAGL,WAAWI,KAAKJ,GACX,UAIL,mBAAmBI,KAAKJ,KAAezY,OAAO8Y,SACzC,MAGF,UAGT,IAmBeC,GAnBK,WAalB,MAZmC,YAA/BP,OACFjmB,QAAQuF,IAAI,cACZkI,OAAOzC,SAAStM,QAAQzB,EAAUI,kBAGD,QAA/B4oB,OACFjmB,QAAQuF,IAAI,UACZkI,OAAOzC,SAAStM,QAAQzB,EAAUG,cAGpC4C,QAAQuF,IAAI0gB,MAGV,kBAAC,GAAD,KACE,kBAAC,GAAD,4B,+aCmESQ,G,mLAnGbjjB,MAAQ,CACNgO,MAAO,GACPzR,MAAO,KACP8R,QAAS,M,8CAGF,IAAD,SACsB1K,KAAK3D,MAAzBgO,EADF,EACEA,MADF,EACSE,SACfvS,MAASlC,EAAUC,YAAd,kBAA4C,CAC/C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEiS,YAEtB/R,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GAYL,OAXAhT,QAAQuF,IAAI,eAAgByN,GAExBA,EAAajT,MACf,EAAKgJ,SAAS,CAAE8I,QAAS,KAAM9R,MAAOiT,EAAajT,QAEnD,EAAKgJ,SACH,CAAEhJ,MAAO,KAAM8R,QAASmB,EAAanB,UACrC,eAIGmB,KAERlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOHoH,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACY7G,EAJP,EAIHqC,OAAUrC,MACV8G,EALG,EAKHA,GAIEjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACR8S,SAAU,IACVla,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzCoH,KAAK3D,MAAMqO,QACb,kBAAC,UAAD,CAAM1O,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMqO,SAC3C,KAEJ,kBAACvO,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,UAExC,kBAAC0F,GAAA,EAAD,CACEC,YAAa3F,EAAQ,SACrB0N,qBAAsBvR,EAAMwR,kBAC5B/H,aAAc,SAAC2G,GAAD,OAAW,EAAKzI,SAAS,CAAEyI,WACzCrM,MAAOgC,KAAK3D,MAAMgO,MAClBrO,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAOA,EACP6B,QAAS,kBAAM,EAAKqP,SACpBtP,MAAOiC,EAAQ,oB,GA3FTT,IAAMoD,W,o/BC0UX8e,G,mLAhUbljB,MAAQ,CACNmjB,SAAU,KACVC,YAAY,G,EA8BdC,YAAc,WAAO,IACXpjB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OADU,EAES,EAAKD,MAAxBR,EAFU,EAEVA,MAAOoC,EAFG,EAEHA,QACfjG,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd7F,QACAoC,cAGD3F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,SAAUmS,EAAc,EAAdA,QACjB,EAAK9I,SAAS,CAAErJ,aACZmS,IACF,EAAKiV,YACL,EAAK/d,SAAS,CAAEge,UAAU,EAAOC,WAAW,QAG/ClnB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBknB,cAAgB,WAAO,IACbxjB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OACA2B,EAAY,EAAK5B,MAAjB4B,QACRpF,QAAQuF,IAAI,oBACZpG,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd2Q,GAAI,EAAKhW,MAAMwjB,UACftnB,SAAU0F,MAGX3F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLM,QAAQuF,IAAI,WAAY7F,GACxB,EAAKqJ,SAAS,CAAE3D,QAAS,OACzB,EAAK8hB,eAAe,EAAK1jB,MAAMwjB,cAEhClnB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBmnB,eAAiB,SAAC1N,GAAQ,IAChB/V,EAAW,EAAKwD,MAAMgB,YAAtBxE,OACRtE,MACKlC,EAAUC,YADV,gBACqCuG,EAAOoF,WAD5C,OAC6D2Q,EAChE,CACEva,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKqJ,SAAS,CAAEoe,MAAOznB,OAExBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,0DAnGC,IAAD,EAClBoH,KAAK2f,YAEL,IAAMtjB,EAAK,SAAG2D,KAAKF,MAAMmB,WAAW5E,MAAMgV,aAA/B,EAAG,EAAoChV,MAC9CA,GACF2D,KAAK4B,SAASvF,K,kCAIL,IAAD,OACFC,EAAW0D,KAAKF,MAAMgB,YAAtBxE,OACRtE,MAASlC,EAAUC,YAAd,iBAA0CuG,EAAOoF,WAAc,CAClE5J,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKqJ,SAAS,CAAEqe,OAAQ1nB,OAEzBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,kCAgFP,IAAD,SAGNoH,KAAKF,MADPgB,YAAexE,EAFP,EAEOA,OAAQyE,EAFf,EAEeA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAACqQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACxBP,KAAK3D,MAAM9D,SAAW,kBAAC,GAAD,KAAIyH,KAAK3D,MAAM9D,SAASA,UAAgB,KAC/D,kBAACiL,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO+P,UAC3BvG,YAAa3F,EAAQ,SACrB0N,qBAAsBlP,EAAOrC,MAAMwR,kBACnCzN,MAAOgC,KAAK3D,MAAMR,MAClB6H,aAAc,SAAC7H,GAAD,OAAW,EAAK+F,SAAS,CAAE/F,aAE3C,kBAAC2H,GAAA,EAAD,CACE+X,WAAS,EACT/P,qBAAsBlP,EAAOrC,MAAMwR,kBACnCzI,cAAe,EACfhH,MAAK,SAAOA,GAAMM,EAAOrC,OAAO+P,WAA3B,IAAsCzI,OAAQ,MACnDkC,YAAa3F,EAAQ,WACrBE,MAAOgC,KAAK3D,MAAM4B,QAClByF,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAE7C,kBAAC,GAAD,CACEhE,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,QACfhC,QAASkE,KAAK0f,iB,qCAMN,IAAD,SAEI3e,EACbf,KAAKF,MADPgB,YAAeC,GAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAACwI,GAAA,EAAD,CACEC,KAAI,SAAE3J,KAAK3D,MAAM4jB,aAAb,EAAE,EAAmBA,OACzB/C,uBAAwB,kBACtB,kBAAC/gB,EAAA,QAAD,CACEH,MAAO,CAAEuF,OAAQ,GAAK9E,gBAAiB,OAAQhB,MAAO,WAG1DqN,WAAY,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAkB,EAAZ7C,MACnB,OACE,kBAACoF,EAAA,EAAD,CACET,QAAS,WACP,EAAKikB,eAAe/lB,EAAKqY,IACzB,EAAKzQ,SAAS,CAAEie,UAAW7lB,EAAKqY,OAGlC,kBAAClW,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,GAAD,KACGmB,EAAQ,UADX,KACwB9D,EAAK+C,MAE7B,kBAAC,GAAD,KACGe,EAAQ,SADX,KACuB9D,EAAK6B,OAE5B,kBAAC,GAAD,KACGiC,EAAQ,gBADX,IAC6B,IAC1Bgf,KAAO9iB,EAAKkmB,WAAWhG,OAAO,gBAEjC,kBAAC,GAAD,KACGlgB,EAAKmmB,UADR,IACoBriB,EAAQ,iBAMpCwa,aAAc,SAACte,EAAM7C,GAAP,aAAwBA,O,kCAK/B,IAAD,SAGN6I,KAAKF,MADPgB,YAAexE,EAFP,EAEOA,OAAQyE,EAFf,EAEeA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BlH,EAAOgG,KAAK3D,MAAM2jB,MACxB,OAAOhmB,EACL,kBAACuX,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN2F,OAAQ,GACRvJ,QAAS,GACTmG,YAAa,EACbC,YAAa,UAGf,kBAAC,GAAD,KACGjF,EAAQ,UADX,KACwB9D,EAAKgmB,MAAMjjB,MAEnC,kBAAC,GAAD,KACGe,EAAQ,SADX,KACuB9D,EAAKgmB,MAAMnkB,OAElC,kBAAC,GAAD,KAAI7B,EAAKgmB,MAAM/hB,SACf,kBAAC,GAAD,KACGjE,EAAKmmB,UAAU/mB,OADlB,IAC2B0E,EAAQ,eAIrC,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIzC,EAAQ,aAAZ,KACC9D,EAAKmmB,UAAUnhB,KAAI,SAACzG,GACnB,OACE,kBAAC4D,EAAA,QAAD,CACEvF,IAAG,OAAS2B,EAAS8Z,GACrBrW,MAAO,CACL8G,YAAa,EACbC,YAAa,QACbpG,QAAS,GACT8M,eAAgB,KAGlB,kBAACtN,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACV/B,gBAAiBH,EAAOrC,MAAMyC,UAC9B+B,KAAM,GACNK,aAAc,GACdjC,kBAAmB,GACnBoZ,gBAAiB,IAGnB,kBAAC,GAAD,KACG1d,EAASwE,KADZ,MACqB,IAClB+f,KAAOvkB,EAAS6nB,WAAWlG,OAAO,iBAGvC,kBAAC,GAAD,KAAI3hB,EAAS0F,cAMrB,kBAAC9B,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACE+X,WAAS,EACTvY,cAAe,EACfhH,MAAOA,GAAMM,EAAOrC,OAAO+P,UAC3BwB,qBAAsBlP,EAAOrC,MAAMwR,kBACnChI,YAAa3F,EAAQ,SACrBE,MAAOgC,KAAK3D,MAAM4B,QAClByF,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAE7C,kBAAC,GAAD,CACEhE,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,QACfhC,QAASkE,KAAK8f,kBAKpB,kBAAC,GAAD,KAAIhiB,EAAQ,oB,+BAIN,IAAD,SAGHkC,KAAKF,MADPgB,YAAuBC,GAFlB,EAEUzE,OAFV,EAEkByE,IAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAL7B,EAOyBlB,KAAK3D,MAA7BujB,EAPD,EAOCA,SAAUC,EAPX,EAOWA,UAClB,OACE,kBAAC1jB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CACEgT,KAAM,CACJ,CACE1X,MAAOiC,EAAQ,YACfhC,QAAS,kBACP,EAAK8F,SAAS,CAAEge,UAAU,EAAMC,WAAW,KAC7CpM,SAAUzT,KAAK3D,MAAMujB,UAGvB,CACE/jB,MAAOiC,EAAQ,UACfhC,QAAS,kBACP,EAAK8F,SAAS,CAAEge,UAAU,EAAOC,WAAW,KAC9CpM,UAAkC,IAAxBzT,KAAK3D,MAAMujB,WAAoC,IAAdC,MAKhDD,EACG5f,KAAKqgB,YACLR,EACA7f,KAAK6f,YACL7f,KAAKsgB,oB,GA3TM7f,a,SC4ER8f,GApFF,SAAC,GAAqC,IAAnChO,EAAkC,EAAlCA,KAAMtR,EAA4B,EAA5BA,WAA4B,IAAhB/D,YAAgB,MAAT,GAAS,EAC1CjD,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAE5C+C,EAAQjD,GAAawY,EAAMtY,GAC3BumB,GAAYpf,KAAKzG,MAAQ4X,EAAKkO,UAAY,IAAQ,EAElDC,EACW,IAAfnO,EAAK1C,MACD,eACe,IAAf0C,EAAK1C,MACL,eACe,KAAf0C,EAAK1C,MACL,eACA,KAEA8Q,EAAqC,OAA3BlqB,EAAU8b,EAAKrR,QAAmB,2BAAS,eAE3D,OACE,kBAAC3E,EAAA,EAAD,CACET,QAAS,WACPmF,EAAWgC,SAAS,UAAW,CAAElG,KAAMwV,EAAKxV,QAE9Cf,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAE3C,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiBxC,EAAMmR,QACvBtM,aAAc5B,EAAO,EACrB4F,YAAa,EACbC,YAAa9I,EAAMyC,YAGpB6V,EAAKlC,UACJ,kBAAChP,EAAA,EAAD,CACEC,OAAQ,CAAEsT,IAAK9e,EAAUC,YAAcwc,EAAKlC,WAC5CrU,MAAO,CAAEP,MAAOyB,EAAMqE,OAAQrE,EAAM4B,aAAc5B,EAAO,KAG3D,kBAACmE,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAOyB,EAAMqE,OAAQrE,EAAM4B,aAAc5B,EAAO,KAG7D,kBAACf,EAAA,QAAD,CAAMH,MAAO,CAAEwC,SAAU,WAAYC,IAAK,EAAGG,MAAO,IAClD,kBAAC,GAAD,KAAI4hB,EAAW,SAAM,iBAGtBE,GACC,kBAACvkB,EAAA,QAAD,CAAMH,MAAO,CAAEwC,SAAU,WAAYE,OAAQ,EAAGE,MAAO,IACrD,kBAAC,GAAD,KAAI8hB,IAIPnO,EAAKjN,MAAQiN,EAAKjN,KAAK+K,WACtB,kBAAClU,EAAA,QAAD,CACEH,MAAO,CACLwC,SAAU,WACVC,KAAM,GAAMvB,EACZyB,MAAO,GAAMzB,IAGf,kBAACmE,EAAA,EAAD,CACEC,OAAQ,CAAEsT,IAAK9e,EAAUC,YAAcwc,EAAKjN,KAAK+K,WACjDrU,MAAO,CACLP,MAAOyB,EAAO,EACdqE,OAAQrE,EAAO,EACf4B,aAAc5B,EAAO,MAM7B,kBAACf,EAAA,QAAD,CAAMH,MAAO,CAAEwC,SAAU,WAAYE,OAAQ,EAAGC,KAAM,IACpD,kBAAC,GAAD,KAAIgiB,KAGR,kBAACxkB,EAAA,QAAD,CAAMH,MAAO,CAAEkN,WAAY,KACzB,kBAAC,GAAD,CAAGlN,MAAO,CAAEgB,UAAUuV,EAAKxV,MAC1BwV,EAAKjN,MAAQ,kBAAC,GAAD,KAAIiN,EAAKjN,KAAKvI,SC2ErB6jB,IAtIGplB,IAAW1C,IAAI,UAAzB2C,MAGM,SAAC,GAUR,IAAD,EATJwF,EASI,EATJA,WASI,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAIU9G,GAER,EALFob,OAKE,EAJFrU,SAIE,EAHFsU,aAGE,EAFFhZ,OAAUrC,OAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAE0BzD,oBAAS,GAFnC,WAEG8b,EAFH,KAEYiE,EAFZ,OAGoB/f,mBAAS,IAH7B,WAGGzD,EAHH,KAGS6mB,EAHT,OAI4BpjB,mBAAS,MAJrC,WAIGlF,EAJH,KAIa6R,EAJb,KAMErN,EAAI,SAAGkE,EAAW5E,MAAMgV,aAApB,EAAG,EAAyBtU,KAUhC+jB,EAAe,4BAAAroB,EAAAC,OAAA,uDACnB8kB,GAAW,GADQ,WAAA/kB,EAAA,MAGQM,GAAK,WAAY,CAC1C0I,MAAOnF,EAAOoF,WACd3E,UALiB,gBAGXxE,EAHW,EAGXA,SAIRilB,GAAW,GACXpT,EAAY7R,GARO,6DAWrBf,IAnBgB,0BAAAiB,EAAAC,OAAA,uDACd8kB,GAAW,GADG,WAAA/kB,EAAA,MAGKK,GAAI,aAAaiE,IAHtB,OAGRuI,EAHQ,OAIdkY,GAAW,GACXqD,EAAQvb,GALM,+DAgChB,OACE,kBAACnJ,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAC/B,kBAAC+M,GAAA,EAAD,CACEE,oBAAqB,WACnB,OACE,kBAACzN,EAAA,QAAD,CACEH,MAAO,CAAEkK,OAzDR,GAyDwB1J,cAAe,MAAOwI,SAAU,SAEzD,kBAAC7I,EAAA,QAAD,KACGnC,EAAKoW,MACJ,kBAAC/O,EAAA,EAAD,CACEC,OAAQ,CAAEsT,IAAK9e,EAAUC,YAAciE,EAAKoW,OAC5CpU,MAAO,CAAEP,MAhEhB,IAgE6B8F,OAhE7B,KAiEO6Z,WAAW,UAGb,kBAAC/Z,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAtEhB,IAsE6B8F,OAtE7B,QA0EC,kBAACpF,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAzEd,KA0EEqT,EAAU,kBAAChO,GAAA,EAAD,MAAwB,KACnC,kBAAC,GAAD,KACGzN,EAAQ,QADX,KACsB9D,EAAK+C,MAE3B,kBAAC,GAAD,KACGe,EAAQ,WADX,KACyB9D,EAAKyhB,SAE9B,kBAAC,GAAD,KACG3d,EAAQ,QADX,WACuB1G,EAAa4C,EAAKwL,MADzC,MAGA,kBAAC,GAAD,KACG1H,EAAQ,SADX,KACuB9D,EAAK+mB,SAE3B,MAAChgB,OAAD,EAACA,EAAIuE,QACH/M,EACC,kBAAC,GAAD,KAAIA,GAEJ,kBAAC,GAAD,CACEuD,QAASglB,EACTjlB,MAAOiC,EAAQ,eACf7D,MAAOA,QAOrB0P,KAAM3P,EAAKgnB,MACX1I,aAAc,SAACte,EAAM7C,GAAP,aAAwBA,GACtC2R,WAAY,YAAsB,IA/DlBmY,EA+DDjnB,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MACDiK,KAAKzG,MAAQX,EAAKymB,SAEtB1mB,GAAaC,EAAMC,GAEjC,OACE,kBAAC,KAAD,CACErD,IAAG,OAASO,EACZ6E,MAAO,CACLa,kBAAmB,KAGrB,kBAAC,KAAD,CAAKb,MAAO,CAAEyN,eAAgB,IAC5B,kBAAC,GAAD,CAAMxI,WAAYA,EAAYsR,KAAMvY,KAEtC,kBAAC,KAAD,CAAKgC,MAAO,CAAEY,eAAgB,WAC5B,kBAAC,GAAD,MA/EQqkB,EA+ESjnB,EAAKinB,UA9ElCnjB,EA7CoB,IA8ClBmjB,EACI,gBAjDmB,IAkDnBA,EACA,qBAlDc,IAmDdA,EACA,gBACA,sBAyEI,kBAAC,KAAD,CAAKjlB,MAAO,CAAEY,eAAgB,WAC5B,kBAAC,GAAD,qBAAO5C,EAAK2L,OAAZ,aCvIDub,GAZJ,SAAC,GAAkB,IAAhB1jB,EAAe,EAAfA,SACNvD,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SAElD,OACE,kBAAC,UAAD,CACE+B,MAAO,CAAEkH,SAAU,GAAInE,WAAY,OAAQ/B,MAAO/C,EAAME,cAEvDqD,IC0DQ2jB,GA/DU,SAAC,GAUpB,EATJlgB,WASK,IAAD,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAOIjD,GADF,EALFuX,OAKE,EAJFrU,SAIE,EAHFsU,aAGE,EAFFhZ,OAAUrC,MAGItD,EAAe,MAACoK,OAAD,EAACA,EAAIG,SADhC,EAGwBzD,mBAAS,CAAElF,SAAUuF,EAAQ,aAHrD,WAGGgc,EAHH,KAGWsH,EAHX,OAI0B3jB,oBAAS,GAJnC,WAIY+f,GAJZ,WAeJ,OAFAhmB,IAP4B,0BAAAiB,EAAAC,OAAA,uDAC1B8kB,GAAW,GADe,WAAA/kB,EAAA,MAELK,GAAI,0BAA0BwD,EAAOoF,aAFhC,OAEpBoY,EAFoB,OAG1BsH,EAAUtH,GACV0D,GAAW,GAJe,+DAU1B,kBAACjM,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACpCmd,EAAOvhB,SACN,kBAAC,GAAD,KAAIuhB,EAAOvhB,UAEX,kBAAC4D,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CAAMH,MAAO,CAAE0I,aAAc,KAC3B,kBAAC,GAAD,KACG5G,EAAQ,SADX,KACuBgc,EAAOsE,QAG/BtE,EAAOuH,cACN5J,OAAOvD,KAAK4F,EAAOuH,cAAcriB,KAAI,SAACpI,GACpC,IAAM0qB,EAAQxH,EAAOuH,aAAazqB,GAElC,OACE,kBAACuF,EAAA,QAAD,CAAMH,MAAO,CAAE0I,aAAc,KAC3B,kBAAC,GAAD,CAAGiE,MAAI,GAAE7K,EAAQlH,IACjB,kBAAC,GAAD,KACGkH,EAAQ,WADX,KACyBwjB,EAAMC,SAE/B,kBAAC,GAAD,KACGzjB,EAAQ,SADX,KACuBwjB,EAAMzR,OAE7B,kBAAC,GAAD,KACG/R,EAAQ,QADX,IACqB,IAClBwjB,EAAME,KAAOF,EAAME,KAAO1jB,EAAQ,sBAOjD,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QCbdkgB,GA5CI,SAAC,GAUd,EATJxgB,WASK,IAAD,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAEAC,GAIE,EALFqU,OAKE,EAJFrU,UAEU/G,GAER,EAHFqb,aAGE,EAFFhZ,OAAUrC,OAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,KAGa6R,EAHb,OAIoB3M,mBAAS,IAJ7B,WAIGV,EAJH,KAISoN,EAJT,KAeJ,OACE,kBAACoH,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACpCpE,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAACiL,GAAA,EAAD,CACExF,MAAOjB,EACP2G,aAAcyG,EACdnO,MAAOA,GAAM/B,GAAO+P,UACpBvG,YAAY,OACZ+H,qBAAsBvR,EAAMwR,oBAE9B,kBAAC,GAAD,CACE3P,QApBiB,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACMM,GAAK,aAAc,CAC5CgE,OACA0E,MAAOnF,EAAOoF,cAHK,gBACbnJ,EADa,EACbA,SAIRyI,EAAS1E,EAAOoF,YAChB0I,EAAY7R,GANS,6DAqBjBsD,MAAOiC,EAAQ,iBACf7D,MAAOA,MCJAwnB,GArCI,SAAC,GAUd,EATJxgB,WASK,IAAD,IARJH,YAEEC,GAME,EAPFzE,OAOE,EANFyE,IAGAuU,GAGE,EALFD,OAKE,EAJFrU,SAIE,EAHFsU,cAGE,KAFFhZ,OAAUrC,MAGItD,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEJzD,mBAAS,OAHrC,wBAIkDA,mBAAS,OAJ3D,wBAKwBA,mBAAS,KALjC,wBAMoBA,mBAAS,SAN7B,qBAOJjG,GAAO8d,GAaP,OACE,kBAAC/D,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAACR,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QCrBrB9F,GAAUD,IAAW1C,IAAI,UAAzB2C,MAsHOmlB,GAnHD,SAAC,GAUR,IATL3f,EASI,EATJA,WASI,IARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAOIjD,GADF,EALFuX,OAKE,EAJFrU,SAIE,EAHFsU,aAGE,EAFFhZ,OAAUrC,MAGItD,EAAe,MAACoK,OAAD,EAACA,EAAIG,SADhC,EAE0BzD,oBAAS,GAFnC,WAEG8b,EAFH,KAEYiE,EAFZ,OAG4B/f,mBAAS,MAHrC,WAGGlF,EAHH,KAGa6R,EAHb,OAIsB3M,mBAAS,IAJ/B,WAIGikB,EAJH,KAIUC,EAJV,OAK0BlkB,mBAAS,IALnC,WAKGmkB,EALH,KAKYC,EALZ,KAOEC,EAAW,4BAAArpB,EAAAC,OAAA,uDACf8kB,GAAW,GADI,WAAA/kB,EAAA,MAESK,GAAI,UAFb,gBAEP4oB,EAFO,EAEPA,MACRlE,GAAW,GACXmE,EAASD,GAJM,6DAcXK,EAAuB,SAAO1P,EAAI2P,GAAX,iBAAAvpB,EAAAC,OAAA,kEAAAD,EAAA,MACAM,GAAK,mBAAoB,CAClD0I,MAAOnF,EAAOoF,WACd2Q,KACA2P,cAJyB,gBACnBzpB,EADmB,EACnBA,SAKR6R,EAAY7R,GANe,6DAY7B,OAHAf,GAAOsqB,GACPtqB,IAjBmB,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACmBK,GAAI,qBACjBwD,EAAOoF,aAFb,kBACTugB,SAAUL,EADD,EACCA,QAGlBC,EAAWD,GAJM,+DAoBjB,kBAACzlB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAC9BpE,GAAY,kBAAC,GAAD,KAAIA,GAChBqpB,EAAQxoB,OAAS,GAChBwoB,EAAQ5iB,KAAI,SAACkjB,EAAQ/qB,GACnB,OACE,kBAACgF,EAAA,QAAD,CAAMvF,IAAG,SAAWO,EAAS6E,MAAO,CAAEQ,cAAe,QACnD,kBAAC,GAAD,KAAIsB,EAAQ,gBAAiBokB,EAAOC,WACpC,kBAAC,GAAD,CACEtmB,MAAOiC,EAAQ,UACfhC,QAAS,kBAAMimB,EAAqBG,EAAO7P,IAAI,MAEjD,kBAAC,GAAD,CACExW,MAAOiC,EAAQ,WACfhC,QAAS,kBAAMimB,EAAqBG,EAAO7P,IAAI,UAMzD,kBAAC3I,GAAA,EAAD,CACEqS,WAAYxC,EACZuB,UAAWgH,EACXnY,KAAM+X,EACNU,WACkB,QAAhB/jB,UAASC,QACLjG,EACAqB,KAAKsP,MAAMvN,GAAK,KAEtBogB,sBACkB,QAAhBxd,UAASC,GACL,CAAE9B,cAAe,MAAOwI,SAAU,aAClC3M,EAENigB,aAAc,SAACte,EAAM7C,GAAP,aAAwBA,GACtC2R,WAAY,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAkB,EAAZ7C,MAGnB,OACE,kBAACoF,EAAA,EAAD,CAAkBT,QAHH,kBACfmF,EAAWgC,SAAS,OAAQ,CAAElG,KAAM/C,EAAK+C,QAEJf,MAAO,CAAEkK,OAnF3C,KAoFAlM,EAAKqW,UACJ,kBAAChP,EAAA,EAAD,CACEC,OAAQ,CAAEsT,IAAK9e,EAAUC,YAAciE,EAAKqW,WAC5CrU,MAAO,CAAEP,MAxFd,IAwF2B8F,OAxF3B,KAyFK6Z,WAAW,UAGb,kBAAC/Z,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MA9Fd,IA8F2B8F,OA9F3B,OAiGC,kBAAC,GAAD,KACGzD,EAAQ,QADX,KACsB9D,EAAK+C,MAE3B,kBAAC,GAAD,KACGe,EAAQ,WADX,KACyB9D,EAAKyhB,SAE9B,kBAAC,GAAD,KACG3d,EAAQ,QADX,WACuB1G,EAAa4C,EAAKwL,MADzC,MAGA,kBAAC,GAAD,KACG1H,EAAQ,SADX,KACuB9D,EAAK+mB,a,6BC7G1CsB,KAAUC,uCACRD,KAAUC,uCAAsC,GAElD,IAQMC,GAAU,SAAO3rB,GAAP,eAAA6B,EAAAC,OAAA,2EAAAD,EAAA,MAEQ+pB,KAAaC,QAAQ7rB,IAF7B,UAGE,QADRoH,EAFM,iDAIHA,GAJG,qCAOH3F,GAPG,uFAWLA,GAXK,kEA4EDqqB,GA7DC,SAAC,GAA2C,IAAzCrQ,EAAwC,EAAxCA,GAAIxW,EAAoC,EAApCA,MAAO2B,EAA6B,EAA7BA,SAAUmlB,EAAmB,EAAnBA,aAChC1oB,EAAQmC,aAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOrC,SADO,EAGzBwD,oBAAS,GAHgB,WAGlDmlB,EAHkD,KAGxCC,EAHwC,OAI3BplB,oBAAS,GAJkB,WAIlD8b,EAJkD,KAIzCiE,EAJyC,KAgBzD,OAVA7lB,qBAAU,YACR,WAAC,QAAAc,EAAAC,OAAA,kEAAAD,EAAA,MAC0B8pB,GAAQ,YAAYlQ,IAD9C,YAEoBha,KADbyqB,EADP,SAGGD,EAA2B,SAAfC,GAEdtF,GAAW,GALZ,4DAAD,KAOC,IAGD,kBAACrhB,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiB3C,GAAWG,EAAMmR,SAClClF,OAAQ,GACRvJ,QAAS,GACTmC,aAAc,GACdrD,MAC0B,kBAAjBknB,EACHA,EACAA,EAAe,KAGvB,kBAACpmB,EAAA,EAAD,CACET,QAAS,WArDC,IAAOlF,EAAKoH,EAsDpB+kB,KAAgBC,SAChBH,GAAaD,GAvDEhsB,EAwDL,YAAYyb,EAxDFrU,EAwDQ7E,QAAQypB,GAxD5B,EAAAnqB,EAAAC,OAAA,2EAAAD,EAAA,MAER+pB,KAAa3B,QAAQjqB,EAAKoH,IAFlB,sHA0DVhC,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,WAGd,kBAAC,GAAD,CAAG8J,MAAI,GAAE9M,GACT,kBAACiK,GAAA,EAAD,CACE/I,KAAM6lB,EAAW,UAAY,YAC7B5lB,MAAO/C,EAAME,eAIjB,kBAACgC,EAAA,QAAD,CACE8mB,SAAU,SAACC,GAAW,IAAD,EACWA,EAAMtf,YAAYuf,OAD7B,EACb9rB,EADa,EACV+rB,EADU,EACP3nB,MADO,EACA8F,SAKpBqhB,IAAarJ,GAAW/b,K,GCvEPhC,IAAW1C,IAAI,UAAjCyI,G,GAAAA,OA8eO8hB,I,GA9eC5nB,MAKK,SAAC,GAOf,IAAD,kBANJqF,YACExE,EAKE,EALFA,OACAyE,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAE4BzD,mBAAS,MAFrC,WAEGlF,EAFH,KAEa6R,EAFb,OAG0B3M,oBAAS,GAHnC,WAGG8b,EAHH,KAGYiE,EAHZ,OAI4B/f,mBAAS,IAJrC,WAIGwkB,EAJH,KAIaqB,EAJb,OAKoB7lB,mBAAS,IAL7B,WAKG6H,EALH,KAKSie,EALT,OAM4B9lB,mBAAS,IANrC,WAMG+lB,EANH,KAMaC,EANb,OAO4BhmB,mBAAS,IAPrC,WAOG0kB,EAPH,aAQ0B1kB,oBAAW,MAAFsD,GAAA,SAAAA,EAAIuE,WAAJ,IAAUoe,UAAW,KARxD,WAQGA,GARH,KAQYC,GARZ,QASoBlmB,oBAAW,MAAFsD,GAAA,SAAAA,EAAIuE,WAAJ,IAAUvI,OAAQ,IAT/C,aASGA,GATH,MASSoN,GATT,SAUsB1M,oBAAW,MAAFsD,GAAA,SAAAA,EAAIuE,WAAJ,IAAU8K,QAAS,IAVlD,aAUGA,GAVH,MAUUwT,GAVV,SAW8BnmB,oBAAS,GAXvC,aAWGomB,GAXH,MAWcC,GAXd,SAYwBrmB,mBAAS,IAZjC,aAYGqW,GAZH,MAYW2B,GAZX,MAaItC,GAA+BuD,2BAA/BvD,2BAEF4Q,GAAa1mB,IAAM2mB,WAAW5mB,IAE9B6mB,GAAU,4BAAAxrB,EAAAC,OAAA,uDACd8kB,GAAW,GADG,WAAA/kB,EAAA,MAGKK,GAAI,cAAD,MAAciI,GAAd,SAAcA,EAAIuE,WAAlB,EAAc,EAAUvI,QAHhC,OAGRuI,EAHQ,OAIdkY,GAAW,GACX+F,EAAQje,GALM,6DAeV4e,GAAqB,SAAO7R,EAAI2P,GAAX,iBAAAvpB,EAAAC,OAAA,uDACzB8kB,GAAW,GADc,WAAA/kB,EAAA,MAEEM,GAAK,iBAAkB,CAChD0I,MAAOnF,EAAOoF,WACd2Q,KACA2P,cALuB,gBAEjBzpB,EAFiB,EAEjBA,SAKRilB,GAAW,GACXpT,EAAY7R,GARa,6DAkCrB4rB,GAAsB,SAAOC,GAAP,iBAAA3rB,EAAAC,OAAA,uDAC1B8kB,GAAW,GADe,WAAA/kB,EAAA,MAECM,GAAK,kBAAmB,CACjD0I,MAAOnF,EAAOoF,WACdoS,UACAsQ,WACAP,gBANwB,gBAElBtrB,EAFkB,EAElBA,SAMRyI,EAAS1E,EAAOoF,YAChB8b,GAAW,GACXpT,EAAY7R,GAVc,6DAatB8rB,GAAgB,8BAAA5rB,EAAAC,OAAA,mDAChBypB,KAAQ,MAAKphB,GAAL,SAAKA,EAAIuE,WAAT,EAAK,EAAUvI,MADP,uBAElBa,MAAME,EAAQ,yBAFI,iCAMpB0f,GAAW,GANS,WAAA/kB,EAAA,MAOOM,GAAK,YAAa,CAC3C0I,MAAOnF,EAAOoF,cARI,gBAOZnJ,EAPY,EAOZA,SAGRilB,GAAW,GACXpT,EAAY7R,GAXQ,8DAwBhB+rB,GAAe,SAACrD,GAAD,OACnBnjB,EAjHoB,IAkHlBmjB,EACI,gBArHmB,IAsHnBA,EACA,qBAtHc,IAuHdA,EACA,gBACA,oBAGFsD,GAAiB,8BAAA9rB,EAAAC,OAAA,mDACjBypB,KAAQ,MAAKphB,GAAL,SAAKA,EAAIuE,WAAT,EAAK,EAAUvI,MADN,uBAEnBa,MAAME,EAAQ,yBAFK,iCAMrB0f,GAAW,GANU,WAAA/kB,EAAA,MAOMM,GAAK,aAAc,CAC5C0I,MAAOnF,EAAOoF,cARK,gBAObnJ,EAPa,EAObA,SAGRilB,GAAW,GACXpT,EAAY7R,GACZyI,EAAS1E,EAAOoF,YAZK,8DA4BvBlK,IArHuB,4BAAAiB,EAAAC,OAAA,uDACrB8kB,GAAW,GADU,WAAA/kB,EAAA,MAEMK,GAAI,qBAAqBwD,EAAOoF,aAFtC,gBAEbugB,EAFa,EAEbA,SACRzE,GAAW,GACX8F,EAAYrB,GAJS,+DAsHvBzqB,GAAOysB,IAEP,IAAMO,GAAa,SAAC9H,GAElB,IAAMve,EAAU,CACdL,EAAQ,mBACRA,EAAQ,iBACRA,EAAQ,sBACRA,EAAQ,kBAEVK,EAAQuZ,KAAK5Z,EAAQ,WACrB,IACM6Z,EAAoBxZ,EAAQ/E,OAAS,EAE3C+Z,GACE,CACEhV,UACAwZ,oBACAC,4BAP2Bvf,IAS7B,SAAC+a,GACKA,EAAc,GAnCA,SAAOsJ,EAAQriB,GAAf,UAAA5B,EAAAC,OAAA,uDACtB8kB,GAAW,GADW,WAAA/kB,EAAA,MAEKM,GAAK,cAAe,CAC7C0I,MAAOnF,EAAOoF,WACdgb,SACAriB,UALoB,gBAEd9B,EAFc,EAEdA,SAKRilB,GAAW,GACXpT,EAAY7R,GACZyI,EAAS1E,EAAOoF,YAChBuiB,KAVsB,4DAoChBQ,CAAgB/H,EAAQtJ,EAAc,OAMxC+F,GAAqB,0BAAA1gB,EAAAC,OAAA,mDACL,QAAhB2F,UAASC,IAAgC,YAAhBD,UAASC,GADb,kCAAA7F,EAAA,MAEE2gB,IAAqBA,MAFvB,gBAGR,YAHQ,EAEfC,QAENzb,MAAME,EAAQ,2BAJO,6DAiC3B,OACE,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3B+c,GAAW,kBAAChO,GAAA,EAAD,MACXhT,GAAY,kBAAC,GAAD,KAAIA,IAEnB,kBAACgZ,EAAA,EAAD,CACEsK,sBAAuB,CACrBta,OAAwB,QAAhBlD,UAASC,GAAeiD,QAASlJ,GAE3C2D,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,MAE1B,MAACoE,GAAD,SAACA,EAAIuE,WAAL,EAAC,EAAU+M,IAGV,kBAAClW,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOwI,SAAU,SAC7C,kBAAC,GAAD,CACEnJ,MAAOiC,EAAQ,cACf6kB,aAAc,IACdtQ,GAAG,sBAEH,kBAAC,GAAD,KAAIvU,EAAQ,aAAcwmB,GAAY,MAACvjB,OAAD,EAACA,EAAIkgB,eAI1C,MAAFlgB,OAAA,EAAAA,EAAIkgB,YAhPY,EAiPf,kBAAC,GAAD,CACEplB,MAAOiC,EAAQ,yBACf6kB,aAAc,IACdtQ,GAAG,sBAEF4P,EAAS7oB,OAAS,EACjB6oB,EAASjjB,KAAI,SAAC0lB,GAAa,IAAD,EACxB,OACE,kBAACvoB,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,kBAGlB,kBAAC,GAAD,cAAI8nB,EAAQnS,WAAZ,EAAI,EAAcxV,MAClB,kBAACZ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,CACEX,MAAOiC,EAAQ,UACfhC,QAAS,kBAAMooB,GAAmBQ,EAAQrS,IAAI,MAEhD,kBAAC,GAAD,CACExW,MAAOiC,EAAQ,WACfhC,QAAS,kBACPooB,GAAmBQ,EAAQrS,IAAI,WAQ3C,kBAAC,GAAD,KAAIvU,EAAQ,oBAGd,MAGD,MAAFiD,OAAA,EAAAA,EAAIkgB,YAtRY,EAuRf,kBAAC,GAAD,CACEplB,MAAOiC,EAAQ,gBACf6kB,aAAc,IACdtQ,GAAG,kBAEH,kBAAClW,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAACgH,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO6V,GAAO5X,GAAO+P,UACrBhM,MAAOwlB,EACP9f,aAAc+f,EACdhgB,YAAa3F,EAAQ,UAEvB,kBAAC,GAAD,CACEjC,MAAOiC,EAAQ,UACfhC,QAnOK,4BAAArD,EAAAC,OAAA,uDACrB8kB,GAAW,GADU,WAAA/kB,EAAA,MAEMM,GAAK,aAAc,CAC5C0I,MAAOnF,EAAOoF,WACd3E,KAAMymB,KAJa,gBAEbjrB,EAFa,EAEbA,SAIRilB,GAAW,GACXpT,EAAY7R,GAPS,6DAoOLyD,MAAO,CAAEuE,KAAM,EAAGkJ,eAAgB,GAAIP,WAAY,QAItD,KA1SQ,KA6ST,MAAFnI,OAAA,EAAAA,EAAIkgB,YA5SO,KA6SV,MAAFlgB,OAAA,EAAAA,EAAIkgB,WACF,kBAAC,GAAD,CACEplB,MAAOiC,EAAQ,YACf6kB,aAAc,IACdtQ,GAAG,wBAEH,kBAAC,GAAD,KACGvU,EAAQ,aADX,WAC4B1G,GAAe,MAAF2J,GAAA,SAAAA,EAAIuE,WAAJ,IAAUE,OAAQ,GAD3D,MAGA,kBAAC,GAAD,KACG1H,EAAQ,WADX,KACyB1G,GAAe,MAAF2J,GAAA,SAAAA,EAAIuE,WAAJ,IAAUG,UAAW,IAE3D,kBAACtJ,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOwI,SAAU,SAC7C,kBAACxB,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO6V,GAAO5X,GAAO+P,UACrBhM,MAAO8V,GACPpQ,aAAc+R,GACdhS,YAAa3F,EAAQ,YAGvB,kBAAC,GAAD,CACEjC,MAAmBiC,EAAZ+lB,GAAoB,UAAqB,QAChD/nB,QAAS,kBAAMgoB,IAAcD,KAC7B7nB,MAAO,CAAEuE,KAAM,EAAGkJ,eAAgB,GAAIP,WAAY,MAGpD,kBAAC,GAAD,CACErN,MAAOiC,EAAQ,MACfhC,QAAS,kBAAMqoB,IAAoB,IACnCnoB,MAAO,CAAEuE,KAAM,EAAGkJ,eAAgB,GAAIP,WAAY,MAEpD,kBAAC,GAAD,CACErN,MAAOiC,EAAQ,OACfhC,QAAS,kBAAMqoB,IAAoB,IACnCnoB,MAAO,CAAEuE,KAAM,EAAGkJ,eAAgB,GAAIP,WAAY,QAItD,MAGD,MAAFnI,OAAA,EAAAA,EAAIkgB,YAzVY,GA0Vf,kBAAC,GAAD,CACEplB,MAAOiC,EAAQ,WACf6kB,aAAa,MACbtQ,GAAG,sBAHL,MAKG/M,GALH,SAKGA,EAAM0b,YALT,EAKG,EAAahiB,KAAI,SAAC2lB,GACjB,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAK3oB,MAAO,CAAEY,eAAgB,WAC5B,kBAAC,GAAD,KAAI+nB,EAAO5nB,OAGb,kBAAC,KAAD,CAAKf,MAAO,CAAEY,eAAgB,WAC5B,kBAAC,GAAD,KAAI0nB,GAAaK,EAAO1D,aAG1B,kBAAC,KAAD,CACEjlB,MAAO,CACLY,eAAgB,SAChBiC,WAAY,aAGd,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,SACzB,MAAFuE,OAAA,EAAAA,EAAIkgB,YAjXF,GAkXD0D,EAAOtS,MAAP,MAActR,OAAd,EAAcA,EAAIsR,KAChB,kBAAC,GAAD,CACExW,MAAOiC,EAAQ,QACfhC,QAAS,kBA7QlB,SAAO4gB,GAAP,iBAAAjkB,EAAAC,OAAA,uDACnB8kB,GAAW,GADQ,WAAA/kB,EAAA,MAEQM,GAAK,WAAY,CAC1C0I,MAAOnF,EAAOoF,WACdgb,YAJiB,gBAEXnkB,EAFW,EAEXA,SAIRilB,GAAW,GACXpT,EAAY7R,GAPO,4DA6QwBqsB,CAAaD,EAAOtS,OAnX3C,KAsXK,MAAFtR,OAAA,EAAAA,EAAIkgB,YACH,kBAAC,GAAD,CACEplB,MAAOiC,EAAQ,cACf9B,MAAO,CAAEkN,WAAY,IACrBpN,QAAS,kBAAM0oB,GAAWG,EAAOtS,eAYhD,MAAFtR,OAAA,EAAAA,EAAIkgB,YAxYY,GAyYf,kBAAC,GAAD,CACEplB,MAAOiC,EAAQ,eACf6kB,aAAa,MACbtQ,GAAG,yBAEH,kBAAC9V,EAAA,EAAD,CAAkBT,QAhNN,0BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MAClB0gB,MADkB,kCAAA1gB,EAAA,MAIH+gB,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfE,QAAQ,EACRgL,QAAS,KATW,QAIlB/K,EAJkB,QAYVC,WAEV6J,GACE9J,EAAOD,OAAP,cACkBC,EAAOpf,KADzB,WACwCof,EAAOD,OAC3CC,EAAOlF,KAjBO,gDAqBtB/b,QAAQuF,IAAR,MArBsB,kEAiNTgS,GACC,kBAAC/O,EAAA,EAAD,CACEC,OAAQ,CACNsT,IAAKxE,GAAM0U,SAAS,cAChB1U,GACAta,EAAUC,YAAcqa,IAE9BpU,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7B6Z,WAAW,UAGb,kBAAC/Z,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7B6Z,WAAW,WAIjB,kBAAC5X,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO6V,GAAO5X,GAAO+P,UACrBhM,MAAOjB,GACP2G,aAAcyG,GACd1G,YAAa3F,EAAQ,cAGvB,kBAAC0F,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO,CACL6V,GAAO5X,GAAO+P,UACd,CACEvO,MAAO,OACP8F,OAAQ,MAGZga,WAAW,EACXvd,MAAO0lB,GACPhgB,aAAcigB,KAEhB,kBAAC,GAAD,CACE7nB,QAjYO,4BAAArD,EAAAC,OAAA,uDACrB8kB,GAAW,GADU,WAAA/kB,EAAA,MAEMM,GAAK,aAAc,CAC5C0I,MAAOnF,EAAOoF,WACdgiB,WACAtT,SACArT,WANmB,gBAEbxE,EAFa,EAEbA,SAMRilB,GAAW,GACXpT,EAAY7R,GACZyI,EAAS1E,EAAOoF,YAVK,6DAkYP7F,MAAOiC,EAAQ,QACf9B,MAAO,CAAE8I,UAAW,OAO1B,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEyN,eAAgB,KAE3B,kBAAC,GAAD,CACE5N,MAAOiC,EAAQ,aACfhC,QAAS,kBACPioB,GACEjmB,EAAQ,cACRA,EAAQ,yBACR,CACE,CAAEoB,KAAMpB,EAAQ,MAAOhC,QAASuoB,IAChC,CAAEnlB,KAAMpB,EAAQ,iBAS5B,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEyN,eAAgB,KAjdnB,KAkdP,MAAF1I,OAAA,EAAAA,EAAIkgB,YACH,kBAAC,GAAD,CACEplB,MAAOiC,EAAQ,cACfhC,QAAS,kBACPioB,GACEjmB,EAAQ,cACRA,EAAQ,0BACR,CACE,CAAEoB,KAAMpB,EAAQ,MAAOhC,QAASyoB,IAChC,CAAErlB,KAAMpB,EAAQ,iBAQ5B,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,OAjQzB,kBAAC,GAAD,KAAIzD,EAAQ,iB,qkBC/OtB,I,GAC0BtC,IAAW1C,IAAI,UAAjC2C,G,GAAAA,MAAO8F,G,GAAAA,OACTgZ,GAAO9e,GAAQ,IAAO,IAAM,IAoLnBspB,GAnLE,SAAC,GAUZ,EATJ9jB,WASK,IAAD,gCARJH,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GAEAC,GAIE,EALFqU,OAKE,EAJFrU,UAEU/G,GAER,EAHFqb,aAGE,EAFFhZ,OAAUrC,OAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B8jB,EAAS,CACb,KACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KAGIC,EAAQ,CACZ,CACEloB,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU4f,MACnB9U,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU6f,MACnB/U,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU8f,MACnBhV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAU+f,MACnBjV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUggB,MACnBlV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUigB,MACnBnV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUkgB,MACnBpV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUmgB,MACnBrV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,iBACdsa,MAAO4M,EAAO,GACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUogB,MACnBtV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,kBACdsa,MAAO4M,EAAO,IACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUqgB,OACnBvV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,kBACdsa,MAAO4M,EAAO,IACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUsgB,OACnBxV,MAAOrZ,EAAQ,MAEjB,CACEgG,KAAMe,EAAQ,kBACdsa,MAAO4M,EAAO,IACdzD,QAAO,MAAExgB,GAAF,SAAEA,EAAIuE,WAAN,EAAE,EAAUugB,OACnBzV,MAAOrZ,EAAQ,OA1Ff,EA8F4B0G,mBAAS,MA9FrC,WA8FGlF,EA9FH,KA8Fa6R,EA9Fb,OA+FwB3M,mBAAS,IA/FjC,WA+FGqW,EA/FH,KA+FW2B,EA/FX,OAgG0BhY,oBAAS,GAhGnC,WAgGG8b,EAhGH,KAgGYiE,EAhGZ,KA8GJ,OACE,kBAACrhB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAC9BpE,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,KACGuF,EAAQ,YADX,WAC2B1G,GAAe,MAAF2J,GAAA,SAAAA,EAAIuE,WAAJ,IAAUE,OAAQ,GAD1D,MAGA,kBAAC,GAAD,KACG1H,EAAQ,SADX,WACuBiD,GADvB,SACuBA,EAAIuE,WAD3B,EACuB,EAAU8Y,OAEjC,kBAAC1U,GAAA,EAAD,CACEqS,WAAYxC,EACZuB,UAAW,kBAAM9Z,EAAS1E,EAAOoF,aACjCiI,KAAMsb,EACN7C,WACkB,QAAhB/jB,UAASC,QACLjG,EACAqB,KAAKsP,MAAMvN,IAAS8e,GAAOuL,KAEjCjK,sBACkB,QAAhBxd,UAASC,GACL,CAAE9B,cAAe,MAAOwI,SAAU,OAAQzD,OAAQA,GAAS,UAC3DlJ,EAENigB,aAAc,SAACte,EAAM7C,GAAP,aAAwBA,GACtC2R,WAAY,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MACnB,OACE,kBAACgF,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OArJZ,KAsJD,kBAAC7E,EAAA,EAAD,CACEC,OAAQtH,EAAKoW,MACbpU,MAAO,CAAEP,MAAO8e,GAAMhZ,OAAQgZ,IAC9Ba,WAAW,YAEb,kBAAC,GAAD,KAAIphB,EAAK+C,MACT,kBAAC,GAAD,cAAK/C,EAAKoe,MAAV,MACA,kBAAC,GAAD,KACGta,EAAQ,gBADX,KAC8B9D,EAAKunB,SAEnC,kBAACplB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAACgH,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO,CAAC6V,GAAO5X,GAAO+P,UAAW,CAAEvO,MAAO,MAC1CuC,MAAO8V,EAAO3c,EAAQ,IAAM,GAC5BuM,aAAc,SAACqiB,GAAD,OAAOtQ,EAAU,SAAK3B,GAAN,UAAe3c,EAAQ,EAAI4uB,MACzDtiB,YAAa3F,EAAQ,YAEvB,kBAAC,GAAD,CACE9B,MAAO,CAAEyN,eAAgB,GAAIP,WAAY,IACzCrN,MAAOiC,EAAQ,OACfhC,QAAS,kBA5DJ,SAAOkqB,GAAP,iBAAAvtB,EAAAC,OAAA,uDACnB8kB,GAAW,GADQ,WAAA/kB,EAAA,MAEQM,GAAK,WAAY,CAC1CitB,SACAlS,OAAQA,EAAOkS,GACfvkB,MAAOnF,EAAOoF,cALG,gBAEXnJ,EAFW,EAEXA,SAKRyI,EAAS1E,EAAOoF,YAChB0I,EAAY7R,GACZilB,GAAW,GATQ,4DA4DUyI,CAAa9uB,EAAQ,a,o/BCxK9CsE,GAAUD,IAAW1C,IAAI,UAAzB2C,MAgOOyqB,G,mLA9Nb7pB,MAAQ,CACNwE,SAAU,KACVtI,SAAU,KACVylB,KAAM,GACNlK,OAAQ,I,EAqBVqS,YAAc,WAAO,IACX7pB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MAASlC,EAAUC,YAAd,wBAAiDuG,EAAOoF,WAAc,CACzE5J,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAO8tB,GAAP,eAAA3tB,EAAAC,OAAA,gDACEob,EAASsS,EAAUC,QACvB,SAACtT,EAAUwO,GAAX,UAAC,MACIxO,GADL,UAEGwO,EAAQlP,GAAKlZ,OAAOooB,EAAQzN,YAE/B,IAGF,EAAKlS,SAAS,CACZwkB,YACAtS,WAXE,+DAcLnb,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB0tB,WAAa,SAACC,EAAQrI,EAAMpK,GAAY,IAC9BpS,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAE0b,SAAQyS,SAAQrI,OAAMxc,iBAE5CpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU2lB,OAAMpK,OAAQ,KACxC,EAAKhU,MAAMgB,YAAYE,SAASU,GAChC,EAAKykB,cAHD,+DAKLxtB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB4tB,WAAa,SAACnU,GAAQ,IACZ3Q,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEia,KAAI3Q,iBAE1BpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU8Z,OAC1B,EAAKvS,MAAMgB,YAAYE,SAASU,GAChC,EAAKykB,cAHD,+DAKLxtB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB6tB,YAAc,YAAsB,IAAnBzsB,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MAAY,EAO7B,EAAK2I,MALPgB,YACExE,EAH6B,EAG7BA,OACUrC,EAJmB,EAI7BqC,OAAUrC,MACV8G,EAL6B,EAK7BA,GAIEjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAC9BlD,EAAQ,EAAK3B,MAAMyX,OAAO9Z,EAAKqY,IAErC,OACE,kBAAClW,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLY,eAAgB,WAGlB,kBAACyE,EAAA,EAAD,CACErF,MAAO,CACLP,MAAO,IACP8F,OAAQ,IACR6Z,WAAY,UACZ/P,UAAW,UAEb/J,OAAQ,CAAEsT,IAAK9e,EAAUC,YAAc,IAAMiE,EAAKoW,SAGpD,kBAACjU,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,iBAGlB,kBAACT,EAAA,QAAD,KACI,EAAKE,MAAM9D,UAAY,EAAK8D,MAAM6hB,OAASlkB,EAAKkkB,MAClD,EAAK7hB,MAAMgW,KAAOrY,EAAKqY,GACrB,kBAAC,UAAD,CAAMrW,MAAO,CAAEgB,MAAO/C,EAAME,cACzB,EAAKkC,MAAM9D,SAASA,UAErB,KAEJ,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAKkkB,MACjD,kBAAC,UAAD,CAAMliB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,gBADX,KAC8B9D,EAAK8Z,QAEnC,kBAAC,UAAD,CAAM9X,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,SACSH,EAAKuL,MAEd,kBAAC,UAAD,CAAMvJ,MAAO,CAAEgB,MAAO/C,EAAME,cACzBH,EAAK0sB,OADR,IACiB5oB,EAAQ,YAGzB,kBAAC,GAAD,CAAG6K,MAAI,EAAC3M,MAAO,CAAE8I,UAAW,KACzBhH,EAAQ,UADX,KAGA,kBAAC0F,GAAA,EAAD,CACE5M,IAAG,SAAWoD,EAAKqY,GACnBrW,MAAOA,GAAMM,EAAOrC,OAAO+P,UAC3BhM,MAAOA,EACP0F,aAAc,SAACrM,GAAD,OACZ,EAAKuK,SAAS,CACZkS,OAAO,SAAM,EAAKzX,MAAMyX,QAAlB,UAA2B9Z,EAAKqY,GAAKhb,OAG/CmU,qBAAsBvR,EAAMwR,kBAC5BhI,YAAa3F,EAAQ,aAIzB,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,gBAAiB8H,aAAc,KAC5D,kBAAC,GAAD,CACEzK,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBACP,EAAKwqB,WAAW,OAAQtsB,EAAKkkB,KAAM,EAAK7hB,MAAMyX,OAAO9Z,EAAKqY,QAI9D,kBAAC,GAAD,CACEpY,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,SACfhC,QAAS,kBACP,EAAKwqB,WACH,QACAtsB,EAAKkkB,KACL,EAAK7hB,MAAMyX,OAAO9Z,EAAKqY,QAI7B,kBAAC,GAAD,CACEpY,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,WACfhC,QAAS,kBAAM,EAAK0qB,WAAWxsB,EAAKqY,Y,0DA1L7B,IAAD,OACVpR,EAAejB,KAAKF,MAApBmB,WACWjB,KAAKF,MAAMgB,YAAtBxE,OAER0D,KAAKmmB,cAELnmB,KAAK2mB,cAAgB1lB,EAAWwM,YAAY,YAAY,WAGtD,EAAK0Y,mB,6CAMPnmB,KAAK2mB,cAAc9Y,W,+BAoLX,IAAD,EAIH7N,KAAKF,MAJF,KAELmB,WAFK,EAGLH,YAAeC,GAE6Bf,KAAK3D,OAArC+pB,GALP,EAKCpI,KALD,EAKOoI,WALP,EAKkB/T,GALlB,EAKsBvH,KALtB,EAK4BgF,OAEnC,OACE,kBAACpG,GAAA,EAAD,CACE0Y,WAAY3mB,GAAQ,IAAO,EAAI,EAC/BogB,sBAAuB,CAAEhd,WAAY,UACrCyZ,aAAc,SAACte,EAAM7C,GAAP,aAAwBA,GACtCwS,KAAMyc,EACNtd,WAAY9I,KAAKymB,YACjBvJ,uBAAwBf,S,GAzNX1b,a,+aCgLNmmB,G,iCAvLb,WAAY9mB,GAAQ,IAAD,sBACjB,cAAMA,IAyBR+J,aAAe,WAAO,IAEH9I,EACb,EAAKjB,MADPgB,YAAeC,GAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACG,EAAK6X,SACJlW,EAAQ,gBACRxC,GAAW,MAACyF,OAAD,EAACA,EAAI6E,SAAU,WArCf,EA0CnBkD,WAAa,SAAC9O,EAAM7C,GAAW,IAGf8C,EAEV,EAAK6F,MAHPgB,YACExE,OAAUrC,MAGRwC,EACJ,EAAKJ,MAAMwE,WAAa7G,EAAKqY,GAAK,eAAYha,EAChD,OACE,kBAACkE,EAAA,EAAD,CACET,QAAS,WACP,EAAK8F,SAAS,CAAEf,SAAU7G,EAAKqY,OAGjC,kBAAClW,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdnC,QAAS,GACTC,eAAgB,gBAChBH,oBAGF,kBAAC,UAAD,CAAMT,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK2H,WAlEtC,EAwEnBwP,OAAS,WAAO,IACN7U,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAE2X,SAAS,IACzBvhB,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,SACnB4T,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAghB,SAAS,EACT9E,QAAS,GACTC,OAAQhb,KAAKgb,WAEf,EAAK5U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAnGD,EAuGnBqa,aAAe,WAAO,IAAD,EACbnV,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAE3D,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAa,EAAKhB,MAAMgB,YACxB2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,SACfhC,QAAS,EAAKqV,WAtHpB,EAAK9U,MAAQ,CACXwE,SAAU,KACVtI,SAAU,KACVkc,QAAS,GACTC,OAAQhb,KAAKgb,UANE,E,6CAUV9d,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,M,+BAwGA,IAAD,SAOHgC,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MALP,EAQwB+F,KAAK3D,MAA5B9D,EARD,EAQCA,SAEFuF,GAVC,EAQW+C,SAEFlK,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAE9B/C,EAAU,CACd,CACEkU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAElB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,gBAIpB,OACE,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,WAClC,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAIzK,MAAO,MAC/BlD,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG8X,UAAW,MACjC,kBAAC,UAAD,CAAMrc,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7C,kBAACgZ,EAAA,EAAD,KACGvR,KAAK6J,eAEL1L,EAAQa,IAAIgB,KAAK8I,YAEjB9I,KAAKiT,sB,GA/KFxS,aCkBHyR,GAvBQ,SAAC,GAOlB,EANJjR,WAMI,EALJH,YAKK,IAAD,IAJJA,YACEC,EAGE,EAHFA,GAGE,IAFFzE,OAGIwB,GADF,EAFQ7D,MAER,EAFeyH,WAGH/K,EAAe,MAACoK,OAAD,EAACA,EAAIG,SACpC,OACE,kBAACqQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAErC,kBAAC0E,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,OAE/B,kBAAC,GAAD,KAAIzD,EAAQ,gBAEZ,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,+aCsNdslB,G,iCAjOb,WAAY/mB,GAAQ,IAAD,sBACjB,cAAMA,IA4BRqR,OAAS,WAAO,IACN7U,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAE2X,SAAS,IACzBvhB,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd+S,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAghB,SAAS,EACT9E,QAAS,GACTC,OAAQhb,KAAKgb,WAEf,EAAK5U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAvDD,EA2DnBqa,aAAe,WAAO,IAAD,EACI,EAAKnT,MAAMgB,YAAlBC,GADG,EACXzE,OADW,EACHyE,IACVjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,kBAAC/E,EAAA,QAAD,KACG,EAAK6X,SAASlW,EAAQ,2BAAtB,MAAkDiD,OAAlD,EAAkDA,EAAIuT,QAEvD,kBAAC,GAAD,CACExT,YAAa,EAAKhB,MAAMgB,YACxB2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,mBACfhC,QAAS,EAAKqV,SAGf,EAAK2V,iBAlFO,EAuFnBnR,YAAc,SAAO5T,GAAP,uBAAAtJ,EAAAC,OAAA,yDAC+B,EAAKoH,MAAMgB,YAA9CE,EADI,EACJA,SAAU1E,EADN,EACMA,OAAQgZ,EADd,EACcA,aADd,WAAA7c,EAAA,MAEeM,GAAK,cAAe,CAC7CgJ,OACArH,KAAM,MACN+G,MAAOnF,EAAOoF,cALJ,kBAEJnJ,SAKR+c,IACAtU,EAAS1E,EAAOoF,YARJ,6DAvFK,EAkGnBolB,aAAe,WAAO,IAAD,EAKf,EAAKhnB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACAsU,EAJiB,EAIjBA,OAEMpU,EAAe,EAAKnB,MAApBmB,WACFnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,oCACE,kBAAC/E,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CAAGoI,MAAI,GAAE7K,EAAQ,UAEnB,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN3D,eAAgB,gBAChBJ,cAAe,QAGjB,kBAAC,GAAD,CAAGmM,MAAI,GAAE7K,EAAQ,QACjB,kBAAC,GAAD,CAAG6K,MAAI,GAAE7K,EAAQ,aAnBvB,MAsBGuX,OAtBH,EAsBGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKglB,SACJ,kBAAC,GAAD,KAAIhlB,EAAKglB,UAET,kBAACxqB,EAAA,EAAD,CACET,QAAS,kBAAM,EAAK6Z,YAAY5T,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKglB,YAAL,MAAkBhmB,OAAlB,EAAkBA,EAAIhE,MACrB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,MACNqH,KAAMA,EAAKA,SAIf,kBAACuJ,GAAA,EAAD,CAAQvO,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAEN,kBAAC,GAAD,KAAI6E,EAAKilB,kBA5KrB,EAAK3qB,MAAQ,CACX9D,SAAU,KACVkc,QAAS,GACTC,OAAQhb,KAAKgb,UANE,E,wDAWjB1U,KAAKF,MAAMgB,YAAYwU,iB,+BAEhB1e,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,M,+BA+JA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAQHyH,KAAKF,MAJPgB,YACY7G,EALP,EAKHqC,OAAUrC,MACV8G,EANG,EAMHA,GAGEkmB,EAASvtB,KAAKsU,KAAqB,GAAhBtU,KAAKgb,UACxB5W,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,kBAACqQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG8X,UAAW,MACjC,kBAAChX,EAAA,EAAD,CACErF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7BD,OAAQ,CACNsT,IACE9e,EAAUC,YAAc,kBAAoBkxB,EAAS,UAG3D,kBAAC,UAAD,CAAMjrB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7CyH,KAAKiT,qB,GA1NIxS,a,ydCaKjF,IAAW1C,IAAI,UAAjC2C,G,GAAAA,MAAO8F,G,GAAAA,OACT2lB,GAAYzrB,GAAQ,EAAI,IAAM,IAAMA,GAAQ,EAC5CsI,GAAgBtI,GAAQ,IAExB0rB,GAAyD,EAAzCztB,KAAKsP,OAAOzH,GAAS,KAAO2lB,IAoRnCE,G,mLAjRb/qB,MAAQ,CACN9D,SAAU,KACV8uB,YAAa,EACbC,qBAAqB,G,EAcvBC,sBAAwB,SAACC,GACF,WAAjBA,IACF,EAAKC,sBACL,EAAKC,iB,EAITA,aAAe,WAAO,IAAD,EACI,EAAK5nB,MAAMgB,YAA1BxE,EADW,EACXA,OAAQyE,EADG,EACHA,GAEVG,EACY,QAAhB7C,UAASC,GACLqpB,KAAcC,gBAAgBC,SAASC,aACvCH,KAAcC,gBAAgBC,SAASE,eAAe,GACtC,YAAhB1pB,UAASC,GACTqpB,KAAcK,YAAYC,iBACV,QAAhB5pB,UAASC,GACT0gB,UAAUkJ,SACV,KAGFhnB,KAAM,MAAKH,OAAL,EAAKA,EAAIG,SACjBnI,GAAK,gBAAiB,CACpBmI,SACAQ,WAAYpF,EAAOoF,c,EAIzB+lB,oBAAsB,0CAAAhvB,EAAAC,OAAA,qDACG,EAAKoH,MAAMgB,YAA1BxE,EADY,EACZA,OAAQyE,EADI,EACJA,IACZonB,IAAcC,UAA4B,QAAhB/pB,UAASC,GAFnB,mCAAA7F,EAAA,MAGuB2gB,IACvCA,MAJgB,mBAGFiP,EAHE,EAGVhP,OAGJiP,EAAcD,EACK,YAAnBA,EAPc,oCAAA5vB,EAAA,MAQS2gB,IACvBA,MATc,iBAQRC,EARQ,EAQRA,OAGRiP,EAAcjP,EAXE,WAaE,YAAhBiP,EAbc,wBAchB,EAAK1mB,SAAS,CAAE0lB,qBAAqB,IAEf,MAAhB,MAAFvmB,OAAA,EAAAA,EAAIwnB,YACNxvB,GAAK,gBAAiB,CACpBwvB,UAAW,GACX7mB,WAAYpF,EAAOoF,aAnBP,8CAAAjJ,EAAA,MAyBG+vB,2BAzBH,SAyBZ/mB,EAzBY,OAyB0CkI,SACnD,MAAK5I,OAAL,EAAKA,EAAIwnB,YAChBxvB,GAAK,gBAAiB,CACpBwvB,UAAW9mB,EACXC,WAAYpF,EAAOoF,aAGvB,EAAKE,SAAS,CAAE0lB,qBAAqB,IAhCnB,8D,EAoCtBmB,YAAc,YAAsB,IAAnBzuB,EAAkB,EAAlBA,KAAkB,KAAZ7C,MAOjB,EAAK2I,OALPmB,EAF+B,EAE/BA,WAF+B,IAG/BH,YACEH,EAJ6B,EAI7BA,SACU1G,EALmB,EAK7BqC,OAAUrC,MAId,OACE,kBAACkC,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN3D,eAAgB,SAChBJ,cAAe,MACfwI,SAAU,OACVyE,eAAgB,KAGjBzP,EAAKgF,KAAI,SAAC0pB,EAAMvxB,GACf,IAAM8E,EAAUC,EAAKwsB,EAAKhZ,UAC1B,OACE,kBAACvT,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CAAEP,MAAOyrB,GAAWroB,WAAY,WAEvC,kBAACtC,EAAA,EAAD,CACEP,MAAO,CACL8G,YAAa,EACbC,YAAa,OACbtG,gBAAiBxC,EAAMyC,UACvBoC,aAAc,GACdrD,MAAOyrB,GAAY,GACnB3lB,OAAQ2lB,GAAY,GACpBtqB,eAAgB,SAChBiC,WAAY,UAEd/C,QAAS,SAACiM,GACR9G,EAAWgC,SAASylB,EAAK/Y,IAEzB,IAAMgZ,EAAW,CACfpC,OAAQ,YAAcmC,EAAK/Y,GAC3BiZ,UAAW7gB,EAAEnE,YAAYglB,UACzBC,UAAW9gB,EAAEnE,YAAYilB,UACzBC,UAAW1nB,KAAKzG,OAGlBgG,EAAS,CAAEjG,KAAM,eAAgBsD,MAAO2qB,MAGzC1sB,GACC,kBAACA,EAAD,CACEc,KAAM2rB,EAAK/sB,KACXuB,MAAOgqB,GAAY,IAAM,EACzBlqB,MAAO/C,EAAMgD,iBAInB,kBAACd,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBuuB,EAAKxpB,MAChDwpB,EAAK9Y,iB,0DAtIlBmZ,IAAS5oB,iBAAiB,SAAUH,KAAKunB,uBAEzCvnB,KAAKynB,sBACLznB,KAAK0nB,iB,6CAILqB,IAASC,oBAAoB,SAAUhpB,KAAKunB,yB,uCAwI5B,IAAD,SAGXvnB,KAAKF,MADPgB,YAAyBC,GAFZ,EAEEJ,SAFF,EAEYI,IAAIzE,EAFhB,EAEgBA,OAGvBgrB,EAAwBtnB,KAAK3D,MAA7BirB,oBAYF2B,EAVK,eACNnb,GAAS/M,EAAIzE,EAAOrC,OAAOosB,QAC5B,SAACtT,EAAUwO,GAAX,qBAA2BxO,GAA3B,KAAwCwO,EAAQ9R,YAChD,KAHO,KAKNS,GAAUnP,EAAIzE,EAAOrC,OAAOosB,QAC7B,SAACtT,EAAUwO,GAAX,qBAA2BxO,GAA3B,KAAwCwO,EAAQ9R,YAChD,MAGmBK,QAAO,SAAC4Y,GAAD,OAAWA,EAAKlZ,WAAakZ,EAAKnY,WAE1DzS,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9ByI,EAAO,CACXsf,EAASC,MAAM,EAAG/B,IAClB8B,EAASC,MAAM/B,GAA+B,EAAhBA,IACd,EAAhBA,GAAoB8B,EAAS7vB,YACzBf,EACA4wB,EAASC,MAAsB,EAAhB/B,GAAmB8B,EAAS7vB,SAC/C0W,QAAO,SAACzY,GAAD,QAASA,KAElB,OACE,kBAAC8E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAClB+mB,GACC,kBAAC/qB,EAAA,EAAD,CACET,QAAS,WACS,QAAhBuC,UAASC,GACL8e,UAAQC,QAAQ,iBAChB8L,IACEA,OAIR,kBAAChtB,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,EACTH,cAAe,MACfqC,WAAY,WAGd,kBAACiH,GAAA,EAAD,CACE/I,KAAK,qBACLC,MAAM,MACNhB,MAAO,CAAEc,YAAa,MAExB,kBAAC,GAAD,KAAIgB,EAAQ,8BAKlB,kBAAC,KAAD,CACEme,IAAK,SAAC5iB,GACJ,EAAK+vB,UAAY/vB,GAEnBsQ,KAAMA,EACNb,WAAY9I,KAAKyoB,YACjBY,YAAa5tB,GACb6tB,aAAc,SAACnyB,GAAD,OAAW,EAAKyK,SAAS,CAAEylB,YAAalwB,KACtD+vB,UAAWzrB,KAGb,kBAAC,KAAD,CACE8tB,WAAY5f,EAAKvQ,OACjBowB,eAAgBxpB,KAAK3D,MAAMgrB,YAE3BoC,SAAU,CACRhuB,MAAO,GACP8F,OAAQ,GACRzC,aAAc,EACdoc,iBAAkB,EAClBze,gBAAiB,6BAEnBitB,iBACE,GAIFC,mBAAoB,GACpBC,iBAAkB,Q,+BAKhB,IAAD,EAKH5pB,KAAKF,MAAMgB,YAHbxE,EAFK,EAELA,OAEAyE,GAJK,EAGLzE,OAAUrC,MAHL,EAIL8G,IAGIjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAY9B+nB,EAVK,eACNnb,GAAS/M,EAAIzE,EAAOrC,OAAOosB,QAC5B,SAACtT,EAAUwO,GAAX,qBAA2BxO,GAA3B,KAAwCwO,EAAQ9R,YAChD,KAHO,KAKNS,GAAUnP,EAAIzE,EAAOrC,OAAOosB,QAC7B,SAACtT,EAAUwO,GAAX,qBAA2BxO,GAA3B,KAAwCwO,EAAQ9R,YAChD,MAGmBK,QAAO,SAAC4Y,GAAD,OAAWA,EAAKlZ,WAAakZ,EAAKnY,WAEhE,MAAoB,QAAhBlS,UAASC,GACPyF,GACK,kBAACwN,EAAA,EAAD,KAAavR,KAAKyoB,YAAY,CAAEzuB,KAAMivB,KAEtC,kBAAC,GAAD,KAAInrB,EAAQ,gBAGhBkC,KAAK6pB,qB,GA9QGppB,a,+aCyEJqpB,G,mLA9FbztB,MAAQ,CACN9D,SAAU,M,EAUZwxB,KAAO,SAAChtB,GAAU,IAECT,EACb,EAAKwD,MADPgB,YAAexE,OAGjBtE,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsJ,WAAYpF,EAAOoF,WACnB3E,WAGDzE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,0DA7BC,IAAD,EACZmE,EAAI,SAAGiD,KAAKF,MAAMmB,WAAW5E,MAAMgV,aAA/B,EAAG,EAAoCtU,KAC7CA,GACFiD,KAAK4B,SAAS,CAAE7E,W,mCA6BN,IAAD,SAGPiD,KAAKF,MADPgB,YAAexE,EAFN,EAEMA,OAAQyE,EAFd,EAEcA,GAGnBjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEnBlB,KAAK3D,MAAdU,KACR,OACE,kBAACZ,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAOA,GAAMM,EAAOrC,OAAO+P,UAC3BvG,YAAa3F,EAAQ,QACrB0N,qBAAsBlP,EAAOrC,MAAMwR,kBACnCzN,MAAOgC,KAAK3D,MAAMU,KAClB2G,aAAc,SAAC3G,GAAD,OAAU,EAAK6E,SAAS,CAAE7E,YAE1C,kBAAC,GAAD,CACE9C,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAKiuB,KAAK,EAAK1tB,MAAMU,SAEtC,kBAAC,GAAD,CACE9C,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,gBACfhC,QAAS,kBAAM,EAAKiuB,KAAL,MAAUhpB,OAAV,EAAUA,EAAIhE,Y,+BAK3B,IAAD,EAOHiD,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aAEY7G,GALP,EAIH8G,GAJG,EAKHzE,OAAUrC,OAGN1B,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAAC4D,EAAA,QAAD,CAAMH,MAAOA,GAAM/B,GAAOgQ,WACxB,kBAAC9N,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KAEHyH,KAAKiS,mB,GAxFOxR,a,UCgCRupB,GAnCF,SAAC,GAA+D,IAA7D/oB,EAA4D,EAA5DA,WAAYpF,EAAgD,EAAhDA,MAAO8T,EAAyC,EAAzCA,GAAI7T,EAAqC,EAArCA,QAASmuB,EAA4B,EAA5BA,SAAUtuB,EAAkB,EAAlBA,KAAM1B,EAAY,EAAZA,MACxDgC,EAAUguB,GAAYtuB,EAAOO,EAAK+tB,GAAY,KACpD,OACE,kBAAC1tB,EAAA,EAAD,CACET,QAAS,kBAAOA,EAAUA,IAAYmF,EAAWgC,SAAS0M,KAE1D,kBAACxT,EAAA,QAAD,CACEH,MAAO,CACL6C,WAAY,SACZjC,eAAgB,gBAChBJ,cAAe,MACfK,kBAAmB,GACnBqZ,kBAAmB,GACnBC,kBAAmB,QACnBF,gBAAiB,KAGnB,kBAAC9Z,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,KACnBQ,GACC,kBAACA,EAAD,CAASc,KAAMpB,EAAMuB,KAAM,GAAIF,MAAO/C,EAAME,eAGhD,kBAAC,UAAD,CAAM6B,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB0B,IAE9C,kBAAC,KAAD,CACEkB,KAAK,uBACLG,KAAM,GACNF,MAAO/C,EAAME,iB,+aCiDR2X,G,sIA3EH,IAAD,EAOH9R,KAAKF,MALPmB,EAFK,EAELA,WAFK,IAGLH,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACmB,QAAhBkC,UAASC,IACR,kBAAC,GAAD,CACErE,MAAOA,EACP4B,MAAOiC,EAAQ,eACfhC,QAAS,kBAAMouB,OACfD,SAAS,YACTtuB,KAAK,UAIT,kBAAC,GAAD,CACE1B,MAAOA,EACP4B,MAAOiC,EAAQ,sBACfhC,QAAS,kBAAMshB,UAAQC,QAAQ,oCAC/B4M,SAAS,YACTtuB,KAAK,UAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,YACf6R,GAAG,WACHsa,SAAS,YACTtuB,KAAK,eAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,iBACf6R,GAAG,UACHsa,SAAS,YACTtuB,KAAK,eAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,SACf6R,GAAG,YACHsa,SAAS,YACTtuB,KAAK,eAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,cACf6R,GAAG,aACHsa,SAAS,SACTtuB,KAAK,YAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,UACf6R,GAAG,SACHsa,SAAS,YACTtuB,KAAK,c,GArEM8E,aCgEN0pB,GA5DK,SAAC,GAAwC,EAAtClpB,WAAuC,IAAZF,EAAW,EAA1BD,YAAeC,GAC1CG,EAASzK,EAAS,MAACsK,OAAD,EAACA,EAAIG,QAEvBkpB,EAAa,GAmDnB,OAlDAA,EAAWC,GACT,kBAACluB,EAAA,QAAD,KACE,kBAAC,GAAD,qBAGJiuB,EAAWE,GACT,kBAACnuB,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,GAAD,8BACA,kBAAC,GAAD,ihBAWA,kBAAC,GAAD,oCACA,kBAAC,GAAD,6TAQA,kBAAC,GAAD,uDACA,kBAAC,GAAD,2FAIA,kBAAC,GAAD,oIAIA,kBAAC,GAAD,wCACA,kBAAC,GAAD,8FAIA,kBAAC,GAAD,iEACA,kBAAC,GAAD,uKAQF,kBAACqL,EAAA,EAAD,CAAYsK,sBAAuB,CAAEhd,WAAY,WAC9CurB,EAAWlpB,KCaHipB,GAxEK,SAAC,GAAwC,EAAtClpB,WAAuC,IAAZF,EAAW,EAA1BD,YAAeC,GAC1CwpB,EAAU,CAEhBA,GAAA,cACAA,GAAA,woGA0DMrrB,EAAOqrB,EAFE9zB,EAAS,MAACsK,OAAD,EAACA,EAAIG,SAI7B,OACE,kBAACqQ,EAAA,EAAD,KACE,kBAACpV,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,GAAD,KAAIhH,M,+aCqJG0J,G,mLArNbvM,MAAQ,CACNwM,KAAM,I,EAwBRC,WAAa,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAkB,KAAZ7C,MAGhB,EAAK2I,MADPgB,aAAeC,EAFe,EAEfA,GAAIzE,EAFW,EAEXA,OAAQ0E,EAFG,EAEHA,SAGvBlD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B6H,EAAUrP,KAAKsP,OAAOhP,EAAKiP,OAAS7H,KAAKzG,OAAS,KAExD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,GAAD,KAAIxC,EAAK+C,MACT,kBAAC,KAAD,CACEf,MAAO,CAAEkN,WAAY,IACrBlH,MAAO+G,EACPI,WAAY,CAAE1M,gBAAiB,WAC/B2M,cAAe,CAAEpM,MAAO,SACxBiF,SAAU,aACV/E,KAAM,EACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE5B,kBAAC,GAAD,CACEpI,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,YACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd3E,KAAM/C,EAAK+C,SAGZzE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASH,EAAT,EAASA,SACb,EAAKqJ,SAAS,CAAErJ,aAChB,EAAK+Q,eACLtI,EAAS1E,EAAOoF,YAHZ,+DAKL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,W,EAO5BiR,aAAe,WACb,OAAO,kBAAC,GAAD,KAAI,EAAKxN,MAAM9D,W,EAGxBod,YAAc,SAAO5T,GAAP,uBAAAtJ,EAAAC,OAAA,yDAC+B,EAAKoH,MAAMgB,YAA9CE,EADI,EACJA,SAAUsU,EADN,EACMA,aAAchZ,EADpB,EACoBA,OADpB,WAAA7D,EAAA,MAEeM,GAAK,cAAe,CAC7CgJ,OACArH,KAAM,OACN+G,MAAOnF,EAAOoF,cALJ,kBAEJnJ,SAKR+c,IACAtU,EAAS1E,EAAOoF,YARJ,6D,EAWdolB,aAAe,WAAO,IAAD,EAKf,EAAKhnB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACAsU,EAJiB,EAIjBA,OAEMpU,EAAe,EAAKnB,MAApBmB,WAEFnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,oCACE,kBAAC/E,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,GACXoW,iBAAkB,KAGpB,kBAAC/e,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN/D,cAAe,MACfI,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,SAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAzBjB,MA6BGuX,OA7BH,EA6BGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBpZ,kBAAmB,GACnBqZ,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB4H,EAAKA,OAEnD,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAKyoB,UACJ,kBAAC,UAAD,CAAMxuB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAKyoB,WAGR,kBAACjuB,EAAA,EAAD,CACET,QAAS,kBAAM,EAAK6Z,YAAY5T,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAKyoB,aAAL,MAAmBzpB,OAAnB,EAAmBA,EAAIhE,MACtB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,OACNqH,KAAMA,EAAKA,SAIf,kBAACuJ,GAAA,EAAD,CAAQvO,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,UAAD,CAAMlB,MAAO,CAAEgB,MAAO/C,EAAME,cACzB4H,EAAK0oB,mB,0DAlLpBzqB,KAAKsJ,eACLtJ,KAAKF,MAAMgB,YAAYwU,iB,mCAGZ9L,GAAQ,IAAD,OAClBxR,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASmQ,EAAT,EAASA,KACb,EAAKjH,SAAS,CAAEiH,SADZ,+DAGLlQ,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BA0KV,IAAD,EAIHoH,KAAKF,MADQiB,GAHV,EAELE,WAFK,EAGLH,YAAeC,IAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACmJ,GAAA,EAAD,CACEC,KAAM3J,KAAK3D,MAAMwM,KACjBC,WAAY9I,KAAK8I,WACjBc,oBAAqB5J,KAAK6J,aAC1B2O,oBAAqBxY,KAAK8mB,aAC1B4D,mBAAoB,kBAAC,GAAD,KAAI5sB,EAAQ,qB,GA/MvB2C,a,+aCoOJkqB,G,iCAjOb,WAAY7qB,GAAQ,IAAD,sBACjB,cAAMA,IAaRqR,OAAS,WAAO,IAAD,EACU,EAAKrR,MAAMgB,YAA1BxE,EADK,EACLA,OADK,EACGyE,GAEhB,EAAKa,SAAS,CAAE2X,SAAS,IACzBvhB,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd+S,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAghB,SAAS,EACT7E,OAAQhb,KAAKgb,SACbD,QAAS,KAEX,EAAK3U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAxCD,EA4CnBqa,aAAe,WAAO,IAAD,EACI,EAAKnT,MAAMgB,YAAlBC,GADG,EACXzE,OADW,EACHyE,IACVjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACG,EAAK6X,SAASlW,EAAQ,uBAAtB,MAA8CiD,OAA9C,EAA8CA,EAAIsT,SAEnD,kBAAC,GAAD,CACEvT,YAAa,EAAKhB,MAAMgB,YACxB2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,gBACfhC,QAAS,EAAKqV,SAGf,EAAK2V,iBApEO,EAyFnBnR,YAAc,SAAO5T,GAAP,uBAAAtJ,EAAAC,OAAA,yDAC+B,EAAKoH,MAAMgB,YAA9CE,EADI,EACJA,SAAU1E,EADN,EACMA,OAAQgZ,EADd,EACcA,aADd,WAAA7c,EAAA,MAEeM,GAAK,cAAe,CAC7CgJ,OACArH,KAAM,UACN+G,MAAOnF,EAAOoF,cALJ,kBAEJnJ,SAKR+c,IACAtU,EAAS1E,EAAOoF,YARJ,6DAzFK,EAoGnBolB,aAAe,WAAO,IAAD,EAKf,EAAKhnB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACAsU,EAJiB,EAIjBA,OAEMpU,EAAe,EAAKnB,MAApBmB,WAEFnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,oCACE,kBAAC/E,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CAAGoI,MAAI,GAAE7K,EAAQ,UAEnB,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN3D,eAAgB,gBAChBJ,cAAe,QAGjB,kBAAC,GAAD,CAAGmM,MAAI,GAAE7K,EAAQ,kBACjB,kBAAC,GAAD,CAAG6K,MAAI,GAAE7K,EAAQ,aAnBvB,MAsBGuX,OAtBH,EAsBGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAK6oB,aACJ,kBAAC,GAAD,KAAI7oB,EAAK6oB,cAET,kBAACruB,EAAA,EAAD,CACET,QAAS,kBAAM,EAAK6Z,YAAY5T,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAK6oB,gBAAL,MAAsB7pB,OAAtB,EAAsBA,EAAIhE,MACzB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,UACNqH,KAAMA,EAAKA,SAIf,kBAACuJ,GAAA,EAAD,CAAQvO,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAEN,kBAACf,EAAA,QAAD,KACE,kBAAC,GAAD,KAAI4F,EAAK8oB,uBAjLvB,EAAKxuB,MAAQ,CACX9D,SAAU,KACVmc,OAAQhb,KAAKgb,SACbD,QAAS,IANM,E,wDAWjBzU,KAAKF,MAAMgB,YAAYwU,iB,+BA8DhB1e,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,CAAG7C,MAAO,CAAEc,YAAa,KAAOlG,GAChC,kBAAC,GAAD,KAAIoH,M,+BA0GA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAOHyH,KAAKF,MAJPgB,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAACqQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,KACE,kBAAC,UAAD,CAAMH,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7CyH,KAAKiT,qB,GA1NKxS,a,+aCuGPqqB,G,mLAlGbzuB,MAAQ,CACN9D,SAAU,M,EAGZwyB,KAAO,WAAO,IACJzuB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd3E,KAAM,EAAKV,MAAMU,KACjB0I,QAAS,EAAKpJ,MAAMoJ,YAGrBnN,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,aAChB,EAAKuH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,0DAhCC,IAAD,EACZmE,EAAI,SAAGiD,KAAKF,MAAMmB,WAAW5E,MAAMgV,aAA/B,EAAG,EAAoCtU,KAC7CA,GACFiD,KAAK4B,SAAS,CAAE7E,W,mCAiCN,IAAD,SAMPiD,KAAKF,MAJPgB,YACEC,EAHO,EAGPA,GACU9G,EAJH,EAIPqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO+P,UACpBvG,YAAa3F,EAAQ,QACrB0N,qBAAsBvR,EAAMwR,kBAC5BzN,MAAOgC,KAAK3D,MAAMU,KAClB2G,aAAc,SAAC3G,GAAD,OAAU,EAAK6E,SAAS,CAAE7E,YAE1C,kBAACyG,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO+P,UACpBvG,YAAa3F,EAAQ,WACrB0N,qBAAsBvR,EAAMwR,kBAC5BzN,MAAOgC,KAAK3D,MAAMoJ,QAClB/B,aAAc,SAAC+B,GAAD,OAAa,EAAK7D,SAAS,CAAE6D,eAG7C,kBAACtJ,EAAA,QAAD,CACEH,MAAO,CACL8I,UAAW,KAGb,kBAAC,GAAD,CACE7K,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAKivB,c,+BAMpB,IAAD,EAOH/qB,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aAEY7G,GALP,EAIH8G,GAJG,EAKHzE,OAAUrC,OAGN1B,EAAayH,KAAK3D,MAAlB9D,SAER,OACE,kBAACgZ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KAEHyH,KAAKiS,cAGR,kBAAC,GAAD,CAAQnR,YAAad,KAAKF,MAAMgB,mB,GApGrBL,a,+aCiLJ6e,G,mLAxKbjjB,MAAQ,CACNgO,MAAO,GACPE,SAAU,GACV3R,MAAO,M,8CAGA,IAAD,SAIFoH,KAAKF,MADQa,GAHX,EAEJM,WAFI,EAGJH,YAAeH,UAHX,EAKsBX,KAAK3D,MAAzBgO,EALF,EAKEA,MAAOE,EALT,EAKSA,SAEfvS,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEiS,QAAOE,SAAUoB,KAAIC,QAAQrB,OAEnDjS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOuT,GAAP,SAAApT,EAAAC,OAAA,uDACJG,QAAQuF,IAAI,eAAgByN,GAExBA,EAAajT,MACf,EAAKgJ,SAAS,CAAEhJ,MAAOiT,EAAajT,SAGpC+H,EAAS,CAAEjG,KAAM,kBAAmBsD,MAAO6N,EAAanK,aAEpC,QAAhBrD,UAASC,GACXuF,SAASC,SAETM,OAGF,EAAKxC,SAAS,CAAEhJ,MAAO,KAAM8R,QAASmB,EAAanB,WAfjD,kBAkBGmB,GAlBH,+DAoBLlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOHoH,KAAKF,MALPmB,EAFK,EAELA,WAFK,IAGLH,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRvJ,QAAS,GACTmC,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzC,KAEHoH,KAAK3D,MAAMqO,QACV,kBAAC,UAAD,CAAM1O,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMqO,SAE7C,kBAACvO,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,UAExC,kBAAC0F,GAAA,EAAD,CACEC,YAAa3F,EAAQ,SACrB0N,qBAAsBvR,EAAMwR,kBAC5B/H,aAAc,SAAC2G,GAAD,OAAW,EAAKzI,SAAS,CAAEyI,WACzCrM,MAAOgC,KAAK3D,MAAMgO,MAClBrO,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,aAExC,kBAAC0F,GAAA,EAAD,CACEkI,iBAAe,EACfhI,aAAc,SAAC6G,GAAD,OAAc,EAAK3I,SAAS,CAAE2I,cAC5CvM,MAAOgC,KAAK3D,MAAMkO,SAClBvO,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAOA,EACP4B,MAAOiC,EAAQ,SACfhC,QAAS,kBAAM,EAAKqP,YAIxB,kBAAChP,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTqI,SAAU,OACVpI,eAAgB,kBAGlB,kBAACL,EAAA,EAAD,CACET,QAAS,kBAAMmF,EAAWgC,SAAS,iBAEnC,kBAAC,UAAD,CACEjH,MAAO,CACLkK,OAAQ,GACRhD,SAAU,GACV4I,mBAAoB,cAGrBhO,EAAQ,cAIb,kBAACvB,EAAA,EAAD,CACET,QAAS,kBAAMmF,EAAWgC,SAAS,oBAEnC,kBAAC,UAAD,CACEjH,MAAO,CACLkK,OAAQ,GACRhD,SAAU,GACV4I,mBAAoB,cAGrBhO,EAAQ,4B,GA7JTT,IAAMoD,W,qkBCR1B,IAgOeuqB,GAhOM,SAAC,GAahB,EAZJ/pB,WAYK,IAVMoQ,EAUP,EAXJpQ,WACE5E,MAASgV,OAUP,IARJvQ,YACExE,EAOE,EAPFA,OACAyE,EAME,EANFA,GACAsU,EAKE,EALFA,OACAC,EAIE,EAJFA,aACAtU,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B6V,EAAc,CAClBC,cAAelZ,EAAQ,iBACvBmZ,OAAQnZ,EAAQ,UAChBoZ,SAAUpZ,EAAQ,YAClBuW,QAASvW,EAAQ,iBACjBqZ,WAAYrZ,EAAQ,cACpBsZ,IAAKtZ,EAAQ,OACbuZ,QAASvZ,EAAQ,WACjBwZ,YAAaxZ,EAAQ,eACrB0H,KAAM1H,EAAQ,cACd+K,KAAM/K,EAAQ,QACdyZ,OAAQzZ,EAAQ,WAGZiE,EAAI,MAAGsP,OAAH,EAAGA,EAAQtP,KACfrH,EAAI,MAAG2W,OAAH,EAAGA,EAAQ3W,KAlBjB,EAoB4B+C,mBAAS,MApBrC,WAoBGlF,EApBH,KAoBa6R,EApBb,OAqBwB3M,mBAAS,IArBjC,WAqBGwtB,EArBH,KAqBWC,EArBX,OAsBsBztB,mBAAS,IAtB/B,WAsBG2a,EAtBH,KAsBUyF,EAtBV,OAuBkBpgB,mBAAS,IAvB3B,WAuBG0tB,EAvBH,KAuBQC,EAvBR,KAyBEC,EAAO,MAAGhW,OAAH,EAAGA,EAAQO,MAAK,SAACvc,GAAD,OAAOA,EAAE0I,OAASA,KAE/CvK,GAAO8d,GAEP,IA0DMgW,EAAW,CACf9uB,cAAe,MACfI,eAAgB,gBAChBqZ,gBAAiB,IAGbsV,EAAaxU,EAAYrc,GAE/B,IAAK6wB,EACH,OAAO,kBAAC,GAAD,KAAIztB,EAAQ,gBAGrB,IAAM0tB,EAAe9wB,EAAN,SACT+wB,EAAc/wB,EAAN,QACRgxB,EAAchxB,EAAN,QACRixB,EAAejxB,EAAN,SACf,OACE,kBAAC6W,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACpCpE,GAAY,kBAAC,GAAD,KAAIA,IAEd,MAAFwI,OAAA,EAAAA,EAAIhE,QAAe,MAAPsuB,OAAA,EAAAA,EAAUK,OAAV,MAAwB3qB,OAAxB,EAAwBA,EAAIhE,MACvC,kBAACZ,EAAA,QAAD,KACE,kBAAC,GAAD,CAAGH,MAAO,CAAE+C,WAAY,SACrBwsB,EADH,IACgBztB,EAAQ,QADxB,IACkCiE,GAGlC,kBAAC5F,EAAA,QAAD,CAAMH,MAAOsvB,GACX,kBAAC,GAAD,KAAIxtB,EAAQ,WACZ,kBAAC,GAAD,cAAK1G,EAAai0B,EAAQG,IAA1B,OAGDH,EAAQI,IACP,kBAACtvB,EAAA,QAAD,CAAMH,MAAOsvB,GACX,kBAAC,GAAD,KAAIxtB,EAAQ,UACZ,kBAAC,GAAD,KAAIutB,EAAQI,KAIhB,kBAAC,GAAD,CACEzvB,MAAO,CAAEyN,eAAgB,IACzB3N,QAlGQ,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACWM,GAAK,YAAa,CAC3C0I,MAAOnF,EAAOoF,WACdK,OACArH,UAJc,gBACRnC,EADQ,EACRA,SAKR6R,EAAY7R,GACZyI,EAAS1E,EAAOoF,YAChB4T,IARgB,6DAmGRrb,MAAOA,EACP4B,MAAOiC,EAAQ,eAGjB,kBAAC3B,EAAA,QAAD,CAAMH,MAAOsvB,GACX,kBAAC,GAAD,KAAIxtB,EAAQ,WACZ,kBAAC,GAAD,KAAIutB,EAAQM,GAAZ,MAEF,kBAAC,GAAD,CACE3vB,MAAO,CAAEyN,eAAgB,IACzB3N,QAlGK,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcM,GAAK,eAAgB,CAC9C0I,MAAOnF,EAAOoF,WACdK,OACArH,UAJW,gBACLnC,EADK,EACLA,SAKR6R,EAAY7R,GACZyI,EAAS1E,EAAOoF,YAChB4T,IARa,6DAmGLrb,MAAOA,EACP4B,MAAOiC,EAAQ,YAGjB,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLyN,eAAgB,GAChBjN,cAAe,MACfqC,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO+P,WAApB,IAA+BzJ,KAAM,IAC1CkD,YAAa3F,EAAQ,QACrB0N,qBAAsBvR,EAAMwR,kBAC5BzN,MAAOitB,EACPvnB,aAAc,SAACrM,GAAD,OAAO6zB,EAAU7zB,MAEjC,kBAAC,GAAD,CAAQyE,QA1GD,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACYM,GAAK,WAAY,CAC1C0I,MAAOnF,EAAOoF,WACdK,OACArH,OACAiV,GAAIsb,KALS,gBACP1yB,EADO,EACPA,SAMRyI,EAAS1E,EAAOoF,YAChB4T,IACAlL,EAAY7R,GATG,6DA0GoB0B,MAAOA,EAAO4B,MAAOiC,EAAQ,WAGhD,kBAATpD,GACC,kBAACyB,EAAA,QAAD,CACEH,MAAO,CACLyN,eAAgB,GAChBjN,cAAe,MACfqC,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO+P,WAApB,IAA+BzJ,KAAM,IAC1CkD,YAAa3F,EAAQ,kBACrB0N,qBAAsBvR,EAAMwR,kBAC5BzN,MAAOoa,EACP1U,aAAc,SAACrM,GAAD,OAAOwmB,EAASxmB,MAEhC,kBAAC,GAAD,CACEyE,QArGM,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACSM,GAAK,cAAe,CAC7C0I,MAAOnF,EAAOoF,WACdK,OACArH,OACA0d,WALgB,gBACV7f,EADU,EACVA,SAMRyI,EAAS1E,EAAOoF,YAChB4T,IACAlL,EAAY7R,GATM,6DAsGN0B,MAAOA,EACP4B,MAAOiC,EAAQ,kBAKX,SAATpD,GACC,kBAACyB,EAAA,QAAD,CACEH,MAAO,CACLyN,eAAgB,GAChBjN,cAAe,MACfqC,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO+P,WAApB,IAA+BzJ,KAAM,IAC1CkD,YAAa3F,EAAQ,QACrB0N,qBAAsBvR,EAAMwR,kBAC5BzN,MAAOmtB,EACPznB,aAAc,SAACrM,GAAD,OAAO+zB,EAAO/zB,MAE9B,kBAAC,GAAD,CACEyE,QAxII,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACWM,GAAK,YAAa,CAC3C0I,MAAOnF,EAAOoF,WACdK,OACArH,OACAywB,SALc,gBACR5yB,EADQ,EACRA,SAMRyI,EAAS1E,EAAOoF,YAChB4T,IACAlL,EAAY7R,GATI,6DAyIJ0B,MAAOA,EACP4B,MAAOiC,EAAQ,iBAKrB,O,GCpNgBtC,IAAW1C,IAAI,UAAzB2C,I,GAAR8F,O,GAAQ9F,OAmKDmwB,GA9JA,SAAC,GAOT,IAAD,IANJ9qB,YACExE,EAKE,EALFA,OACAyE,EAIE,EAJFA,GAEU9G,GAER,EAHF+G,SAGE,EAFF1E,OAAUrC,OAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAE0BzD,oBAAS,GAFnC,WAEG8b,EAFH,KAEYiE,EAFZ,OAGwB/f,mBAAS,IAHjC,WAGGouB,EAHH,KAGWC,EAHX,OAM4BruB,mBAAS,MANrC,WAMGlF,EANH,KAMa6R,EANb,OAOwB3M,mBAAS,IAPjC,WAOGqW,EAPH,KAOW2B,EAPX,OAQsBhY,mBAAS,IAR/B,WAQG2a,EARH,KAQUyF,EARV,OASkBpgB,oBAAS,GAT3B,WASGsuB,EATH,KASQC,EATR,OAUoBvuB,mBAAS,MAV7B,WAUG/C,EAVH,KAUSgb,EAVT,KAYIvC,EAA+BuD,2BAA/BvD,2BAuBR3b,IArBkB,4BAAAiB,EAAAC,OAAA,uDAChB8kB,GAAW,GADK,WAAA/kB,EAAA,MAGSK,GAAI,WAHb,gBAGR+yB,EAHQ,EAGRA,OACRrO,GAAW,GACXsO,EAAUD,GALM,+DAgDlB,OACE,kBAAC1vB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3B+c,GAAW,kBAAChO,GAAA,EAAD,MACXhT,GAAY,kBAAC,GAAD,KAAIA,IAGnB,kBAAC4D,EAAA,QAAD,KAGE,kBAACA,EAAA,QAAD,CAAMH,MAAO,CAAEyN,eAAgB,KAC7B,kBAACtN,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,CACEhD,MAAaiC,EAANiuB,EAAc,MAAiB,QACtCjwB,QAAS,kBAAMkwB,GAAQD,IACvB/vB,MAAO,CAAEuE,KAAM,EAAGkJ,eAAgB,GAAIP,WAAY,MAGpD,kBAAC1F,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO,CAAC6V,GAAO5X,GAAO+P,UAAW,CAAEd,WAAY,KAC/ClL,MAAO8V,EACPpQ,aAAc+R,EACdhS,YAAa3F,EAAQ,YAGvB,kBAAC,GAAD,CACEjC,MAAciC,EAAPpD,GAA+B,YACtCoB,QArDO,WAEjB,IAAMmwB,EAAa,CAAC,UAAW,SAAU,OAAQ,aAAc,WAEzD9tB,EAAU8tB,EAAWjtB,KAAI,SAACtE,GAAD,OAAUoD,EAAQpD,MAEjDyD,EAAQuZ,KAAK5Z,EAAQ,WACrB,IACM6Z,EAAoBxZ,EAAQ/E,OAAS,EAE3C+Z,EACE,CACEhV,UACAwZ,oBACAC,4BAP2Bvf,IAS7B,SAAC+a,GACKA,EAAc6Y,EAAW7yB,OAAS,GACpCsc,EAAQuW,EAAW7Y,QAoCfpX,MAAO,CAAEuE,KAAM,EAAGkJ,eAAgB,GAAIP,WAAY,MAGpD,kBAAC,GAAD,CAAGlN,MAAO,CAAEkN,WAAY,KAAOpL,EAAQ,QAEvC,kBAAC0F,GAAA,EAAD,CACEgI,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO,CAAC6V,GAAO5X,GAAO+P,UAAW,CAAEd,WAAY,KAC/ClL,MAAOoa,EACP1U,aAAcma,EACdpa,YAAa3F,EAAQ,WAGvB,kBAAC,GAAD,CACEjC,MAAOiC,EAAQ,UACfhC,QAAS,kBApFS,4BAAArD,EAAAC,OAAA,uDAC5B8kB,GAAW,GADiB,WAAA/kB,EAAA,MAEDM,GAAK,oBAAqB,CACnD0I,MAAOnF,EAAOoF,WACdhH,OACA0d,QACAtE,SACAiY,SAP0B,gBAEpBxzB,EAFoB,EAEpBA,SAORilB,GAAW,GACXpT,EAAY7R,GAVgB,4DAoFH2zB,IACflwB,MAAO,CAAEuE,KAAM,EAAGkJ,eAAgB,GAAIP,WAAY,QAKxD,kBAACQ,GAAA,EAAD,CACEC,KAAMkiB,EACNzJ,WACkB,QAAhB/jB,UAASC,QACLjG,EACAqB,KAAKsP,MAAMvN,GAAK,KAEtBogB,sBACkB,QAAhBxd,UAASC,GACL,CAAE9B,cAAe,MAAOwI,SAAU,aAClC3M,EAENigB,aAAc,SAACte,EAAM7C,GAAP,cAAyBA,GACvC2R,WAAY,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAkB,EAAZ7C,MACnB,OACE,kBAACgF,EAAA,QAAD,CACEH,MAAO,CACLP,MA3IL,MA8IG,kBAACU,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIvG,EAAK+xB,IAAMjuB,EAAQ,aAAeA,EAAQ,aAGhD,kBAAC,GAAD,KACG9D,EAAK8Z,OADR,IACiBhW,EAAQ9D,EAAKU,OAE9B,kBAAC,GAAD,cAAKtD,EAAa4C,EAAKoe,OAAvB,UAMR,kBAACjc,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,S,2aCjKZ/F,IAAW1C,IAAI,UAA1ByI,O,IACF4qB,GAAS,CACb,CACEv1B,IAAK,WACLiF,MAAO,UAGT,CACEjF,IAAK,OACLiF,MAAO,WAGT,CACEjF,IAAK,OACLiF,MAAO,QAET,CACEjF,IAAK,SACLiF,MAAO,UAET,CACEjF,IAAK,UACLiF,MAAO,WAET,CACEjF,IAAK,OACLiF,MAAO,QAET,CACEjF,IAAK,OACLiF,MAAO,QAET,CACEjF,IAAK,WACLiF,MAAO,cAGLuwB,G,iCACJ,WAAYtsB,GAAQ,IAAD,iBACjB,cAAMA,IA0CRgJ,WAAa,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MACZ8J,EAAe,EAAKnB,MAApBmB,WAEForB,EAAW,EAAKhwB,MAAMiwB,QAAQ11B,IAE9B4pB,GAAYpf,KAAKzG,MAAQX,EAAKymB,UAAY,IAAQ,EAClD8L,EACS,aAAbF,EACI7L,EACE,SACA,eACW,SAAb6L,EAAA,SACIryB,EAAKuL,KADT,KAEa,WAAb8mB,EAAA,GACGryB,EAAKsa,OACK,YAAb+X,EAAA,GACGryB,EAAKqa,QACK,SAAbgY,EAAA,GACGryB,EAAKoa,KACK,SAAbiY,EAAA,GACGhxB,GAAQrB,EAAKK,KAAM,QACT,aAAbgyB,EAAA,GACG/wB,GAAYtB,EAAK4L,SAAU,QAD9B,SAEI5L,EAAKwL,KAFT,KAIN,OACE,kBAACrJ,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZhC,kBAAmB,GACnBoZ,gBAAiB,KAGnB,kBAAC,GAAD,CAAMhV,WAAYA,EAAYsR,KAAMvY,IACpC,kBAAC,GAAD,KAAIuyB,KAhFS,EAqFnBrZ,gBAAkB,WAAO,IAAD,EAChBpV,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QAGrD/C,EAAUguB,GAAOntB,KAAI,SAACwtB,GAAD,OAAOA,EAAE3wB,SAEpCsC,EAAQuZ,KAAK5Z,EAAQ,WACrB,EAAKgC,MAAMqT,2BACT,CACEhV,UACAwZ,kBAAmBxZ,EAAQ/E,OAAS,EACpCwe,uBAAwB,OAE1B,SAACxE,GACKA,EAAcjV,EAAQ/E,OAAS,IACjC,EAAKwI,SAAS,CAAE0qB,QAASH,GAAO/Y,KAChC,EAAK9J,aAAa6iB,GAAO/Y,GAAaxc,UArG3B,EA4GnBiT,aAAe,WAAO,IAAD,EACb/L,EAAUnH,EAAe,SAAC,EAAKmJ,MAAMgB,YAAYC,SAAxB,EAAC,EAA2BG,QADxC,EAGS,EAAK7E,MAAhBhG,GAHE,EAGXolB,QAHW,EAGFplB,QAEjB,OACE,kBAAC8F,EAAA,QAAD,CACEH,MAAO,CAAES,gBAAiB,EAAKqD,MAAMgB,YAAYxE,OAAOrC,MAAMmR,UAE9D,kBAAC,GAAD,CACEnR,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAKoX,mBACpBvX,KAAK,SACLC,KAAK,cACLI,MAAO,CAAE8I,UAAW,GAAIoW,iBAAkB,MAG5C,kBAAC/e,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdrC,gBAAiB,EAAKqD,MAAMgB,YAAYxE,OAAOrC,MAAMyC,UACrD+M,eAAgB,GAChByR,iBAAkB,GAClBre,kBAAmB,GACnB0E,OAAQ,GACR1C,WAAY,WAGd,kBAAC2E,GAAA,EAAD,CACEC,YAAa3F,EAAQ,UACrB0N,qBACE,EAAK1L,MAAMgB,YAAYxE,OAAOrC,MAAMwR,kBAEtCzN,MAAO3H,EACP2F,MAAO,CACLuE,KAAM,EACN2C,SAAU,GACVlG,MAAO,EAAK8C,MAAMgB,YAAYxE,OAAOrC,MAAMgD,eAE7CyG,aAAc,SAACrN,GAAD,OAAY,EAAKuL,SAAS,CAAEvL,cAG5C,kBAAC,KAAD,CACE0G,KAAK,SACLG,KAAM,GACNF,MAAO,EAAK8C,MAAMgB,YAAYxE,OAAOrC,MAAMgD,iBAI/C,kBAACd,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR9E,gBAAiB,EAAKqD,MAAMgB,YAAYxE,OAAOrC,MAAMyC,UACrDmC,WAAY,SACZhC,kBAAmB,KAGrB,kBAAC,GAAD,CAAGb,MAAO,CAAE+C,WAAY,SAAWjB,EAAQ,SAC3C,kBAAC,GAAD,CAAG9B,MAAO,CAAE+C,WAAY,SAAW,EAAK1C,MAAMiwB,QAAQzwB,UAvK5D,IAAMiC,EAAUnH,EAAe,SAACmJ,EAAMgB,YAAYC,SAAnB,EAAC,EAAsBG,QAHrC,OAIjB,EAAK7E,MAAQ,CACXof,QAAS,GACTplB,OAAQ,KACRi2B,QAAS,CACP11B,IAAK,WACLiF,MAAOiC,EAAQ,YATF,E,wDAcE,IAAD,EACCkC,KAAKF,MAAMgB,YAAtBxE,OAER0D,KAAKsJ,aAAatJ,KAAK3D,MAAMiwB,QAAQ11B,KAErC,IAAM4S,EAAK,SAAGxJ,KAAKF,MAAMmB,WAAW5E,MAAMgV,aAA/B,EAAG,EAAoC7H,MAC9CA,IACFxJ,KAAK4B,SAAS,CAAE0qB,QAASH,GAAO3iB,KAChCxJ,KAAKsJ,aAAa6iB,GAAO3iB,GAAO5S,Q,mCAIvB4S,GAAQ,IAAD,OAClBxR,MAASlC,EAAUC,YAAd,kBAA2CyT,EAAS,CACvD1R,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOmjB,GAAP,SAAAhjB,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAE6Z,YADZ,+DAGL9iB,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAwIV,IAAD,EAIHoH,KAAKF,MAJF,KAELmB,WAFK,EAGLH,YAAeC,GAEWf,KAAK3D,OAAzBof,EALD,EAKCA,QAASplB,EALV,EAKUA,OAEXo2B,EAAkBhR,EAAQ3L,QAAO,SAAC1N,GAAD,aACrC/L,IAAM,SAAG+L,EAAErF,WAAL,EAAG,EAAQ2vB,cAAc5H,SAASzuB,EAAOq2B,mBAEjD,OACE,kBAACvwB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACmJ,GAAA,EAAD,CACEmS,sBAAuB,CACrBta,OAAwB,QAAhBlD,UAASC,GAAe,OAAIjG,GAEtC6kB,uBAAwB,kBAAM,kBAAC,GAAD,OAC9BtT,oBAAqB5J,KAAK6J,aAC1BF,KAAM8iB,EACN3jB,WAAY9I,KAAK8I,WACjB0P,oBAAqBxY,KAAKiT,oB,GApMdxS,aA2MP4S,gCAAmB+Y,ICrOnBO,GAjBQ,SAAC,GAKjB,IAAD,IAJJ7rB,YACEC,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,uBCVX8uB,GAAa,CACjB,CACE7vB,KAAM,iBAER,CACEA,KAAM,UAER,CACEA,KAAM,OAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,SA4FK8vB,GAxFG,SAAC,GAUZ,IATL5rB,EASI,EATJA,WASI,IARJH,YAEEC,GAME,EAPFzE,OAOE,EANFyE,IACAuU,EAKE,EALFA,aAEAD,GAGE,EAJFrU,SAIE,EAHFqU,QACUpb,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B6V,EAAc,CAClBC,cAAelZ,EAAQ,iBACvBmZ,OAAQnZ,EAAQ,UAChBoZ,SAAUpZ,EAAQ,YAClBuW,QAASvW,EAAQ,iBACjBqZ,WAAYrZ,EAAQ,cACpBsZ,IAAKtZ,EAAQ,OACbuZ,QAASvZ,EAAQ,WACjBwZ,YAAaxZ,EAAQ,eACrB0H,KAAM1H,EAAQ,cACd+K,KAAM/K,EAAQ,QACdyZ,OAAQzZ,EAAQ,WAGlBtG,GAAO8d,GAEP,IAAIxB,EAAS,EAYb,OAXA8Y,GACG5tB,KAAI,SAAC8tB,GAAD,OAAOA,EAAE/vB,QACb9F,SAAQ,SAAC81B,GACR,aAAO1X,OAAP,EAAOA,EAAQpe,SAAQ,SAAC8K,EAAM5K,GAExB4K,EADgBgrB,EAAN,YACV,MAAmBhsB,OAAnB,EAAmBA,EAAIhE,QAAvB,MAA+BgE,OAA/B,EAA+BA,EAAIhE,QACrC+W,GAAU,SAMhB,kBAACvC,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAAC,GAAD,CAAGgM,MAAI,GACJ7K,EAAQ,WADX,IACwBgW,EAAQ,IACdhW,EAAJ,IAAXgW,EAAuB,WAAsB,cAFhD,KAKC8Y,GACE5tB,KAAI,SAAC8tB,GAAD,OAAOA,EAAE/vB,QACbiC,KAAI,SAAC+tB,GACJ,aAAO1X,OAAP,EAAOA,EAAQrW,KAAI,SAAC+C,EAAM5K,GACxB,IAAMu0B,EAAcqB,EAAN,QACRC,EAAiBjW,EAAYgW,GAEnC,QADuB10B,IAAnB20B,GAA8Bn0B,QAAQuF,IAAI2uB,GAC1ChrB,EAAK2pB,MAAL,MAAmB3qB,OAAnB,EAAmBA,EAAIhE,QAAvB,MAA+BgE,OAA/B,EAA+BA,EAAIhE,MACrC,OACE,kBAACZ,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,WAGd,kBAAC,GAAD,KAAOmuB,EAAP,OAA4BjrB,EAAKA,MACjC,kBAAC,GAAD,CACEnL,IAAG,QAAUO,EAAQ41B,EACrB/wB,MAAO,CAAEyN,eAAgB,IACzBxP,MAAOA,EACP4B,MAAOiC,EAAQ,UACfhC,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAMqyB,EACNhrB,KAAMA,EAAKA,iBAU7B,kBAAC5F,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,Q,klBC1GvBwC,GADYvI,IAAW1C,IAAI,UAAzB2C,MACsB,IAmQf6a,GAjQG,SAAC,GAOZ,IAAD,IANJxV,YACEC,EAKE,EALFA,GACAzE,EAIE,EAJFA,OACUrC,EAGR,EAHFqC,OAAUrC,MACV+G,EAEE,EAFFA,SAGIlD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAGsBzD,mBAAS,MAH/B,WAGUwvB,GAHV,aAIsBxvB,mBAAQ,MAACsD,OAAD,EAACA,EAAIqP,OAJnC,WAIGA,EAJH,KAIUwT,EAJV,OAMwBnmB,mBAAS,IANjC,WAMGyvB,EANH,KAMWC,EANX,OAOsC1vB,mBAAS,MAP/C,WAOG2vB,EAPH,KAOkBC,EAPlB,OAQkB5vB,oBAAW,MAAFsD,OAAA,EAAAA,EAAIusB,MAAO,IARtC,WAQGA,EARH,KAQQC,EARR,KAUJ/1B,IAAO,WACL2hB,IACAqU,OAGF,IAAMA,EAAc,WAClBx1B,MACKlC,EAAUC,YADV,qBAC0CuG,EAAOoF,WADjD,QACmEX,EAAGsR,GACzE,CACEva,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAiB,IAAd40B,EAAa,EAAbA,OACPC,EAAUD,MAEXv0B,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAqDdugB,EAAqB,0BAAA1gB,EAAAC,OAAA,mDACL,QAAhB2F,UAASC,IAAgC,YAAhBD,UAASC,GADb,kCAAA7F,EAAA,MAEE2gB,IAAqBA,MAFvB,gBAGR,YAHQ,EAEfC,QAENzb,MAAM,6DAJe,6DAmF3B,OACE,kBAACzB,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN1B,WAAY,SACZjC,eAAgB,SAChBsJ,OAAQ,KAGV,kBAAC3J,EAAA,EAAD,CAAkBT,QA7II,0BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MAClB0gB,KADkB,kCAAA1gB,EAAA,MAIH+gB,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfE,QAAQ,EACRgL,QAAS,KATW,QAIlB/K,EAJkB,QAYVC,WAEV6J,EACE9J,EAAOD,OAAP,cACkBC,EAAOpf,KADzB,WACwCof,EAAOD,OAC3CC,EAAOlF,KAjBO,gDAqBtB/b,QAAQuF,IAAR,MArBsB,kEA8InBgS,EACC,kBAAC/O,EAAA,EAAD,CACEC,OAAQ,CACNsT,IAAKxE,EAAM0U,SAAS,cAChB1U,EACAta,EAAUC,YAAcqa,GAE9BpU,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7B6Z,WAAW,UAGb,kBAAC/Z,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7B6Z,WAAW,WAKjB,kBAAC,KAAD,CACE5P,qBAAsBvR,EAAMwR,kBAC5BzP,MAAO,CAACA,GAAM/B,GAAO+P,UAAW,CAAEvO,MAAO,OAAQ8F,OAAQ,MACzDga,WAAW,EACXvY,cAAe,EACfhF,MAAOsvB,EACP5pB,aAAc6pB,IAEhB,kBAAC,GAAD,CACE1xB,MAAOiC,EAAQ,QACf9B,MAAO,CAAEyN,eAAgB,IACzB3N,QAAS,WACP9D,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBk1B,IAAKA,EACLld,QACA1O,WAAYpF,EAAOoF,eAGpBpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLqF,MAAME,EAAQ,YACdkD,EAAS1E,EAAOoF,eAEjB/I,OAAM,SAACC,GACNC,QAAQuF,IAAI,eAAgBxF,GAC5BgF,MAAME,EAAQ,6BAKtB,kBAAC,GAAD,CACE9B,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,iBACfhC,QA9IoB,0BAAArD,EAAAC,OAAA,2EAAAD,EAAA,MAEH+gB,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfE,QAAQ,EACRgL,QAAS,KAPW,OAElB/K,EAFkB,OAUtBjhB,QAAQuF,IAAI,SAAU0b,GAEjBA,EAAOC,YACVkT,EAASnT,GA9CY2T,EA+CH3T,EA9CtB9hB,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBgY,MAAOqd,EAAI7Y,IACXnT,MAAOnF,EAAOoF,eAGfpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLi1B,IACA5vB,MAAME,EAAQ,YACdmvB,EAAS,SAEVt0B,OAAM,SAACC,GACNC,QAAQuF,IAAI,eAAgBxF,GAC5BgF,MAAME,EAAQ,2BAaM,gDAiBtBjF,QAAQuF,IAAR,MAjBsB,kCAjCA,IAACqvB,IAiCD,8BAiJtB,kBAAC/jB,GAAA,EAAD,CACEC,KAAMujB,EACN3U,UAAW6U,EACXhL,WAAYre,GAAgB,EAAI,EAChC+E,WAhIa,SAAC,GAAqB,IAAnB9O,EAAkB,EAAlBA,KACd4a,GADgC,EAAZzd,MACdrB,EAAUC,YAAc,IAAMiE,EAAKoW,OAC/C,OACE,kBAAC7T,EAAA,EAAD,CAAkBT,QAAS,kBAAMuxB,EAAiBrzB,EAAKqY,MACrD,kBAAClW,EAAA,QAAD,KACE,kBAACkF,EAAA,EAAD,CACEC,OAAQ,CAAEsT,OACV5Y,MAAK,IACHP,MAAO,IACP8F,OAAQ,KACJ6rB,IAAkBpzB,EAAKqY,GACvB,CAAEvP,YAAa,EAAGC,YAAa,SAC/B,IAENqY,WAAW,eAmHf9C,aAAc,SAACte,GAAD,WAAeA,EAAKqY,IAClCmG,oBA7Ge,WACnB,OACE,kBAAC,GAAD,CACE3c,MAAOiC,EAAQ,UACfhC,QAAS,WACHsxB,EACFp1B,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd2Q,GAAI+a,MAGL90B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAgB,EAAb40B,OACPM,OAED70B,OAAM,SAACC,GACNC,QAAQD,MAAMA,MAGlBgF,MAAME,EAAQ,8B,+aC7DX4vB,G,iCAnHb,WAAY5tB,GAAQ,IAAD,sBACjB,cAAMA,IAyBRqR,OAAS,WAAO,IACN7U,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAE2X,SAAS,IACzBvhB,MAASlC,EAAUC,YAAd,MAAgC,CACnC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd+S,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAghB,SAAS,EACT7E,OAAQhb,KAAKgb,SACbD,QAAS,KAEX,EAAK3U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OApDD,EAuDnBqa,aAAe,WAAO,IAAD,EACI,EAAKnT,MAAMgB,YAAlBC,GADG,EACXzE,OADW,EACHyE,IACVjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QACpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAa,EAAKhB,MAAMgB,YACxB2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,QACfhC,QAAS,EAAKqV,SAGhB,kBAAC,GAAD,CAAQrQ,YAAa,EAAKhB,MAAMgB,gBAzEpC,EAAKzE,MAAQ,CACX9D,SAAU,KACVkc,QAAS,GACTC,OAAQhb,KAAKgb,UANE,E,6CAUV9d,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,M,+BA2DA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAOHyH,KAAKF,MAJPgB,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG1B,WAAY,WAClC,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG8X,UAAW,MACjC,kBAAC,UAAD,CAAMrc,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7CyH,KAAKiT,qB,GA5GExS,a,qkBCiDJqJ,KAAWC,OAAO,CAC/BgK,IAAK,CACHvX,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YA1DhB,IA6De8uB,GA7DD,SAAC,GAQT,EAPJ1sB,WAOK,IAAD,IANJH,YACExE,EAKE,EALFA,OACAyE,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACU/G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAG4BzD,mBAAS,MAHrC,WAGGlF,EAHH,KAGa6R,EAHb,OAIwB3M,mBAAS,IAJjC,WAIGqW,EAJH,KAIW2B,EAJX,KAgBJ,OACE,kBAAClE,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAACR,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG2F,OAAQ,KAC9B,kBAAC/J,EAAA,QAAD,KACG5D,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAChC,kBAAC4D,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAM/B,GAAO+P,WAApB,IAA+BzJ,KAAM,IAC1CkD,YAAa3F,EAAQ,UACrB0N,qBAAsBvR,EAAMwR,kBAC5BzN,MAAO8V,EACPpQ,aAAc,SAACoQ,GAAD,OAAY2B,EAAU3B,MAGtC,kBAAC,GAAD,CACE7Z,MAAOA,EACP4B,MAAOiC,EAAQ,UACfhC,QAAS,kBA3BP,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACeM,GAAK,QAAS,CACvC2I,WAAYpF,EAAOoF,WACnBoS,YAHU,gBACJvb,EADI,EACJA,SAKR6R,EAAY7R,GACZyI,EAAS1E,EAAOoF,YAPJ,4DA2BaksB,IACf5xB,MAAO,CAAEP,MAAO,SAMxB,kBAACU,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QCfd2Q,GAlCQ,SAAC,GAOlB,EANJjR,WAMI,EALJH,YAKK,IAAD,IAJJA,YACEC,EAGE,EAHFA,GAGE,IAFFzE,OAGIwB,GADF,EAFQ7D,MAER,EAFeyH,WAGH/K,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAACqQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KAErC,kBAAC0E,EAAA,EAAD,CACEC,OAAQvK,EAAQ,KAChBiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,OAE/B,kBAAC,GAAD,KAAIzD,EAAQ,eAEZ,kBAAC,GAAD,CAAG6K,MAAI,EAAC3M,MAAO,CAAE8I,UAAW,KACzBhH,EAAQ,kBAEX,kBAAC,GAAD,iBACA,kBAAC,GAAD,kBAEA,kBAAC,GAAD,CAAG6K,MAAI,EAAC3M,MAAO,CAAE8I,UAAW,KACzBhH,EAAQ,oBADX,KAGA,kBAAC,GAAD,mBACA,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuF,OAAQ,QC9BvBssB,GAAiB,eAyGR1D,GApGK,SAAC,GAKf,EAJJlpB,WAIK,IAFOhH,EAER,EAHJ6G,YACExE,OAAUrC,MAGZ,OACE,kBAACsX,EAAA,EAAD,CAAYvV,MAAO,CAAE6C,WAAY,WAC/B,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,UAAD,CACElK,MAAO,CAAEgB,MAAO/C,EAAME,aACtB2zB,YAAa,SAACC,GACZl1B,QAAQuF,IAAI,YAAa2vB,GACzB3Q,UAAQC,QAAQ0Q,KAGdF,GAPN,qEAQMA,GARN,w5ICYOG,GApBA,SAAC,GAAwC,EAAtC/sB,WAAuC,IAAZF,EAAW,EAA1BD,YAAeC,GACrCjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAE6C,WAAY,WACzB,kBAAC1C,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC,GAAD,KAAKpI,EAAQ,WAEb,kBAAC,GAAD,KAAIA,EAAQ,yBCsRd+T,GAAS/H,KAAWC,OAAO,CAC/BgK,IAAK,CACHvX,cAAe,MACfwI,SAAU,OACVpI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAIDovB,GA5RO,SAAC,GAYhB,IAAD,MAXJhtB,EAWI,EAXJA,WAEWoQ,EASP,EAVJpQ,WACE5E,MAASgV,OASP,IAPJvQ,YACExE,EAME,EANFA,OACAyE,EAKE,EALFA,GACAsU,EAIE,EAJFA,OACAC,EAGE,EAHFA,aAGE,IAFFhZ,OAAiBoF,GAEf,EAFQzH,MAER,EAFeyH,YAEf,EAC0BjE,mBAAS,IADnC,WACGimB,EADH,KACYC,EADZ,OAEwBlmB,mBAAS,IAFjC,WAEGyvB,EAFH,KAEWC,EAFX,OAG0B1vB,oBAAS,GAHnC,WAGG8b,EAHH,KAGYiE,EAHZ,KAIEzgB,EAAI,MAAGsU,OAAH,EAAGA,EAAQtU,KAErBvF,IAAO,WACL02B,EAAWnxB,MAEbvF,GAAO8d,GAEP3d,qBAAU,WACRu2B,EAAWnxB,KACV,OAACsU,OAAD,EAACA,EAAQtU,OAEZpF,qBAAU,WACR61B,MACC,OAAC9J,OAAD,EAACA,EAASrR,KAEb,IAAM6b,EAAa,SAACnxB,GAClB,OAAO/E,MAASlC,EAAUC,YAAd,iBAA0CgH,EAAQ,CAC5DjF,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOuT,GAAP,SAAApT,EAAAC,OAAA,uDACJirB,EAAW9X,GACX2R,GAAW,GAFP,kBAGG3R,GAHH,+DAKLlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIdob,EAAW,SAACpd,EAAKoH,GACrB,OACE,kBAAC7B,EAAA,QAAD,CAAMH,MAAO6V,GAAOkC,KAClB,kBAAC,GAAD,KAAInd,GACJ,kBAAC,GAAD,KAAIoH,KAKJwvB,EAAc,WAClBx1B,MACKlC,EAAUC,YADV,qBAC0CuG,EAAOoF,WADjD,eACmEgiB,OADnE,EACmEA,EAASrR,IAC/E,CACEva,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAiB,IAAd40B,EAAa,EAAbA,OACPC,EAAUD,MAEXv0B,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIdkF,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,GAAIqY,EACF,OAAO,kBAAChO,GAAA,EAAD,MAOT,IAAMiV,EAAWpf,KAAKzG,OAAL,MAAa+oB,OAAb,EAAaA,EAASjD,UAAW,IAE5CzjB,EAAQjD,GAAa2pB,EAASpnB,EAAOrC,OAErC2a,EAAM9e,EAAUC,aAAV,MAAwB2tB,OAAxB,EAAwBA,EAAStT,OACvC+d,KAAY,MAACzK,OAAD,EAACA,EAAStT,OAqC5B,OACE,kBAACmB,EAAA,EAAD,KACE,kBAACpV,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,WAC7B,kBAACT,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiB,OACjBqC,aAAc,GACdoH,OAAQ,GACRvJ,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAE+C,WAAY,OAAQ/B,UAAnC,MAA6C0mB,OAA7C,EAA6CA,EAAS3mB,MAErDoxB,EACC,kBAAChyB,EAAA,QAAD,KACE,kBAACkF,EAAA,EAAD,CACEC,OAAQ,CAAEsT,OACV5Y,MAAO,CACLP,MAAO,OACP8F,OAAQ,KAEV6Z,WAAW,aAGb,MAEI,MAAPsI,OAAA,EAAAA,EAASpe,MACR,kBAAC/I,EAAA,EAAD,CACET,QAAS,WAAO,IAAD,EACbmF,EAAWgC,SAAS,OAAQ,CAAElG,KAAI,MAAE2mB,GAAF,SAAEA,EAASpe,WAAX,EAAE,EAAevI,SAGrD,kBAAC,GAAD,cACQ,MAAP2mB,GAAA,SAAAA,EAASpe,WAAT,IAAe8K,QACd,kBAAC/O,EAAA,EAAD,CACEC,OAAQ,CAAEsT,IAAK9e,EAAUC,aAAV,MAAwB2tB,GAAxB,SAAwBA,EAASpe,WAAjC,EAAwB,EAAe8K,QACtDpU,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7B6Z,WAAW,YAGf,kBAAC,GAAD,WAAIsI,GAAJ,SAAIA,EAASpe,WAAb,EAAI,EAAevI,OAEnB,KAEHiX,EAASlW,EAAQ,UAAW0iB,EAAW,SAAM,gBAC7CxM,EAASlW,EAAQ,QAAT,gBAAsB4lB,OAAtB,EAAsBA,EAASne,OACvCyO,EAASlW,EAAQ,QAAT,gBAAsB4lB,OAAtB,EAAsBA,EAASle,OACvCwO,EAASlW,EAAQ,QAASzC,GAAO,MAACqoB,OAAD,EAACA,EAASrpB,KAAM,SACjD2Z,EACClW,EAAQ,YACRxC,GAAW,MAACooB,OAAD,EAACA,EAAS9d,SAAU,SAEhCoO,EAASlW,EAAQ,WAAT,MAAuB4lB,OAAvB,EAAuBA,EAAS/d,QAAhC,KACRqO,EAASlW,EAAQ,QAAT,MAAkB4lB,OAAlB,EAAkBA,EAAStP,MACnCJ,EAASlW,EAAQ,WAAT,MAAqB4lB,OAArB,EAAqBA,EAASrP,SACtCL,EAASlW,EAAQ,eAAT,MAAyB4lB,OAAzB,EAAyBA,EAASpP,QAE3C,kBAAC,GAAD,CAAG3L,MAAI,GAAE7K,EAAQ,eA5FN,CACjB,CACEf,KAAM,iBAER,CACEA,KAAM,UAER,CACEA,KAAM,OAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,SA8DCiC,KAAI,SAAC8tB,GAAD,OAAOA,EAAE/vB,QACbiC,KAAI,SAAC+tB,GACJ,OACE1X,GACAA,EAAOrW,KAAI,SAAC+C,EAAM5K,GAChB,IAAMu0B,EAAcqB,EAAN,QACd,OAAW,MAAPrJ,OAAA,EAAAA,EAAS3mB,QAASgF,EAAK2pB,GAEvB,kBAAC,GAAD,KACG5tB,EAAQivB,GADX,OAC0BhrB,EAAKA,MAK5B,WAKf,kBAAC5F,EAAA,QAAD,CAAMH,MAAO6V,GAAOkC,KAClB,kBAAC,GAAD,CACElY,MAAOiC,EAAQ,QACfhC,QAAS,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcK,GAAI,iBACN4I,EADK,WACgBgiB,EAAQrR,KAFzC,gBACCA,EADD,EACCA,GAIRpR,EAAWgC,SAAS,UAAW,CAAEoP,OAL1B,+DASX,kBAAC,GAAD,CACExW,MAAOiC,EAAQ,OACfhC,QAAS,kBACPmF,EAAWgC,SAAS,MAAO,CACzBlG,KAAM2mB,EAAQ3mB,UAIpB,kBAAC,GAAD,CACElB,MAAOiC,EAAQ,UACfhC,QAAS,kBACPmF,EAAWgC,SAAS,OAAQ,CAC1BlG,KAAM2mB,EAAQ3mB,UAIpB,kBAAC,GAAD,CACElB,MAAOiC,EAAQ,UACfhC,QAAS,kBACPmF,EAAWgC,SAAS,SAAU,CAC5B0M,GAAI+T,EAAQ3mB,YAOtB,kBAACZ,EAAA,QAAD,CAAMH,MAAO,CAAEyN,eAAgB,KAC7B,kBAAC,GAAD,WAAIia,OAAJ,EAAIA,EAAS4J,MAGf,kBAACnxB,EAAA,QAAD,KACG+wB,EAAOluB,KAAI,SAACoR,GACX,IAAMwE,EAAM9e,EAAUC,YAAc,IAAMqa,EAAMA,MAChD,OACE,kBAACjU,EAAA,QAAD,KACE,kBAACkF,EAAA,EAAD,CACEC,OAAQ,CAAEsT,OACV5Y,MAAO,CACLP,MAAO,OACP8F,OAAQ,KAEV6Z,WAAW,oB,+aCnFdgT,G,mLAnMb/xB,MAAQ,CACNwE,SAAU,KACVtI,SAAU,KACVylB,KAAM,GACN3L,GAAI,M,EAsBNgc,YAAc,WAAO,IACX/xB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MAASlC,EAAUC,YAAd,mBAA4CuG,EAAOoF,WAAc,CACpE5J,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAO0lB,GAAP,SAAAvlB,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAEoc,SADZ,+DAGLrlB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB01B,QAAU,SAACjc,GAAQ,IACT3Q,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEia,KAAI3Q,iBAE1BpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU8Z,OAC1B,EAAKvS,MAAMgB,YAAYE,SAASU,GAChC,EAAK2sB,cAHD,+DAKL11B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB21B,SAAW,SAAClc,GAAQ,IACV3Q,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEia,KAAI3Q,iBAE1BpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU8Z,OAC1B,EAAKvS,MAAMgB,YAAYE,SAASU,GAChC,EAAK2sB,cAHD,+DAKL11B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB4tB,WAAa,SAACnU,GAAQ,IACZ3Q,EAAe,EAAK5B,MAAMgB,YAAYxE,OAAtCoF,WACR1J,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEia,KAAI3Q,iBAE1BpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAU8Z,OAC1B,EAAKvS,MAAMgB,YAAYE,SAASU,GAChC,EAAK2sB,cAHD,+DAKL11B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBkQ,WAAa,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MAAY,EAM5B,EAAK2I,MAJPgB,YACEC,EAH4B,EAG5BA,GACU9G,EAJkB,EAI5BqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,SAChBiC,WAAY,SACZC,aAAc,GACdgE,YAAa,EACbC,YAAa,UAGf,kBAAC1B,EAAA,EAAD,CACErF,MAAO,CACLP,MAAO,IACP8F,OAAQ,IACR6Z,WAAY,WAEd9Z,OAAQ,CAAEsT,IAAK9e,EAAUC,YAAc,IAAMiE,EAAKoW,SAGpD,kBAACjU,EAAA,QAAD,CAAMH,MAAO,CAAEkN,WAAY,KACxB,EAAK7M,MAAM9D,UAAY,EAAK8D,MAAMgW,KAAOrY,EAAKqY,GAC7C,kBAAC,UAAD,CAAMrW,MAAO,CAAEgB,MAAO/C,EAAME,cACzB,EAAKkC,MAAM9D,SAASA,UAErB,KAEJ,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAKkkB,MACjD,kBAAC,UAAD,CAAMliB,MAAO,CAAEgB,MAAO/C,EAAME,cAA5B,SAAkDH,EAAKuL,MACvD,kBAAC,UAAD,CAAMvJ,MAAO,CAAEgB,MAAO/C,EAAME,cACzBH,EAAK0sB,OADR,IACiB5oB,EAAQ,YAEzB,kBAAC,UAAD,CAAM9B,MAAO,CAAEgB,MAAO/C,EAAME,cACzBH,EAAKokB,MADR,QACoBtgB,EAAQ,UAE5B,kBAAC,GAAD,CACE7D,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAKwyB,QAAQt0B,EAAKqY,OAEnC,kBAAC,GAAD,CACEpY,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,SACfhC,QAAS,kBAAM,EAAKyyB,SAASv0B,EAAKqY,OAEpC,kBAAC,GAAD,CACEpY,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,WACfhC,QAAS,kBAAM,EAAK0qB,WAAWxsB,EAAKqY,U,0DAjKzB,IAAD,OACVpR,EAAejB,KAAKF,MAApBmB,WACWjB,KAAKF,MAAMgB,YAAtBxE,OAER0D,KAAKquB,cAELruB,KAAK2mB,cAAgB1lB,EAAWwM,YAAY,YAAY,WAGtD5U,QAAQuF,IAAI,gBACZ,EAAKiwB,mB,6CAMPruB,KAAK2mB,cAAc9Y,W,+BAwJX,IAAD,EAIH7N,KAAKF,MAJF,KAELmB,WAFK,EAGLH,YAAeC,GAE6Bf,KAAK3D,OAA3C2hB,EALD,EAKCA,KAAiB3L,GALlB,EAKO+T,UALP,EAKkB/T,IAAUvC,GAL5B,EAKsBhF,KALtB,EAK4BgF,QAEnC,OACE,kBAAC3T,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACmJ,GAAA,EAAD,CACE4O,aAAc,SAACte,EAAM7C,GAAP,aAAwBA,GACtCwS,KAAI,MAAEqU,OAAF,EAAEA,EAAMlO,QAAO,SAACgO,GAAD,OAASA,EAAII,OAASpO,IAAWA,KACpDyI,UAAWlG,EACXvJ,WAAY9I,KAAK8I,kB,GA7LJrI,a,+aC8IR+tB,G,mLA7IbnyB,MAAQ,CACNyc,UAAW,GACXC,UAAW,GACXngB,MAAO,KACP8R,QAAS,M,8CAGF,IAAD,OACE3J,EAAOf,KAAKF,MAAMgB,YAAlBC,GAEFjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAH9B,EAK2BlB,KAAK3D,MAA9Byc,EALF,EAKEA,UAAWC,EALb,EAKaA,UAEXtX,EAAUzB,KAAKF,MAAMmB,WAAW5E,MAAMgV,OAAtC5P,MAEHA,EAIDqX,IAAcC,EAKlB/gB,MAASlC,EAAUC,YAAd,mBAA6C,CAChD+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEmS,SAAUoB,KAAIC,QAAQkN,GAAYrX,YAExDnJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GAYL,OAXAhT,QAAQuF,IAAI,eAAgByN,GAExBA,EAAajT,MACf,EAAKgJ,SAAS,CAAE8I,QAAS,KAAM9R,MAAOiT,EAAajT,QAEnD,EAAKgJ,SACH,CAAEhJ,MAAO,KAAM8R,QAASmB,EAAanB,UACrC,eAIGmB,KAERlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,MA5BhBoH,KAAK4B,SAAS,CAAEhJ,MAAOkF,EAAQ,wBAJ/BkC,KAAK4B,SAAS,CAAEhJ,MAAOkF,EAAQ,e,+BAoCzB,IAAD,SAIHkC,KAAKF,MADQiB,GAHV,EAELE,WAFK,EAGLH,YAAeC,IAGXjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRvJ,QAAS,GACTqc,SAAU,IACVvc,gBAAiB,OACjBqC,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzCoH,KAAK3D,MAAMqO,QACb,kBAAC,UAAD,CAAM1O,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMqO,SAC3C,KAEJ,kBAACvO,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,gBAExC,kBAAC0F,GAAA,EAAD,CACEkI,iBAAe,EACfhI,aAAc,SAACoV,GAAD,OAAe,EAAKlX,SAAS,CAAEkX,eAC7C9a,MAAOgC,KAAK3D,MAAMyc,UAClB9c,MAAO,CAAES,gBAAiB,QAASyG,SAAU,OAIjD,kBAAC/G,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,WAExC,kBAAC0F,GAAA,EAAD,CACEkI,iBAAe,EACfhI,aAAc,SAACqV,GAAD,OAAe,EAAKnX,SAAS,CAAEmX,eAC7C/a,MAAOgC,KAAK3D,MAAM0c,UAClB/c,MAAO,CAAES,gBAAiB,QAASyG,SAAU,OAIjD,kBAAC/G,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAACI,EAAA,EAAD,CACEP,MAAO,CACLS,gBAAiB,OACjBI,kBAAmB,GACnBF,QAAS,GACTmC,aAAc,IAEhBhD,QAAS,kBAAM,EAAKqP,UAEpB,kBAAC,UAAD,CAAMnP,MAAO,CAAEkH,SAAU,GAAIlG,MAAO,UACjCc,EAAQ,kB,GApIKT,IAAMoD,W,+aC+HrBmT,G,mLA9GbvX,MAAQ,CACN9D,SAAU,KACVkc,QAAS,GACTC,OAAQhb,KAAKgb,U,EAGf+Z,IAAM,WAAO,IACHnyB,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd3E,KAAM,EAAKV,MAAMU,KACjB0X,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAUmc,OAAQhb,KAAKgb,SAAUD,QAAS,KAC1D,EAAK3U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAFnC,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,0DAjCC,IAAD,EACZmE,EAAI,SAAGiD,KAAKF,MAAMmB,WAAW5E,MAAMgV,aAA/B,EAAG,EAAoCtU,KAC7CA,GACFiD,KAAK4B,SAAS,CAAE7E,W,mCAkCN,IAAD,SAMPiD,KAAKF,MAJPgB,YACEC,EAHO,EAGPA,GACU9G,EAJH,EAIPqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAACqH,GAAA,EAAD,CACExH,MAAOA,GAAM/B,GAAO+P,UACpBwB,qBAAsBvR,EAAMwR,kBAC5BhI,YAAa3F,EAAQ,QACrBE,MAAOgC,KAAK3D,MAAMU,KAClB2G,aAAc,SAAC3G,GAAD,OAAU,EAAK6E,SAAS,CAAE7E,YAG1C,kBAAC,GAAD,CACE+D,YAAad,KAAKF,MAAMgB,YACxB2T,QAASzU,KAAK3D,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ1U,KAAK3D,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC8E,EAAA,QAAD,CACEH,MAAO,CACL8I,UAAW,KAGb,kBAAC,GAAD,CACE7K,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,OACfhC,QAAS,kBAAM,EAAK2yB,a,+BAMpB,IAAD,EAOHzuB,KAAKF,MALPmB,EAFK,EAELA,WAFK,IAGLH,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAGN1B,EAAayH,KAAK3D,MAAlB9D,SAEFuF,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAACqQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB3N,EACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAEV,KAEHyH,KAAKiS,aAEN,kBAAC1V,EAAA,EAAD,CACEP,MAAO,CAAE8I,UAAW,IACpBhJ,QAAS,kBAAMmF,EAAWgC,SAAS,UAAW,CAAEuG,MAAO,MAEvD,kBAAC,GAAD,KAAI1L,EAAQ,gCAIhB,kBAAC,GAAD,CAAQgD,YAAad,KAAKF,MAAMgB,mB,GA/GrBL,aCkHJiuB,GA5HE,SAAC,GAOX,IANLztB,EAMI,EANJA,WAMI,IALJH,YACEH,EAIE,EAJFA,SACAI,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAKN6D,GAFaT,IAAM2mB,WAAW5mB,IAEpBzG,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAACqQ,EAAA,EAAD,MAaGod,EAsBD,kBAAC,GAAD,CACE10B,MAAOA,EACPgwB,SAAS,SACTtuB,KAAK,QACLsF,WAAYA,EACZpF,MAAOiC,EAAQ,eACf6R,GAAG,gBAEL,kBAAC,GAAD,CACE1V,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,sBACf6R,GAAG,iBACHsa,SAAS,yBACTtuB,KAAK,gBAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,eACf6R,GAAG,cACHsa,SAAS,SACTtuB,KAAK,UAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,cACf6R,GAAG,aACHsa,SAAS,cACTtuB,KAAK,SAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,UACf6R,GAAG,QACHsa,SAAS,WACTtuB,KAAK,sBAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,aACfmsB,SAAS,SACTtuB,KAAK,QACLG,QAAS,kBAAM6E,EAAS,CAAEjG,KAAM,aAAcsD,OAAO,OAEvD,kBAAC,GAAD,CACE/D,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,iBACf6R,GAAG,YACHsa,SAAS,YACTtuB,KAAK,SAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,gBACf6R,GAAG,WACHsa,SAAS,yBACTtuB,KAAK,WAEP,kBAAC,GAAD,CACE1B,MAAOA,EACPgH,WAAYA,EACZpF,MAAOiC,EAAQ,kBACf6R,GAAG,aACHsa,SAAS,cACTtuB,KAAK,uB,+aC5GLF,GAAUD,IAAW1C,IAAI,UAAzB2C,MACFF,GAAUE,GAAQ,IAkUTmzB,G,mLAhUbvyB,MAAQ,CACN9D,SAAU,KACVmC,KAAM,U,EAORm0B,YAAc,oBAAAp2B,EAAAC,OAAA,gDACZ,EAAKoH,MAAMgB,YAAYwU,eADX,6D,EAIdwZ,UAAY,SAACp0B,GAAU,IACb4B,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAERtE,MACKlC,EAAUC,YADV,eACoCuG,EAAOoF,WAD3C,SAC8DhH,EACjE,CACE5C,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAErJ,WAAUmC,SADtB,+DAGL/B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB+c,YAAc,SAAO5T,GAAP,uBAAAtJ,EAAAC,OAAA,uDACJgC,EAAS,EAAK2B,MAAd3B,KADI,EAEiB,EAAKoF,MAAMgB,YAAhCE,EAFI,EAEJA,SAAU1E,EAFN,EAEMA,OAFN,WAAA7D,EAAA,MAGeM,GAAK,cAAe,CAC7CgJ,OACArH,KACW,WAATA,GAEa,eAATA,EADA,aAGS,aAATA,EACA,UACS,SAATA,EACA,cACA,SACN+G,MAAOnF,EAAOoF,cAfJ,kBAGJnJ,SAcR,EAAKs2B,cACL7tB,EAAS1E,EAAOoF,YAlBJ,6D,EAqBdolB,aAAe,WAAO,IAAD,EAKf,EAAKhnB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACAsU,EAJiB,EAIjBA,OAEMpU,EAAe,EAAKnB,MAApBmB,WAEAvG,EAAS,EAAK2B,MAAd3B,KAEFoD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B6tB,EACK,WAATr0B,GAEa,eAATA,EADA,aAGS,aAATA,EACA,UACS,SAATA,EACA,cACA,SAEAgxB,EAAcqD,EAAN,QACRvD,EAAeuD,EAAN,SAET/B,EAEAlvB,EADK,WAATpD,GAEa,eAATA,EADQ,aAGC,aAATA,EACQ,UACC,SAATA,EACQ,cACA,UACd,OACE,kBAACyB,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACrB,kBAAC/J,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN3D,eAAgB,gBAChBJ,cAAe,QAGjB,kBAAC,UAAD,CAAMR,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C6yB,GAEH,kBAAC,UAAD,CAAMhxB,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAxBjB,MA4BGuX,OA5BH,EA4BGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAK2pB,GACJ,kBAAC,GAAD,KAAI3pB,EAAK2pB,IAET,kBAACnvB,EAAA,EAAD,CACET,QAAS,kBAAM,EAAK6Z,YAAY5T,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAK2pB,MAAL,MAAmB3qB,OAAnB,EAAmBA,EAAIhE,MACtB,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAMq0B,EACNhtB,KAAMA,EAAKA,SAIf,kBAACuJ,GAAA,EAAD,CAAQvO,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAEN,kBAAC,GAAD,KAAI6E,EAAKypB,W,EASvBwD,WAAa,SAACC,EAAG74B,EAAQmK,GAAU,IAAD,EACA,EAAKlE,MAAnB3B,GADc,EACxBnC,SADwB,EACdmC,MADc,KACRqxB,IAOpB,EAAKjsB,OARuB,KAG9BmB,WAH8B,EAI9BH,aAEY7G,GANkB,EAK5BqC,OAL4B,EAM5BA,OAAUrC,OAId,OACE,kBAACsC,EAAA,EAAD,CACEP,MAAO,CACLS,gBACE/B,IAASu0B,EAAOh1B,EAAMyC,UAAtB,KAAsCzC,EAAMyC,UAC9CwZ,kBAAmB,EACnBxC,iBAAkB,EAClBnT,OACA3D,eAAgB,SAChBiC,WAAY,UAEd/C,QAAS,kBAAM,EAAKgzB,UAAUG,KAE9B,kBAAC,GAAD,KAAI74B,K,0DAlMR4J,KAAK8uB,UAAU,UACf9uB,KAAK6uB,gB,+BAqMG,IAAD,2BAQH7uB,KAAKF,MARF,KAELmB,WAFK,EAGLH,aACExE,EAJG,EAIHA,OACAyE,EALG,EAKHA,GALG,KAMHzE,OAAUrC,MAIkB+F,KAAK3D,OAA7B9D,EAVD,EAUCA,SAAUmC,EAVX,EAUWA,KAAMqxB,EAVjB,EAUiBA,IAElBjuB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAC9BA,EAASzK,EAAS,MAACsK,OAAD,EAACA,EAAIG,QAE7B,OACE,kBAACqQ,EAAA,EAAD,KACE,kBAACpV,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,eAChB2E,OAAQ,KAGTvB,KAAKgvB,WAAW,SAAUlxB,EAAQ,WAAY,GAC9CkC,KAAKgvB,WAAW,aAAclxB,EAAQ,cAAe,GACrDkC,KAAKgvB,WAAW,WAAYlxB,EAAQ,YAAa,GACjDkC,KAAKgvB,WAAW,OAAQlxB,EAAQ,YAAa,GAC7CkC,KAAKgvB,WAAW,SAAUlxB,EAAQ,UAAW,IAG/CiuB,EACC,kBAAC5vB,EAAA,QAAD,KACE,kBAAC,GAAD,KAAI4vB,GACJ,kBAAC,GAAD,CACE9xB,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAEmqB,IAAK,WAGtCxzB,EACF,kBAAC4D,EAAA,QAAD,MACW,MAAR5D,GAAA,SAAAA,EAAUgpB,cAAV,IAAmBnR,QAClB,kBAAC/O,EAAA,EAAD,CACErF,MAAO,CACLP,MAAOF,GAAUE,GAAQ,IACzB8F,OAAQ,IACR6Z,WAAY,WAEd9Z,OAAQ,CACNsT,IAAQ9e,EAAUC,YAAf,WAA8BwC,GAA9B,SAA8BA,EAAUgpB,cAAxC,EAA8B,EAAmBnR,UAI1D,kBAAC,GAAD,CAAGpU,MAAO,CAAEqP,UAAW,WACpBvN,EAAQ,WADX,IACwB,KACb,MAARvF,GAAA,SAAAA,EAAUgpB,UAAV,WAAmBxkB,WAAnB,IAA0BmE,KAAWpD,EAAQ,UAGvC,MAARvF,OAAA,EAAAA,EAAUipB,MACT,kBAACrlB,EAAA,QAAD,MACW,MAAR5D,GAAA,SAAAA,EAAUipB,WAAV,IAAgBpR,QACf,kBAAC/O,EAAA,EAAD,CACErF,MAAO,CACLP,MAAOF,GAAUE,GAAQ,IACzB8F,OAAQ,IACR6Z,WAAY,WAEd9Z,OAAQ,CACNsT,IAAQ9e,EAAUC,YAAf,WAA8BwC,GAA9B,SAA8BA,EAAUipB,WAAxC,EAA8B,EAAgBpR,UAIvD,kBAAC,GAAD,CAAGpU,MAAO,CAAEqP,UAAW,WACpBvN,EAAQ,OADX,WACqBvF,GADrB,SACqBA,EAAUipB,OAD/B,SACqB,EAAgBzkB,WADrC,EACqB,EAAuBmE,IAE5C,kBAAC,GAAD,CAAGlF,MAAO,CAAEqP,UAAW,WACpBvN,EAAQ,OADX,iBAC2BvF,GAD3B,SAC2BA,EAAUipB,WADrC,EAC2B,EAAgBpJ,MAD3C,MAGA,kBAAC,GAAD,CACEne,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,OACfhC,QAAS,WACP9D,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBsJ,WAAYpF,EAAOoF,WACnBhH,WAGDpC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOyzB,GAAP,SAAAtzB,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CAAEmqB,IAAKA,EAAIxzB,WACzB,EAAKu2B,UAAUp0B,GACf,EAAKoF,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAHnC,+DAKL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,UAKtB,KACHoH,KAAK8mB,gBAGR,kBAACvb,GAAA,EAAD,W,GA1TS9K,a,+aC0FJ6e,G,mLArGbjjB,MAAQ,CACNgO,MAAO,GACPzR,MAAO,KACP8R,QAAS,M,8CAGF,IAAD,OACEhJ,EAAe1B,KAAKF,MAAMgB,YAAYxE,OAAtCoF,WADF,EAEsB1B,KAAK3D,MAAzBgO,EAFF,EAEEA,MAFF,EAESE,SACf1R,QAAQuF,IAAI,UACZpG,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEsJ,aAAY2I,YAElC/R,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GAWL,OAVAhT,QAAQuF,IAAI,eAAgByN,GAExBA,EAAajT,MACf,EAAKgJ,SAAS,CAAE8I,QAAS,KAAM9R,MAAOiT,EAAajT,QAEnD,EAAKgJ,SACH,CAAEhJ,MAAO,KAAM8R,QAASmB,EAAanB,UACrC,eAGGmB,KAERlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,UACgBoH,KAAKF,MAApBmB,WAMJjB,KAAKF,MAJPgB,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAIR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLkK,OAAQ,GACRvJ,QAAS,GACTqc,SAAU,IACVla,aAAc,KAGfkB,KAAK3D,MAAMzD,MACV,kBAAC,UAAD,CAAMoD,MAAO,CAAEgB,MAAO,QAAUgD,KAAK3D,MAAMzD,OACzCoH,KAAK3D,MAAMqO,QACb,kBAAC,UAAD,CAAM1O,MAAO,CAAEgB,MAAO,UAAYgD,KAAK3D,MAAMqO,SAC3C,KAEJ,kBAACvO,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,KAGX,kBAAC,UAAD,CAAMX,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,UAExC,kBAAC0F,GAAA,EAAD,CACEC,YAAa3F,EAAQ,SACrB0N,qBAAsBvR,EAAMwR,kBAC5B/H,aAAc,SAAC2G,GAAD,OAAW,EAAKzI,SAAS,CAAEyI,WACzCrM,MAAOgC,KAAK3D,MAAMgO,MAClBrO,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,gBACfhC,QAAS,kBAAM,EAAKqP,kB,GA7Fd9N,IAAMoD,W,+aCuCX6e,G,mLAvCbjjB,MAAQ,CACN6yB,SAAU,M,0DAIVlvB,KAAKmvB,a,iCAGK,IAAD,OACHC,EAAkBpvB,KAAKF,MAAMmB,WAAW5E,MAAMgV,OAAO5P,MAE3DzJ,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEg3B,sBAEtB92B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GACL,EAAKjK,SAAS,CAAErJ,SAAUsT,OAE3BlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,IACgBoH,KAAKF,MAApBmB,WAER,OACE,kBAAC9E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC,GAAD,cAAImB,KAAK3D,QAAT,SAAI,EAAY9D,eAAhB,EAAI,EAAsBA,e,GAlCd8E,IAAMoD,W,2aCI1B,IAAM4uB,GAAW,CACfjP,UAAW,eACX5a,KAAM,WACN8O,OAAQ,SACRD,QAAS,UACTD,KAAM,OACN/Z,KAAM,OACNuL,SAAU,YACVF,WAAY,aACZ4pB,WAAY,uBACZC,YAAa,wBAqGAzd,G,mLAjGbzV,MAAQ,CACNilB,MAAO,I,0DAGPthB,KAAKwvB,e,mCAGO,IAAD,OACXx3B,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACgpB,GACL,EAAK1f,SAAS,CAAE0f,aAEjB3oB,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,IAIHoH,KAAKF,MAFPmB,EAFK,EAELA,WAFK,EAGLH,YAAeC,GAGjB,OACE,kBAACwQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACzB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfwI,SAAU,OACVpI,eAAgB,SAChBD,QAAS,KALb,SAQGqD,KAAK3D,MAAMilB,YARd,EAQG,EAAkBtiB,KAAI,SAACywB,EAAMt4B,GAC5B,IAAMP,EAAM6gB,OAAOvD,KAAKub,GAAM,GACxBC,EAASjY,OAAOiY,OAAOD,GAAM,GACnC,OACE,kBAAC,GAAD,CACEpd,GAAE,OAASlb,EACXP,IAAG,OAASO,EACZwrB,aAAc,IACd9mB,MAAOwzB,GAASz4B,IAEhB,kBAACuF,EAAA,QAAD,CACEvF,IAAG,QAAUO,EACb6E,MAAO,CAAEP,MAAO,IAAKqJ,UAAW,KAE/B4qB,aAAkB/T,MACjB+T,EAAO1wB,KAAI,SAAChB,EAAO1E,GACjB,IAAIysB,EAAI/nB,EAAMpH,GAOd,MANY,SAARA,IAAgBmvB,EAAC,SAAO3uB,EAAa2uB,GAApB,MACT,cAARnvB,IACFmvB,EAAIjJ,KAAOiJ,GAAG7L,OAAO,qBACX,aAARtjB,IAAoBmvB,EAAIzqB,GAAYyqB,EAAG,SAC/B,SAARnvB,IAAgBmvB,EAAI1qB,GAAQ0qB,EAAG,SAGjC,kBAAC5pB,EAAA,QAAD,CACEvF,IAAG,OAASA,EAAT,IAAgB0C,EACnB0C,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZ6F,aAAc,IAGhB,kBAAC,GAAD,CACEzD,WAAYA,EACZsR,KAAMvU,EACNd,KAAM,KAER,kBAACf,EAAA,QAAD,KACE,kBAAC,GAAD,CAAGvF,IAAG,OAASA,EAAT,IAAgB0C,GAAMysB,QAMpC,kBAAC,GAAD,KAAI2J,c,GAtFHjvB,a,+aCffqR,G,mLACJzV,MAAQ,CACN9D,SAAU,M,+CAEH3B,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CAAMH,MAAO6V,GAAOkC,KAClB,kBAAC,GAAD,KAAInd,GACJ,kBAAC,GAAD,KAAIoH,M,+BAIA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAMHyH,KAAKF,MANF,KAILmB,WAJK,EAKLH,aAAeC,EALV,EAKUA,GAAIC,EALd,EAKcA,SAAU1E,EALxB,EAKwBA,OAGzBwB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9ByuB,EAAMj2B,KAAKC,QAAS,MAAFoH,OAAA,EAAAA,EAAI6uB,cAAexuB,KAAKzG,OAAS,MAEzD,OACE,kBAACwB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAClBhI,EAAW,kBAAC,GAAD,KAAIA,GAAgB,MAC7B,MAAFwI,OAAA,EAAAA,EAAI6uB,cAAexuB,KAAKzG,MACvB,kBAAC,KAAD,CACEmB,QAAS,WAEP9D,MAASlC,EAAUC,YAAd,oBAA8C,CACjD+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqJ,MAAOnF,EAAOoF,eAEpCpJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASH,EAAT,EAASA,SACb,EAAKqJ,SAAS,CAAErJ,aAChByI,EAAS1E,EAAOoF,YAFZ,+DAIL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,QAIpB,kBAACuD,EAAA,QAAD,KACE,kBAAC,GAAD,KAAI2B,EAAQ,iBAAkB6xB,MAGhC,KAEJ,kBAACxzB,EAAA,QAAD,CAAMH,MAAO,CAAEkf,iBAAkB,KAC9Blb,KAAKgU,SAASlW,EAAQ,QAAtB,gBAAmCiD,OAAnC,EAAmCA,EAAIwE,OACvCvF,KAAKgU,SAASlW,EAAQ,QAAtB,gBAAmCiD,OAAnC,EAAmCA,EAAIyE,OACvCxF,KAAKgU,SAASlW,EAAQ,cAAtB,MAAqCiD,OAArC,EAAqCA,EAAI2E,YACzC1F,KAAKgU,SAASlW,EAAQ,QAASzC,GAAO,MAAC0F,OAAD,EAACA,EAAI1G,KAAM,SACjD2F,KAAKgU,SACJlW,EAAQ,YACRxC,GAAW,MAACyF,OAAD,EAACA,EAAI6E,SAAU,SAE3B5F,KAAKgU,SAASlW,EAAQ,WAAtB,MAAoCiD,OAApC,EAAoCA,EAAI4E,QAAxC,KACA3F,KAAKgU,SAASlW,EAAQ,WAAtB,MAAkCiD,OAAlC,EAAkCA,EAAI0E,SACtCzF,KAAKgU,SAASlW,EAAQ,QAAtB,MAA+BiD,OAA/B,EAA+BA,EAAIqT,MACnCpU,KAAKgU,SAASlW,EAAQ,WAAtB,MAAkCiD,OAAlC,EAAkCA,EAAIsT,SACtCrU,KAAKgU,SAASlW,EAAQ,eAAtB,MAAsCiD,OAAtC,EAAsCA,EAAIuT,c,GApEhC7T,aA2EfoR,GAAS/H,KAAWC,OAAO,CAC/BgK,IAAK,CACHvX,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,YAIDiT,M,+aCnEPrW,GAAUD,IAAW1C,IAAI,UAAzB2C,MACFF,GAAUE,GAAQ,IAgTTo0B,G,iCA7Sb,WAAY/vB,GAAQ,IAAD,sBACjB,cAAMA,IAWRgJ,WAAa,YAAsB,IAAnB9O,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,MAAY,EAI5B,EAAK2I,MAAMgB,YAFbC,EAF8B,EAE9BA,GACU9G,EAHoB,EAG9BqC,OAAUrC,MAGN2kB,EAAOllB,KAAKC,QAAS,MAAFoH,OAAA,EAAAA,EAAI1G,MAAO,KAAOL,EAAKqY,GAAKrY,EAAKqY,KACpDwM,EAAQD,EAAO,GAAK,GAAKA,EAEzBniB,EACJ,EAAKJ,MAAMwE,WAAa7G,EAAKqY,GAAK,eAAYha,EAChD,OACE,kBAACkE,EAAA,EAAD,CACET,QAAS,WACP,EAAK8F,SAAS,CAAEf,SAAU7G,EAAKqY,OAGjC,kBAAClW,EAAA,QAAD,CACEvF,IAAG,OAASO,EACZ6E,MAAO,CACLQ,cAAe,MACfsC,aAAc,GACdnC,QAAS,GACTE,kBAAmB,GACnBD,eAAgB,gBAChBH,oBAGF,kBAAC,UAAD,CAAMT,MAAO,CAAEgB,MAAO/C,EAAME,cAAgBH,EAAK2H,QACjD,kBAAC,UAAD,CAAM3F,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB0kB,EAA5C,QAzCW,EA+CnB1N,OAAS,WAAO,IACN7U,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAE2X,SAAS,IAAQ,WAC/BvhB,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdC,OAAQ,EAAKtF,MAAMwE,SACnB4T,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKoH,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAEvC,EAAKE,SAAS,CACZrJ,WACAghB,SAAS,EACT7E,OAAQhb,KAAKgb,SACbD,QAAS,KAPP,+DAUL9b,OAAM,SAACC,GACNC,QAAQD,MAAMA,UA3EH,EAgFnBqa,aAAe,WAAO,IAAD,EAQf,EAAKnT,MANPgB,EAFiB,EAEjBA,YAFiB,IAGjBA,YACEC,EAJe,EAIfA,GAJe,IAMfzE,OAIEwB,GAVa,EAML4D,WANK,EAMOzH,MAIVtD,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAAC/E,EAAA,QAAD,KACE,kBAAC,GAAD,CACE2E,YAAaA,EACb2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MAErC+B,MAAO,CAAE8C,aAAc,GAAIgG,UAAW,IACtCjJ,MAAOiC,EAAQ,SACfhC,QAAS,EAAKqV,SAShB,kBAAC,GAAD,CAAQrQ,YAAaA,MApHR,EAyHnBkuB,WAAa,SAACC,EAAG74B,GAAY,IAAD,EACM,EAAKiG,MAAnB3B,GADQ,EAClBnC,SADkB,EACRmC,MADQ,KACFqxB,IAOpB,EAAKjsB,OARiB,KAGxBmB,WAHwB,EAIxBH,aAEY7G,GANY,EAKtBqC,OALsB,EAMtBA,OAAUrC,OAId,OACE,kBAACsC,EAAA,EAAD,CACEP,MAAO,CACLS,gBACE/B,IAASu0B,EAAOh1B,EAAMyC,UAAtB,KAAsCzC,EAAMyC,UAC9CwZ,kBAAmB,EACnBxC,iBAAkB,EAClBnT,KAAM,EACN3D,eAAgB,SAChBiC,WAAY,UAEd/C,QAAS,kBAAM,EAAK8F,SAAS,CAAElH,KAAMu0B,MAErC,kBAAC,GAAD,KAAI74B,KA7IR,EAAKiG,MAAQ,CACXwE,SAAU,KACV4T,QAAS,GACTC,OAAQhb,KAAKgb,SACbnc,SAAU,KACVmC,KAAM,YARS,E,6CAoJT,IAAD,SAIHsF,KAAKF,MAJF,KAELmB,WAFK,EAGLH,aAAeC,EAHV,EAGUA,GAAIzE,EAHd,EAGcA,OAHd,EAK8B0D,KAAK3D,MAAlC9D,EALD,EAKCA,SAAUsI,EALX,EAKWA,SAAUnG,EALrB,EAKqBA,KAEtBoD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B6H,EAAUrP,KAAKsU,MAAMjN,EAAGkN,aAAe,IAAQ7M,KAAKzG,OAAS,KAE7Dm1B,EAAqB,aAATp1B,EAAsB,EAAa,YAATA,EAAqB,EAAI,GAE/DyD,EAAU,CACd,CACEkU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAElB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,EACJ1Q,OAAQ7D,EAAQ,eAGlB,CACEuU,GAAI,GACJ1Q,OAAQ7D,EAAQ,gBAGlB,CACEuU,GAAI,GACJ1Q,OAAQ7D,EAAQ,gBAGlB,CACEuU,GAAI,GACJ1Q,OAAQ7D,EAAQ,gBAGlB,CACEuU,GAAI,GACJ1Q,OAAQ7D,EAAQ,gBAGlB,CACEuU,GAAI,GACJ1Q,OAAQ7D,EAAQ,gBAGlB,CACEuU,GAAI,GACJ1Q,OAAQ7D,EAAQ,iBAIpB,OACE,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,eAChB2E,OAAQ,KAGTvB,KAAKgvB,WAAW,WAAYlxB,EAAQ,aACpCkC,KAAKgvB,WAAW,UAAWlxB,EAAQ,aACnCkC,KAAKgvB,WAAW,SAAUlxB,EAAQ,YAGpCvF,EACC,kBAACgZ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG8X,UAAW,MACtC9f,EAASylB,KACNzlB,EAASylB,KAAKhf,KAAI,SAAC8e,GACjB,OACE,kBAACzc,EAAA,EAAD,CACErF,MAAO,CACLP,MAAOF,GAAUE,GAAQ,IACzB8F,OAAQ,IACR6Z,WAAY,WAEd9Z,OAAQ,CACNsT,IAAK9e,EAAUC,YAAc,IAAM+nB,EAAIxM,UAK/C,KACJ,kBAAC,UAAD,CAAMtV,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,cAChC5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAG3CwQ,EAAU,EACZ,kBAAC,KAAD,CACE/G,MAAO+G,EACP9G,SAAU,kBAAM,EAAKL,SAAS,CAAEmuB,UAAU,KAC1C7yB,KAAM,GACNgF,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAGtE,EAAQ,WAAYuE,EAAGvE,EAAQ,cAGlD,kBAAC4L,GAAA,EAAD,CACE4O,aAAc,SAACte,EAAM7C,GAAP,aAAwBA,GACtCwS,KAAMxL,EAAQ+qB,MAAM4G,EAAWA,EAAY,GAC3CvX,UAAW1X,EACXiI,WAAY9I,KAAK8I,WACjB0P,oBAAqBxY,KAAKiT,oB,GAtSfxS,a,aCVGjF,IAAW1C,IAAI,UAA1ByI,I,GAAP9F,M,GAAO8F,QAkMAyuB,GAjMI,SAAC,GAUb,IATL/uB,EASI,EATJA,WACAH,EAQI,EARJA,YAQI,IAPJA,YACEC,EAME,EANFA,GACAkvB,EAKE,EALFA,YACA1S,EAIE,EAJFA,kBACAvc,EAGE,EAHFA,SAGE,IAFF1E,OAAUrC,EAER,EAFQA,MAAOyH,EAEf,EAFeA,WAGb5D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QADhC,EAK0BzD,oBAAS,GALnC,WAKG8b,EALH,KAKYiE,EALZ,OAM4B/f,qBAN5B,WAMGlF,EANH,KAMa6R,EANb,OAO4B3M,mBAAS,MAPrC,WAOGggB,EAPH,KAOaC,EAPb,KASIvK,EAA+BuD,2BAA/BvD,2BASR3b,GAAO+lB,GACP/lB,IARsB,0BAAAiB,EAAAC,OAAA,uDACpB8kB,GAAW,GADS,WAAA/kB,EAAA,MAEDK,GAAI,kBAAkB4I,IAFrB,OAEdsc,EAFc,OAGpBN,EAAYM,GACZR,GAAW,GAJS,+DAoJtB,OACE,kBAACrhB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACmJ,GAAA,EAAD,CACEmS,sBAAuB,CACrBta,OAAwB,QAAhBlD,UAASC,GAAeiD,GAAS,SAAMlJ,GAEjDuR,oBArBe,WACnB,OACE,kBAACzN,EAAA,QAAD,CAAMH,MAAO,CAAEY,eAAgB,gBAAiBJ,cAAe,QAC7D,kBAACL,EAAA,QAAD,KAAO5D,GAAY,kBAAC,GAAD,KAAIA,IAEvB,kBAAC4D,EAAA,QAAD,KACE,kBAACI,EAAA,EAAD,CACET,QAAS,kBAAMmF,EAAWgC,SAAS,sBAEnC,kBAAC6C,GAAA,EAAD,CAAW/I,KAAK,aAAaC,MAAM,SAASE,KAAM,SAatDsb,oBAAqB,kBAAM,kBAAC,GAAD,CAAQ1X,YAAaA,KAChDgb,eACE,kBAACoU,GAAA,EAAD,CACEnU,WAAYxC,EACZuB,UAAW,WACTyC,IACAnT,EAAY,SAIlBT,KAAMsmB,EACNnnB,WArHa,SAAC,GAAqB,IAAnB9O,EAAkB,EAAlBA,KAAkB,EAAZ7C,MAC1B,OACE,kBAACgF,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC5B,kBAAC6E,EAAA,EAAD,CACEC,OACgB,SAAdtH,EAAKU,KACD3D,EAAQ,KACM,YAAdiD,EAAKU,KACL3D,EAAQ,KACRA,EAAQ,KAEdiF,MAAO,CAAEP,MAAO,IAAK8F,OAAQ,KAC7B6Z,WAAY,YAGd,kBAACjf,EAAA,QAAD,CAAMH,MAAO,CAAEkN,WAAY,KACzB,kBAAC,GAAD,KACGpL,EAAQ,aADX,KAC2B9D,EAAKm2B,SAEhC,kBAAC,GAAD,KACGryB,EAAQ,SADX,KACuB9D,EAAK+H,MAE5B,kBAAC,GAAD,KACGjE,EAAQ,gBADX,KAC8B9D,EAAKo2B,uBAAuBh3B,OAD1D,IAEGY,EAAK2jB,iBAER,kBAAC,GAAD,KACG7f,EAAQ,SADX,WACwB9D,EAAKoe,MAD7B,MAGCpe,EAAKo2B,uBAAuBh3B,OAAS,GACpC,kBAAC,GAAD,KAAIY,EAAKo2B,uBAAuBpxB,KAAI,SAAC3H,GAAD,OAAOA,EAAE0F,QAAMvG,KAAK,OAGvDwD,EAAKo2B,uBAAuBxa,MAAK,SAACve,GAAD,OAAOA,EAAE0F,QAAF,MAAWgE,OAAX,EAAWA,EAAIhE,SACxD/C,EAAKo2B,uBAAuBh3B,SAAWY,EAAK2jB,gBAC1C,kBAAC,GAAD,CACE1jB,MAAOA,EACP4B,MAAOiC,EAAQ,YACfhC,QAAS,kBAlDT,SAAOu0B,GAAP,iBAAA53B,EAAAC,OAAA,uDACZ8kB,GAAW,GADC,WAAA/kB,EAAA,MAEeM,GAAK,kBAAmB,CACjD2I,aACA2uB,kBAJU,gBAEJ93B,EAFI,EAEJA,SAIR6R,EAAY7R,GACZilB,GAAW,GACXxc,EAASU,GACT6b,IATY,4DAkDetQ,CAAMjT,EAAKqY,OAG5B,kBAAC,GAAD,CACEpY,MAAOA,EACP4B,MAAOiC,EAAQ,YACfhC,QAAS,kBApET,SAAOu0B,GAAP,iBAAA53B,EAAAC,OAAA,uDACZ8kB,GAAW,GADC,WAAA/kB,EAAA,MAEeM,GAAK,kBAAmB,CACjD2I,aACA2uB,kBAJU,gBAEJ93B,EAFI,EAEJA,SAIR6R,EAAY7R,GACZglB,IACAC,GAAW,GACXxc,EAASU,GATG,4DAoEe4uB,CAAMt2B,EAAKqY,OAI9B,kBAAC,GAAD,CACEpY,MAAOA,EACP4B,MAAOiC,EAAQ,eACfhC,QAAS,WAEP,IAAMqC,EAAUsf,EAASze,KACvB,SAACmf,GAAD,OACKA,EAAQD,KADb,IACqBpgB,EAAQ,QAD7B,IAEIqgB,EAAQC,MAFZ,QAGUtgB,EAAQ,YAEpBK,EAAQuZ,KAAK5Z,EAAQ,WACrB,IACM6Z,EAAoBxZ,EAAQ/E,OAAS,EAE3C+Z,EACE,CACEhV,UACAwZ,oBACAC,4BAP2Bvf,IAS7B,SAAC+a,GACKA,IAAgBjV,EAAQ/E,OAAS,GA7G1C,SAAOi3B,EAAcvS,GAArB,YAAArlB,EAAAC,OAAA,uDACX8kB,GAAW,GADA,WAAA/kB,EAAA,MAEyBM,GAAK,iBAAkB,CACzD2I,aACA2uB,eACAhS,MAAK,MAAEP,OAAF,EAAEA,EAAKzL,MALH,gBAEH3H,EAFG,EAEHA,QAASnS,EAFN,EAEMA,SAKjB6R,EAAY7R,GACZilB,GAAW,GACP9S,IACF6S,IACAvc,EAASU,IAXA,4DA8GOlL,CAAKwD,EAAKqY,GAAIoL,EAASrK,iBC3JhCmd,GAAgB,CAC3BxzB,KAAM,WACNL,UAAW,UACXO,cAAe,UACfwO,kBAAmB,UACnBL,QAAS,UACTjR,YAAa,UACbq2B,eAAgB,WA0GHC,GA/FK,SAAC,GAA0D,EAAxDxvB,WAAyD,IAAD,IAA5CH,YAAeH,EAA6B,EAA7BA,SAAUI,EAAmB,EAAnBA,GACpD2vB,EADuE,EAAfp0B,OAClCrC,MAKtB6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9ByvB,EAAS,CACbJ,GAEA,CACExzB,KAAMe,EAAQ,mBACdpB,UAAW,UACXO,cAAe,UACfwO,kBAAmB,UACnBL,QAAS,UACTjR,YAAa,UACbq2B,eAAgB,WAElB,CACEzzB,KAAMe,EAAQ,cACdsN,QAAS,UACT1O,UAAW,UACXvC,YAAa,UACb8C,cAAe,UACfwO,kBAAmB,UACnB+kB,eAAgB,WAElB,CACEzzB,KAAMe,EAAQ,aACdsN,QAAS,UACT1O,UAAW,UACXvC,YAAa,UACb8C,cAAe,UACfwO,kBAAmB,UACnB+kB,eAAgB,WAElB,CACEzzB,KAAMe,EAAQ,cACdsN,QAAS,UACT1O,UAAW,UACXvC,YAAa,UACb8C,cAAe,UACfwO,kBAAmB,UACnB+kB,eAAgB,YAIpB,OACE,kBAACjf,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACxBowB,EAAO3xB,KAAI,SAAC/E,EAAO9C,GAClB,OACE,kBAACoF,EAAA,EAAD,CACET,QAAS,kBApDF,SAAC7B,GAChB0G,EAAS,CAAEjG,KAAM,YAAasD,MAAO/D,IAmDd22B,CAAS32B,IACxBrD,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZqH,OAAQ,KAGV,kBAAC/J,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiBxC,EAAMmR,QACvBylB,oBAAqB,GACrB/tB,YAAa,EACbguB,qBAAsB,GACtBr1B,MAAO,GACP8F,OAAQ,MAGZ,kBAACpF,EAAA,QAAD,CACEH,MAAO,CACLS,gBAAiBxC,EAAMyC,UACvBoG,YAAa,EACbiuB,uBAAwB,GACxBC,wBAAyB,GACzBv1B,MAAO,GACP8F,OAAQ,OAKd,kBAAC,UAAD,CAAMvF,MAAO,CAAEgB,MAAO0zB,EAAav2B,YAAa+O,WAAY,KACzDjP,EAAM8C,Y,+aCSNuiB,G,mLA7GbjjB,MAAQ,CACNuO,MAAO,GACPhS,MAAO,KACP8R,QAAS,M,6CAGH,IAAD,OACGzJ,EAAejB,KAAKF,MAApBmB,WAEFQ,EAAQzB,KAAKF,MAAMgB,YAAYxE,OAAOoF,WAEpCkJ,EAAU5K,KAAK3D,MAAfuO,MAER5S,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEwS,QAAOnJ,YAE7BnJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GAQL,OAPAhT,QAAQuF,IAAI,eAAgByN,GAE5B,EAAKjK,SAAS,CAAErJ,SAAUsT,EAAatT,WAEnCsT,EAAanB,SACfzJ,EAAWgC,SAAS,kBAAmB,CAAE2H,UAEpCiB,KAERlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOHoH,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAKR6D,GAFYkC,KAAK3D,MAAfuO,MAEQjU,EAAe,MAACoK,OAAD,EAACA,EAAIG,SAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC0S,EAAA,EAAD,CACEvV,MAAO,CACLuE,KAAM,IAGPP,KAAK3D,MAAM9D,SACV,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB6F,KAAK3D,MAAM9D,UAEZ,KAEJ,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEkH,SAAU,KAAOpF,EAAQ,gBACxC,kBAAC0F,GAAA,EAAD,CACEC,YAAY,MACZ+H,qBAAsBvR,EAAMwR,kBAC5B/H,aAAc,SAACkH,GAAD,OAAW,EAAKhJ,SAAS,CAAEgJ,WACzC5M,MAAOgC,KAAK3D,MAAMuO,MAClB5O,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,QACfhC,QAAS,kBAAM,EAAKm1B,iB,GA3Fd5zB,IAAMoD,W,+aCqHX6e,G,mLAnHbjjB,MAAQ,CACN2O,KAAM,GACNpS,MAAO,KACP8R,QAAS,M,6CAGH,IAAD,WAID1K,KAAKF,MAJJ,KAEHmB,WAFG,EAGHH,aAAeH,EAHZ,EAGYA,SAGTqK,GANH,EAGsBhK,SAGVhB,KAAK3D,MAAd2O,MAERhT,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnB4S,OACAJ,MAAK,SAAE5K,KAAKF,MAAMmB,WAAW5E,MAAMgV,aAA9B,EAAE,EAAoCzG,UAG5CtS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuT,GAiBL,OAhBAhT,QAAQuF,IAAI,eAAgByN,GAE5B,EAAKjK,SAAS,CAAErJ,SAAUsT,EAAatT,WAEnCsT,EAAanB,UACf/J,EAAS,CAAEjG,KAAM,kBAAmBsD,MAAO6N,EAAapK,QAEpC,QAAhBpD,UAASC,GACXuF,SAASC,SAETM,QAMGyH,KAERlT,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOHoH,KAAKF,MAPF,KAELmB,WAFK,EAGLH,aACY7G,EAJP,EAIHqC,OAAUrC,MACV8G,EALG,EAKHA,GAIEjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,SAAUiC,WAAY,WAC5D,kBAAC1C,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN2F,OAAQ,GACRvJ,QAAS,GACTmC,aAAc,KAGfkB,KAAK3D,MAAM9D,SACV,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAO/C,EAAME,cACzB6F,KAAK3D,MAAM9D,UAEZ,KAEJ,kBAAC4D,EAAA,QAAD,CACEH,MAAO,CACLW,QAAS,GACTC,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB2D,EAAQ,SAEpD,kBAAC0F,GAAA,EAAD,CACEC,YAAY,SACZ+H,qBAAsBvR,EAAMwR,kBAC5B/H,aAAc,SAACsH,GAAD,OAAU,EAAKpJ,SAAS,CAAEoJ,UACxChN,MAAOgC,KAAK3D,MAAM2O,KAClBhP,MAAOA,GAAM/B,GAAO+P,aAIxB,kBAAC7N,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfG,QAAS,GACTC,eAAgB,kBAGlB,kBAACT,EAAA,QAAD,MAEA,kBAAC,GAAD,CACElC,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,YACfhC,QAAS,kBAAM,EAAKm1B,iB,GA3Gd5zB,IAAMoD,WCoDXywB,GAvDI,SAAC,GAAqB,IAAnBpwB,EAAkB,EAAlBA,YAAkB,EACZrD,mBAAS,MADG,WAC/BwnB,EAD+B,KACxBkM,EADwB,OAEN1zB,mBAAS,MAFH,WAE/BlF,EAF+B,KAErB6R,EAFqB,KAKpC9N,EAIEwE,EAJFxE,OACUrC,EAGR6G,EAHFxE,OAAUrC,MACV+G,EAEEF,EAFFE,SACAD,EACED,EADFC,GAGIjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAC9BA,EAASzK,EAAS,MAACsK,OAAD,EAACA,EAAIG,QAC7B1J,IAAO,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACmBK,GAAI,eADvB,gBACGmsB,EADH,EACGA,MACRkM,EAASlM,GAFJ,+DAcP,OACE,kBAAC9oB,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,iBACtC,kBAAC,UAAD,CAAMZ,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,YAAakR,UAAW,WACxDvN,EAAQ,sBAAD,MAAwBiD,OAAxB,EAAwBA,EAAIqwB,UAGrC74B,GACC,kBAAC,UAAD,CAAMyD,MAAO,CAAEgB,MAAOV,EAAOrC,MAAME,YAAakR,UAAW,WACxD9S,GAPP,MAWG0sB,OAXH,EAWGA,EAAOjmB,KAAI,SAAChF,GAAD,OACV,kBAAC,GAAD,CACEC,MAAOA,EACP+B,MAAO,CAAEkf,iBAAkB,IAC3Brf,MAAU7B,EAAKq3B,SAASnwB,GAAnB,IAA8BpD,EAAQ,OAAtC,IACH9D,EAAKs3B,OADF,IAEDxzB,EAAQ,WACZhC,QAAS,YA5BL,SAAOpB,GAAP,UAAAjC,EAAAC,OAAA,kEAAAD,EAAA,MACiBM,GAAK,gBAAiB,CAC/C2I,WAAYpF,EAAOoF,WACnBhH,UAHQ,gBACFnC,EADE,EACFA,SAIR6R,EAAY7R,GACZyI,EAAS1E,EAAOoF,YANN,4DA6BFqqB,CAAI/xB,EAAKqY,YCCNkf,GAjDA,SAAC,GAMT,IAAD,IALJzwB,YACExE,EAIE,EAJFA,OACAyE,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9BiQ,EAAS,SAAOnX,GAAP,eAAAvB,EAAAC,OAAA,kEAAAD,EAAA,MACUM,GAAK,eAAgB,CAC1C0I,MAAOnF,EAAOoF,WACd1H,UAHW,QACPzB,EADO,QAMA+Y,KACX8L,UAAQC,QAAQ9kB,EAAS+Y,KAPd,6DAUf,MAAuB,QAAhBjT,UAASC,GACd,kBAAC,UAAD,CAAMtC,MAAO,CAAEgB,MAAO/C,EAAME,cACzB2D,EAAQ,+BAGX,kBAAC3B,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG3D,eAAgB,iBACtC,kBAAC,GAAD,CACE3C,MAAOA,EACP+B,MAAO,CAAEkf,iBAAkB,IAC3Brf,MAAOiC,EAAQ,WACfhC,QAAS,kBAAMqV,EAAO,MAExB,kBAAC,GAAD,CACElX,MAAOA,EACP+B,MAAO,CAAEkf,iBAAkB,IAC3Brf,MAAOiC,EAAQ,WACfhC,QAAS,kBAAMqV,EAAO,MAExB,kBAAC,GAAD,CACElX,MAAOA,EACP+B,MAAO,CAAEkf,iBAAkB,IAC3Brf,MAAOiC,EAAQ,WACfhC,QAAS,kBAAMqV,EAAO,MAGxB,kBAAC,UAAD,CAAMnV,MAAO,CAAEgB,MAAO/C,EAAME,cAAgB2D,EAAQ,kB,o/BCuB3C0zB,G,mLA9Dbn1B,MAAQ,CACN9D,SAAU,KACV0F,QAAS,M,EA+BX+T,YAAc,WAAO,IACX1V,EAAW,EAAKwD,MAAMgB,YAAtBxE,OADU,EAEW,EAAKD,MAA1B4B,EAFU,EAEVA,QAAS8T,EAFC,EAEDA,QACjB/Z,MAASlC,EAAUC,YAAd,gBAA0C,CAC7C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACdzD,UACA8T,cAGDzZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKqJ,SAAS,CAAErJ,gBAEjBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,mDAjDN,IAAD,SACYoH,KAAKF,MAAMgB,YAA1BC,EADG,EACHA,GAAIzE,EADD,EACCA,OAENwB,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAACqQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,EAAG5D,QAAS,KACrC,kBAAC,GAAD,KAAImB,EAAQ,mBAAD,MAAqBiD,OAArB,EAAqBA,EAAIqwB,UACnCpxB,KAAK3D,MAAM9D,SAAW,kBAAC,GAAD,KAAIyH,KAAK3D,MAAM9D,SAASA,UAAgB,KAE/D,kBAACiL,GAAA,EAAD,CACExH,MAAK,SAAOA,GAAMM,EAAOrC,OAAO+P,WAA3B,IAAsCzI,OAAQ,MACnDkC,YAAa3F,EAAQ,WACrB0N,qBAAsBlP,EAAOrC,MAAMwR,kBACnC8P,WAAS,EACTvd,MAAOgC,KAAK3D,MAAM4B,QAClByF,aAAc,SAACzF,GAAD,OAAa,EAAK2D,SAAS,CAAE3D,eAG7C,kBAAC,GAAD,CACEhE,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAEyN,eAAgB,IACzB5N,MAAOiC,EAAQ,QACfhC,QAASkE,KAAKgS,iB,+BA+BpB,OAAOhS,KAAKiS,iB,GA3DWxR,aCkCZgxB,GAlCH,SAAC3xB,GAAW,IAAD,IACCrC,mBAAS,UADV,WACd+V,EADc,KACT6C,EADS,KAGfvY,EAAUnH,EAAe,SAACmJ,EAAMgB,YAAYC,SAAnB,EAAC,EAAsBG,QAEtD,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,CACEgT,KAAM,CACJ,CACE1X,MAAOiC,EAAQ,cACf2V,SAAkB,WAARD,EACV1X,QAAS,kBAAMua,EAAO,YAExB,CACExa,MAAOiC,EAAQ,cACf2V,SAAkB,eAARD,EACV1X,QAAS,kBAAMua,EAAO,gBAGxB,CACExa,MAAOiC,EAAQ,gBACf2V,SAAkB,iBAARD,EACV1X,QAAS,kBAAMua,EAAO,qBAKnB,WAAR7C,GAAoB,kBAAC,GAAW1T,GACxB,eAAR0T,GAAwB,kBAAC,GAAe1T,GAChC,iBAAR0T,GAA0B,kBAAC,GAAiB1T,K,+aC2MpC4tB,G,iCAvOb,WAAY5tB,GAAQ,IAAD,sBACjB,cAAMA,IA6BRqR,OAAS,WAAO,IACN7U,EAAW,EAAKwD,MAAMgB,YAAtBxE,OAER,EAAKsF,SAAS,CAAE2X,SAAS,IACzBvhB,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBqJ,MAAOnF,EAAOoF,WACd+S,QAAS,EAAKpY,MAAMoY,YAGrBnc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKkJ,SAAS,CACZrJ,WACAghB,SAAS,EACT7E,OAAQhb,KAAKgb,SACbD,QAAS,KAEX,EAAK3U,MAAMgB,YAAYE,SAAS1E,EAAOoF,YAPnC,+DASL/I,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAxDD,EA4DnB+c,YAAc,SAAO5T,GAAP,uBAAAtJ,EAAAC,OAAA,yDAC+B,EAAKoH,MAAMgB,YAA9CE,EADI,EACJA,SAAU1E,EADN,EACMA,OAAQgZ,EADd,EACcA,aADd,WAAA7c,EAAA,MAEeM,GAAK,cAAe,CAC7CgJ,OACArH,KAAM,WACN+G,MAAOnF,EAAOoF,cALJ,kBAEJnJ,SAKR+c,IAEAtU,EAAS1E,EAAOoF,YATJ,6DA5DK,EAwEnBolB,aAAe,WAAO,IAAD,EAKf,EAAKhnB,MAAMgB,YAHH7G,EAFO,EAEjBqC,OAAUrC,MACV8G,EAHiB,EAGjBA,GACAsU,EAJiB,EAIjBA,OAEMpU,EAAe,EAAKnB,MAApBmB,WAEFnD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,oCACE,kBAAC/E,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBkI,UAAW,KAGb,kBAAC3I,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,UAAD,CAAMvE,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,UAGb,kBAAC3B,EAAA,QAAD,CACEH,MAAO,CACLuE,KAAM,EACN/D,cAAe,MACfI,eAAgB,kBAGlB,kBAAC,UAAD,CAAMZ,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAEX,kBAAC,UAAD,CAAM9B,MAAO,CAAE+C,WAAY,OAAQ/B,MAAO/C,EAAME,cAC7C2D,EAAQ,aAxBjB,MA4BGuX,OA5BH,EA4BGA,EAAQrW,KAAI,SAAC+C,EAAM5K,GAClB,OACE,kBAACgF,EAAA,QAAD,CACEvF,IAAG,IAAMO,EACT6E,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChBiC,WAAY,SACZoX,gBAAiB,GACjBC,kBAAmB,GACnBC,kBAAmB,UAGrB,kBAACha,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAAC,GAAD,KAAIwB,EAAKA,OAEX,kBAAC5F,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2D,KAAM,IAGR,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,QAC3BuF,EAAK2vB,cACJ,kBAAC,GAAD,KAAI3vB,EAAK2vB,eAET,kBAACn1B,EAAA,EAAD,CACET,QAAS,kBAAM,EAAK6Z,YAAY5T,EAAKA,QAErC,kBAAC,GAAD,KAAIjE,EAAQ,YAGfiE,EAAK2vB,iBAAL,MAAuB3wB,OAAvB,EAAuBA,EAAIhE,MAC1B,kBAACR,EAAA,EAAD,CACET,QAAS,kBACPmF,EAAWgC,SAAS,eAAgB,CAClCvI,KAAM,WACNqH,KAAMA,EAAKA,SAIf,kBAACuJ,GAAA,EAAD,CAAQvO,KAAK,OAAOC,MAAO/C,EAAME,YAAa+C,KAAM,MAEpD,MAGN,kBAAC,GAAD,KAAI6E,EAAK4vB,uBA9JJ,EAsKnB1e,aAAe,WAAO,IAAD,EAIf,EAAKnT,MAAMgB,YADbC,GAHiB,EAEjBzE,OAAUrC,MAFO,EAGjB8G,IAGIjD,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAACqQ,EAAA,EAAD,CAAYvV,MAAO,CAAEuE,KAAM,IACxB,EAAKyT,SAASlW,EAAQ,oBAAtB,MAA2CiD,OAA3C,EAA2CA,EAAIqT,MAEhD,kBAAC,GAAD,CACEtT,YAAa,EAAKhB,MAAMgB,YACxB2T,QAAS,EAAKpY,MAAMoY,QACpBD,gBAAiB,SAACnd,GAAD,OAAO,EAAKuK,SAAS,CAAE6S,QAASpd,KACjDqd,OAAQ,EAAKrY,MAAMqY,OACnBC,eAAgB,SAACtd,GAAD,OAAO,EAAKuK,SAAS,CAAE8S,OAAQrd,OAGjD,kBAAC,GAAD,CACE4C,MAAO,EAAK6F,MAAMgB,YAAYxE,OAAOrC,MACrC+B,MAAO,CAAE8I,UAAW,IACpBjJ,MAAOiC,EAAQ,YACfhC,QAAS,EAAKqV,SAGf,EAAK2V,iBA9LV,EAAKzqB,MAAQ,CACX9D,SAAU,KACVkc,QAAS,GACTC,OAAQhb,KAAKgb,UANE,E,wDAWjB1U,KAAKF,MAAMgB,YAAYwU,iB,+BAGhB1e,EAAKoH,GACZ,OACE,kBAAC7B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfI,eAAgB,gBAChB2E,OAAQ,GACR1C,WAAY,WAGd,kBAAC,GAAD,KAAIjI,GACJ,kBAAC,GAAD,KAAIoH,M,+BA4KA,IAAD,OACCzF,EAAayH,KAAK3D,MAAlB9D,SADD,EAOHyH,KAAKF,MAJPgB,YACEC,EAJG,EAIHA,GACU9G,EALP,EAKHqC,OAAUrC,MAGR6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAEpC,OACE,kBAAC/E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,GAAI3F,KAAM,IAC9BhI,EACC,kBAAC4D,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,EAAG8X,UAAW,MACjC,kBAAC,UAAD,CAAMrc,MAAO,CAAEgB,MAAO/C,EAAME,cACzB5B,EAASA,UAGZ,kBAAC,GAAD,CACE0B,MAAO+F,KAAKF,MAAMgB,YAAYxE,OAAOrC,MACrC4B,MAAOiC,EAAQ,MACfhC,QAAS,kBAAM,EAAK8F,SAAS,CAAErJ,SAAU,WAI7CyH,KAAKiT,qB,GAhOExS,aCYJmxB,GAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,kBAAC11B,EAAA,QAAD,CACEH,MAAO,CACLP,MAAO,GACP8F,OAAQ,GACRzC,aAAc,GACdgE,YAAa,EACbC,YAAa,QACbnG,eAAgB,SAChBiC,WAAY,WAGbgzB,GAAU,kBAACvmB,GAAA,EAAD,CAAQvO,KAAK,QAAQG,KAAM,OCuF7B40B,GAtFF,SAAC,GAKP,IAAD,IAJJhxB,YACEC,EAGE,EAHFA,GACU9G,EAER,EAFFqC,OAAUrC,MAGN6D,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAE9B/C,EAAU,CACd,CACEtC,MAAOiC,EAAQ,eACfi0B,MAAO,GAGT,CACEl2B,MAAOiC,EAAQ,eACfi0B,MAAO,GAGT,CACEl2B,MAAOiC,EAAQ,eACfi0B,MAAO,GAGT,CACEl2B,MAAOiC,EAAQ,eACfi0B,MAAO,GAGT,CACEl2B,MAAOiC,EAAQ,eACfi0B,MAAO,GAGT,CACEl2B,MAAOiC,EAAQ,eACfi0B,MAAO,GAGT,CACEl2B,MAAOiC,EAAQ,eACfi0B,MAAO,IApCP,EAwC4Bt0B,mBAAS,GAxCrC,WAwCGoD,EAxCH,KAwCamxB,EAxCb,OAyC4Bv0B,mBAAS,MAzCrC,WAyCa2M,GAzCb,WA+CJ,OACE,kBAACjO,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,kBAACpE,EAAA,QAAD,CAAMH,MAAO,CAAEkK,OAAQ,KACpB/H,EAAQa,KAAI,SAAC2C,EAAQxK,GACpB,OACE,kBAACoF,EAAA,EAAD,CACET,QAAS,kBAAMk2B,EAAY76B,IAC3BP,IAAG,MAAQO,EACX6E,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZjC,eAAgB,gBAChBqZ,gBAAiB,GACjBpZ,kBAAmB,GACnBiC,aAAc,IAGhB,kBAAC3C,EAAA,QAAD,CAAMH,MAAO,CAAEQ,cAAe,MAAOqC,WAAY,WAC/C,kBAAC,GAAD,CAAUgzB,OAAQhxB,IAAa1J,IAC/B,kBAAC,GAAD,CAAG6E,MAAO,CAAEkN,WAAY,KAAOvH,EAAO9F,QAExC,kBAAC,GAAD,KACG8F,EAAOowB,MADV,IACkBj0B,EAAQ,cAMhC,kBAAC,GAAD,CAAQ7D,MAAOA,EAAO4B,MAAOiC,EAAQ,WAAYhC,QAhCxC,4BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACcM,GAAK,OAAQ,CAAEk5B,KAAMpxB,KADnC,gBACLtI,EADK,EACLA,SACR6R,EAAY7R,GAFC,kE,gDClCF25B,GADH,CAAEC,QAnBE,SAACC,GACf,IAAM9gB,EAASxb,EAAUC,YAAhB,aAAwCq8B,EAAQ1wB,WAEzD,OAAO1J,MAAMsZ,EAAK,CAChBxZ,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOyI,GAAP,SAAAtI,EAAAC,OAAA,yEACGqI,GADH,+DAGLpI,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIGi2B,YAvBH,SAACuD,GACnB,OAAOt5B,GAAI,WAsBuBu5B,iBA3BX,SAACD,GACxB,OAAOt5B,GAAI,iB,YCAHq5B,I,YAUAE,I,YAUAxD,I,YAiBAyD,IArCV,SAAUH,GAAQ5L,GAAlB,uEAEe,OAFf,kBAEqBgM,aAAKL,GAAIC,QAAS5L,EAAO6L,SAF9C,OAII,OAFMrxB,EAFV,gBAIUyxB,aAAI,CAAE93B,KAAM,qBAAsBqG,OAJ5C,8BAMI,OANJ,mCAMUyxB,aAAI,CAAE93B,KAAM,kBAAmBuD,QAAS,KAAEA,UANpD,sDAUA,SAAUo0B,GAAiB9L,GAA3B,yEAE4B,OAF5B,kBAEkCgM,aAAKL,GAAIG,iBAAkB9L,EAAO6L,SAFpE,OAII,OAJJ,SAEYnC,EAFZ,EAEYA,YAFZ,SAIUuC,aAAI,CAAE93B,KAAM,8BAA+Bu1B,gBAJrD,8BAMI,OANJ,mCAMUuC,aAAI,CAAE93B,KAAM,2BAA4BuD,QAAS,KAAEA,UAN7D,sDAUA,SAAU4wB,GAAYtI,GAAtB,yEAEuB,OAFvB,kBAE6BgM,aAAKL,GAAIrD,YAAatI,EAAO6L,SAF1D,OAII,OAJJ,SAEY/c,EAFZ,EAEYA,OAFZ,SAIUmd,aAAI,CAAE93B,KAAM,yBAA0B2a,WAJhD,8BAMI,OANJ,mCAMUmd,aAAI,CAAE93B,KAAM,sBAAuBuD,QAAS,KAAEA,UANxD,sDAiBA,SAAUq0B,KAAV,iEACE,OADF,SACQG,aAAW,qBAAsBN,IADzC,OAEE,OAFF,SAEQM,aAAW,yBAA0B5D,IAF7C,OAGE,OAHF,SAGQ4D,aAAW,8BAA+BJ,IAHlD,wCAMeC,U,qkBC1Bf,IAAMI,GAAa,CACjBhxB,WAAY,GACZixB,QAAQ,EACR14B,MAAOs2B,GACPnwB,YAAa,EACbwyB,aAAc,EACdjgB,UAAW,GACX+V,KAAM,CACJ/pB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KA4GxBi0B,GAAS,CACbj8B,IAAK,KACLk8B,QAAStQ,KACTuQ,UAAW,CAAC,SAAU,KAAM,cAAe,WAGvCC,GAAiBC,eAEjBC,GAAW,CACf52B,OAjHoB,WAAyC,IAAxCD,EAAuC,uDAAvBq2B,GAAYnM,EAAW,uCAC5D,OAAQA,EAAO7rB,MACb,IAAK,QACH,OAAOg4B,GAGT,IAAK,iCACH,OAAO,SAAKr2B,GAAZ,IAAmBqsB,KAAM,CAAE/pB,KAAMtC,EAAMqsB,KAAK/pB,KAAMC,MAAO2nB,EAAOvoB,SAElE,IAAK,gCACH,OAAO,SACF3B,GADL,IAEEqsB,KAAM,CAAE9pB,MAAOvC,EAAMqsB,KAAK9pB,MAAOD,KAAM4nB,EAAOvoB,SAIlD,IAAK,mBACH,OAAO,SAAK3B,GAAZ,IAAmB+D,YAAammB,EAAOvoB,QAGzC,IAAK,kBACH,OAAO,SAAK00B,IAAZ,IAAwBhxB,WAAY6kB,EAAOvoB,MAAO20B,QAAQ,IAG5D,IAAK,aACH,OAAO,SAAKt2B,GAAZ,IAAmBs2B,OAAQpM,EAAOvoB,QAGpC,IAAK,YACH,OAAO,SAAK3B,GAAZ,IAAmBpC,MAAOssB,EAAOvoB,QAGnC,IAAK,eACH,OAAO,SAAK3B,GAAZ,IAAmBsW,UAAWtW,EAAMsW,UAAUwgB,OAAO,CAAC5M,EAAOvoB,UAG/D,IAAK,kBACH,OAAO,SAAK3B,GAAZ,IAAmBsW,UAAW,KAGhC,IAAK,wBACH,OAAO,SAAKtW,GAAZ,IAAmBu2B,aAAcv2B,EAAMu2B,aAAe,IAGxD,QACE,OAAOv2B,IAqEX0E,GAhEgB,WAA6B,IAA5B1E,EAA2B,uDAD/B,KACoBkqB,EAAW,uCAC5C,OAAQA,EAAO7rB,MACb,IAAK,QACH,OAJS,KAOX,IAAK,qBACH,OAAO6rB,EAAOxlB,GAGhB,IAAK,kBAGL,QACE,OAAO1E,IAmDXgZ,OA3BoB,WAAiC,IAAhChZ,EAA+B,uDADnC,KACwBkqB,EAAW,uCACpD,OAAQA,EAAO7rB,MACb,IAAK,QACH,OAJa,KAMf,IAAK,yBACH,OAAO6rB,EAAOlR,OAEhB,IAAK,sBAGL,QACE,OAAOhZ,IAgBX4zB,YA/CyB,WAAsC,IAArC5zB,EAAoC,uDADxC,KAC6BkqB,EAAW,uCAC9D,OAAQA,EAAO7rB,MACb,IAAK,QACH,OAJkB,KAOpB,IAAK,8BACH,OAAO6rB,EAAO0J,YAGhB,IAAK,2BAGL,QACE,OAAO5zB,KAoCP+2B,GAAcC,aAAuBR,GAAQK,IAE7CI,GAAmBhtB,OAAOitB,sCAAwCC,KAElEC,GAAQC,aACZN,GACAE,GAAiBK,aAAgBX,MAE7BY,GAAYC,aAAaJ,I,g/BAE/BT,GAAec,IAAIxB,I,OC/CO92B,IAAW1C,IAAI,UAAjC2C,G,GAAAA,MAAO8F,G,GAAAA,OACTwC,GAAgBtI,GAAQ,IAE9B,SAASqjB,KACP,IAAIC,EAAYC,UAAUD,WAAaC,UAAUC,QAAU3Y,OAAO4Y,MAGlE,MAAI,iBAAiBC,KAAKJ,GACjB,UAGL,WAAWI,KAAKJ,GACX,UAIL,cAAcI,KAAKJ,KAAezY,OAAO8Y,SAEpC,MAGF,UAGF,IAAM4P,GAAa,SAACh1B,EAAM7C,EAAO8J,EAAYhH,EAAc0G,GAChE,IAAM1E,EAAUC,EAAKlC,EAAK0V,UAEpBqkB,EAAY9yB,EAAW5E,MAAM8J,YAAcnM,EAAK2V,GAChDqkB,EAAch6B,EAAKwV,SAAWrT,UAAOI,IAC3C,OACE,gBAACy3B,EAAD,CACEp9B,IAAG,OAASO,EACZ2E,QAAS,SAACiM,GACR,GAAI/N,EAAK2V,GAAI,CACX1O,EAAWgC,SAASjJ,EAAK2V,GAAI3V,EAAKqX,QAElC,IAAMsX,EAAW,CACfpC,OAAQ,YAAcvsB,EAAK2V,GAC3BiZ,UAAW7gB,EAAEnE,YAAYglB,UACzBC,UAAW9gB,EAAEnE,YAAYilB,UACzBC,UAAW1nB,KAAKzG,OAGlBgG,EAAS,CAAEjG,KAAM,eAAgBsD,MAAO2qB,OAI5C,gBAACxhB,GAAD,CAAWC,UAAW,KAAMC,WAAY,OACrC,SAACC,GAAD,OACC,gBAACnL,EAAA,QAAD,CACEH,MAAO,CACLka,kBAAmB,EACnBvZ,QAAS,EACTF,gBAAiBzC,EAAKwV,SAClBvV,EAAMmR,S7GQEnS,E6GPEgB,EAAMmR,Q7GOApS,GAAeC,GAAM,K6GNzCg7B,YAAa,IAGf,gBAAC93B,EAAA,QAAD,CACEH,MAAO,CACLQ,cAAe,MACfqC,WAAY,SACZwZ,UAAW,GACX5b,gBACE6K,GAAaysB,EACTj6B,GAAWG,EAAMmR,cACjB/S,EACNyG,aAAcwI,GAAaysB,EAAY,QAAK17B,IAG9C,gBAAC8D,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,GAAIoD,WAAY,WACnC5C,EACC,gBAACA,EAAD,CACEc,KAAM/C,EAAK2B,KACXuB,KAAM,GACNF,MAAO/C,EAAMgD,gBAEbjD,EAAKoW,MACP,gBAAC/O,EAAA,EAAD,CACEC,OAAQ,CAAEsT,IAAK5a,EAAKoW,OACpBpU,MAAO,CAAEP,MAAO,GAAI8F,OAAQ,GAAIzC,aAAc,MAE9C,MAEN,gBAAC,UAAD,CACE9C,MAAO,CACLkN,WAAY,GACZlM,MAAO/C,EAAME,YACb4E,WAAY/E,EAAKwV,SAAW,YAASnX,IAGtC2B,EAAKkF,MAEPlF,EAAK4V,Y7GhCK,IAAC3W,O6GyCpBi7B,GAAS,SAAC,GAA2C,IAAD,IAAxCpzB,EAAwC,EAAxCA,YAAaG,EAA2B,EAA3BA,WAAYzD,EAAe,EAAfA,SACjCuD,EAAyBD,EAAzBC,GAAIzE,EAAqBwE,EAArBxE,OAAQqE,EAAaG,EAAbH,SAEd7C,EAAUnH,EAAe,MAACoK,OAAD,EAACA,EAAIG,QAHoB,EAKpBzD,mBAAQ,SAACnB,EAAOosB,WAAR,EAAC,EAAa/pB,MALF,WAKjDw1B,EALiD,KAKrCC,EALqC,OAMlB32B,mBAAQ,SAACnB,EAAOosB,WAAR,EAAC,EAAa9pB,OANJ,WAMjDy1B,EANiD,KAMpCC,EANoC,KAQlDC,EAA8B,SAAC,GAM/B,EALJC,aACE9P,QACEjV,QAAW9F,MAQX8qB,EAAe,SAACjN,GACC,WAAjBA,IAIF1mB,EAAYH,SAAS,CAAEjG,KAAM,0BAEzBoG,EAAYxE,OAAOs2B,aAAe,GACpC1I,MAA+B5xB,MAAK,SAACo8B,GACnC77B,QAAQuF,IAAI,WAAYs2B,GACpBA,GACFxK,WAMVvyB,qBAAU,WACRg9B,0CACEJ,KAED,IAEH58B,qBAAU,WAGR,OAFAoxB,IAAS5oB,iBAAiB,SAAUs0B,GAE7B,WACL1L,IAASC,oBAAoB,SAAUyL,MAExC,IAEiB,QAAhBp2B,UAASC,KACwB,YAA/BwgB,OACFjmB,QAAQuF,IAAI,cACZkI,OAAOzC,SAAStM,QAAQzB,EAAUI,kBAGD,QAA/B4oB,OACFjmB,QAAQuF,IAAI,UACZkI,OAAOzC,SAAStM,QAAQzB,EAAUG,eAItC,IAkCM2+B,EAlCgB,CACpB,OACA,WACA,UACA,UACA,SACA,QACA,YACA,OACA,WACA,UACA,QACA,OACA,WACA,YACA,UACA,aACA,SACA,gBACA,cACA,iBACA,cACA,aACA,QACA,QACA,YACA,WACA,aACA,QACA,OACA,eACA,mBACA,UAEyB9P,SAAS7jB,EAAW5E,MAAM8J,WA4FrD,OACE,gBAAChK,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IACnB,gBAACC,EAAA,EAAD,CACExE,MAAO,CACLQ,cAAe,MACf+D,KAAM,EACN9D,gBAAiBH,EAAOrC,MAAMmR,UAGf,QAAhB/M,UAASC,IAlGd,gBAACu2B,EAAA,EAAD,KACE,iEACA,wBAAM93B,KAAK,cAAc0S,QAAS3R,EAAQ,qBAE1C,wBAAMivB,SAAS,SAAStd,QAAQ,8BAChC,wBAAMsd,SAAS,UAAUtd,QAAQ,YACjC,wBAAMsd,SAAS,WAAWtd,QAAS3R,EAAQ,iBAC3C,wBAAMivB,SAAS,iBAAiBtd,QAAS3R,EAAQ,uBACjD,wBAAMivB,SAAS,WAAWtd,QAAQ,MA2F/B1L,GAAgB,KAtFrB,gBAAC5H,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,MACpB,gBAAC8V,EAAA,EAAD,CACEvV,MAAO,CAAEP,MAAO,KAChBogB,sBAAuB,CACrBpgB,MAAO,IACP8F,OAAwB,QAAhBlD,UAASC,GAAeiD,GAAS,SAAMlJ,IAGjD,gBAACy8B,EAAA,EAAD,CACEC,gBAAc,EACdC,SAAUlnB,GAAS/M,EAAIzE,EAAOrC,OAC9Bg7B,eAAgBd,EAChB7Z,SAAU,SAACuX,GACTuC,EAAcvC,GACdlxB,EAAS,CACPjG,KAAM,gCACNsD,MAAO6zB,KAGXhoB,aAAc,SAACqrB,EAAS/9B,GAAV,OACZ63B,GACEkG,EAAQ3lB,OACRpY,EACA8J,EACA3E,EAAOrC,MACP0G,IAGJw0B,cAAe,SAACD,GAAD,OACbA,EAAQzlB,QAAQzQ,KAAI,SAAChF,EAAM7C,GAAP,OAClB63B,GAAWh1B,EAAM7C,EAAO8J,EAAY3E,EAAOrC,MAAO0G,WA0DxD,gBAACxE,EAAA,QAAD,CACEH,MAAO,CACLuF,OAAwB,QAAhBlD,UAASC,GAAeiD,QAASlJ,EACzCkI,KAAM,IAGR,gBAAC,GAAD,CAAQU,WAAYA,EAAY3E,OAAQA,EAAQyE,GAAIA,KAEjD,MAAFA,OAAA,EAAAA,EAAII,UAAWC,KAAKzG,QAAUi6B,EAC7B,gBAAC,GAAD,CAAK9zB,YAAaA,EAAaG,WAAYA,MACtC,MAAFF,OAAA,EAAAA,EAAI4E,SAAU,GAAoB,QAAb,MAAF5E,OAAA,EAAAA,EAAI4E,WAAqBivB,EAC/C,gBAAC,GAAD,CAAM9zB,YAAaA,EAAaG,WAAYA,KACxC,MAAFF,OAAA,EAAAA,EAAIkI,QAAS7H,KAAKzG,QAAUi6B,EAC9B,gBAAC,GAAD,CAAM9zB,YAAaA,EAAaG,WAAYA,IAE5C,gBAAC9E,EAAA,QAAD,CAAMH,MAAO,CAAEuE,KAAM,IAAM/C,GAEZ,QAAhBa,UAASC,IAAgB,gBAAC,GAAD,OAG3ByF,GAAgB,KArErB,gBAAC5H,EAAA,QAAD,CAAMH,MAAO,CAAEP,MAAO,MACpB,gBAAC8V,EAAA,EAAD,CACEvV,MAAO,CAAEP,MAAO,KAChBogB,sBAAuB,CACrBpgB,MAAO,IACP8F,OAAwB,QAAhBlD,UAASC,GAAeiD,GAAS,SAAMlJ,IAGjD,gBAACy8B,EAAA,EAAD,CACEC,gBAAc,EACdC,SAAU9kB,GAAUnP,EAAIzE,EAAOrC,OAC/Bg7B,eAAgBZ,EAChB/Z,SAAU,SAACuX,GACTyC,EAAezC,GACflxB,EAAS,CACPjG,KAAM,iCACNsD,MAAO6zB,KAGXhoB,aAAc,SAACqrB,EAAS/9B,GAAV,OACZ63B,GACEkG,EAAQ3lB,OACRpY,EACA8J,EACA3E,EAAOrC,MACP0G,IAGJw0B,cAAe,SAACD,GAAD,OACbA,EAAQzlB,QAAQzQ,KAAI,SAAChF,EAAM7C,GAAP,OAClB63B,GAAWh1B,EAAM7C,EAAO8J,EAAY3E,EAAOrC,MAAO0G,aA0CxDrE,EAAOq2B,QACP,gBAAC,GAAD,CAAY1xB,WAAYA,EAAYH,YAAaA,MAK5Cs0B,GAAa,SAAC30B,GAAD,OAAe,SAACX,GAAD,OACvC,gBAAC,GAAWA,EACV,gBAACW,EAAcX,MAqFbu1B,IARY,QAAhBh3B,UAASC,GAAeg3B,mBAAmBC,uBAE3B,QAAhBl3B,UAASC,GACLyF,GACEyxB,IACAC,wBACFC,KAIF,CACEtO,KAAM,CACJuO,OAAQP,GAAWhO,IACnBwO,KAAM,IAGRnU,WAAY2T,GAAW3T,IAEvBoU,KAAM,CACJF,OAAQP,GAAWS,IACnBD,KAAM,cAGRhV,MAAOwU,GAAWxU,IAClBmE,SAAUqQ,GAAWrQ,IACrB1B,aAAc+R,GAAW/R,IACzBlC,iBAAkBiU,GAAWjU,IAC7B2U,OAAQV,GAAWU,IAEnBhkB,OAAQsjB,GAAWtjB,IACnBikB,QAASX,GAAWW,IACpBC,OAAQZ,GAAWY,IACnBnG,SAAUuF,GAAWvF,IACrBvS,iBAAkB8X,GAAW9X,IAC7B2Y,SAAUb,GAAWa,IACrBC,QAASd,GAAWc,IACpB9f,SAAUgf,GAAWhf,IACrBuX,MAAOyH,GAAWzH,IAClBlX,KAAM2e,GAAW3e,IACjBrB,UAAWggB,GAAWhgB,IAEtBuJ,OAAQyW,GAAWzW,IACnB/V,KAAMwsB,GAAWe,IACjBrL,KAAMsK,GAAWtK,IACjBsL,IAAKhB,GAAWgB,IAEhBxiB,KAAMwhB,GAAWxhB,IACjBgb,KAAMwG,GAAWxG,IACjB1I,OAAQkP,GAAWlP,IACnB8E,aAAcoK,GAAWpK,IACzB6B,UAAWuI,GAAWvI,IACtBuB,SAAUgH,GAAWhH,IACrBiI,SAAUjB,GAAWiB,IACrB5lB,WAAY2kB,GAAW3kB,IACvBuf,WAAYoF,GAAWpF,IACvBnY,cAAeud,GAAWvd,IAC1BY,OAAQ2c,GAAW3c,IACnBzF,QAASoiB,GAAWpiB,IACpBoZ,QAASgJ,GAAWhJ,IACpBkK,MAAOlB,GAAWkB,IAClBh0B,KAAM8yB,GAAW9yB,IACjBskB,IAAKwO,GAAWxO,IAChB8G,KAAM0H,GAAW1H,IACjBf,eAAgByI,GAAWzI,IAC3B4J,eAAgBnB,GAAWmB,IAC3B5L,QAASyK,GAAWzK,IACpB9D,OAAQuO,GAAWvO,IACnB1O,OAAQid,GAAWjd,IACnBlE,OAAQmhB,GAAWnhB,IACnB6V,SAAUsL,GAAWtL,IACrB/U,OAAQqgB,GAAWrgB,IACnByhB,WAAYpB,GAAWoB,IACvBtkB,eAAgBkjB,GAAWljB,IAC3BukB,MAAOrB,GAAWqB,IAClBC,MAAOtB,GAAWsB,IAClBrX,YAAaA,GACboS,IAAK2D,GAAW3D,IAChB7F,OAAQwJ,GAAWxJ,IACnB+K,QAAS,CACPhB,OAAQP,GAAWuB,IACnBf,KAAM,iBAIRlH,SAAU0G,GAAW1G,IACrBkI,YAAaxB,GAAWwB,IAExBC,aAAc,CACZlB,OAAQP,GAAWyB,IACnBjB,KAAM,uBAGRhd,WAAYwc,GAAWxc,IACvBke,gBAAiB1B,GAAW0B,IAC5BC,eAAgB3B,GAAW2B,IAC3BvI,gBAAiB,CACfmH,OAAQP,GAAW5G,IACnBoH,KAAM,0BAGRzY,KAAM,CACJwY,OAAQP,GAAWjY,IACnByY,KAAM,cAERoB,KAAM,CACJrB,OAAQP,GAAWjY,IACnByY,KAAM,cAERqB,IAAK,CACHtB,OAAQP,GAAWjY,IACnByY,KAAM,aAGR/c,eAAgB,CACd8c,OAAQP,GAAWvc,KAErBqe,YAAa9B,GAAW8B,IACxB5gB,UAAW8e,GAAW9e,IACtBgJ,MAAO8V,GAAW9V,IAClBwS,KAAMsD,GAAWtD,IAGjBqF,KAAM/B,GAAW+B,IACjBC,SAAUhC,GAAWgC,IACrBC,UAAWjC,GAAWiC,IACtBC,QAASlC,GAAWkC,IACpBC,WAAYnC,GAAWmC,IACvBvJ,OAAQoH,GAAWpH,KAErB,CACEwJ,eAAgB,QAChBC,UAA2B,QAAhBp5B,UAASC,IAAgByF,GAAgB,OAAI1L,EACxDq/B,iBA7M+B,SAAC53B,GAAW,IAAD,IAE5CmB,EAEEnB,EAFFmB,WAF4C,EAI1CnB,EADFgB,YAAeC,EAH6B,EAG7BA,GAAIzE,EAHyB,EAGzBA,OAAQqE,EAHiB,EAGjBA,SAHiB,EAMVlD,mBAAQ,SAACnB,EAAOosB,WAAR,EAAC,EAAa/pB,MANZ,WAMvCw1B,EANuC,KAM3BC,EAN2B,OAOR32B,mBAAQ,SAACnB,EAAOosB,WAAR,EAAC,EAAa9pB,OAPd,WAOvCy1B,EAPuC,KAO1BC,EAP0B,KAS9C,OACE,gBAAC/iB,EAAA,EAAD,KACE,gBAAC/Q,EAAA,EAAD,CACExE,MAAO,CAAEuE,KAAM,EAAG9D,gBAAiBH,EAAOrC,MAAMmR,SAChDusB,WAAY,CAAEl5B,IAAK,SAAUm5B,WAAY,UAEzC,gBAAC9C,EAAA,EAAD,CACEC,gBAAc,EACdC,SAAUlnB,GAAS/M,EAAIzE,EAAOrC,OAC9Bg7B,eAAgBd,EAChB7Z,SAAU,SAACuX,GACTuC,EAAcvC,GACdlxB,EAAS,CACPjG,KAAM,gCACNsD,MAAO6zB,KAGXhoB,aAAc,SAACqrB,EAAS/9B,GAAV,OACZ63B,GACEkG,EAAQ3lB,OACRpY,EACA8J,EACA3E,EAAOrC,MACP0G,IAGJw0B,cAAe,SAACD,GAAD,OACbA,EAAQzlB,QAAQzQ,KAAI,SAAChF,EAAM7C,GAAP,OAClB63B,GAAWh1B,EAAM7C,EAAO8J,EAAY3E,EAAOrC,MAAO0G,SAIxD,gBAACm0B,EAAA,EAAD,CACEC,gBAAc,EACdC,SAAU9kB,GAAUnP,EAAIzE,EAAOrC,OAC/Bg7B,eAAgBZ,EAChB/Z,SAAU,SAACuX,GACTyC,EAAezC,GACflxB,EAAS,CACPjG,KAAM,iCACNsD,MAAO6zB,KAGXhoB,aAAc,SAACqrB,EAAS/9B,GAAV,OACZ63B,GACEkG,EAAQ3lB,OACRpY,EACA8J,EACA3E,EAAOrC,MACP0G,IAGJw0B,cAAe,SAACD,GAAD,OACbA,EAAQzlB,QAAQzQ,KAAI,SAAChF,EAAM7C,GAAP,OAClB63B,GAAWh1B,EAAM7C,EAAO8J,EAAY3E,EAAOrC,MAAO0G,YA+I1Dk3B,uBAAuB,EACvBC,kBAAmB,CACjBC,eAAgB,eAElBC,yBAA0B,CACxBC,aAAa,KAInB,CACE1xB,QAAS,SAIb,SAAS2xB,GAAO9+B,GAKd,IAJA,IAAI0gB,EAAS,GACTqe,EACF,iEACEC,EAAmBD,EAAW/+B,OACzBE,EAAI,EAAGA,EAAIF,EAAQE,IAC1BwgB,GAAUqe,EAAWE,OAAO3+B,KAAKsP,MAAMtP,KAAKgb,SAAW0jB,IAEzD,OAAOte,E,IAGHwe,G,mLA0BJC,WAAa,SAACjnB,GACZzY,QAAQuF,IAAI,2BAA4BkT,I,mJAzBDtR,KAAKF,MAApCxD,E,EAAAA,OAAQ0E,E,EAAAA,SAAUL,E,EAAAA,WAEtBc,EAAQnF,EAAOoF,aAELD,EAAMrI,OAAS,IAC3BqI,EAAQy2B,GAAO,IACfv3B,EAAS,CAAEjG,KAAM,kBAAmBsD,MAAOyD,IAC3CT,EAASS,IAETT,EAASS,GAGXzB,KAAKK,SAAWC,aAAY,kBAAM,EAAKk4B,kBAAiB,KACxDx4B,KAAKy4B,WAAan4B,aAAY,SAAC2uB,GAAD,OAAOjuB,EAASiuB,KAAI,IAAMxtB,GAGxD2b,UAAQjd,iBAAiB,MAAOH,KAAKu4B,YACrCnb,UAAQsb,gBAAgBpgC,MAAK,SAACgZ,GAAD,OAAS,EAAKinB,WAAWjnB,M,2GAItD/H,cAAcvJ,KAAKK,UACnBkJ,cAAcvJ,KAAKy4B,c,sCAMJ,IAAD,EACez4B,KAAKF,MAA1Ba,EADM,EACNA,SAAUrE,EADJ,EACIA,OACdA,EAAOqW,UAAUvZ,OAAS,IAC5BL,GAAK,eAAgB,CACnB2I,WAAYpF,EAAOoF,WACnBiR,UAAWrW,EAAOqW,YAEpBhS,EAAS,CAAEjG,KAAM,uB,yCAIFi+B,GAAY,IAAD,EACC34B,KAAKF,MAA1BkB,EADoB,EACpBA,SAAU1E,EADU,EACVA,OAEdq8B,EAAUr8B,OAAOq2B,SAAW3yB,KAAKF,MAAMxD,OAAOq2B,QAChD3xB,EAAS1E,EAAOoF,c,+BAIV,IACA5B,EAAUE,KAAVF,MAGR,OACE,gBAAC,GAAD,KACE,gBAAC,sBAAD,KACE,gBAAC84B,GAAD,KACE,gBAACvD,GAAD,CAAWv0B,YAAW,MAAOhB,Y,GAzDZzC,aAiFvBw7B,GAAgBn4B,aAhBE,SAAC,GAEvB,MAAO,CAAEpE,OAFsD,EAAtCA,OAERyE,GAF8C,EAA9BA,GAEZkvB,YAF0C,EAA1BA,YAEH5a,OAF6B,EAAbA,WAIzB,SAAC1U,GAAD,MAAe,CACxCA,WACAK,SAAU,SAACU,GAETf,EAAS,CAAEjG,KAAM,qBAAsB03B,QAAS,CAAE1wB,iBAEpD6b,kBAAmB,kBACjB5c,EAAS,CAAEjG,KAAM,8BAA+B03B,QAAS,QAC3D9c,aAAc,kBACZ3U,EAAS,CAAEjG,KAAM,yBAA0B03B,QAAS,WAGlC1xB,CAGpB43B,IAWaQ,GATH,WACV,OACE,gBAAC,IAAD,CAAalF,UAAWA,IACtB,gBAAC,IAAD,CAAUH,MAAOA,IACf,gBAACoF,GAAD,SCrwBOC,Q,+DCAX,kBAAmB9Z,WACrB1Y,OAAOnG,iBAAiB,QAAQ,WAC9B6e,UAAU+Z,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7C3gC,MAAK,SAAU4gC,OAGfvgC,OAAM,SAAUC,GACfC,QAAQqgC,KAAK,oCAAqCtgC,U,wk5BCV1DhD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3C,IAAImJ,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,WAAY,IACZ,cAAe,IACf,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASm6B,EAAeC,GACvB,IAAI/mB,EAAKgnB,EAAsBD,GAC/B,OAAOE,EAAoBjnB,GAE5B,SAASgnB,EAAsBD,GAC9B,IAAIE,EAAoB9M,EAAExtB,EAAKo6B,GAAM,CACpC,IAAIrxB,EAAI,IAAIpI,MAAM,uBAAyBy5B,EAAM,KAEjD,MADArxB,EAAEiD,KAAO,mBACHjD,EAEP,OAAO/I,EAAIo6B,GAEZD,EAAejlB,KAAO,WACrB,OAAOuD,OAAOvD,KAAKlV,IAEpBm6B,EAAe55B,QAAU85B,EACzBzjC,EAAOC,QAAUsjC,EACjBA,EAAe9mB,GAAK,K,oBC/RpBzc,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/app.874781ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d2180cfa.png\";","const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://172.20.10.2:4001\"; //192.168.1.38\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\",\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport { useEffect } from \"react\";\nimport { Alert, Dimensions, Platform, ScaledSize } from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport function ColorLuminance(hex, lum) {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  var rgb = \"#\",\n    c,\n    i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += (\"00\" + c).substr(c.length);\n  }\n\n  return rgb;\n}\n\nexport const lighterHex = (hex) => ColorLuminance(hex, 0.2);\nexport const darkerHex = (hex) => ColorLuminance(hex, -0.2);\n\nexport const getUserColor = (item, theme) =>\n  item?.creditsTotal >= 10000\n    ? \"red\"\n    : item?.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport { useSelector } from \"react-redux\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nconst Button = ({ icon, font, title, onPress, disabled, style }) => {\n  const TheIcon = font && icon ? Icon[font] : View;\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity onPress={disabled ? undefined : onPress}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: disabled ? `${theme.secondary}55` : theme.secondary,\n          padding: 10,\n          justifyContent: \"center\",\n          paddingHorizontal: isSmall ? 5 : 20,\n          // borderRadius: 20,\n          ...style,\n        }}\n      >\n        {font && icon ? (\n          <View style={{ marginRight: 20 }}>\n            <TheIcon name={icon} color={theme.secondaryText} size={20} />\n          </View>\n        ) : null}\n\n        {title && (\n          <Text style={{ textAlign: \"center\", color: theme.secondaryText }}>\n            {title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport { Alert, Platform, Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\n\nexport const AlertContext = React.createContext({});\n\nexport const AlertProvider = ({ children }) => {\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [alert, setAlert] = useState({});\n\n  const getText = getTextFunction(); //TODO: Provide me?.locale\n  return (\n    <AlertContext.Provider\n      value={(title, message, buttons, options) => {\n        console.log(\"functie\");\n        if (Platform.OS === \"web\") {\n          setAlertVisible(!alertVisible);\n          setAlert({ title, message, buttons, options });\n        } else {\n          Alert.alert(title, message, buttons, options);\n        }\n      }}\n    >\n      {children}\n\n      {alertVisible && (\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            backgroundColor: \"rgba(0,0,0,0.3)\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <View\n            style={{ backgroundColor: \"white\", borderRadius: 20, padding: 20 }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{alert.title}</Text>\n            <Text>{alert.message}</Text>\n\n            {alert.buttons ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                {alert.buttons.map((button) => (\n                  <Button\n                    title={button.text}\n                    onPress={() => {\n                      button.onPress?.();\n                      setAlertVisible(false);\n                    }}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Button\n                title={getText(\"ok\")}\n                onPress={() => setAlertVisible(false)}\n              />\n            )}\n          </View>\n        </View>\n      )}\n    </AlertContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withAlert = (ChildComponent) => (props) => (\n  <AlertContext.Consumer>\n    {(context) => <ChildComponent {...props} alert={context} />}\n  </AlertContext.Consumer>\n);\n","import NetInfo from \"@react-native-community/netinfo\";\nimport React from \"react\";\nimport { Platform, SafeAreaView, Text, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Constants from \"../Constants\";\n\nconst CONNECTION_GOOD = 2;\nconst CONNECTION_BAD = 1;\nconst CONNECTION_NONE = 0;\n\nclass ConnectionProviderScreen extends React.Component {\n  componentDidMount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe = NetInfo.addEventListener((state) => {\n        // console.log(\"Connection type\", state.type);\n        // console.log(\"Is connected?\", state.isConnected);\n        this.props.setIsConnected(\n          state.isConnected ? CONNECTION_GOOD : CONNECTION_NONE\n        );\n      });\n    }\n\n    this.interval = setInterval(this.fetchWithTimeout, 5000);\n\n    // To unsubscribe to these update, just use:\n  }\n\n  fetchWithTimeout = () => {\n    const FETCH_TIMEOUT = 5000;\n    let didTimeOut = false;\n\n    new Promise(function (resolve, reject) {\n      const timeout = setTimeout(function () {\n        didTimeOut = true;\n        reject(new Error(\"Request timed out\"));\n      }, FETCH_TIMEOUT);\n\n      fetch(Constants.SERVER_ADDR + \"/healthcheck\")\n        .then(function (response) {\n          // Clear the timeout as cleanup\n          clearTimeout(timeout);\n          if (!didTimeOut) {\n            // console.log(\"fetch good! \");\n            resolve(response);\n          }\n        })\n        .catch(function (err) {\n          // console.log(\"fetch failed! \", err);\n\n          // Rejection already happened with setTimeout\n          if (didTimeOut) return;\n          // Reject with error\n          reject(err);\n        });\n    })\n      .then(() => {\n        // Request success and no timeout\n        this.props.setIsConnected(CONNECTION_GOOD);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        this.props.setIsConnected(CONNECTION_BAD);\n        // Error: response error, request timeout or runtime error\n      });\n  };\n\n  componentWillUnmount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe();\n    }\n    clearTimeout(this.interval);\n  }\n\n  render() {\n    const { children, isConnected } = this.props;\n\n    return (\n      <View style={{ flex: 1 }}>\n        {isConnected !== CONNECTION_GOOD && (\n          <View\n            style={{\n              backgroundColor:\n                isConnected === CONNECTION_BAD ? \"orange\" : \"red\",\n              padding: 15,\n            }}\n          >\n            <SafeAreaView>\n              <Text style={{ color: \"white\" }}>\n                {isConnected === CONNECTION_BAD ? \"Slechte\" : \"Geen\"}{\" \"}\n                internetverbinding!\n              </Text>\n            </SafeAreaView>\n          </View>\n        )}\n        {children}\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isConnected: state.device.isConnected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setIsConnected: (isConnected) =>\n    dispatch({ type: \"SET_IS_CONNECTED\", value: isConnected }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectionProviderScreen);\n","import React from \"react\";\nimport { Image, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View>\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Dead;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getTextFunction } from \"../Util\";\n\nclass Fly extends React.Component {\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"flyYoureTravelingTo\", me?.city)}\n        </Text>\n        <CountDown\n          until={sec}\n          onFinish={() => {\n            reloadMe(device.loginToken);\n          }}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Fly;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  chat = () => {\n    const { chat } = this.state;\n    return chat.map((item, index) => (\n      <Text key={`item${index}`}>\n        <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n        {item.message}&nbsp;&nbsp;\n      </Text>\n    ));\n  };\n  render() {\n    const { device, navigation, me } = this.props;\n\n    const { chat, input } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const allText = chat\n      .map((item) => `${item.name}${item.message}`)\n      .join(\"::::\");\n    return (\n      <View style={{ height: Platform.select({ web: 50, default: 100 }) }}>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#444\",\n            borderWidth: 1,\n            borderColor: \"black\",\n            flexDirection: Platform.select({ web: \"row\", default: undefined }),\n          }}\n        >\n          {Platform.select({\n            web: (\n              <View style={{ flex: 1, justifyContent: \"center\" }}>\n                {allText ? (\n                  <Ticker>\n                    {({ index }) => {\n                      return (\n                        <>\n                          {chat.map((item, index) => (\n                            <Text\n                              style={{ color: \"white\" }}\n                              numberOfLines={1}\n                              key={`item${index}`}\n                            >\n                              <TouchableOpacity\n                                onPress={() => {\n                                  navigation.navigate(\"Profile\", {\n                                    name: item.name,\n                                  });\n                                }}\n                              >\n                                <Text style={{ fontWeight: \"bold\" }}>\n                                  {item.name}\n                                </Text>\n                              </TouchableOpacity>\n                              :&nbsp;{item.message}&nbsp;&nbsp;\n                            </Text>\n                          ))}\n                        </>\n                      );\n                    }}\n                  </Ticker>\n                ) : null}\n              </View>\n            ),\n\n            default: (\n              <MarqueeText\n                style={{ fontSize: 20 }}\n                duration={allText.length * 50}\n                marqueeOnStart\n                loop\n                marqueeDelay={200}\n                marqueeResetDelay={1000}\n              >\n                <>\n                  {chat.map((item, index) => (\n                    <Fragment key={`item${index}`}>\n                      <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                      :&nbsp;{item.message}&nbsp;&nbsp;\n                    </Fragment>\n                  ))}\n                </>\n              </MarqueeText>\n            ),\n          })}\n          <View style={{ width: 100, height: 30 }}>\n            <TextInput\n              value={input}\n              placeholder={getText(\"chatYourMessage\")}\n              style={{\n                backgroundColor: \"#404040\",\n                fontSize: 20,\n                color: \"white\",\n                flex: 1,\n                width: 100,\n              }}\n              onChangeText={(input) => this.setState({ input })}\n              onSubmitEditing={({ nativeEvent: { text } }) => {\n                fetch(`${Constants.SERVER_ADDR}/chat`, {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    token: device.loginToken,\n                    message: text,\n                  }),\n                })\n                  .then((response) => response.json())\n                  .then((chat) => {\n                    this.getChat();\n\n                    if (Platform.OS === \"web\") {\n                      location.reload();\n                    }\n\n                    this.setState({ input: \"\" });\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Chat from \"../components/Chat\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nconst isSmallDevice = width < 800;\n\nfunction Header({ navigation, device, me }) {\n  const getText = getTextFunction(me?.locale);\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: device.theme.secondaryText,\n  };\n\n  const notActivated = me?.phoneVerified === false && me?.numActions >= 20 && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const statsHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2,\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5,\n        }}\n      >\n        <Text style={textStyle}>\n          😎 {me?.name} {me?.gang?.name}\n        </Text>\n        <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n        <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon.MaterialCommunityIcons\n            name=\"pistol\"\n            size={18}\n            color={device.theme.secondaryText}\n            style={{ marginRight: 5 }}\n          />\n          <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n        </View>\n        <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n        <Text style={textStyle}>🌍 {me?.city}</Text>\n        <Text style={textStyle}>❤️ {me?.health}%</Text>\n        <Text style={textStyle}>\n          ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n        </Text>\n        <Text style={textStyle}>💪 {getStrength(me?.strength, \"both\")}</Text>\n        <Text style={textStyle} onPress={() => navigation.navigate(\"Channels\")}>\n          💬 {me?.chats}\n        </Text>\n      </View>\n\n      {!me?.phoneVerified && (\n        <View\n          style={{\n            padding: 5,\n            backgroundColor: device.theme.secondary,\n            borderRadius: 5,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"VerifyPhone\")}\n          >\n            <AntDesign\n              name=\"exclamationcircleo\"\n              color=\"red\"\n              style={{ marginRight: 10 }}\n            />\n            <Text\n              style={{ color: device.theme.secondaryText, fontWeight: \"bold\" }}\n            >\n              {getText(\"headerVerifyYourAccount\")}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const backButton = (\n    <View\n      style={{\n        margin: 10,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n      }}\n    >\n      {navigation.state.routeName !== \"Home\" ? (\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => {\n            if (isSmallDevice || Platform.OS !== \"web\") {\n              navigation.goBack();\n            } else {\n              window.history.back();\n            }\n          }}\n        >\n          <AntDesign\n            name=\"arrowleft\"\n            size={32}\n            color={device.theme.secondaryText}\n          />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ height: 20 }} />\n      )}\n    </View>\n  );\n\n  const webHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n        <View style={{ width: 50 }}>{backButton}</View>\n\n        <View style={{ alignItems: \"center\", flex: 1 }}>\n          <Image\n            source={require(\"../../assets/logos/logo5.jpg\")}\n            style={{\n              margin: 10,\n              width: isSmallDevice ? 200 : 600,\n              height: isSmallDevice ? 33 : 100,\n            }}\n          />\n        </View>\n\n        <Text style={{ color: \"white\", marginTop: 20 }}>\n          v{Constants.manifest.version}\n        </Text>\n\n        {isSmallDevice ? (\n          <TouchableOpacity\n            onPress={() => {\n              navigation.toggleDrawer();\n            }}\n            style={{ margin: 10 }}\n          >\n            <Feather\n              name=\"menu\"\n              size={32}\n              color=\"#FFF\"\n              style={{ color: \"#FFF\" }}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      {isSmallDevice && statsHeader}\n\n      <Chat me={me} device={device} navigation={navigation} />\n    </View>\n  );\n\n  return (\n    <View style={{ justifyContent: \"center\" }}>\n      {Platform.OS === \"web\" ? (\n        webHeader\n      ) : (\n        <View style={{ backgroundColor: device.theme.secondary }}>\n          {backButton}\n          {updateComponent || notActivated || statsHeader}\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default Header;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import { canUseDOM } from \"fbjs/lib/ExecutionEnvironment\";\n\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener(\"touchstart\", disableHover, true);\n  document.addEventListener(\"touchmove\", disableHover, true);\n  document.addEventListener(\"mousemove\", enableHover, true);\n}\n\nexport function isHoverEnabled() {\n  return isEnabled;\n}\n","import { element, func, oneOfType } from \"prop-types\";\nimport React from \"react\";\nimport { isHoverEnabled } from \"./HoverState\";\n\nexport default function Hoverable({ onHoverIn, onHoverOut, children }) {\n  const [isHovered, setHovered] = React.useState(false);\n  const [showHover, setShowHover] = React.useState(true);\n\n  function handleMouseEnter(e) {\n    if (isHoverEnabled() && !isHovered) {\n      if (onHoverIn) onHoverIn();\n      setHovered(true);\n    }\n  }\n\n  function handleMouseLeave(e) {\n    if (isHovered) {\n      if (onHoverOut) onHoverOut();\n      setHovered(false);\n    }\n  }\n\n  function handleGrant() {\n    setShowHover(false);\n  }\n\n  function handleRelease() {}\n\n  const child =\n    typeof children === \"function\"\n      ? children(showHover && isHovered)\n      : children;\n\n  return React.cloneElement(React.Children.only(child), {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    // prevent hover showing while responder\n    onResponderGrant: () => setShowHover(false),\n    onResponderRelease: () => setShowHover(true),\n    // if child is Touchable\n    onPressIn: handleGrant,\n    onPressOut: handleRelease,\n  });\n}\n\nHoverable.displayName = \"Hoverable\";\n\nHoverable.propTypes = {\n  children: oneOfType([func, element]),\n  onHoverIn: func,\n  onHoverOut: func,\n};\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\nclass Jail extends React.Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n\n    const { reloadMe, device } = this.props.screenProps;\n    this.interval = setInterval(() => {\n      reloadMe(device.loginToken);\n      this.fetchMembers();\n    }, 2500);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clear interval jail\");\n    clearInterval(this.interval);\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n      </View>\n    );\n  };\n\n  buyOut = async (type) => {\n    const { device, reloadMe } = this.props.screenProps;\n    const { response } = await post(\"buyout\", {\n      token: device.loginToken,\n      type,\n    });\n    this.setState({ response });\n    reloadMe(device.loginToken);\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { response } = this.state;\n    const sec = Math.round((me.jailAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <T>{getText(\"jailYoureInJail\")}</T>\n\n        <CountDown\n          until={sec}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n\n        <View style={{ height: 15 }} />\n\n        {response && <T>{response}</T>}\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCredits\")}\n          onPress={() => this.buyOut(\"credits\")}\n        />\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCash\")}\n          onPress={() => this.buyOut(\"cash\")}\n        />\n\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\n\nconst LoginModal = ({\n  screenProps: {\n    dispatch,\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n  navigation,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [phone, setPhone] = useState(\"\");\n  const [view, setView] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const changeName = async () => {\n    const { response, success } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    setResponse(response);\n\n    return success;\n  };\n\n  const login = () => dispatch({ type: \"SET_LOGGED\", value: true });\n  useEffect(() => {\n    setName(me?.name);\n  }, [me?.name]);\n\n  const postVerifyPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.token });\n\n          if (Platform.OS === \"web\") {\n            location.reload();\n          } else {\n            Updates.reloadAsync();\n          }\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postLogin = () => {\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        if (responseJson.error) {\n          setError(responseJson.error);\n        } else {\n          //go to map\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.loginToken });\n          reloadMe(responseJson.loginToken);\n          setError(null);\n          setSuccess(responseJson.success);\n\n          if (Platform.OS === \"web\") {\n            location.reload();\n          } else {\n            Updates.reloadAsync();\n          }\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postSetPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token: device.loginToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          setView(\"code\");\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderEmailPassLogin = () => (\n    <View>\n      <View\n        style={{\n          margin: 20,\n          padding: 20,\n          borderRadius: 20,\n        }}\n      >\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\n\n        {success ? (\n          <Text style={{ color: \"green\" }}>{success}</Text>\n        ) : (\n          <View>\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n              <TextInput\n                placeholder={getText(\"email\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                onChangeText={setEmail}\n                value={email}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n              <TextInput\n                secureTextEntry\n                onChangeText={setPassword}\n                value={password}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <View />\n\n              <Button\n                theme={theme}\n                title={getText(\"login\")}\n                onPress={() => postLogin()}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n\n                  navigation.navigate(\"SignupEmail\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"register\")}\n                </Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n                  navigation.navigate(\"ForgotPassword\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"forgotPassword\")}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n  const renderCode = () => (\n    <View>\n      {response && <T>{response}</T>}\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n        <TextInput\n          placeholder=\"000000\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setCode}\n          value={code}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button title={getText(\"validate\")} onPress={() => postVerifyPhone()} />\n      </View>\n    </View>\n  );\n  const renderPhoneLogin = () => (\n    <View>\n      {response && <T>{response}</T>}\n\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n        <TextInput\n          placeholder=\"+31\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setPhone}\n          value={phone}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button\n          theme={theme}\n          title={getText(\"save\")}\n          onPress={() => postSetPhone()}\n        />\n      </View>\n    </View>\n  );\n  const renderMain = () => (\n    <View>\n      {/* Option 1: Just play */}\n      {response && <T>{response}</T>}\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"youAre\")}</T>\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={[style(theme).textInput, { marginLeft: 10 }]}\n          placeholder={getText(\"name\")}\n          value={name}\n          onChangeText={setName}\n        />\n      </View>\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"justPlay\")}\n        onPress={async () => {\n          if (!me) {\n            setResponse(getText(\"waitUntilLoaded\"));\n            return;\n          }\n          if (name !== me?.name) {\n            const success = await changeName();\n            if (success) {\n              reloadMe(device.loginToken);\n\n              login();\n            }\n          } else {\n            login();\n          }\n        }}\n      />\n      {/* Option 2: Login with email */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithEmail\")}\n        onPress={() => setView(\"emailPass\")}\n      />\n      {/* Option 3: Login with phone number */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithPhone\")}\n        onPress={() => setView(\"phone\")}\n      />\n    </View>\n  );\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: \"rgba(0,0,0,0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: 20,\n          padding: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={view !== null ? () => setView(null) : login}\n          style={{ alignSelf: \"flex-end\" }}\n        >\n          <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n        </TouchableOpacity>\n\n        {!me ? <ActivityIndicator /> : null}\n\n        {view === \"emailPass\"\n          ? renderEmailPassLogin()\n          : view === \"phone\"\n          ? renderPhoneLogin()\n          : view === \"code\"\n          ? renderCode()\n          : renderMain()}\n      </View>\n    </View>\n  );\n};\n\nexport default LoginModal;\n","import * as React from \"react\";\nimport { Animated, Easing, Keyboard, Platform, StatusBar } from \"react-native\";\nimport { isIphoneX } from \"./Util\";\n\ninterface KeyboardAvoidingSpaceProps {\n  onKeyboardWillShow?: (duration: number) => void;\n  onKeyboardWillHide?: (duration: number) => void;\n  offset?: number;\n}\n\ninterface KeyboardAvoidingSpaceState {\n  height: Animated.Value;\n}\n\n/**\n * Made with swag by yours truly\n * @author Brad \"Swagalicious\" Johnson\n */\nexport class KeyboardAvoidingSpace extends React.Component<\n  KeyboardAvoidingSpaceProps,\n  KeyboardAvoidingSpaceState\n> {\n  constructor(props: KeyboardAvoidingSpaceProps) {\n    super(props);\n    this.state = {\n      height: new Animated.Value(0),\n    };\n  }\n\n  componentDidMount() {\n    this.bindListeners();\n  }\n\n  componentWillUnmount() {\n    this.unbindListeners();\n  }\n\n  bindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        this.keyboardWillHide\n      );\n    } else {\n      this.keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        this.keyboardWillHide\n      );\n    }\n  }\n\n  unbindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    } else {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }\n\n  keyboardWillShow = (e: any) => {\n    // because of iPhone X new screen settings, remove SafeAreaView padding-bottom when keyboard is open\n    const SafeAreaViewPaddingBottom = 34;\n    const duration = e && e.duration ? e.duration : 100;\n    let notchHeight = 0;\n    if (\n      Platform.OS === \"android\" &&\n      StatusBar.currentHeight &&\n      StatusBar.currentHeight > 24\n    ) {\n      notchHeight = StatusBar.currentHeight;\n    }\n    // let suggestHeight = 0;\n    // if (Platform.OS === \"ios\") {\n    //   suggestHeight = 30;\n    // }\n    if (this.props.onKeyboardWillShow) {\n      this.props.onKeyboardWillShow(duration);\n    }\n\n    const toValue =\n      e.endCoordinates.height +\n      // suggestHeight +\n      // notchHeight -\n      (this.props.offset || 0) -\n      (isIphoneX() ? SafeAreaViewPaddingBottom : 0);\n\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  keyboardWillHide = (e: any) => {\n    const duration = e && e.duration ? e.duration : 100;\n    if (this.props.onKeyboardWillHide) {\n      this.props.onKeyboardWillHide(duration);\n    }\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    return <Animated.View style={{ height: this.state.height }} />;\n  }\n}\n","import React from \"react\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"./Constants\";\nimport { getRank, getTextFunction, numberFormat } from \"./Util\";\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n  const ocSeconds = Math.ceil((me?.ocAt + 120000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const workSeconds = Math.ceil((me?.workAt - Date.now()) / 1000);\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCrime\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"car\",\n          text: getText(\"menuStealCar\"),\n          to: \"StealCar\",\n          component:\n            stealcarSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={stealcarSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuCrimes\"),\n          to: \"Crimes\",\n          component:\n            crimeSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={crimeSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuKill\"),\n          to: \"Kill\",\n          component:\n            attackSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={attackSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuRob\"),\n          to: \"Rob\",\n          component:\n            robSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuOC\"),\n          to: \"OrganisedCrime\",\n          component:\n            ocSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={ocSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          iconType: \"AntDesign\",\n          icon: \"stepforward\",\n\n          text: getText(\"menuGym\"),\n          to: \"Gym\",\n          component:\n            gymSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={gymSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"tree\",\n\n          text: getText(\"menuWiet\"),\n          to: \"Wiet\",\n          component:\n            wietSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={wietSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialIcons\",\n          icon: \"people\",\n\n          text: getText(\"menuJunkies\"),\n          to: \"Junkies\",\n          component:\n            junkiesSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={junkiesSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"female\",\n\n          text: getText(\"menuProstitutes\"),\n          to: \"Hoeren\",\n          component:\n            hoerenSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={hoerenSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        me?.level > 1 && {\n          iconType: \"AntDesign\",\n          icon: \"tool\",\n          text: getText(\"menuWork\"),\n          to: \"Work\",\n          component:\n            workSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={workSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bars\",\n\n          text: getText(\"menuJail\", me?.jail),\n          to: \"Jail\",\n        },\n      ].filter((x) => !!x),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSpend\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuBank\"),\n          to: \"AllBanks\",\n        },\n\n        me?.level > 1 && {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuMarket\"),\n          to: \"Market\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuBulletfactory\"),\n          to: \"Bulletfactory\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bomb\",\n          text: getText(\"menuBomb\"),\n          to: \"Bomb\",\n        },\n\n        {\n          iconType: \"FontAwesome5\",\n          icon: \"dice\",\n          text: getText(\"menuCasino\"),\n          to: \"Casino\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"warehouse\",\n          text: getText(\"menuBunker\"),\n          to: \"Bunker\",\n          component:\n            bunkerSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={bunkerSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"FontAwesome5\",\n          icon: \"hospital\",\n          text: getText(\"menuHospital\"),\n          to: \"Hospital\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"shop\",\n          text: getText(\"menuShop\"),\n          to: \"Shop\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-car\",\n          text: getText(\"menuGarage\"),\n          to: \"Garage\",\n        },\n        {\n          iconType: \"MaterialIcons\",\n          icon: \"local-car-wash\",\n          text: getText(\"menuRacecars\"),\n          to: \"Racecars\",\n        },\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"car-key\",\n          text: getText(\"menuStreetrace\"),\n          to: \"Streetrace\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"plane\",\n          text: getText(\"menuAirport\"),\n          to: \"Airport\",\n        },\n      ].filter((x) => !!x),\n    },\n  ];\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level > 1\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuHackers\"),\n            to: \"Hackers\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuPolice\"),\n            to: \"Police\",\n          },\n        ]\n      : [];\n\n  const admin =\n    me?.level >= 10\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            text: getText(\"menuAdminEmail\"),\n            to: \"AdminEmail\",\n          },\n        ]\n      : [];\n\n  return (\n    me?.level > 1 && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAdminPanel\"),\n      },\n      content: [...gameMod, ...admin],\n    }\n  );\n};\n\nexport const rightMenu = (me, theme) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gangMenus =\n    me?.level > 1\n      ? {\n          header: {\n            isHeader: true,\n            text: me?.gang?.name || getText(\"headerGang\"),\n            image: me?.gang?.thumbnail\n              ? Constants.SERVER_ADDR + me?.gang?.thumbnail\n              : null,\n          },\n          content: [\n            !me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangCreate\"),\n              to: \"GangCreate\",\n            },\n            {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangs\"),\n              to: \"Gangs\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangSettings\"),\n              to: \"GangSettings\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangShop\"),\n              to: \"GangShop\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangAchievements\"),\n              to: \"GangAchievements\",\n            },\n            // me?.gangId && {\n            //   iconType: \"Ionicons\",\n            //   icon: \"ios-people\",\n            //   text: getText(\"menuGangOc\"),\n            //   to: \"GangOc\",\n            // },\n          ].filter((x) => !!x),\n        }\n      : null;\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: me?.name,\n        image: me?.thumbnail ? Constants.SERVER_ADDR + me?.thumbnail : null,\n      },\n\n      content: [\n        {\n          isStats: true,\n          iconType: \"FontAwesome5\",\n          icon: \"coins\",\n          text: getText(\"menuCash\", numberFormat(me?.cash)),\n          to: \"AllBanks\",\n        },\n\n        {\n          isStats: true,\n\n          iconType: \"FontAwesome\",\n          icon: \"money\",\n\n          text: getText(\"menuBankMoney\", numberFormat(me?.bank)),\n          to: \"AllBanks\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"bullet\",\n\n          text: getText(\"menuBullets\", numberFormat(me?.bullets)),\n          to: \"Kill\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"SimpleLineIcons\",\n          icon: \"badge\",\n          text: getText(\"menuRank\", getRank(me?.rank, \"both\")),\n          to: \"Status\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"AntDesign\",\n          icon: \"heart\",\n\n          text: getText(\"menuHealth\", me?.health),\n          to: \"Hospital\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"Ionicons\",\n          icon: \"ios-airplane\",\n\n          text: getText(\"menuCity\", me?.city),\n          to: \"Airport\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChannels\", me?.chats),\n          to: \"Channels\",\n        },\n      ],\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSociety\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n\n          text: getText(\"menuMembers\", me?.online),\n          to: \"Members\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStats\"),\n          to: \"Stats\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuMyObjects\"),\n          to: \"MyObjects\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStatus\"),\n          to: \"Status\",\n        },\n      ],\n    },\n\n    gangMenus,\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerGeneral\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChat\"),\n          to: \"Chat\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"wechat\",\n\n          text: getText(\"menuForum\"),\n          to: \"Forum\",\n        },\n\n        {\n          iconType: \"SimpleLineIcons\",\n          icon: \"settings\",\n\n          text: getText(\"menuSettings\"),\n          to: \"Settings\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"info-with-circle\",\n\n          text: getText(\"menuInfo\"),\n          to: \"Info\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuVIP\"),\n          to: \"VIP\",\n        },\n      ],\n    },\n\n    adminMenu(me),\n  ].filter((x) => !!x);\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  ScrollView,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { default as style, default as styles } from \"../Style\";\nimport { getRank, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst Accomplice = ({\n  navigation,\n  screenProps: {\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [accomplice1, setAccomplice1] = useState(me?.accomplice);\n  const [accomplice2, setAccomplice2] = useState(me?.accomplice2);\n  const [accomplice3, setAccomplice3] = useState(me?.accomplice3);\n  const [accomplice4, setAccomplice4] = useState(me?.accomplice4);\n  const [response, setResponse] = useState(null);\n\n  const submit = (acc) => {\n    //how to set accomplice acc from params to the right body?\n\n    fetch(`${Constants.SERVER_ADDR}/setAccomplice`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        accomplice: accomplice1,\n        accomplice2,\n        accomplice3,\n        accomplice4,\n        loginToken: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response }) => {\n        setResponse(response);\n        reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    const accomplice = navigation.state.params?.accomplice;\n    if (accomplice) {\n      submit(accomplice);\n    }\n  }, []);\n\n  const rank = getRank(me?.rank, \"number\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n      }}\n    >\n      <View style={{ maxWidth: 600, margin: 20 }}>\n        <T>{getText(\"accompliceInfo\")}</T>\n\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"accompliceLinkText\")}</T>\n          <TextInput\n            value={url}\n            onFocus={() => {\n              Clipboard.setString(url);\n              setResponse(getText(\"copiedToClipboard\"));\n            }}\n            style={style(theme).textInput}\n          />\n        </View>\n\n        <T bold>{getText(\"yourAccomplicesHeader\")}</T>\n        {me?.accomplices.length > 0 ? (\n          me?.accomplices.map((accomplice) => {\n            return keyValue(accomplice.name, getRank(accomplice.rank, \"both\"));\n          })\n        ) : (\n          <T>{getText(\"accomplicesNone\")}</T>\n        )}\n\n        <T bold style={{ marginTop: 15 }}>\n          {getText(\"accompliceWhoseYouWantToBe\")}\n        </T>\n        <T>{response}</T>\n\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={styles(theme).textInput}\n          value={accomplice1}\n          onChangeText={setAccomplice1}\n          placeholder={getText(\"accomplice\", 1)}\n        />\n\n        {rank >= 11 ? (\n          <TextInput\n            placeholderTextColor={theme.secondaryTextSoft}\n            style={styles(theme).textInput}\n            value={accomplice2}\n            onChangeText={setAccomplice2}\n            placeholder={getText(\"accomplice\", 2)}\n          />\n        ) : null}\n\n        {rank >= 16 ? (\n          <>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={styles(theme).textInput}\n              value={accomplice3}\n              onChangeText={setAccomplice3}\n              placeholder={getText(\"accomplice\", 3)}\n            />\n\n            <TextInput\n              style={styles(theme).textInput}\n              value={accomplice4}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={setAccomplice4}\n              placeholder={getText(\"accomplice\", 4)}\n            />\n          </>\n        ) : null}\n\n        <Button title={getText(\"save\")} onPress={submit} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Accomplice;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <T bold style={{ marginTop: 20 }}>\n                      {ip.ip}\n                    </T>\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Airport extends Component {\n  state = {\n    response: null,\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        style={{ borderRadius: 10, marginTop: 20 }}\n        title={getText(\"fly\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/airport`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: device.loginToken,\n              to,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      \"Paris\",\n      \"Barcelona\",\n      \"London\",\n      \"Berlin\",\n      \"Lisbon\",\n      \"Rome\",\n      \"Dublin\",\n      \"Madrid\",\n      \"Brussels\",\n      \"Bali\",\n      \"New York\",\n      \"San Fransisco\",\n      \"Amsterdam\",\n    ];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ to: options[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n    return (\n      <View>\n        <Button\n          title={this.state.to ? this.state.to : getText(\"chooseCity\")}\n          onPress={this.openActionSheet}\n        />\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Airport);\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"getCTA\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/income`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                captcha: this.state.captcha,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async (response) => {\n                this.setState({ response, captcha: \"\", random: Math.random() });\n                this.props.screenProps.reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"income\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n      </View>\n    );\n  };\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const incomeAt = me.incomeAt ? me.incomeAt : 0;\n    const uren = Math.round((Date.now() - incomeAt) / 3600000);\n    const uren2 = uren > 24 ? 24 : uren;\n    const amount = Math.round(\n      (me.junkies + me.hoeren + me.wiet) * 50 * Math.sqrt(uren2)\n    );\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.keyValue(getText(\"hours\"), getText(\"xHours\", uren2))}\n        {this.keyValue(getText(\"totalProfit\"), `${amount},-`)}\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Income;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bank from \"./Bank\";\nimport Donate from \"./Donate\";\nimport Income from \"./Income\";\nimport SwissBank from \"./SwissBank\";\nconst AllBanks = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const [tab, setTab] = useState(\"bank\");\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"menuBank\"),\n            isActive: tab === \"bank\",\n            onPress: () => setTab(\"bank\"),\n          },\n          {\n            title: getText(\"menuSwissBank\"),\n            isActive: tab === \"swissBank\",\n            onPress: () => setTab(\"swissBank\"),\n          },\n\n          {\n            title: getText(\"menuDonate\"),\n            isActive: tab === \"donate\",\n            onPress: () => setTab(\"donate\"),\n          },\n          {\n            title: getText(\"menuIncome\"),\n            isActive: tab === \"income\",\n            onPress: () => setTab(\"income\"),\n          },\n        ]}\n      />\n\n      {tab === \"bank\" && <Bank {...props} />}\n      {tab === \"swissBank\" && <SwissBank {...props} />}\n      {tab === \"donate\" && <Donate {...props} />}\n      {tab === \"income\" && <Income {...props} />}\n    </View>\n  );\n};\nexport default AllBanks;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Image, ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst Bomb = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bombs, setBombs] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"bomb\", {\n      loginToken: device.loginToken,\n      bombs,\n      type,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  const airplanes = [\n    \"\",\n    \"Fokker\",\n    \"Fleet\",\n    \"Havilland\",\n    \"Cessna\",\n    \"Douglas\",\n    \"Lear Jet\",\n    \"Raket\",\n  ];\n\n  const selectType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = Object.keys(typeStrings).map(\n      (type) =>\n        `${typeStrings[type]} (${city[`${type}Damage`]}% ${getText(\n          \"damage\"\n        )}, €${numberFormat(city[`${type}Profit`])} ${getText(\"profit\")})`\n    );\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex !== options.length - 1) {\n          setType(Object.keys(typeStrings)[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {\n        <>\n          <Image source={require(\"../../assets/bombarderen.jpg\")} />\n          <Text style={{ color: theme.primaryText }}>\n            {me?.airplane === 0\n              ? getText(\"bombNoAirplane\")\n              : getText(\n                  \"bombAirplaneText\",\n                  airplanes[me?.airplane],\n                  me?.airplane * 5\n                )}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <T style={{ marginTop: 15 }}>{getText(\"bombs\")}</T>\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bombs}\n            onChangeText={(x) => setBombs(x)}\n            style={style(theme).textInput}\n          />\n\n          <T style={{ marginVertical: 15 }}>{getText(\"property\")}</T>\n          <Button\n            onPress={selectType}\n            title={type ? typeStrings[type] : getText(\"whichProperty\")}\n          />\n\n          {type ? (\n            <T>\n              {getText(\n                \"bombInfo\",\n                typeStrings[type],\n                city[`${type}Damage`],\n                numberFormat(city[`${type}Profit`]),\n                city[`${type}Owner`] || `(Niemand)`\n              )}\n            </T>\n          ) : null}\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button\n            style={{ marginTop: 15 }}\n            title={getText(\"bombAction\")}\n            onPress={submit}\n          />\n        </>\n      }\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bomb;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Casino = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"casino\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.casinoOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.casinoOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"casinoInfo2\", city?.casinoProfit)}\n          </Text>\n\n          <Button\n            onPress={() => navigation.navigate(\"Poker\")}\n            title={getText(\"poker\")}\n          />\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.casinoOwner ? (\n                  <T>{city.casinoOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.casinoOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"casino\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.casinoProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Casino;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button onPress={changeName} title={getText(\"change\")} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst getText = getTextFunction();\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n        return false;\n      }\n      return true;\n    }\n    return true;\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as React from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\nconst maxWidth = isBigDevice ? 500 : width;\n\nconst IMAGE_SIZE = 40;\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      members: [],\n      isFetching: true,\n      chat: [],\n    };\n  }\n\n  componentDidMount() {\n    const {\n      navigation: {\n        state: { params },\n      },\n      screenProps: {\n        device: { loginToken },\n        reloadMe,\n      },\n    } = this.props;\n    this.fetchChat();\n\n    this.interval = setInterval(() => {\n      this.fetchChat();\n      console.log(\"setRead\");\n      post(\"setRead\", { loginToken, id: params?.subid });\n      reloadMe(loginToken);\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  fetchChat = async () => {\n    const {\n      screenProps: { device },\n      navigation: {\n        state: { params },\n      },\n    } = this.props;\n\n    const url = `channelmessage?loginToken=${device.loginToken}&id=${params.id}`;\n\n    console.log(url);\n    const response = await get(url);\n\n    if (response) {\n      this.setState({ chat: response.chat, isFetching: false });\n    }\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChat();\n    });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me },\n      navigation,\n    } = this.props;\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.name });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            flex: 1,\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{item.user?.name}</Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <Text>{item.message}</Text>\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  send = () => {\n    const {\n      screenProps: { device },\n      navigation: {\n        state: { params },\n      },\n    } = this.props;\n    const { image, message, hasEdited } = this.state;\n\n    this.setState({ message: \"\", image: null });\n\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.fetchChat();\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { image, message, hasEdited, response } = this.state;\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) =>\n              this.setState({\n                hasEdited: true,\n                image: base64,\n              })\n            }\n          />\n\n          <TextInput\n            multiline\n            // onSubmitEditing={this.send}\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={(message) => this.setState({ message })}\n          />\n\n          <TouchableOpacity onPress={this.send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const { chat } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        {Array.isArray(chat) ? (\n          <FlatList\n            contentContainerStyle={{\n              height: Platform.OS === \"web\" ? height - 250 : undefined,\n            }}\n            data={chat}\n            renderItem={this.renderItem}\n            keyExtractor={(item, index) => index.toString()}\n            refreshControl={\n              <RefreshControl\n                refreshing={this.state.isFetching}\n                onRefresh={this.onRefresh}\n              />\n            }\n            inverted\n            ref={(ref) => (this.flatList = ref)}\n          />\n        ) : (\n          <T>{chat?.response}</T>\n        )}\n        {this.renderFooter()}\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default ChatScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channelsubs: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChannelsubs();\n\n    this.interval = setInterval(() => this.fetchChannelsubs(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  fetchChannelsubs = () => {\n    const {\n      screenProps: { device },\n    } = this.props;\n    fetch(\n      `${Constants.SERVER_ADDR}/channelsubs?loginToken=${device.loginToken}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((channelsubs) => {\n        if (channelsubs.response) {\n          this.setState({ response: channelsubs.response });\n        } else {\n          this.setState({ channelsubs });\n        }\n        this.setState({ isFetching: false });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  openMenu = (id) => {\n    const { device } = this.props.screenProps;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"delete\")];\n\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"delete\", id);\n          await post(\"setDeleted\", { loginToken: device.loginToken, id: id });\n          this.fetchChannelsubs();\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  openGeneralMenu = () => {\n    const { device } = this.props.screenProps;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"deleteAllChats\")];\n\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"deleteAll\");\n          await post(\"deleteAll\", { loginToken: device.loginToken });\n          this.fetchChannelsubs();\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.name\n      : \"(Invalid chat)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          ?.thumbnail\n      : null;\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel?.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          {channelThumbnail ? (\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + channelThumbnail }}\n              style={{ width: 60, height: 60, borderRadius: 30 }}\n            />\n          ) : (\n            <View\n              style={{\n                width: 60,\n                height: 60,\n                borderRadius: 30,\n                backgroundColor: \"#CCC\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n            </View>\n          )}\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20, flex: 1 }}>\n            <T bold>\n              {/* name or other person in chat */}\n              {channelTitle}\n            </T>\n            {item.lastmessage ? (\n              <T numberOfLines={1}>{item.lastmessage}</T>\n            ) : null}\n          </View>\n\n          <View>\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\" }}\n              onPress={() => this.openMenu(item.id)}\n              hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n            >\n              <Entypo\n                style={{ marginLeft: 10 }}\n                name=\"dots-three-horizontal\"\n                size={20}\n                color={theme.primaryText}\n              />\n            </TouchableOpacity>\n            <T>\n              {moment(item.lastmessageDate).format(\n                moment(item.lastmessageDate).isAfter(moment().startOf(\"day\"))\n                  ? \"HH:mm\"\n                  : \"DD-MM-YYYY\"\n              )}\n            </T>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const { channelsubs } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          ListHeaderComponent={() => {\n            return (\n              <View\n                style={{\n                  justifyContent: \"flex-end\",\n                  marginRight: 20,\n                  marginTop: 20,\n                }}\n              >\n                <TouchableOpacity\n                  style={{ alignSelf: \"flex-end\" }}\n                  onPress={() => this.openGeneralMenu()}\n                  hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n                >\n                  <Entypo\n                    style={{ marginLeft: 10 }}\n                    name=\"dots-three-horizontal\"\n                    size={20}\n                    color={theme.primaryText}\n                  />\n                </TouchableOpacity>\n              </View>\n            );\n          }}\n          data={channelsubs}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default connectActionSheet(ChatScreen);\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    this.interval = setInterval(() => this.getChat(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce } from \"../Util\";\nconst Code = ({ screenProps: { me, device, dispatch } }) => {\n  //  When opening the site on web  on /Case or /Code or /StealCar on an unverified account, open modal\n  doOnce(() => {\n    if (!me?.phoneVerified) {\n      dispatch({ type: \"SET_LOGGED\", value: false });\n    }\n  });\n\n  return (\n    <View>\n      <T>HEY GEK</T>\n    </View>\n  );\n};\n\nexport default Code;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  Image,\n  Linking,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nfunction Footer({ navigation, screenProps: { me } }) {\n  const getText = getTextFunction(me?.locale);\n\n  const theme = useSelector((state) => state.device.theme);\n  const [text, setText] = useState(\"\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmastercrimez.com%2F#%2FAccomplice%2F?accomplice=${me?.name}`;\n\n  const copy = () => {\n    Clipboard.setString(url);\n    setText(\"Gekopiëerd naar klembord\");\n  };\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 10 }}>\n        <T bold>{getText(\"footerInviteFriends\")}</T>\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"footerInviteText\")}</T>\n          <View style={{ flexDirection: \"row\" }}>\n            <TextInput\n              value={url}\n              style={{\n                color: theme.secondaryText,\n                backgroundColor: theme.secondary,\n                height: 35,\n                borderRadius: 10,\n                paddingHorizontal: 10,\n                width: 200,\n              }}\n              onFocus={copy}\n            />\n            <Button title={getText(\"footerCopy\")} onPress={copy} />\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <T>{getText(\"footerShare\")}</T>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(facebookShareUrl);\n              }}\n            >\n              <View\n                style={{\n                  marginLeft: 20,\n                  backgroundColor: \"#3b5998\",\n                  width: 40,\n                  height: 40,\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n              </View>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(\n                  `whatsapp://send?text=${getText(\"footerWhatsappText\", url)}`\n                );\n              }}\n            >\n              <Image\n                source={require(\"../../assets/whatsapp.png\")}\n                style={{ width: 55, height: 55 }}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"footerFollowUs\")}</T>\n        <TouchableOpacity\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.facebook.com/Mastercrimez-100872595072798\"\n            );\n          }}\n        >\n          <View\n            style={{\n              marginLeft: 20,\n              backgroundColor: \"#3b5998\",\n              width: 40,\n              height: 40,\n              borderRadius: 20,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\"https://www.instagram.com/mastercrimez.nl/\");\n          }}\n        >\n          <Image\n            source={require(\"../../assets/instagram.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://open.spotify.com/playlist/5n5j78gTXOM9h2SOdz0Ay5?si=9gBkeObkTXaqFZxHLFutIA\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/spotify.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.youtube.com/channel/UCGqGRq-iNxXdLrMx9AlD7qw\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/youtube.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={{ height: 20 }} />\n\n      <Text style={{ color: theme.primaryText }}>\n        &copy; MasterCrimeZ 2006-{new Date().getFullYear()}\n      </Text>\n    </View>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","const { Platform, Linking, View, Text } = require(\"react-native\");\nimport React from \"react\";\nimport Constants from \"../Constants\";\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nconst DownloadApp = () => {\n  if (getMobileOperatingSystem() === \"android\") {\n    console.log(\"is android\");\n    window.location.replace(Constants.ANDROID_APP_URL);\n  }\n\n  if (getMobileOperatingSystem() === \"ios\") {\n    console.log(\"is ios\");\n    window.location.replace(Constants.IOS_APP_URL);\n  }\n\n  console.log(getMobileOperatingSystem());\n\n  return (\n    <View>\n      <Text>Download the app!</Text>\n    </View>\n  );\n};\nexport default DownloadApp;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n        <TextInput\n          multiline\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          numberOfLines={4}\n          style={{ ...style(device.theme).textInput, height: 150 }}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n                <T>{response.message}</T>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={style(device.theme).textInput}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            placeholder={getText(\"react\")}\n            value={this.state.message}\n            onChangeText={(message) => this.setState({ message })}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport { getLocale, getUserColor } from \"../Util\";\nimport T from \"./T\";\n\nconst User = ({ user, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const color = getUserColor(user, theme);\n  const isOnline = (Date.now() - user.onlineAt) / 60000 < 5;\n\n  const extraIcon =\n    user.level === 2\n      ? \"💼\"\n      : user.level === 3\n      ? \"🕶\"\n      : user.level === 10\n      ? \"🤓\"\n      : null;\n\n  const country = getLocale(user.locale) === \"nl\" ? \"🇳🇱\" : \"🌍\";\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Profile\", { name: user.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {user.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + user.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n        <View style={{ position: \"absolute\", top: 0, right: 0 }}>\n          <T>{isOnline ? \"✅\" : \"🛑\"}</T>\n        </View>\n\n        {extraIcon && (\n          <View style={{ position: \"absolute\", bottom: 0, right: 0 }}>\n            <T>{extraIcon}</T>\n          </View>\n        )}\n\n        {user.gang && user.gang.thumbnail && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: -0.1 * size,\n              left: -0.1 * size,\n            }}\n          >\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + user.gang.thumbnail }}\n              style={{\n                width: size / 2,\n                height: size / 2,\n                borderRadius: size / 4,\n              }}\n            />\n          </View>\n        )}\n\n        <View style={{ position: \"absolute\", bottom: 0, left: 0 }}>\n          <T>{country}</T>\n        </View>\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T style={{ color }}>{user.name}</T>\n        {user.gang && <T>{user.gang.name}</T>}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default User;\n","import React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Image,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getTextFunction,\n  getUserColor,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const [response, setResponse] = useState(null);\n\n  const name = navigation.state.params?.name;\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${name}`);\n    setLoading(false);\n    setItem(gang);\n  };\n\n  const postGangJoin = async () => {\n    setLoading(true);\n\n    const { response } = await post(`gangJoin`, {\n      token: device.loginToken,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getGang);\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      <FlatList\n        ListHeaderComponent={() => {\n          return (\n            <View\n              style={{ margin: MARGIN, flexDirection: \"row\", flexWrap: \"wrap\" }}\n            >\n              <View>\n                {item.image ? (\n                  <Image\n                    source={{ uri: Constants.SERVER_ADDR + item.image }}\n                    style={{ width: SIZE, height: SIZE }}\n                    resizeMode=\"cover\"\n                  />\n                ) : (\n                  <Image\n                    source={require(\"../../assets/icon.png\")}\n                    style={{ width: SIZE, height: SIZE }}\n                  />\n                )}\n              </View>\n              <View style={{ margin: MARGIN }}>\n                {loading ? <ActivityIndicator /> : null}\n                <T>\n                  {getText(\"name\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"members\")}: {item.members}\n                </T>\n                <T>\n                  {getText(\"bank\")}: €{numberFormat(item.bank)},-\n                </T>\n                <T>\n                  {getText(\"power\")}: {item.score}\n                </T>\n                {!me?.gang &&\n                  (response ? (\n                    <T>{response}</T>\n                  ) : (\n                    <Button\n                      onPress={postGangJoin}\n                      title={getText(\"gangJoinCTA\")}\n                      theme={theme}\n                    />\n                  ))}\n              </View>\n            </View>\n          );\n        }}\n        data={item.users}\n        keyExtractor={(item, index) => `item${index}`}\n        renderItem={({ item, index }) => {\n          const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n\n          const color = getUserColor(item, theme);\n\n          return (\n            <Grid\n              key={`item${index}`}\n              style={{\n                paddingHorizontal: 20,\n              }}\n            >\n              <Col style={{ marginVertical: 5 }}>\n                <User navigation={navigation} user={item} />\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>{getGangLevel(item.gangLevel)}</T>\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>❤️ {item.health}%</T>\n              </Col>\n            </Grid>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst GangAchievements = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n\n  const getGangAchievements = async () => {\n    setLoading(true);\n    const result = await get(`gangAchievements?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangAchievements);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>\n              {getText(\"power\")}: {result.power}\n            </H1>\n          </View>\n          {result.achievements &&\n            Object.keys(result.achievements).map((key) => {\n              const stats = result.achievements[key];\n\n              return (\n                <View style={{ marginBottom: 20 }}>\n                  <T bold>{getText(key)}</T>\n                  <T>\n                    {getText(\"current\")}: {stats.current}\n                  </T>\n                  <T>\n                    {getText(\"level\")}: {stats.level}\n                  </T>\n                  <T>\n                    {getText(\"next\")}:{\" \"}\n                    {stats.next ? stats.next : getText(\"maximumLevel\")}\n                  </T>\n                </View>\n              );\n            })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangAchievements;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  const postGangCreate = async () => {\n    const { response } = await post(\"gangCreate\", {\n      name,\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <TextInput\n        value={name}\n        onChangeText={setName}\n        style={style(theme).textInput}\n        placeholder=\"Name\"\n        placeholderTextColor={theme.secondaryTextSoft}\n      />\n      <Button\n        onPress={postGangCreate}\n        title={getText(\"gangCreateCTA\")}\n        theme={theme}\n      />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 100;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [gangs, setGangs] = useState([]);\n  const [invites, setInvites] = useState([]);\n\n  const getGangs = async () => {\n    setLoading(true);\n    const { gangs } = await get(\"gangs\");\n    setLoading(false);\n    setGangs(gangs);\n  };\n\n  const getInvites = async () => {\n    const { requests, invites } = await get(\n      `gangInvites?token=${device.loginToken}`\n    );\n    setInvites(invites);\n  };\n\n  const postGangAnswerInvite = async (id, accepted) => {\n    const { response } = await post(\"gangAnswerInvite\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setResponse(response);\n  };\n\n  doOnce(getGangs);\n  doOnce(getInvites);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      {invites.length > 0 &&\n        invites.map((invite, index) => {\n          return (\n            <View key={`invite${index}`} style={{ flexDirection: \"row\" }}>\n              <T>{getText(\"gangInvitedTo\", invite.gangName)}</T>\n              <Button\n                title={getText(\"accept\")}\n                onPress={() => postGangAnswerInvite(invite.id, true)}\n              />\n              <Button\n                title={getText(\"decline\")}\n                onPress={() => postGangAnswerInvite(invite.id, false)}\n              />\n            </View>\n          );\n        })}\n\n      <FlatList\n        refreshing={loading}\n        onRefresh={getGangs}\n        data={gangs}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n            : undefined\n        }\n        keyExtractor={(item, index) => `gang${index}`}\n        renderItem={({ item, index }) => {\n          const navigate = () =>\n            navigation.navigate(\"Gang\", { name: item.name });\n          return (\n            <TouchableOpacity onPress={navigate} style={{ margin: MARGIN }}>\n              {item.thumbnail ? (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + item.thumbnail }}\n                  style={{ width: SIZE, height: SIZE }}\n                  resizeMode=\"cover\"\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              )}\n              <T>\n                {getText(\"name\")}: {item.name}\n              </T>\n              <T>\n                {getText(\"members\")}: {item.members}\n              </T>\n              <T>\n                {getText(\"bank\")}: €{numberFormat(item.bank)},-\n              </T>\n              <T>\n                {getText(\"power\")}: {item.score}\n              </T>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  LayoutAnimation,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { lighterHex } from \"../Util\";\nimport T from \"./T\";\n\nUIManager.setLayoutAnimationEnabledExperimental &&\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n\nconst storeData = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (e) {\n    // saving error\n  }\n};\n\nconst getData = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    if (value !== null) {\n      return value;\n      // value previously stored\n    } else {\n      return undefined;\n    }\n  } catch (e) {\n    // error reading value\n    return undefined;\n  }\n};\n\nconst Content = ({ id, title, children, contentWidth }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const [expanded, setExpanded] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const isExpanded = await getData(`@content=${id}`);\n      if (isExpanded !== undefined) {\n        setExpanded(isExpanded === \"true\");\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <View\n      style={{\n        backgroundColor: lighterHex(theme.primary),\n        margin: 20,\n        padding: 20,\n        borderRadius: 20,\n        width:\n          typeof contentWidth === \"string\"\n            ? contentWidth\n            : contentWidth + 20 * 4,\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          LayoutAnimation.linear();\n          setExpanded(!expanded);\n          storeData(`@content=${id}`, String(!expanded));\n        }}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <T bold>{title}</T>\n        <AntDesign\n          name={expanded ? \"caretup\" : \"caretdown\"}\n          color={theme.primaryText}\n        />\n      </TouchableOpacity>\n\n      <View\n        onLayout={(event) => {\n          var { x, y, width, height } = event.nativeEvent.layout;\n          // setHeight(height);\n          // setWidth(width);\n        }}\n      >\n        {expanded && !loading && children}\n      </View>\n    </View>\n  );\n};\n\nexport default Content;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangSettings = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [gang, setGang] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [gangName, setGangName] = useState(\"\");\n  const [profile, setProfile] = useState(me?.gang?.profile || \"\");\n  const [name, setName] = useState(me?.gang?.name || \"\");\n  const [image, setImage] = useState(me?.gang?.image || \"\");\n  const [isBullets, setIsBullets] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const alertAlert = React.useContext(AlertContext);\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${me?.gang?.name}`);\n    setLoading(false);\n    setGang(gang);\n  };\n\n  const getGangInvites = async () => {\n    setLoading(true);\n    const { requests } = await get(`gangInvites?token=${device.loginToken}`);\n    setLoading(false);\n    setRequests(requests);\n  };\n\n  const postGangAnswerJoin = async (id, accepted) => {\n    setLoading(true);\n    const { response } = await post(\"gangAnswerJoin\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangUpdate = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangUpdate\", {\n      token: device.loginToken,\n      profile,\n      image,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangInvite = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangInvite\", {\n      token: device.loginToken,\n      name: username,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangTransaction = async (isToUser) => {\n    setLoading(true);\n    const { response } = await post(\"gangTransaction\", {\n      token: device.loginToken,\n      amount,\n      isToUser,\n      isBullets,\n    });\n    reloadMe(device.loginToken);\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangLeave = async () => {\n    if (gangName !== me?.gang?.name) {\n      alert(getText(\"pleaseFillInGangName\"));\n      return;\n    }\n\n    setLoading(true);\n    const { response } = await post(\"gangLeave\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangKick = async (userId) => {\n    setLoading(true);\n    const { response } = await post(\"gangKick\", {\n      token: device.loginToken,\n      userId,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const postGangRemove = async () => {\n    if (gangName !== me?.gang?.name) {\n      alert(getText(\"pleaseFillInGangName\"));\n      return;\n    }\n\n    setLoading(true);\n    const { response } = await post(\"gangRemove\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangSetRank = async (userId, rank) => {\n    setLoading(true);\n    const { response } = await post(\"gangSetRank\", {\n      token: device.loginToken,\n      userId,\n      rank,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getGang();\n  };\n\n  doOnce(getGangInvites);\n  doOnce(getGang);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n      }\n    }\n  };\n  const handleChoosePhoto = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"yourStatus\")}\n              contentWidth={250}\n              id=\"settingsYourStatus\"\n            >\n              <T>{getText(\"youAreWhat\", getGangLevel(me?.gangLevel))}</T>\n            </Content>\n\n            {/* Answer join */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"gangJoinRequestsTitle\")}\n                contentWidth={250}\n                id=\"settingsAnswerJoin\"\n              >\n                {requests.length > 0 ? (\n                  requests.map((request) => {\n                    return (\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{request.user?.name}</T>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Button\n                            title={getText(\"accept\")}\n                            onPress={() => postGangAnswerJoin(request.id, true)}\n                          />\n                          <Button\n                            title={getText(\"decline\")}\n                            onPress={() =>\n                              postGangAnswerJoin(request.id, false)\n                            }\n                          />\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{getText(\"noJoinRequests\")}</T>\n                )}\n              </Content>\n            ) : null}\n\n            {/* Invite */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"invitePeople\")}\n                contentWidth={250}\n                id=\"settingsInvite\"\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={username}\n                    onChangeText={setUsername}\n                    placeholder={getText(\"name\")}\n                  />\n                  <Button\n                    title={getText(\"invite\")}\n                    onPress={postGangInvite}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </Content>\n            ) : null}\n\n            {/* Transactions */}\n            {me?.gangLevel === GANG_LEVEL_BANK ||\n            me?.gangLevel === GANG_LEVEL_BOSS ? (\n              <Content\n                title={getText(\"gangBank\")}\n                contentWidth={250}\n                id=\"settingsTransactions\"\n              >\n                <T>\n                  {getText(\"bankMoney\")}: €{numberFormat(me?.gang?.bank || 0)},-\n                </T>\n                <T>\n                  {getText(\"bullets\")}: {numberFormat(me?.gang?.bullets || 0)}\n                </T>\n                <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={amount}\n                    onChangeText={setAmount}\n                    placeholder={getText(\"amount\")}\n                  />\n\n                  <Button\n                    title={isBullets ? getText(\"bullets\") : getText(\"bank\")}\n                    onPress={() => setIsBullets(!isBullets)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n\n                  <Button\n                    title={getText(\"in\")}\n                    onPress={() => postGangTransaction(false)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                  <Button\n                    title={getText(\"out\")}\n                    onPress={() => postGangTransaction(true)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </Content>\n            ) : null}\n\n            {/* memberview with kick or change rank, per member */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"members\")}\n                contentWidth=\"90%\"\n                id=\"memberViewSettings\"\n              >\n                {gang?.users?.map((member) => {\n                  return (\n                    <Grid>\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{member.name}</T>\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{getGangLevel(member.gangLevel)}</T>\n                      </Col>\n\n                      <Col\n                        style={{\n                          justifyContent: \"center\",\n                          alignItems: \"flex-end\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          {me?.gangLevel >= GANG_LEVEL_UNDERBOSS &&\n                            member.id !== me?.id && (\n                              <Button\n                                title={getText(\"kick\")}\n                                onPress={() => postGangKick(member.id)}\n                              />\n                            )}\n                          {me?.gangLevel === GANG_LEVEL_BOSS && (\n                            <Button\n                              title={getText(\"changeRank\")}\n                              style={{ marginLeft: 10 }}\n                              onPress={() => changeRank(member.id)}\n                            />\n                          )}\n                        </View>\n                      </Col>\n                    </Grid>\n                  );\n                })}\n              </Content>\n            )}\n            {/* update name,profile,image */}\n\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"gangProfile\")}\n                contentWidth=\"90%\"\n                id=\"updateProfileSettings\"\n              >\n                <TouchableOpacity onPress={handleChoosePhoto}>\n                  {image ? (\n                    <Image\n                      source={{\n                        uri: image.includes(\"data:image\")\n                          ? image\n                          : Constants.SERVER_ADDR + image,\n                      }}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  ) : (\n                    <Image\n                      source={require(\"../../assets/icon.png\")}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  )}\n                </TouchableOpacity>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={styles(theme).textInput}\n                  value={name}\n                  onChangeText={setName}\n                  placeholder={getText(\"gangName\")}\n                />\n\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={profile}\n                  onChangeText={setProfile}\n                />\n                <Button\n                  onPress={postGangUpdate}\n                  title={getText(\"save\")}\n                  style={{ marginTop: 10 }}\n                />\n              </Content>\n            )}\n            {/* transactions */}\n\n            {/* Leave */}\n            <View style={{ marginVertical: 20 }}>\n              {\n                <Button\n                  title={getText(\"leaveGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"leaveGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangLeave },\n                        { text: getText(\"cancel\") },\n                      ]\n                    )\n                  }\n                />\n              }\n            </View>\n\n            {/* Gang delete */}\n            <View style={{ marginVertical: 20 }}>\n              {me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Button\n                  title={getText(\"removeGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"removeGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangRemove },\n                        { text: getText(\"cancel\") },\n                      ]\n                    )\n                  }\n                />\n              )}\n            </View>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangSettings;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\nconst MARGIN = 20;\nconst { width, height } = Dimensions.get(\"window\");\nconst SIZE = width < 1000 ? 100 : 200;\nconst GangShop = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const prices = [\n    null,\n    50000,\n    100000,\n    200000,\n    500000,\n    1000000,\n    1500000,\n    2000000,\n    3000000,\n    4000000,\n    5000000,\n    10000000,\n    20000000,\n  ];\n\n  const items = [\n    {\n      name: getText(\"gangShopItem1\"),\n      price: prices[1],\n      current: me?.gang?.item1,\n      image: require(\"../../assets/gangshop/item1.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem2\"),\n      price: prices[2],\n      current: me?.gang?.item2,\n      image: require(\"../../assets/gangshop/item2.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem3\"),\n      price: prices[3],\n      current: me?.gang?.item3,\n      image: require(\"../../assets/gangshop/item3.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem4\"),\n      price: prices[4],\n      current: me?.gang?.item4,\n      image: require(\"../../assets/gangshop/item4.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem5\"),\n      price: prices[5],\n      current: me?.gang?.item5,\n      image: require(\"../../assets/gangshop/item5.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem6\"),\n      price: prices[6],\n      current: me?.gang?.item6,\n      image: require(\"../../assets/gangshop/item6.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem7\"),\n      price: prices[7],\n      current: me?.gang?.item7,\n      image: require(\"../../assets/gangshop/item7.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem8\"),\n      price: prices[8],\n      current: me?.gang?.item8,\n      image: require(\"../../assets/gangshop/item8.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem9\"),\n      price: prices[9],\n      current: me?.gang?.item9,\n      image: require(\"../../assets/gangshop/item9.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem10\"),\n      price: prices[10],\n      current: me?.gang?.item10,\n      image: require(\"../../assets/gangshop/item10.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem11\"),\n      price: prices[11],\n      current: me?.gang?.item11,\n      image: require(\"../../assets/gangshop/item11.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem12\"),\n      price: prices[12],\n      current: me?.gang?.item12,\n      image: require(\"../../assets/gangshop/item12.jpg\"),\n    },\n  ];\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const postGangShop = async (itemId) => {\n    setLoading(true);\n    const { response } = await post(\"gangShop\", {\n      itemId,\n      amount: amount[itemId],\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    setLoading(false);\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <T>\n        {getText(\"gangBank\")}: €{numberFormat(me?.gang?.bank || 0)},-\n      </T>\n      <T>\n        {getText(\"power\")}: {me?.gang?.power}\n      </T>\n      <FlatList\n        refreshing={loading}\n        onRefresh={() => reloadMe(device.loginToken)}\n        data={items}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\", height: height - 200 }\n            : undefined\n        }\n        keyExtractor={(item, index) => `shop${index}`}\n        renderItem={({ item, index }) => {\n          return (\n            <View style={{ margin: MARGIN }}>\n              <Image\n                source={item.image}\n                style={{ width: SIZE, height: SIZE }}\n                resizeMode=\"contain\"\n              />\n              <T>{item.name}</T>\n              <T>€{item.price},-</T>\n              <T>\n                {getText(\"inPossession\")}: {item.current}\n              </T>\n              <View style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[styles(theme).textInput, { width: 100 }]}\n                  value={amount[index + 1] || \"\"}\n                  onChangeText={(v) => setAmount({ ...amount, [index + 1]: v })}\n                  placeholder={getText(\"amount\")}\n                />\n                <Button\n                  style={{ marginVertical: 10, marginLeft: 10 }}\n                  title={getText(\"buy\")}\n                  onPress={() => postGangShop(index + 1)}\n                />\n              </View>\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default GangShop;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      this.fetchGroups();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* Show all people with isHacker set to true */}\n      <Image\n        source={require(\"../../assets/hacker.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"hackersInfo\")}</T>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { Image, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"RLD\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.rldOwner ? (\n                    <T>{city.rldOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.rldOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"rld\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city.rldProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const number = Math.ceil(Math.random() * 60);\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Image\n                style={{ width: 100, height: 100 }}\n                source={{\n                  uri:\n                    Constants.SERVER_ADDR + \"/images/female/\" + number + \".gif\",\n                }}\n              />\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { Component } from \"react\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  NativeModules,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport T from \"../components/T\";\nimport { leftMenu, rightMenu } from \"../Menus\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst itemWidth = width / 4 > 100 ? 100 : width / 4;\nconst isSmallDevice = width < 800;\n\nconst amountOfItems = Math.floor((height - 200) / itemWidth) * 4;\n\nclass Home extends Component {\n  state = {\n    response: null,\n    activeSlide: 0,\n    notificationsHeader: false,\n  };\n\n  componentDidMount() {\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n\n    this.turnOnNotifications();\n    this.sendLanguage();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      this.turnOnNotifications();\n      this.sendLanguage();\n    }\n  };\n\n  sendLanguage = () => {\n    const { device, me } = this.props.screenProps;\n\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  turnOnNotifications = async () => {\n    const { device, me } = this.props.screenProps;\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        this.setState({ notificationsHeader: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      this.setState({ notificationsHeader: false });\n    }\n  };\n\n  _renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginVertical: 15,\n        }}\n      >\n        {item.map((menu, index) => {\n          const TheIcon = Icon[menu.iconType];\n          return (\n            <View\n              key={`i${index}`}\n              style={{ width: itemWidth, alignItems: \"center\" }}\n            >\n              <TouchableOpacity\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"#000\",\n                  backgroundColor: theme.secondary,\n                  borderRadius: 10,\n                  width: itemWidth - 25,\n                  height: itemWidth - 25,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={(e) => {\n                  navigation.navigate(menu.to);\n\n                  const movement = {\n                    action: \"App_Menu_\" + menu.to,\n                    locationX: e.nativeEvent.locationX,\n                    locationY: e.nativeEvent.locationY,\n                    timestamp: Date.now(),\n                  };\n\n                  dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n                }}\n              >\n                {TheIcon && (\n                  <TheIcon\n                    name={menu.icon}\n                    size={(itemWidth - 25) / 2}\n                    color={theme.secondaryText}\n                  />\n                )}\n              </TouchableOpacity>\n              <View>\n                <Text style={{ color: theme.primaryText }}>{menu.text}</Text>\n                {menu.component}\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCarousel() {\n    const {\n      screenProps: { dispatch, me, device },\n    } = this.props;\n\n    const { notificationsHeader } = this.state;\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    const getText = getTextFunction(me?.locale);\n\n    const data = [\n      filtered.slice(0, amountOfItems),\n      filtered.slice(amountOfItems, amountOfItems * 2),\n      amountOfItems * 2 > filtered.length\n        ? undefined\n        : filtered.slice(amountOfItems * 2, filtered.length),\n    ].filter((x) => !!x);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {notificationsHeader && (\n          <TouchableOpacity\n            onPress={() => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            }}\n          >\n            <View\n              style={{\n                padding: 5,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"exclamationcircleo\"\n                color=\"red\"\n                style={{ marginRight: 10 }}\n              />\n              <T>{getText(\"turnOnNotificationsText\")}</T>\n            </View>\n          </TouchableOpacity>\n        )}\n\n        <Carousel\n          ref={(c) => {\n            this._carousel = c;\n          }}\n          data={data}\n          renderItem={this._renderItem}\n          sliderWidth={width}\n          onSnapToItem={(index) => this.setState({ activeSlide: index })}\n          itemWidth={width}\n        />\n\n        <Pagination\n          dotsLength={data.length}\n          activeDotIndex={this.state.activeSlide}\n          // containerStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.75)\" }}\n          dotStyle={{\n            width: 10,\n            height: 10,\n            borderRadius: 5,\n            marginHorizontal: 8,\n            backgroundColor: \"rgba(255, 255, 255, 0.92)\",\n          }}\n          inactiveDotStyle={\n            {\n              // Define styles for inactive dots here\n            }\n          }\n          inactiveDotOpacity={0.4}\n          inactiveDotScale={0.6}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      device,\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    if (Platform.OS === \"web\") {\n      if (isSmallDevice) {\n        return <ScrollView>{this._renderItem({ item: filtered })}</ScrollView>;\n      } else {\n        return <T>{getText(\"welcomeBack\")}</T>;\n      }\n    }\n    return this.renderCarousel();\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"prizes\")}\n          to=\"Prizes\"\n          IconFont=\"AntDesign\"\n          icon=\"star\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 1.000.000 kogels kosten Hoe dit wordt berekend, is\n        geheim, maar het ligt aan deze factoren: Voor de aanvaller: Het wapen,\n        de moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels\n        je nodig zult hebben. Voor de verdediger: De verdediging, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe meer kogels de\n        aanvaller nodig zal hebben. De rang heeft de meeste invloed, daarna het\n        wapen, de verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Huisjesmelkers, Leger des Heils en het Red Light District krijgen 20%\n        van iedereens inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n    this.props.screenProps.reloadCities();\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n                this.fetchMembers();\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, reloadCities, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"jail\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n            marginHorizontal: 15,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"jail\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                paddingHorizontal: 15,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.jailOwner ? (\n                    <Text style={{ color: theme.primaryText }}>\n                      {city.jailOwner}\n                    </Text>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.jailOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"jail\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <Text style={{ color: theme.primaryText }}>\n                  {city.jailProfit}\n                </Text>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListFooterComponent={this.renderCities}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"junkiesObject\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.junkiesOwner ? (\n                    <T>{city.junkiesOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.junkiesOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"junkies\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <View>\n                  <T>{city.junkiesProfit}</T>\n                </View>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import * as Updates from \"expo-updates\";\nimport React from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.loginToken });\n\n          if (Platform.OS === \"web\") {\n            location.reload();\n          } else {\n            Updates.reloadAsync();\n          }\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = typeStrings[type];\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\nconst { height, width } = Dimensions.get(\"window\");\n\nconst SIZE = 100;\nconst MARGIN = 20;\n\nconst Market = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [market, setMarket] = useState([]);\n\n  //new offer\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [buy, setBuy] = useState(false);\n  const [type, setType] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getMarket = async () => {\n    setLoading(true);\n\n    const { market } = await get(`market`);\n    setLoading(false);\n    setMarket(market);\n  };\n\n  const postMarketCreateOffer = async () => {\n    setLoading(true);\n    const { response } = await post(\"marketCreateOffer\", {\n      token: device.loginToken,\n      type,\n      price,\n      amount,\n      buy,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getMarket);\n\n  const chooseType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const validTypes = [\"junkies\", \"hoeren\", \"wiet\", \"gamepoints\", \"bullets\"];\n\n    const options = validTypes.map((type) => getText(type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < validTypes.length - 1) {\n          setType(validTypes[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n\n      <View>\n        {/* New offer */}\n\n        <View style={{ marginVertical: 20 }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Button\n              title={buy ? getText(\"buy\") : getText(\"sell\")}\n              onPress={() => setBuy(!buy)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={amount}\n              onChangeText={setAmount}\n              placeholder={getText(\"amount\")}\n            />\n\n            <Button\n              title={type ? getText(type) : getText(\"whatType\")}\n              onPress={chooseType}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <T style={{ marginLeft: 10 }}>{getText(\"for\")}</T>\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={price}\n              onChangeText={setPrice}\n              placeholder={getText(\"price\")}\n            />\n\n            <Button\n              title={getText(\"submit\")}\n              onPress={() => postMarketCreateOffer(true)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n          </View>\n        </View>\n\n        <FlatList\n          data={market}\n          numColumns={\n            Platform.OS === \"web\"\n              ? undefined\n              : Math.floor(width / (SIZE + MARGIN * 2))\n          }\n          contentContainerStyle={\n            Platform.OS === \"web\"\n              ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n              : undefined\n          }\n          keyExtractor={(item, index) => `offer${index}`}\n          renderItem={({ item, index }) => {\n            return (\n              <View\n                style={{\n                  width: SIZE,\n                }}\n              >\n                <View style={{ flex: 1 }}>\n                  <T>{item.buy ? getText(\"requested\") : getText(\"forSale\")}</T>\n                </View>\n\n                <T>\n                  {item.amount} {getText(item.type)}\n                </T>\n                <T>€{numberFormat(item.price)},-</T>\n              </View>\n            );\n          }}\n        />\n\n        <View style={{ height: 80 }} />\n      </View>\n    </View>\n  );\n};\n\nexport default Market;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Dimensions, FlatList, Platform, TextInput, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\nclass Members extends Component {\n  constructor(props) {\n    super(props);\n\n    const getText = getTextFunction(props.screenProps.me?.locale);\n    this.state = {\n      members: [],\n      search: null,\n      orderBy: {\n        key: \"onlineAt\",\n        title: getText(\"online\"),\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { device } = this.props.screenProps;\n\n    this.fetchMembers(this.state.orderBy.key);\n\n    const order = this.props.navigation.state.params?.order;\n    if (order) {\n      this.setState({ orderBy: orders[order] });\n      this.fetchMembers(orders[order].key);\n    }\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        this.setState({ members });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const { navigation } = this.props;\n\n    const orderKey = this.state.orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n          paddingVertical: 10,\n        }}\n      >\n        <User navigation={navigation} user={item} />\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  openActionSheet = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          this.setState({ orderBy: orders[buttonIndex] });\n          this.fetchMembers(orders[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  renderHeader = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const { members, search } = this.state;\n\n    return (\n      <View\n        style={{ backgroundColor: this.props.screenProps.device.theme.primary }}\n      >\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"sort\")}\n          onPress={() => this.openActionSheet()}\n          icon=\"filter\"\n          font=\"FontAwesome\"\n          style={{ marginTop: 20, marginHorizontal: 10 }}\n        />\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: this.props.screenProps.device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={\n              this.props.screenProps.device.theme.secondaryTextSoft\n            }\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: this.props.screenProps.device.theme.secondaryText,\n            }}\n            onChangeText={(search) => this.setState({ search })}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={this.props.screenProps.device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: this.props.screenProps.device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{this.state.orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { members, search } = this.state;\n\n    const searchedMembers = members.filter((m) =>\n      search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n    );\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? 0 : undefined,\n          }}\n          ItemSeparatorComponent={() => <Separator />}\n          ListHeaderComponent={this.renderHeader}\n          data={searchedMembers}\n          renderItem={this.renderItem}\n          ListFooterComponent={this.renderFooter}\n        />\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Members);\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction } from \"../Util\";\nconst properties = [\n  {\n    name: \"bulletFactory\",\n  },\n  {\n    name: \"casino\",\n  },\n  {\n    name: \"rld\",\n  },\n  {\n    name: \"landlord\",\n  },\n  {\n    name: \"junkies\",\n  },\n  {\n    name: \"weaponShop\",\n  },\n  {\n    name: \"airport\",\n  },\n  {\n    name: \"estateAgent\",\n  },\n  {\n    name: \"garage\",\n  },\n  {\n    name: \"jail\",\n  },\n  {\n    name: \"bank\",\n  },\n];\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadCities,\n    reloadMe,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = typeStrings[property];\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  <Button\n                    key={`index${index}${property}`}\n                    style={{ marginVertical: 15 }}\n                    theme={theme}\n                    title={getText(\"manage\")}\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: property,\n                        city: city.city,\n                      })\n                    }\n                  />\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default MyObjects;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst MyProfile = ({\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n    reloadMe,\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [photo, setPhoto] = useState(null);\n  const [image, setImage] = useState(me?.image);\n\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [bio, setBio] = useState(me?.bio || \"\");\n\n  doOnce(() => {\n    getPermissionAsync();\n    fetchImages();\n  });\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${me.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleChooseImage = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleUploadPhoto = (pic) => {\n    fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: pic.uri,\n        token: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        fetchImages();\n        alert(getText(\"success\"));\n        setPhoto(null);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      console.log(\"result\", result);\n\n      if (!result.cancelled) {\n        setPhoto(result);\n        handleUploadPhoto(result);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderItem = ({ item, index }) => {\n    const uri = Constants.SERVER_ADDR + \"/\" + item.image;\n    return (\n      <TouchableOpacity onPress={() => setSelectedImage(item.id)}>\n        <View>\n          <Image\n            source={{ uri }}\n            style={{\n              width: 200,\n              height: 200,\n              ...(selectedImage === item.id\n                ? { borderWidth: 2, borderColor: \"black\" }\n                : {}),\n            }}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderFooter = () => {\n    return (\n      <Button\n        title={getText(\"delete\")}\n        onPress={() => {\n          if (selectedImage) {\n            fetch(`${Constants.SERVER_ADDR}/deleteimage`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                id: selectedImage,\n              }),\n            })\n              .then((response) => response.json())\n              .then(({ images }) => {\n                fetchImages();\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } else {\n            alert(getText(\"noPictureSelected\"));\n          }\n        }}\n      />\n    );\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: 20,\n      }}\n    >\n      <TouchableOpacity onPress={handleChooseImage}>\n        {image ? (\n          <Image\n            source={{\n              uri: image.includes(\"data:image\")\n                ? image\n                : Constants.SERVER_ADDR + image,\n            }}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        )}\n      </TouchableOpacity>\n\n      <TextInput\n        placeholderTextColor={theme.secondaryTextSoft}\n        style={[style(theme).textInput, { width: \"100%\", height: 200 }]}\n        multiline={true}\n        numberOfLines={4}\n        value={bio}\n        onChangeText={setBio}\n      />\n      <Button\n        title={getText(\"save\")}\n        style={{ marginVertical: 20 }}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              bio: bio,\n              image,\n              loginToken: device.loginToken,\n            }),\n          })\n            .then((response) => response.json())\n            .then((response) => {\n              alert(getText(\"success\"));\n              reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.log(\"upload error\", error);\n              alert(getText(\"somethingWentWrong\"));\n            });\n        }}\n      />\n\n      <Button\n        style={{ marginVertical: 20 }}\n        title={getText(\"choosePicture\")}\n        onPress={handleChoosePhoto}\n      />\n\n      <FlatList\n        data={images}\n        extraData={selectedImage}\n        numColumns={isSmallDevice ? 1 : 3}\n        renderItem={renderItem}\n        keyExtractor={(item) => `id${item.id}`}\n        ListFooterComponent={renderFooter}\n      />\n    </View>\n  );\n};\n\nexport default MyProfile;\n","import React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/oc`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"doOC\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      <T>AlCapone</T>\n      <T>WebMaster</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"policeBulletBank\")}:\n      </T>\n      <T>11.000.000</T>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\n/**\n * A Privacy page\n */\nconst Prizes = ({ navigation, screenProps: { me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <H1>{getText(\"prizes\")}</H1>\n\n        <T>{getText(\"currentlyNoPrizes\")}</T>\n        {/* <T>{`\nAan het eind van de prijzenronde winnen de spelers met de meeste gamepoints.\nHet eind van deze ronde is zondag 31 mei 2020.\n\n#1: 100 euro\n#2: 60 euro\n#3: 40 euro`}</T> */}\n      </View>\n    </View>\n  );\n};\nexport default Prizes;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n} from \"../Util\";\n\nconst ProfileScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    device: { theme, loginToken },\n  },\n}) => {\n  const [profile, setProfile] = useState({});\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const name = params?.name;\n\n  doOnce(() => {\n    getProfile(name);\n  });\n  doOnce(reloadCities);\n\n  useEffect(() => {\n    getProfile(name);\n  }, [params?.name]);\n\n  useEffect(() => {\n    fetchImages();\n  }, [profile?.id]);\n\n  const getProfile = (name) => {\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        setProfile(responseJson);\n        setLoading(false);\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${profile?.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  if (loading) {\n    return <ActivityIndicator />;\n  }\n\n  // if (!profile) {\n  //   return <T>{getText(\"personDoesntExist\")}</T>;\n  // }\n\n  const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n  const color = getUserColor(profile, device.theme);\n\n  const uri = Constants.SERVER_ADDR + profile?.image;\n  const hasImage = !!profile?.image;\n\n  const properties = [\n    {\n      name: \"bulletFactory\",\n    },\n    {\n      name: \"casino\",\n    },\n    {\n      name: \"rld\",\n    },\n    {\n      name: \"landlord\",\n    },\n    {\n      name: \"junkies\",\n    },\n    {\n      name: \"weaponShop\",\n    },\n    {\n      name: \"airport\",\n    },\n    {\n      name: \"estateAgent\",\n    },\n    {\n      name: \"garage\",\n    },\n    {\n      name: \"jail\",\n    },\n    {\n      name: \"bank\",\n    },\n  ];\n  return (\n    <ScrollView>\n      <View style={{ justifyContent: \"center\" }}>\n        <View\n          style={{\n            backgroundColor: \"#444\",\n            borderRadius: 10,\n            margin: 20,\n            padding: 20,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n          {hasImage ? (\n            <View>\n              <Image\n                source={{ uri }}\n                style={{\n                  width: \"100%\",\n                  height: 400,\n                }}\n                resizeMode=\"contain\"\n              />\n            </View>\n          ) : null}\n\n          {profile?.gang ? (\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"Gang\", { name: profile?.gang?.name });\n              }}\n            >\n              <T>Gang</T>\n              {profile?.gang?.image && (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + profile?.gang?.image }}\n                  style={{ width: 200, height: 200 }}\n                  resizeMode=\"contain\"\n                />\n              )}\n              <T>{profile?.gang?.name}</T>\n            </TouchableOpacity>\n          ) : null}\n\n          {keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n          {keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n          {keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n          {keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n          {keyValue(\n            getText(\"strength\"),\n            getStrength(profile?.strength, \"both\")\n          )}\n          {keyValue(getText(\"health\"), `${profile?.health}%`)}\n          {keyValue(getText(\"weed\"), profile?.wiet)}\n          {keyValue(getText(\"junkies\"), profile?.junkies)}\n          {keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n          <T bold>{getText(\"properties\")}</T>\n          {properties\n            .map((p) => p.name)\n            .map((property) => {\n              return (\n                cities &&\n                cities.map((city, index) => {\n                  const ownerKey = `${property}Owner`;\n                  if (profile?.name === city[ownerKey]) {\n                    return (\n                      <T>\n                        {getText(property)} in {city.city}\n                      </T>\n                    );\n                  }\n\n                  return null;\n                })\n              );\n            })}\n\n          <View style={styles.row}>\n            <Button\n              title={getText(\"chat\")}\n              onPress={async () => {\n                const { id } = await get(\n                  `pm?loginToken=${loginToken}&userId=${profile.id}`\n                );\n\n                navigation.navigate(\"Channel\", { id });\n              }}\n            />\n\n            <Button\n              title={getText(\"rob\")}\n              onPress={() =>\n                navigation.navigate(\"Rob\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"attack\")}\n              onPress={() =>\n                navigation.navigate(\"Kill\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"donate\")}\n              onPress={() =>\n                navigation.navigate(\"Donate\", {\n                  to: profile.name,\n                })\n              }\n            />\n          </View>\n        </View>\n\n        <View style={{ marginVertical: 20 }}>\n          <T>{profile?.bio}</T>\n        </View>\n\n        <View>\n          {images.map((image) => {\n            const uri = Constants.SERVER_ADDR + \"/\" + image.image;\n            return (\n              <View>\n                <Image\n                  source={{ uri }}\n                  style={{\n                    width: \"100%\",\n                    height: 400,\n                  }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n            );\n          })}\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      console.log(\"FETCH GARAGE\");\n      this.fetchGarage();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\n\nconst Settings = ({\n  navigation,\n  screenProps: {\n    dispatch,\n    me,\n    device: { theme },\n  },\n}) => {\n  const alertAlert = React.useContext(AlertContext);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView>\n      {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n      {__DEV__ && (\n        <Menu\n          theme={theme}\n          theme={theme}\n          IconFont=\"Ionicons\"\n          icon=\"ios-notifications\"\n          navigation={navigation}\n          title={getText(\"purge\")}\n          onPress={() =>\n            alertAlert(getText(\"areYouSure\"), getText(\"areYouSure\"), [\n              {\n                text: getText(\"ok\"),\n                onPress: () => dispatch({ type: \"PURGE\" }),\n              },\n              {\n                text: getText(\"cancel\"),\n              },\n            ])\n          }\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        IconFont=\"Entypo\"\n        icon=\"phone\"\n        navigation={navigation}\n        title={getText(\"verifyPhone\")}\n        to=\"VerifyPhone\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuChangePassword\")}\n        to=\"ChangePassword\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"onepassword\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"signupEmail\")}\n        to=\"SignupEmail\"\n        IconFont=\"Entypo\"\n        icon=\"email\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"changeName\")}\n        to=\"ChangeName\"\n        IconFont=\"FontAwesome\"\n        icon=\"bank\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"layout\")}\n        to=\"Theme\"\n        IconFont=\"Ionicons\"\n        icon=\"ios-color-palette\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuLogin\")}\n        IconFont=\"Entypo\"\n        icon=\"login\"\n        onPress={() => dispatch({ type: \"SET_LOGGED\", value: false })}\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuBackfire\")}\n        to=\"Backfire\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"pistol\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuAccomplice\")}\n        to=\"Accomplice\"\n        IconFont=\"FontAwesome\"\n        icon=\"universal-access\"\n      />\n    </ScrollView>\n  );\n};\n\nexport default Settings;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(\"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const { type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const propertyKey =\n      type === \"weapon\"\n        ? \"weaponShop\"\n        : type === \"protection\"\n        ? \"weaponShop\"\n        : type === \"airplane\"\n        ? \"airport\"\n        : type === \"home\"\n        ? \"estateAgent\"\n        : \"garage\";\n\n    const ownerKey = `${propertyKey}Owner`;\n    const profitKey = `${propertyKey}Profit`;\n\n    const propertyString =\n      type === \"weapon\"\n        ? getText(\"weaponShop\")\n        : type === \"protection\"\n        ? getText(\"weaponShop\")\n        : type === \"airplane\"\n        ? getText(\"airport\")\n        : type === \"home\"\n        ? getText(\"estateAgent\")\n        : getText(\"garage\");\n    return (\n      <View style={{ margin: 15 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {propertyString}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city[ownerKey] ? (\n                    <T>{city[ownerKey]}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city[ownerKey] === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: propertyKey,\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city[profitKey]}</T>\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    return (\n      <ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"weapon\", getText(\"weapons\"), 1)}\n          {this.renderMenu(\"protection\", getText(\"protection\"), 2)}\n          {this.renderMenu(\"airplane\", getText(\"airplane\"), 1)}\n          {this.renderMenu(\"home\", getText(\"homeShop\"), 1)}\n          {this.renderMenu(\"garage\", getText(\"garage\"), 1)}\n        </View>\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n            {this.renderCities()}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, numberFormat } from \"../Util\";\n\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nclass Status extends Component {\n  state = {\n    stats: [],\n  };\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        this.setState({ stats });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            padding: 20,\n          }}\n        >\n          {this.state.stats?.map((stat, index) => {\n            const key = Object.keys(stat)[0];\n            const values = Object.values(stat)[0];\n            return (\n              <Content\n                id={`stat${index}`}\n                key={`stat${index}`}\n                contentWidth={300}\n                title={keyNames[key]}\n              >\n                <View\n                  key={`index${index}`}\n                  style={{ width: 300, marginTop: 20 }}\n                >\n                  {values instanceof Array ? (\n                    values.map((value, i) => {\n                      let v = value[key];\n                      if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                      if (key === \"createdAt\")\n                        v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                      if (key === \"strength\") v = getStrength(v, \"both\");\n                      if (key === \"rank\") v = getRank(v, \"both\");\n\n                      return (\n                        <View\n                          key={`stat${key}-${i}`}\n                          style={{\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            marginBottom: 5,\n                          }}\n                        >\n                          <User\n                            navigation={navigation}\n                            user={value}\n                            size={40}\n                          />\n                          <View>\n                            <T key={`stat${key}-${i}`}>{v}</T>\n                          </View>\n                        </View>\n                      );\n                    })\n                  ) : (\n                    <T>{values}</T>\n                  )}\n                </View>\n              </Content>\n            );\n          })}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Status;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n        {me?.protectionAt > Date.now() ? (\n          <TouchableOpacity\n            onPress={() => {\n              //haalweg\n              fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ token: device.loginToken }),\n              })\n                .then((response) => response.json())\n                .then(async ({ response }) => {\n                  this.setState({ response });\n                  reloadMe(device.loginToken);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            <View>\n              <T>{getText(\"protectionInfo\", uur)}</T>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n\n        <Footer screenProps={screenProps} />\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={seconds}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 150, height: 110 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListHeaderComponent={renderHeader}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Original\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import * as Updates from \"expo-updates\";\nimport React from \"react\";\nimport { Platform, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.token });\n\n          if (Platform.OS === \"web\") {\n            location.reload();\n          } else {\n            Updates.reloadAsync();\n          }\n          // reloadMe(responseJson.token);\n\n          // navigation.popToTop();\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import React, { Component } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass SuperMessage extends Component {\n  state = {\n    response: null,\n    message: null,\n  };\n  renderForm() {\n    const { me, device } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1, padding: 15 }}>\n        <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n\n        <TextInput\n          style={{ ...style(device.theme).textInput, height: 200 }}\n          placeholder={getText(\"message\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          multiline\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </ScrollView>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    return this.renderForm();\n  }\n}\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"landlord\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.landlordOwner ? (\n                    <T>{city.landlordOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.landlordOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"landlord\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <T>{city.landlordProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(0);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", { work: selected });\n    setResponse(response);\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {options.map((option, index) => {\n          return (\n            <TouchableOpacity\n              onPress={() => setSelected(index)}\n              key={`key${index}`}\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                paddingVertical: 10,\n                paddingHorizontal: 10,\n                borderRadius: 5,\n              }}\n            >\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <Checkbox active={selected === index} />\n                <T style={{ marginLeft: 10 }}>{option.title}</T>\n              </View>\n              <T>\n                {option.hours} {getText(\"hours\")}\n              </T>\n            </TouchableOpacity>\n          );\n        })}\n\n        <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n      </View>\n    </View>\n  );\n};\n\nexport default Work;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = { fetchMe, fetchCities, fetchStreetraces };\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n}\n\nexport default mySaga;\n","import { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\n\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  movements: Movement[],\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: false,\n  theme: DEFAULT_THEME,\n  isConnected: 2,\n  foregrounded: 0,\n  movements: [],\n  menu: {\n    left: [0, 1, 2, 3, 4, 5, 6],\n    right: [0, 1, 2, 3, 4, 5, 6],\n  },\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"MENU_SET_RIGHT_ACTIVE_SECTIONS\": {\n      return { ...state, menu: { left: state.menu.left, right: action.value } };\n    }\n    case \"MENU_SET_LEFT_ACTIVE_SECTIONS\": {\n      return {\n        ...state,\n        menu: { right: state.menu.right, left: action.value },\n      };\n    }\n\n    case \"SET_IS_CONNECTED\": {\n      return { ...state, isConnected: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value, logged: true };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      return action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\"device\", \"me\", \"streetraces\", \"cities\"],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as StoreReview from \"expo-store-review\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  AppState,\n  Dimensions,\n  Image,\n  Linking,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { AlertProvider } from \"./components/AlertProvider\";\nimport ConnectionProvider from \"./components/ConnectionProvider\";\nimport Dead from \"./components/Dead\";\nimport Fly from \"./components/Fly\";\nimport Header from \"./components/Header\";\nimport Hoverable from \"./components/Hoverable\";\nimport Jail from \"./components/Jail\";\n// import { loadReCaptcha } from \"react-recaptcha-v3\";\nimport LoginModal from \"./components/LoginModal\";\nimport Constants from \"./Constants\";\nimport { KeyboardAvoidingSpace } from \"./KeyboardAvoidingSpace\";\nimport { leftMenu, rightMenu } from \"./Menus\";\nimport Accomplice from \"./screens/Accomplice\";\nimport AdminEmail from \"./screens/AdminEmail\";\nimport AdminUserWatch from \"./screens/AdminUserWatch\";\nimport Airport from \"./screens/Airport\";\nimport AllBanks from \"./screens/AllBanks\";\nimport Backfire from \"./screens/Backfire\";\nimport Bank from \"./screens/Bank\";\nimport Bomb from \"./screens/Bomb\";\nimport Bulletfactory from \"./screens/Bulletfactory\";\nimport Bunker from \"./screens/Bunker\";\nimport Casino from \"./screens/Casino\";\nimport ChangeName from \"./screens/ChangeName\";\nimport ChangePassword from \"./screens/ChangePassword\";\nimport Channel from \"./screens/Channel\";\nimport Channels from \"./screens/Channels\";\nimport Chat from \"./screens/Chat\";\nimport Code from \"./screens/Code\";\nimport Contribute from \"./screens/Contribute\";\nimport CreateStreetrace from \"./screens/CreateStreetrace\";\nimport Crimes from \"./screens/Crimes\";\nimport Donate from \"./screens/Donate\";\nimport DownloadApp from \"./screens/DownloadApp\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Forum from \"./screens/Forum\";\nimport Gang from \"./screens/Gang\";\nimport GangAchievements from \"./screens/GangAchievements\";\nimport GangCreate from \"./screens/GangCreate\";\nimport GangOc from \"./screens/GangOc\";\nimport Gangs from \"./screens/Gangs\";\nimport GangSettings from \"./screens/GangSettings\";\nimport GangShop from \"./screens/GangShop\";\nimport Garage from \"./screens/Garage\";\nimport Gym from \"./screens/Gym\";\nimport Hackers from \"./screens/Hackers\";\nimport Hoeren from \"./screens/Hoeren\";\nimport Home from \"./screens/Home\";\nimport Hospital from \"./screens/Hospital\";\nimport Income from \"./screens/Income\";\nimport Info from \"./screens/Info\";\nimport InfoGame from \"./screens/InfoGame\";\nimport InfoRules from \"./screens/InfoRules\";\nimport JailScreen from \"./screens/Jail\";\nimport Junkies from \"./screens/Junkies\";\nimport Kill from \"./screens/Kill\";\nimport Login from \"./screens/Login\";\nimport ManageObject from \"./screens/ManageObject\";\nimport Market from \"./screens/Market\";\nimport Members from \"./screens/Members\";\nimport MollieComplete from \"./screens/MollieComplete\";\nimport MyObjects from \"./screens/MyObjects\";\nimport MyProfile from \"./screens/MyProfile\";\nimport OrganisedCrime from \"./screens/OrganisedCrime\";\nimport Poker from \"./screens/Poker\";\nimport Police from \"./screens/Police\";\nimport Privacy from \"./screens/Privacy\";\nimport Prizes from \"./screens/Prizes\";\nimport Profile from \"./screens/Profile\";\nimport Racecars from \"./screens/Racecars\";\nimport RecoverPassword from \"./screens/RecoverPassword\";\nimport Rob from \"./screens/Rob\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport SignupEmail from \"./screens/SignupEmail\";\nimport SignupEmail2 from \"./screens/SignupEmail2\";\nimport Stats from \"./screens/Stats\";\nimport Status from \"./screens/Status\";\nimport StealCar from \"./screens/StealCar\";\nimport Streetrace from \"./screens/Streetrace\";\nimport SwissBank from \"./screens/SwissBank\";\nimport Theme from \"./screens/Theme\";\nimport VerifyPhone from \"./screens/VerifyPhone\";\nimport VerifyPhoneCode from \"./screens/VerifyPhoneCode\";\nimport VIP from \"./screens/VIP\";\nimport Wiet from \"./screens/Wiet\";\nimport Work from \"./screens/Work\";\nimport { persistor, store } from \"./Store\";\nimport { darkerHex, getTextFunction, lighterHex, post } from \"./Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    //iPad|\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nexport const renderMenu = (item, index, navigation, theme: Theme, dispatch) => {\n  const TheIcon = Icon[item.iconType];\n\n  const isCurrent = navigation.state.routeName === item.to;\n  const TouchOrView = item.isHeader ? View : TouchableOpacity;\n  return (\n    <TouchOrView\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <Hoverable onHoverIn={null} onHoverOut={null}>\n        {(isHovered) => (\n          <View\n            style={{\n              borderBottomWidth: 0,\n              padding: 3,\n              backgroundColor: item.isHeader\n                ? theme.primary\n                : darkerHex(theme.primary),\n              paddingLeft: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                minHeight: 25,\n                backgroundColor:\n                  isHovered || isCurrent\n                    ? lighterHex(theme.primary)\n                    : undefined,\n                borderRadius: isHovered || isCurrent ? 15 : undefined,\n              }}\n            >\n              <View style={{ width: 30, alignItems: \"center\" }}>\n                {TheIcon ? (\n                  <TheIcon\n                    name={item.icon}\n                    size={20}\n                    color={theme.secondaryText}\n                  />\n                ) : item.image ? (\n                  <Image\n                    source={{ uri: item.image }}\n                    style={{ width: 40, height: 40, borderRadius: 20 }}\n                  />\n                ) : null}\n              </View>\n              <Text\n                style={{\n                  marginLeft: 15,\n                  color: theme.primaryText,\n                  fontWeight: item.isHeader ? \"bold\" : undefined,\n                }}\n              >\n                {item.text}\n              </Text>\n              {item.component}\n            </View>\n          </View>\n        )}\n      </Hoverable>\n    </TouchOrView>\n  );\n};\n\nconst Layout = ({ screenProps, navigation, children }) => {\n  const { me, device, dispatch } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    //TODO: Fix dat hij naar chat redirect\n    // navigation.navigate(\"Channels\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      screenProps.dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (screenProps.device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  if (Platform.OS === \"web\") {\n    if (getMobileOperatingSystem() === \"android\") {\n      console.log(\"is android\");\n      window.location.replace(Constants.ANDROID_APP_URL);\n    }\n\n    if (getMobileOperatingSystem() === \"ios\") {\n      console.log(\"is ios\");\n      window.location.replace(Constants.IOS_APP_URL);\n    }\n  }\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Channels\",\n    \"Channel\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n    \"Market\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const renderForWeb = () => (\n    <Helmet>\n      <title>MasterCrimeZ - The Ultimate Game</title>\n      <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n      <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n      <meta property=\"og:description\" content={getText(\"metaOgDescription\")} />\n      <meta property=\"og:image\" content=\"\" />\n    </Helmet>\n  );\n\n  const renderLeftMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const renderRightMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <SafeAreaView\n        style={{\n          flexDirection: \"row\",\n          flex: 1,\n          backgroundColor: device.theme.primary,\n        }}\n      >\n        {Platform.OS === \"web\" && renderForWeb()}\n        {isSmallDevice ? null : renderLeftMenu()}\n\n        <View\n          style={{\n            height: Platform.OS === \"web\" ? height : undefined,\n            flex: 1,\n          }}\n        >\n          <Header navigation={navigation} device={device} me={me} />\n\n          {me?.reizenAt > Date.now() && !skip ? (\n            <Fly screenProps={screenProps} navigation={navigation} />\n          ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n            <Dead screenProps={screenProps} navigation={navigation} />\n          ) : me?.jailAt > Date.now() && !skip ? (\n            <Jail screenProps={screenProps} navigation={navigation} />\n          ) : (\n            <View style={{ flex: 1 }}>{children}</View>\n          )}\n          {Platform.OS === \"ios\" && <KeyboardAvoidingSpace />}\n        </View>\n\n        {isSmallDevice ? null : renderRightMenu()}\n      </SafeAreaView>\n\n      {!device.logged && (\n        <LoginModal navigation={navigation} screenProps={screenProps} />\n      )}\n    </View>\n  );\n};\nexport const withLayout = (Component) => (props) => (\n  <Layout {...props}>\n    <Component {...props} />\n  </Layout>\n);\n\nconst CustomDrawerContentComponent = (props) => {\n  const {\n    navigation,\n    screenProps: { me, device, dispatch },\n  } = props;\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  return (\n    <ScrollView>\n      <SafeAreaView\n        style={{ flex: 1, backgroundColor: device.theme.primary }}\n        forceInset={{ top: \"always\", horizontal: \"never\" }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch)\n            )\n          }\n        />\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch)\n            )\n          }\n        />\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\n\nconst rightContainer =\n  Platform.OS === \"web\" ? createBrowserApp : createAppContainer;\nconst rightNavigator =\n  Platform.OS === \"web\"\n    ? isSmallDevice\n      ? createDrawerNavigator\n      : createSwitchNavigator\n    : createStackNavigator;\n\nconst Container = rightContainer(\n  rightNavigator(\n    {\n      Home: {\n        screen: withLayout(Home),\n        path: \"\",\n      },\n\n      GangCreate: withLayout(GangCreate),\n\n      Gang: {\n        screen: withLayout(Gang),\n        path: \"Gang/:name\",\n      },\n\n      Gangs: withLayout(Gangs),\n      GangShop: withLayout(GangShop),\n      GangSettings: withLayout(GangSettings),\n      GangAchievements: withLayout(GangAchievements),\n      GangOc: withLayout(GangOc),\n\n      Status: withLayout(Status),\n      Hackers: withLayout(Hackers),\n      Police: withLayout(Police),\n      StealCar: withLayout(StealCar),\n      CreateStreetrace: withLayout(CreateStreetrace),\n      Channels: withLayout(Channels),\n      Channel: withLayout(Channel),\n      AllBanks: withLayout(AllBanks),\n      Poker: withLayout(Poker),\n      Bomb: withLayout(Bomb),\n      SwissBank: withLayout(SwissBank),\n\n      Crimes: withLayout(Crimes),\n      Jail: withLayout(JailScreen),\n      Kill: withLayout(Kill),\n      Rob: withLayout(Rob),\n      // Showroom: withLayout(Showroom),\n      Bank: withLayout(Bank),\n      Shop: withLayout(Shop),\n      Garage: withLayout(Garage),\n      ManageObject: withLayout(ManageObject),\n      MyObjects: withLayout(MyObjects),\n      Racecars: withLayout(Racecars),\n      Backfire: withLayout(Backfire),\n      Accomplice: withLayout(Accomplice),\n      Streetrace: withLayout(Streetrace),\n      Bulletfactory: withLayout(Bulletfactory),\n      Casino: withLayout(Casino),\n      Airport: withLayout(Airport),\n      Members: withLayout(Members),\n      Stats: withLayout(Stats),\n      Chat: withLayout(Chat),\n      Gym: withLayout(Gym),\n      Wiet: withLayout(Wiet),\n      MollieComplete: withLayout(MollieComplete),\n      OrganisedCrime: withLayout(OrganisedCrime),\n      Junkies: withLayout(Junkies),\n      Hoeren: withLayout(Hoeren),\n      Bunker: withLayout(Bunker),\n      Donate: withLayout(Donate),\n      Hospital: withLayout(Hospital),\n      Income: withLayout(Income),\n      AdminEmail: withLayout(AdminEmail),\n      AdminUserWatch: withLayout(AdminUserWatch),\n      Forum: withLayout(Forum),\n      Theme: withLayout(Theme),\n      DownloadApp: DownloadApp,\n      VIP: withLayout(VIP),\n      Market: withLayout(Market),\n      Profile: {\n        screen: withLayout(Profile),\n        path: \"Profile/:name\",\n      },\n\n      //SETTINGS\n      Settings: withLayout(Settings),\n      SignupEmail: withLayout(SignupEmail),\n\n      SignupEmail2: {\n        screen: withLayout(SignupEmail2),\n        path: \"SignupEmail2/:token\",\n      },\n\n      ChangeName: withLayout(ChangeName),\n      VerifyPhoneCode: withLayout(VerifyPhoneCode),\n      ForgotPassword: withLayout(ForgotPassword),\n      RecoverPassword: {\n        screen: withLayout(RecoverPassword),\n        path: \"RecoverPassword/:token\",\n      },\n\n      Code: {\n        screen: withLayout(Code),\n        path: \"Code/:code\",\n      },\n      Case: {\n        screen: withLayout(Code),\n        path: \"Case/:code\",\n      },\n      Car: {\n        screen: withLayout(Code),\n        path: \"Car/:code\",\n      },\n\n      ChangePassword: {\n        screen: withLayout(ChangePassword),\n      },\n      VerifyPhone: withLayout(VerifyPhone),\n      MyProfile: withLayout(MyProfile),\n      Login: withLayout(Login),\n      Work: withLayout(Work),\n\n      //INFO\n      Info: withLayout(Info),\n      InfoGame: withLayout(InfoGame),\n      InfoRules: withLayout(InfoRules),\n      Privacy: withLayout(Privacy),\n      Contribute: withLayout(Contribute),\n      Prizes: withLayout(Prizes),\n    },\n    {\n      drawerPosition: \"right\",\n      edgeWidth: Platform.OS === \"web\" && isSmallDevice ? 0 : undefined,\n      contentComponent: CustomDrawerContentComponent,\n      unmountInactiveRoutes: true,\n      navigationOptions: {\n        drawerLockMode: \"locked-open\",\n      },\n      defaultNavigationOptions: {\n        headerShown: false,\n      },\n    }\n  ),\n  {\n    history: \"hash\",\n  }\n);\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nclass _RootContainer extends React.Component {\n  async componentDidMount() {\n    const { device, reloadMe, dispatch } = this.props;\n\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n\n    this.interval = setInterval(() => this.sendMovements(), 60000);\n    this.meInterval = setInterval((t) => reloadMe(t), 5000, token);\n    //NB: this causes weird behavior when logging in on another account. Therefore, now, every login goes in hand with a site refresh.\n\n    Linking.addEventListener(\"url\", this.openWebUrl);\n    Linking.getInitialURL().then((url) => this.openWebUrl(url));\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.meInterval);\n  }\n  openWebUrl = (url) => {\n    console.log(\"should open web url here\", url);\n  };\n\n  sendMovements() {\n    const { dispatch, device } = this.props;\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { reloadMe, device } = this.props;\n    //if login or logout happens\n    if (prevProps.device.logged !== this.props.device.logged) {\n      reloadMe(device.loginToken);\n    }\n  }\n\n  render() {\n    const { props } = this;\n    // NB: we got screenProps here , but not navigation\n    // if you also need navigation, use withLayout/Layout\n    return (\n      <AlertProvider>\n        <ActionSheetProvider>\n          <ConnectionProvider>\n            <Container screenProps={{ ...props }} />\n          </ConnectionProvider>\n        </ActionSheetProvider>\n      </AlertProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({ device, me, streetraces, cities }) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, cities };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) => {\n    //console.log(\"reloadMe with loginToken\", loginToken);\n    dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } });\n  },\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nconst App = () => {\n  return (\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <RootContainer />\n      </Provider>\n    </PersistGate>\n  );\n};\nexport default App;\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo5.8e72dd72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bombarderen.3d0c7534.jpg\";","var map = {\n\t\"./af\": 307,\n\t\"./af.js\": 307,\n\t\"./ar\": 308,\n\t\"./ar-dz\": 309,\n\t\"./ar-dz.js\": 309,\n\t\"./ar-kw\": 310,\n\t\"./ar-kw.js\": 310,\n\t\"./ar-ly\": 311,\n\t\"./ar-ly.js\": 311,\n\t\"./ar-ma\": 312,\n\t\"./ar-ma.js\": 312,\n\t\"./ar-sa\": 313,\n\t\"./ar-sa.js\": 313,\n\t\"./ar-tn\": 314,\n\t\"./ar-tn.js\": 314,\n\t\"./ar.js\": 308,\n\t\"./az\": 315,\n\t\"./az.js\": 315,\n\t\"./be\": 316,\n\t\"./be.js\": 316,\n\t\"./bg\": 317,\n\t\"./bg.js\": 317,\n\t\"./bm\": 318,\n\t\"./bm.js\": 318,\n\t\"./bn\": 319,\n\t\"./bn.js\": 319,\n\t\"./bo\": 320,\n\t\"./bo.js\": 320,\n\t\"./br\": 321,\n\t\"./br.js\": 321,\n\t\"./bs\": 322,\n\t\"./bs.js\": 322,\n\t\"./ca\": 323,\n\t\"./ca.js\": 323,\n\t\"./cs\": 324,\n\t\"./cs.js\": 324,\n\t\"./cv\": 325,\n\t\"./cv.js\": 325,\n\t\"./cy\": 326,\n\t\"./cy.js\": 326,\n\t\"./da\": 327,\n\t\"./da.js\": 327,\n\t\"./de\": 328,\n\t\"./de-at\": 329,\n\t\"./de-at.js\": 329,\n\t\"./de-ch\": 330,\n\t\"./de-ch.js\": 330,\n\t\"./de.js\": 328,\n\t\"./dv\": 331,\n\t\"./dv.js\": 331,\n\t\"./el\": 332,\n\t\"./el.js\": 332,\n\t\"./en-au\": 333,\n\t\"./en-au.js\": 333,\n\t\"./en-ca\": 334,\n\t\"./en-ca.js\": 334,\n\t\"./en-gb\": 335,\n\t\"./en-gb.js\": 335,\n\t\"./en-ie\": 336,\n\t\"./en-ie.js\": 336,\n\t\"./en-il\": 337,\n\t\"./en-il.js\": 337,\n\t\"./en-in\": 338,\n\t\"./en-in.js\": 338,\n\t\"./en-nz\": 339,\n\t\"./en-nz.js\": 339,\n\t\"./en-sg\": 340,\n\t\"./en-sg.js\": 340,\n\t\"./eo\": 341,\n\t\"./eo.js\": 341,\n\t\"./es\": 342,\n\t\"./es-do\": 343,\n\t\"./es-do.js\": 343,\n\t\"./es-us\": 344,\n\t\"./es-us.js\": 344,\n\t\"./es.js\": 342,\n\t\"./et\": 345,\n\t\"./et.js\": 345,\n\t\"./eu\": 346,\n\t\"./eu.js\": 346,\n\t\"./fa\": 347,\n\t\"./fa.js\": 347,\n\t\"./fi\": 348,\n\t\"./fi.js\": 348,\n\t\"./fil\": 349,\n\t\"./fil.js\": 349,\n\t\"./fo\": 350,\n\t\"./fo.js\": 350,\n\t\"./fr\": 351,\n\t\"./fr-ca\": 352,\n\t\"./fr-ca.js\": 352,\n\t\"./fr-ch\": 353,\n\t\"./fr-ch.js\": 353,\n\t\"./fr.js\": 351,\n\t\"./fy\": 354,\n\t\"./fy.js\": 354,\n\t\"./ga\": 355,\n\t\"./ga.js\": 355,\n\t\"./gd\": 356,\n\t\"./gd.js\": 356,\n\t\"./gl\": 357,\n\t\"./gl.js\": 357,\n\t\"./gom-deva\": 358,\n\t\"./gom-deva.js\": 358,\n\t\"./gom-latn\": 359,\n\t\"./gom-latn.js\": 359,\n\t\"./gu\": 360,\n\t\"./gu.js\": 360,\n\t\"./he\": 361,\n\t\"./he.js\": 361,\n\t\"./hi\": 362,\n\t\"./hi.js\": 362,\n\t\"./hr\": 363,\n\t\"./hr.js\": 363,\n\t\"./hu\": 364,\n\t\"./hu.js\": 364,\n\t\"./hy-am\": 365,\n\t\"./hy-am.js\": 365,\n\t\"./id\": 366,\n\t\"./id.js\": 366,\n\t\"./is\": 367,\n\t\"./is.js\": 367,\n\t\"./it\": 368,\n\t\"./it-ch\": 369,\n\t\"./it-ch.js\": 369,\n\t\"./it.js\": 368,\n\t\"./ja\": 370,\n\t\"./ja.js\": 370,\n\t\"./jv\": 371,\n\t\"./jv.js\": 371,\n\t\"./ka\": 372,\n\t\"./ka.js\": 372,\n\t\"./kk\": 373,\n\t\"./kk.js\": 373,\n\t\"./km\": 374,\n\t\"./km.js\": 374,\n\t\"./kn\": 375,\n\t\"./kn.js\": 375,\n\t\"./ko\": 376,\n\t\"./ko.js\": 376,\n\t\"./ku\": 377,\n\t\"./ku.js\": 377,\n\t\"./ky\": 378,\n\t\"./ky.js\": 378,\n\t\"./lb\": 379,\n\t\"./lb.js\": 379,\n\t\"./lo\": 380,\n\t\"./lo.js\": 380,\n\t\"./lt\": 381,\n\t\"./lt.js\": 381,\n\t\"./lv\": 382,\n\t\"./lv.js\": 382,\n\t\"./me\": 383,\n\t\"./me.js\": 383,\n\t\"./mi\": 384,\n\t\"./mi.js\": 384,\n\t\"./mk\": 385,\n\t\"./mk.js\": 385,\n\t\"./ml\": 386,\n\t\"./ml.js\": 386,\n\t\"./mn\": 387,\n\t\"./mn.js\": 387,\n\t\"./mr\": 388,\n\t\"./mr.js\": 388,\n\t\"./ms\": 389,\n\t\"./ms-my\": 390,\n\t\"./ms-my.js\": 390,\n\t\"./ms.js\": 389,\n\t\"./mt\": 391,\n\t\"./mt.js\": 391,\n\t\"./my\": 392,\n\t\"./my.js\": 392,\n\t\"./nb\": 393,\n\t\"./nb.js\": 393,\n\t\"./ne\": 394,\n\t\"./ne.js\": 394,\n\t\"./nl\": 395,\n\t\"./nl-be\": 396,\n\t\"./nl-be.js\": 396,\n\t\"./nl.js\": 395,\n\t\"./nn\": 397,\n\t\"./nn.js\": 397,\n\t\"./oc-lnc\": 398,\n\t\"./oc-lnc.js\": 398,\n\t\"./pa-in\": 399,\n\t\"./pa-in.js\": 399,\n\t\"./pl\": 400,\n\t\"./pl.js\": 400,\n\t\"./pt\": 401,\n\t\"./pt-br\": 402,\n\t\"./pt-br.js\": 402,\n\t\"./pt.js\": 401,\n\t\"./ro\": 403,\n\t\"./ro.js\": 403,\n\t\"./ru\": 404,\n\t\"./ru.js\": 404,\n\t\"./sd\": 405,\n\t\"./sd.js\": 405,\n\t\"./se\": 406,\n\t\"./se.js\": 406,\n\t\"./si\": 407,\n\t\"./si.js\": 407,\n\t\"./sk\": 408,\n\t\"./sk.js\": 408,\n\t\"./sl\": 409,\n\t\"./sl.js\": 409,\n\t\"./sq\": 410,\n\t\"./sq.js\": 410,\n\t\"./sr\": 411,\n\t\"./sr-cyrl\": 412,\n\t\"./sr-cyrl.js\": 412,\n\t\"./sr.js\": 411,\n\t\"./ss\": 413,\n\t\"./ss.js\": 413,\n\t\"./sv\": 414,\n\t\"./sv.js\": 414,\n\t\"./sw\": 415,\n\t\"./sw.js\": 415,\n\t\"./ta\": 416,\n\t\"./ta.js\": 416,\n\t\"./te\": 417,\n\t\"./te.js\": 417,\n\t\"./tet\": 418,\n\t\"./tet.js\": 418,\n\t\"./tg\": 419,\n\t\"./tg.js\": 419,\n\t\"./th\": 420,\n\t\"./th.js\": 420,\n\t\"./tk\": 421,\n\t\"./tk.js\": 421,\n\t\"./tl-ph\": 422,\n\t\"./tl-ph.js\": 422,\n\t\"./tlh\": 423,\n\t\"./tlh.js\": 423,\n\t\"./tr\": 424,\n\t\"./tr.js\": 424,\n\t\"./tzl\": 425,\n\t\"./tzl.js\": 425,\n\t\"./tzm\": 426,\n\t\"./tzm-latn\": 427,\n\t\"./tzm-latn.js\": 427,\n\t\"./tzm.js\": 426,\n\t\"./ug-cn\": 428,\n\t\"./ug-cn.js\": 428,\n\t\"./uk\": 429,\n\t\"./uk.js\": 429,\n\t\"./ur\": 430,\n\t\"./ur.js\": 430,\n\t\"./uz\": 431,\n\t\"./uz-latn\": 432,\n\t\"./uz-latn.js\": 432,\n\t\"./uz.js\": 431,\n\t\"./vi\": 433,\n\t\"./vi.js\": 433,\n\t\"./x-pseudo\": 434,\n\t\"./x-pseudo.js\": 434,\n\t\"./yo\": 435,\n\t\"./yo.js\": 435,\n\t\"./zh-cn\": 436,\n\t\"./zh-cn.js\": 436,\n\t\"./zh-hk\": 437,\n\t\"./zh-hk.js\": 437,\n\t\"./zh-mo\": 438,\n\t\"./zh-mo.js\": 438,\n\t\"./zh-tw\": 439,\n\t\"./zh-tw.js\": 439\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 683;","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.75e0546a.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.d7c133b0.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.ada3efe7.png\";","module.exports = __webpack_public_path__ + \"static/media/item1.a5e891d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item2.e86438ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item3.27b6a03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item4.b980bfe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item5.1da86cb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item6.935530e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item7.bf00b038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item8.e50cc6c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item9.44698ead.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item10.2cf60cef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item11.d162fbe5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item12.0bcfb4c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hacker.010dc613.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}