{"version":3,"sources":["src/Constants.js","src/Util.js","src/components/Button.js","src/components/Dead.js","src/components/Fly.js","src/components/Chat.js","src/components/Header.js","src/updateHook.js","src/components/T.js","src/components/Jail.js","src/KeyboardAvoidingSpace.js","src/Menus.js","src/Style.js","src/screens/Accomplice.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Airport.js","src/components/Tabs.js","src/screens/Bank.js","src/screens/Donate.js","src/components/Captcha.js","src/screens/Income.js","src/screens/SwissBank.js","src/screens/AllBanks.js","src/screens/Backfire.js","src/screens/Bomb.js","src/screens/Bulletfactory.js","src/screens/Bunker.js","src/screens/Casino.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/screens/Channel.js","src/components/Separator.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateStreetrace.js","src/components/Footer.js","src/screens/Crimes.js","src/screens/DownloadApp.js","src/screens/ForgotPassword.js","src/screens/Forum.js","src/screens/Gang.js","src/screens/GangAchievements.js","src/screens/GangCreate.js","src/screens/GangOc.js","src/screens/Gangs.js","src/screens/GangSettings.js","src/screens/GangShop.js","src/screens/Garage.js","src/screens/Gym.js","src/screens/Hackers.js","src/screens/Hoeren.js","src/screens/Home.js","src/screens/Hospital.js","src/components/Menu.js","src/screens/Info.js","src/components/H1.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/ManageObject.js","src/screens/Members.js","src/screens/Messages.js","src/screens/MollieComplete.js","src/screens/MyObjects.js","src/screens/MyProfile.js","src/screens/OrganisedCrime.js","src/screens/Poker.js","src/screens/Police.js","src/screens/Privacy.js","src/screens/Prizes.js","src/screens/Profile.js","src/screens/Racecars.js","src/screens/RecoverPassword.js","src/screens/Rob.js","src/screens/Settings.js","src/screens/Shop.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/Stats.js","src/screens/Status.js","src/screens/StealCar.js","src/screens/Streetrace.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/Wiet.js","src/components/Checkbox.js","src/screens/Work.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","assets/dood.jpg","assets/logo.jpg","assets/bombarderen.jpg","assets/whatsapp.png","assets/instagram.png","assets/spotify.png","assets/youtube.png","node_modules/moment/locale sync /^/.//.*$","assets/icon.png","assets/hacker.jpeg","assets/politie.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","get","post","getUserColor","item","theme","level","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","length","prevExp","nowRank","diff","progress","percentage","Math","round","getRank","getStrength","isSmall","Dimensions","width","Button","icon","font","title","onPress","disabled","style","TheIcon","Icon","View","TouchableOpacity","flexDirection","backgroundColor","secondary","padding","justifyContent","paddingHorizontal","marginRight","name","color","secondaryText","size","textAlign","Dead","state","selected","this","props","screenProps","me","device","reloadMe","getText","navigation","locale","reizenAt","Date","flex","alignItems","Image","source","height","Text","token","loginToken","option","setState","React","Component","Fly","sec","city","until","onFinish","timeToShow","timeLabels","m","s","Chat","chat","input","map","fontWeight","message","getChat","allText","Platform","select","web","default","borderWidth","borderColor","numberOfLines","navigate","fontSize","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","TextInput","value","placeholder","onChangeText","onSubmitEditing","text","nativeEvent","OS","location","reload","isSmallDevice","Header","updateAvailable","useState","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","useExpoUpdate","textStyle","marginBottom","notActivated","phoneVerified","numActions","borderRadius","marginTop","updateComponent","reloadAsync","webHeader","manifest","version","toggleDrawer","margin","Feather","statsHeader","flexWrap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","gang","cash","bank","bullets","gamepoints","health","position","strength","chats","AntDesign","backButton","routeName","hitSlop","top","left","right","bottom","goBack","T","children","bold","useSelector","Jail","jail","renderItem","seconds","floor","jailAt","marginLeft","digitStyle","digitTxtStyle","buyOut","fetchMembers","interval","setInterval","log","clearInterval","order","marginVertical","FlatList","data","ListHeaderComponent","renderHeader","KeyboardAvoidingSpace","keyboardWillShow","e","StatusBar","currentHeight","onKeyboardWillShow","toValue","endCoordinates","offset","dim","isIPhoneXSize","isIPhoneXrSize","isIphoneX","Animated","timing","easing","Easing","ease","useNativeDriver","start","keyboardWillHide","onKeyboardWillHide","Value","bindListeners","unbindListeners","keyboardWillShowListener","Keyboard","addListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","remove","leftMenu","stealcarSeconds","ceil","autostelenAt","crimeSeconds","crimeAt","bunkerSeconds","bunkerAt","attackSeconds","attackAt","robSeconds","robAt","ocSeconds","ocAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","workSeconds","workAt","isHeader","iconType","to","component","rightMenu","gangMenus","params","isStats","online","gameMod","admin","adminMenu","StyleSheet","create","textInput","container","Accomplice","accomplice","accomplice1","setAccomplice1","accomplice2","setAccomplice2","accomplice3","setAccomplice3","accomplice4","setAccomplice4","setResponse","submit","acc","alert","url","ScrollView","maxWidth","onFocus","Clipboard","setString","accomplices","placeholderTextColor","secondaryTextSoft","styles","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","id","setId","user","setUser","actions","setActions","movements","setMovements","getActions","ip","previous","Airport","renderFooter","openActionSheet","options","showActionSheetWithOptions","buttonIndex","connectActionSheet","Tabs","tabs","tab","isActive","borderRightWidth","borderRightColor","Bank","deposit","amount","row","keyValue","String","Donate","keys","names","wiet","junkies","hoeren","Captcha","onChangeCaptcha","captcha","random","onChangeRandom","uri","needCaptcha","MaterialCommunityIcons","Income","incomeAt","uren","uren2","sqrt","SwissBank","cities","reloadCities","becomeOwnerResponse","setBecomeOwnerResponse","setAmount","setType","becomeOwner","find","swissBank","swissBullets","bankOwner","bankProfit","paddingVertical","borderBottomWidth","borderBottomColor","Entypo","AllBanks","setTab","MyProfile","backfire","bf","Bomb","useActionSheet","bombs","setBombs","setCaptcha","setRandom","typeStrings","bulletFactory","casino","landlord","weaponShop","rld","airport","estateAgent","garage","airplane","Object","push","cancelButtonIndex","destructiveButtonIndex","Bulletfactory","setBullets","bulletFactoryOwner","bulletFactoryPrice","bulletFactoryProfit","bulletFactoryDamage","Bunker","price","minHeight","keyExtractor","extraData","ListFooterComponent","Casino","casinoOwner","casinoProfit","ChangeName","setName","ChangePassword","password1","password2","success","password","md5","str_md5","responseJson","minWidth","secureTextEntry","login","ImageInput","hasEdited","getPermissionAsync","Permissions","status","_pickImage","loading","ImagePicker","mediaTypes","All","allowsEditing","aspect","base64","result","cancelled","ImageManipulator","resize","format","PNG","manipulated","manipulatedBase64","onChange","SIZE","small","ActivityIndicator","Ionicons","isBigDevice","ChatScreen","fetchChat","isFetching","scrollToEnd","setTimeout","flatList","animated","onRefresh","isMe","avatar","username","thumbnail","IMAGE_SIZE","marginHorizontal","isSystem","image","resizeMode","send","cid","STYLE","members","subid","SafeAreaView","contentContainerStyle","refreshControl","refreshing","ref","Separator","fetchChannelsubs","channelsubs","channel","unread","userId","lastmessage","ItemSeparatorComponent","Linking","openURL","CreateStreetrace","reloadStreetraces","setLoading","racecars","setRacecars","numParticipants","setNumParticipants","setPrice","car","setCar","cars","TabInput","auto","racecar","power","carId","Footer","setText","facebookShareUrl","copy","getFullYear","Crimes","kans","kans2","getMobileOperatingSystem","userAgent","navigator","vendor","window","opera","test","MSStream","DownloadApp","Login","email","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","multiline","moment","updatedAt","responses","createdAt","renderNew","renderTopics","GangCreate","Gangs","getGangs","gangs","numColumns","Garage","fetchGroups","carGroups","reduce","current","bulkAction","action","upgradeCar","renderGroup","alignSelf","kogels","focusListener","view","filter","Gym","Hoeren","renderCities","rldOwner","rldProfit","number","itemWidth","amountOfItems","Home","activeSlide","notificationsHeader","_handleAppStateChange","nextAppState","turnOnNotifications","sendLanguage","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","language","ExpoConstants","isDevice","existingStatus","finalStatus","pushtoken","Notifications","_renderItem","dispatch","menu","movement","locationX","locationY","timestamp","AppState","addEventListener","removeEventListener","filtered","IntentLauncher","c","_carousel","slice","sliderWidth","onSnapToItem","dotsLength","activeDotIndex","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","document","onmousemove","event","clientX","clientY","renderCarousel","Hospital","heal","Menu","IconFont","StoreReview","H1","PrivacyPage","components","en","nl","strings","jailOwner","jailProfit","ListEmptyComponent","Junkies","junkiesOwner","junkiesProfit","Kill","kill","textDecorationLine","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","profitKey","priceKey","ownerKey","damageKey","orders","Members","orderKey","orderBy","isOnline","onlineAt","secondKey","o","primary","searchedMembers","toLowerCase","includes","fetchReadMessage","deleteMessage","getMessages","readMessage","fromName","read","renderMessages","MollieComplete","properties","MyObjects","p","property","propertyString","photo","images","selectedImage","fetchImages","handleUploadPhoto","handleChoosePhoto","quality","bio","Wiet","Poker","poker","Config","onLinkPress","link","Prizes","ProfileScreen","profile","getProfile","prevProps","points","total","hasImage","Racecars","fetchGarage","sellCar","crushCar","RecoverPassword","rob","__DEV__","Shop","fetchCities","fetchShop","propertyKey","renderMenu","t","buy","next","respones","activate","activationToken","keyNames","newMembers","onlineToday","stats","fetchStats","stat","values","Array","i","v","uur","protectionAt","StealCar","typeStart","finished","Streetrace","streetraces","RefreshControl","creator","streetraceParticipants","streetraceId","leave","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","phone","save","code","popToTop","Creditshop","items","setItems","credits","kooptext","kosten","Mollie","SuperMessage","VIP","landlordOwner","landlordProfit","Checkbox","active","Work","hours","setSelected","work","Api","fetchMe","payload","fetchStreetraces","mySaga","call","put","takeLatest","initDevice","logged","foregrounded","config","storage","AsyncStorage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","concat","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","isHeaderStyle","borderTopWidth","borderLeftWidth","borderLeftColor","borderTopColor","renderDrawerMenu","Layout","_handleNotificationResponse","notification","request","content","handleChange","available","ExpoNotifications","skip","Helmet","withLayout","Container","createBrowserApp","createAppContainer","createDrawerNavigator","createSwitchNavigator","createStackNavigator","screen","path","Gang","GangShop","GangSettings","GangAchievements","GangOc","Hackers","Police","Channels","Channel","JailScreen","Rob","Backfire","Stats","OrganisedCrime","AdminEmail","Forum","Theme","Profile","Settings","SignupEmail","SignupEmail2","VerifyPhoneCode","ForgotPassword","VerifyPhone","Info","InfoGame","InfoRules","Privacy","Contribute","drawerPosition","edgeWidth","contentComponent","forceInset","horizontal","unmountInactiveRoutes","navigationOptions","drawerLockMode","defaultNavigationOptions","headerShown","history","makeid","characters","charactersLength","charAt","_RootContainer","openWebUrl","sendMovements","getInitialURL","RootContainer","connect","App","serviceWorker","register","scope","info","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","Error","resolve"],"mappings":"iYAaeA,EATG,CAChBC,YALiB,2BAMjBC,QAAS,2CACTC,YACE,2FACFC,gBACE,gF,yBCFEC,G,OAAa,SAACC,EAAQC,EAAQC,GAAjB,OACjBF,EAAOG,MAAMF,GAAQG,KAAKF,KAEfG,EAAY,SAACC,GAGxB,MAAqB,QAFHA,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,IAExC,KAAO,MAExBI,EAAkB,SAACD,GAAD,OAAgB,SAACE,GAC9C,IAAMC,EAAYH,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGhEO,EAAiBC,EAAQ,KAEX,OAAdF,IACFC,EAAiBC,EAAQ,MAPoC,IAU/D,IAAIX,EACFU,EAAeF,IAAf,sBACsBA,EADtB,iBAC0CF,EAD1C,IAX6D,mBAATM,EAAS,iCAATA,EAAS,kBAkB/D,OAJAA,EAAKC,SAAQ,SAACC,EAAKC,GACjBf,EAASD,EAAWC,EAAD,KAAae,EAAQ,GAAKD,MAGxCd,IAGIgB,EAAe,SAACC,GAC3B,aAAOA,OAAP,EAAOA,EAAGC,WAAWC,QAAQ,wBAAyB,MAuDjD,IAiBMC,EAAS,SAACC,EAAIC,GACzBC,qBAAU,WAER,OADAF,IACA,MAAOC,OAAP,EAAOA,MACN,KAEQE,EAAU,SAACC,EAAUC,EAAQC,GACxC,OAAOC,MAASlC,EAAUC,YAAd,IAA6B8B,EAAY,CACnDC,SACAG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAiB,SAAXD,EAAoBK,KAAKC,UAAUL,QAAQM,IAEhDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,yEACGH,GADH,+DAGLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIPE,EAAM,SAACjB,GAAD,OAAcD,EAAQC,EAAU,QACtCkB,EAAO,SAAClB,EAAUE,GAAX,OAAoBH,EAAQC,EAAU,OAAQE,IAqBrDiB,EAAe,SAACC,EAAMC,GAAP,OAC1BD,EAAKE,MAAQ,EACT,OACAF,EAAKG,cAAgB,IACrB,MACAH,EAAKG,cAAgB,IACrB,SACAF,EAAMG,aAENC,EAAQ,CACZ,CACEC,KAAM,SACNC,IAAK,IAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,EAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,kBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAIHE,GAAe,SAACH,EAAMI,EAAYC,GACtC,IAAMC,EAAMD,EAAKE,WAAU,SAACC,GAAD,OAAOR,EAAOQ,EAAEP,OACrCQ,EAAOH,EAAM,EAEbI,EAASL,EAAKC,GAAOD,EAAKC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","file":"static/js/app.e274993e.chunk.js","sourcesContent":["const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://192.168.1.38:4001\";\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\",\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport { useEffect } from \"react\";\nimport { Alert, Dimensions, Platform, ScaledSize } from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport const getUserColor = (item, theme) =>\n  item.level > 1\n    ? \"blue\"\n    : item.creditsTotal >= 10000\n    ? \"red\"\n    : item.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nconst Button = ({ icon, font, title, onPress, disabled, style, theme }) => {\n  const TheIcon = font && icon ? Icon[font] : View;\n\n  return (\n    <TouchableOpacity onPress={disabled ? undefined : onPress}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: disabled ? `${theme.secondary}55` : theme.secondary,\n          padding: 10,\n          justifyContent: \"center\",\n          paddingHorizontal: isSmall ? 5 : 20,\n          // borderRadius: 20,\n          ...style,\n        }}\n      >\n        {font && icon ? (\n          <View style={{ marginRight: 20 }}>\n            <TheIcon name={icon} color={theme.secondaryText} size={20} />\n          </View>\n        ) : null}\n\n        {title && (\n          <Text style={{ textAlign: \"center\", color: theme.secondaryText }}>\n            {title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Image, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View>\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            theme={device.theme}\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Dead;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getTextFunction } from \"../Util\";\n\nclass Fly extends React.Component {\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"flyYoureTravelingTo\", me?.city)}\n        </Text>\n        <CountDown\n          until={sec}\n          onFinish={() => {\n            reloadMe(device.loginToken);\n          }}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Fly;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  chat = () => {\n    const { chat } = this.state;\n    return chat.map((item, index) => (\n      <Text key={`item${index}`}>\n        <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n        {item.message}&nbsp;&nbsp;\n      </Text>\n    ));\n  };\n  render() {\n    const { device, navigation, me } = this.props;\n\n    const { chat, input } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const allText = chat\n      .map((item) => `${item.name}${item.message}`)\n      .join(\"::::\");\n    return (\n      <View style={{ height: Platform.select({ web: 50, default: 100 }) }}>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#444\",\n            borderWidth: 1,\n            borderColor: \"black\",\n            flexDirection: Platform.select({ web: \"row\", default: undefined }),\n          }}\n        >\n          {Platform.select({\n            web: (\n              <View style={{ flex: 1, justifyContent: \"center\" }}>\n                {allText ? (\n                  <Ticker>\n                    {({ index }) => {\n                      return (\n                        <>\n                          {chat.map((item, index) => (\n                            <Text\n                              style={{ color: \"white\" }}\n                              numberOfLines={1}\n                              key={`item${index}`}\n                            >\n                              <TouchableOpacity\n                                onPress={() => {\n                                  navigation.navigate(\"Profile\", {\n                                    name: item.name,\n                                  });\n                                }}\n                              >\n                                <Text style={{ fontWeight: \"bold\" }}>\n                                  {item.name}\n                                </Text>\n                              </TouchableOpacity>\n                              :&nbsp;{item.message}&nbsp;&nbsp;\n                            </Text>\n                          ))}\n                        </>\n                      );\n                    }}\n                  </Ticker>\n                ) : null}\n              </View>\n            ),\n\n            default: (\n              <MarqueeText\n                style={{ fontSize: 20 }}\n                duration={allText.length * 50}\n                marqueeOnStart\n                loop\n                marqueeDelay={200}\n                marqueeResetDelay={1000}\n              >\n                <>\n                  {chat.map((item, index) => (\n                    <Fragment key={`item${index}`}>\n                      <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                      :&nbsp;{item.message}&nbsp;&nbsp;\n                    </Fragment>\n                  ))}\n                </>\n              </MarqueeText>\n            ),\n          })}\n          <View style={{ width: 100, height: 30 }}>\n            <TextInput\n              value={input}\n              placeholder={getText(\"chatYourMessage\")}\n              style={{\n                backgroundColor: \"#404040\",\n                fontSize: 20,\n                color: \"white\",\n                flex: 1,\n                width: 100,\n              }}\n              onChangeText={(input) => this.setState({ input })}\n              onSubmitEditing={({ nativeEvent: { text } }) => {\n                fetch(`${Constants.SERVER_ADDR}/chat`, {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    token: device.loginToken,\n                    message: text,\n                  }),\n                })\n                  .then((response) => response.json())\n                  .then((chat) => {\n                    this.getChat();\n\n                    if (Platform.OS === \"web\") {\n                      location.reload();\n                    }\n\n                    this.setState({ input: \"\" });\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Chat from \"../components/Chat\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nconst isSmallDevice = width < 800;\n\nfunction Header({ navigation, device, me }) {\n  const getText = getTextFunction(me?.locale);\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: device.theme.secondaryText,\n  };\n\n  const notActivated = me?.phoneVerified === false && me?.numActions >= 20 && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          theme={device.theme}\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          theme={device.theme}\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const webHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <View>\n          <Image\n            source={require(\"../../assets/logo.jpg\")}\n            style={{\n              width: isSmallDevice ? 200 : 600,\n              height: isSmallDevice ? 33 : 100,\n            }}\n          />\n        </View>\n        <Text style={{ color: \"white\" }}>v{Constants.manifest.version}</Text>\n\n        {isSmallDevice ? (\n          <TouchableOpacity\n            onPress={() => {\n              navigation.toggleDrawer();\n            }}\n            style={{ margin: 10 }}\n          >\n            <Feather\n              name=\"menu\"\n              size={32}\n              color=\"#FFF\"\n              style={{ color: \"#FFF\" }}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      <Chat me={me} device={device} navigation={navigation} />\n    </View>\n  );\n\n  const statsHeader = (\n    <>\n      <TouchableOpacity onPress={() => navigation.navigate(\"Status\")}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <Text style={textStyle}>\n            😎 {me?.name} {me?.gang?.name}\n          </Text>\n          <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n          <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon.MaterialCommunityIcons\n              name=\"pistol\"\n              size={18}\n              color={device.theme.secondaryText}\n              style={{ marginRight: 5 }}\n            />\n            <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n          </View>\n          <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n          <Text style={textStyle}>🌍 {me?.city}</Text>\n          <Text style={textStyle}>❤️ {me?.health}%</Text>\n          <Text style={textStyle}>\n            ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n          </Text>\n          <Text style={textStyle}>💪 {getStrength(me?.strength, \"both\")}</Text>\n          <Text\n            style={textStyle}\n            onPress={() => navigation.navigate(\"Channels\")}\n          >\n            💬 {me?.chats}\n          </Text>\n        </View>\n      </TouchableOpacity>\n\n      {!me?.phoneVerified && (\n        <View\n          style={{\n            padding: 5,\n            backgroundColor: device.theme.secondary,\n            borderRadius: 5,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"VerifyPhone\")}\n          >\n            <AntDesign\n              name=\"exclamationcircleo\"\n              color=\"red\"\n              style={{ marginRight: 10 }}\n            />\n            <Text\n              style={{ color: device.theme.secondaryText, fontWeight: \"bold\" }}\n            >\n              {getText(\"headerVerifyYourAccount\")}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </>\n  );\n\n  const backButton = (\n    <View\n      style={{\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n      }}\n    >\n      {navigation.state.routeName !== \"Home\" ? (\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => navigation.goBack()}\n        >\n          <AntDesign\n            name=\"arrowleft\"\n            size={32}\n            color={device.theme.secondaryText}\n          />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ height: 20 }} />\n      )}\n    </View>\n  );\n  return (\n    <View\n      style={{\n        justifyContent: \"center\",\n        backgroundColor: \"#555\",\n      }}\n    >\n      {Platform.OS === \"web\" ? (\n        webHeader\n      ) : (\n        <View style={{ backgroundColor: device.theme.secondary }}>\n          {backButton}\n          {updateComponent || notActivated || statsHeader}\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default Header;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\nclass Jail extends React.Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n\n    const { reloadMe, device } = this.props.screenProps;\n    this.interval = setInterval(() => {\n      reloadMe(device.loginToken);\n      this.fetchMembers();\n    }, 2500);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clear interval jail\");\n    clearInterval(this.interval);\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n      </View>\n    );\n  };\n\n  buyOut = async (type) => {\n    const { device, reloadMe } = this.props.screenProps;\n    const { response } = await post(\"buyout\", {\n      token: device.loginToken,\n      type,\n    });\n    this.setState({ response });\n    reloadMe(device.loginToken);\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { response } = this.state;\n    const sec = Math.round((me.jailAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <T>{getText(\"jailYoureInJail\")}</T>\n\n        <CountDown\n          until={sec}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n\n        <View style={{ height: 15 }} />\n\n        {response && <T>{response}</T>}\n        <Button\n          style={{ marginVertical: 15 }}\n          theme={device.theme}\n          title={getText(\"jailBuyoutCredits\")}\n          onPress={() => this.buyOut(\"credits\")}\n        />\n        <Button\n          style={{ marginVertical: 15 }}\n          theme={device.theme}\n          title={getText(\"jailBuyoutCash\")}\n          onPress={() => this.buyOut(\"cash\")}\n        />\n\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","import * as React from \"react\";\nimport { Animated, Easing, Keyboard, Platform, StatusBar } from \"react-native\";\nimport { isIphoneX } from \"./Util\";\n\ninterface KeyboardAvoidingSpaceProps {\n  onKeyboardWillShow?: (duration: number) => void;\n  onKeyboardWillHide?: (duration: number) => void;\n  offset?: number;\n}\n\ninterface KeyboardAvoidingSpaceState {\n  height: Animated.Value;\n}\n\n/**\n * Made with swag by yours truly\n * @author Brad \"Swagalicious\" Johnson\n */\nexport class KeyboardAvoidingSpace extends React.Component<\n  KeyboardAvoidingSpaceProps,\n  KeyboardAvoidingSpaceState\n> {\n  constructor(props: KeyboardAvoidingSpaceProps) {\n    super(props);\n    this.state = {\n      height: new Animated.Value(0),\n    };\n  }\n\n  componentDidMount() {\n    this.bindListeners();\n  }\n\n  componentWillUnmount() {\n    this.unbindListeners();\n  }\n\n  bindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        this.keyboardWillHide\n      );\n    } else {\n      this.keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        this.keyboardWillHide\n      );\n    }\n  }\n\n  unbindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    } else {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }\n\n  keyboardWillShow = (e: any) => {\n    // because of iPhone X new screen settings, remove SafeAreaView padding-bottom when keyboard is open\n    const SafeAreaViewPaddingBottom = 34;\n    const duration = e && e.duration ? e.duration : 100;\n    let notchHeight = 0;\n    if (\n      Platform.OS === \"android\" &&\n      StatusBar.currentHeight &&\n      StatusBar.currentHeight > 24\n    ) {\n      notchHeight = StatusBar.currentHeight;\n    }\n    // let suggestHeight = 0;\n    // if (Platform.OS === \"ios\") {\n    //   suggestHeight = 30;\n    // }\n    if (this.props.onKeyboardWillShow) {\n      this.props.onKeyboardWillShow(duration);\n    }\n\n    const toValue =\n      e.endCoordinates.height +\n      // suggestHeight +\n      // notchHeight -\n      (this.props.offset || 0) -\n      (isIphoneX() ? SafeAreaViewPaddingBottom : 0);\n\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  keyboardWillHide = (e: any) => {\n    const duration = e && e.duration ? e.duration : 100;\n    if (this.props.onKeyboardWillHide) {\n      this.props.onKeyboardWillHide(duration);\n    }\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    return <Animated.View style={{ height: this.state.height }} />;\n  }\n}\n","import React from \"react\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getRank, getTextFunction, numberFormat } from \"./Util\";\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n  const ocSeconds = Math.ceil((me?.ocAt + 120000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const workSeconds = Math.ceil((me?.workAt - Date.now()) / 1000);\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      isHeader: true,\n      text: getText(\"headerCrime\"),\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"car\",\n      text: getText(\"menuStealCar\"),\n      to: \"StealCar\",\n      component:\n        stealcarSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={stealcarSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"md-cash\",\n      text: getText(\"menuCrimes\"),\n      to: \"Crimes\",\n      component:\n        crimeSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={crimeSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuKill\"),\n      to: \"Kill\",\n      component:\n        attackSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={attackSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuRob\"),\n      to: \"Rob\",\n      component:\n        robSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={robSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"Ionicons\",\n      icon: \"md-cash\",\n      text: getText(\"menuOC\"),\n      to: \"OrganisedCrime\",\n      component:\n        ocSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={ocSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n    {\n      iconType: \"AntDesign\",\n      icon: \"stepforward\",\n\n      text: getText(\"menuGym\"),\n      to: \"Gym\",\n      component:\n        gymSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={gymSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"tree\",\n\n      text: getText(\"menuWiet\"),\n      to: \"Wiet\",\n      component:\n        wietSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={wietSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"MaterialIcons\",\n      icon: \"people\",\n\n      text: getText(\"menuJunkies\"),\n      to: \"Junkies\",\n      component:\n        junkiesSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={junkiesSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"female\",\n\n      text: getText(\"menuProstitutes\"),\n      to: \"Hoeren\",\n      component:\n        hoerenSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={hoerenSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"tool\",\n\n      text: getText(\"menuWork\"),\n      to: \"Work\",\n      component:\n        workSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={workSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bars\",\n\n      text: getText(\"menuJail\", me?.jail),\n      to: \"Jail\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n      isHeader: true,\n      text: getText(\"headerSpend\"),\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bank\",\n      text: getText(\"menuBank\"),\n      to: \"AllBanks\",\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"pistol\",\n      text: getText(\"menuBulletfactory\"),\n      to: \"Bulletfactory\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bomb\",\n      text: getText(\"menuBomb\"),\n      to: \"Bomb\",\n    },\n\n    {\n      iconType: \"FontAwesome5\",\n      icon: \"dice\",\n      text: getText(\"menuCasino\"),\n      to: \"Casino\",\n    },\n\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"warehouse\",\n      text: getText(\"menuBunker\"),\n      to: \"Bunker\",\n      component:\n        bunkerSeconds > 0 ? (\n          <CountDown\n            style={{ marginLeft: 10 }}\n            until={bunkerSeconds}\n            digitStyle={{ backgroundColor: theme.secondary }}\n            digitTxtStyle={{ color: theme.secondaryText }}\n            onFinish={() => {}}\n            size={8}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: null, s: null }}\n          />\n        ) : null,\n    },\n\n    {\n      iconType: \"FontAwesome5\",\n      icon: \"hospital\",\n      text: getText(\"menuHospital\"),\n      to: \"Hospital\",\n    },\n\n    {\n      iconType: \"Entypo\",\n      icon: \"shop\",\n      text: getText(\"menuShop\"),\n      to: \"Shop\",\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-car\",\n      text: getText(\"menuGarage\"),\n      to: \"Garage\",\n    },\n    {\n      iconType: \"MaterialIcons\",\n      icon: \"local-car-wash\",\n      text: getText(\"menuRacecars\"),\n      to: \"Racecars\",\n    },\n    {\n      iconType: \"MaterialCommunityIcons\",\n      icon: \"car-key\",\n      text: getText(\"menuStreetrace\"),\n      to: \"Streetrace\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"plane\",\n      text: getText(\"menuAirport\"),\n      to: \"Airport\",\n    },\n  ];\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level > 1\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            isHeader: true,\n            text: getText(\"headerAdminPanel\"),\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuHackers\"),\n            to: \"Hackers\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuPolice\"),\n            to: \"Police\",\n          },\n        ]\n      : [];\n\n  const admin =\n    me?.level >= 10\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            text: getText(\"menuAdminEmail\"),\n            to: \"AdminEmail\",\n          },\n        ]\n      : [];\n\n  return [...gameMod, ...admin];\n};\n\nexport const rightMenu = (me, theme) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gangMenus =\n    me?.level > 1\n      ? [\n          {\n            iconType: \"FontAwesome\",\n            icon: \"font\",\n            isHeader: true,\n            text: me?.gang?.name || getText(\"headerGang\"),\n          },\n\n          {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangCreate\"),\n            to: \"GangCreate\",\n          },\n          {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangs\"),\n            to: \"Gangs\",\n          },\n          {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangShop\"),\n            to: \"GangShop\",\n          },\n          {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangSettings\"),\n            to: \"GangSettings\",\n          },\n          {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangAchievements\"),\n            to: \"GangAchievements\",\n          },\n          {\n            iconType: \"Ionicons\",\n            icon: \"ios-people\",\n            text: getText(\"menuGangOc\"),\n            to: \"GangOc\",\n          },\n        ]\n      : [];\n\n  return [\n    {\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      isHeader: true,\n      text: me?.name,\n      to: \"Profile\",\n      params: { name: me?.name },\n    },\n\n    {\n      isStats: true,\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuCash\", numberFormat(me?.cash)),\n    },\n\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuBankMoney\", numberFormat(me?.bank)),\n    },\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuBullets\", numberFormat(me?.bullets)),\n    },\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n      text: getText(\"menuRank\", getRank(me?.rank, \"both\")),\n    },\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuHealth\", me?.health),\n    },\n    {\n      isStats: true,\n\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      text: getText(\"menuCity\", me?.city),\n    },\n\n    ...gangMenus,\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"font\",\n\n      isHeader: true,\n      text: getText(\"headerSociety\"),\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-people\",\n\n      text: getText(\"menuMembers\", me?.online),\n      to: \"Members\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuStats\"),\n      to: \"Stats\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuMyObjects\"),\n      to: \"MyObjects\",\n    },\n\n    {\n      iconType: \"AntDesign\",\n      icon: \"star\",\n      text: getText(\"menuStatus\"),\n      to: \"Status\",\n    },\n\n    {\n      iconType: \"Entypo\",\n      icon: \"info-with-circle\",\n\n      isHeader: true,\n      text: getText(\"headerGeneral\"),\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-chatbubbles\",\n      text: getText(\"menuChat\"),\n      to: \"Chat\",\n    },\n\n    {\n      iconType: \"Ionicons\",\n      icon: \"ios-chatbubbles\",\n      text: getText(\"menuChannels\", me?.chats),\n      to: \"Channels\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"wechat\",\n\n      text: getText(\"menuForum\"),\n      to: \"Forum\",\n    },\n\n    {\n      iconType: \"SimpleLineIcons\",\n      icon: \"settings\",\n\n      text: getText(\"menuSettings\"),\n      to: \"Settings\",\n    },\n\n    {\n      iconType: \"Entypo\",\n      icon: \"info-with-circle\",\n\n      text: getText(\"menuInfo\"),\n      to: \"Info\",\n    },\n\n    {\n      iconType: \"FontAwesome\",\n      icon: \"bank\",\n      text: getText(\"menuVIP\"),\n      to: \"VIP\",\n    },\n\n    ...adminMenu(me),\n  ];\n};\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  ScrollView,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { default as style, default as styles } from \"../Style\";\nimport { getRank, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst Accomplice = ({\n  navigation,\n  screenProps: {\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [accomplice1, setAccomplice1] = useState(me?.accomplice);\n  const [accomplice2, setAccomplice2] = useState(me?.accomplice2);\n  const [accomplice3, setAccomplice3] = useState(me?.accomplice3);\n  const [accomplice4, setAccomplice4] = useState(me?.accomplice4);\n  const [response, setResponse] = useState(null);\n\n  const submit = (acc) => {\n    //how to set accomplice acc from params to the right body?\n\n    fetch(`${Constants.SERVER_ADDR}/setAccomplice`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        accomplice: accomplice1,\n        accomplice2,\n        accomplice3,\n        accomplice4,\n        loginToken: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response }) => {\n        setResponse(response);\n        reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    const accomplice = navigation.state.params?.accomplice;\n    if (accomplice) {\n      submit(accomplice);\n    }\n  }, []);\n\n  const rank = getRank(me?.rank, \"number\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n      }}\n    >\n      <View style={{ maxWidth: 600, margin: 20 }}>\n        <T>{getText(\"accompliceInfo\")}</T>\n\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"accompliceLinkText\")}</T>\n          <TextInput\n            value={url}\n            onFocus={() => {\n              Clipboard.setString(url);\n              setResponse(getText(\"copiedToClipboard\"));\n            }}\n            style={style(theme).textInput}\n          />\n        </View>\n\n        <T bold>{getText(\"yourAccomplicesHeader\")}</T>\n        {me?.accomplices.length > 0 ? (\n          me?.accomplices.map((accomplice) => {\n            return keyValue(accomplice.name, getRank(accomplice.rank, \"both\"));\n          })\n        ) : (\n          <T>{getText(\"accomplicesNone\")}</T>\n        )}\n\n        <T bold style={{ marginTop: 15 }}>\n          {getText(\"accompliceWhoseYouWantToBe\")}\n        </T>\n        <T>{response}</T>\n\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={styles(theme).textInput}\n          value={accomplice1}\n          onChangeText={setAccomplice1}\n          placeholder={getText(\"accomplice\", 1)}\n        />\n\n        {rank >= 11 ? (\n          <TextInput\n            placeholderTextColor={theme.secondaryTextSoft}\n            style={styles(theme).textInput}\n            value={accomplice2}\n            onChangeText={setAccomplice2}\n            placeholder={getText(\"accomplice\", 2)}\n          />\n        ) : null}\n\n        {rank >= 16 ? (\n          <>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={styles(theme).textInput}\n              value={accomplice3}\n              onChangeText={setAccomplice3}\n              placeholder={getText(\"accomplice\", 3)}\n            />\n\n            <TextInput\n              style={styles(theme).textInput}\n              value={accomplice4}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={setAccomplice4}\n              placeholder={getText(\"accomplice\", 4)}\n            />\n          </>\n        ) : null}\n\n        <Button theme={theme} title={getText(\"save\")} onPress={submit} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Accomplice;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <T bold style={{ marginTop: 20 }}>\n                      {ip.ip}\n                    </T>\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Airport extends Component {\n  state = {\n    response: null,\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={device.theme}\n        style={{ borderRadius: 10, marginTop: 20 }}\n        title={getText(\"fly\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/airport`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: device.loginToken,\n              to,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      \"Paris\",\n      \"Barcelona\",\n      \"London\",\n      \"Berlin\",\n      \"Lisbon\",\n      \"Rome\",\n      \"Dublin\",\n      \"Madrid\",\n      \"Brussels\",\n      \"Bali\",\n      \"New York\",\n      \"San Fransisco\",\n      \"Amsterdam\",\n    ];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ to: options[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n    return (\n      <View>\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={this.state.to ? this.state.to : getText(\"chooseCity\")}\n          onPress={this.openActionSheet}\n        />\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Airport);\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"getCTA\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/income`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                captcha: this.state.captcha,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async (response) => {\n                this.setState({ response, captcha: \"\", random: Math.random() });\n                this.props.screenProps.reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"income\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n      </View>\n    );\n  };\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const incomeAt = me.incomeAt ? me.incomeAt : 0;\n    const uren = Math.round((Date.now() - incomeAt) / 3600000);\n    const uren2 = uren > 24 ? 24 : uren;\n    const amount = Math.round(\n      (me.junkies + me.hoeren + me.wiet) * 50 * Math.sqrt(uren2)\n    );\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.keyValue(getText(\"hours\"), getText(\"xHours\", uren2))}\n        {this.keyValue(getText(\"totalProfit\"), `${amount},-`)}\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Income;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bank from \"./Bank\";\nimport Donate from \"./Donate\";\nimport Income from \"./Income\";\nimport SwissBank from \"./SwissBank\";\nconst AllBanks = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const [tab, setTab] = useState(\"bank\");\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"menuBank\"),\n            isActive: tab === \"bank\",\n            onPress: () => setTab(\"bank\"),\n          },\n          {\n            title: getText(\"menuSwissBank\"),\n            isActive: tab === \"swissBank\",\n            onPress: () => setTab(\"swissBank\"),\n          },\n\n          {\n            title: getText(\"menuDonate\"),\n            isActive: tab === \"donate\",\n            onPress: () => setTab(\"donate\"),\n          },\n          {\n            title: getText(\"menuIncome\"),\n            isActive: tab === \"income\",\n            onPress: () => setTab(\"income\"),\n          },\n        ]}\n      />\n\n      {tab === \"bank\" && <Bank {...props} />}\n      {tab === \"swissBank\" && <SwissBank {...props} />}\n      {tab === \"donate\" && <Donate {...props} />}\n      {tab === \"income\" && <Income {...props} />}\n    </View>\n  );\n};\nexport default AllBanks;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Image, ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst Bomb = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bombs, setBombs] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"bomb\", {\n      loginToken: device.loginToken,\n      bombs,\n      type,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  const airplanes = [\n    \"\",\n    \"Fokker\",\n    \"Fleet\",\n    \"Havilland\",\n    \"Cessna\",\n    \"Douglas\",\n    \"Lear Jet\",\n    \"Raket\",\n  ];\n\n  const selectType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = Object.keys(typeStrings).map(\n      (type) =>\n        `${typeStrings[type]} (${city[`${type}Damage`]}% ${getText(\n          \"damage\"\n        )}, €${numberFormat(city[`${type}Profit`])} ${getText(\"profit\")})`\n    );\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex !== options.length - 1) {\n          setType(Object.keys(typeStrings)[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {\n        <>\n          <Image source={require(\"../../assets/bombarderen.jpg\")} />\n          <Text style={{ color: theme.primaryText }}>\n            {me?.airplane === 0\n              ? getText(\"bombNoAirplane\")\n              : getText(\n                  \"bombAirplaneText\",\n                  airplanes[me?.airplane],\n                  me?.airplane * 5\n                )}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <T style={{ marginTop: 15 }}>{getText(\"bombs\")}</T>\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bombs}\n            onChangeText={(x) => setBombs(x)}\n            style={style(theme).textInput}\n          />\n\n          <T style={{ marginVertical: 15 }}>{getText(\"property\")}</T>\n          <Button\n            theme={theme}\n            onPress={selectType}\n            title={type ? typeStrings[type] : getText(\"whichProperty\")}\n          />\n\n          {type ? (\n            <T>\n              {getText(\n                \"bombInfo\",\n                typeStrings[type],\n                city[`${type}Damage`],\n                numberFormat(city[`${type}Profit`]),\n                city[`${type}Owner`] || `(Niemand)`\n              )}\n            </T>\n          ) : null}\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button\n            style={{ marginTop: 15 }}\n            theme={theme}\n            title={getText(\"bombAction\")}\n            onPress={submit}\n          />\n        </>\n      }\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bomb;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button theme={theme} title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Casino = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"casino\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.casinoOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.casinoOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"casinoInfo2\", city?.casinoProfit)}\n          </Text>\n\n          <Button\n            onPress={() => navigation.navigate(\"Poker\")}\n            theme={theme}\n            title={getText(\"poker\")}\n          />\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.casinoOwner ? (\n                  <T>{city.casinoOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.casinoOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"casino\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.casinoProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Casino;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button\n            onPress={changeName}\n            theme={theme}\n            title={getText(\"change\")}\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n        return false;\n      }\n      return true;\n    }\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as React from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\nconst maxWidth = isBigDevice ? 500 : width;\n\nconst IMAGE_SIZE = 40;\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      members: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      navigation: {\n        state: { params },\n      },\n      screenProps: {\n        device: { loginToken },\n      },\n    } = this.props;\n    this.fetchChat({ scrollToEnd: true });\n    setInterval(() => {\n      this.fetchChat();\n      post(\"setRead\", { loginToken, id: params?.subid });\n    }, 5000);\n  }\n\n  fetchChat = (options) => {\n    const {\n      screenProps: { device },\n      navigation: {\n        state: { params },\n      },\n    } = this.props;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/channelmessage?loginToken=${device.loginToken}&id=${params.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat, isFetching: false }, () => {\n          if (options?.scrollToEnd) {\n            setTimeout(() => {\n              this.flatList.scrollToEnd({ animated: true });\n            }, 200);\n          }\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChat();\n    });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me },\n      navigation,\n    } = this.props;\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.username });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>\n              {item.user?.name ? item.user?.name : item.user?.username}\n            </Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <Text>{item.message}</Text>\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  send = () => {\n    const {\n      screenProps: { device },\n      navigation: {\n        state: { params },\n      },\n    } = this.props;\n    const { image, message, hasEdited } = this.state;\n\n    this.setState({ message: \"\", image: null });\n\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.fetchChat({ scrollToEnd: true });\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { image, message, hasEdited, response } = this.state;\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) =>\n              this.setState({\n                hasEdited: true,\n                image: base64,\n              })\n            }\n          />\n\n          <TextInput\n            onSubmitEditing={this.send}\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={(message) => this.setState({ message })}\n          />\n\n          <TouchableOpacity onPress={this.send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const { chat } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 200 : undefined,\n          }}\n          data={chat}\n          renderItem={this.renderItem}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n          ref={(ref) => (this.flatList = ref)}\n        />\n        {this.renderFooter()}\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default ChatScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { post } from \"../Util\";\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      channelsubs: [],\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChannelsubs();\n\n    setInterval(() => this.fetchChannelsubs(), 5000);\n  }\n\n  fetchChannelsubs = () => {\n    const {\n      screenProps: { device },\n    } = this.props;\n    fetch(\n      `${Constants.SERVER_ADDR}/channelsubs?loginToken=${device.loginToken}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((channelsubs) => {\n        if (channelsubs.response) {\n          this.setState({ response: channelsubs.response });\n        } else {\n          this.setState({ channelsubs });\n        }\n        this.setState({ isFetching: false });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          console.log(\"HAHH\");\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          <View\n            style={{\n              width: 60,\n              height: 60,\n              borderRadius: 30,\n              backgroundColor: \"#CCC\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n          </View>\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20 }}>\n            <T bold>\n              {item.channel.name\n                ? item.channel.name\n                : item.channel.channelsubs.length === 2\n                ? item.channel.channelsubs.find((x) => x.userId !== me?.id)\n                    ?.user.name\n                : \"(RAAAR)\"}\n            </T>\n            {item.lastmessage ? <T>{item.lastmessage}</T> : null}\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const { navigation } = this.props;\n    const { channelsubs } = this.state;\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          data={channelsubs}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n          refreshControl={\n            <RefreshControl\n              refreshing={this.state.isFetching}\n              onRefresh={this.onRefresh}\n            />\n          }\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default ChatScreen;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    setInterval(() => this.getChat(), 5000);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          theme={theme}\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button theme={theme} onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  Image,\n  Linking,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nfunction Footer({ navigation, screenProps: { me } }) {\n  const getText = getTextFunction(me?.locale);\n\n  const theme = useSelector((state) => state.device.theme);\n  const [text, setText] = useState(\"\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmastercrimez.com%2F#%2FAccomplice%2F?accomplice=${me?.name}`;\n\n  const copy = () => {\n    Clipboard.setString(url);\n    setText(\"Gekopiëerd naar klembord\");\n  };\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 10 }}>\n        <T bold>{getText(\"footerInviteFriends\")}</T>\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"footerInviteText\")}</T>\n          <View style={{ flexDirection: \"row\" }}>\n            <TextInput\n              value={url}\n              style={{\n                color: theme.secondaryText,\n                backgroundColor: theme.secondary,\n                height: 35,\n                borderRadius: 10,\n                paddingHorizontal: 10,\n                width: 200,\n              }}\n              onFocus={copy}\n            />\n            <Button\n              theme={theme}\n              title={getText(\"footerCopy\")}\n              onPress={copy}\n            />\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <T>{getText(\"footerShare\")}</T>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(facebookShareUrl);\n              }}\n            >\n              <View\n                style={{\n                  marginLeft: 20,\n                  backgroundColor: \"#3b5998\",\n                  width: 40,\n                  height: 40,\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n              </View>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(\n                  `whatsapp://send?text=${getText(\"footerWhatsappText\", url)}`\n                );\n              }}\n            >\n              <Image\n                source={require(\"../../assets/whatsapp.png\")}\n                style={{ width: 55, height: 55 }}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"footerFollowUs\")}</T>\n        <TouchableOpacity\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.facebook.com/Mastercrimez-100872595072798\"\n            );\n          }}\n        >\n          <View\n            style={{\n              marginLeft: 20,\n              backgroundColor: \"#3b5998\",\n              width: 40,\n              height: 40,\n              borderRadius: 20,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\"https://www.instagram.com/mastercrimez.nl/\");\n          }}\n        >\n          <Image\n            source={require(\"../../assets/instagram.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://open.spotify.com/playlist/5n5j78gTXOM9h2SOdz0Ay5?si=9gBkeObkTXaqFZxHLFutIA\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/spotify.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.youtube.com/channel/UCGqGRq-iNxXdLrMx9AlD7qw\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/youtube.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={{ height: 20 }} />\n\n      <Text style={{ color: theme.primaryText }}>\n        &copy; MasterCrimeZ 2006-{new Date().getFullYear()}\n      </Text>\n    </View>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","const { Platform, Linking, View, Text } = require(\"react-native\");\nimport React from \"react\";\nimport Constants from \"../Constants\";\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nconst DownloadApp = () => {\n  if (getMobileOperatingSystem() === \"android\") {\n    console.log(\"is android\");\n    window.location.replace(Constants.ANDROID_APP_URL);\n  }\n\n  if (getMobileOperatingSystem() === \"ios\") {\n    console.log(\"is ios\");\n    window.location.replace(Constants.IOS_APP_URL);\n  }\n\n  console.log(getMobileOperatingSystem());\n\n  return (\n    <View>\n      <Text>Download the app!</Text>\n    </View>\n  );\n};\nexport default DownloadApp;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n        <TextInput\n          multiline\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          numberOfLines={4}\n          style={{ ...style(device.theme).textInput, height: 150 }}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n                <T>{response.message}</T>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={style(device.theme).textInput}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            placeholder={getText(\"react\")}\n            value={this.state.message}\n            onChangeText={(message) => this.setState({ message })}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  const postGangCreate = async () => {\n    const { response } = await post(\"gangCreate\", {\n      name,\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <TextInput\n        value={name}\n        onChangeText={setName}\n        style={style(theme).textInput}\n        placeholder=\"Name\"\n        placeholderTextColor={theme.secondaryTextSoft}\n      />\n      <Button\n        onPress={postGangCreate}\n        title={getText(\"gangCreateCTA\")}\n        theme={theme}\n      />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 100;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState([]);\n\n  const getGangs = async () => {\n    setLoading(true);\n    const { gangs } = await get(\"gangs\");\n    setLoading(false);\n    setResponse(gangs);\n  };\n\n  doOnce(getGangs);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      <FlatList\n        refreshing={loading}\n        onRefresh={getGangs}\n        data={response}\n        numColumns={Math.floor(width / (SIZE + MARGIN * 2))}\n        keyExtractor={(item, index) => `index${index}`}\n        renderItem={({ item, index }) => {\n          const navigate = () =>\n            navigation.navigate(\"Gang\", { name: item.name });\n          return (\n            <TouchableOpacity onPress={navigate} style={{ margin: MARGIN }}>\n              {item.thumbnail ? (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + \"/\" + item.thumbnail }}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              )}\n              <T>\n                {getText(\"name\")}: {item.name}\n              </T>\n              <T>\n                {getText(\"members\")}: {item.members}\n              </T>\n              <T>\n                {getText(\"bank\")}: €{numberFormat(item.bank)},-\n              </T>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      this.fetchGroups();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* Show all people with isHacker set to true */}\n      <Image\n        source={require(\"../../assets/hacker.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"hackersInfo\")}</T>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { Image, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"RLD\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.rldOwner ? (\n                    <T>{city.rldOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.rldOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"rld\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city.rldProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const number = Math.ceil(Math.random() * 60);\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Image\n                style={{ width: 100, height: 100 }}\n                source={{\n                  uri:\n                    Constants.SERVER_ADDR + \"/images/female/\" + number + \".gif\",\n                }}\n              />\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { Component } from \"react\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  NativeModules,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport T from \"../components/T\";\nimport { leftMenu, rightMenu } from \"../Menus\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst itemWidth = width / 4;\nconst amountOfItems = Math.floor((height - 200) / itemWidth) * 4;\n\nclass Home extends Component {\n  state = {\n    response: null,\n    activeSlide: 0,\n    notificationsHeader: false,\n  };\n\n  async componentDidMount() {\n    const { device } = this.props.screenProps;\n\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n\n    this.turnOnNotifications();\n    this.sendLanguage();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      this.turnOnNotifications();\n      this.sendLanguage();\n    }\n  };\n\n  sendLanguage = () => {\n    const { device, me } = this.props.screenProps;\n\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  turnOnNotifications = async () => {\n    const { device, me } = this.props.screenProps;\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        this.setState({ notificationsHeader: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      this.setState({ notificationsHeader: false });\n    }\n  };\n\n  _renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginVertical: 15,\n        }}\n      >\n        {item.map((menu, index) => {\n          const TheIcon = Icon[menu.iconType];\n          return (\n            <View\n              key={`i${index}`}\n              style={{ width: itemWidth, alignItems: \"center\" }}\n            >\n              <TouchableOpacity\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"#000\",\n                  backgroundColor: theme.secondary,\n                  borderRadius: 10,\n                  width: itemWidth - 25,\n                  height: itemWidth - 25,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={(e) => {\n                  navigation.navigate(menu.to);\n\n                  const movement = {\n                    action: \"App_Menu_\" + menu.to,\n                    locationX: e.nativeEvent.locationX,\n                    locationY: e.nativeEvent.locationY,\n                    timestamp: Date.now(),\n                  };\n\n                  dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n                }}\n              >\n                {TheIcon && (\n                  <TheIcon\n                    name={menu.icon}\n                    size={(itemWidth - 25) / 2}\n                    color={theme.secondaryText}\n                  />\n                )}\n              </TouchableOpacity>\n              <View>\n                <Text style={{ color: theme.primaryText }}>{menu.text}</Text>\n                {menu.component}\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCarousel() {\n    const {\n      screenProps: { dispatch, me, device },\n    } = this.props;\n\n    const { notificationsHeader } = this.state;\n\n    const menus = [\n      ...leftMenu(me, device.theme),\n      ...rightMenu(me, device.theme),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {notificationsHeader && (\n          <TouchableOpacity\n            onPress={() => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            }}\n          >\n            <View\n              style={{\n                padding: 5,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"exclamationcircleo\"\n                color=\"red\"\n                style={{ marginRight: 10 }}\n              />\n              <T>{getText(\"turnOnNotificationsText\")}</T>\n            </View>\n          </TouchableOpacity>\n        )}\n\n        <Carousel\n          ref={(c) => {\n            this._carousel = c;\n          }}\n          data={[\n            filtered.slice(0, amountOfItems),\n            filtered.slice(amountOfItems, amountOfItems * 2),\n            amountOfItems * 2 > filtered.length\n              ? undefined\n              : filtered.slice(amountOfItems * 2, filtered.length),\n          ].filter((x) => !!x)}\n          renderItem={this._renderItem}\n          sliderWidth={width}\n          onSnapToItem={(index) => this.setState({ activeSlide: index })}\n          itemWidth={width}\n        />\n\n        <Pagination\n          dotsLength={2}\n          activeDotIndex={this.state.activeSlide}\n          // containerStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.75)\" }}\n          dotStyle={{\n            width: 10,\n            height: 10,\n            borderRadius: 5,\n            marginHorizontal: 8,\n            backgroundColor: \"rgba(255, 255, 255, 0.92)\",\n          }}\n          inactiveDotStyle={\n            {\n              // Define styles for inactive dots here\n            }\n          }\n          inactiveDotOpacity={0.4}\n          inactiveDotScale={0.6}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    if (Platform.OS === \"web\") {\n      const handleMouseMove = (event) => {\n        var x = event.clientX;\n        var y = event.clientY;\n        var coor = \"X coords: \" + x + \", Y coords: \" + y;\n        // console.log(\"coor\", coor);\n      };\n\n      document.onmousemove = handleMouseMove;\n\n      return (\n        <Text style={{ color: theme.primaryText }}>\n          {getText(\"welcomeBack\")}\n        </Text>\n      );\n    }\n    return this.renderCarousel();\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"prizes\")}\n          to=\"Prizes\"\n          IconFont=\"AntDesign\"\n          icon=\"star\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 500.000 kogels kosten Hoe dit wordt berekend, is geheim,\n        maar het ligt aan deze factoren: Voor de aanvaller: Het wapen, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels je\n        nodig zult hebben. Voor de verdediger: De verdediging, de moordervaring\n        en de rang. Hoe beter elk van dezen, hoe meer kogels de aanvaller nodig\n        zal hebben. De rang heeft de meeste invloed, daarna het wapen, de\n        verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Huisjesmelkers, Leger des Heils en het Red Light District krijgen 20%\n        van iedereens inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n    this.props.screenProps.reloadCities();\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n                this.fetchMembers();\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, reloadCities, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"jail\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n            marginHorizontal: 15,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"jail\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                paddingHorizontal: 15,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.jailOwner ? (\n                    <Text style={{ color: theme.primaryText }}>\n                      {city.jailOwner}\n                    </Text>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.jailOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"jail\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <Text style={{ color: theme.primaryText }}>\n                  {city.jailProfit}\n                </Text>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListFooterComponent={this.renderCities}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"junkiesObject\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.junkiesOwner ? (\n                    <T>{city.junkiesOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.junkiesOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"junkies\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <View>\n                  <T>{city.junkiesProfit}</T>\n                </View>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({ type: \"SET_LOGGED\", value: true });\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.loginToken });\n\n          this.props.screenProps.reloadMe(responseJson.loginToken);\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = typeStrings[type];\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction, getUserColor } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\nclass Members extends Component {\n  constructor(props) {\n    super(props);\n\n    const getText = getTextFunction(props.screenProps.me?.locale);\n    this.state = {\n      members: [],\n      search: null,\n      orderBy: {\n        key: \"onlineAt\",\n        title: getText(\"online\"),\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { device } = this.props.screenProps;\n\n    this.fetchMembers(this.state.orderBy.key);\n\n    const order = this.props.navigation.state.params?.order;\n    if (order) {\n      this.setState({ orderBy: orders[order] });\n      this.fetchMembers(orders[order].key);\n    }\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        this.setState({ members });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const { navigation } = this.props;\n\n    const orderKey = this.state.orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    const color = getUserColor(item, this.props.screenProps.device.theme);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate(\"Profile\", { name: item.name });\n          }}\n        >\n          <T style={{ color }}>{item.name}</T>\n        </TouchableOpacity>\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  openActionSheet = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          this.setState({ orderBy: orders[buttonIndex] });\n          this.fetchMembers(orders[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  renderHeader = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const { members, search } = this.state;\n\n    return (\n      <View\n        style={{ backgroundColor: this.props.screenProps.device.theme.primary }}\n      >\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"sort\")}\n          onPress={() => this.openActionSheet()}\n          icon=\"filter\"\n          font=\"FontAwesome\"\n          style={{ marginTop: 20, marginHorizontal: 10 }}\n        />\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: this.props.screenProps.device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={\n              this.props.screenProps.device.theme.secondaryTextSoft\n            }\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: this.props.screenProps.device.theme.secondaryText,\n            }}\n            onChangeText={(search) => this.setState({ search })}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={this.props.screenProps.device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: this.props.screenProps.device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{this.state.orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { members, search } = this.state;\n\n    const searchedMembers = members.filter((m) =>\n      search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n    );\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 200 : undefined,\n          }}\n          ListHeaderComponent={this.renderHeader}\n          data={searchedMembers}\n          renderItem={this.renderItem}\n          ListFooterComponent={this.renderFooter}\n        />\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Members);\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getMessages();\n\n    const id = this.props.navigation.state.params?.id;\n\n    if (id) {\n      this.fetchReadMessage(id);\n      this.setState({ readMessage: id });\n    }\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getMessages() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/messages?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ messages: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { to, message } = this.state;\n    if (!to || !message) {\n      return;\n    }\n    fetch(`${Constants.SERVER_ADDR}/message`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        to,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response, message: null, to: null });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadMessage = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/readMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        //nothing to be done\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  deleteMessage = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/deleteMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.getMessages();\n        this.setState({ readMessage: null });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? (\n          <View>\n            <T>{this.state.response.response}</T>\n          </View>\n        ) : null}\n\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"to\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          multiline\n          numberOfLines={4}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={[\n            style(device.theme).textInput,\n            {\n              height: 200,\n              width: \"100%\",\n            },\n          ]}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderMessages() {\n    return (\n      <FlatList\n        style={{ width: \"100%\" }}\n        data={this.state.messages?.messages}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              style={{ paddingVertical: 15 }}\n              onPress={() => {\n                this.fetchReadMessage(item.id);\n                this.setState({ readMessage: item.id });\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <T style={{ fontWeight: item.read ? undefined : \"bold\" }}>\n                  {item.fromName}\n                </T>\n                <T style={{ fontWeight: item.read ? undefined : \"bold\" }}>\n                  ({moment(item.createdAt).format(\"DD-MM-YYYY HH:mm\")})\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        ItemSeparatorComponent={() => (\n          <View style={{ height: 1, width: \"100%\", backgroundColor: \"#000\" }} />\n        )}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readMessage = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const item = this.state.messages?.messages.find(\n      (m) => m.id === this.state.readMessage\n    );\n    return item ? (\n      <ScrollView style={{ marginVertical: 20 }}>\n        <T>\n          {getText(\"from\")}: {item.fromName}\n        </T>\n        <T>\n          {getText(\"sent\")}: {moment(item.createdAt).format(\"DD-MM-YYYY HH:mm\")}\n        </T>\n        <T style={{ marginTop: 10 }}>{item.message}</T>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"back\")}\n            icon=\"arrow-back\"\n            font=\"MaterialIcons\"\n            onPress={() => {\n              this.setState({ readMessage: null });\n              this.getMessages();\n            }}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"reply\")}\n            icon=\"reply\"\n            font=\"FontAwesome\"\n            onPress={() =>\n              this.setState({ newMessage: true, to: item.fromName })\n            }\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"delete\")}\n            icon=\"delete\"\n            font=\"MaterialIcons\"\n            onPress={() => this.deleteMessage(item.id)}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"messageNotFound\")}</T>\n    );\n  };\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newMessage, readMessage } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"messages\"),\n              isActive: this.state.newMessage === false,\n              onPress: () =>\n                this.setState({ newMessage: false, readMessage: false }),\n            },\n            {\n              title: getText(\"newMessage\"),\n              isActive: this.state.newMessage,\n              onPress: () => this.setState({ newMessage: true }),\n            },\n          ]}\n        />\n\n        <View style={{ margin: 20, flex: 1 }}>\n          {newMessage\n            ? this.renderNew()\n            : readMessage\n            ? this.readMessage()\n            : this.renderMessages()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction } from \"../Util\";\nconst properties = [\n  {\n    name: \"bulletFactory\",\n  },\n  {\n    name: \"casino\",\n  },\n  {\n    name: \"rld\",\n  },\n  {\n    name: \"landlord\",\n  },\n  {\n    name: \"junkies\",\n  },\n  {\n    name: \"weaponShop\",\n  },\n  {\n    name: \"airport\",\n  },\n  {\n    name: \"estateAgent\",\n  },\n  {\n    name: \"garage\",\n  },\n  {\n    name: \"jail\",\n  },\n  {\n    name: \"bank\",\n  },\n];\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadCities,\n    reloadMe,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = typeStrings[property];\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  <Button\n                    key={`index${index}${property}`}\n                    style={{ marginVertical: 15 }}\n                    theme={theme}\n                    title={getText(\"manage\")}\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: property,\n                        city: city.city,\n                      })\n                    }\n                  />\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default MyObjects;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    photo: null,\n    images: [],\n    selectedImage: null,\n  };\n\n  componentDidMount() {\n    this.getPermissionAsync();\n    this.fetchImages();\n\n    const { me } = this.props.screenProps;\n    console.log(\"bio\", me?.bio);\n    this.setState({ bio: me?.bio });\n  }\n\n  fetchImages = () => {\n    const { device, me } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${me.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        this.setState({ images });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  handleUploadPhoto = () => {\n    const { device, me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: this.state.photo.uri,\n        token: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.fetchImages();\n        alert(getText(\"success\"));\n        this.setState({ photo: null });\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        this.setState({ photo: result }, () => this.handleUploadPhoto());\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  renderItem = ({ item, index }) => {\n    const uri = Constants.SERVER_ADDR + \"/\" + item.image;\n    return (\n      <TouchableOpacity\n        onPress={() => this.setState({ selectedImage: item.id })}\n      >\n        <View>\n          <Image\n            source={{ uri }}\n            style={{\n              width: 200,\n              height: 200,\n              ...(this.state.selectedImage === item.id\n                ? { borderWidth: 2, borderColor: \"black\" }\n                : {}),\n            }}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        title={getText(\"delete\")}\n        onPress={() => {\n          if (this.state.selectedImage) {\n            fetch(`${Constants.SERVER_ADDR}/deleteimage`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                id: this.state.selectedImage,\n              }),\n            })\n              .then((response) => response.json())\n              .then(({ images }) => {\n                this.fetchImages();\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } else {\n            alert(getText(\"noPictureSelected\"));\n          }\n        }}\n      />\n    );\n  };\n\n  render() {\n    const { photo, images, bio } = this.state;\n    const {\n      device,\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: 20,\n        }}\n      >\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={{ ...style(theme).textInput, width: \"100%\", height: 200 }}\n          multiline={true}\n          numberOfLines={4}\n          value={bio}\n          onChangeText={(bio) => this.setState({ bio })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                bio: this.state.bio,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                alert(getText(\"success\"));\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"choosePicture\")}\n          onPress={this.handleChoosePhoto}\n        />\n\n        <FlatList\n          data={images}\n          extraData={this.state.selectedImage}\n          // contentContainerStyle={{ flexDirection: \"row\" }}\n          numColumns={isSmallDevice ? 1 : 3}\n          renderItem={this.renderItem}\n          keyExtractor={(item) => `id${item.id}`}\n          ListFooterComponent={this.renderFooter}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/oc`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"doOC\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      <T>AlCapone</T>\n      <T>WebMaster</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"policeBulletBank\")}:\n      </T>\n      <T>11.000.000</T>\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\n\n/**\n * A Privacy page\n */\nconst Prizes = ({ navigation, screenProps: { me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <H1>{getText(\"prizes\")}</H1>\n\n        <T>{getText(\"currentlyNoPrizes\")}</T>\n        {/* <T>{`\nAan het eind van de prijzenronde winnen de spelers met de meeste gamepoints.\nHet eind van deze ronde is zondag 31 mei 2020.\n\n#1: 100 euro\n#2: 60 euro\n#3: 40 euro`}</T> */}\n      </View>\n    </View>\n  );\n};\nexport default Prizes;\n","import React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n} from \"../Util\";\n\nclass ProfileScreen extends React.Component {\n  state = {\n    profile: null,\n    images: [],\n    loading: true,\n  };\n  componentDidMount() {\n    const { navigation } = this.props;\n\n    const name = navigation.state.params.name;\n\n    this.getProfile(name);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { navigation } = this.props;\n\n    const name = navigation.state.params.name;\n\n    if (\n      prevProps.navigation.state.params !== this.props.navigation.state.params\n    ) {\n      this.getProfile(name);\n    }\n  }\n\n  getProfile(name) {\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        this.setState({ profile: responseJson, loading: false }, () => {\n          this.fetchImages();\n        });\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  fetchImages = () => {\n    const { device } = this.props.screenProps;\n    const { profile } = this.state;\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${profile?.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        this.setState({ images });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    const { profile, loading, images } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    if (loading) {\n      return <ActivityIndicator />;\n    }\n\n    if (!profile) {\n      return <T>{getText(\"personDoesntExist\")}</T>;\n    }\n\n    const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n    const points = profile.accomplices?.reduce(\n      (total, accomplice) => total + accomplice.rank,\n      0\n    );\n\n    const color = getUserColor(profile, this.props.screenProps.device.theme);\n\n    const uri = Constants.SERVER_ADDR + \"/\" + images?.[0]?.image;\n    const hasImage = !!images?.[0]?.image;\n\n    return (\n      <ScrollView>\n        <View style={{ justifyContent: \"center\" }}>\n          <View\n            style={{\n              backgroundColor: \"#444\",\n              borderRadius: 10,\n              margin: 20,\n              padding: 20,\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n            {hasImage ? (\n              <View>\n                <Image\n                  source={{ uri }}\n                  style={{\n                    width: \"100%\",\n                    height: 400,\n                  }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n            ) : null}\n\n            {this.keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n            {this.keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n            {this.keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n            {this.keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n            {this.keyValue(\n              getText(\"strength\"),\n              getStrength(profile?.strength, \"both\")\n            )}\n            {this.keyValue(getText(\"health\"), `${profile?.health}%`)}\n            {this.keyValue(getText(\"weed\"), profile?.wiet)}\n            {this.keyValue(getText(\"junkies\"), profile?.junkies)}\n            {this.keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n            {profile?.accomplices?.length > 0 ? (\n              <>\n                <T style={{ fontWeight: \"bold\", marginBottom: 15 }}>\n                  {getText(\"gangOfX\", profile?.name, points)}\n                </T>\n                {profile.accomplices.map((accomplice) => {\n                  return this.keyValue(\n                    accomplice.name,\n                    getRank(accomplice.rank, \"both\")\n                  );\n                })}\n              </>\n            ) : null}\n            <View style={styles.row}>\n              <Button\n                theme={theme}\n                title={getText(\"chat\")}\n                onPress={async () => {\n                  const { id } = await get(\n                    `pm?loginToken=${loginToken}&userId=${profile.id}`\n                  );\n\n                  navigation.navigate(\"Channel\", { id });\n                }}\n              />\n\n              <Button\n                theme={theme}\n                title={getText(\"sendMessage\")}\n                onPress={() =>\n                  navigation.navigate(\"Messages\", {\n                    state: { to: profile.name, newMessage: true },\n                  })\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"rob\")}\n                onPress={() =>\n                  navigation.navigate(\"Rob\", {\n                    name: profile.name,\n                  })\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"attack\")}\n                onPress={() =>\n                  navigation.navigate(\"Kill\", {\n                    name: profile.name,\n                  })\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"donate\")}\n                onPress={() =>\n                  navigation.navigate(\"Donate\", {\n                    to: profile.name,\n                  })\n                }\n              />\n            </View>\n          </View>\n\n          <View style={{ marginVertical: 20 }}>\n            <T>{profile?.bio}</T>\n          </View>\n\n          <View>\n            {images.slice(1, images.length).map((image) => {\n              const uri = Constants.SERVER_ADDR + \"/\" + image.image;\n              return (\n                <View>\n                  <Image\n                    source={{ uri }}\n                    style={{\n                      width: \"100%\",\n                      height: 400,\n                    }}\n                    resizeMode=\"contain\"\n                  />\n                </View>\n              );\n            })}\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      console.log(\"FETCH GARAGE\");\n      this.fetchGarage();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import React, { Component } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { areYouSure, getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView>\n        {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n        {__DEV__ && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title={getText(\"purge\")}\n            onPress={() =>\n              areYouSure(() => {\n                dispatch({ type: \"PURGE\" });\n              })\n            }\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          IconFont=\"Entypo\"\n          icon=\"phone\"\n          navigation={navigation}\n          title={getText(\"verifyPhone\")}\n          to=\"VerifyPhone\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuChangePassword\")}\n          to=\"ChangePassword\"\n          IconFont=\"MaterialCommunityIcons\"\n          icon=\"onepassword\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"signupEmail\")}\n          to=\"SignupEmail\"\n          IconFont=\"Entypo\"\n          icon=\"email\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"changeName\")}\n          to=\"ChangeName\"\n          IconFont=\"FontAwesome\"\n          icon=\"bank\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"layout\")}\n          to=\"Theme\"\n          IconFont=\"Ionicons\"\n          icon=\"ios-color-palette\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuLogin\")}\n          to=\"Login\"\n          IconFont=\"Entypo\"\n          icon=\"login\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuMyProfile\")}\n          to=\"MyProfile\"\n          IconFont=\"AntDesign\"\n          icon=\"user\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuBackfire\")}\n          to=\"Backfire\"\n          IconFont=\"MaterialCommunityIcons\"\n          icon=\"pistol\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"menuAccomplice\")}\n          to=\"Accomplice\"\n          IconFont=\"FontAwesome\"\n          icon=\"universal-access\"\n        />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Status;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(\"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const { type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const propertyKey =\n      type === \"weapon\"\n        ? \"weaponShop\"\n        : type === \"protection\"\n        ? \"weaponShop\"\n        : type === \"airplane\"\n        ? \"airport\"\n        : type === \"home\"\n        ? \"estateAgent\"\n        : \"garage\";\n\n    const ownerKey = `${propertyKey}Owner`;\n    const profitKey = `${propertyKey}Profit`;\n\n    const propertyString =\n      type === \"weapon\"\n        ? getText(\"weaponShop\")\n        : type === \"protection\"\n        ? getText(\"weaponShop\")\n        : type === \"airplane\"\n        ? getText(\"airport\")\n        : type === \"home\"\n        ? getText(\"estateAgent\")\n        : getText(\"garage\");\n    return (\n      <View style={{ margin: 15 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {propertyString}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city[ownerKey] ? (\n                    <T>{city[ownerKey]}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city[ownerKey] === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: propertyKey,\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city[profitKey]}</T>\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    return (\n      <ScrollView>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"weapon\", getText(\"weapons\"), 1)}\n          {this.renderMenu(\"protection\", getText(\"protection\"), 2)}\n          {this.renderMenu(\"airplane\", getText(\"airplane\"), 1)}\n          {this.renderMenu(\"home\", getText(\"homeShop\"), 1)}\n          {this.renderMenu(\"garage\", getText(\"garage\"), 1)}\n        </View>\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n            {this.renderCities()}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, numberFormat } from \"../Util\";\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nclass Status extends Component {\n  state = {\n    stats: [],\n  };\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        this.setState({ stats });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {this.state.stats?.map((stat, index) => {\n            const key = Object.keys(stat)[0];\n            const values = Object.values(stat)[0];\n            return (\n              <View key={`index${index}`} style={{ width: 300, margin: 20 }}>\n                <T style={{ fontWeight: \"bold\" }}>{keyNames[key]}</T>\n                {values instanceof Array ? (\n                  values.map((value, i) => {\n                    let v = value[key];\n                    if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                    if (key === \"createdAt\")\n                      v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                    if (key === \"strength\") v = getStrength(v, \"both\");\n                    if (key === \"rank\") v = getRank(v, \"both\");\n\n                    return (\n                      <View\n                        key={`stat${key}-${i}`}\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{value.name}: </T>\n                        <T key={`stat${key}-${i}`}>{v}</T>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{values}</T>\n                )}\n              </View>\n            );\n          })}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Status;\n","import React, { Component } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n        {me?.protectionAt > Date.now() ? (\n          <TouchableOpacity\n            onPress={() => {\n              //haalweg\n              fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ token: device.loginToken }),\n              })\n                .then((response) => response.json())\n                .then(async ({ response }) => {\n                  this.setState({ response });\n                  reloadMe(device.loginToken);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            <View>\n              <T>{getText(\"protectionInfo\", uur)}</T>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n\n        <Footer screenProps={screenProps} />\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={seconds}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 150, height: 110 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListHeaderComponent={renderHeader}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Origineel\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({ type: \"SET_LOGGED\", value: true });\n          dispatch({ type: \"SET_LOGIN_TOKEN\", value: responseJson.token });\n\n          reloadMe(responseJson.token);\n\n          navigation.popToTop();\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import React, { Component } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass SuperMessage extends Component {\n  state = {\n    response: null,\n    message: null,\n  };\n  renderForm() {\n    const { me, device } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1, padding: 15 }}>\n        <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n\n        <TextInput\n          style={{ ...style(device.theme).textInput, height: 200 }}\n          placeholder={getText(\"message\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          multiline\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </ScrollView>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    return this.renderForm();\n  }\n}\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"landlord\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.landlordOwner ? (\n                    <T>{city.landlordOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.landlordOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"landlord\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <T>{city.landlordProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(0);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", { work: selected });\n    setResponse(response);\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {options.map((option, index) => {\n          return (\n            <TouchableOpacity\n              onPress={() => setSelected(index)}\n              key={`key${index}`}\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                paddingVertical: 10,\n                paddingHorizontal: 10,\n                borderRadius: 5,\n              }}\n            >\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <Checkbox active={selected === index} />\n                <T style={{ marginLeft: 10 }}>{option.title}</T>\n              </View>\n              <T>\n                {option.hours} {getText(\"hours\")}\n              </T>\n            </TouchableOpacity>\n          );\n        })}\n\n        <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n      </View>\n    </View>\n  );\n};\n\nexport default Work;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = { fetchMe, fetchCities, fetchStreetraces };\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n}\n\nexport default mySaga;\n","import { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\n\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  movements: Movement[],\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: false,\n  theme: DEFAULT_THEME,\n  foregrounded: 0,\n  movements: [],\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      return action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\"device\", \"me\", \"streetraces\", \"cities\"],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as StoreReview from \"expo-store-review\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createStackNavigator } from \"react-navigation-stack\";\n// import { loadReCaptcha } from \"react-recaptcha-v3\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport Dead from \"./components/Dead\";\nimport Fly from \"./components/Fly\";\nimport Header from \"./components/Header\";\nimport Jail from \"./components/Jail\";\nimport Constants from \"./Constants\";\nimport { KeyboardAvoidingSpace } from \"./KeyboardAvoidingSpace\";\nimport { leftMenu, rightMenu } from \"./Menus\";\nimport Accomplice from \"./screens/Accomplice\";\nimport AdminEmail from \"./screens/AdminEmail\";\nimport AdminUserWatch from \"./screens/AdminUserWatch\";\nimport Airport from \"./screens/Airport\";\nimport AllBanks from \"./screens/AllBanks\";\nimport Backfire from \"./screens/Backfire\";\nimport Bank from \"./screens/Bank\";\nimport Bomb from \"./screens/Bomb\";\nimport Bulletfactory from \"./screens/Bulletfactory\";\nimport Bunker from \"./screens/Bunker\";\nimport Casino from \"./screens/Casino\";\nimport ChangeName from \"./screens/ChangeName\";\nimport ChangePassword from \"./screens/ChangePassword\";\nimport Channel from \"./screens/Channel\";\nimport Channels from \"./screens/Channels\";\nimport Chat from \"./screens/Chat\";\nimport Contribute from \"./screens/Contribute\";\nimport CreateStreetrace from \"./screens/CreateStreetrace\";\nimport Crimes from \"./screens/Crimes\";\nimport Donate from \"./screens/Donate\";\nimport DownloadApp from \"./screens/DownloadApp\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Forum from \"./screens/Forum\";\nimport Gang from \"./screens/Gang\";\nimport GangAchievements from \"./screens/GangAchievements\";\nimport GangCreate from \"./screens/GangCreate\";\nimport GangOc from \"./screens/GangOc\";\nimport Gangs from \"./screens/Gangs\";\nimport GangSettings from \"./screens/GangSettings\";\nimport GangShop from \"./screens/GangShop\";\nimport Garage from \"./screens/Garage\";\nimport Gym from \"./screens/Gym\";\nimport Hackers from \"./screens/Hackers\";\nimport Hoeren from \"./screens/Hoeren\";\nimport Home from \"./screens/Home\";\nimport Hospital from \"./screens/Hospital\";\nimport Income from \"./screens/Income\";\nimport Info from \"./screens/Info\";\nimport InfoGame from \"./screens/InfoGame\";\nimport InfoRules from \"./screens/InfoRules\";\nimport JailScreen from \"./screens/Jail\";\nimport Junkies from \"./screens/Junkies\";\nimport Kill from \"./screens/Kill\";\nimport Login from \"./screens/Login\";\nimport ManageObject from \"./screens/ManageObject\";\nimport Members from \"./screens/Members\";\nimport Messages from \"./screens/Messages\";\nimport MollieComplete from \"./screens/MollieComplete\";\nimport MyObjects from \"./screens/MyObjects\";\nimport MyProfile from \"./screens/MyProfile\";\nimport OrganisedCrime from \"./screens/OrganisedCrime\";\nimport Poker from \"./screens/Poker\";\nimport Police from \"./screens/Police\";\nimport Privacy from \"./screens/Privacy\";\nimport Prizes from \"./screens/Prizes\";\nimport Profile from \"./screens/Profile\";\nimport Racecars from \"./screens/Racecars\";\nimport RecoverPassword from \"./screens/RecoverPassword\";\nimport Rob from \"./screens/Rob\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport SignupEmail from \"./screens/SignupEmail\";\nimport SignupEmail2 from \"./screens/SignupEmail2\";\nimport Stats from \"./screens/Stats\";\nimport Status from \"./screens/Status\";\nimport StealCar from \"./screens/StealCar\";\nimport Streetrace from \"./screens/Streetrace\";\nimport SwissBank from \"./screens/SwissBank\";\nimport Theme from \"./screens/Theme\";\nimport VerifyPhone from \"./screens/VerifyPhone\";\nimport VerifyPhoneCode from \"./screens/VerifyPhoneCode\";\nimport VIP from \"./screens/VIP\";\nimport Wiet from \"./screens/Wiet\";\nimport Work from \"./screens/Work\";\nimport { persistor, store } from \"./Store\";\nimport { getTextFunction, post } from \"./Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    //iPad|\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nexport const renderMenu = (item, index, navigation, theme: Theme, dispatch) => {\n  const isHeaderStyle = item.isHeader\n    ? {\n        marginTop: 20,\n        backgroundColor: theme.secondary,\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderTopWidth: 1,\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderLeftColor: \"black\",\n        borderRightColor: \"black\",\n        borderTopColor: \"black\",\n        padding: 10,\n      }\n    : {};\n  return (\n    <TouchableOpacity\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <View\n        style={{\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n          borderBottomColor: \"black\",\n          borderLeftWidth: 1,\n          borderRightWidth: 1,\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n\n          borderBottomWidth: 1,\n          marginHorizontal: 5,\n          padding: 3,\n          flexDirection: \"row\",\n          ...isHeaderStyle,\n        }}\n      >\n        <Text\n          style={{\n            color: item.isHeader ? theme.secondaryText : theme.primaryText,\n            textAlign: item.isHeader ? \"center\" : undefined,\n          }}\n        >\n          {item.text}\n        </Text>\n        {item.component}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport const renderDrawerMenu = (item, index, navigation, theme, dispatch) => {\n  const isHeaderStyle = item.isHeader\n    ? {\n        marginTop: 20,\n        backgroundColor: theme.secondary,\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderTopWidth: 1,\n        borderTopColor: \"black\",\n        padding: 10,\n      }\n    : { backgroundColor: theme.primary };\n  return (\n    <TouchableOpacity\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <View\n        style={{\n          borderLeftColor: \"black\",\n          borderRightColor: \"black\",\n          borderBottomColor: \"black\",\n          borderBottomWidth: 1,\n          marginHorizontal: 5,\n          flexDirection: \"row\",\n          padding: 20,\n          ...isHeaderStyle,\n        }}\n      >\n        <Text\n          style={{\n            textAlign: item.isHeader ? \"center\" : undefined,\n            color: item.isHeader ? theme.secondaryText : theme.primaryText,\n          }}\n        >\n          {item.text}\n        </Text>\n        {item.component}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Layout = ({ screenProps, navigation, children }) => {\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    navigation.navigate(\"Messages\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      screenProps.dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (screenProps.device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const { me, device, dispatch } = screenProps;\n\n  if (Platform.OS === \"web\") {\n    if (getMobileOperatingSystem() === \"android\") {\n      console.log(\"is android\");\n      window.location.replace(Constants.ANDROID_APP_URL);\n    }\n\n    if (getMobileOperatingSystem() === \"ios\") {\n      console.log(\"is ios\");\n      window.location.replace(Constants.IOS_APP_URL);\n    }\n  }\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Messages\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <SafeAreaView\n      style={{\n        flexDirection: \"row\",\n        height: \"100%\",\n        backgroundColor: device.theme.primary,\n      }}\n    >\n      {Platform.OS === \"web\" && (\n        <Helmet>\n          <title>MasterCrimeZ - The Ultimate Game</title>\n          <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n          <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n          <meta property=\"og:type\" content=\"article\" />\n          <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n          <meta\n            property=\"og:description\"\n            content={getText(\"metaOgDescription\")}\n          />\n          <meta property=\"og:image\" content=\"\" />\n        </Helmet>\n      )}\n      {isSmallDevice ? null : (\n        <View style={{ width: 200 }}>\n          {leftMenu(me, device.theme).map((item, index) =>\n            renderMenu(item, index, navigation, device.theme, dispatch)\n          )}\n        </View>\n      )}\n\n      <View style={{ flex: 1 }}>\n        <Header navigation={navigation} device={device} me={me} />\n\n        {me?.reizenAt > Date.now() && !skip ? (\n          <Fly screenProps={screenProps} navigation={navigation} />\n        ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n          <Dead screenProps={screenProps} navigation={navigation} />\n        ) : me?.jailAt > Date.now() && !skip ? (\n          <Jail screenProps={screenProps} navigation={navigation} />\n        ) : (\n          <View style={{ flex: 1 }}>{children}</View>\n        )}\n        {Platform.OS === \"ios\" && <KeyboardAvoidingSpace />}\n      </View>\n      {isSmallDevice ? null : (\n        <View style={{ width: 200 }}>\n          {rightMenu(me, device.theme).map((item, index) =>\n            renderMenu(item, index, navigation, device.theme, dispatch)\n          )}\n        </View>\n      )}\n    </SafeAreaView>\n  );\n};\nexport const withLayout = (Component) => (props) => (\n  <Layout {...props}>\n    <Component {...props} />\n  </Layout>\n);\n\nconst CustomDrawerContentComponent = (props) => {\n  const {\n    navigation,\n    screenProps: { me, device, dispatch },\n  } = props;\n\n  return (\n    <ScrollView>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        forceInset={{ top: \"always\", horizontal: \"never\" }}\n      >\n        {leftMenu(me, device.theme).map((item, index) =>\n          renderDrawerMenu(item, index, navigation, device.theme, dispatch)\n        )}\n        {rightMenu(me, device.theme).map((item, index) =>\n          renderDrawerMenu(item, index, navigation, device.theme, dispatch)\n        )}\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\n\nconst rightContainer =\n  Platform.OS === \"web\" ? createBrowserApp : createAppContainer;\nconst rightNavigator =\n  Platform.OS === \"web\"\n    ? isSmallDevice\n      ? createDrawerNavigator\n      : createSwitchNavigator\n    : createStackNavigator;\n\nconst Container = rightContainer(\n  rightNavigator(\n    {\n      Home: {\n        screen: withLayout(Home),\n        path: \"\",\n      },\n\n      GangCreate: withLayout(GangCreate),\n\n      Gang: {\n        screen: withLayout(Gang),\n        path: \"Gang/:name\",\n      },\n\n      Gangs: withLayout(Gangs),\n      GangShop: withLayout(GangShop),\n      GangSettings: withLayout(GangSettings),\n      GangAchievements: withLayout(GangAchievements),\n      GangOc: withLayout(GangOc),\n\n      Status: withLayout(Status),\n      Hackers: withLayout(Hackers),\n      Police: withLayout(Police),\n      StealCar: withLayout(StealCar),\n      CreateStreetrace: withLayout(CreateStreetrace),\n      Channels: withLayout(Channels),\n      Channel: withLayout(Channel),\n      AllBanks: withLayout(AllBanks),\n      Poker: withLayout(Poker),\n      Bomb: withLayout(Bomb),\n      SwissBank: withLayout(SwissBank),\n\n      Crimes: withLayout(Crimes),\n      Jail: withLayout(JailScreen),\n      Kill: withLayout(Kill),\n      Rob: withLayout(Rob),\n      // Showroom: withLayout(Showroom),\n      Bank: withLayout(Bank),\n      Shop: withLayout(Shop),\n      Garage: withLayout(Garage),\n      ManageObject: withLayout(ManageObject),\n      MyObjects: withLayout(MyObjects),\n      Racecars: withLayout(Racecars),\n      Backfire: withLayout(Backfire),\n      Accomplice: withLayout(Accomplice),\n      Streetrace: withLayout(Streetrace),\n      Bulletfactory: withLayout(Bulletfactory),\n      Casino: withLayout(Casino),\n      Airport: withLayout(Airport),\n      Members: withLayout(Members),\n      Stats: withLayout(Stats),\n      Messages: withLayout(Messages),\n      Chat: withLayout(Chat),\n      Gym: withLayout(Gym),\n      Wiet: withLayout(Wiet),\n      MollieComplete: withLayout(MollieComplete),\n      OrganisedCrime: withLayout(OrganisedCrime),\n      Junkies: withLayout(Junkies),\n      Hoeren: withLayout(Hoeren),\n      Bunker: withLayout(Bunker),\n      Donate: withLayout(Donate),\n      Hospital: withLayout(Hospital),\n      Income: withLayout(Income),\n      AdminEmail: withLayout(AdminEmail),\n      AdminUserWatch: withLayout(AdminUserWatch),\n      Forum: withLayout(Forum),\n      Theme: withLayout(Theme),\n      DownloadApp: DownloadApp,\n      VIP: withLayout(VIP),\n      Profile: {\n        screen: withLayout(Profile),\n        path: \"Profile/:name\",\n      },\n\n      //SETTINGS\n      Settings: withLayout(Settings),\n      SignupEmail: withLayout(SignupEmail),\n\n      SignupEmail2: {\n        screen: withLayout(SignupEmail2),\n        path: \"SignupEmail2/:token\",\n      },\n\n      ChangeName: withLayout(ChangeName),\n      VerifyPhoneCode: withLayout(VerifyPhoneCode),\n      ForgotPassword: withLayout(ForgotPassword),\n      RecoverPassword: {\n        screen: withLayout(RecoverPassword),\n        path: \"RecoverPassword/:token\",\n      },\n      ChangePassword: {\n        screen: withLayout(ChangePassword),\n      },\n      VerifyPhone: withLayout(VerifyPhone),\n      MyProfile: withLayout(MyProfile),\n      Login: withLayout(Login),\n      Work: withLayout(Work),\n\n      //INFO\n      Info: withLayout(Info),\n      InfoGame: withLayout(InfoGame),\n      InfoRules: withLayout(InfoRules),\n      Privacy: withLayout(Privacy),\n      Contribute: withLayout(Contribute),\n      Prizes: withLayout(Prizes),\n    },\n    {\n      drawerPosition: \"right\",\n      edgeWidth: Platform.OS === \"web\" && isSmallDevice ? 0 : undefined,\n      contentComponent: CustomDrawerContentComponent,\n      unmountInactiveRoutes: true,\n      navigationOptions: {\n        drawerLockMode: \"locked-open\",\n      },\n      defaultNavigationOptions: {\n        headerShown: false,\n      },\n    }\n  ),\n  {\n    history: \"hash\",\n  }\n);\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nclass _RootContainer extends React.Component {\n  async componentDidMount() {\n    const { device, reloadMe, dispatch } = this.props;\n\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n\n    setInterval(() => this.sendMovements(), 60000);\n\n    Linking.addEventListener(\"url\", this.openWebUrl);\n    Linking.getInitialURL().then((url) => this.openWebUrl(url));\n  }\n\n  openWebUrl = (url) => {\n    console.log(\"should open web url here\", url);\n  };\n\n  sendMovements() {\n    const { dispatch, device } = this.props;\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { reloadMe, device } = this.props;\n    //if login or logout happens\n    if (prevProps.device.logged !== this.props.device.logged) {\n      reloadMe(device.loginToken);\n    }\n  }\n\n  render() {\n    const { props } = this;\n\n    return (\n      <ActionSheetProvider>\n        <Container screenProps={{ ...props }} />\n      </ActionSheetProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({ device, me, streetraces, cities }) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, cities };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) =>\n    dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } }),\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <PersistGate persistor={persistor}>\n        <Provider store={store}>\n          <RootContainer />\n        </Provider>\n      </PersistGate>\n    );\n  }\n}\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7be0b9f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bombarderen.3d0c7534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.75e0546a.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.d7c133b0.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.ada3efe7.png\";","var map = {\n\t\"./af\": 292,\n\t\"./af.js\": 292,\n\t\"./ar\": 293,\n\t\"./ar-dz\": 294,\n\t\"./ar-dz.js\": 294,\n\t\"./ar-kw\": 295,\n\t\"./ar-kw.js\": 295,\n\t\"./ar-ly\": 296,\n\t\"./ar-ly.js\": 296,\n\t\"./ar-ma\": 297,\n\t\"./ar-ma.js\": 297,\n\t\"./ar-sa\": 298,\n\t\"./ar-sa.js\": 298,\n\t\"./ar-tn\": 299,\n\t\"./ar-tn.js\": 299,\n\t\"./ar.js\": 293,\n\t\"./az\": 300,\n\t\"./az.js\": 300,\n\t\"./be\": 301,\n\t\"./be.js\": 301,\n\t\"./bg\": 302,\n\t\"./bg.js\": 302,\n\t\"./bm\": 303,\n\t\"./bm.js\": 303,\n\t\"./bn\": 304,\n\t\"./bn.js\": 304,\n\t\"./bo\": 305,\n\t\"./bo.js\": 305,\n\t\"./br\": 306,\n\t\"./br.js\": 306,\n\t\"./bs\": 307,\n\t\"./bs.js\": 307,\n\t\"./ca\": 308,\n\t\"./ca.js\": 308,\n\t\"./cs\": 309,\n\t\"./cs.js\": 309,\n\t\"./cv\": 310,\n\t\"./cv.js\": 310,\n\t\"./cy\": 311,\n\t\"./cy.js\": 311,\n\t\"./da\": 312,\n\t\"./da.js\": 312,\n\t\"./de\": 313,\n\t\"./de-at\": 314,\n\t\"./de-at.js\": 314,\n\t\"./de-ch\": 315,\n\t\"./de-ch.js\": 315,\n\t\"./de.js\": 313,\n\t\"./dv\": 316,\n\t\"./dv.js\": 316,\n\t\"./el\": 317,\n\t\"./el.js\": 317,\n\t\"./en-au\": 318,\n\t\"./en-au.js\": 318,\n\t\"./en-ca\": 319,\n\t\"./en-ca.js\": 319,\n\t\"./en-gb\": 320,\n\t\"./en-gb.js\": 320,\n\t\"./en-ie\": 321,\n\t\"./en-ie.js\": 321,\n\t\"./en-il\": 322,\n\t\"./en-il.js\": 322,\n\t\"./en-in\": 323,\n\t\"./en-in.js\": 323,\n\t\"./en-nz\": 324,\n\t\"./en-nz.js\": 324,\n\t\"./en-sg\": 325,\n\t\"./en-sg.js\": 325,\n\t\"./eo\": 326,\n\t\"./eo.js\": 326,\n\t\"./es\": 327,\n\t\"./es-do\": 328,\n\t\"./es-do.js\": 328,\n\t\"./es-us\": 329,\n\t\"./es-us.js\": 329,\n\t\"./es.js\": 327,\n\t\"./et\": 330,\n\t\"./et.js\": 330,\n\t\"./eu\": 331,\n\t\"./eu.js\": 331,\n\t\"./fa\": 332,\n\t\"./fa.js\": 332,\n\t\"./fi\": 333,\n\t\"./fi.js\": 333,\n\t\"./fil\": 334,\n\t\"./fil.js\": 334,\n\t\"./fo\": 335,\n\t\"./fo.js\": 335,\n\t\"./fr\": 336,\n\t\"./fr-ca\": 337,\n\t\"./fr-ca.js\": 337,\n\t\"./fr-ch\": 338,\n\t\"./fr-ch.js\": 338,\n\t\"./fr.js\": 336,\n\t\"./fy\": 339,\n\t\"./fy.js\": 339,\n\t\"./ga\": 340,\n\t\"./ga.js\": 340,\n\t\"./gd\": 341,\n\t\"./gd.js\": 341,\n\t\"./gl\": 342,\n\t\"./gl.js\": 342,\n\t\"./gom-deva\": 343,\n\t\"./gom-deva.js\": 343,\n\t\"./gom-latn\": 344,\n\t\"./gom-latn.js\": 344,\n\t\"./gu\": 345,\n\t\"./gu.js\": 345,\n\t\"./he\": 346,\n\t\"./he.js\": 346,\n\t\"./hi\": 347,\n\t\"./hi.js\": 347,\n\t\"./hr\": 348,\n\t\"./hr.js\": 348,\n\t\"./hu\": 349,\n\t\"./hu.js\": 349,\n\t\"./hy-am\": 350,\n\t\"./hy-am.js\": 350,\n\t\"./id\": 351,\n\t\"./id.js\": 351,\n\t\"./is\": 352,\n\t\"./is.js\": 352,\n\t\"./it\": 353,\n\t\"./it-ch\": 354,\n\t\"./it-ch.js\": 354,\n\t\"./it.js\": 353,\n\t\"./ja\": 355,\n\t\"./ja.js\": 355,\n\t\"./jv\": 356,\n\t\"./jv.js\": 356,\n\t\"./ka\": 357,\n\t\"./ka.js\": 357,\n\t\"./kk\": 358,\n\t\"./kk.js\": 358,\n\t\"./km\": 359,\n\t\"./km.js\": 359,\n\t\"./kn\": 360,\n\t\"./kn.js\": 360,\n\t\"./ko\": 361,\n\t\"./ko.js\": 361,\n\t\"./ku\": 362,\n\t\"./ku.js\": 362,\n\t\"./ky\": 363,\n\t\"./ky.js\": 363,\n\t\"./lb\": 364,\n\t\"./lb.js\": 364,\n\t\"./lo\": 365,\n\t\"./lo.js\": 365,\n\t\"./lt\": 366,\n\t\"./lt.js\": 366,\n\t\"./lv\": 367,\n\t\"./lv.js\": 367,\n\t\"./me\": 368,\n\t\"./me.js\": 368,\n\t\"./mi\": 369,\n\t\"./mi.js\": 369,\n\t\"./mk\": 370,\n\t\"./mk.js\": 370,\n\t\"./ml\": 371,\n\t\"./ml.js\": 371,\n\t\"./mn\": 372,\n\t\"./mn.js\": 372,\n\t\"./mr\": 373,\n\t\"./mr.js\": 373,\n\t\"./ms\": 374,\n\t\"./ms-my\": 375,\n\t\"./ms-my.js\": 375,\n\t\"./ms.js\": 374,\n\t\"./mt\": 376,\n\t\"./mt.js\": 376,\n\t\"./my\": 377,\n\t\"./my.js\": 377,\n\t\"./nb\": 378,\n\t\"./nb.js\": 378,\n\t\"./ne\": 379,\n\t\"./ne.js\": 379,\n\t\"./nl\": 380,\n\t\"./nl-be\": 381,\n\t\"./nl-be.js\": 381,\n\t\"./nl.js\": 380,\n\t\"./nn\": 382,\n\t\"./nn.js\": 382,\n\t\"./oc-lnc\": 383,\n\t\"./oc-lnc.js\": 383,\n\t\"./pa-in\": 384,\n\t\"./pa-in.js\": 384,\n\t\"./pl\": 385,\n\t\"./pl.js\": 385,\n\t\"./pt\": 386,\n\t\"./pt-br\": 387,\n\t\"./pt-br.js\": 387,\n\t\"./pt.js\": 386,\n\t\"./ro\": 388,\n\t\"./ro.js\": 388,\n\t\"./ru\": 389,\n\t\"./ru.js\": 389,\n\t\"./sd\": 390,\n\t\"./sd.js\": 390,\n\t\"./se\": 391,\n\t\"./se.js\": 391,\n\t\"./si\": 392,\n\t\"./si.js\": 392,\n\t\"./sk\": 393,\n\t\"./sk.js\": 393,\n\t\"./sl\": 394,\n\t\"./sl.js\": 394,\n\t\"./sq\": 395,\n\t\"./sq.js\": 395,\n\t\"./sr\": 396,\n\t\"./sr-cyrl\": 397,\n\t\"./sr-cyrl.js\": 397,\n\t\"./sr.js\": 396,\n\t\"./ss\": 398,\n\t\"./ss.js\": 398,\n\t\"./sv\": 399,\n\t\"./sv.js\": 399,\n\t\"./sw\": 400,\n\t\"./sw.js\": 400,\n\t\"./ta\": 401,\n\t\"./ta.js\": 401,\n\t\"./te\": 402,\n\t\"./te.js\": 402,\n\t\"./tet\": 403,\n\t\"./tet.js\": 403,\n\t\"./tg\": 404,\n\t\"./tg.js\": 404,\n\t\"./th\": 405,\n\t\"./th.js\": 405,\n\t\"./tk\": 406,\n\t\"./tk.js\": 406,\n\t\"./tl-ph\": 407,\n\t\"./tl-ph.js\": 407,\n\t\"./tlh\": 408,\n\t\"./tlh.js\": 408,\n\t\"./tr\": 409,\n\t\"./tr.js\": 409,\n\t\"./tzl\": 410,\n\t\"./tzl.js\": 410,\n\t\"./tzm\": 411,\n\t\"./tzm-latn\": 412,\n\t\"./tzm-latn.js\": 412,\n\t\"./tzm.js\": 411,\n\t\"./ug-cn\": 413,\n\t\"./ug-cn.js\": 413,\n\t\"./uk\": 414,\n\t\"./uk.js\": 414,\n\t\"./ur\": 415,\n\t\"./ur.js\": 415,\n\t\"./uz\": 416,\n\t\"./uz-latn\": 417,\n\t\"./uz-latn.js\": 417,\n\t\"./uz.js\": 416,\n\t\"./vi\": 418,\n\t\"./vi.js\": 418,\n\t\"./x-pseudo\": 419,\n\t\"./x-pseudo.js\": 419,\n\t\"./yo\": 420,\n\t\"./yo.js\": 420,\n\t\"./zh-cn\": 421,\n\t\"./zh-cn.js\": 421,\n\t\"./zh-hk\": 422,\n\t\"./zh-hk.js\": 422,\n\t\"./zh-mo\": 423,\n\t\"./zh-mo.js\": 423,\n\t\"./zh-tw\": 424,\n\t\"./zh-tw.js\": 424\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 672;","module.exports = __webpack_public_path__ + \"static/media/icon.d2180cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/hacker.010dc613.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}