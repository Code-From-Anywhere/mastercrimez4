{"version":3,"sources":["assets/icon.png","assets/map/market.png","assets/map/shop.png","assets/profession/thief.jpg","assets/profession/carthief.jpg","assets/profession/weedgrower.jpg","assets/profession/killer.jpg","assets/profession/pimp.jpg","assets/profession/banker.jpg","assets/profession/jailbreaker.jpg","src/Constants.js","src/Util.js","src/components/AlertProvider.js","src/components/ConnectionProvider.js","src/components/IntervalProvider.js","src/components/Button.js","src/components/Dead.js","src/components/Fly.js","src/components/Chat.js","src/updateHook.js","src/components/Header.js","src/components/HoverState.js","src/components/Hoverable.js","src/components/T.js","src/components/Jail.js","src/Style.js","src/components/LoginModal.js","src/KeyboardAvoidingSpace.js","src/Menus.js","src/Layout.js","src/layout/Logic.js","src/layout/MapUtil.js","src/components/User.js","src/layout/ActionsBar.js","src/layout/MapIcon.js","src/layout/BottomTabs.js","src/layout/Menus.js","src/layout/Modal.js","src/screens/Accomplice.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Shop.js","src/screens/AirplaneShop.js","src/screens/Airport.js","src/components/Tabs.js","src/components/Captcha.js","src/screens/Bomb.js","src/screens/AllAirport.js","src/screens/Bank.js","src/screens/Donate.js","src/screens/Income.js","src/screens/SwissBank.js","src/screens/AllBanks.js","src/screens/Bulletfactory.js","src/components/Content.js","src/screens/GangBulletFactory.js","src/screens/AllBulletfactory.js","src/screens/GangCreate.js","src/components/H1.js","src/screens/GangMissions.js","src/screens/GangSettings.js","src/screens/GangShop.js","src/screens/AllGang.js","src/components/Separator.js","src/screens/Garage.js","src/screens/Racecars.js","src/screens/AllGarage.js","src/screens/Gangs.js","src/screens/Members.js","src/components/Gang.js","src/screens/Prizes.js","src/screens/Properties.js","src/screens/Stats.js","src/screens/AllStats.js","src/screens/Backfire.js","src/screens/Blocks.js","src/screens/Bunker.js","src/screens/Casino.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/components/ShareButtons.js","src/screens/Channel.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/ChooseProfession.js","src/screens/Code.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateOC.js","src/screens/CreateRobbery.js","src/screens/CreateStreetrace.js","src/screens/Crimes.js","src/screens/Detectives.js","src/screens/DownloadApp.js","src/screens/EstateAgent.js","src/screens/ForgotPassword.js","src/screens/Forum.js","src/screens/Gang.js","src/screens/GangAchievements.js","src/screens/GarageShop.js","src/screens/Gym.js","src/screens/Hackers.js","src/screens/Hoeren.js","src/screens/Home.js","src/screens/Hospital.js","src/screens/Sint.js","src/screens/MyObjects.js","src/screens/Status.js","src/screens/House.js","src/components/Menu.js","src/screens/Info.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/Lotto.js","src/screens/ManageObject.js","src/screens/Market.js","src/screens/MollieComplete.js","src/screens/Police.js","src/screens/Settings.js","src/screens/More.js","src/screens/MyProfile.js","src/screens/OC.js","src/screens/Poker.js","src/screens/Privacy.js","src/screens/Profile.js","src/screens/ProtectionShop.js","src/screens/RecoverPassword.js","src/screens/Reports.js","src/screens/Rob.js","src/screens/Robbery.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/StealCar.js","src/screens/Streetrace.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/WeaponShop.js","src/screens/Wiet.js","src/components/Checkbox.js","src/screens/Work.js","src/layout/Screen.js","src/layout/StatsHeader.js","src/layout/Overlay.js","src/layout/Map.js","src/layout/Container.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","node_modules/moment/locale sync /^/.//.*$","assets/dood.jpg","assets/logos/logo5.jpg","assets/map/house2.png","assets/map/headquarter.png","assets/map/bulletfactory.png","assets/map/airport.png","assets/map/bank.png","assets/map/casino.png","assets/map/coffeeshop.png","assets/map/junkies.png","assets/map/garage.png","assets/map/gym.png","assets/map/hospital.png","assets/map/jail.png","assets/map/sexshop.png","assets/bombarderen.jpg","assets/gangshop/item1.jpg","assets/gangshop/item2.jpg","assets/gangshop/item3.jpg","assets/gangshop/item4.jpg","assets/gangshop/item5.jpg","assets/gangshop/item6.jpg","assets/gangshop/item7.jpg","assets/gangshop/item8.jpg","assets/gangshop/item9.jpg","assets/gangshop/item10.jpg","assets/gangshop/item11.jpg","assets/gangshop/item12.jpg","assets/whatsapp.png","assets/robbery/snackbar.jpg","assets/robbery/clothesstore.jpg","assets/robbery/supermarket.jpg","assets/robbery/drugstore.jpg","assets/robbery/coffeeshop.jpg","assets/robbery/cardealer.jpg","assets/robbery/bank.jpg","assets/robbery/casino.jpg","assets/robbery/jewelrystore.jpg","assets/uitgemoord.jpg","assets/hacker.jpeg","assets/politie.jpeg","assets/bank.jpg","assets/cars.jpeg","assets/shootout.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["module","exports","Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","Captcha","loginToken","useState","Math","random","setRandom","uri","View","style","flexDirection","Image","source","marginLeft","width","height","TouchableOpacity","onPress","MaterialCommunityIcons","name","size","color","withCaptcha","needCaptcha","getText","alertAlert","setCode","text","textInput","keyboardType","component","InactiveScreens","ACTIONS_BEFORE_ROBBERY","ACTIONS_BEFORE_DETECTIVES","ACTIONS_BEFORE_BOMB","ACTIONS_BEFORE_CASINO","ACTIONS_BEFORE_BUNKER","ACTIONS_BEFORE_HOSPITAL","ACTIONS_BEFORE_RACECARS","ACTIONS_BEFORE_STREETRACE","ACTIONS_AMOUNT_NEW","ACTIONS_BEFORE_ROB","ACTIONS_BEFORE_ROB_KILL_MENU","ACTIONS_BEFORE_KILL","ACTIONS_BEFORE_BULLETFACTORY","ACTIONS_BEFORE_MARKET","ACTIONS_BEFORE_AIRPORT","DAYS_NEW","ACTIONS_BEFORE_POLICE","STOCK_MARKET_RELEASE_DATE","moment","set","LOTTO_RELEASE_DATE","OC_RELEASE_DATE","DETECTIVES_RELEASE_DATE","GANG_MISSIONS_RELEASE_DATE","GANG_BULLET_FACTORY_RELEASE_DATE","PRIZES_NORMAL_RELEASE_DATE","GANG_RELEASE_DATE","MARKET_RELEASE_DATE","PRIZES_RELEASE_DATE","POLICE_RELEASE_DATE","ROBBERY_RELEASE_DATE","WORK_RELEASE_DATE","get","post","ColorLuminance","hex","lum","String","length","c","i","rgb","parseInt","substr","round","min","max","lighterHex","darkerHex","getUserColor","item","theme","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","properties","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","prevExp","nowRank","diff","progress","percentage","getRank","getStrength","AlertContext","React","createContext","AlertProvider","children","alerts","setAlerts","value","setValue","textInputRef","useRef","theAlert","current","focus","Provider","title","message","buttons","options","log","newAlerts","map","includes","push","position","top","bottom","left","right","backgroundColor","justifyContent","alignItems","borderRadius","padding","Text","fontWeight","fontSize","textAlign","TextInput","onChangeText","ref","button","flex","borderRightColor","borderRightWidth","shift","filter","lenth","ConnectionProviderScreen","fetchWithTimeout","didTimeOut","Promise","resolve","reject","timeout","setTimeout","Error","clearTimeout","err","props","setIsConnected","Platform","OS","this","unsubscribe","NetInfo","addEventListener","state","isConnected","interval","setInterval","SafeAreaView","Component","connect","device","dispatch","IntervalContext","IntervalProvider","screenProps","me","reloadMe","token","setToken","intervalReloadMe","intervalMovements","sendMovements","clearInterval","movements","resetIntervalsForToken","withInterval","ChildComponent","Consumer","context","intervals","isSmall","Dimensions","Button","icon","font","disabled","TheIcon","Icon","useSelector","secondary","paddingHorizontal","marginRight","secondaryText","Dead","selected","navigation","locale","reizenAt","Date","option","setState","Fly","sec","city","until","onFinish","timeToShow","timeLabels","m","s","MessageInput","getChat","input","setInput","placeholder","onSubmitEditing","nativeEvent","chat","location","reload","Chat","setChat","routeName","allText","useMemo","borderWidth","borderColor","select","web","default","numberOfLines","navigate","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","useExpoUpdate","updateAvailable","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","isSmallDevice","Header","textStyle","marginBottom","showNotActivated","phoneVerified","numActions","notActivated","marginTop","updateComponent","reloadAsync","renderNotVerified","showBackButton","statsHeader","flexWrap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","gang","cash","bank","bullets","gamepoints","health","strength","newVersion","chats","backButton","margin","hitSlop","goBack","window","history","back","webHeader","manifest","version","toggleDrawer","Feather","showSomething","paddingTop","StatusBar","currentHeight","isEnabled","canUseDOM","lastTouchTimestamp","disableHover","document","Hoverable","onHoverIn","onHoverOut","isHovered","setHovered","showHover","setShowHover","child","cloneElement","Children","only","onMouseEnter","e","onMouseLeave","onResponderGrant","onResponderRelease","onPressIn","onPressOut","displayName","propTypes","oneOfType","func","element","T","bold","Jail","jail","renderItem","seconds","floor","jailAt","digitStyle","digitTxtStyle","buyOut","fetchMembers","order","marginVertical","FlatList","data","ListHeaderComponent","renderHeader","StyleSheet","create","container","LoginModal","setName","setResponse","email","setEmail","password","setPassword","setError","success","setSuccess","phone","setPhone","view","setView","code","changeName","login","useContext","primary","alignSelf","Entypo","id","ActivityIndicator","placeholderTextColor","secondaryTextSoft","secureTextEntry","md5","str_md5","responseJson","textDecorationLine","KeyboardAvoidingSpace","keyboardWillShow","onKeyboardWillShow","toValue","endCoordinates","offset","dim","isIPhoneXSize","isIPhoneXrSize","isIphoneX","Animated","timing","easing","Easing","ease","useNativeDriver","start","keyboardWillHide","onKeyboardWillHide","Value","bindListeners","unbindListeners","keyboardWillShowListener","Keyboard","addListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","remove","isHappyHour","isSunday","day","is7pm","hour","isAfter","leftMenu","stealcarSeconds","ceil","autostelenAt","crimeSeconds","crimeAt","bunkerSeconds","bunkerAt","attackSeconds","attackAt","robSeconds","robAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","robberySeconds","robberyAt","header","isHeader","label","content","iconType","to","inactive","isBefore","level","isNew","add","ACtIONS_BEFORE_DETECTIVES","adminMenu","gameMod","betaTester","admin","rightMenu","ocSeconds","ocAt","isGangsReleased","gangMenus","image","thumbnail","gangId","isStats","online","year","month","date","renderMenu","isCurrent","TouchOrView","params","movement","action","locationX","locationY","timestamp","borderBottomWidth","paddingLeft","minHeight","Layout","useNewContainer","result","characters","charactersLength","charAt","makeid","Linking","openWebUrl","getInitialURL","url","logged","menu","leftActive","setLeftActive","rightActive","setRightActive","_handleNotificationResponse","notification","request","handleChange","nextAppState","foregrounded","StoreReview","available","ExpoNotifications","AppState","removeEventListener","skip","SafeOrView","Helmet","property","ScrollView","contentContainerStyle","Accordion","expandMultiple","sections","activeSections","onChange","active","section","renderContent","withLayout","Logic","reloadChannels","handleAppStateChange","turnOnNotifications","sendLanguage","fetchChannelsubs","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","navigator","language","ExpoConstants","isDevice","Permissions","existingStatus","status","finalStatus","pushtoken","objects","aspectRatio","rgbs","getZoom","delta","LN2","animateToCity","delayZoom","zoom","doZoom","panTo","lat","latitude","lng","longitude","animateToRegion","latitudeDelta","longitudeDelta","getObjectMeta","object","cityAreas","terri","areas","centerLatitude","centerLongitude","deltaLatitude","deltaLongitude","biggestDeltaLatitude","topLeftLatitude","topLeftLongitude","bottomRightLatitude","bottomRightLongitude","topRightLongitude","bottomLeftLatitude","square","bounds","east","south","north","west","platformBounds","radius","User","user","isOnline","onlineAt","extraIcon","country","ActionsBar","setLoading","reloadCities","selectedArea","reloadAreas","bombAction","airplane","bombs","captcha","iconName","takeOverAction","manageAction","resetTo","incomeAction","postGetIncome","allActions","casino","isSelected","badgeAmount","bulletFactory","bulletFactoryPrice","amount","airport","hospital","house","landlord","junkies","rld","headquarter","gym","garage","market","weaponShop","estateAgent","stockExchange","area","userId","airplanes","areaId","damage","statsActions","moreActions","actions","horizontal","zIndex","requestAnimationFrame","marginHorizontal","minWidth","MapIcon","memo","isActive","onLongPress","badgeCount","BottomTabs","setSelected","dragAndDropMode","setDragAndDropMode","chatBadgeCount","territoriesBadgeCount","crimesBadgeCount","gameBadgeCount","showActionSheetWithOptions","useActionSheet","useDispatch","pointerEvents","o","cancelButtonIndex","destructiveButtonIndex","buttonIndex","popToTop","v","buildingType","channels","allAreasMenus","goToArea","last10ChannelsMenus","slice","channel","channelsubs","find","unread","subid","setSelectedAreaIndex","setZoom","specialColor","gangMembers","owner","isYours","isGang","hasDamage","hasProfit","incomeJunkies","junkiesIncomeAt","incomeLandlord","landlordIncomeAt","incomeRLD","rldIncomeAt","connectedArea","profit","objectIndex","biggestDelta","Menus","menuShown","Modal","headerHeight","keyboardHeight","setKeyboardHeight","keydown","useCallback","event","keyCode","close","defaultBottom","Accomplice","accomplice","accomplice1","setAccomplice1","accomplice2","setAccomplice2","accomplice3","setAccomplice3","accomplice4","setAccomplice4","submit","acc","alert","maxWidth","onFocus","Clipboard","setString","accomplices","styles","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","setId","setUser","setActions","setMovements","getActions","ip","previous","Shop","fetchCities","fetchShop","becomeOwner","t","buy","keyValue","swissBank","resizeMode","next","price","AirplaneShop","Airport","renderFooter","openActionSheet","sort","connectActionSheet","Tabs","tabs","tab","onChangeCaptcha","onChangeRandom","Bomb","cities","setBombs","setCaptcha","setType","typeStrings","Object","keys","AllAirport","setTab","Bank","deposit","row","Donate","names","wiet","hoeren","Income","withAlert","SwissBank","becomeOwnerResponse","setBecomeOwnerResponse","setAmount","swissBullets","bankOwner","bankProfit","paddingVertical","borderBottomColor","AllBanks","Bulletfactory","setBullets","bulletFactoryOwner","bulletFactoryProfit","bulletFactoryDamage","UIManager","setLayoutAnimationEnabledExperimental","getData","AsyncStorage","getItem","Content","contentWidth","expanded","setExpanded","loading","isExpanded","LayoutAnimation","linear","setItem","onLayout","layout","y","GangBulletFactory","shifts","setShifts","morning","evening","night","underachievers","getShifts","renderShiftUser","members","totalShiftsDone","gangLevel","generates","initialCost","dailyCost","bf","postGangBuyBulletFactory","AllGarage","GangCreate","H1","GangMissions","setResult","getGangMissions","isPrestige","reduce","mission","time","startButton","postGangStartMission","what","amountPerMember","isEnded","isSucceeded","amountDone","createdAt","GangSettings","requests","setRequests","setGang","username","setUsername","profile","setProfile","setMessage","setImage","isBullets","setIsBullets","getGang","getGangInvites","postGangAnswerJoin","accepted","postGangTransaction","isToUser","postGangLeave","getGangLevel","postGangRemove","changeRank","postGangSetRank","getPermissionAsync","users","member","postGangKick","ImagePicker","mediaTypes","All","allowsEditing","base64","quality","cancelled","multiline","SIZE","GangShop","prices","items","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","power","refreshing","onRefresh","numColumns","MARGIN","keyExtractor","itemId","postGangShop","AllGang","Separator","Garage","cars","fetchGroups","carGroups","bulkAction","auto","upgradeCar","renderGroup","kogels","ItemSeparatorComponent","Racecars","fetchGarage","sellCar","crushCar","car","extraData","Gangs","gangs","setGangs","invites","setInvites","getGangs","getInvites","postGangAnswerInvite","invite","gangName","score","filters","orders","setMembers","setSearch","orderBy","setOrderBy","setFilter","searchedMembers","toLowerCase","openActionSheetSort","openActionSheetFilter","orderKey","secondKey","Gang","Prizes","prizes","setPrizes","prize","when","every","endOf","format","forWhat","stats","stat","prizeWhat","Properties","gridStyle","borderLeftColor","borderLeftWidth","suffix","field","fieldSuffix","formattedField","keyNames","newMembers","onlineToday","Stats","setStats","gameStats","setGameStats","values","Array","snapToEnd","fromZero","labels","datasets","opacity","onlineLastHour","onlineLastDay","onDataPointClick","xAxisLabel","xLabelsOffset","yAxisLabel","yAxisSuffix","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","strokeWidth","stroke","bezier","AllStats","Members","MyProfile","backfire","Blocks","blocks","setBlocks","getBlocks","block","user2id","postRemoveBlock","Bunker","ListFooterComponent","lottoReleaseDate","Casino","casinoOwner","casinoProfit","ChangeName","ChangePassword","password1","password2","ImageInput","hasEdited","_pickImage","aspect","ImageManipulator","resize","PNG","manipulated","manipulatedBase64","small","Ionicons","ShareButtons","siteUrl","facebookShareUrl","openURL","isBigDevice","Footer","fetchChat","setHasEdited","send","cid","STYLE","ChatScreen","isFetching","setIsFetching","isArray","initialNumToRender","isMe","avatar","IMAGE_SIZE","isSystem","isShareable","refreshControl","inverted","blocksReleaseDate","openMenu","isBlockButtonActive","openGeneralMenu","isBlocksActive","channelTitle","channelThumbnail","channelOtherUserId","lastmessage","lastmessageDate","startOf","PROFESSIONS","canChooseProfession","profession","postChooseProfession","Code","param","CreateOc","reloadOcs","racecars","setRacecars","numParticipants","setNumParticipants","setCar","TabInput","racecar","carId","RobberyTypes","cost","difficulty","Robbery","robbery","CreateRobbery","reloadRobberies","CreateStreetrace","reloadStreetraces","setPrice","setPrize","Crimes","kans","maxChance","kans2","Detectives","detectives","setDetectives","getDetectives","detective","h","getMobileOperatingSystem","userAgent","vendor","opera","test","MSStream","DownloadApp","EstateAgent","Login","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","updatedAt","responses","renderNew","renderTopics","postGangJoin","totalHealth","GangAchievements","achievements","GarageShop","Gym","Hoeren","number","itemWidth","amountOfItems","Home","activeSlide","notificationsHeader","_handleAppStateChange","Notifications","_renderItem","filtered","IntentLauncher","_carousel","sliderWidth","onSnapToItem","dotsLength","activeDotIndex","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","appLink","renderCarousel","Hospital","heal","Sint","minute","sintEndsAt","MyObjects","p","ownerKey","propertyString","professionReleaseDate","uur","protectionAt","Menu","IconFont","PrivacyPage","components","en","nl","strings","ListEmptyComponent","Junkies","Kill","kill","Lotto","lottoDay","lottoWeek","lottoMonth","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","profitKey","priceKey","damageKey","Market","setMarket","setBuy","getMarket","validTypes","postMarketCreateOffer","offerId","postMarketRemoveOffer","isBuy","postMarketTransaction","MollieComplete","Settings","__DEV__","More","Info","Police","setPhoto","images","setImages","selectedImage","setSelectedImage","bio","setBio","fetchImages","pic","Oc","ocs","RefreshControl","creator","ocParticipants","ocId","leave","Poker","poker","Config","onLinkPress","link","markdownItInstance","MarkdownIt","typographer","use","emoji","center","Bio","debugPrintTree","markdownit","rules","blocklink","node","parent","open","attributes","href","setWidth","setHeight","getSize","src","centertext","paragraph","textgroup","ProfileScreen","getProfile","hasImage","ban","banReason","postReport","ProtectionShop","RecoverPassword","Reports","reports","setReports","getReports","rob","robberies","robberyParticipants","robberyId","respones","activate","activationToken","StealCar","typeStart","finished","Streetrace","streetraces","streetraceParticipants","streetraceId","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","save","Creditshop","setItems","credits","kooptext","kosten","Mollie","SuperMessage","schedule","setSchedule","setDate","scheduled","setScheduled","setMessages","dates","setDates","getScheduled","Switch","onValueChange","valueOf","msg","saveScheduled","VIP","WeaponShop","Wiet","Checkbox","Work","hours","workEndsAt","screens","Channels","Profile","AdminEmail","AllBulletfactory","Backfire","Channel","ChooseProfession","Contribute","ForgotPassword","Forum","Hackers","House","InfoGame","InfoRules","OC","Privacy","Rob","SignupEmail","SignupEmail2","Theme","VerifyPhone","VerifyPhoneCode","Screen","screen","StatsHeader","AntDesign","Overlay","territoriesSwiperRefContainer","propertiesSwiperRefContainer","selectedAreaIndex","setHeaderHeight","territoriesSwiperChildren","territoriesSwiperKey","renderTerritoriesSwiper","controlsEnabled","from","onIndexChanged","propertiesSwiperFirstPage","swiper1Children","ownerProfile","selectedIndex","renderPropertiesSwiper","currentObject","mapStyle","mapStyleNight","citiesAreas","containerStyle","ReactMap","setMap","setMapReady","onLoad","google","maps","LatLngBounds","fitBounds","onUnmount","googleMapsApiKey","clickableIcons","mapContainerStyle","onZoomChanged","disableDefaultUI","Territories","territories","MapsComponent","onClick","fillColor","path","Polygon","tappable","coordinates","GameObjects","myName","draggable","animated","onPressObject","configureNext","Presets","spring","strokeColor","Marker","onDragEnd","coordinate","Alert","Circle","Map","region","setRegion","mapReady","objectsWithAnimated","goTo","reg","NativeMapsComponent","native","crimeIcons","ocIcons","oc","streetraceIcons","robberyIcons","icons","concat","rightObjects","renderGame","renderTerritories","renderCrimes","sum","codePointAt","decimalHash","areaIndex","pseudoRandom","theIcon","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","renderAllMapObjects","shouldRenderTerritories","renderOverlay","pitchEnabled","rotateEnabled","onMapReady","customMapStyle","initialRegion","onRegionChange","absoluteFill","Container","initialNavigationState","navigationState","setNavigationState","parts","newHistory","pushState","pop","Api","fetchMe","payload","fetchStreetraces","fetchOcs","fetchRobberies","fetchAreas","fetchChannels","mySaga","call","put","takeLatest","initDevice","showNotificatonsHeader","initAreas","initChannels","config","storage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","rightContainer","createBrowserApp","createAppContainer","OldContainer","createDrawerNavigator","createSwitchNavigator","createStackNavigator","JailScreen","Case","Car","drawerPosition","edgeWidth","contentComponent","forceInset","unmountInactiveRoutes","navigationOptions","drawerLockMode","defaultNavigationOptions","headerShown","RootContainer","NewContainer","ConnectionProvider","App","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,8SCa5BC,EATG,CAChBC,YALiB,2BAMjBC,QAAS,2CACTC,YACE,2FACFC,gBACE,gFCQEC,EAAa,SAACC,EAAQC,EAAQC,GAAjB,OACjBF,EAAOG,MAAMF,GAAQG,KAAKF,IAEfG,EAAY,SAACC,GAGxB,MAAqB,QAFHA,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,IAExC,KAAO,MAExBI,EAAkB,SAACD,GAAD,OAAgB,SAACE,GAC9C,IAAMC,EAAYH,GAAcA,EAAWH,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGhEO,EAAiBC,EAAQ,KAEX,OAAdF,IACFC,EAAiBC,EAAQ,MAPoC,IAU/D,IAAIX,EACFU,EAAeF,IAAf,sBACsBA,EADtB,iBAC0CF,EAD1C,IAX6D,mBAATM,EAAS,iCAATA,EAAS,kBAkB/D,OAJAA,EAAKC,SAAQ,SAACC,EAAKC,GACjBf,EAASD,EAAWC,EAAD,KAAae,EAAQ,GAAKD,MAGxCd,IAGIgB,EAAe,SAACC,GAC3B,aAAOA,OAAP,EAAOA,EAAGC,WAAWC,QAAQ,wBAAyB,MAuDjD,IAiBMC,EAAS,SAACC,EAAIC,GACzBC,qBAAU,WAER,OADAF,IACA,MAAOC,OAAP,EAAOA,MACN,KAEQE,EAAU,SAACC,EAAUC,EAAQC,GACxC,OAAOC,MAASlC,EAAUC,YAAd,IAA6B8B,EAAY,CACnDC,SACAG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAiB,SAAXD,EAAoBK,KAAKC,UAAUL,QAAQM,IAEhDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,yEACGH,GADH,+DAGLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIdE,EAAU,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACNC,mBAASC,KAAKC,UADR,WAC3BA,EAD2B,KACnBC,EADmB,KAG5BC,EACJtD,EAAUC,YAAV,uBACuBmD,EADvB,eAC4CH,EAE9C,OACE,kBAACM,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAACC,EAAA,EAAD,CACEC,OAAQ,CAAEL,OACVE,MAAO,CAAEI,WAAY,GAAIC,MAAO,IAAKC,OAAQ,MAE/C,kBAACC,EAAA,EAAD,CAAkBC,QAAS,kBAAMX,EAAUF,KAAKC,YAC9C,kBAACa,EAAA,EAAD,CAAwBC,KAAK,SAASC,KAAM,GAAIC,MAAM,aAMjDC,EAAc,SACzBpB,EACAqB,EACAC,EACAC,EACAC,GAEIH,EACFE,EACED,EAAQ,iBACRA,EAAQ,uBACR,CACE,CACEG,KAAMH,EAAQ,MACdP,QAASS,IAGb,CACE3D,IAAK,UACL6D,WAAW,EACXC,aAAc,UACdC,UAAW,kBAAC,EAAD,CAAS5B,WAAYA,MAIpCwB,EAAQ,OAICK,EAAkB,CAC7BC,uBAAwB,IACxBC,0BAA2B,GAC3BC,oBAAqB,GACrBC,sBAAuB,GACvBC,sBAAuB,GACvBC,wBAAyB,GACzBC,wBAAyB,GACzBC,0BAA2B,GAC3BC,mBAAoB,GACpBC,mBAAoB,GACpBC,6BAA8B,GAC9BC,oBAAqB,GACrBC,6BAA8B,GAC9BC,sBAAuB,GACvBC,uBAAwB,GACxBC,SAAU,GACVC,sBAAuB,IAEvBC,0BAA2BC,IAAO,aAAc,cAAcC,IAAI,OAAQ,IAE1EC,mBAAoBF,IAAO,aAAc,cAAcC,IAAI,OAAQ,IACnEE,gBAAiBH,IAAO,aAAc,cAAcC,IAAI,QAAS,IACjEG,wBAAyBJ,IAAO,aAAc,cAAcC,IAAI,QAAS,IACzEI,2BAA4BL,IAAO,aAAc,cAAcC,IAC7D,QACA,IAEFK,iCAAkCN,IAAO,aAAc,cAAcC,IACnE,QACA,IAEFM,2BAA4BP,IAAO,aAAc,cAAcC,IAC7D,QACA,IAEFO,kBAAmBR,IAAO,aAAc,cAAcC,IAAI,QAAS,IACnEQ,oBAAqBT,IAAO,aAAc,cAAcC,IAAI,QAAS,IACrES,oBAAqBV,IAAO,aAAc,cAAcC,IAAI,QAAS,IACrEU,oBAAqBX,IAAO,aAAc,cAAcC,IAAI,QAAS,IACrEW,qBAAsBZ,IAAO,aAAc,cAAcC,IAAI,QAAS,IAGtEY,kBAAmBb,IAAO,aAAc,cAAcC,IAAI,QAAS,KAGxDa,EAAM,SAAChF,GAAD,OAAcD,EAAQC,EAAU,QACtCiF,EAAO,SAACjF,EAAUE,GAAX,OAAoBH,EAAQC,EAAU,OAAQE,IAqB3D,SAASgF,EAAeC,EAAKC,IAElCD,EAAME,OAAOF,GAAKzF,QAAQ,cAAe,KACjC4F,OAAS,IACfH,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAEzDC,EAAMA,GAAO,EAGb,IACEG,EACAC,EAFEC,EAAM,IAGV,IAAKD,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIG,SAASP,EAAIQ,OAAW,EAAJH,EAAO,GAAI,IAEnCC,IAAQ,MADRF,EAAInE,KAAKwE,MAAMxE,KAAKyE,IAAIzE,KAAK0E,IAAI,EAAGP,EAAIA,EAAIH,GAAM,MAAM3F,SAAS,MAC/CkG,OAAOJ,EAAED,QAG7B,OAAOG,EAGF,IAAMM,EAAa,SAACZ,GAAD,OAASD,EAAeC,EAAK,KAC1Ca,EAAY,SAACb,GAAD,OAASD,EAAeC,GAAM,KAE1Cc,EAAe,SAACC,EAAMC,GAAP,OACtB,MAAJD,OAAA,EAAAA,EAAME,eAAgB,IAClB,OACI,MAAJF,OAAA,EAAAA,EAAME,eAAgB,IACtB,SACAD,EAAME,aAENC,EAAQ,CACZ,CACEC,KAAM,SACNC,IAAK,IAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,EAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,kBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAIIE,EAAa,CACxB,CAAEvE,KAAM,iBACR,CAAEA,KAAM,UACR,CAAEA,KAAM,OACR,CAAEA,KAAM,YACR,CAAEA,KAAM,WACR,CAAEA,KAAM,cACR,CAAEA,KAAM,WACR,CAAEA,KAAM,eACR,CAAEA,KAAM,UACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,YACR,CAAEA,KAAM,UACR,CAAEA,KAAM,kBAGJwE,EAAe,SAACJ,EAAMK,EAAYC,GACtC,IAAMC,EAAMD,EAAKE,WAAU,SAACC,GAAD,OAAOT,EAAOS,EAAER,OACrCS,EAAOH,EAAM,EAEbI,EAASL,EAAKC,GAAOD,EAAKC,GAAKN,IAAMK,EAAKA,EAAKvB,OAAS,GAAGkB,IAC3DW,EAAUN,EAAKI,GAAQJ,EAAKI,GAAMT,IAAM,EAExCY,EAAUP,EAAKC,GAAOD,EAAKC,GAAKP,KAAOM,EAAKA,EAAKvB,OAAS,GAAGiB,KAE7Dc,EAAOH,EAASC,EAChBG,EAAWf,EAAOY,EAClBI,EAAanG,KAAKwE,MAAO0B,EAAWD,EAAQ,IAAM,IAAM,GAE9D,MAAmB,aAAfT,EACKQ,EACiB,WAAfR,GACO,IAATE,EAAaA,EAAM,EAAID,EAAKvB,OACX,eAAfsB,EACFW,EACiB,SAAfX,EACFQ,EAAU,IAAMG,EAAa,SAD/B,GAKIC,GAAU,SAACjB,EAAMK,GAAP,OACrBD,EAAaJ,EAAMK,EAAYN,IACpBmB,GAAc,SAAClB,EAAMK,GAAP,OACzBD,EAAaJ,EAAMK,EAAYH,IChfpBiB,GAAeC,IAAMC,cAAc,IAEnCC,GAAgB,SAAC,GAAkB,IAAD,QAAfC,EAAe,EAAfA,SAAe,EACjB3G,mBAAS,IADQ,WACtC4G,EADsC,KAC9BC,EAD8B,OAEnB7G,mBAAS,IAFU,WAEtC8G,EAFsC,KAE/BC,EAF+B,KAGvC1F,EAAU1D,IAEVqJ,EAAeC,iBAAO,MAEtBC,EAAWN,EAAO,GAKxB,OAJAjI,qBAAU,WAAO,IAAD,EACd,SAAAqI,EAAaG,UAAb,EAAsBC,UACrB,CAACJ,EAAcJ,EAAOzC,SAGvB,kBAACoC,GAAac,SAAd,CACEP,MAAO,SAACQ,EAAOC,EAASC,EAASC,GAC/BV,EAAS,IAETlH,QAAQ6H,IAAI,SAAUd,EAAOzC,QAG7B,IAAMwD,EAAS,IAAOf,GACjBA,EAAOgB,KAAI,SAACvJ,GAAD,OAAOA,EAAEoJ,QAAQ7J,OAAKiK,SAASJ,EAAQ7J,MACrD+J,EAAUG,KAAK,CAAER,QAAOC,UAASC,UAASC,YAG5CZ,EAAU,IAAIc,MAGfhB,EACAC,EAAOzC,OAAS,EACf,kBAAC9D,EAAA,QAAD,CACEC,MAAO,CACLyH,SAAU,WACVC,IAAK,EACLC,QAAQ,SAAAf,EAASO,cAAT,IAAkBhG,WAAY,IAAM,EAC5CyG,KAAM,EACNC,MAAO,EACPC,gBAAiB,kBACjBC,eAAgB,SAChBC,WAAY,WAGd,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiB,OACjBG,aAAc,GACd5H,MAAO,MACP2H,WAAY,YAGZpB,EAASI,OAASJ,EAASK,UAC3B,kBAAClH,EAAA,QAAD,CAAMC,MAAO,CAAEkI,QAAS,KACrBtB,EAASI,OACR,kBAACmB,EAAA,QAAD,CACEnI,MAAO,CACLoI,WAAY,OACZC,SAAU,GACVC,UAAW,WAGZ1B,EAASI,OAGbJ,EAASK,SACR,kBAACkB,EAAA,QAAD,CAAMnI,MAAO,CAAEsI,UAAW,WACvB1B,EAASK,WAMjB,SAAAL,EAASO,cAAT,IAAkB9F,YACjB,kBAACtB,EAAA,QAAD,CAAMC,MAAO,CAAEkI,QAAS,KAAOtB,EAASO,QAAQ9F,YAGjD,SAAAuF,EAASO,cAAT,IAAkBhG,YACjB,kBAACpB,EAAA,QAAD,CAAMC,MAAO,CAAEkI,QAAS,GAAI7H,MAAO,SACjC,kBAACkI,EAAA,EAAD,CACE/B,MAAOA,EACPgC,aAAc/B,EACdgC,IAAK/B,EACL1G,MAAO,CACLqI,SAAU,GACVP,gBAAiB,QACjBzH,MAAO,OACP4H,aAAc,EACdC,QAAS,GAEX9G,aAAY,SAAEwF,EAASO,cAAX,EAAE,EAAkB/F,gBAKtC,kBAACrB,EAAA,QAAD,CACEC,MAAO,CAAEK,MAAO,OAAQC,OAAQ,EAAGwH,gBAAiB,UAGrDlB,EAASM,QACR,kBAACnH,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,eAChB1H,MAAO,SAGRuG,EAASM,QAAQI,KAAI,SAACoB,EAAQ7K,GAAT,OACpB,kBAAC0C,EAAA,EAAD,CACEjD,IAAQsJ,EAASO,QAAQ7J,IAAtB,SAAkCO,EACrCmC,MAAO,CACL+H,eAAgB,SAChBC,WAAY,SACZ1H,OAAQ,GACRqI,KAAM,EACNC,iBAAkB,OAClBC,iBACEhL,EAAQ+I,EAASM,QAAQrD,OAAS,EAAI,EAAI,GAE9CrD,QAAS,WACP,IAAM6G,EAAS,IAAOf,GACtBe,EAAUyB,QAEVvJ,QAAQ6H,IAAI,YAAaC,EAAUxD,QAGnC0C,EAAU,IAAIc,IAEdZ,EAAS,IAET,MAAAiC,EAAOlI,SAAPkI,EAAOlI,QAAUgG,KAGnB,kBAAC2B,EAAA,QAAD,CACEnI,MAAO,CACLY,MAAO,OACPyH,SAAU,KAGXK,EAAOxH,WAMhB,kBAACX,EAAA,EAAD,CACEP,MAAO,CACLK,MAAO,OACP0H,eAAgB,SAChBC,WAAY,SACZ1H,OAAQ,IAEVE,QAAS,WACP,IAAM6G,EAAYf,EAAOyC,QACvB,SAAChL,GAAD,OAAOA,EAAEoJ,QAAQ7J,MAAQsJ,EAASO,QAAQ7J,OAG5CiC,QAAQ6H,IAAI,YAAaC,EAAU2B,OAGnCzC,EAAU,IAAIc,MAGhB,kBAACc,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,OAAQyH,SAAU,KACrCtH,EAAQ,UAMjB,O,giBCvKV,IAIMkI,G,qLAiBJC,iBAAmB,WACjB,IACIC,GAAa,EAEjB,IAAIC,SAAQ,SAAUC,EAASC,GAC7B,IAAMC,EAAUC,YAAW,WACzBL,GAAa,EACbG,EAAO,IAAIG,MAAM,wBANC,KASpB/K,MAAMlC,EAAUC,YAAc,gBAC3BuC,MAAK,SAAUC,GAEdyK,aAAaH,GACRJ,GAEHE,EAAQpK,MAGXI,OAAM,SAAUsK,GAIXR,GAEJG,EAAOK,SAGV3K,MAAK,WAEJ,EAAK4K,MAAMC,eAnDK,MAqDjBxK,OAAM,SAACsK,GACNpK,QAAQ6H,IAAI,MAAOuC,GACnB,EAAKC,MAAMC,eAtDI,O,2DAIA,IAAD,OACE,QAAhBC,UAASC,KACXC,KAAKC,YAAcC,KAAQC,kBAAiB,SAACC,GAG3C,EAAKR,MAAMC,eACTO,EAAMC,YAXQ,EAEA,OAcpBL,KAAKM,SAAWC,YAAYP,KAAKd,iBAAkB,O,6CA6C/B,QAAhBY,UAASC,IACXC,KAAKC,cAEPP,aAAaM,KAAKM,Y,+BAGV,IAAD,EAC2BN,KAAKJ,MAA/BvD,EADD,EACCA,SAAUgE,EADX,EACWA,YAElB,OACE,kBAACtK,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IAvEH,IAwEf0B,GACC,kBAACtK,EAAA,QAAD,CACEC,MAAO,CACL8H,gBA1ES,IA2EPuC,EAAiC,SAAW,MAC9CnC,QAAS,KAGX,kBAACsC,GAAA,EAAD,KACE,kBAACrC,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,UAhFb,IAiFNyJ,EAAiC,UAAY,OAAQ,IADxD,yBAOLhE,O,GApF8BH,IAAMuE,WAmG9BC,gBATS,SAACN,GAAD,MAAY,CAClCC,YAAaD,EAAMO,OAAON,gBAGD,SAACO,GAAD,MAAe,CACxCf,eAAgB,SAACQ,GAAD,OACdO,EAAS,CAAExF,KAAM,mBAAoBoB,MAAO6D,QAGjCK,CAGbzB,IC7GW4B,GAAkB3E,IAAMC,cAAc,IACtC2E,GAAmB,SAAC,GAG1B,IAFLzE,EAEI,EAFJA,SAEI,IADJ0E,YAAmBH,GACf,EADWI,GACX,EADeJ,UAAUD,EACzB,EADyBA,OAAQM,EACjC,EADiCA,SACjC,EACsBvL,mBAASiL,EAAOlL,YADtC,WACGyL,EADH,KACUC,EADV,KAGJ9M,qBAAU,WACR,GAAI6M,EAAO,CACT,IAAME,EAAmBb,aAAY,WAEnCU,EAASN,EAAOlL,cACf,KAEG4L,EAAoBd,aAAY,WAEpCe,MACC,KAEH,OAAO,WAELC,cAAcH,GACdG,cAAcF,OAGjB,CAACH,IAEJ,IAAMI,EAAgB,WAEhBX,EAAOa,UAAU3H,OAAS,IAC5BL,EAAK,eAAgB,CACnB/D,WAAYkL,EAAOlL,WACnB+L,UAAWb,EAAOa,YAEpBZ,EAAS,CAAExF,KAAM,sBAIrB,OACE,kBAACyF,GAAgB9D,SAAjB,CACEP,MAAO,CACLiF,uBAAwB,SAACP,GAAD,OAAWC,EAASD,MAG7C7E,IAMMqF,GAAe,SAACC,GAAD,OAAoB,SAAC/B,GAAD,OAC9C,kBAACiB,GAAgBe,SAAjB,MACG,SAACC,GAAD,OAAa,kBAACF,EAAD,OAAoB/B,EAApB,CAA2BkC,UAAWD,U,gqBClDlDE,GADYC,IAAWzI,IAAI,UAAzBlD,MACgB,IAmCT4L,GAjCA,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,KAAMnF,EAAsC,EAAtCA,MAAOxG,EAA+B,EAA/BA,QAAS4L,EAAsB,EAAtBA,SAAUpM,EAAY,EAAZA,MAChDqM,EAAUF,GAAQD,EAAOI,GAAKH,GAAQpM,UACtC2E,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SAElD,OACE,kBAACnE,EAAA,EAAD,CAAkBC,QAAS4L,OAAWrN,EAAYyB,GAChD,kBAACT,EAAA,QAAD,CACEC,MAAK,IACHC,cAAe,MACf6H,gBAAiBsE,EAAc1H,EAAM8H,UAAZ,KAA4B9H,EAAM8H,UAC3DtE,QAAS,GACTH,eAAgB,SAChB0E,kBAAmBV,GAAU,EAAI,IAE9B/L,IAGJmM,GAAQD,EACP,kBAACnM,EAAA,QAAD,CAAMC,MAAO,CAAE0M,YAAa,KAC1B,kBAACL,EAAD,CAAS3L,KAAMwL,EAAMtL,MAAO8D,EAAMiI,cAAehM,KAAM,MAEvD,KAEHqG,GACC,kBAACmB,EAAA,QAAD,CAAMnI,MAAO,CAAEsI,UAAW,SAAU1H,MAAO8D,EAAMiI,gBAC9C3F,M,kbC8BE4F,G,qLAxDbxC,MAAQ,CACNyC,SAAU,KACV5N,SAAU,M,gDAEF,IAAD,SAIH+K,KAAKJ,MAJF,IAELmB,YAAeC,EAFV,EAEUA,GAAIL,EAFd,EAEcA,OAAQM,EAFtB,EAEsBA,SAIvBlK,GANC,EAGL+L,WAGczP,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SAExBpN,KAAKwE,OAAO6G,EAAGgC,SAAWC,KAAK5H,OAAS,KACpD,OACE,kBAACtF,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,SAAUC,WAAY,WAC5D,kBAACjI,EAAA,QAAD,KACE,kBAACG,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAAO,IAAKC,OAAQ,OAE9B0J,KAAKI,MAAMnL,SACV,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAME,cAChCoF,KAAKI,MAAMnL,SAASA,UAErB,KACJ,kBAAC,GAAD,CACE+H,MAAOjG,EAAQ,mBACfP,QAAS,WACP9B,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdyN,OAAQ,EAAK9C,MAAMyC,aAGpB7N,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ6L,EAASN,EAAOlL,YAEhB,EAAK0N,SAAS,CAAElO,aAHZ,+DAKLI,OAAM,SAACC,GACNC,QAAQD,MAAMA,e,GA/Cb4G,IAAMuE,W,2bC4BV2C,G,yIA3BH,IAAD,EAIHpD,KAAKJ,MAJF,IAELmB,YAAeC,EAFV,EAEUA,GAAIL,EAFd,EAEcA,OAAQM,EAFtB,EAEsBA,SAGvBoC,GALC,EAGLP,WAEUnN,KAAKwE,OAAO6G,EAAGgC,SAAWC,KAAK5H,OAAS,MAC9CtE,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE+H,eAAgB,SAAUC,WAAY,WACnD,kBAACG,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAME,cAChC7D,EAAQ,sBAAD,MAAwBiK,OAAxB,EAAwBA,EAAIsC,OAEtC,kBAAC,KAAD,CACEC,MAAOF,EACPG,SAAU,WACRvC,EAASN,EAAOlL,aAElBkB,KAAM,GACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG5M,EAAQ,WAAY6M,EAAG7M,EAAQ,mB,GArBxCmF,IAAMuE,W,iDCQlBoD,GAAe,SAAC,GAAiC,IAA/BlD,EAA8B,EAA9BA,OAAQoC,EAAsB,EAAtBA,OAAQe,EAAc,EAAdA,QAChC/M,EAAU1D,EAAgB0P,GADoB,EAE1BrN,mBAAS,IAFiB,WAE7CqO,EAF6C,KAEtCC,EAFsC,KAIpD,OACE,kBAACzF,EAAA,EAAD,CACE/B,MAAOuH,EACPE,YAAalN,EAAQ,mBACrBf,MAAO,CACL8H,gBAAiB,UACjBO,SAAU,GACVzH,MAAO,QACP+H,KAAM,EACNtI,MAAO,KAETmI,aAAcwF,EACdE,gBAAiB,YAAgC,IAAdhN,EAAa,EAA5BiN,YAAejN,KACjCxC,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdwH,QAAS/F,MAGVlC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACoP,GACLN,IAEoB,QAAhBhE,UAASC,IACXsE,SAASC,SAGXN,EAAS,OAEV3O,OAAM,SAACC,GACNC,QAAQD,MAAMA,UA4HXiP,GAtHF,SAAC,GAAgC,IAA9B5D,EAA6B,EAA7BA,OAAQmC,EAAqB,EAArBA,WAAY9B,EAAS,EAATA,GAAS,EACnBtL,mBAAS,IADU,WACpC0O,EADoC,KAC9BI,EAD8B,KAGrCV,EAAU,WACdpP,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACoP,GACLI,EAAQJ,MAET/O,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIpBpB,GAAO,kBAAM4P,OAEbzP,qBAAU,WACRyP,MACC,CAAChB,EAAW1C,MAAMqE,YAWrB,IAAMC,EAAUN,EACb9G,KAAI,SAAC7C,GAAD,SAAaA,EAAK/D,KAAO+D,EAAKwC,WAClC/J,KAAK,QAEFI,EAAMqR,mBAAQ,wBAAahP,KAAKC,SAAS5B,aAAc,CAC3D8O,EAAW1C,MAAMqE,YAGnB,OACE,kBAAC1O,EAAA,QAAD,CAAMzC,IAAKA,GACT,kBAACyC,EAAA,QAAD,CACEC,MAAO,CACLK,MAAO,OACPyH,gBAAiB,OACjB8G,YAAa,EACbC,YAAa,QACb5O,cAAe6J,UAASgF,OAAO,CAAEC,IAAK,MAAOC,aAASjQ,MAGvD+K,UAASgF,OAAO,CACfC,IACE,kBAAChP,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,WACrC2G,EACC,kBAAC,KAAD,MACG,YAAe,EAAZ7Q,MACF,OACE,oCACGuQ,EAAK9G,KAAI,SAAC7C,EAAM5G,GAAP,OACR,kBAACsK,EAAA,QAAD,CACEnI,MAAO,CAAEY,MAAO,SAChBqO,cAAe,EACf3R,IAAG,OAASO,GAEZ,kBAAC0C,EAAA,EAAD,CACEC,QAAS,WACPsM,EAAWoC,SAAS,UAAW,CAC7BxO,KAAM+D,EAAK/D,SAIf,kBAACyH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,SACxB3D,EAAK/D,OAbZ,QAgBU+D,EAAKwC,QAhBf,mBAuBR,MAIR+H,QACE,kBAAC,KAAD,CACEhP,MAAO,CAAEqI,SAAU,IACnB8G,SAA2B,GAAjBT,EAAQ7K,OAClBuL,gBAAc,EACdC,MAAI,EACJC,aAAc,IACdC,kBAAmB,KAEnB,oCACGnB,EAAK9G,KAAI,SAAC7C,EAAM5G,GAAP,OACR,kBAAC,WAAD,CAAUP,IAAG,OAASO,GACpB,kBAACsK,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,SAAW3D,EAAK/D,MAD7C,QAEU+D,EAAKwC,QAFf,mBASV,kBAAClH,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KACjC,kBAAC,GAAD,CAAcyM,OAAM,MAAE/B,OAAF,EAAEA,EAAI+B,OAAQpC,OAAQA,EAAQmD,QAASA,Q,UCtKxD0B,GAAgB,WAAO,IAAD,EACa9P,oBAAS,GADtB,WAC1B+P,EAD0B,KACTC,EADS,KAEjCrR,qBAAU,WAENsR,IACAC,MAAoB,kBAAMC,OAC1BA,MAED,IAEH,IAAMF,EAAoB,WACxBC,MAAoB,kBAAMC,QAEtBA,EAAc,WAClBD,OAA8B5Q,MAAK,SAAC8Q,GAC9BA,EAAIC,aACNH,OAA2B5Q,MAAK,SAAC8Q,GAC/BJ,GAAmB,UAM3B,OAAOD,GCPHO,GAFYhE,IAAWzI,IAAI,UAAzBlD,MAEsB,IAiQf4P,OA/Pf,YAA6C,IAAD,EAA1BnD,EAA0B,EAA1BA,WAAYnC,EAAc,EAAdA,OAAQK,EAAM,EAANA,GAC9BjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9BmD,EAAY,CAChBxD,YAAa,GACbyD,aAAc,GACdvP,MAAO+J,EAAOjG,MAAMiI,eAGlB8C,GAAkB,EACF,QAAhB3F,UAASC,KACX0F,EAAkBD,MAEpB,IAAMY,GAAyC,KAApB,MAAFpF,OAAA,EAAAA,EAAIqF,iBAA6B,MAAFrF,OAAA,EAAAA,EAAIsF,aAAc,GAEpEC,EAAeH,GACnB,kBAACrQ,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTJ,gBAAiB6C,EAAOjG,MAAM8H,UAC9BvE,aAAc,IAGhB,kBAACE,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAMiI,gBAChC5L,EAAQ,sBAEX,kBAAChB,EAAA,QAAD,CACEC,MAAO,CACLwQ,UAAW,GACXvQ,cAAe,MACf8H,eAAgB,kBAGlB,kBAAC,GAAD,CACEf,MAAOjG,EAAQ,gBACfP,QAAS,kBAAMsM,EAAWoC,SAAS,kBAErC,kBAAC,GAAD,CACElI,MAAOjG,EAAQ,wBACfP,QAAS,kBAAMsM,EAAWoC,SAAS,cAMrCuB,EAAkBhB,GACtB,kBAAClP,EAAA,EAAD,CACEC,QAAS,kBAAMoP,QAAQc,eACvB1Q,MAAO,CACLkI,QAAS,GACTJ,gBAAiB6C,EAAOjG,MAAM8H,UAC9BvE,aAAc,IAGhB,kBAACE,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAMiI,gBAChC5L,EAAQ,2BAKT4P,IAAoB,MAAC3F,OAAD,EAACA,EAAIqF,gBAC7B,kBAACtQ,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,EACTJ,gBAAiB6C,EAAOjG,MAAM8H,UAC9BvE,aAAc,IAGhB,kBAAC1H,EAAA,EAAD,CACEP,MAAO,CACLC,cAAe,MACf8H,eAAgB,SAChBC,WAAY,UAEdxH,QAAS,kBAAMsM,EAAWoC,SAAS,iBAEnC,kBAAC,KAAD,CACExO,KAAK,qBACLE,MAAM,MACNZ,MAAO,CAAE0M,YAAa,MAExB,kBAACvE,EAAA,QAAD,CACEnI,MAAO,CACLY,MAAO+J,EAAOjG,MAAMiI,cACpBvE,WAAY,SAGbrH,EAAQ,8BAOX6P,EAAgD,SAA/B9D,EAAW1C,MAAMqE,UAElCoC,EACJ,kBAAC9Q,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf6Q,SAAU,OACV/I,eAAgB,SAChBgJ,YAAa,OACbC,aAAc,CACZ3Q,MAAO,EACPC,OAAQ,GAEV2Q,cAAe,IACfC,aAAc,KACdC,UAAW,IAGb,kBAAChJ,EAAA,QAAD,CAAMnI,MAAOkQ,GAAb,sBACMlF,OADN,EACMA,EAAItK,KADV,UACiBsK,GADjB,SACiBA,EAAIoG,WADrB,EACiB,EAAU1Q,MAE3B,kBAACyH,EAAA,QAAD,CAAMnI,MAAOkQ,GAAb,sBAA6BpS,EAAY,MAACkN,OAAD,EAACA,EAAIqG,MAA9C,MACA,kBAAClJ,EAAA,QAAD,CAAMnI,MAAOkQ,GAAb,sBAA6BpS,EAAY,MAACkN,OAAD,EAACA,EAAIsG,MAA9C,MACA,kBAACvR,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,IAAD,CACES,KAAK,SACLC,KAAM,GACNC,MAAO+J,EAAOjG,MAAMiI,cACpB3M,MAAO,CAAE0M,YAAa,KAExB,kBAACvE,EAAA,QAAD,CAAMnI,MAAOkQ,GAAYpS,EAAY,MAACkN,OAAD,EAACA,EAAIuG,WAE5C,kBAACpJ,EAAA,QAAD,CAAMnI,MAAOkQ,GAAb,sBAA4BlF,OAA5B,EAA4BA,EAAIwG,YAChC,kBAACrJ,EAAA,QAAD,CAAMnI,MAAOkQ,GAAb,sBAA4BlF,OAA5B,EAA4BA,EAAIsC,MAChC,kBAACnF,EAAA,QAAD,CAAMnI,MAAOkQ,GAAb,sBAA4BlF,OAA5B,EAA4BA,EAAIyG,OAAhC,KACA,kBAACtJ,EAAA,QAAD,CAAMnI,MAAOkQ,GAAb,gBACMnK,GAAO,MAACiF,OAAD,EAACA,EAAIlG,KAAM,QADxB,WACmCkG,OADnC,EACmCA,EAAIvD,SADvC,MAGA,kBAACU,EAAA,QAAD,CAAMnI,MAAOkQ,GAAb,gBAA4BlK,GAAW,MAACgF,OAAD,EAACA,EAAI0G,SAAU,WACrD,MAAC1G,OAAD,EAACA,EAAI2G,aACJ,kBAACxJ,EAAA,QAAD,CACEnI,MAAOkQ,EACP1P,QAAS,kBAAMsM,EAAWoC,SAAS,cAFrC,sBAIMlE,OAJN,EAIMA,EAAI4G,QAKbjB,GAICkB,EACJ,kBAAC9R,EAAA,QAAD,CACEC,MAAO,CACL8R,OAAQ,GACR/J,eAAgB,gBAChB9H,cAAe,QAGhB2Q,EACC,kBAACrQ,EAAA,EAAD,CACEwR,QAAS,CAAErK,IAAK,GAAIE,KAAM,GAAIC,MAAO,GAAIF,OAAQ,IACjDnH,QAAS,WACHwP,IAAiC,QAAhBlG,UAASC,GAC5B+C,EAAWkF,SAEXC,OAAOC,QAAQC,SAInB,kBAAC,KAAD,CACEzR,KAAK,YACLC,KAAM,GACNC,MAAO+J,EAAOjG,MAAMiI,iBAIxB,kBAAC5M,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,OAKvB8R,EACJ,kBAACrS,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,WAGlB,kBAAChI,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,KAAOwR,GAE7B,kBAAC9R,EAAA,QAAD,CAAMC,MAAO,CAAEgI,WAAY,SAAUW,KAAM,IACzC,kBAACzI,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CACL8R,OAAQ,GACRzR,MAAO2P,GAAgB,IAAM,IAC7B1P,OAAQ0P,GAAgB,GAAK,QAKnC,kBAAC7H,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,QAAS4P,UAAW,KAA1C,IACIhU,IAAU6V,SAASC,SAGtBtC,GACC,kBAACzP,EAAA,EAAD,CACEC,QAAS,WACPsM,EAAWyF,gBAEbvS,MAAO,CAAE8R,OAAQ,KAEjB,kBAACU,GAAA,EAAD,CACE9R,KAAK,OACLC,KAAM,GACNC,MAAM,OACNZ,MAAO,CAAEY,MAAO,WAGlB,MAGLoP,IAAiBa,EAElB,kBAAC,GAAD,CAAM7F,GAAIA,EAAIL,OAAQA,EAAQmC,WAAYA,KAIxC2F,EACJ7B,IACA,EAIF,OACE,kBAAC7Q,EAAA,QAAD,CAAMC,MAAO,CAAE+H,eAAgB,WACZ,QAAhB+B,UAASC,GACRqI,EAEA,kBAACrS,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiB6C,EAAOjG,MAAM8H,UAC9BkG,WACkB,YAAhB5I,UAASC,IAAoB0I,EACzBE,KAAUC,cACV,IAGPf,EACApB,GAAmBF,GAAgBM,K,kBC3Q1CgC,IAAY,EAEhB,GAAIC,aAAW,CASb,IACIC,GAAqB,EASzB,SAASC,KACPD,GAAqB9F,KAAK5H,MACtBwN,KACFA,IAAY,GAIhBI,SAAS9I,iBAAiB,aAAc6I,IAAc,GACtDC,SAAS9I,iBAAiB,YAAa6I,IAAc,GACrDC,SAAS9I,iBAAiB,aAhB1B,WACM0I,IAAa5F,KAAK5H,MAAQ0N,GAJL,MAOzBF,IAAY,MAYsC,GC5BvC,SAASK,GAAT,GAAyD,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,WAAY/M,EAAY,EAAZA,SAAY,EACrCH,IAAMxG,UAAS,GADsB,WAC9D2T,EAD8D,KACnDC,EADmD,OAEnCpN,IAAMxG,UAAS,GAFoB,WAE9D6T,EAF8D,KAEnDC,EAFmD,KAwBrE,IAAMC,EACgB,oBAAbpN,EACHA,EAASkN,GAAaF,GACtBhN,EAEN,OAAOH,IAAMwN,aAAaxN,IAAMyN,SAASC,KAAKH,GAAQ,CACpDI,aA1BF,SAA0BC,GD4BnBjB,KC3BoBQ,IACnBF,GAAWA,IACfG,GAAW,KAwBbS,aApBF,SAA0BD,GACpBT,IACED,GAAYA,IAChBE,GAAW,KAmBbU,iBAAkB,kBAAMR,GAAa,IACrCS,mBAAoB,kBAAMT,GAAa,IAEvCU,UAlBF,WACEV,GAAa,IAkBbW,WAfF,eAmBFjB,GAAUkB,YAAc,YAExBlB,GAAUmB,UAAY,CACpBhO,SAAUiO,qBAAU,CAACC,QAAMC,aAC3BrB,UAAWoB,QACXnB,WAAYmB,S,iCC/BCE,GAfL,SAAC,GAAkC,IAAhCpO,EAA+B,EAA/BA,SAAUqO,EAAqB,EAArBA,KAAS9K,EAAY,4BACpClF,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SAClD,OACE,kBAACyD,EAAA,QAAD,OACMyB,EADN,CAEE5J,MAAO,CACL,CAAEY,MAAO8D,EAAME,YAAawD,WAAYsM,EAAO,YAAS3V,GACxD6K,EAAM5J,SAGPqG,I,kbC2GQsO,G,qLAjHbvK,MAAQ,CACNwK,KAAM,I,EAkCRC,WAAa,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAKRqQ,GAL0B,EAAZjX,MAGhB,EAAK+L,MADPmB,YAAeJ,OAGDhL,KAAKoV,OAAOtQ,EAAKuQ,OAAS/H,KAAK5H,OAAS,MAExD,OACE,kBAACtF,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,KAAIwE,EAAK/D,MACT,kBAAC,KAAD,CACEV,MAAO,CAAEI,WAAY,IACrBmN,MAAOuH,EACPG,WAAY,CAAEnN,gBAAiB,WAC/BoN,cAAe,CAAEtU,MAAO,SACxB4M,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,U,EAMlCuH,OAAS,SAAO/P,GAAP,uBAAAjG,EAAAC,OAAA,yDACsB,EAAKwK,MAAMmB,YAAhCJ,EADD,EACCA,OAAQM,EADT,EACSA,SADT,WAAA9L,EAAA,MAEoBqE,EAAK,SAAU,CACxC0H,MAAOP,EAAOlL,WACd2F,UAJK,gBAECnG,EAFD,EAECA,SAIR,EAAKkO,SAAS,CAAElO,aAChBgM,EAASN,EAAOlL,YAPT,6D,2DAxDY,IAAD,OAClBuK,KAAKoL,eADa,MAGWpL,KAAKJ,MAAMmB,YAAhCE,EAHU,EAGVA,SAAUN,EAHA,EAGAA,OAClBX,KAAKM,SAAWC,aAAY,WAC1BU,EAASN,EAAOlL,YAChB,EAAK2V,iBACJ,Q,6CAIH7V,QAAQ6H,IAAI,uBACZmE,cAAcvB,KAAKM,Y,mCAGR+K,GAAQ,IAAD,OAClB3W,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASwV,EAAT,EAASA,KACb,EAAKzH,SAAS,CAAEyH,SADZ,+DAGLvV,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAqCV,IAAD,SAIH0K,KAAKJ,MAJF,IAELmB,YAAeC,EAFV,EAEUA,GAIXjK,GANC,EAEc4J,OAFd,EAEsBM,SAFtB,EAGL6B,WAGczP,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SAE5B9N,EAAa+K,KAAKI,MAAlBnL,SACFoO,EAAM1N,KAAKwE,OAAO6G,EAAGgK,OAAS/H,KAAK5H,OAAS,KAClD,OACE,kBAACtF,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGX,WAAY,WAClC,kBAAC,GAAD,KAAIjH,EAAQ,oBAEZ,kBAAC,KAAD,CACEwM,MAAOF,EACP1M,KAAM,GACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG5M,EAAQ,WAAY6M,EAAG7M,EAAQ,cAGlD,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,MAEtBrB,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,CACEe,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,qBACfP,QAAS,kBAAM,EAAK2U,OAAO,cAE7B,kBAAC,GAAD,CACEnV,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,kBACfP,QAAS,kBAAM,EAAK2U,OAAO,WAG7B,kBAACI,GAAA,EAAD,CACEC,KAAMxL,KAAKI,MAAMwK,KACjBC,WAAY7K,KAAK6K,WACjBY,oBAAqBzL,KAAK0L,oB,GA3GjBxP,IAAMuE,W,iDCYVzK,GAjBD,SAAC0E,GAAD,OACZiR,KAAWC,OAAO,CAChBzU,UAAW,CACTP,MAAO8D,EAAMiI,cACb7E,gBAAiBpD,EAAM8H,UACvBtE,QAAS,GACTH,eAAgB,SAChB0E,kBAAmB,GAEnB6I,eAAgB,IAElBO,UAAW,CACTlN,KAAM,EACNmJ,OAAQ,OC6YCgE,GA3YI,SAAC,GASb,IAAD,IARJ/K,YACEH,EAOE,EAPFA,SACAI,EAME,EANFA,GACAL,EAKE,EALFA,OACAM,EAIE,EAJFA,SACUvG,EAGR,EAHFiG,OAAUjG,MAEZoI,EACI,EADJA,WAEM/L,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAEoBrN,mBAAQ,MAACsL,OAAD,EAACA,EAAItK,MAFjC,WAEGA,EAFH,KAESqV,EAFT,OAG4BrW,mBAAS,MAHrC,WAGGT,EAHH,KAGa+W,EAHb,OAIsBtW,mBAAS,IAJ/B,WAIGuW,EAJH,KAIUC,EAJV,OAK4BxW,mBAAS,IALrC,WAKGyW,EALH,KAKaC,EALb,OAMsB1W,mBAAS,MAN/B,WAMGJ,EANH,KAMU+W,EANV,OAO0B3W,mBAAS,MAPnC,WAOG4W,EAPH,KAOYC,EAPZ,OAQsB7W,mBAAS,IAR/B,WAQG8W,EARH,KAQUC,EARV,OASoB/W,mBAAS,MAT7B,WASGgX,EATH,KASSC,EATT,OAUoBjX,mBAAS,IAV7B,WAUGkX,GAVH,KAUS3V,GAVT,KAWE4V,GAAa,8BAAA1X,EAAAC,OAAA,kEAAAD,EAAA,MACmBqE,EAAK,aAAc,CACrD/D,WAAYkL,EAAOlL,WACnBiB,UAHe,uBACTzB,EADS,EACTA,SAAUqX,EADD,EACCA,QAIlBN,EAAY/W,GALK,kBAOVqX,GAPU,6DAUbQ,GAAQ,kBAAMlM,EAAS,CAAExF,KAAM,aAAcoB,OAAO,KAC1DnI,qBAAU,WACR0X,EAAO,MAAC/K,OAAD,EAACA,EAAItK,QACX,OAACsK,OAAD,EAACA,EAAItK,OAxBJ,IA0BI+K,GAA2BvF,IAAM6Q,WAAWlM,IAA5CY,uBA+TR,OACE,kBAAC1L,EAAA,QAAD,CACEC,MAAO,CACLyH,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,kBACjBC,eAAgB,SAChBC,WAAY,WAGd,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiBpD,EAAMsS,QACvB/O,aAAc,GACdC,QAAS,KAGX,kBAAC3H,EAAA,EAAD,CACEC,QAAkB,OAATkW,EAAgB,kBAAMC,EAAQ,OAAQG,GAC/C9W,MAAO,CAAEiX,UAAW,aAEpB,kBAACC,GAAA,EAAD,CAAQxW,KAAK,QAAQE,MAAO8D,EAAME,YAAajE,KAAM,OAGtD,MAACqK,OAAD,EAACA,EAAImM,IAA6B,KAAxB,kBAACC,GAAA,EAAD,MAED,cAATV,EAnQL,kBAAC3W,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEC,MAAO,CACL8R,OAAQ,GACR5J,QAAS,GACTD,aAAc,KAGf3I,EAAQ,kBAAC6I,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,QAAUtB,GAAgB,KAExDgX,EACC,kBAACnO,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,UAAY0V,GAElC,kBAACvW,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,UAExC,kBAACwH,EAAA,EAAD,CACE0F,YAAalN,EAAQ,SACrBsW,qBAAsB3S,EAAM4S,kBAC5B9O,aAAc0N,EACd1P,MAAOyP,EACPjW,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,aAExC,kBAACwH,EAAA,EAAD,CACEgP,iBAAe,EACf/O,aAAc4N,EACd5P,MAAO2P,EACPnW,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CACE2E,MAAOA,EACPsC,MAAOjG,EAAQ,SACfP,QAAS,WAlHrB9B,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEmX,QAAOE,SAAUqB,KAAIC,QAAQtB,OAEnDnX,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAO0Y,GAAP,SAAAvY,EAAAC,OAAA,uDACAsY,EAAapY,MACf+W,EAASqB,EAAapY,QAGtBsL,EAAS,CACPxF,KAAM,4BACNoB,MAAOkR,EAAajY,aAEtBwL,EAASyM,EAAajY,YACtB4W,EAAS,MACTE,EAAWmB,EAAapB,SACxB7K,GAAuBiM,EAAaxM,QAZlC,kBAeGwM,GAfH,+DAiBLrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,UA2FV,kBAACS,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACT4I,SAAU,OACV/I,eAAgB,kBAGlB,kBAACxH,EAAA,EAAD,CACEC,QAAS,WACPsW,KAEAhK,EAAWoC,SAAS,iBAGtB,kBAAC/G,EAAA,QAAD,CACEnI,MAAO,CACL8R,OAAQ,GACRzJ,SAAU,GACVsP,mBAAoB,cAGrB5W,EAAQ,cAIb,kBAACR,EAAA,EAAD,CACEC,QAAS,WACPsW,KACAhK,EAAWoC,SAAS,oBAGtB,kBAAC/G,EAAA,QAAD,CACEnI,MAAO,CACL8R,OAAQ,GACRzJ,SAAU,GACVsP,mBAAoB,cAGrB5W,EAAQ,wBA+JN,UAAT2V,EApHR,kBAAC3W,EAAA,QAAD,KACGd,GAAY,kBAAC,GAAD,KAAIA,GAEjB,kBAACc,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,gBACxC,kBAACwH,EAAA,EAAD,CACE0F,YAAY,MACZoJ,qBAAsB3S,EAAM4S,kBAC5B9O,aAAciO,EACdjQ,MAAOgQ,EACPxW,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CACE2E,MAAOA,EACPsC,MAAOjG,EAAQ,QACfP,QAAS,WAvMf9B,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAE0X,QAAOtL,MAAOP,EAAOlL,eAE3CT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GAML,OALA1B,EAAY0B,EAAazY,UAErByY,EAAapB,SACfK,EAAQ,QAEHe,KAERrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,WA4QD,SAAToX,EAvJR,kBAAC3W,EAAA,QAAD,KACGd,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAACc,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB7D,EAAQ,SAEpD,kBAACwH,EAAA,EAAD,CACE0F,YAAY,SACZoJ,qBAAsB3S,EAAM4S,kBAC5B9O,aAAcvH,GACduF,MAAOoQ,GACP5W,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CAAQiH,MAAOjG,EAAQ,YAAaP,QAAS,WAnOjD9B,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnB8X,QACAJ,YAGDxX,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GAYL,OAXA1B,EAAY0B,EAAazY,UAErByY,EAAapB,UACf1L,EAAS,CACPxF,KAAM,4BACNoB,MAAOkR,EAAaxM,QAGtBD,EAASyM,EAAajY,YACtBgM,GAAuBiM,EAAaxM,QAE/BwM,KAERrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,WAkPlB,kBAACS,EAAA,QAAD,KAEGd,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAACc,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAC/C,kBAAC,GAAD,KAAIjH,EAAQ,WACZ,kBAACwH,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAO,CAACA,GAAM0E,GAAOvD,UAAW,CAAEf,WAAY,KAC9C6N,YAAalN,EAAQ,QACrByF,MAAO9F,EACP8H,aAAcuN,KAGlB,kBAAC,GAAD,CACE/V,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,YACfP,QAAS,oBAAArB,EAAAC,OAAA,mDACF4L,EADE,uBAELgL,EAAYjV,EAAQ,oBAFf,6BAKHL,KAAI,MAAKsK,OAAL,EAAKA,EAAItK,MALV,mCAAAvB,EAAA,MAMiB0X,MANjB,gBAQH5L,EAASN,EAAOlL,YAEhBqX,MAVG,wBAaLA,KAbK,gEAkBX,kBAAC,GAAD,CACE9W,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,kBACfP,QAAS,kBAAMmW,EAAQ,gBAGzB,kBAAC,GAAD,CACE3W,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,kBACfP,QAAS,kBAAMmW,EAAQ,gB,ycC5VxB,IAAMiB,GAAb,kCAIE,WAAYhO,GAAoC,IAAD,uBAC7C,cAAMA,IA8CRiO,iBAAmB,SAAC/D,GAElB,IACM3E,EAAW2E,GAAKA,EAAE3E,SAAW2E,EAAE3E,SAAW,IAG9B,YAAhBrF,UAASC,IACT4I,KAAUC,eACVD,KAAUC,cAAgB,IAEZD,KAAUC,cAMtB,EAAKhJ,MAAMkO,oBACb,EAAKlO,MAAMkO,mBAAmB3I,GAGhC,IAAM4I,EACJjE,EAAEkE,eAAe1X,QAGhB,EAAKsJ,MAAMqO,QAAU,IhB6JH,WACvB,IAAMC,EAAMlM,IAAWzI,IAAI,UAE3B,MAEkB,QAAhBuG,UAASC,KAbS,SAACmO,GACrB,OAAqB,KAAdA,EAAI5X,QAA8B,KAAb4X,EAAI7X,MAc7B8X,CAAcD,IAXI,SAACA,GACtB,OAAqB,KAAdA,EAAI5X,QAA8B,KAAb4X,EAAI7X,MAUP+X,CAAeF,IgBnKnCG,GAvB+B,GAuBW,GAE7CC,KAASC,OAAO,EAAKnO,MAAM9J,OAAQ,CACjC6O,WACAqJ,OAAQC,KAAOC,KACfX,UACAY,iBAAiB,IAChBC,SA/E0C,EAkF/CC,iBAAmB,SAAC/E,GAClB,IAAM3E,EAAW2E,GAAKA,EAAE3E,SAAW2E,EAAE3E,SAAW,IAC5C,EAAKvF,MAAMkP,oBACb,EAAKlP,MAAMkP,mBAAmB3J,GAEhCmJ,KAASC,OAAO,EAAKnO,MAAM9J,OAAQ,CACjC6O,WACAqJ,OAAQC,KAAOC,KACfX,QAAS,EACTY,iBAAiB,IAChBC,SA1FH,EAAKxO,MAAQ,CACX9J,OAAQ,IAAIgY,KAASS,MAAM,IAHgB,EAJjD,yDAYI/O,KAAKgP,kBAZT,6CAgBIhP,KAAKiP,oBAhBT,sCAoBwB,QAAhBnP,UAASC,IACXC,KAAKkP,yBAA2BC,KAASC,YACvC,mBACApP,KAAK6N,kBAEP7N,KAAKqP,yBAA2BF,KAASC,YACvC,mBACApP,KAAK6O,oBAGP7O,KAAKsP,wBAA0BH,KAASC,YACtC,kBACApP,KAAK6N,kBAEP7N,KAAKuP,wBAA0BJ,KAASC,YACtC,kBACApP,KAAK6O,qBApCb,wCA0CwB,QAAhB/O,UAASC,IACXC,KAAKkP,yBAAyBM,SAC9BxP,KAAKqP,yBAAyBG,WAE9BxP,KAAKsP,wBAAwBE,SAC7BxP,KAAKuP,wBAAwBC,YA/CnC,+BAoGI,OAAO,gBAAClB,GAAA,EAASvY,KAAV,CAAeC,MAAO,CAAEM,OAAQ0J,KAAKI,MAAM9J,cApGtD,GAA2C4F,aCP9BuT,GAAc,WACzB,IAAMC,EAA8B,IAAnBjX,MAASkX,MACpBC,EAA4B,KAApBnX,MAASoX,OAIvB,OAH4BpX,MAASqX,QACnCrX,IAAO,aAAc,cAAcC,IAAI,OAAQ,OAElBgX,GAAYE,IAGhCG,GAAW,SAAC/O,EAAItG,GAC3B,IAAMsV,EAAkBra,KAAKsa,OACxB,MAAFjP,OAAA,EAAAA,EAAIkP,cAAe,IAAQjN,KAAK5H,OAAS,KAGtC8U,EAAexa,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAIoP,SAAU,IAAQnN,KAAK5H,OAAS,KAC9DgV,EAAgB1a,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAIsP,UAAWrN,KAAK5H,OAAS,KAExDkV,EAAgB5a,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAIwP,UAAW,KAASvN,KAAK5H,OAAS,KAEjEoV,EAAa9a,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAI0P,OAAQ,IAAQzN,KAAK5H,OAAS,KAE1DsV,EAAahb,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAI4P,QAAJ,MAAY5P,OAAZ,EAAYA,EAAI6P,SAAU5N,KAAK5H,OAAS,KAChEyV,EAAcnb,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAI+P,QAAS,KAAS9N,KAAK5H,OAAS,KAC7D2V,EAAiBrb,KAAKsa,OACvB,MAAFjP,OAAA,EAAAA,EAAIiQ,WAAY,KAAShO,KAAK5H,OAAS,KAEpC6V,EAAgBvb,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAImQ,UAAW,KAASlO,KAAK5H,OAAS,KACjE+V,EAAiBzb,KAAKsa,OACvB,MAAFjP,OAAA,EAAAA,EAAIqQ,WAAiC,KAAnB,MAAFrQ,OAAA,EAAAA,EAAIoQ,gBAAwBnO,KAAK5H,OAAS,KAGvDtE,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,MAAO,CACL,CACEuO,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,eACdya,MAAO/B,KAAgB,kBAAe1a,GAGxC0c,QAAS,CACP,CACEC,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,cACd4a,GAAI,SACJta,UACE8Y,EAAe,EACb,kBAAC,KAAD,CACEna,MAAO,CAAEI,WAAY,IACrBmN,MAAO4M,EACPlF,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8N,SAAU,YACVxP,KAAM,cACNhL,KAAMH,EAAQ,WACd4a,GAAI,MACJta,UACEsZ,EAAa,EACX,kBAAC,KAAD,CACE3a,MAAO,CAAEI,WAAY,IACrBmN,MAAOoN,EACP1F,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8N,SAAU,yBACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACd4a,GAAI,OACJta,UACEyZ,EAAc,EACZ,kBAAC,KAAD,CACE9a,MAAO,CAAEI,WAAY,IACrBmN,MAAOuN,EACP7F,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8N,SAAU,gBACVxP,KAAM,SACNhL,KAAMH,EAAQ,eACd4a,GAAI,UACJta,UACE2Z,EAAiB,EACf,kBAAC,KAAD,CACEhb,MAAO,CAAEI,WAAY,IACrBmN,MAAOyN,EACP/F,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8N,SAAU,cACVxP,KAAM,SACNhL,KAAMH,EAAQ,mBACd4a,GAAI,SACJta,UACE6Z,EAAgB,EACd,kBAAC,KAAD,CACElb,MAAO,CAAEI,WAAY,IACrBmN,MAAO2N,EACPjG,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEgO,SACEnZ,MAASoZ,SAASva,EAAgBgC,qBAChC,MAAF0H,OAAA,EAAAA,EAAI8Q,OAAQ,EACdC,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgBgC,mBAAmB0Y,IACxC1a,EAAgBgB,SAChB,SAGJoZ,SAAU,YACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACd4a,GAAI,QAGN,CACED,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,WAAD,MAAaiK,OAAb,EAAaA,EAAI4J,MAC9B+G,GAAI,QAGN,CACEC,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBG,oBAC3Csa,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBG,oBACdH,EAAgBS,mBAEpB2Z,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACd4a,GAAI,QAGN,CACEC,SACGnZ,MAASoZ,SAASva,EAAgB+B,wBAC/B,MAAF2H,OAAA,EAAAA,EAAI8Q,OAAQ,IACZ,MAAF9Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBC,uBACnCwa,MACEtZ,MAASoZ,SACPpZ,IAAOnB,EAAgB+B,sBAAsB2Y,IAC3C1a,EAAgBgB,SAChB,WAGF,MAAF0I,OAAA,EAAAA,EAAIsF,YACFhP,EAAgBC,uBACdD,EAAgBS,mBAEtB2Z,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,eACd4a,GAAI,UACJta,UACE+Z,EAAiB,EACf,kBAAC,KAAD,CACEpb,MAAO,CAAEI,WAAY,IACrBmN,MAAO6N,EACPnG,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,OAER7E,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,iBAI1B,MAAC5Q,OAAD,EAACA,EAAImM,MAAQ,MAAFnM,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBW,+BACzC,CACHqZ,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,oBAGhB0a,QAAS,CACP,CACEG,WACE,MAAC5Q,OAAD,EAACA,EAAImM,MAAQ,MAAFnM,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBY,oBAC9C6Z,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBY,oBACdZ,EAAgBS,mBACpB2Z,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,YACd4a,GAAI,OACJta,UACEkZ,EAAgB,EACd,kBAAC,KAAD,CACEva,MAAO,CAAEI,WAAY,IACrBmN,MAAOgN,EACPtF,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAER,CACEgO,WACE,MAAC5Q,OAAD,EAACA,EAAImM,MAAQ,MAAFnM,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBU,mBAC9C+Z,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBU,mBACdV,EAAgBS,mBACpB2Z,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,WACd4a,GAAI,MACJta,UACEoZ,EAAa,EACX,kBAAC,KAAD,CACEza,MAAO,CAAEI,WAAY,IACrBmN,MAAOkN,EACPxF,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEgO,UACI,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBa,6BACnC4Z,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBa,6BACdb,EAAgBS,mBAEpB2Z,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,qBACd4a,GAAI,iBAEN,CACEC,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBK,sBAC3Coa,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBK,sBACdL,EAAgBS,mBAEpB2Z,SAAU,yBACVxP,KAAM,YACNhL,KAAMH,EAAQ,cACd4a,GAAI,SACJta,UACEgZ,EAAgB,EACd,kBAAC,KAAD,CACEra,MAAO,CAAEI,WAAY,IACrBmN,MAAO8M,EACPpF,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEgO,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBM,wBAC3Cma,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBM,wBACdN,EAAgBS,mBAEpB2Z,SAAU,eACVxP,KAAM,WACNhL,KAAMH,EAAQ,gBACd4a,GAAI,YAGN,CACEC,SACGnZ,MAASoZ,SAASva,EAAgBuB,2BAC/B,MAAFmI,OAAA,EAAAA,EAAI8Q,OAAQ,IACZ,MAAF9Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBE,0BACnCua,MACEtZ,MAASoZ,SACPpZ,IAAOnB,EAAgBuB,yBAAyBmZ,IAC9C1a,EAAgBgB,SAChB,WAGF,MAAF0I,OAAA,EAAAA,EAAIsF,YACFhP,EAAgB2a,0BACd3a,EAAgBS,mBAEtB2Z,SAAU,cACVxP,KAAM,SACNhL,KAAMH,EAAQ,kBACd4a,GAAI,eAEN5S,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,aAE5B,CACEN,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,eAGhB0a,QAAS,CACP,CACEC,SAAU,cACVxP,KAAM,MACNhL,KAAMH,EAAQ,gBACd4a,GAAI,WACJta,UACE2Y,EAAkB,EAChB,kBAAC,KAAD,CACEha,MAAO,CAAEI,WAAY,IACrBmN,MAAOyM,EACP/E,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8N,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,cACd4a,GAAI,aAcN,CACEC,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBQ,0BAC3Cia,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBQ,0BACdR,EAAgBS,mBAEpB2Z,SAAU,yBACVxP,KAAM,UACNhL,KAAMH,EAAQ,kBACd4a,GAAI,eAEN5S,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,aAG5B,CACEN,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,gBAGhB0a,QAAS,CACP,CACEC,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACd4a,GAAI,YAGN,CACEC,YACI,MAAC5Q,OAAD,EAACA,EAAImM,KAAMnM,EAAG8Q,MAAQ,IACtBrZ,MAASoZ,SAASva,EAAgB4B,uBAClC,MAAF8H,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBc,sBACnC2Z,MACEtZ,MAASoZ,SACPpZ,IAAOnB,EAAgB4B,qBAAqB8Y,IAC1C1a,EAAgBgB,SAChB,WAGF,MAAF0I,OAAA,EAAAA,EAAIsF,YACFhP,EAAgBc,sBACdd,EAAgBS,mBACtB2Z,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,cACd4a,GAAI,UAGN,CACEC,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBI,sBAC3Cqa,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBI,sBACdJ,EAAgBS,mBACpB2Z,SAAU,eACVxP,KAAM,OACNhL,KAAMH,EAAQ,cACd4a,GAAI,UAGN,CACED,SAAU,SACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACd4a,GAAI,eAGN,CACED,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,kBACd4a,GAAI,cAGN,CACED,SAAU,cACVxP,KAAM,SACNhL,KAAMH,EAAQ,sBACd4a,GAAI,kBAGN,CACED,SAAU,WACVxP,KAAM,eACNhL,KAAMH,EAAQ,oBACd4a,GAAI,gBAGN,CACED,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,kBACd4a,GAAI,cAGN,CACEC,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBe,uBAC3C0Z,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBe,uBACdf,EAAgBS,mBAEpB2Z,SAAU,cACVxP,KAAM,QACNhL,KAAMH,EAAQ,eACd4a,GAAI,YAEN5S,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,cAE5B7S,QAAO,SAAChL,GAAD,QAASA,MAGdme,GAAY,SAAClR,GACjB,IAAMjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9BoP,GACF,MAAFnR,OAAA,EAAAA,EAAI8Q,QAAS,EACT,CACE,CACEJ,SAAU,SACVxP,KAAM,MACNhL,KAAMH,EAAQ,iBACd4a,GAAI,kBAGN,CACED,SAAU,SACVxP,KAAM,MACNhL,KAAMH,EAAQ,eACd4a,GAAI,YAGR,GAEAS,GAAe,MAAFpR,KAAI8Q,MAAa,IAC9BO,GAAU,MAAFrR,KAAI8Q,MAAc,IAEhC,OACI,MAAF9Q,OAAA,EAAAA,EAAI8Q,OAAQ,GAAK,CACfR,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,qBAEhB0a,QAAQ,GAAD,OAAMW,EAAeD,EAAYE,KAKjCC,GAAY,SAACtR,EAAItG,GAAW,IAAD,MAChC3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAC9BwP,EAAY5c,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAIwR,MAAO,KAAUvP,KAAK5H,OAAS,KAE1DoX,GAAkB,IAAIha,KAASqX,QACnCxY,EAAgB2B,mBAEZyZ,GACF,MAAF1R,OAAA,EAAAA,EAAI8Q,OAAQ,GAAKW,EACb,CACEnB,OAAQ,CACNC,UAAU,EACVQ,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgB2B,mBAAmB+Y,IACxC1a,EAAgBgB,SAChB,SAGJpB,MAAQ,MAAF8J,GAAA,SAAAA,EAAIoG,WAAJ,IAAU1Q,OAAQK,EAAQ,cAChC4b,OAAS,MAAF3R,GAAA,SAAAA,EAAIoG,WAAJ,IAAUwL,WACbpgB,EAAUC,aAAV,MAAwBuO,GAAxB,SAAwBA,EAAIoG,WAA5B,EAAwB,EAAUwL,WAClC,MAENnB,QAAS,GACP,MAACzQ,OAAD,EAACA,EAAI6R,SAAU,CACbnB,SAAU,WACVxP,KAAM,aACNhL,KAAMH,EAAQ,kBACd4a,GAAI,cAEN,CACED,SAAU,WACVxP,KAAM,aACNhL,KAAMH,EAAQ,aACd4a,GAAI,UAGJ,MAAF3Q,OAAA,EAAAA,EAAI6R,SAAU,CACZnB,SAAU,WACVxP,KAAM,aACNhL,KAAMH,EAAQ,oBACd4a,GAAI,iBAGJ,MAAF3Q,OAAA,EAAAA,EAAI6R,SAAU,CACZnB,SAAU,WACVxP,KAAM,aACNhL,KAAMH,EAAQ,gBACd4a,GAAI,aAGJ,MAAF3Q,OAAA,EAAAA,EAAI6R,SAAU,CACZnB,SAAU,WACVxP,KAAM,aACNhL,KAAMH,EAAQ,wBACd4a,GAAI,qBAGJ,MAAF3Q,OAAA,EAAAA,EAAI6R,SAAU,CACZjB,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZrZ,MAASoZ,SACPva,EAAgByB,kCAEpBgZ,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgByB,kCAAkCiZ,IACvD1a,EAAgBgB,SAChB,SAGJoZ,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,qBACd4a,GAAI,sBAGJ,MAAF3Q,OAAA,EAAAA,EAAI6R,SAAU,CACZjB,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZrZ,MAASoZ,SAASva,EAAgBsB,iBACpCmZ,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgBsB,iBAAiBoZ,IACtC1a,EAAgBgB,SAChB,SAGJoZ,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,UACd4a,GAAI,KACJta,UACEkb,EAAY,EACV,kBAAC,KAAD,CACEvc,MAAO,CAAEI,WAAY,IACrBmN,MAAOgP,EACPtH,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,OAGN,MAAF5C,OAAA,EAAAA,EAAI6R,SAAU,CACZjB,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZrZ,MAASoZ,SAASva,EAAgBwB,4BACpCiZ,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgBwB,4BAA4BkZ,IACjD1a,EAAgBgB,SAChB,SAGJoZ,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,oBACd4a,GAAI,iBAEN5S,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,aAE5B,KAEN,MAAO,CACL,CACEN,OAAQ,CACNC,UAAU,EACVra,KAAI,MAAE8J,OAAF,EAAEA,EAAItK,KACVic,OAAS,MAAF3R,OAAA,EAAAA,EAAI4R,WAAYpgB,EAAUC,aAAV,MAAwBuO,OAAxB,EAAwBA,EAAI4R,WAAY,MAGjEnB,QAAS,CACP,CACEqB,SAAS,EACTpB,SAAU,eACVxP,KAAM,QACNhL,KAAMH,EAAQ,WAAYjD,EAAY,MAACkN,OAAD,EAACA,EAAIqG,OAC3CsK,GAAI,YAGN,CACEmB,SAAS,EAETpB,SAAU,cACVxP,KAAM,QAENhL,KAAMH,EAAQ,gBAAiBjD,EAAY,MAACkN,OAAD,EAACA,EAAIsG,OAChDqK,GAAI,YAEN,CACEmB,SAAS,EAETpB,SAAU,yBACVxP,KAAM,SAENhL,KAAMH,EAAQ,cAAejD,EAAY,MAACkN,OAAD,EAACA,EAAIuG,UAC9CoK,GAAI,QAEN,CACEmB,SAAS,EAETpB,SAAU,kBACVxP,KAAM,QACNhL,KAAMH,EAAQ,WAAYgF,GAAO,MAACiF,OAAD,EAACA,EAAIlG,KAAM,SAC5C6W,GAAI,UAEN,CACEmB,SAAS,EAETpB,SAAU,YACVxP,KAAM,QAENhL,KAAMH,EAAQ,aAAD,MAAeiK,OAAf,EAAeA,EAAIyG,QAChCkK,GAAI,YAEN,CACEmB,SAAS,EAETpB,SAAU,WACVxP,KAAM,eAENhL,KAAMH,EAAQ,WAAD,MAAaiK,OAAb,EAAaA,EAAIsC,MAC9BqO,GAAI,WAGN,CACED,SAAU,WACVxP,KAAM,kBACNhL,KAAMH,EAAQ,eAAD,MAAiBiK,OAAjB,EAAiBA,EAAI4G,OAClC+J,GAAI,cAKV,CACEL,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,kBAEhB0a,QAAS,CACP,CACEC,SAAU,WACVxP,KAAM,aAENhL,KAAMH,EAAQ,cAAD,MAAgBiK,OAAhB,EAAgBA,EAAI+R,QACjCpB,GAAI,WAGN,CACED,SAAU,YACVxP,KAAM,OACNhL,KAAMH,EAAQ,aACd4a,GAAI,SAGN,CACED,SAAU,YACVxP,KAAM,OACNhL,KAAMH,EAAQ,cACd4a,GAAI,UAGN,CACED,SAAU,YACVxP,KAAM,OACNhL,KAAMH,EAAQ,kBACd4a,GAAI,gBAKVe,EAEA,CACEpB,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,kBAEhB0a,QAAS,CACP,CACEC,SAAU,WACVxP,KAAM,kBACNhL,KAAMH,EAAQ,YACd4a,GAAI,QAGN,CACED,SAAU,cACVxP,KAAM,SAENhL,KAAMH,EAAQ,aACd4a,GAAI,SAGN,CACEC,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,KAEVrZ,MAASua,OAAS,OACK,KAArBva,MAASwa,SAAkBxa,MAASya,OAAS,IACvB,KAArBza,MAASwa,SAAkBxa,MAASya,OAAS,IAEpDnB,OAAO,EACPL,SAAU,YACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACd4a,GAAI,QAGN,CACED,SAAU,kBACVxP,KAAM,WAENhL,KAAMH,EAAQ,gBACd4a,GAAI,YAGN,CACED,SAAU,SACVxP,KAAM,mBAENhL,KAAMH,EAAQ,YACd4a,GAAI,QAGN,CACEC,YACI,MAAC5Q,OAAD,EAACA,EAAImM,MAAQ,MAAFnM,OAAA,EAAAA,EAAI8Q,OAAQ,IACvBrZ,MAASoZ,SAASva,EAAgB8B,uBAClC,MAAF4H,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBiB,sBACnCwZ,MACEtZ,MAASoZ,SACPpZ,IAAOnB,EAAgB8B,qBAAqB4Y,IAC1C1a,EAAgBgB,SAChB,WAGF,MAAF0I,OAAA,EAAAA,EAAIsF,YACFhP,EAAgBiB,sBACdjB,EAAgBS,mBAEtB2Z,SAAU,SACVxP,KAAM,MACNhL,KAAMH,EAAQ,eACd4a,GAAI,WAGN,CACEC,YACI,MAAC5Q,OAAD,EAACA,EAAImM,MAAQ,MAAFnM,OAAA,EAAAA,EAAI8Q,OAAQ,IACvBrZ,MAASoZ,SAASva,EAAgB8B,uBAClC,MAAF4H,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBiB,sBACnCwZ,MACEtZ,MAASoZ,SACPpZ,IAAOnB,EAAgB8B,qBAAqB4Y,IAC1C1a,EAAgBgB,SAChB,WAGF,MAAF0I,OAAA,EAAAA,EAAIsF,YACFhP,EAAgBiB,sBACdjB,EAAgBS,mBAEtB2Z,SAAU,SACVxP,KAAM,MACNhL,KAAMH,EAAQ,cACd4a,GAAI,UAGN,CACED,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,WACd4a,GAAI,OAGN,CACEC,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZrZ,MAASoZ,SAASva,EAAgB0B,4BACpC+Y,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgB6B,qBAAqB6Y,IAC1C1a,EAAgBgB,SAChB,SAGJoZ,SAAU,YACVxP,KAAM,OACNhL,KAAMH,EAAQ,UACd4a,GAAI,WAEN5S,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,aAG5BM,GAAUlR,IACVjC,QAAO,SAAChL,GAAD,QAASA,MCxyBPof,GAAa,SACxB1Y,EACA5G,EACAiP,EACApI,EACAkG,EACAI,GAEA,IAAMqB,EAAUC,GAAK7H,EAAKiX,UAEpB0B,EAAYtQ,EAAW1C,MAAMqE,YAAchK,EAAKkX,GAChD0B,EAAc5Y,EAAK8W,SAAWxb,UAAOQ,IACrCQ,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QACpC,OACE,kBAACsQ,EAAD,CACE/f,IAAG,OAASO,EACZ2C,QAAS,SAACsT,GACR,GAAIrP,EAAKkX,GAAI,CACX7O,EAAWoC,SAASzK,EAAKkX,GAAIlX,EAAK6Y,QAElC,IAAMC,EAAW,CACfC,OAAQ,YAAc/Y,EAAKkX,GAC3B8B,UAAW3J,EAAE3F,YAAYsP,UACzBC,UAAW5J,EAAE3F,YAAYuP,UACzBC,UAAW1Q,KAAK5H,OAGlBuF,EAAS,CAAExF,KAAM,eAAgBoB,MAAO+W,OAI5C,kBAACrK,GAAD,CAAWC,UAAW,KAAMC,WAAY,OACrC,SAACC,GAAD,OACC,kBAACtT,EAAA,QAAD,CACEC,MAAO,CACL4d,kBAAmB,EACnB1V,QAAS,EACTJ,gBAAiBrD,EAAK8W,SAClB7W,EAAMsS,QACNzS,EAAUG,EAAMsS,SACpB6G,YAAa,IAGf,kBAAC9d,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf+H,WAAY,SACZ8V,UAAW,GACXhW,gBACEuL,GAAa+J,EACT9Y,EAAWI,EAAMsS,cACjBjY,EACNkJ,aAAcoL,GAAa+J,EAAY,QAAKre,IAG9C,kBAACgB,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,GAAI2H,WAAY,WACnCqE,EACC,kBAACA,EAAD,CACE3L,KAAM+D,EAAKyH,KACXvL,KAAM,GACNC,MAAO8D,EAAMiI,gBAEblI,EAAKkY,MACP,kBAACzc,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAK2E,EAAKkY,OACpB3c,MAAO,CAAEK,MAAO,GAAIC,OAAQ,GAAI2H,aAAc,MAE9C,MAEN,kBAACE,EAAA,QAAD,CACEnI,MAAO,CACLI,WAAY,GACZQ,MAAO8D,EAAME,YACbwD,WAAY3D,EAAK8W,SAAW,YAASxc,IAGtC0F,EAAKvD,MAEPuD,EAAKsX,OACJ,kBAAChc,EAAA,QAAD,CACEC,MAAO,CACLI,WAAY,GAEZ6H,aAAc,GACd4G,YAAanK,EAAME,YACnBgK,YAAa,EACb1G,QAAS,IAGX,kBAAC,GAAD,KAAInH,EAAQ,SAIf0D,EAAK+W,OACJ,kBAACzb,EAAA,QAAD,CACEC,MAAO,CACLI,WAAY,GAEZ6H,aAAc,GACd4G,YAAanK,EAAME,YACnBgK,YAAa,EACb1G,QAAS,IAGX,kBAAC,GAAD,KAAIzD,EAAK+W,QAGZ/W,EAAKpD,iBAoBpB,IAAM0c,GAAS,SAAC,GAA2C,IAAD,IAAxChT,EAAwC,EAAxCA,YAAa+B,EAA2B,EAA3BA,WAAYzG,EAAe,EAAfA,SACjC2E,EAAmCD,EAAnCC,GAAIL,EAA+BI,EAA/BJ,OAAQC,EAAuBG,EAAvBH,SAAUK,EAAaF,EAAbE,SAExB+S,EAAe,MAAGhT,OAAH,EAAGA,EAAI2G,WAEtBM,EAASjG,IAAWzI,IAAI,UACxByM,EAAgBiC,EAAO5R,MAAQ,IAE7BoL,EAA2BvF,IAAM6Q,WAAWlM,IAA5CY,uBAERvN,GAAO,WACL,IAAIgN,EAAQP,EAAOlL,YAEdyL,GAASA,EAAMrH,OAAS,IAC3BqH,EAzBN,SAAgBrH,GAKd,IAJA,IAAIoa,EAAS,GACTC,EACF,iEACEC,EAAmBD,EAAWra,OACzBE,EAAI,EAAGA,EAAIF,EAAQE,IAC1Bka,GAAUC,EAAWE,OAAOze,KAAKoV,MAAMpV,KAAKC,SAAWue,IAEzD,OAAOF,EAiBKI,CAAO,IACfzT,EAAS,CAAExF,KAAM,kBAAmBoB,MAAO0E,IAE3CO,EAAuBP,GACvBD,EAASC,IAETD,EAASC,GAGXoT,WAAQnU,iBAAiB,MAAOoU,GAChCD,WAAQE,gBAAgBxf,MAAK,SAACyf,GAAD,OAASF,EAAWE,SAGnD,IAAMF,EAAa,SAACE,GAClBlf,QAAQ6H,IAAI,2BAA4BqX,IAG1CpgB,qBAAU,WACR4M,EAASN,EAAOlL,cACf,CAACkL,EAAO+T,SAEX,IAAM3d,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAnCoB,EAqCpBrN,mBAAQ,SAACiL,EAAOgU,WAAR,EAAC,EAAa/W,MArCF,WAqCjDgX,EArCiD,KAqCrCC,EArCqC,OAsClBnf,mBAAQ,SAACiL,EAAOgU,WAAR,EAAC,EAAa9W,OAtCJ,WAsCjDiX,EAtCiD,KAsCpCC,EAtCoC,KAwClDC,EAA8B,SAAC,GAM/B,EALJC,aACEC,QACEzD,QAAWjG,MAQX2J,EAAe,SAACC,GACC,WAAjBA,IAIFrU,EAAYH,SAAS,CAAExF,KAAM,0BAEzB2F,EAAYJ,OAAO0U,aAAe,GACpCC,OAA+BtgB,MAAK,SAACugB,GAE/BA,GACFD,YAMVjhB,qBAAU,WACRmhB,0CACER,KAED,IAEH3gB,qBAAU,WAGR,OAFAohB,KAAStV,iBAAiB,SAAUgV,GAE7B,WACLM,KAASC,oBAAoB,SAAUP,MAExC,IAEH,IAkCMQ,EAlCgB,CACpB,OACA,WACA,UACA,UACA,SACA,QACA,YACA,OACA,WACA,UACA,QACA,OACA,WACA,YACA,UACA,aACA,SACA,gBACA,cACA,iBACA,cACA,aACA,QACA,QACA,YACA,WACA,aACA,QACA,OACA,eACA,mBACA,UAEyBpY,SAASuF,EAAW1C,MAAMqE,WA+F/CmR,EAAa5B,EAAkBje,UAAOyK,KAC5C,OACE,kBAACzK,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAACiX,EAAD,CACE5f,MAAO,CACLC,cAAe,MACf0I,KAAM,EACNb,gBAAiB6C,EAAOjG,MAAMsS,UAGf,QAAhBlN,UAASC,IAtGd,kBAAC8V,GAAA,EAAD,KACE,mEACA,0BAAMnf,KAAK,cAAc+a,QAAS1a,EAAQ,qBAE1C,0BAAM+e,SAAS,SAASrE,QAAQ,8BAChC,0BAAMqE,SAAS,UAAUrE,QAAQ,YACjC,0BAAMqE,SAAS,WAAWrE,QAAS1a,EAAQ,iBAC3C,0BAAM+e,SAAS,iBAAiBrE,QAAS1a,EAAQ,uBACjD,0BAAM+e,SAAS,WAAWrE,QAAQ,MA+F/BzL,EAAgB,KA1FrB,kBAACjQ,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,MACpB,kBAAC0f,GAAA,EAAD,CACE/f,MAAO,CAAEK,MAAO,KAChB2f,sBAAuB,CACrB3f,MAAO,IACPC,OAAwB,QAAhBwJ,UAASC,GAAekI,EAAO3R,OAAS,SAAMvB,IAGxD,kBAACkhB,GAAA,EAAD,CACEC,gBAAc,EACdC,SAAUpG,GAAS/O,EAAIL,EAAOjG,OAC9B0b,eAAgBxB,EAChByB,SAAU,SAACC,GACTzB,EAAcyB,GACd1V,EAAS,CACPxF,KAAM,gCACNoB,MAAO8Z,KAGX5K,aAAc,SAAC6K,EAAS1iB,GAAV,OACZsf,GACEoD,EAAQjF,OACRzd,EACAiP,EACAnC,EAAOjG,MACPkG,EACAI,IAGJwV,cAAe,SAACD,GAAD,OACbA,EAAQ9E,QAAQnU,KAAI,SAAC7C,EAAM5G,GAAP,OAClBsf,GAAW1Y,EAAM5G,EAAOiP,EAAYnC,EAAOjG,MAAOkG,EAAUI,WA6DlE,kBAACjL,EAAA,QAAD,CACEC,MAAO,CACLM,OAAwB,QAAhBwJ,UAASC,GAAekI,EAAO3R,YAASvB,EAChD4J,KAAM,MAGLqV,GACAA,GAAkD,QAA/BlR,EAAW1C,MAAMqE,YACrC,kBAAC,GAAD,CAAQ3B,WAAYA,EAAYnC,OAAQA,EAAQK,GAAIA,KAGnD,MAAFA,OAAA,EAAAA,EAAIgC,UAAWC,KAAK5H,QAAUsa,EAC7B,kBAAC,GAAD,CAAK5U,YAAaA,EAAa+B,WAAYA,MACtC,MAAF9B,OAAA,EAAAA,EAAIyG,SAAU,GAAoB,QAAb,MAAFzG,OAAA,EAAAA,EAAIyG,WAAqBkO,EAC/C,kBAAC,GAAD,CAAM5U,YAAaA,EAAa+B,WAAYA,KACxC,MAAF9B,OAAA,EAAAA,EAAIgK,QAAS/H,KAAK5H,QAAUsa,EAC9B,kBAAC,GAAD,CAAM5U,YAAaA,EAAa+B,WAAYA,IAE5C,kBAAC/M,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IAAMtC,GAGG,QAA/ByG,EAAW1C,MAAMqE,WAChB,kBAAC,GAAD,CAAuBwJ,OAAQ+F,EAAkB,GAAK,KAIzDhO,EAAgB,KA9ErB,kBAACjQ,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,MACpB,kBAAC0f,GAAA,EAAD,CACE/f,MAAO,CAAEK,MAAO,KAChB2f,sBAAuB,CACrB3f,MAAO,IACPC,OAAwB,QAAhBwJ,UAASC,GAAekI,EAAO3R,OAAS,SAAMvB,IAGxD,kBAACkhB,GAAA,EAAD,CACEC,gBAAc,EACdC,SAAU7D,GAAUtR,EAAIL,EAAOjG,OAC/B0b,eAAgBtB,EAChBuB,SAAU,SAACC,GACTvB,EAAeuB,GACf1V,EAAS,CACPxF,KAAM,iCACNoB,MAAO8Z,KAGX5K,aAAc,SAAC6K,EAAS1iB,GAAV,OACZsf,GACEoD,EAAQjF,OACRzd,EACAiP,EACAnC,EAAOjG,MACPkG,EACAI,IAGJwV,cAAe,SAACD,GAAD,OACbA,EAAQ9E,QAAQnU,KAAI,SAAC7C,EAAM5G,GAAP,OAClBsf,GAAW1Y,EAAM5G,EAAOiP,EAAYnC,EAAOjG,MAAOkG,EAAUI,aAkDlEL,EAAO+T,QACP,kBAAC,GAAD,CAAY5R,WAAYA,EAAY/B,YAAaA,MAK5C0V,GAAa,SAAChW,GAAD,OAAe,SAACb,GAAD,OACvC,kBAAC,GAAWA,EACV,kBAACa,EAAcb,M,sCClTJ8W,GA/KD,SAAC,GAKR,IAJLra,EAII,EAJJA,SACA0E,EAGI,EAHJA,YACA+B,EAEI,EAFJA,WAEI,IADJ/B,YAAeJ,EACX,EADWA,OAAQC,EACnB,EADmBA,SAAUI,EAC7B,EAD6BA,GAAIC,EACjC,EADiCA,SAAU0V,EAC3C,EAD2CA,eAEvClV,EAA2BvF,IAAM6Q,WAAWlM,IAA5CY,uBACF1K,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC1O,qBAAU,WAKR,OAJAohB,KAAStV,iBAAiB,SAAUyW,GACpCC,IACAC,IAEO,kBAAMrB,KAASC,oBAAoB,SAAUkB,MACnD,IAEHviB,qBAAU,WACR0iB,IAEA,IAAMzW,EAAWC,aAAY,kBAAMwW,MAAoB,KAEvD,OAAO,kBAAMxV,cAAcjB,MAC1B,IAEH,IAAMyW,EAAmB,WACvBJ,EAAehW,EAAOlL,aAGlBmhB,EAAuB,SAACxB,GACP,WAAjBA,IACFyB,IACAC,MAIEA,EAAe,WACnB,IAAM/T,EACY,QAAhBjD,UAASC,GACLiX,KAAcC,gBAAgBC,SAASC,aACvCH,KAAcC,gBAAgBC,SAASE,eAAe,GACtC,YAAhBtX,UAASC,GACTiX,KAAcK,YAAYC,iBACV,QAAhBxX,UAASC,GACTwX,UAAUC,SACV,KAGFzU,KAAM,MAAK/B,OAAL,EAAKA,EAAI+B,SACjBvJ,EAAK,gBAAiB,CACpBuJ,SACAtN,WAAYkL,EAAOlL,cAInBohB,EAAsB,oCAAA1hB,EAAAC,OAAA,oDACtBqiB,IAAcC,UAA4B,QAAhB5X,UAASC,GADb,mCAAA5K,EAAA,MAEiBwiB,IACvCA,MAHsB,mBAERC,EAFQ,EAEhBC,OAGJC,EAAcF,EACK,YAAnBA,EANoB,mCAAAziB,EAAA,MAOGwiB,IACvBA,MARoB,gBAOdE,EAPc,EAOdA,OAGRC,EAAcD,EAVQ,WAYJ,YAAhBC,EAZoB,wBAatBlX,EAAS,CAAExF,KAAM,gCAAiCoB,OAAO,IAEnC,MAAhB,MAAFwE,OAAA,EAAAA,EAAI+W,YACNve,EAAK,gBAAiB,CACpBue,UAAW,GACXtiB,WAAYkL,EAAOlL,aAlBD,8CAAAN,EAAA,MAwBHqgB,2BAxBG,SAwBlBtU,EAxBkB,OAwBwCsK,SACvD,MAAKxK,OAAL,EAAKA,EAAI+W,YAChBve,EAAK,gBAAiB,CACpBue,UAAW7W,EACXzL,WAAYkL,EAAOlL,aAGvBmL,EAAS,CAAExF,KAAM,gCAAiCoB,OAAO,IA/BjC,8DAmC5BtI,GAAO,WACL,IAAIgN,EAAQP,EAAOlL,YAEdyL,GAASA,EAAMrH,OAAS,IAC3BqH,EAAQmT,OAAO,IACfzT,EAAS,CAAExF,KAAM,kBAAmBoB,MAAO0E,IAE3CO,EAAuBP,GACvBD,EAASC,IAETD,EAASC,MAIb7M,qBAAU,WACR4M,EAASN,EAAOlL,cACf,CAACkL,EAAO+T,SAEX,IAAMM,EAA8B,SAAC,GAM/B,EALJC,aACEC,QACEzD,QAAWjG,MAQX2J,EAAe,SAACC,GACC,WAAjBA,IAIFxU,EAAS,CAAExF,KAAM,0BAEbuF,EAAO0U,aAAe,GACxBC,OAA+BtgB,MAAK,SAACugB,GAE/BA,GACFD,YAOVjhB,qBAAU,WACRmhB,0CACER,KAED,IAEH3gB,qBAAU,WAGR,OAFAohB,KAAStV,iBAAiB,SAAUgV,GAE7B,WACLM,KAASC,oBAAoB,SAAUP,MAExC,IAcH,OACE,kBAACpf,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACF,QAAhBmB,UAASC,IAbZ,kBAAC8V,GAAA,EAAD,KACE,mEACA,0BAAMnf,KAAK,cAAc+a,QAAS1a,EAAQ,qBAE1C,0BAAM+e,SAAS,SAASrE,QAAQ,8BAChC,0BAAMqE,SAAS,UAAUrE,QAAQ,YACjC,0BAAMqE,SAAS,WAAWrE,QAAS1a,EAAQ,iBAC3C,0BAAM+e,SAAS,iBAAiBrE,QAAS1a,EAAQ,uBACjD,0BAAM+e,SAAS,WAAWrE,QAAQ,MAMjCpV,GAECsE,EAAO+T,QACP,kBAAC,GAAD,CAAY5R,WAAYA,EAAY/B,YAAaA,MC7K5CiX,GAAU,CACrB,CACEhb,MAAO,YACP5B,KAAM,QACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,OAGf,CACEjb,MAAO,kBACP5B,KAAM,cACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,oBACP5B,KAAM,gBACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,GAEf,CACEjb,MAAO,cACP5B,KAAM,UACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,GAGf,CACEjb,MAAO,WACP5B,KAAM,OACNuX,MAAOlf,EAAQ,KACfkD,KAAM,EACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,aACP5B,KAAM,SACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,iBACP5B,KAAM,WACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,oBACP5B,KAAM,UACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,GAGf,CACEjb,MAAO,aACP5B,KAAM,SACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,UACP5B,KAAM,MACNuW,GAAI,MACJgB,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,eACP5B,KAAM,WACNuW,GAAI,WACJgB,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,YACP5B,KAAM,OACNuW,GAAI,OACJgB,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,GAGf,CACEjb,MAAO,aACP5B,KAAM,SACNuW,GAAI,SACJgB,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,GAEf,CACEjb,MAAO,iBACP5B,KAAM,aACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,kBACP5B,KAAM,cACNuW,GAAI,cACJgB,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAAM,KAGrB,CACEjb,MAAO,UACP5B,KAAM,MACNuX,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,GAGf,CACEjb,MAAO,oBACP5B,KAAM,gBACNuW,GAAI,gBACJgB,MAAOlf,EAAQ,KACfkD,KAAM,GACNshB,YAAa,IAIJC,GAAO,CAClB,UACA,UACA,YACA,UACA,YACA,YACA,UACA,WAgBWC,GAAU,SAACC,GAAD,OAAWziB,KAAKsa,KAAKta,KAAKyH,IAAI,IAAMgb,GAASziB,KAAK0iB,MAE5DC,GAAgB,SAAC,GAAwC,IAAtChb,EAAqC,EAArCA,IAAKsD,EAAgC,EAAhCA,SAAU0C,EAAsB,EAAtBA,KAAMiV,EAAgB,EAAhBA,UACnD,GAAoB,QAAhBzY,UAASC,GAAc,CACzB,IAAMyY,EAAOL,GAAO,MAAC7U,OAAD,EAACA,EAAM8U,OAC3B7iB,QAAQ6H,IAAI,gBAAiBob,GAE7B,IAAMC,EAAS,kBAAM7X,EAAS,CAAExF,KAAM,WAAYoB,MAAOgc,KAErDD,EACF/Y,YAAW,kBAAMiZ,MAAU,KAE3BA,IAEFnb,EAAIob,MAAM,CACRC,IAAKrV,EAAKsV,SACVC,IAAKvV,EAAKwV,iBAGZxb,EAAIyb,gBAAgB,CAClBH,SAAUtV,EAAKsV,SACfE,UAAWxV,EAAKwV,UAChBE,cAA4B,IAAb1V,EAAK8U,MACpBa,eAA6B,IAAb3V,EAAK8U,SAIdc,GAAgB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAQtlB,EAA6B,EAA7BA,MAAOyP,EAAsB,EAAtBA,KAAM8V,EAAgB,EAAhBA,UAC/CR,EAAQ,MAAGtV,OAAH,EAAGA,EAAU6V,EAAO/d,KAAb,YACf0d,EAAS,MAAGxV,OAAH,EAAGA,EAAU6V,EAAO/d,KAAb,aAEpB,IAAKwd,IAAaE,EAAW,CAC3B,IAAMO,EAAQD,EAAUE,MAAMzlB,GAASulB,EAAUE,MAAMzf,OAAS,IAChE+e,EAAWS,EAAME,eACjBT,EAAYO,EAAMG,gBAGpB,IAAMC,GACC,MAAJnW,OAAA,EAAAA,EAAM8U,OAAQe,EAAOxiB,KAAQwiB,EAAOlB,YA9Md,IA+MnByB,GAAsB,MAAJpW,OAAA,EAAAA,EAAM8U,OAAQe,EAAOxiB,KA/MpB,IAiNnBgjB,EACJF,EAAgBC,EAAiBD,EAAgBC,EAC7CE,EAAkBhB,EAAWa,EAAgB,EAC7CI,EAAmBf,EAAYY,EAAiB,EAChDI,EAAsBlB,EAAWa,EAAgB,EACjDM,EAAuBjB,EAAYY,EAAiB,EAGpDM,EAAoBlB,EAAYY,EAAiB,EACjDO,EAAqBrB,EAAWa,EAAgB,EAGhDS,EAAS,CACb,CAAEtB,SAAUgB,EAAiBd,UAAWe,GACxC,CAAEjB,SAPqBA,EAAWa,EAAgB,EAOpBX,UAAWkB,GACzC,CACEpB,SAAUkB,EACVhB,UAAWiB,GAEb,CAAEnB,SAAUqB,EAAoBnB,UATNA,EAAYY,EAAiB,IAYnDS,EAAS,CACbC,KAAML,EACNM,MAAOJ,EACPK,MAAOR,EACPS,KAAMP,GAGFQ,EACY,QAAhB1a,UAASC,GACL,CACE,CAAC6Z,EAAiBC,GAClB,CAACC,EAAqBC,IAExB,CACE,CAACD,EAAqBD,GACtB,CAACD,EAAiBG,IAM1B,MAAO,CACLnB,WACAE,YACAW,gBACAC,iBACAC,uBACAc,OAToC,IAAvBd,EAUbnB,KARWL,GAAQwB,GASnBO,SACAC,SACAK,mB,uCChLWE,GApFF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAM7X,EAA4B,EAA5BA,WAA4B,IAAhBnM,YAAgB,MAAT,GAAS,EAC1C+D,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SAE5C9D,EAAQ4D,EAAamgB,EAAMjgB,GAC3BkgB,GAAY3X,KAAK5H,MAAQsf,EAAKE,UAAY,IAAQ,EAElDC,EACW,IAAfH,EAAK7I,MACD,eACe,IAAf6I,EAAK7I,MACL,eACe,KAAf6I,EAAK7I,MACL,eACA,KAEAiJ,EAAqC,OAA3B5nB,EAAUwnB,EAAK5X,QAAmB,2BAAS,eAE3D,OACE,kBAACxM,EAAA,EAAD,CACEC,QAAS,WACPsM,EAAWoC,SAAS,UAAW,CAAExO,KAAMikB,EAAKjkB,QAE9CV,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAE3C,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiBpD,EAAMsS,QACvB/O,aAActH,EAAO,EACrBiO,YAAa,EACbC,YAAanK,EAAM8H,YAGpBmY,EAAK/H,UACJ,kBAAC1c,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,YAAckoB,EAAK/H,WAC5C5c,MAAO,CAAEK,MAAOM,EAAML,OAAQK,EAAMsH,aAActH,EAAO,KAG3D,kBAACT,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAAOM,EAAML,OAAQK,EAAMsH,aAActH,EAAO,KAG7D,kBAACZ,EAAA,QAAD,CAAMC,MAAO,CAAEyH,SAAU,WAAYC,IAAK,EAAGG,MAAO,IAClD,kBAAC,GAAD,KAAI+c,EAAW,SAAM,iBAGtBE,GACC,kBAAC/kB,EAAA,QAAD,CAAMC,MAAO,CAAEyH,SAAU,WAAYE,OAAQ,EAAGE,MAAO,IACrD,kBAAC,GAAD,KAAIid,IAIPH,EAAKvT,MAAQuT,EAAKvT,KAAKwL,WACtB,kBAAC7c,EAAA,QAAD,CACEC,MAAO,CACLyH,SAAU,WACVC,KAAM,GAAM/G,EACZiH,MAAO,GAAMjH,IAGf,kBAACT,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,YAAckoB,EAAKvT,KAAKwL,WACjD5c,MAAO,CACLK,MAAOM,EAAO,EACdL,OAAQK,EAAO,EACfsH,aAActH,EAAO,MAM7B,kBAACZ,EAAA,QAAD,CAAMC,MAAO,CAAEyH,SAAU,WAAYE,OAAQ,EAAGC,KAAM,IACpD,kBAAC,GAAD,KAAImd,KAGR,kBAAChlB,EAAA,QAAD,CAAMC,MAAO,CAAEI,WAAY,KACzB,kBAAC,GAAD,CAAGJ,MAAO,CAAEY,UAAU+jB,EAAKjkB,MAC1BikB,EAAKvT,MAAQ,kBAAC,GAAD,KAAIuT,EAAKvT,KAAK1Q,S,8BC2vBrBskB,GAn0BI,SAAC,GAYb,IAXLnY,EAWI,EAXJA,SACAS,EAUI,EAVJA,KACAtC,EASI,EATJA,GACAL,EAQI,EARJA,OACAmC,EAOI,EAPJA,WACAmY,EAMI,EANJA,WACAha,EAKI,EALJA,SACAia,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACA1O,EACI,EADJA,KAEM3V,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAC9B/L,EAAakF,IAAM6Q,WAAW9Q,IAE9Bof,EAAa,SAACjgB,GAAD,MAAW,CAC5BwW,WAAU,MAACtO,OAAD,EAACA,EAAUlI,EAAN,YAA0B,MAAJkI,OAAA,EAAAA,EAAUlI,EAAN,aAAJ,MAA2B4F,OAA3B,EAA2BA,EAAItK,MACpEQ,KAAMH,EAAQ,WACdP,QAAS,WAYPQ,EACED,EAAQ,eACS,KAAf,MAAFiK,OAAA,EAAAA,EAAIsa,UACAvkB,EAAQ,kBACRA,EACE,mBAhBU,CAChB,GACA,SACA,QACA,YACA,SACA,UACA,WACA,SASe,MAACiK,OAAD,EAACA,EAAIsa,UACC,GAAb,MAAFta,OAAA,EAAAA,EAAIsa,WAEV,CACE,CACEpkB,KAAMH,EAAQ,MACdP,QAAS,SAAC+kB,GACR1kB,EACE8J,EAAOlL,WADE,MAETuL,OAFS,EAETA,EAAIlK,YACJC,EACAC,GACA,SAAOwkB,GAAP,iBAAArmB,EAAAC,OAAA,uDACE6lB,GAAW,GADb,WAAA9lB,EAAA,MAE6BqE,EAAK,OAAQ,CACtC/D,WAAYkL,EAAOlL,WACnB8lB,QACAngB,OACAogB,aANJ,gBAEUvmB,EAFV,EAEUA,SAMRgmB,GAAW,GACXha,EAASN,EAAOlL,YAChBuB,EAAW/B,EAAU,KAAM,KAAM,CAAE3B,IAAK,iBACxC4nB,IAXF,iEAgBN,CACEhkB,KAAMH,EAAQ,YAGlB,CAAEzD,IAAK,OAAQ6D,WAAW,EAAMC,aAAc,aAGlD8K,KAAMI,KACNmZ,SAAU,SAENC,EAAiB,SAACtgB,GAAD,MAAW,CAChCwW,YAAW,MAACtO,OAAD,EAACA,EAAUlI,EAAN,UAChBlE,KAAMH,EAAQ,YACdP,QAAS,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACoBqE,EAAK,cAAe,CAC7C8J,KAAI,MAAEtC,OAAF,EAAEA,EAAIsC,KACVlI,OACA8F,MAAOP,EAAOlL,cAJT,gBACCR,EADD,EACCA,SAKRimB,IACAja,EAASN,EAAOlL,YAChBuB,EAAW/B,EAAU,KAAM,KAAM,CAAE3B,IAAK,wBARjC,6DAUT4O,KAAMI,IACNmZ,SAAU,uBAENE,EAAe,SAACvgB,GAAD,MAAW,CAC9BwW,UAAc,MAAJtO,OAAA,EAAAA,EAAUlI,EAAN,aAAJ,MAA2B4F,OAA3B,EAA2BA,EAAItK,MACzCQ,KAAMH,EAAQ,UACdP,QAAS,kBAAMsM,EAAW8Y,QAAQ,eAAgB,CAAExgB,OAAMkI,KAAI,MAAEtC,OAAF,EAAEA,EAAIsC,QACpEpB,KAAMI,KACNmZ,SAAU,gBAiBNI,EAAe,SAACzgB,GAAD,MAAW,CAC9BlE,KAAMH,EAAQ,aACdP,QAAS,kBACPK,EACE8J,EAAOlL,WADE,MAETuL,OAFS,EAETA,EAAIlK,YACJC,EACAC,GACA,SAAC4V,GAAD,OAtBgB,SAAOxR,EAAMogB,GAAb,iBAAArmB,EAAAC,OAAA,uDACpB6lB,GAAW,GADS,WAAA9lB,EAAA,MAEOqE,EAAK,SAAU,CACxC0H,MAAOP,EAAOlL,WACd+lB,UACApgB,UALkB,gBAEZnG,EAFY,EAEZA,SAMRgmB,GAAW,GAEXha,EAASN,EAAOlL,YAChBylB,IACAlkB,EAAW/B,EAAU,KAAM,KAAM,CAAE3B,IAAK,mBAZpB,4DAsBNwoB,CAAc1gB,EAAMwR,OAElC1K,KAAMI,KACNmZ,SAAU,oBAGNM,EAAa,CACjBC,OAAQ,iBAAM,CACZ,CACE9kB,KAAMH,EAAQ,SACdP,QAAS,kBAAMsM,EAAW8Y,QAAQ,UAClCK,WAA2C,UAA/BnZ,EAAW1C,MAAMqE,UAC7BvC,KAAMI,IACNmZ,SAAU,aACVS,YAAa,GAEf,CACEtK,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZxa,EAAgBqB,mBAAmBkZ,SAASpZ,OAC9CvB,KAAMH,EAAQ,SACdP,QAAS,kBAAMsM,EAAW8Y,QAAQ,UAClCK,WAA2C,UAA/BnZ,EAAW1C,MAAMqE,UAC7BvC,KAAMI,IACNmZ,SAAU,WACVS,YAAa,GAEfb,EAAW,UACXK,EAAe,UACfC,EAAa,YAEfQ,cAAe,iBAAM,CACnB,CACEjlB,KAAMH,EAAQ,cACdmL,KAAMI,IACNmZ,SAAU,UACVjlB,QAAS,WACPQ,EACED,EAAQ,cACRA,EAAQ,cAAD,MAAgBuM,OAAhB,EAAgBA,EAAM8Y,mBAAtB,MAA0C9Y,OAA1C,EAA0CA,EAAMiE,SACvD,CACE,CACErQ,KAAMH,EAAQ,MACdP,QAAS,SAAC6lB,GACRxlB,EACE8J,EAAOlL,WADE,MAETuL,OAFS,EAETA,EAAIlK,YACJC,EACAC,GACA,SAAOwkB,GAAP,iBAAArmB,EAAAC,OAAA,uDACE6lB,GAAW,GADb,WAAA9lB,EAAA,MAE6BqE,EAAK,aAAc,CAC5C/D,WAAYkL,EAAOlL,WACnB4mB,SACAb,aALJ,gBAEUvmB,EAFV,EAEUA,SAKRgmB,GAAW,GACXha,EAASN,EAAOlL,YAChBylB,IACAlkB,EAAW/B,EAAU,KAAM,KAAM,CAC/B3B,IAAK,uBAXT,iEAiBN,CACE4D,KAAMH,EAAQ,YAGlB,CAAEzD,IAAK,aAAc6D,WAAW,EAAMC,aAAc,aAGxD8kB,YAAW,MAAE5Y,OAAF,EAAEA,EAAMiE,SAGrB,CACErQ,KAAMH,EAAQ,yBACdmL,KAAMI,KACNmZ,SAAU,QACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,sBAClCK,WAA2C,sBAA/BnZ,EAAW1C,MAAMqE,UAC7ByX,YAAa,EAEbtK,WACE,MAAC5Q,OAAD,EAACA,EAAI6R,UACF,MAAF7R,OAAA,EAAAA,EAAI8Q,OAAQ,GACXrZ,MAASoZ,SACPva,EAAgByB,kCAEtBgZ,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgByB,kCAAkCiZ,IACvD1a,EAAgBgB,SAChB,UAIN+iB,EAAW,iBACXK,EAAe,iBACfC,EAAa,mBAEfW,QAAS,iBAAM,CACb,CACEplB,KAAMH,EAAQ,eACdmL,KAAMI,KACNmZ,SAAU,eACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,YAClCM,YAAa,GAEf,CACEhlB,KAAMH,EAAQ,oBACdmL,KAAMI,KACNmZ,SAAU,eACVQ,WAA2C,iBAA/BnZ,EAAW1C,MAAMqE,UAC7BjO,QAAS,kBAAMsM,EAAW8Y,QAAQ,iBAClCM,YAAa,GAEfb,EAAW,WACXK,EAAe,WACfC,EAAa,aAGfrU,KAAM,iBAAM,CACV,CACEpQ,KAAMH,EAAQ,YACdmL,KAAMI,KACNmZ,SAAU,OACVQ,WAA2C,SAA/BnZ,EAAW1C,MAAMqE,UAC7BjO,QAAS,kBAAMsM,EAAW8Y,QAAQ,SAClCM,YAAa,GAEf,CACEhlB,KAAMH,EAAQ,iBACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,cAClCK,WAA2C,cAA/BnZ,EAAW1C,MAAMqE,UAC7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,cACdmL,KAAMI,KACNmZ,SAAU,SACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,WAClCK,WAA2C,WAA/BnZ,EAAW1C,MAAMqE,UAC7ByX,YAAa,GAGfb,EAAW,QACXK,EAAe,QACfC,EAAa,UAGfY,SAAU,iBAAM,CACd,CACErlB,KAAMH,EAAQ,gBACdmL,KAAMI,KACNmZ,SAAU,QACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,aAClCK,WAA2C,aAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAEfb,EAAW,YACXK,EAAe,YACfC,EAAa,cAEfa,MAAO,iBAAM,CACX,CACEtlB,KAAMH,EAAQ,cACdmL,KAAMI,KACNmZ,SAAU,YACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,WAClCK,WAA2C,WAA/BnZ,EAAW1C,MAAMqE,UAC7ByX,YAAa,GAEf,CACEhlB,KAAMH,EAAQ,cACdmL,KAAMI,IACNmZ,SAAU,SACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,WAClCK,WAA2C,WAA/BnZ,EAAW1C,MAAMqE,UAC7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,YACdmL,KAAMI,IACNmZ,SAAU,cACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,SAClCK,WAA2C,SAA/BnZ,EAAW1C,MAAMqE,UAC7ByX,YAAa,EACbtK,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,KAEVrZ,MAASua,OAAS,OACK,KAArBva,MAASwa,SAAkBxa,MAASya,OAAS,IACvB,KAArBza,MAASwa,SAAkBxa,MAASya,OAAS,OAKxDuJ,SAAU,iBAAM,CACdZ,EAAa,YACbR,EAAW,YACXK,EAAe,YACfC,EAAa,cAEfe,QAAS,iBAAM,CACbb,EAAa,WACbR,EAAW,WACXK,EAAe,WACfC,EAAa,aAEfgB,IAAK,iBAAM,CACTd,EAAa,OACbR,EAAW,OACXK,EAAe,OACfC,EAAa,SAGfiB,YAAa,iBAAM,CACjB,CACE1lB,KAAMH,EAAQ,kBACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,eAClCK,WAA2C,eAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,EACbtK,YAAW,MAAC5Q,OAAD,EAACA,EAAI6R,SAElB,CACE3b,KAAMH,EAAQ,oBACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,iBAClCK,WAA2C,iBAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,EACbtK,WAAU,MAAC5Q,OAAD,EAACA,EAAI6R,SAGjB,CACE3b,KAAMH,EAAQ,gBACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,aAClCK,WAA2C,aAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,EACbtK,WAAU,MAAC5Q,OAAD,EAACA,EAAI6R,SAGjB,CACE3b,KAAMH,EAAQ,wBACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,qBAClCK,WAA2C,qBAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,EACbtK,WAAU,MAAC5Q,OAAD,EAACA,EAAI6R,SAEjB,CACEjB,WACE,MAAC5Q,OAAD,EAACA,EAAI6R,UACF,MAAF7R,OAAA,EAAAA,EAAI8Q,OAAQ,GACXrZ,MAASoZ,SAASva,EAAgBwB,4BACtCiZ,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgBwB,4BAA4BkZ,IACjD1a,EAAgBgB,SAChB,SAGJpB,KAAMH,EAAQ,oBACdklB,WAA2C,iBAA/BnZ,EAAW1C,MAAMqE,UAE7BvC,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,iBAClCM,YAAa,KAGjBW,IAAK,iBAAM,CACT,CACE3lB,KAAMH,EAAQ,WACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,QAClCK,WAA2C,QAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAEfb,EAAW,OACXK,EAAe,OACfC,EAAa,SAEfmB,OAAQ,iBAAM,CACZ,CACE5lB,KAAMH,EAAQ,cACdmL,KAAMI,KACNmZ,SAAU,MACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,WAClCK,WAA2C,WAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,gBACdmL,KAAMI,KACNmZ,SAAU,MACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,aAClCK,WAA2C,aAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,kBACdmL,KAAMI,IACNmZ,SAAU,SACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,eAClCK,WAA2C,eAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAGfb,EAAW,UACXK,EAAe,UACfC,EAAa,YAGf/Q,KAAM,iBAAM,CACV,CACE1T,KAAMH,EAAQ,aACdmL,KAAMI,KACNmZ,SAAU,OACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,SAClCK,WAA2C,SAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAW,MAAElb,OAAF,EAAEA,EAAI4J,MAEnByQ,EAAW,QACXK,EAAe,QACfC,EAAa,UAGfoB,OAAQ,iBAAM,CACZ,CACE7lB,KAAMH,EAAQ,cACdmL,KAAMI,KACNmZ,SAAU,cACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,WAClCK,WAA2C,WAA/BnZ,EAAW1C,MAAMqE,UAC7BmN,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZxa,EAAgB4B,oBAAoB2Y,SAASpZ,OAE/CyjB,YAAa,GAEfb,EAAW,UACXK,EAAe,UACfC,EAAa,YAEfqB,WAAY,iBAAM,CAChB,CACE9lB,KAAMH,EAAQ,cACdmL,KAAMI,IACNmZ,SAAU,SACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,eAClCK,WAA2C,eAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,iBACdmL,KAAMI,KACNmZ,SAAU,SACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,mBAClCK,WAA2C,mBAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAEfb,EAAW,cACXK,EAAe,cACfC,EAAa,gBAGfsB,YAAa,iBAAM,CACjB,CACE/lB,KAAMH,EAAQ,mBACdmL,KAAMI,KACNmZ,SAAU,OACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,gBAClCK,WAA2C,gBAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAEfb,EAAW,eACXK,EAAe,eACfC,EAAa,iBAGfuB,cAAe,iBAAM,CACnB,CACEhmB,KAAMH,EAAQ,qBACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,kBAClCK,WAA2C,kBAA/BnZ,EAAW1C,MAAMqE,UAC7BmN,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZxa,EAAgBkB,0BAA0BqZ,SAASpZ,OAErDyjB,YAAa,GAEfb,EAAW,iBACXK,EAAe,iBACfC,EAAa,mBAEfwB,KAAM,WACJ,MAAO,CACL,CACEvL,YAAW,MAACuJ,OAAD,EAACA,EAAciC,QAC1BlmB,KAAMH,EAAQ,YACdP,QAAS,4BAAArB,EAAAC,OAAA,uDACP6lB,GAAW,GADJ,WAAA9lB,EAAA,MAEoBqE,EAAK,gBAAiB,CAC/C/D,WAAYkL,EAAOlL,WACnB0X,GAAE,MAAEgO,OAAF,EAAEA,EAAchO,MAJb,gBAEClY,EAFD,EAECA,SAKRgmB,GAAW,GACXjkB,EAAW/B,EAAU,KAAM,KAAM,CAC/B3B,IAAK,0BAGP8nB,EAAW,MAACpa,OAAD,EAACA,EAAIsC,MAChBrC,EAASN,EAAOlL,YAbT,6DAeTyM,KAAMI,IACNmZ,SAAU,sBAGZ,CACE7J,UACc,MAAZuJ,OAAA,EAAAA,EAAciC,WAAd,MAAyBpc,OAAzB,EAAyBA,EAAImM,KAA+B,QAAb,MAAZgO,OAAA,EAAAA,EAAciC,QACnDlmB,KAAMH,EAAQ,YACdP,QAAS,0BAAArB,EAAAC,OAAA,gDACDioB,EAAY,CAChB,GACA,SACA,QACA,YACA,SACA,UACA,WACA,SAGFrmB,EACED,EAAQ,eACS,KAAf,MAAFiK,OAAA,EAAAA,EAAIsa,UACAvkB,EAAQ,kBACRA,EACE,mBACAsmB,EAAS,MAACrc,OAAD,EAACA,EAAIsa,UACC,GAAb,MAAFta,OAAA,EAAAA,EAAIsa,WAEV,CACE,CACEpkB,KAAMH,EAAQ,MACdP,QAAS,SAAC+kB,GACR1kB,EACE8J,EAAOlL,WADE,MAETuL,OAFS,EAETA,EAAIlK,YACJC,EACAC,GACA,SAAOwkB,GAAP,iBAAArmB,EAAAC,OAAA,uDACE6lB,GAAW,GADb,WAAA9lB,EAAA,MAE6BqE,EAAK,WAAY,CAC1C/D,WAAYkL,EAAOlL,WACnB8lB,QACA+B,OAAM,MAAEnC,OAAF,EAAEA,EAAchO,GACtBqO,aANJ,gBAEUvmB,EAFV,EAEUA,SAMRgmB,GAAW,GACXha,EAASN,EAAOlL,YAChBuB,EAAW/B,EAAU,KAAM,KAAM,CAC/B3B,IAAK,qBAEP8nB,EAAW,MAACpa,OAAD,EAACA,EAAIsC,MAblB,iEAkBN,CACEpM,KAAMH,EAAQ,YAGlB,CAAEzD,IAAK,WAAY6D,WAAW,EAAMC,aAAc,YApD7C,6DAuDT8K,KAAMI,KACNmZ,SAAU,QAGZ,CACE7J,UACc,MAAZuJ,OAAA,EAAAA,EAAciC,WAAd,MAAyBpc,OAAzB,EAAyBA,EAAImM,KAA+B,KAAb,MAAZgO,OAAA,EAAAA,EAAcoC,QACnDrmB,KAAMH,EAAQ,UACdP,QAAS,4BAAArB,EAAAC,OAAA,uDACP6lB,GAAW,GADJ,WAAA9lB,EAAA,MAEoBqE,EAAK,eAAgB,CAC9C/D,WAAYkL,EAAOlL,WACnB0X,GAAE,MAAEgO,OAAF,EAAEA,EAAchO,MAJb,gBAEClY,EAFD,EAECA,SAIRgmB,GAAW,GACXG,EAAW,MAACpa,OAAD,EAACA,EAAIsC,MAChBrC,EAASN,EAAOlL,YAChBuB,EAAW/B,EAAU,KAAM,KAAM,CAAE3B,IAAK,yBATjC,6DAWT4O,KAAMI,KACNmZ,SAAU,WAMZ+B,EAAe,CACnB,CACEtmB,KAAMH,EAAQ,cAAD,MAAgBiK,OAAhB,EAAgBA,EAAI+R,QACjC7Q,KAAMI,KACNmZ,SAAU,QACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,YAClCK,WAA2C,YAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,aACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,UAClCK,WAA2C,UAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,aACdmL,KAAMI,IACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,UAClCK,WAA2C,UAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,UACdmL,KAAMI,KACNmZ,SAAU,QACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,WAClCK,WAA2C,WAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,GAGf,CACEhlB,KAAMH,EAAQ,kBACdmL,KAAMI,KACNmZ,SAAU,eACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,eAClCK,WAA2C,eAA/BnZ,EAAW1C,MAAMqE,UAE7ByX,YAAa,IAIXuB,EAAc,CAClB,CACEvmB,KAAMH,EAAQ,gBACdmL,KAAMI,KACNmZ,SAAU,eACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,aAClCK,WAA2C,aAA/BnZ,EAAW1C,MAAMqE,WAG/B,CACEvN,KAAMH,EAAQ,YACdmL,KAAMI,KACNmZ,SAAU,OACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,SAClCK,WAA2C,SAA/BnZ,EAAW1C,MAAMqE,WAG/B,CACEvN,KAAMH,EAAQ,cACdmL,KAAMI,KACNmZ,SAAU,gBACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,WAClCK,WAA2C,WAA/BnZ,EAAW1C,MAAMqE,WAE/B,CACEvN,KAAMH,EAAQ,WACdmL,KAAMI,KACNmZ,SAAU,aACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,QAClCK,WAA2C,QAA/BnZ,EAAW1C,MAAMqE,WAG/B,CACEvN,KAAMH,EAAQ,aACdmL,KAAMI,KACNmZ,SAAU,QACVjlB,QAAS,kBAAMsM,EAAW8Y,QAAQ,UAClCK,WAA2C,UAA/BnZ,EAAW1C,MAAMqE,YAG3BiZ,EACK,gBAAThR,GAAmC,SAATA,EACtB7J,EACEkZ,EAAWlZ,KAAY9D,QAAO,SAAChL,GAAD,OAAQA,EAAE6d,YACxC,GACO,UAATlF,EACA8Q,EACS,SAAT9Q,EACA+Q,EACA,GAEN,OACEC,EAAQ7jB,OAAS,GACf,kBAACkc,GAAA,EAAD,CACE4H,YAAU,EACV3nB,MAAO,CACL4nB,OAAQ,EACRngB,SAAU,WACVG,KAAM,EACND,OAAQ,GACRrH,OAAQ,GACRL,cAAe,QAGhBynB,EAAQpgB,KAAI,SAACkW,EAAQ3f,GAAT,OACX,kBAACkC,EAAA,QAAD,CAAMzC,IAAG,SAAWO,GAClB,kBAAC0C,EAAA,EAAD,CACEC,QAAS,WACPqnB,uBAAsB,WACpBtoB,QAAQ6H,IAAI,kBACZoW,EAAOhd,cAGXR,MAAO,CACLK,MAAO,GACPynB,iBAAkB,GAClBxnB,OAAQ,GACR2H,aAAc,GACdH,gBAAiB0V,EAAOyI,WACpB3hB,EAAWqG,EAAOjG,MAAMsS,SACxBrM,EAAOjG,MAAM8H,UACjBzE,eAAgB,SAChBC,WAAY,WAGd,kBAACwV,EAAOtR,KAAR,CACExL,KAAM8c,EAAOiI,SACb9kB,KAAM,GACNC,MAAO+J,EAAOjG,MAAMiI,gBAEtB,kBAACxE,EAAA,QAAD,CACEnI,MAAO,CACLY,MAAO+J,EAAOjG,MAAMiI,cACpBvE,WAAY,OACZC,SAAU,IAEZ4G,cAAe,GAEduO,EAAOtc,OAGXsc,EAAO0I,YAAc,EACpB,kBAACnmB,EAAA,QAAD,CACEC,MAAO,CACLyH,SAAU,WACVI,MAAO,EACPH,IAAK,EACLI,gBAAiB,MACjBE,WAAY,SACZD,eAAgB,SAChBE,aAAc,GACd8f,SAAU,GACVznB,OAAQ,KAGV,kBAAC6H,EAAA,QAAD,CACEnI,MAAO,CAAEY,MAAO,QAASwH,WAAY,OAAQC,SAAU,KAEtDmV,EAAO0I,cAGV,WC5xBD8B,GAzCC9hB,IAAM+hB,MAAK,YAAe,IAAZvR,EAAW,EAAXA,KAC5B,OACE,kBAACnW,EAAA,EAAD,CACEjD,IAAG,IAAMoZ,EAAKA,KACd3E,QAAS,CAAErK,IAAK,GAAIE,KAAM,GAAIC,MAAO,GAAIF,OAAQ,IACjD3H,MAAO,CACLmQ,aAAc,GACdrI,gBAAiB4O,EAAKwR,SAAW,kBAAoB,kBACrDjgB,aAAc,GACd5H,MAAO,GACPC,OAAQ,GACRyH,eAAgB,SAChBC,WAAY,UAEdxH,QAASkW,EAAKlW,QACd2nB,YAAazR,EAAKyR,aAElB,kBAACzR,EAAKxK,KAAN,CAAWxL,KAAMgW,EAAK+O,SAAU7kB,MAAM,QAAQD,KAAM,KACnD+V,EAAK0R,WAAa,GACjB,kBAACroB,EAAA,QAAD,CACEC,MAAO,CACLyH,SAAU,WACVC,IAAK,EACLG,MAAO,EACPC,gBAAiB,MACjBG,aAAc,GACd5H,MAAO,GACPC,OAAQ,GACRyH,eAAgB,SAChBC,WAAY,WAGd,kBAACG,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,QAASwH,WAAY,OAAQC,SAAU,KAC1DqO,EAAK0R,iBCkJHC,GA/KI,SAAC,GAeb,IAdL3R,EAcI,EAdJA,KACA4R,EAaI,EAbJA,YACAxb,EAYI,EAZJA,WACA6J,EAWI,EAXJA,QACA4R,EAUI,EAVJA,gBACAC,EASI,EATJA,mBACA1M,EAQI,EARJA,MACA2M,EAOI,EAPJA,eACAC,EAMI,EANJA,sBACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,eACA7nB,EAGI,EAHJA,QACAuG,EAEI,EAFJA,IACAgG,EACI,EADJA,KAEQub,EAA+BC,2BAA/BD,2BACFje,EAAWme,cAgCjB,OACE,kBAAChpB,EAAA,QAAD,CACEipB,cAAc,WACdhpB,MAAO,CACL4nB,OAAQ,EACRngB,SAAU,WACVxH,cAAe,MACf2H,KAAM,EACNC,MAAO,EACPE,eAAgB,eAChBJ,OAAQ,IAGT,CACC,CACE+O,KAAM,OACNxK,KAAMI,IACNmZ,SAAU,UACVyC,SAAmB,SAATxR,EACVyR,YAA6B,QAAhBre,UAASC,QAAehL,EAjDjB,WAG1B,IAAMoI,EAAU6a,GAAQ1a,KAAI,SAAC2hB,GAAD,OAAOloB,EAAQkoB,EAAE7jB,SAE7C+B,EAAQK,KAAKzG,EAAQ,WACrB,IACMmoB,EAAoB/hB,EAAQtD,OAAS,EAE3CglB,EACE,CACE1hB,UACA+hB,oBACAC,4BAP2BpqB,IAS7B,SAACqqB,GACC,GAAIA,EAAcjiB,EAAQtD,OAAS,EAAG,CACpC,IAAMuB,EAAO4c,GAAQoH,GAAahkB,KAC5BuW,EAAKqG,GAAQoH,GAAazN,GAC5BA,GACF7O,EAAW8Y,QAAQjK,GAErB2M,EAAYljB,GACZuR,EAAQ,aA2BRnW,QAAS,WACP8nB,EAAY,MACZxb,EAAWuc,WACX1S,EAAQ,QACR2L,GAAc,CAAEhb,MAAKsD,WAAU0C,UAEjC8a,WAAYQ,GAEd,CACElS,KAAM,SACNxK,KAAMI,IACNmZ,SAAU,SACVyC,SAAmB,WAATxR,EACVlW,QAAS,WACP8nB,EAAY,MACZxb,EAAWuc,WACX1S,EAAQ,UACR2L,GAAc,CAAEhb,MAAKsD,WAAU0C,UAEjC8a,WAAYO,GAEd,CACEjS,KAAM,cACNxK,KAAMI,KACNmZ,SAAU,UACVyC,SAAmB,gBAATxR,EACVlW,QAAS,WACP8nB,EAAY,MACZxb,EAAWuc,WACX1S,EAAQ,eACR2L,GAAc,CAAEhb,MAAKsD,WAAU0C,UAEjC8a,WAAYM,GAGd,CACEhS,KAAM,QACNxK,KAAMI,KACNmZ,SAAU,YACVyC,SAAmB,UAATxR,EACVlW,QAAS,WACM,UAATkW,GACF5J,EAAWuc,WACX1S,EAAQ,UAER2R,EAAY,MACZ3R,EAAQ,SACR7J,EAAW8Y,QAAQ,cAKzB,CACElP,KAAM,OACNxK,KAAMI,KACNmZ,SAAU,kBACVyC,SAAmB,SAATxR,EACVlW,QAAS,WACM,SAATkW,GACFC,EAAQ,QACR7J,EAAWuc,aAEXf,EAAY,MACZ3R,EAAQ,QACR7J,EAAW8Y,QAAQ,cAGvBwC,WAAYK,GAGd,CACE/R,KAAM,OACNxK,KAAMI,KACNmZ,SAAU,wBACVyC,SAAmB,SAATxR,EACVlW,QAAS,WACM,SAATkW,GACFC,EAAQ,QACR7J,EAAWuc,aAEXf,EAAY,MACZ3R,EAAQ,QACR7J,EAAW8Y,QAAQ,eAKzB9J,GAAS,GAAK,CACZ5P,KAAMI,KACNmZ,SAAU,OACVyC,SAAUK,EACV/nB,QAAS,WACP8nB,EAAY,MACZ3R,EAAQ,QACR6R,GAAoBD,MAIvBxf,QAAO,SAAChL,GAAD,QAASA,KAChBuJ,KAAI,SAACgiB,EAAGzrB,GAAJ,OACH,kBAAC,GAAD,CAASP,IAAG,OAASO,EAAS6Y,KAAM4S,SC5JjC7P,GAAc,WACzB,IAAMC,EAA8B,IAAnBjX,MAASkX,MACpBC,EAA4B,KAApBnX,MAASoX,OAIvB,OAH4BpX,MAASqX,QACnCrX,IAAO,aAAc,cAAcC,IAAI,OAAQ,OAElBgX,GAAYE,IAGhCG,GAAW,SAAC/O,EAAItG,GAC3B,IAAMsV,EAAkBra,KAAKsa,OACxB,MAAFjP,OAAA,EAAAA,EAAIkP,cAAe,IAAQjN,KAAK5H,OAAS,KAGtC8U,EAAexa,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAIoP,SAAU,IAAQnN,KAAK5H,OAAS,KAE9DkV,EAAgB5a,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAIwP,UAAW,KAASvN,KAAK5H,OAAS,KAEjEoV,EAAa9a,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAI0P,OAAQ,IAAQzN,KAAK5H,OAAS,KAE1DsV,EAAahb,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAI4P,QAAJ,MAAY5P,OAAZ,EAAYA,EAAI6P,SAAU5N,KAAK5H,OAAS,KAChEyV,EAAcnb,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAI+P,QAAS,KAAS9N,KAAK5H,OAAS,KAC7D2V,EAAiBrb,KAAKsa,OACvB,MAAFjP,OAAA,EAAAA,EAAIiQ,WAAY,KAAShO,KAAK5H,OAAS,KAEpC6V,EAAgBvb,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAImQ,UAAW,KAASlO,KAAK5H,OAAS,KACjE+V,EAAiBzb,KAAKsa,OACvB,MAAFjP,OAAA,EAAAA,EAAIqQ,WAAiC,KAAnB,MAAFrQ,OAAA,EAAAA,EAAIoQ,gBAAwBnO,KAAK5H,OAAS,KAGvDkX,EAAY5c,KAAKsa,OAAQ,MAAFjP,OAAA,EAAAA,EAAIwR,MAAO,KAAUvP,KAAK5H,OAAS,KAE1DtE,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,MAAO,CACL,CACEuO,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,eACdya,MAAO/B,KAAgB,kBAAe1a,GAGxC0c,QAAS,CACP,CACE/E,KAAM,SACNgF,SAAU,cACVxP,KAAM,MACNhL,KAAMH,EAAQ,gBACd4a,GAAI,WACJta,UACE2Y,EAAkB,EAChB,kBAAC,KAAD,CACEha,MAAO,CAAEI,WAAY,IACrBmN,MAAOyM,EACP/E,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8N,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,cACd4a,GAAI,SACJjF,KAAM,SACNrV,UACE8Y,EAAe,EACb,kBAAC,KAAD,CACEna,MAAO,CAAEI,WAAY,IACrBmN,MAAO4M,EACPlF,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8I,KAAM,SACNgF,SAAU,yBACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACd4a,GAAI,OACJta,UACEyZ,EAAc,EACZ,kBAAC,KAAD,CACE9a,MAAO,CAAEI,WAAY,IACrBmN,MAAOuN,EACP7F,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8I,KAAM,SACNgF,SAAU,gBACVxP,KAAM,SACNhL,KAAMH,EAAQ,eACd4a,GAAI,UACJta,UACE2Z,EAAiB,EACf,kBAAC,KAAD,CACEhb,MAAO,CAAEI,WAAY,IACrBmN,MAAOyN,EACP/F,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8I,KAAM,SACNgF,SAAU,cACVxP,KAAM,SACNhL,KAAMH,EAAQ,mBACd4a,GAAI,SACJta,UACE6Z,EAAgB,EACd,kBAAC,KAAD,CACElb,MAAO,CAAEI,WAAY,IACrBmN,MAAO2N,EACPjG,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8I,KAAM,SACNkF,SACEnZ,MAASoZ,SAASva,EAAgBgC,qBAChC,MAAF0H,OAAA,EAAAA,EAAI8Q,OAAQ,EACdC,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgBgC,mBAAmB0Y,IACxC1a,EAAgBgB,SAChB,SAGJoZ,SAAU,YACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACd4a,GAAI,QAGN,CACEjF,KAAM,SACNkF,WACE,MAAC5Q,OAAD,EAACA,EAAImM,MAAQ,MAAFnM,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBY,oBAC9C6Z,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBY,oBACdZ,EAAgBS,mBACpB2Z,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,YACd4a,GAAI,OACJta,UACEkZ,EAAgB,EACd,kBAAC,KAAD,CACEva,MAAO,CAAEI,WAAY,IACrBmN,MAAOgN,EACPtF,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAER,CACE8I,KAAM,SACNkF,WACE,MAAC5Q,OAAD,EAACA,EAAImM,MAAQ,MAAFnM,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBU,mBAC9C+Z,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBU,mBACdV,EAAgBS,mBACpB2Z,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,WACd4a,GAAI,MACJta,UACEoZ,EAAa,EACX,kBAAC,KAAD,CACEza,MAAO,CAAEI,WAAY,IACrBmN,MAAOkN,EACPxF,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8I,KAAM,SACNkF,SACGnZ,MAASoZ,SAASva,EAAgB+B,wBAC/B,MAAF2H,OAAA,EAAAA,EAAI8Q,OAAQ,IACZ,MAAF9Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBC,uBACnCwa,MACEtZ,MAASoZ,SACPpZ,IAAOnB,EAAgB+B,sBAAsB2Y,IAC3C1a,EAAgBgB,SAChB,WAGF,MAAF0I,OAAA,EAAAA,EAAIsF,YACFhP,EAAgBC,uBACdD,EAAgBS,mBAEtB2Z,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,eACd4a,GAAI,UACJta,UACE+Z,EAAiB,EACf,kBAAC,KAAD,CACEpb,MAAO,CAAEI,WAAY,IACrBmN,MAAO6N,EACPnG,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACE8I,KAAM,SACNkF,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBQ,0BAC3Cia,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBQ,0BACdR,EAAgBS,mBAEpB2Z,SAAU,eACVxP,KAAM,YACNhL,KAAMH,EAAQ,kBACd4a,GAAI,eAGJ,MAAF3Q,OAAA,EAAAA,EAAI6R,SAAU,CACZnG,KAAM,SACNkF,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GAAKrZ,MAASoZ,SAASva,EAAgBsB,iBACrDmZ,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgBsB,iBAAiBoZ,IACtC1a,EAAgBgB,SAChB,SAGJoZ,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,UACd4a,GAAI,KACJta,UACEkb,EAAY,EACV,kBAAC,KAAD,CACEvc,MAAO,CAAEI,WAAY,IACrBmN,MAAOgP,EACPtH,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,OAER7E,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,aAG5B,CACEN,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,oBAGhB0a,QAAS,CACP,CACEC,SAAU,eACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACdwoB,aAAc,SAGhB,CACE7N,SAAU,yBACVxP,KAAM,iBACNhL,KAAMH,EAAQ,mBACdwoB,aAAc,eAGhB,CACE7N,SAAU,eACVxP,KAAM,OACNhL,KAAMH,EAAQ,qBACdwoB,aAAc,WAGhB,CACE7N,SAAU,YACVxP,KAAM,QACNhL,KAAMH,EAAQ,eACdwoB,aAAc,OAGhB,CACE7N,SAAU,SACVxP,KAAM,OACNhL,KAAMH,EAAQ,kBACdwoB,aAAc,YAGhB,CACE3N,UACI,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBa,6BACnC4Z,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBa,6BACdb,EAAgBS,mBAEpB2Z,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,qBACdwoB,aAAc,iBAGhB,CACE7S,KAAM,OACNkF,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBe,uBAC3C0Z,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBe,uBACdf,EAAgBS,mBAEpB2Z,SAAU,cACVxP,KAAM,QACNhL,KAAMH,EAAQ,eACdwoB,aAAc,WAGhB,CACE7S,KAAM,OACNgF,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACdwoB,aAAc,OACd5N,GAAI,QAGN,CACEjF,KAAM,OACNkF,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBI,sBAC3Cqa,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBI,sBACdJ,EAAgBS,mBACpB2Z,SAAU,eACVxP,KAAM,OACNhL,KAAMH,EAAQ,cACdwoB,aAAc,UAGhB,CACE7N,SAAU,WACVxP,KAAM,UACNhL,KAAMH,EAAQ,cACdwoB,aAAc,UAGhB,CACE7N,SAAU,YACVxP,KAAM,cACNhL,KAAMH,EAAQ,WACdwoB,aAAc,MACdloB,UACEsZ,EAAa,EACX,kBAAC,KAAD,CACE3a,MAAO,CAAEI,WAAY,IACrBmN,MAAOoN,EACP1F,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE1B,MAGR,CACEgO,UAAY,MAAF5Q,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBM,wBAC3Cma,OACI,MAAF/Q,OAAA,EAAAA,EAAIsF,YACJhP,EAAgBM,wBACdN,EAAgBS,mBAEpB2Z,SAAU,eACVxP,KAAM,WACNhL,KAAMH,EAAQ,gBACdwoB,aAAc,YAGhB,CACE7N,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,aACdwoB,aAAc,OACdnB,WAAU,MAAEpd,OAAF,EAAEA,EAAI4J,MAGlB,CACE8B,KAAM,OACNkF,YACI,MAAC5Q,OAAD,EAACA,EAAImM,KAAMnM,EAAG8Q,MAAQ,IACtBrZ,MAASoZ,SAASva,EAAgB4B,uBAClC,MAAF8H,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBc,sBACnC2Z,MACEtZ,MAASoZ,SACPpZ,IAAOnB,EAAgB4B,qBAAqB8Y,IAC1C1a,EAAgBgB,SAChB,WAGF,MAAF0I,OAAA,EAAAA,EAAIsF,YACFhP,EAAgBc,sBACdd,EAAgBS,mBACtB2Z,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,cACdwoB,aAAc,UAGhB,CACE7S,KAAM,OACNgF,SAAU,SACVxP,KAAM,OACNhL,KAAMH,EAAQ,YACdwoB,aAAc,eAGhB,CACE7S,KAAM,OACNgF,SAAU,yBACVxP,KAAM,SACNhL,KAAMH,EAAQ,kBACdwoB,aAAc,cAGhB,CACE7S,KAAM,OACNgF,SAAU,SACVxP,KAAM,aACN0P,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZxa,EAAgBkB,0BAA0BqZ,SAASpZ,OACrDvB,KAAMH,EAAQ,qBACdwoB,aAAc,kBAEhBxgB,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,cAE5B7S,QAAO,SAAChL,GAAD,QAASA,MAGdme,GAAY,SAAClR,GACjB,IAAMjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9BoP,GACF,MAAFnR,OAAA,EAAAA,EAAI8Q,QAAS,EACT,CACE,CACEJ,SAAU,SACVxP,KAAM,MACNhL,KAAMH,EAAQ,iBACd4a,GAAI,kBAGN,CACED,SAAU,SACVxP,KAAM,MACNhL,KAAMH,EAAQ,eACd4a,GAAI,YAGR,GAEAS,GAAe,MAAFpR,KAAI8Q,MAAa,IAC9BO,GAAU,MAAFrR,KAAI8Q,MAAc,IAEhC,OACI,MAAF9Q,OAAA,EAAAA,EAAI8Q,OAAQ,GAAK,CACfR,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,qBAEhB0a,QAAQ,GAAD,OAAMW,EAAeD,EAAYE,KAKjCC,GAAY,SAACtR,EAAItG,EAAO4e,EAAOkG,EAAU7e,GACpD,IAAM5J,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9B0c,EAAgBnG,EAAMhc,KAAI,SAAC6f,EAAMtpB,GAAW,IAAD,EAC/C,MAAO,CACL8e,MAAK,SAAEwK,EAAKxC,WAAP,EAAE,EAAW/H,UAClBlB,SAAU,UACVxP,KAAM,UACNhL,KAAMimB,EAAKzmB,KACXgpB,SAAU7rB,MAIR8rB,EAAsBH,EAASI,MAAM,EAAG,IAAItiB,KAAI,SAAC7C,GAAU,IAAD,wBAc9D,MAAO,CACLkY,MAAO,KACPzb,MAfmB,SAAAuD,EAAKolB,cAAL,IAAcnpB,MAAd,SACjB+D,EAAKolB,cADY,EACjB,EAAcnpB,KACuB,KAArC,SAAA+D,EAAKolB,cAAL,IAAcC,YAAYjmB,QAA1B,SACAY,EAAKolB,UADL,SACA,EAAcC,YAAYC,MAAK,SAAChsB,GAAD,OAAOA,EAAEqpB,UAAF,MAAapc,OAAb,EAAaA,EAAImM,SADvD,SACA,EAA4DwN,WAD5D,EACA,EAAkEjkB,KAClE,WAYFic,OAVuB,SAAAlY,EAAKolB,cAAL,IAAclN,OAAd,SACrBlY,EAAKolB,cADgB,EACrB,EAAclN,MACuB,KAArC,SAAAlY,EAAKolB,cAAL,IAAcC,YAAYjmB,QAA1B,SACAY,EAAKolB,UADL,SACA,EAAcC,YAAYC,MAAK,SAAChsB,GAAD,OAAOA,EAAEqpB,UAAF,MAAapc,OAAb,EAAaA,EAAImM,SADvD,SACA,EAA4DwN,WAD5D,EACA,EACI/H,UACJ,KAMFlB,SAAU,WACVhF,KAAM,OACNxK,KAAM,aACNkc,WAAY3jB,EAAKulB,OACjBrO,GAAI,UACJ2B,OAAQ,CAAE2M,MAAOxlB,EAAK0S,GAAIA,GAAI1S,EAAKolB,QAAQ1S,IAC3C3W,QAAS,WACPgD,EAAK,UAAW,CAAE/D,WAAYkL,EAAOlL,WAAY0X,GAAI1S,EAAK0S,UAKhE,MAAO,CACL,CACEmE,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,gBAEhB0a,QAAS,CACP,CACEC,SAAU,WACVxP,KAAM,aACNhL,KAAMH,EAAQ,cAAD,MAAgBiK,OAAhB,EAAgBA,EAAI+R,QACjCpB,GAAI,UACJjF,KAAM,SAGR,CACEgF,SAAU,YACVxP,KAAM,OACNhL,KAAMH,EAAQ,aACd4a,GAAI,QAEJjF,KAAM,SAGR,CACEgF,SAAU,WACVxP,KAAM,aACNhL,KAAMH,EAAQ,aACd4a,GAAI,QAEJjF,KAAM,SAGR,CACExV,KAAMH,EAAQ,UACd2a,SAAU,eACVxP,KAAM,QACNyP,GAAI,SAEJjF,KAAM,QACNkF,UACI,MAAF5Q,OAAA,EAAAA,EAAI8Q,OAAQ,GACZrZ,MAASoZ,SAASva,EAAgB0B,4BACpC+Y,MAAOtZ,MAASoZ,SACdpZ,IAAOnB,EAAgB6B,qBAAqB6Y,IAC1C1a,EAAgBgB,SAChB,UAKN,CACEpB,KAAMH,EAAQ,kBACd2a,SAAU,eACVxP,KAAM,eACNyP,GAAI,aAEJjF,KAAM,WAKZ,CACE4E,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,eAEhB0a,QAAS,CACP,CACEC,SAAU,WACVxP,KAAM,kBACNhL,KAAMH,EAAQ,YACd4a,GAAI,OACJjF,KAAM,SAND,WASJiT,GATI,CAWP,CACEjO,SAAU,WACVxP,KAAM,kBACNhL,KAAMH,EAAQ,YACd4a,GAAI,WACJjF,KAAM,UAER3N,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,aAG5B,CACEN,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,gBAEhB0a,QAASgO,GAGX,CACEnO,OAAQ,CACNC,UAAU,EACVra,KAAMH,EAAQ,eAEhB0a,QAAS,CACP,CACEC,SAAU,kBACVxP,KAAM,WACNwK,KAAM,OACNxV,KAAMH,EAAQ,gBACd4a,GAAI,YAGN,CACED,SAAU,SACVxP,KAAM,mBAENwK,KAAM,OACNxV,KAAMH,EAAQ,YACd4a,GAAI,QAGN,CACEjF,KAAM,OACNkF,YACI,MAAC5Q,OAAD,EAACA,EAAImM,MAAQ,MAAFnM,OAAA,EAAAA,EAAI8Q,OAAQ,IACvBrZ,MAASoZ,SAASva,EAAgB8B,uBAClC,MAAF4H,OAAA,EAAAA,EAAIsF,YAAahP,EAAgBiB,sBACnCwZ,MACEtZ,MAASoZ,SACPpZ,IAAOnB,EAAgB8B,qBAAqB4Y,IAC1C1a,EAAgBgB,SAChB,WAGF,MAAF0I,OAAA,EAAAA,EAAIsF,YACFhP,EAAgBiB,sBACdjB,EAAgBS,mBAEtB2Z,SAAU,SACVxP,KAAM,MACNhL,KAAMH,EAAQ,cACd4a,GAAI,UAGN,CACEjF,KAAM,OACNgF,SAAU,cACVxP,KAAM,OACNhL,KAAMH,EAAQ,WACd4a,GAAI,OAGN,CACEjF,KAAM,OACNgF,SAAU,cACVxP,KAAM,SACNhL,KAAMH,EAAQ,aACd4a,GAAI,UAEN5S,QAAO,SAAChL,GAAD,QAASA,IAAMA,EAAE6d,aAG5BM,GAAUlR,IACVjC,QAAO,SAAChL,GAAD,QAASA,MAGPof,GAAa,SAAC,GAepB,IAdL1Y,EAcI,EAdJA,KACA5G,EAaI,EAbJA,MACAiP,EAYI,EAZJA,WACApI,EAWI,EAXJA,MACAkG,EAUI,EAVJA,SACAI,EASI,EATJA,GACAoY,EAQI,EARJA,UACA8G,EAOI,EAPJA,qBACA5iB,EAMI,EANJA,IACAghB,EAKI,EALJA,YACA6B,EAII,EAJJA,QACA7c,EAGI,EAHJA,KACAqJ,EAEI,EAFJA,QACA2M,EACI,EADJA,MAEMjX,EAAUC,GAAK7H,EAAKiX,UAEpB0B,EAAYtQ,EAAW1C,MAAMqE,YAAchK,EAAKkX,GAChD0B,EAAc5Y,EAAK8W,SAAWxb,UAAOQ,IACrCQ,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEhCqd,EAAe,KACbC,EAAW,MAAGrf,OAAH,EAAGA,EAAIqf,YAExB,QAA0BtrB,IAAtB0F,EAAK8kB,aAA4B,CACnC,IAAMe,EAAQhd,EAAQ7I,EAAK8kB,aAAT,SACZgB,EAAUD,KAAK,MAAKtf,OAAL,EAAKA,EAAItK,MACxB8pB,EAAM,MAAGH,OAAH,EAAGA,EAAa/iB,KAAI,SAACvJ,GAAD,OAAOA,EAAE2C,QAAM6G,SAAS+iB,GAClDG,EAAYnd,EAAQ7I,EAAK8kB,aAAT,UAAiC,EACjDmB,EAAYpd,EAAQ7I,EAAK8kB,aAAT,UAAiC,EAEjDoB,EACkB,YAAtBlmB,EAAK8kB,cACL5pB,KAAKoV,OAAO9H,KAAK5H,OAAL,MAAa2F,OAAb,EAAaA,EAAI4f,kBAAmB,MAAW,EACvDC,EACkB,aAAtBpmB,EAAK8kB,cACL5pB,KAAKoV,OAAO9H,KAAK5H,OAAL,MAAa2F,OAAb,EAAaA,EAAI8f,mBAAoB,MAAW,EACxDC,EACkB,QAAtBtmB,EAAK8kB,cACL5pB,KAAKoV,OAAO9H,KAAK5H,OAAL,MAAa2F,OAAb,EAAaA,EAAIggB,cAAe,MAAW,EAGzDZ,EACEG,GAAWE,EACP,UACCF,GAAWG,IAJEC,GAAiBI,GAAaF,GAK5C,SACAN,EACA,OACCD,GACqB,UAAtB7lB,EAAK8kB,cACiB,gBAAtB9kB,EAAK8kB,aAELkB,EACA,MACAD,EACA,QACA,KALA,iBAMD,QAAsBzrB,IAAlB0F,EAAKilB,SAAwB,CAAC,IAAD,EAChCvC,EAAO/D,EAAUE,MAAM7e,EAAKilB,UAC5BuB,EAAa,MAAG3H,OAAH,EAAGA,EAAOyG,MAAK,SAAChsB,GAAD,OAAOA,EAAE6Y,OAASuQ,EAAKvQ,QAEnD2T,GAAuB,MAAbU,OAAA,EAAAA,EAAe7D,WAAf,MAA0Bpc,OAA1B,EAA0BA,EAAImM,IACxCqT,GACS,MAAbS,OAAA,EAAAA,EAAepO,WAAf,MAA0B7R,OAA1B,EAA0BA,EAAI6R,UACjB,MAAboO,GAAA,SAAAA,EAAetG,WAAf,IAAqB9H,WAArB,MAAgC7R,OAAhC,EAAgCA,EAAI6R,QAChC4N,GAAyB,MAAbQ,OAAA,EAAAA,EAAe1D,QAAS,EACpCmD,GAAyB,MAAbO,OAAA,EAAAA,EAAeC,QAAS,EAE1Cd,EACEG,GAAWE,EACP,UACAF,GAAWG,EACX,SACAH,EACA,QACA,MAACU,OAAD,EAACA,EAAe7D,QAEhBqD,EACA,MACAD,EACA,QACA,KALA,YAOR,OACE,kBAACnN,EAAD,CACE/f,IAAG,OAASO,EACZ2C,QAAS,SAACsT,GAIR,GAHIrP,EAAKjE,SACPiE,EAAKjE,UAEHiE,EAAKkX,GAAI,CACX7O,EAAW8Y,QAAQnhB,EAAKkX,GAAIlX,EAAK6Y,QAEjC,IAAMC,EAAW,CACfC,OAAQ,YAAc/Y,EAAKkX,GAC3B8B,UAAW3J,EAAE3F,YAAYsP,UACzBC,UAAW5J,EAAE3F,YAAYuP,UACzBC,UAAW1Q,KAAK5H,OAGlBuF,EAAS,CAAExF,KAAM,eAAgBoB,MAAO+W,SAExCzQ,EAAWuc,WAMb,GAHI5kB,EAAKiS,MACPC,EAAQlS,EAAKiS,MAEXjS,EAAK8kB,aAAc,CACrB,IAAM4B,EAAcnJ,GAAQ1c,WAC1B,SAACvH,GAAD,OAAOA,EAAEqH,OAASX,EAAK8kB,gBAEnBpG,EAASnB,GAAQmJ,GAJF,EAWjBjI,GAAc,CAChB5V,OACA8V,YACAvlB,MAAOstB,EACPhI,WATAP,EANmB,EAMnBA,SACAE,EAPmB,EAOnBA,UACAN,EARmB,EAQnBA,KACAiB,EATmB,EASnBA,cACAC,EAVmB,EAUnBA,eAQEd,GAAYE,IACM,QAAhBhZ,UAASC,IACXzC,EAAIob,MAAM,CACRC,IAAKC,EACLC,IAAKC,IAGPqH,EAAQ3H,EAAO,IAEflb,EAAIyb,gBAAgB,CAClBH,SAAUA,EACVE,UAAWA,EACXE,cAAeS,EACfR,eAAgBS,KAKtB/M,EAAQ,QACR2R,EAAY7jB,EAAK8kB,cAGnB,QAAsBxqB,IAAlB0F,EAAKilB,SAAwB,CAC/B,IAAMvC,EAAO/D,EAAUE,MAAM7e,EAAKilB,UAElC,GAAoB,QAAhB5f,UAASC,GAAc,CACzBzC,EAAIob,MAAM,CACRC,IAAKwE,EAAK5D,eACVV,IAAKsE,EAAK3D,kBAEZ,IAAM4H,EACJjE,EAAKnE,cAAgBmE,EAAKlE,eACtBkE,EAAKnE,cACLmE,EAAKlE,eAEXkH,EAAQhI,GAAQiJ,SAEhB9jB,EAAIyb,gBAAgB,CAClBH,SAAUuE,EAAK5D,eACfT,UAAWqE,EAAK3D,gBAChBR,cAAemE,EAAKnE,cACpBC,eAAgBkE,EAAKlE,iBAIzBtM,EAAQ,eACR2R,EAAY,QACZ4B,EAAqBzlB,EAAKilB,aAI9B,kBAACxW,GAAD,CAAWC,UAAW,KAAMC,WAAY,OACrC,SAACC,GAAD,OACC,kBAACtT,EAAA,QAAD,CACEC,MAAO,CACL4d,kBAAmB,EACnB1V,QAAS,EACTJ,gBAAiBrD,EAAK8W,SAClB7W,EAAMsS,QACHtS,EAAMsS,QAFI,KAGjB6G,YAAa,IAGf,kBAAC9d,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf+H,WAAY,SACZ8V,UAAW,GACXhW,gBACEuL,GAAa+J,EACT9Y,EAAWI,EAAMsS,cACjBjY,EACNkJ,aAAcoL,GAAa+J,EAAY,QAAKre,IAG9C,kBAACgB,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,GAAI2H,WAAY,WACnCvD,EAAKkY,MACJ,kBAACzc,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,YAAcgI,EAAKkY,OAC5C3c,MAAO,CACLK,MAAO,GACPC,OAAQ,GACR2H,aAAc,GACd2G,YAAawb,EAAe,EAAI,EAChCvb,YAAaub,QAA8BrrB,KAG7CsN,EACF,kBAACA,EAAD,CACE3L,KAAM+D,EAAKyH,KACXvL,KAAM,GACNC,MAAOwpB,GAA8B1lB,EAAMiI,gBAE3C,MAEN,kBAACxE,EAAA,QAAD,CACE8G,cAAe,EACfjP,MAAO,CACLI,WAAY,GACZQ,MAAO8D,EAAME,YACbwD,WAAY3D,EAAK8W,SAAW,YAASxc,IAGtC0F,EAAKvD,MAEPuD,EAAKsX,OACJ,kBAAChc,EAAA,QAAD,CACEC,MAAO,CACLI,WAAY,GAEZ6H,aAAc,GACd4G,YAAanK,EAAME,YACnBgK,YAAa,EACb1G,QAAS,IAGX,kBAAC,GAAD,KAAInH,EAAQ,SAIf0D,EAAK+W,OACJ,kBAACzb,EAAA,QAAD,CACEC,MAAO,CACLI,WAAY,GAEZ6H,aAAc,GACd4G,YAAanK,EAAME,YACnBgK,YAAa,EACb1G,QAAS,IAGX,kBAAC,GAAD,KAAIzD,EAAK+W,QAIZ/W,EAAK2jB,WAAa,EACjB,kBAACroB,EAAA,QAAD,CACEC,MAAO,CACLI,WAAY,GACZ6H,aAAc,GACd5H,MAAO,GACPC,OAAQ,GACRwH,gBAAiB,MACjBC,eAAgB,SAChBC,WAAY,WAGd,kBAACG,EAAA,QAAD,CACEnI,MAAO,CAAEY,MAAO,QAASyH,SAAU,GAAID,WAAY,SAElD3D,EAAK2jB,aAGR,KACH3jB,EAAKpD,iBAkLLgqB,GAzKD,SAAC,GAeR,IAAD,IAdJhlB,EAcI,EAdJA,SACAsE,EAaI,EAbJA,OACAK,EAYI,EAZJA,GACA8B,EAWI,EAXJA,WACAlC,EAUI,EAVJA,SACAwY,EASI,EATJA,UACA8G,EAQI,EARJA,qBACA5iB,EAOI,EAPJA,IACAghB,EAMI,EANJA,YACA6B,EAKI,EALJA,QACAxT,EAII,EAJJA,QACArJ,EAGI,EAHJA,KACAgW,EAEI,EAFJA,MACAkG,EACI,EADJA,SACI,EACgC9pB,mBAAQ,SAACiL,EAAOgU,WAAR,EAAC,EAAa/W,MADtD,WACGgX,EADH,KACeC,EADf,OAEkCnf,mBAAQ,SAACiL,EAAOgU,WAAR,EAAC,EAAa9W,OAFxD,WAEGiX,EAFH,KAEgBC,EAFhB,KAIE9M,EAASjG,IAAWzI,IAAI,UAiI9B,OAhIsB0O,EAAO5R,MAAQ,IAiInCgG,EAEA,kBAACtG,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfK,OAAQ,OACRD,MAAO,OACPoH,SAAU,YAEZuhB,cAAc,YAEbre,EAAO2gB,WAzIV,kBAACvrB,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,MACpB,kBAAC0f,GAAA,EAAD,CACE/f,MAAO,CAAEK,MAAO,KAChB2f,sBAAuB,CACrB3f,MAAO,IACPC,OAAwB,QAAhBwJ,UAASC,GAAekI,EAAO3R,OAAS,SAAMvB,IAGxD,kBAACkhB,GAAA,EAAD,CACEC,gBAAc,EACdC,SAAUpG,GAAS/O,EAAIL,EAAOjG,OAC9B0b,eAAgBxB,EAChByB,SAAU,SAACC,GACTzB,EAAcyB,GACd1V,EAAS,CACPxF,KAAM,gCACNoB,MAAO8Z,KAGX5K,aAAc,SAAC6K,EAAS1iB,GAAV,OACZsf,GAAW,CACT1Y,KAAM8b,EAAQjF,OACdzd,QACAiP,aACApI,MAAOiG,EAAOjG,MACdkG,WACAI,KACAoY,YACA8G,uBACA5iB,MACAghB,cACA6B,UACA7c,OACAqJ,UACA2M,WAGJ9C,cAAe,SAACD,GAAD,OACbA,EAAQ9E,QAAQnU,KAAI,SAAC7C,EAAM5G,GAAP,OAClBsf,GAAW,CACT1Y,OACA5G,QACAiP,aACApI,MAAOiG,EAAOjG,MACdkG,WACAI,KACAoY,YACA8G,uBACA5iB,MACAghB,cACA6B,UACA7c,OACAqJ,UACA2M,kBAqFV,kBAACvjB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,GAAKqgB,cAAc,YACrC3iB,GAEFsE,EAAO2gB,WA9EV,kBAACvrB,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,MACpB,kBAAC0f,GAAA,EAAD,CACE/f,MAAO,CAAEK,MAAO,KAChB2f,sBAAuB,CACrB3f,MAAO,IACPC,OAAwB,QAAhBwJ,UAASC,GAAekI,EAAO3R,OAAS,SAAMvB,IAGxD,kBAACkhB,GAAA,EAAD,CACEC,gBAAc,EACdC,SAAU7D,GAAUtR,EAAIL,EAAOjG,MAAO4e,EAAOkG,EAAU7e,GACvDyV,eAAgBtB,EAChBuB,SAAU,SAACC,GACTvB,EAAeuB,GACf1V,EAAS,CACPxF,KAAM,iCACNoB,MAAO8Z,KAGX5K,aAAc,SAAC6K,EAAS1iB,GAAV,OACZsf,GAAW,CACT1Y,KAAM8b,EAAQjF,OACdzd,QACAiP,aACApI,MAAOiG,EAAOjG,MACdkG,WACAI,KACAoY,YACA8G,uBACA5iB,MACAghB,cACA6B,UACA7c,OACAgW,QACA3M,aAGJ6J,cAAe,SAACD,GAAD,OACbA,EAAQ9E,QAAQnU,KAAI,SAAC7C,EAAM5G,GAAP,OAClBsf,GAAW,CACT1Y,OACA5G,QACAiP,aACApI,MAAOiG,EAAOjG,MACdkG,WACAI,KACAoY,YACA8G,uBACA5iB,MACAghB,cACA6B,UACA7c,OACAqJ,UACA2M,oBCliCDiI,GA1HD,SAAC,GAA2D,IAAzD7U,EAAwD,EAAxDA,KAAM5J,EAAkD,EAAlDA,WAAY6J,EAAsC,EAAtCA,QAAStQ,EAA6B,EAA7BA,SAAUmlB,EAAmB,EAAnBA,aAAmB,EAC3B9rB,mBAAS,MADkB,WAChE+rB,EADgE,KAChDC,EADgD,KAEvErtB,qBAAU,WACR,IAAI6a,EACAG,EACAC,EACAC,EAqBJ,MApBoB,QAAhBzP,UAASC,IACXmP,EAA2BC,KAASC,YAClC,mBACAvB,GAEFwB,EAA2BF,KAASC,YAClC,mBACAP,KAGFS,EAA0BH,KAASC,YACjC,kBACAvB,GAEF0B,EAA0BJ,KAASC,YACjC,kBACAP,IAIG,WACe,QAAhB/O,UAASC,IACXmP,EAAyBM,SACzBH,EAAyBG,WAEzBF,EAAwBE,SACxBD,EAAwBC,cAK9B,IAAM3B,EAAmB,SAAC/D,GACxB,IAAMiE,EAAUjE,EAAEkE,eAAe1X,OACjCorB,EAAkB3T,IAGdc,EAAmB,SAAC/E,GACxB4X,EAAkB,OAGdC,EAAUC,uBAAY,SAACC,GACL,KAAlBA,EAAMC,SAGRC,MAED,IAEGA,EAAQ,WACC,SAATrV,GAA4B,gBAATA,GAAmC,WAATA,GAC/CC,EAAQ,QAGV7J,EAAWuc,YAEbhrB,qBAAU,WACR,GAAoB,QAAhByL,UAASC,GAGX,OAFAkJ,SAAS9I,iBAAiB,UAAWwhB,GAAS,GAEvC,WACL1Y,SAASyM,oBAAoB,UAAWiM,GAAS,MAGpD,IAEH,IAAMjnB,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SAE5CsnB,EAAyB,SAATtV,GAA4B,WAATA,EAAoB,GAAK,IAClE,OACE,kBAAC3W,EAAA,QAAD,CACEC,MAAO,CACLyH,SAAU,WACVC,IAAK8jB,EAAe,GACpB7jB,OAAQ8jB,GAAkCO,EAC1CpkB,KAAM,EACNC,MAAO,EACPC,gBAAoBpD,EAAMsS,QAAX,KACf/O,aAAc,KAGhB,kBAAClI,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,kBAGjB+E,EAAW1C,MAAM8H,QAAQrO,OAAS,EACjC,kBAACtD,EAAA,EAAD,CACEwR,QAAS,CAAErK,IAAK,GAAIE,KAAM,GAAIC,MAAO,GAAIF,OAAQ,IACjDnH,QAAS,WACPsM,EAAWkF,WAGb,kBAAC,KAAD,CACEtR,KAAK,YACLC,KAAM,GACNC,MAAO8D,EAAMiI,iBAIjB,kBAAC5M,EAAA,QAAD,MAGF,kBAACQ,EAAA,EAAD,CACEwR,QAAS,CAAErK,IAAK,GAAIE,KAAM,GAAIC,MAAO,GAAIF,OAAQ,IACjDnH,QAASurB,GAET,kBAAC,KAAD,CAAgBrrB,KAAK,QAAQC,KAAM,GAAIC,MAAO8D,EAAMiI,kBAGvDtG,I,UC6CQ4lB,IAzJGjgB,IAAWzI,IAAI,UAAzBlD,MAGW,SAAC,GAQb,IAPLyM,EAOI,EAPJA,WAOI,IANJ/B,YACEC,EAKE,EALFA,GACAL,EAIE,EAJFA,OACAM,EAGE,EAHFA,SACUvG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAGkCrN,mBAAQ,MAACsL,OAAD,EAACA,EAAIkhB,YAH/C,WAGGC,EAHH,KAGgBC,EAHhB,OAIkC1sB,mBAAQ,MAACsL,OAAD,EAACA,EAAIqhB,aAJ/C,WAIGA,EAJH,KAIgBC,EAJhB,OAKkC5sB,mBAAQ,MAACsL,OAAD,EAACA,EAAIuhB,aAL/C,WAKGA,EALH,KAKgBC,EALhB,OAMkC9sB,mBAAQ,MAACsL,OAAD,EAACA,EAAIyhB,aAN/C,WAMGA,EANH,KAMgBC,EANhB,OAO4BhtB,mBAAS,MAPrC,WAOGT,EAPH,KAOa+W,EAPb,KASE2W,EAAS,SAACC,GAGdluB,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBotB,WAAYC,EACZE,cACAE,cACAE,cACAhtB,WAAYkL,EAAOlL,eAGpBT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACP+W,EAAY/W,GACZgM,EAASN,EAAOlL,eAEjBJ,OAAM,SAACC,GACNC,QAAQ6H,IAAI,eAAgB9H,GAC5ButB,MAAM9rB,EAAQ,2BAqBpB1C,qBAAU,WAAO,IAAD,EACR6tB,EAAU,SAAGpf,EAAW1C,MAAMkT,aAApB,EAAG,EAAyB4O,WACxCA,GACFS,MAED,IAEH,IAAM7nB,EAAOiB,GAAO,MAACiF,OAAD,EAACA,EAAIlG,KAAM,UACzB2Z,EAAG,2DAAuDzT,OAAvD,EAAuDA,EAAItK,MACpE,OACE,kBAACqf,GAAA,EAAD,CACE/f,MAAO,CACL2I,KAAM,IAGR,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8sB,SAAU,IAAKhb,OAAQ,KACpC,kBAAC,GAAD,KAAI/Q,EAAQ,mBAEZ,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAEmQ,aAAc,KAC3B,kBAAC,GAAD,KAAIpP,EAAQ,uBACZ,kBAACwH,EAAA,EAAD,CACE/B,MAAOiY,EACPsO,QAAS,WACPC,KAAUC,UAAUxO,GACpBzI,EAAYjV,EAAQ,uBAEtBf,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAAC,GAAD,CAAGuT,MAAI,GAAE3T,EAAQ,2BACd,MAAFiK,OAAA,EAAAA,EAAIkiB,YAAYrpB,QAAS,EAAzB,MACCmH,OADD,EACCA,EAAIkiB,YAAY5lB,KAAI,SAAC4kB,GACnB,OAlDQ5uB,EAkDQ4uB,EAAWxrB,KAlDd8F,EAkDoBT,GAAQmmB,EAAWpnB,KAAM,QAhDhE,kBAAC/E,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf6Q,SAAU,OACV/I,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,WAGd,kBAAC,GAAD,KAAI1K,GACJ,kBAAC,GAAD,KAAIkJ,IAZO,IAAClJ,EAAKkJ,KAqDf,kBAAC,GAAD,KAAIzF,EAAQ,oBAGd,kBAAC,GAAD,CAAG2T,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,+BAEX,kBAAC,GAAD,KAAI9B,GAEJ,kBAACsJ,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAOmtB,GAAOzoB,GAAOvD,UACrBqF,MAAO2lB,EACP3jB,aAAc4jB,EACdne,YAAalN,EAAQ,aAAc,KAGpC+D,GAAQ,GACP,kBAACyD,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAOmtB,GAAOzoB,GAAOvD,UACrBqF,MAAO6lB,EACP7jB,aAAc8jB,EACdre,YAAalN,EAAQ,aAAc,KAEnC,KAEH+D,GAAQ,GACP,oCACE,kBAACyD,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAOmtB,GAAOzoB,GAAOvD,UACrBqF,MAAO+lB,EACP/jB,aAAcgkB,EACdve,YAAalN,EAAQ,aAAc,KAGrC,kBAACwH,EAAA,EAAD,CACEvI,MAAOmtB,GAAOzoB,GAAOvD,UACrBqF,MAAOimB,EACPpV,qBAAsB3S,EAAM4S,kBAC5B9O,aAAckkB,EACdze,YAAalN,EAAQ,aAAc,MAGrC,KAEJ,kBAAC,GAAD,CAAQiG,MAAOjG,EAAQ,QAASP,QAASmsB,Q,kbC9ElCS,G,qLA1EbhjB,MAAQ,CACNnL,SAAU,KACVouB,QAAS,KACTpmB,QAAS,M,EAmCXqmB,YAAc,WAAO,IACX3iB,EAAW,EAAKf,MAAMmB,YAAtBJ,OADU,EAEW,EAAKP,MAA1BnD,EAFU,EAEVA,QAASomB,EAFC,EAEDA,QACjB3uB,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdwH,UACAomB,cAGDruB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKkO,SAAS,CAAElO,gBAEjBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,oDArDN,IAAD,SAGP0K,KAAKJ,MADPmB,YAAeJ,EAFN,EAEMA,OAAQK,EAFd,EAEcA,GAGnBjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,KACGiK,KAAKI,MAAMnL,SAAW,kBAAC,GAAD,KAAI+K,KAAKI,MAAMnL,SAASA,UAAgB,KAC/D,kBAACsJ,EAAA,EAAD,CACEvI,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3BkW,qBAAsB1M,EAAOjG,MAAM4S,kBACnCrJ,YAAalN,EAAQ,WACrByF,MAAOwD,KAAKI,MAAMijB,QAClB7kB,aAAc,SAAC6kB,GAAD,OAAa,EAAKlgB,SAAS,CAAEkgB,eAE7C,kBAAC9kB,EAAA,EAAD,CACE8O,qBAAsB1M,EAAOjG,MAAM4S,kBACnCtX,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3B8M,YAAalN,EAAQ,WACrByF,MAAOwD,KAAKI,MAAMnD,QAClBuB,aAAc,SAACvB,GAAD,OAAa,EAAKkG,SAAS,CAAElG,eAE7C,kBAAC,GAAD,CACEjH,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,QACfP,QAASwJ,KAAKsjB,iB,+BA8BZ,IAAD,EAIHtjB,KAAKJ,MADQoB,GAHV,EAEL8B,WAFK,EAGL/B,YAAeC,IAGXjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OAAO/B,EAAG8Q,MAAQ,GAAK,kBAAC,GAAD,KAAI/a,EAAQ,aAAmBiJ,KAAKujB,iB,GAvE1C9iB,aC8EN+iB,GAlFQ,SAAC,GAOlB,EANJ1gB,WAMI,EALJ/B,YAKK,IAAD,IAJJA,YACEC,EAGE,EAHFA,GAGE,IAFFL,OAAiBlL,GAEf,EAFQiF,MAER,EAFejF,YAGbsB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAGkBrN,mBAAS,IAH3B,WAGG+tB,EAHH,KAGQC,EAHR,OAIgBhuB,mBAAS,MAJzB,WAIGyX,EAJH,KAIOwW,EAJP,OAKoBjuB,mBAAS,MAL7B,WAKGilB,EALH,KAKSiJ,EALT,OAM0BluB,mBAAS,MANnC,WAMGgoB,EANH,KAMYmG,EANZ,OAO8BnuB,mBAAS,MAPvC,WAOG8L,EAPH,KAOcsiB,EAPd,KA2BJ,OAlBA5vB,GAAO,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACiBoE,EAAI,mBAAmB9D,IADxC,gBACGguB,EADH,EACGA,IACRC,EAAOD,GAFF,+DAKPpvB,qBAAU,YACW,yBAAAc,EAAAC,OAAA,kEAAAD,EAAA,MAC0BoE,EAAI,uBACtB9D,EADqB,WACA0X,IAF7B,gBACTwN,EADS,EACTA,KAAM+C,EADG,EACHA,QAASlc,EADN,EACMA,UAGvBoiB,EAAQjJ,GACRkJ,EAAWnG,GACXoG,EAAatiB,GANI,4DASnBuiB,KACC,CAAC5W,IAGF,kBAAC4I,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,MAClC,MAAF8C,OAAA,EAAAA,EAAI8Q,OAAQ,EACX,kBAAC,GAAD,KAAI/a,EAAQ,aAEZ,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IAClBwO,GAAMwN,GAAQ+C,GAAWlc,EACxB,kBAACzL,EAAA,QAAD,KACE,kBAACQ,EAAA,EAAD,CAAkBC,QAAS,kBAAMmtB,EAAM,QACrC,kBAAC,GAAD,CAAGjZ,MAAI,EAAC1U,MAAO,CAAEmQ,aAAc,KAC5BpP,EAAQ,UAIb,kBAAC,GAAD,KACGA,EAAQ,QADX,KACsB4jB,EAAKjkB,MAG3B,kBAAC,GAAD,KACGK,EAAQ,WADX,KACyB2mB,EAAQ7jB,QAEjC,kBAAC,GAAD,KACG9C,EAAQ,aADX,KAC2ByK,EAAU3H,SAIvC4pB,EAAInmB,KAAI,SAAC0mB,EAAInwB,GACX,IAAMowB,EAAWR,EAAI5vB,EAAQ,GAE7B,OACE,kBAACkC,EAAA,QAAD,CAAMzC,IAAG,KAAOO,IACL,MAARowB,OAAA,EAAAA,EAAUD,MAAOA,EAAGA,GAAK,KACxB,kBAACjuB,EAAA,QAAD,CAAMC,MAAO,CAAEwQ,UAAW,MAE5B,kBAACjQ,EAAA,EAAD,CAAkBC,QAAS,kBAAMmtB,EAAMK,EAAG7W,MACxC,kBAAC,GAAD,KAAI6W,EAAGttB,YAQrB,kBAACX,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,kbCnErBD,GAAU2L,IAAWzI,IAAI,UAAzBlD,MACF0L,GAAU1L,GAAQ,IA+MT6tB,G,qLA7Mb9jB,MAAQ,CACNnL,SAAU,KACVmG,KAAM,U,EAOR+oB,YAAc,oBAAAhvB,EAAAC,OAAA,gDACZ,EAAKwK,MAAMmB,YAAYma,eADX,6D,EAIdkJ,UAAY,SAAChpB,GAAU,IACbuF,EAAW,EAAKf,MAAMmB,YAAtBJ,OAERjM,MACKlC,EAAUC,YADV,eACoCkO,EAAOlL,WAD3C,SAC8D2F,EACjE,CACE5G,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,WAAUmG,SADtB,+DAGL/F,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB+uB,YAAc,SAAO/gB,GAAP,uBAAAnO,EAAAC,OAAA,uDACJgG,EAAS,EAAKgF,MAAdhF,KADI,EAEiB,EAAKwE,MAAMmB,YAAhCE,EAFI,EAEJA,SAAUN,EAFN,EAEMA,OAFN,WAAAxL,EAAA,MAGeqE,EAAK,cAAe,CAC7C8J,OACAlI,KACW,WAATA,GAEa,eAATA,EADA,aAGS,aAATA,EACA,UACS,SAATA,EACA,cACA,SACN8F,MAAOP,EAAOlL,cAfJ,kBAGJR,SAcR,EAAKkvB,cACLljB,EAASN,EAAOlL,YAlBJ,6D,EAqBd0d,WAAa,SAACmR,EAAGxxB,EAAQ6L,GAAU,IAAD,EACA,EAAKyB,MAAnBhF,GADc,EACxBnG,SADwB,EACdmG,MADc,KACRmpB,IAOpB,EAAK3kB,OARuB,KAG9BkD,WAH8B,EAI9B/B,aAEYrG,GANkB,EAK5BiG,OAL4B,EAM5BA,OAAUjG,OAId,OACE,kBAACnE,EAAA,EAAD,CACEP,MAAO,CACL8H,gBACE1C,IAASkpB,EAAO5pB,EAAM8H,UAAtB,KAAsC9H,EAAM8H,UAC9CoR,kBAAmB,EACnB/U,iBAAkB,EAClBF,OACAZ,eAAgB,SAChBC,WAAY,UAEdxH,QAAS,kBAAM,EAAK4tB,UAAUE,KAE9B,kBAAC,GAAD,KAAIxxB,K,2DA1ERkN,KAAKokB,UAAUpkB,KAAKJ,MAAMxE,MAAQ,UAClC4E,KAAKmkB,gB,+BA6EG,IAAD,2BAQHnkB,KAAKJ,MARF,KAELkD,WAFK,EAGL/B,aACEJ,EAJG,EAIHA,OACAK,EALG,EAKHA,GALG,KAMHL,OAAUjG,MAIkBsF,KAAKI,OAA7BnL,EAVD,EAUCA,SAAUmG,EAVX,EAUWA,KAAMmpB,EAVjB,EAUiBA,IAElBxtB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAC9BA,EAAS5P,EAAS,MAAC6N,OAAD,EAACA,EAAI+B,QAEvByhB,EAAW,SAAClxB,EAAKkJ,GACrB,OACE,kBAACzG,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChB0E,kBAAmB,GACnBnM,OAAQ,GACR0H,WAAY,WAGd,kBAAC,GAAD,KAAI1K,GACJ,kBAAC,GAAD,KAAIkJ,KAIV,OACE,kBAACuZ,GAAA,EAAD,KACGyO,EAASztB,EAAQ,QAAT,gBAAsBiK,OAAtB,EAAsBA,EAAIqG,OAClCmd,EAASztB,EAAQ,QAAT,gBAAsBiK,OAAtB,EAAsBA,EAAIsG,OAClCkd,EAASztB,EAAQ,aAAT,gBAA2BiK,OAA3B,EAA2BA,EAAIyjB,YAEvCF,EACC,kBAACxuB,EAAA,QAAD,KACE,kBAAC,GAAD,KAAIwuB,GACJ,kBAAC,GAAD,CACE7pB,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2M,SAAS,CAAEohB,IAAK,WAGtCtvB,EACF,kBAACc,EAAA,QAAD,MACW,MAARd,GAAA,SAAAA,EAAU4H,cAAV,IAAmB8V,QAClB,kBAACzc,EAAA,EAAD,CACEF,MAAO,CACLK,MAAO0L,GAAU1L,GAAQ,IACzBC,OAAQ,IACRouB,WAAY,WAEdvuB,OAAQ,CACNL,IAAQtD,EAAUC,YAAf,WAA8BwC,GAA9B,SAA8BA,EAAU4H,cAAxC,EAA8B,EAAmB8V,UAI1D,kBAAC,GAAD,CAAG3c,MAAO,CAAEiX,UAAW,WACpBlW,EAAQ,WADX,IACwB,KACb,MAAR9B,GAAA,SAAAA,EAAU4H,UAAV,WAAmBnG,WAAnB,IAA0BqM,KAAWhM,EAAQ,UAGvC,MAAR9B,OAAA,EAAAA,EAAU0vB,MACT,kBAAC5uB,EAAA,QAAD,MACW,MAARd,GAAA,SAAAA,EAAU0vB,WAAV,IAAgBhS,QACf,kBAACzc,EAAA,EAAD,CACEF,MAAO,CACLK,MAAO0L,GAAU1L,GAAQ,IACzBC,OAAQ,IACRouB,WAAY,WAEdvuB,OAAQ,CACNL,IAAQtD,EAAUC,YAAf,WAA8BwC,GAA9B,SAA8BA,EAAU0vB,WAAxC,EAA8B,EAAgBhS,UAIvD,kBAAC,GAAD,CAAG3c,MAAO,CAAEiX,UAAW,WACpBlW,EAAQ,OADX,WACqB9B,GADrB,SACqBA,EAAU0vB,OAD/B,SACqB,EAAgBjuB,WADrC,EACqB,EAAuBqM,IAE5C,kBAAC,GAAD,CAAG/M,MAAO,CAAEiX,UAAW,WACpBlW,EAAQ,OADX,iBAC2B9B,GAD3B,SAC2BA,EAAU0vB,WADrC,EAC2B,EAAgBC,MAD3C,MAGA,kBAAC,GAAD,CACElqB,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,OACfP,QAAS,WACP9B,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBW,WAAYkL,EAAOlL,WACnB2F,WAGDpG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOuvB,GAAP,SAAApvB,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAEohB,IAAKA,EAAItvB,WACzB,EAAKmvB,UAAUhpB,GACf,EAAKwE,MAAMmB,YAAYE,SAASN,EAAOlL,YAHnC,+DAKLJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,UAKtB,MAGN,kBAAC8X,GAAA,EAAD,W,GAvMS3M,aCPJokB,GANM,SAAC,GAAiC,IAA/B/hB,EAA8B,EAA9BA,WAAY/B,EAAkB,EAAlBA,YAClC,OACE,kBAAC,GAAD,CAAM3F,KAAK,WAAW0H,WAAYA,EAAY/B,YAAaA,K,kbCEzD+jB,G,qLACJ1kB,MAAQ,CACNnL,SAAU,M,EAEZ8vB,aAAe,WAAO,IAAD,EACI,EAAKnlB,MAAMmB,YAA1BJ,EADW,EACXA,OAAQK,EADG,EACHA,GACR2Q,EAAO,EAAKvR,MAAZuR,GAEF5a,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAC,GAAD,CACE/M,MAAO,CAAEiI,aAAc,GAAIuI,UAAW,IACtCxJ,MAAOjG,EAAQ,OACfP,QAAS,WACP9B,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdkc,SAGD3c,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,aAChB,EAAK2K,MAAMmB,YAAYE,SAASN,EAAOlL,YAFnC,+DAILJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,U,EAO1B0vB,gBAAkB,WAEhB,IAAM7nB,EAAU,CACd,QACA,YACA,SACA,YACA,SACA,QACA,OACA,SACA,SACA,WACA,OACA,WACA,iBACA8nB,OACF,EAAKrlB,MAAMif,2BACT,CACE1hB,YAIF,SAACiiB,GACC,EAAKjc,SAAS,CAAEwO,GAAIxU,EAAQiiB,S,oDAKpB,IAAD,EACLroB,EAAU1D,EAAe,SAAC2M,KAAKJ,MAAMmB,YAAYC,SAAxB,EAAC,EAA2B+B,QAC3D,OACE,kBAAChN,EAAA,QAAD,KACE,kBAAC,GAAD,CACEiH,MAAOgD,KAAKI,MAAMuR,GAAK3R,KAAKI,MAAMuR,GAAK5a,EAAQ,cAC/CP,QAASwJ,KAAKglB,kBAGfhlB,KAAK+kB,kB,+BAIF,IAAD,EAOH/kB,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aAEYrG,GALP,EAIHsG,GAJG,EAKHL,OAAUjG,OAGNzF,EAAa+K,KAAKI,MAAlBnL,SAER,OACE,kBAACc,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGX,WAAY,WAClC,kBAACjI,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,GAAIzR,MAAO,MAC/BpB,EACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAEV,KAEH+K,KAAKujB,mB,GApGM9iB,aA2GPykB,gCAAmBJ,IC1EnBK,GAnCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACR1qB,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SAElD,OACE,kBAAC3E,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,iBAGjBqnB,EAAK9nB,KAAI,SAAC+nB,EAAKxxB,GACd,OACE,kBAAC0C,EAAA,EAAD,CACEjD,IAAG,MAAQO,EACXmC,MAAO,CACL2I,KAAM,EACNrI,OAAQ,GACRwH,gBAAiBunB,EAAInH,SACdxjB,EAAM8H,UADI,KAEb9H,EAAM8H,UACV3D,iBAAkB,EAClBD,iBAAkB,QAClBZ,WAAY,SACZD,eAAgB,UAElBvH,QAAS6uB,EAAI7uB,SAEb,kBAAC,GAAD,KAAI6uB,EAAIroB,aCeLxH,GAzCC,SAAC,GAMV,IALLuL,EAKI,EALJA,YACAukB,EAII,EAJJA,gBACA9J,EAGI,EAHJA,QACA5lB,EAEI,EAFJA,OACA2vB,EACI,EADJA,eAEMzvB,EACJtD,EAAUC,YAAV,uBACuBmD,EADvB,eAC4CmL,EAAYJ,OAAOlL,WAEjE,OACEsL,EAAYC,GAAGlK,aACb,kBAACf,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,SAChBC,WAAY,WAGd,kBAAC9H,EAAA,EAAD,CACEC,OAAQ,CAAEL,OACVE,MAAO,CAAEI,WAAY,GAAIC,MAAO,IAAKC,OAAQ,MAE/C,kBAACiI,EAAA,EAAD,CACEvI,MAAO,CAACA,GAAM+K,EAAYJ,OAAOjG,OAAOvD,UAAW,CAAEd,MAAO,MAC5DmG,MAAOgf,EACPhd,aAAc,SAACzK,GAAD,OAAOuxB,EAAgBvxB,MAEvC,kBAACwC,EAAA,EAAD,CAAkBC,QAAS,kBAAM+uB,EAAe5vB,KAAKC,YACnD,kBAACa,EAAA,EAAD,CACEC,KAAK,SACLC,KAAM,GACNC,MAAOmK,EAAYJ,OAAOjG,MAAME,iBCoI7B4qB,GAlKF,SAAC,GAWP,IAAD,EAVJ1iB,EAUI,EAVJA,WACA/B,EASI,EATJA,YASI,IARJA,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GACAykB,EAKE,EALFA,OACAxkB,EAIE,EAJFA,SACAia,EAGE,EAHFA,aACUxgB,EAER,EAFFiG,OAAUjG,MAGJmkB,EAA+BC,2BAA/BD,2BAEF9nB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAHhC,EAK4BrN,mBAAS,MALrC,WAKGT,EALH,KAKa+W,EALb,OAMsBtW,mBAAS,MAN/B,WAMG6lB,EANH,KAMUmK,EANV,OAO0BhwB,mBAAS,IAPnC,WAOG8lB,EAPH,KAOYmK,EAPZ,OAQoBjwB,oBAAS,SAAAoN,EAAW1C,MAAMkT,aAAjB,IAAyBlY,OAAQ,IAR9D,WAQGA,EARH,KAQSwqB,EART,OASwBlwB,mBAASC,KAAKC,UATtC,WASGA,EATH,KASWC,EATX,KAWJ3B,EAAOgnB,GAEP,IAUM2K,EAAc,CAClB1J,cAAeplB,EAAQ,iBACvBilB,OAAQjlB,EAAQ,UAChB0lB,SAAU1lB,EAAQ,YAClB2lB,QAAS3lB,EAAQ,iBACjBimB,WAAYjmB,EAAQ,cACpB4lB,IAAK5lB,EAAQ,OACbulB,QAASvlB,EAAQ,WACjBkmB,YAAalmB,EAAQ,eACrBuQ,KAAMvQ,EAAQ,cACd6T,KAAM7T,EAAQ,QACd+lB,OAAQ/lB,EAAQ,WAGZuM,EAAI,MAAGmiB,OAAH,EAAGA,EAAQ1F,MAAK,SAAChsB,GAAD,OAAOA,EAAEuP,QAAF,MAAWtC,OAAX,EAAWA,EAAIsC,SA6ChD,OACE,kBAACyS,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KAEnC,oCACE,kBAAChI,EAAA,EAAD,CAAOC,OAAQ1C,EAAQ,OACvB,kBAAC0K,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACR,KAAf,MAAFoG,OAAA,EAAAA,EAAIsa,UACDvkB,EAAQ,kBACRA,EACE,mBA9EE,CAChB,GACA,SACA,QACA,YACA,SACA,UACA,WACA,SAuEuB,MAACiK,OAAD,EAACA,EAAIsa,UACC,GAAb,MAAFta,OAAA,EAAAA,EAAIsa,YAIXrmB,GACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,YAAa0Q,eAAgB,KACtDrW,GAIL,kBAAC,GAAD,CAAGe,MAAO,CAAEwQ,UAAW,KAAOzP,EAAQ,UACtC,kBAACwH,EAAA,EAAD,CACE0F,YAAY,IACZoJ,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAO+e,EACP/c,aAAc,SAACzK,GAAD,OAAO2xB,EAAS3xB,IAC9BiC,MAAOA,GAAM0E,GAAOvD,YAGtB,kBAAC,GAAD,CAAGnB,MAAO,CAAEsV,eAAgB,KAAOvU,EAAQ,aAC3C,kBAAC,GAAD,CACEP,QA7DS,WAGjB,IAAM2G,EAAU2oB,OAAOC,KAAKF,GAAavoB,KACvC,SAAClC,GAAD,OACKyqB,EAAYzqB,GADjB,KAC2BkI,EAAQlI,EAAJ,UAD/B,KACqDrE,EACjD,UAFJ,WAGSjD,EAAawP,EAAQlI,EAAJ,WAH1B,IAGgDrE,EAAQ,UAHxD,OAMFoG,EAAQK,KAAKzG,EAAQ,WACrB,IACMmoB,EAAoB/hB,EAAQtD,OAAS,EAE3CglB,EACE,CACE1hB,UACA+hB,oBACAC,4BAP2BpqB,IAS7B,SAACqqB,GACKA,IAAgBjiB,EAAQtD,OAAS,GACnC+rB,EAAQE,OAAOC,KAAKF,GAAazG,QAwC/BpiB,MAAO5B,EAAOyqB,EAAYzqB,GAAQrE,EAAQ,mBAG3CqE,EACC,kBAAC,GAAD,KACGrE,EACC,WACA8uB,EAAYzqB,GACZkI,EAAQlI,EAAJ,UACJtH,EAAawP,EAAQlI,EAAJ,WACjBkI,EAAQlI,EAAJ,UAAJ,cAGF,KAEJ,kBAAC,GAAD,CACE2F,YAAaA,EACbya,QAASA,EACT8J,gBAAiB,SAACvxB,GAAD,OAAO4xB,EAAW5xB,IACnC6B,OAAQA,EACR2vB,eAAgB,SAACxxB,GAAD,OAAO8B,EAAU9B,MAGnC,kBAAC,GAAD,CACEiC,MAAO,CAAEwQ,UAAW,IACpBxJ,MAAOjG,EAAQ,cACfP,QAtGK,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACcqE,EAAK,OAAQ,CACtC/D,WAAYkL,EAAOlL,WACnB8lB,QACAngB,OACAogB,aALW,gBACLvmB,EADK,EACLA,SAMRgM,EAASN,EAAOlL,YAChBuW,EAAY/W,GACZimB,IACAyK,EAAW,IACX9vB,EAAUF,KAAKC,UAXF,gEA2GX,kBAACG,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,QC/Hd0vB,GAjCI,SAACpmB,GAAW,IAAD,EACtB7I,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAEhDqiB,EAAO,CACX,CACE9xB,IAAK,UACL0J,MAAOjG,EAAQ,eACfM,UAAWytB,IAGb,CACExxB,IAAK,OACL0J,MAAOjG,EAAQ,YACfM,UAAWmuB,KAba,EAiBN9vB,mBAAS0vB,EAAK,GAAG9xB,KAjBX,WAiBrB+xB,EAjBqB,KAiBhBY,EAjBgB,KAkBtBxlB,EAAY2kB,EAAKrF,MAAK,SAACuE,GAAD,OAAOA,EAAEhxB,MAAQ+xB,KAAKhuB,UAClD,OACE,kBAACtB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC8B,EAAcb,GAEf,kBAAC,GAAD,CACEwlB,KAAMA,EAAK9nB,KAAI,SAACgnB,GAAD,MAAQ,CACrBtnB,MAAOsnB,EAAEtnB,MACTkhB,SAAUmH,IAAQf,EAAEhxB,IACpBkD,QAAS,kBAAMyvB,EAAO3B,EAAEhxB,c,kbCnB5B4yB,G,qLACJ9lB,MAAQ,CACNnL,SAAU,M,EAGZkxB,QAAU,SAAOA,GAAP,iBAAAhxB,EAAAC,OAAA,uDACAuL,EAAW,EAAKf,MAAMmB,YAAtBJ,OADA,WAAAxL,EAAA,MAGeqE,EAAK,OAAQ,CAClC0H,MAAOP,EAAOlL,WACd4mB,OAAQ,EAAKjc,MAAMic,OACnB8J,aANM,OAGFlxB,EAHE,OASR,EAAKkO,SAAS,CAAElO,aAChB,EAAK2K,MAAMmB,YAAYE,SAASN,EAAOlL,YAV/B,6D,gDAaDnC,EAAKkJ,EAAOhG,GACnB,OACE,kBAACT,EAAA,QAAD,CAAMC,MAAOmtB,GAAOiD,KAClB,kBAAC,GAAD,CAAGre,QAAS,CAAErK,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAAOvK,GAC3D,kBAACiD,EAAA,EAAD,CACE6L,UAAW5L,EACXuR,QAAS,CAAErK,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDrH,QAASA,GAET,kBAAC,GAAD,KAAIgG,O,+BAMF,IAAD,SAOHwD,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAIR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAT7B,EAWgC/C,KAAKI,MAAlBnL,GAXnB,EAWC0c,GAXD,EAWK0K,OAXL,EAWajhB,KAXb,EAWmBnG,UAE1B,OACE,kBAAC8gB,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,GAAInJ,KAAM,IAC9B1J,EACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAEV,KACH+K,KAAKwkB,SAASztB,EAAQ,QAASjD,EAAY,MAACkN,OAAD,EAACA,EAAIqG,OAAO,kBACtD,EAAKlE,SAAS,CAAEkZ,OAAQziB,OAAOoH,EAAGqG,WAEnCrH,KAAKwkB,SAASztB,EAAQ,QAASjD,EAAY,MAACkN,OAAD,EAACA,EAAIsG,OAAO,kBACtD,EAAKnE,SAAS,CAAEkZ,OAAQziB,OAAOoH,EAAGsG,WAEnCtH,KAAKwkB,SAASztB,EAAQ,QAASA,EAAQ,eACxC,kBAAChB,EAAA,QAAD,KACE,kBAACwI,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAOA,GAAM0E,GAAOvD,UACpB8M,YAAalN,EAAQ,UACrByF,MAAOwD,KAAKI,MAAMic,OAClB7d,aAAc,SAAC6d,GAAD,OAAY,EAAKlZ,SAAS,CAAEkZ,cAG5C,kBAACtmB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChByI,UAAW,KAGb,kBAAC,GAAD,CACExJ,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2vB,SAAQ,IAC5BnwB,MAAO,CAAEK,MAAO,MAElB,kBAAC,GAAD,CACE2G,MAAOjG,EAAQ,OACfP,QAAS,kBAAM,EAAK2vB,SAAQ,IAC5BnwB,MAAO,CAAEK,MAAO,c,GArFboK,aA+Fb0iB,GAASxX,KAAWC,OAAO,CAC/Bwa,IAAK,CACHnwB,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,YAGDkoB,M,kbC7GTG,G,qLACJjmB,MAAQ,CACNnL,SAAU,M,EAUZ8vB,aAAe,WAAO,IAAD,EACI,EAAKnlB,MAAMmB,YAA1BJ,EADW,EACXA,OAAQK,EADG,EACHA,GADG,EAEU,EAAKZ,MAA1BuR,EAFW,EAEXA,GAAI0K,EAFO,EAEPA,OAAQjhB,EAFD,EAECA,KAEdrE,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAC,GAAD,CACErI,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrC1E,MAAO,CAAEwQ,UAAW,IACpBxJ,MAAOjG,EAAQ,UACfP,QAAS,WACP9B,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBW,WAAYkL,EAAOlL,WACnBkc,KACAvW,OACAihB,aAGDrnB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,aAChB,EAAK2K,MAAMmB,YAAYE,SAASN,EAAOlL,YAFnC,+DAILJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,U,EAO1B0vB,gBAAkB,WAAO,IACfhkB,EAAO,EAAKpB,MAAMmB,YAAlBC,GACFjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAG9B5F,EAAU,CACdpG,EAAQ,aACRA,EAAQ,WACRA,EAAQ,QACRA,EAAQ,WACRA,EAAQ,eACRA,EAAQ,eAEJgvB,EAAO,CAAC,OAAQ,UAAW,OAAQ,UAAW,SAAU,cAC9D,EAAKnmB,MAAMif,2BACT,CACE1hB,YAIF,SAACiiB,GACC,EAAKjc,SAAS,CAAE/H,KAAM2qB,EAAK3G,S,2DAlEZ,IAAD,EACZzN,EAAE,SAAG3R,KAAKJ,MAAMkD,WAAW1C,MAAMkT,aAA/B,EAAG,EAAoC3B,GAC3CA,GACF3R,KAAKmD,SAAS,CAAEwO,S,mCAoEN,IAAD,SAGP3R,KAAKJ,MADPmB,YAAeJ,EAFN,EAEMA,OAAQK,EAFd,EAEcA,GAEnBjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9BujB,EAAQ,CACZ/e,QAASxQ,EAAQ,WACjBuQ,KAAMvQ,EAAQ,aACdwvB,KAAMxvB,EAAQ,QACd2lB,QAAS3lB,EAAQ,WACjByvB,OAAQzvB,EAAQ,eAChByQ,WAAYzQ,EAAQ,eAEtB,OACE,kBAAChB,EAAA,QAAD,KACE,kBAACwI,EAAA,EAAD,CACEvI,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3BkW,qBAAsB1M,EAAOjG,MAAM4S,kBACnCrJ,YAAalN,EAAQ,MACrByF,MAAOwD,KAAKI,MAAMuR,GAClBnT,aAAc,SAACmT,GAAD,OAAQ,EAAKxO,SAAS,CAAEwO,UAExC,kBAACpT,EAAA,EAAD,CACEvI,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3BkW,qBAAsB1M,EAAOjG,MAAM4S,kBACnCrJ,YAAalN,EAAQ,UACrByF,MAAOwD,KAAKI,MAAMic,OAClB7d,aAAc,SAAC6d,GAAD,OAAY,EAAKlZ,SAAS,CAAEkZ,cAE5C,kBAAC,GAAD,CACE3hB,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrC1E,MAAO,CAAEsV,eAAgB,IACzBtO,MACEgD,KAAKI,MAAMhF,KACPkrB,EAAMtmB,KAAKI,MAAMhF,MACjBrE,EAAQ,uBAEdP,QAASwJ,KAAKglB,kBAEfhlB,KAAK+kB,kB,+BAIF,IAAD,EAIH/kB,KAAKJ,MAJF,KAELkD,WAFK,EAGL/B,aAAmBJ,GAHd,EAGUK,GAHV,EAGcL,QAEb1L,EAAa+K,KAAKI,MAAlBnL,SAER,OACE,kBAAC8gB,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAME,cAChC3F,EAASA,UAEV,KAEH+K,KAAKujB,mB,GAxIK9iB,aA+INykB,gCAAmBmB,I,kbrC4BR1kB,GsC5KpB8kB,G,qLACJrmB,MAAQ,CACNnL,SAAU,KACVumB,QAAS,GACT5lB,OAAQD,KAAKC,U,gDAENtC,EAAKkJ,GACZ,OACE,kBAACzG,EAAA,QAAD,CAAMC,MAAOmtB,GAAOiD,KAClB,kBAAC,GAAD,KAAI9yB,GACJ,kBAAC,GAAD,KAAIkJ,M,qCAKM,IAAD,EACLqmB,EAAU7iB,KAAKJ,MAAfijB,MADK,EAEkC7iB,KAAKJ,MAAMmB,YAAlDC,EAFK,EAELA,GAAIL,EAFC,EAEDA,OAAQM,EAFP,EAEOA,SAAUia,EAFjB,EAEiBA,aAExBnkB,EAAU1D,EAAe,SAAC2M,KAAKJ,MAAMmB,YAAYC,SAAxB,EAAC,EAA2B+B,QAarD8Y,EAAe,SAACzgB,GAAD,OACnBvE,EAAY8J,EAAOlL,WAAR,MAAoBuL,OAApB,EAAoBA,EAAIlK,YAAaC,EAAS8rB,GAAO,SAACjW,GAAD,OAZ5C,SAAOxR,EAAMogB,GAAb,iBAAArmB,EAAAC,OAAA,kEAAAD,EAAA,MACOqE,EAAK,SAAU,CACxC0H,MAAOP,EAAOlL,WACd+lB,UACApgB,UAJkB,gBACZnG,EADY,EACZA,SAMRgM,EAASN,EAAOlL,YAChBylB,IACA2H,EAAM5tB,EAAU,KAAM,KAAM,CAAE3B,IAAK,mBATf,4DAalBwoB,CAAc1gB,EAAMwR,OAGxB,OACE,kBAAC7W,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,WAC5B,kBAAC,GAAD,CACE+G,MAAO,2BACPxG,QAAS,kBAAMqlB,EAAa,QAC5B7lB,MAAO,CAAE8R,OAAQ,MAEnB,kBAAC,GAAD,CACE9K,MAAO,oCACPxG,QAAS,kBAAMqlB,EAAa,aAC5B7lB,MAAO,CAAE8R,OAAQ,MAEnB,kBAAC,GAAD,CACE9K,MAAO,4CACPxG,QAAS,kBAAMqlB,EAAa,YAC5B7lB,MAAO,CAAE8R,OAAQ,S,mCAMX,IAAD,EAIP9H,KAAKJ,MADQoB,GAHN,EAET8B,WAFS,EAGT/B,YAAeC,IAGXjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,KACGiK,KAAKwkB,SAASztB,EAAQ,QAAtB,MAA+BiK,OAA/B,EAA+BA,EAAIulB,MACnCvmB,KAAKwkB,SAASztB,EAAQ,WAAtB,MAAkCiK,OAAlC,EAAkCA,EAAI0b,SACtC1c,KAAKwkB,SAASztB,EAAQ,eAAtB,MAAsCiK,OAAtC,EAAsCA,EAAIwlB,QAE1CxmB,KAAK+kB,kB,+BAIF,IAAD,EAIH/kB,KAAKJ,MAJF,KAELkD,WAFK,EAGL/B,aAAmBJ,GAHd,EAGUK,GAHV,EAGcL,QAEb1L,EAAa+K,KAAKI,MAAlBnL,SAER,OACE,kBAACc,EAAA,QAAD,CAAMC,MAAOA,GAAM2K,EAAOjG,OAAOmR,WAC/B,kBAAC9V,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAME,cAChC3F,EAASA,UAGZ+K,KAAKujB,mB,GA3FI9iB,aAmGf0iB,GAASxX,KAAWC,OAAO,CAC/Bwa,IAAK,CACHnwB,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,YAGD0oB,ItCiEW/kB,GsCjED8kB,GtCiEoB,SAAC7mB,GAAD,OAC3C,kBAAC3D,GAAa2F,SAAd,MACG,SAACC,GAAD,OAAa,kBAACF,GAAD,OAAoB/B,EAApB,CAA2BijB,MAAOhhB,U,skBuCvKpD,IAqPMshB,GAASxX,KAAWC,OAAO,CAC/Bwa,IAAK,CACHnwB,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,YAGD2oB,GA7PG,SAAC,GAUZ,IATL7jB,EASI,EATJA,WASI,IARJ/B,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GACAykB,EAKE,EALFA,OACAxkB,EAIE,EAJFA,SACAia,EAGE,EAHFA,aACUxgB,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG4BrN,mBAAS,MAHrC,WAGGT,EAHH,KAGa+W,EAHb,OAIkDtW,mBAAS,MAJ3D,WAIGkxB,EAJH,KAIwBC,EAJxB,OAKwBnxB,mBAAS,IALjC,WAKG2mB,EALH,KAKWyK,EALX,OAMoBpxB,mBAAS,QAN7B,WAMG0F,EANH,KAMSwqB,EANT,KAOJ1xB,EAAOgnB,GAEP,IAAMmJ,EAAc,SAAO/gB,GAAP,iBAAAnO,EAAAC,OAAA,kEAAAD,EAAA,MACSqE,EAAK,cAAe,CAC7C8J,OACAlI,KAAM,OACN8F,MAAOP,EAAOlL,cAJE,gBACVR,EADU,EACVA,SAKRimB,IACAja,EAASN,EAAOlL,YAChBoxB,EAAuB5xB,GARL,6DAWdkxB,EAAU,SAAOA,GAAP,iBAAAhxB,EAAAC,OAAA,kEAAAD,EAAA,MACaqE,EAAK,YAAa,CAC3C0H,MAAOP,EAAOlL,WACd4mB,SACA8J,UACA/qB,UALY,gBACNnG,EADM,EACNA,SAOR+W,EAAY/W,GACZgM,EAASN,EAAOlL,YATF,6DAYV+uB,EAAW,SAAClxB,EAAKkJ,EAAOhG,GAC5B,OACE,kBAACT,EAAA,QAAD,CAAMC,MAAOmtB,GAAOiD,KAClB,kBAAC,GAAD,CAAGre,QAAS,CAAErK,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAAOvK,GAC3D,kBAACiD,EAAA,EAAD,CACE6L,UAAW5L,EACXuR,QAAS,CAAErK,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDrH,QAASA,GAET,kBAAC,GAAD,KAAIgG,MAKN8G,EAAI,MAAGmiB,OAAH,EAAGA,EAAQ1F,MAAK,SAAChsB,GAAD,OAAOA,EAAEuP,QAAF,MAAWtC,OAAX,EAAWA,EAAIsC,SAEhD,OACE,kBAACyS,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACrC,kBAACnI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmJ,OAAQ,KAC9B,kBAAC/R,EAAA,QAAD,KACGd,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAC/BuvB,EAASztB,EAAQ,QAASjD,EAAY,MAACkN,OAAD,EAACA,EAAIsG,OAAO,kBACjDwf,EAAUltB,OAAOoH,EAAGsG,UAErBkd,EAASztB,EAAQ,aAAcjD,EAAY,MAACkN,OAAD,EAACA,EAAIyjB,YAAY,kBAC3DqC,EAAUltB,OAAOoH,EAAGyjB,eAGrBD,EAASztB,EAAQ,SAAUA,EAAQ,kBAEnCytB,EAASztB,EAAQ,WAAYjD,EAAY,MAACkN,OAAD,EAACA,EAAIuG,UAAU,kBACvDuf,EAAUltB,OAAOoH,EAAGuG,aAErBid,EACCztB,EAAQ,mBACRjD,EAAY,MAACkN,OAAD,EAACA,EAAI+lB,eACjB,kBAAMD,EAAUltB,OAAOoH,EAAG+lB,kBAG3BvC,EAASztB,EAAQ,SAAUA,EAAQ,wBAEpC,kBAAChB,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAC/C,kBAACO,EAAA,EAAD,CACEvI,MAAK,SAAOA,GAAM0E,GAAOvD,WAApB,IAA+BwH,KAAM,IAC1CsF,YAAalN,EAAQ,UACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAO6f,EACP7d,aAAc,SAAC6d,GAAD,OAAYyK,EAAUzK,MAGtC,kBAAC9lB,EAAA,EAAD,CACEP,MAAO,CACL8H,gBAAiBpD,EAAM8H,UACvBtE,QAAS,GACTD,aAAc,EACd7H,WAAY,IAEdI,QAAS,kBAAMovB,EAAiB,SAATxqB,EAAkB,UAAY,UAErD,kBAAC,GAAD,KACqBrE,EAAT,SAATqE,EAA0B,YAAuB,cAKxD,kBAACrF,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChByI,UAAW,KAGb,kBAAC,GAAD,CACE9L,MAAOA,EACPsC,MAAOjG,EAAQ,MACfP,QAAS,kBAAM2vB,GAAQ,IACvBnwB,MAAO,CAAEK,MAAO,MAElB,kBAAC,GAAD,CACEqE,MAAOA,EACPsC,MAAOjG,EAAQ,OACfP,QAAS,kBAAM2vB,GAAQ,IACvBnwB,MAAO,CAAEK,MAAO,WAOzB,MAACiN,OAAD,EAACA,EAAM0jB,WAaN,oCACE,kBAAC7oB,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,kBAAmB,IAC5B,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,SAA3B,MAAsC4C,OAAtC,EAAsCA,EAAIsC,MAAa,IACtDvM,EAAQ,MAAO,IAChB,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,UACpB,MAAJkF,OAAA,EAAAA,EAAM0jB,YAAajwB,EAAQ,WALhC,KAOKA,EAAQ,iBAAD,MAAmBuM,OAAnB,EAAmBA,EAAM2jB,aAGpChyB,GACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,YAAa0Q,eAAgB,KACtDrW,IAzBP,kBAACc,EAAA,QAAD,KACE,kBAACoI,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,qBAEV6vB,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACElsB,MAAOA,EACPsC,MAAOjG,EAAQ,eACfP,QAAS,kBAAM6tB,EAAW,MAACrjB,OAAD,EAACA,EAAIsC,UAuBrC,kBAACvN,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,MAEvB,kBAACP,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBACnD,kBAAChI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,UAGb,kBAAChB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBY,KAAM,IAGR,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,UAEX,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,aA5HjB,MAgIG0uB,OAhIH,EAgIGA,EAAQnoB,KAAI,SAACgG,EAAMzP,GAClB,OACE,kBAACkC,EAAA,QAAD,CACEzC,IAAG,IAAMO,EACTmC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBC,WAAY,SACZkpB,gBAAiB,GACjBtT,kBAAmB,GACnBuT,kBAAmB,UAGrB,kBAACpxB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,GAAD,KAAI2E,EAAKA,OAEX,kBAACvN,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBY,KAAM,IAGR,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC3BqN,EAAK0jB,UACJ,kBAAC,GAAD,KAAI1jB,EAAK0jB,WAET,kBAACzwB,EAAA,EAAD,CAAkBC,QAAS,kBAAM6tB,EAAY/gB,EAAKA,QAChD,kBAAC,GAAD,KAAIvM,EAAQ,YAGfuM,EAAK0jB,aAAL,MAAmBhmB,OAAnB,EAAmBA,EAAItK,MACtB,kBAACH,EAAA,EAAD,CACEC,QAAS,kBACPsM,EAAWoC,SAAS,eAAgB,CAClC9J,KAAM,OACNkI,KAAMA,EAAKA,SAIf,kBAAC4J,GAAA,EAAD,CAAQxW,KAAK,OAAOE,MAAO8D,EAAME,YAAajE,KAAM,MAEpD,MAGN,kBAACwH,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB0I,EAAK2jB,iBAOhB,kBAAClxB,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,QC9Md8wB,GAxCE,SAACxnB,GAAW,IAAD,EACpB7I,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAD5B,EAGJrN,mBAAS,QAHL,WAGnB2vB,EAHmB,KAGdY,EAHc,KAK1B,OACE,kBAAClwB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,GAAD,CACEymB,KAAM,CACJ,CACEpoB,MAAOjG,EAAQ,YACfmnB,SAAkB,SAARmH,EACV7uB,QAAS,kBAAMyvB,EAAO,UAExB,CACEjpB,MAAOjG,EAAQ,iBACfmnB,SAAkB,cAARmH,EACV7uB,QAAS,kBAAMyvB,EAAO,eAGxB,CACEjpB,MAAOjG,EAAQ,cACfmnB,SAAkB,WAARmH,EACV7uB,QAAS,kBAAMyvB,EAAO,YAExB,CACEjpB,MAAOjG,EAAQ,cACfmnB,SAAkB,WAARmH,EACV7uB,QAAS,kBAAMyvB,EAAO,eAKnB,SAARZ,GAAkB,kBAAC,GAASzlB,GACpB,cAARylB,GAAuB,kBAAC,GAAczlB,GAC9B,WAARylB,GAAoB,kBAAC,GAAWzlB,GACxB,WAARylB,GAAoB,kBAAC,GAAWzlB,KCyNxBynB,GAvPO,SAAC,GAWhB,IAVLvkB,EAUI,EAVJA,WACA/B,EASI,EATJA,YASI,IARJA,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GACAykB,EAKE,EALFA,OACAxkB,EAIE,EAJFA,SACAia,EAGE,EAHFA,aACUxgB,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG4BrN,mBAAS,MAHrC,WAGGT,EAHH,KAGa+W,EAHb,OAIkDtW,mBAAS,MAJ3D,WAIGkxB,EAJH,KAIwBC,EAJxB,OAK0BnxB,mBAAS,MALnC,WAKG6R,EALH,KAKY+f,EALZ,OAM0B5xB,mBAAS,IANnC,WAMG8lB,EANH,KAMYmK,EANZ,OAOwBjwB,mBAASC,KAAKC,UAPtC,WAOGA,EAPH,KAOWC,EAPX,KASJ3B,EAAOgnB,GAEP,IAAMmJ,EAAc,SAAO/gB,GAAP,iBAAAnO,EAAAC,OAAA,kEAAAD,EAAA,MACSqE,EAAK,cAAe,CAC7C8J,OACAlI,KAAM,gBACN8F,MAAOP,EAAOlL,cAJE,gBACVR,EADU,EACVA,SAKRimB,IACAja,EAASN,EAAOlL,YAChBoxB,EAAuB5xB,GARL,6DAWdqO,EAAI,MAAGmiB,OAAH,EAAGA,EAAQ1F,MAAK,SAAChsB,GAAD,OAAOA,EAAEuP,QAAF,MAAWtC,OAAX,EAAWA,EAAIsC,SAehD,OACE,kBAACyS,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,MACpC,MAACoF,OAAD,EAACA,EAAMikB,oBAYN,oCACE,kBAACppB,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,sBAAuB,IAChC,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,SAA3B,MAAsC4C,OAAtC,EAAsCA,EAAIsC,MAAa,IACtDvM,EAAQ,MAAO,IAChB,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,UACpB,MAAJkF,OAAA,EAAAA,EAAMikB,qBAAsBxwB,EAAQ,WALzC,IAOI,IACDA,EACC,qBADM,MAENuM,OAFM,EAENA,EAAM8Y,mBAFA,MAGN9Y,OAHM,EAGNA,EAAMkkB,sBAIV,kBAACrpB,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,YAAa4L,UAAW,KACjDzP,EAAQ,sBAAuB,IAChC,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,SAA3B,MAAsCkF,OAAtC,EAAsCA,EAAMiE,SAAgB,IAC3DxQ,EAAQ,uBAGV9B,GACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,YAAa0Q,eAAgB,KACtDrW,GAIL,kBAACsJ,EAAA,EAAD,CACE0F,YAAY,IACZoJ,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAO+K,EACP/I,aAAc,SAACzK,GAAD,OAAOuzB,EAAWvzB,IAChCiC,MAAOA,GAAM0E,GAAOvD,YAGtB,kBAAC,GAAD,CACE4J,YAAaA,EACbya,QAASA,EACT8J,gBAAiB,SAACvxB,GAAD,OAAO4xB,EAAW5xB,IACnC6B,OAAQA,EACR2vB,eAAgB,SAACxxB,GAAD,OAAO8B,EAAU9B,MAGnC,kBAAC,GAAD,CAAQiJ,MAAOjG,EAAQ,OAAQP,QAvExB,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACcqE,EAAK,aAAc,CAC5C/D,WAAYkL,EAAOlL,WACnB4mB,OAAQ9U,EACRiU,aAJW,gBACLvmB,EADK,EACLA,SAKRgM,EAASN,EAAOlL,YAChBuW,EAAY/W,GACZimB,IACAyK,EAAW,IACX9vB,EAAUF,KAAKC,UAVF,gEAgBT,kBAACG,EAAA,QAAD,KACE,kBAACoI,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,yBAEV6vB,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACE5pB,MAAOjG,EAAQ,eACfP,QAAS,kBAAM6tB,EAAW,MAACrjB,OAAD,EAACA,EAAIsC,UAoDrC,kBAACvN,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,MAEvB,kBAACP,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBACnD,kBAAChI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,UAGb,kBAAChB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBY,KAAM,IAGR,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,UAEX,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,cAhFjB,MAoFG0uB,OApFH,EAoFGA,EAAQnoB,KAAI,SAACgG,EAAMzP,GAClB,OACE,kBAACkC,EAAA,QAAD,CACEzC,IAAG,IAAMO,EACTmC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBC,WAAY,SACZkpB,gBAAiB,GACjBtT,kBAAmB,GACnBuT,kBAAmB,UAGrB,kBAACpxB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB0I,EAAKA,OAEnD,kBAACvN,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBY,KAAM,IAGR,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC3BqN,EAAKikB,mBACJ,kBAACppB,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB0I,EAAKikB,oBAGR,kBAAChxB,EAAA,EAAD,CAAkBC,QAAS,kBAAM6tB,EAAY/gB,EAAKA,QAChD,kBAAC,GAAD,KAAIvM,EAAQ,YAGfuM,EAAKikB,sBAAL,MAA4BvmB,OAA5B,EAA4BA,EAAItK,MAC/B,kBAACH,EAAA,EAAD,CACEC,QAAS,kBACPsM,EAAWoC,SAAS,eAAgB,CAClC9J,KAAM,gBACNkI,KAAMA,EAAKA,SAIf,kBAAC4J,GAAA,EAAD,CAAQxW,KAAK,OAAOE,MAAO8D,EAAME,YAAajE,KAAM,MAEpD,MAGN,kBAACwH,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB0I,EAAKiE,cAMzD,kBAACxR,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBACnD,kBAAChI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,UAGb,kBAAChB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBY,KAAM,IAGR,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,WAEX,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,qBA1JjB,MA8JG0uB,OA9JH,EA8JGA,EAAQnoB,KAAI,SAACgG,EAAMzP,GAClB,OACE,kBAACkC,EAAA,QAAD,CACEzC,IAAG,IAAMO,EACTmC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBC,WAAY,SACZkpB,gBAAiB,GACjBtT,kBAAmB,GACnBuT,kBAAmB,UAGrB,kBAACpxB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB0I,EAAKA,OAEnD,kBAACvN,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBY,KAAM,IAGR,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,KAAIqN,EAAKmkB,oBAAT,MAGF,kBAACtpB,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAA5B,SACI0I,EAAK8Y,yBAOjB,kBAACrmB,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,mBCnP7BoxB,KAAUC,uCACRD,KAAUC,uCAAsC,GAElD,IAQMC,GAAU,SAAOt0B,GAAP,eAAA6B,EAAAC,OAAA,2EAAAD,EAAA,MAEQ0yB,KAAaC,QAAQx0B,IAF7B,UAGE,QADRkJ,EAFM,iDAIHA,GAJG,qCAOHzH,GAPG,uFAWLA,GAXK,kEA4EDgzB,GA7DC,SAAC,GAA2C,IAAzC5a,EAAwC,EAAxCA,GAAInQ,EAAoC,EAApCA,MAAOX,EAA6B,EAA7BA,SAAU2rB,EAAmB,EAAnBA,aAChCttB,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SADO,EAGzBhF,oBAAS,GAHgB,WAGlDuyB,EAHkD,KAGxCC,EAHwC,OAI3BxyB,oBAAS,GAJkB,WAIlDyyB,EAJkD,KAIzClN,EAJyC,KAgBzD,OAVA5mB,qBAAU,YACR,WAAC,QAAAc,EAAAC,OAAA,kEAAAD,EAAA,MAC0ByyB,GAAQ,YAAYza,IAD9C,YAEoBpY,KADbqzB,EADP,SAGGF,EAA2B,SAAfE,GAEdnN,GAAW,GALZ,4DAAD,KAOC,IAGD,kBAACllB,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiBxD,EAAWI,EAAMsS,SAClClF,OAAQ,GACR5J,QAAS,GACTD,aAAc,GACd5H,MAC0B,kBAAjB2xB,EACHA,EACAA,EAAe,KAGvB,kBAACzxB,EAAA,EAAD,CACEC,QAAS,WArDC,IAAOlD,EAAKkJ,EAsDpB6rB,KAAgBC,SAChBJ,GAAaD,GAvDE30B,EAwDL,YAAY6Z,EAxDF3Q,EAwDQ5C,QAAQquB,GAxD5B,EAAA9yB,EAAAC,OAAA,2EAAAD,EAAA,MAER0yB,KAAaU,QAAQj1B,EAAKkJ,IAFlB,sHA0DVxG,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBC,WAAY,WAGd,kBAAC,GAAD,CAAG0M,MAAI,GAAE1N,GACT,kBAAC,KAAD,CACEtG,KAAMuxB,EAAW,UAAY,YAC7BrxB,MAAO8D,EAAME,eAIjB,kBAAC7E,EAAA,QAAD,CACEyyB,SAAU,SAAC3G,GAAW,IAAD,EACWA,EAAM1d,YAAYskB,OAD7B,EACb10B,EADa,EACV20B,EADU,EACPryB,MADO,EACAC,SAKpB2xB,IAAaE,GAAW9rB,K,GC7EP2F,IAAWzI,IAAI,UAAjCjD,G,GAAAA,OA4POqyB,I,GA5PCtyB,MAMU,SAAC,GAQpB,IAAD,MAPJyM,EAOI,EAPJA,WAOI,IANJ/B,YACEJ,EAKE,EALFA,OACAK,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACUvG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAE4BrN,mBAAS,MAFrC,WAEGT,EAFH,KAEa+W,EAFb,OAG0BtW,oBAAS,GAHnC,WAGGyyB,EAHH,KAGYlN,EAHZ,OAKwBvlB,mBAAS,IALjC,WAKGkzB,EALH,KAKWC,EALX,KAMIC,EAAiDF,EAAjDE,QAASnZ,EAAwCiZ,EAAxCjZ,IAAKoZ,EAAmCH,EAAnCG,QAASC,EAA0BJ,EAA1BI,MAAOC,EAAmBL,EAAnBK,eAWhCC,GATiCpK,2BAA/BD,2BAEW3iB,IAAM6Q,WAAW9Q,IAOlB,0BAAA9G,EAAAC,OAAA,uDAChB6lB,GAAW,GADK,WAAA9lB,EAAA,MAGKoE,EAAI,gBAAgBoH,EAAOlL,aAHhC,OAGVmzB,EAHU,OAIhB3N,GAAW,GACX4N,EAAUD,GALM,8DA6BlB10B,EAAOg1B,GAEP,IAsDMC,EAAkB,SAACxO,GACvB,OAAO,kBAAC,GAAD,CAAMhkB,KAAM,GAAImM,WAAYA,EAAY6X,KAAMA,KAcvD,OACE,kBAAC5kB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC3BkyB,GAAW,kBAAC/a,GAAA,EAAD,MACXnY,GAAY,kBAAC,GAAD,KAAIA,IAEnB,kBAAC8gB,GAAA,EAAD,CACEC,sBAAuB,CACrB1f,OAAwB,QAAhBwJ,UAASC,GAAezJ,QAASvB,GAE3CiB,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KAE3B,kBAAC,GAAD,CACElB,MAAOjG,EAAQ,6BACfixB,aAAc,MACd7a,GAAG,eAEH,kBAAC,GAAD,CACE3W,QA9Gc,4BAAArB,EAAAC,OAAA,uDACtB6lB,GAAW,GADW,WAAA9lB,EAAA,MAEKqE,EAAK,cAAe,CAC7C0H,MAAOP,EAAOlL,cAHM,gBAEdR,EAFc,EAEdA,SAGRgmB,GAAW,GACXjP,EAAY/W,GACZi0B,IAPsB,6DA+GdlsB,MAAOjG,EAAQ,4BAGlB,MAACiK,GAAD,SAACA,EAAIoG,WAAL,EAAC,EAAU+F,IAGV,kBAACpX,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO6Q,SAAU,SAC7C,kBAAC,GAAD,CACE9J,MAAOjG,EAAQ,iBACfixB,aAAc,MACd7a,GAAG,UAEH,kBAAC,GAAD,KACGpW,EACC,YADM,MAENiK,GAFM,SAENA,EAAIoG,WAFE,EAEN,EAAUgiB,QACVzzB,KAAKoV,MAjKF,KAiKU,MAAF/J,GAAA,SAAAA,EAAIoG,WAAJ,IAAUgiB,YAGzB,kBAAC,GAAD,CAAG1e,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,iBAbb,MAeG+xB,OAfH,EAeGA,EAASxrB,IAAI6rB,GACd,kBAAC,GAAD,CAAGze,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,aAjBb,MAmBG4Y,OAnBH,EAmBGA,EAAKrS,IAAI6rB,GACV,kBAAC,GAAD,CAAGze,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,iBArBb,MAuBGgyB,OAvBH,EAuBGA,EAASzrB,IAAI6rB,GACd,kBAAC,GAAD,CAAGze,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,eAzBb,MA2BGiyB,OA3BH,EA2BGA,EAAO1rB,IAAI6rB,GACZ,kBAAC,GAAD,CAAGze,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,mBA7Bb,MA+BGkyB,OA/BH,EA+BGA,EAAgB3rB,KApEM,SAACqd,GAClC,OACE,kBAAC5kB,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBACnD,kBAAC,GAAD,CAAMpH,KAAM,GAAImM,WAAYA,EAAY6X,KAAMA,IAC9C,kBAAC,GAAD,KACGA,EAAK0O,gBADR,IAC0BtyB,EAAQ,oBA3HlB,KA6LT,MAAFiK,OAAA,EAAAA,EAAIsoB,YA5LO,KA6LP,MAAFtoB,OAAA,EAAAA,EAAIsoB,YACH,kBAAC,GAAD,CACEtsB,MAAOjG,EAAQ,oBACfixB,aAAc,MACd7a,GAAG,oBAEH,kBAACpX,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf6Q,SAAU,OACVN,UAAW,KAjHP,CACtB,CACEpL,KAAM,QACNmuB,UAAW,IACXC,YAAa,IACbC,UAAW,KAEb,CACEruB,KAAM,SACNmuB,UAAW,IACXC,YAAa,IACbC,UAAW,KAEb,CACEruB,KAAM,MACNmuB,UAAW,IACXC,YAAa,IACbC,UAAW,KAEb,CACEruB,KAAM,OACNmuB,UAAW,IACXC,YAAa,KACbC,UAAW,MA6FoBnsB,KAAI,SAACosB,GAAQ,IAAD,EAC3B,OACE,kBAAC3zB,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,IAAKynB,iBAAkB,KAC3C,kBAAC,GAAD,CAAGpT,MAAI,GAAE3T,EAAQ,KAAK2yB,EAAGtuB,OACzB,kBAAC,GAAD,KAAIrE,EAAQ,mBAAoB2yB,EAAGH,YACnC,kBAAC,GAAD,KACGxyB,EAAQ,eADX,WAEGjD,EAAa41B,EAAGF,aAFnB,MAIA,kBAAC,GAAD,KACGzyB,EAAQ,aADX,WAEGjD,EAAa41B,EAAGD,WAFnB,OAKG,MAAFzoB,GAAA,SAAAA,EAAIoG,WAAJ,IAAU+U,iBAAkBuN,EAAGtuB,KAC9B,kBAAC,GAAD,CAAGsP,MAAI,GAAE3T,EAAQ,yBAEjB,kBAAC,GAAD,CACEiG,MAAOjG,EAAQ,OACfP,QAAS,kBA/KJ,SAAO4E,GAAP,iBAAAjG,EAAAC,OAAA,uDAC/B6lB,GAAW,GADoB,WAAA9lB,EAAA,MAEJqE,EAAK,uBAAwB,CACtD0H,MAAOP,EAAOlL,WACd2F,UAJ6B,gBAEvBnG,EAFuB,EAEvBA,SAIRgmB,GAAW,GACXjP,EAAY/W,GACZgM,EAASN,EAAOlL,YARe,4DA+KUk0B,CAAyBD,EAAGtuB,eAU7D,kBAAC,GAAD,CACE4sB,aAAc,MACd7a,GAAG,wBACHnQ,MAAOjG,EAAQ,SAEf,kBAAC,KAAD,CAAUf,MAAO,CAAEkB,KAAM,CAAEN,MAAO8D,EAAME,eACrC7D,EAAQ,2BAIb,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,OA1FzB,kBAAC,GAAD,KAAIS,EAAQ,iBCpIP6yB,GAjCG,SAAChqB,GAAW,IAAD,EACrB7I,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAEhDqiB,EAAO,CACX,CACE9xB,IAAK,gBACL0J,MAAOjG,EAAQ,qBACfM,UAAWgwB,IAGb,CACE/zB,IAAK,oBACL0J,MAAOjG,EAAQ,yBACfM,UAAWsxB,KAbY,EAiBLjzB,mBAAS0vB,EAAK,GAAG9xB,KAjBZ,WAiBpB+xB,EAjBoB,KAiBfY,EAjBe,KAkBrBxlB,EAAY2kB,EAAKrF,MAAK,SAACuE,GAAD,OAAOA,EAAEhxB,MAAQ+xB,KAAKhuB,UAClD,OACE,kBAACtB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC8B,EAAcb,GAEf,kBAAC,GAAD,CACEwlB,KAAMA,EAAK9nB,KAAI,SAACgnB,GAAD,MAAQ,CACrBtnB,MAAOsnB,EAAEtnB,MACTkhB,SAAUmH,IAAQf,EAAEhxB,IACpBkD,QAAS,kBAAMyvB,EAAO3B,EAAEhxB,cCiBnBu2B,GA5CI,SAAC,GAUd,EATJ/mB,WASK,IAAD,IARJ/B,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GAEAC,GAIE,EALFwkB,OAKE,EAJFxkB,UAEUvG,GAER,EAHFwgB,aAGE,EAFFva,OAAUjG,OAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG4BrN,mBAAS,MAHrC,WAGGT,EAHH,KAGa+W,EAHb,OAIoBtW,mBAAS,IAJ7B,WAIGgB,EAJH,KAISqV,EAJT,KAeJ,OACE,kBAACgK,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACpCjJ,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAACsJ,EAAA,EAAD,CACE/B,MAAO9F,EACP8H,aAAcuN,EACd/V,MAAOA,GAAM0E,GAAOvD,UACpB8M,YAAY,OACZoJ,qBAAsB3S,EAAM4S,oBAE9B,kBAAC,GAAD,CACE9W,QApBiB,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACMqE,EAAK,aAAc,CAC5C9C,OACAwK,MAAOP,EAAOlL,cAHK,gBACbR,EADa,EACbA,SAIRgM,EAASN,EAAOlL,YAChBuW,EAAY/W,GANS,6DAqBjB+H,MAAOjG,EAAQ,iBACf2D,MAAOA,MC7BAovB,GAZJ,SAAC,GAAkB,IAAhBztB,EAAe,EAAfA,SACN3B,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SAElD,OACE,kBAACyD,EAAA,QAAD,CACEnI,MAAO,CAAEqI,SAAU,GAAID,WAAY,OAAQxH,MAAO8D,EAAME,cAEvDyB,IC4IQ0tB,GA7IM,SAAC,GAAgD,EAA9CjnB,WAA+C,IAAD,IAAlC/B,YAAeJ,EAAmB,EAAnBA,OAAQK,EAAW,EAAXA,GACnDjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADgC,EAGxCrN,mBAAS,CAAET,SAAU8B,EAAQ,aAHW,WAG7Dkd,EAH6D,KAGrD+V,EAHqD,OAItCt0B,oBAAS,GAJ6B,WAI7DyyB,EAJ6D,KAIpDlN,EAJoD,OAKpCvlB,mBAAS,MAL2B,WAK7DT,EAL6D,KAKnD+W,EALmD,KA2B9Die,EAAkB,0BAAA90B,EAAAC,OAAA,uDACtB6lB,GAAW,GADW,WAAA9lB,EAAA,MAEDoE,EAAI,sBAAsBoH,EAAOlL,aAFhC,OAEhBwe,EAFgB,OAGtB+V,EAAU/V,GACVgH,GAAW,GAJW,6DAOxB/mB,EAAO+1B,GAEP,IAAMC,EAAU,MAAGjW,GAAH,MAAGA,EAAQkW,YAAX,EAAGlW,EAAQkW,QACzB,SAAC3uB,EAAM4uB,GAAP,OAAmB5uB,KAAU4uB,EAAQvtB,WAGvC,OADAtH,QAAQ6H,IAAI8sB,GAEV,kBAACnU,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACpCiqB,GAAW,kBAAC/a,GAAA,EAAD,MACXnY,GAAY,kBAAC,GAAD,KAAIA,GAChBgf,EAAOhf,SACN,kBAAC,GAAD,KAAIgf,EAAOhf,UAEX,kBAACc,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CAAMC,MAAO,CAAEmQ,aAAc,KAC3B,kBAAC,GAAD,KAAKpP,EAAQ,cAEdmzB,GACC,kBAAC,GAAD,CACEltB,MAAOjG,EAAQ,kBACfP,QA/CoB,4BAAArB,EAAAC,OAAA,uDAC9B6lB,GAAW,GADmB,WAAA9lB,EAAA,MAEHqE,EAAK,sBAAuB,CACrD0H,MAAOP,EAAOlL,cAHc,gBAEtBR,EAFsB,EAEtBA,SAGR+W,EAAY/W,GACZg1B,IACAhP,GAAW,GAPmB,+DAwC1B,MAUGhH,OAVH,EAUGA,EAAQ3W,KAAI,SAAC8sB,EAASv2B,GAAW,IAAD,IACzBw2B,EACJD,EAAQtf,QAAU,IACXsf,EAAQtf,QADf,IAC0B/T,EAAQ,WAC9BqzB,EAAQtf,QAAU,KACfnV,KAAKwE,MAAMiwB,EAAQtf,QAAU,IADhC,IACuC/T,EAAQ,WAC5CpB,KAAKwE,MAAMiwB,EAAQtf,QAAU,MAFhC,IAEyC/T,EAAQ,SAEjDuzB,EACJ,kBAAC,GAAD,CACE9zB,QAAS,kBAnDM,SAAO3C,GAAP,iBAAAsB,EAAAC,OAAA,uDAC3B6lB,GAAW,GADgB,WAAA9lB,EAAA,MAEAqE,EAAK,mBAAoB,CAClD0H,MAAOP,EAAOlL,WACd5B,WAJyB,gBAEnBoB,EAFmB,EAEnBA,SAIR+W,EAAY/W,GACZg1B,IACAhP,GAAW,GARgB,4DAmDAsP,CAAqB12B,IACpCmJ,MAAOjG,EAAQ,WAGnB,OACE,kBAAC,KAAD,CAAMf,MAAO,CAAEM,OAAQ,KACrB,kBAAC,KAAD,CAAKK,KAAM,GACT,kBAAC,GAAD,KACGI,EACCqzB,EAAQI,KAAO,UACfJ,EAAQK,iBAAR,MAA0BzpB,GAA1B,SAA0BA,EAAIoG,WAA9B,EAA0B,EAAUgiB,UACnC,IAJL,MAKMiB,IAGR,kBAAC,KAAD,KACGD,EAAQvtB,QACPutB,EAAQvtB,QAAQ6tB,QACdN,EAAQvtB,QAAQ8tB,YACd,kBAAC,GAAD,eAEA,kBAAC50B,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,sBAIJ,kBAACF,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,KACGm0B,EAAQvtB,QAAQ+tB,WADnB,IAEGR,EAAQK,iBAAR,MAA0BzpB,GAA1B,SAA0BA,EAAIoG,WAA9B,EAA0B,EAAUgiB,WAIzC,MAGN,kBAAC,KAAD,CAAKpzB,MAAO,CAAEgI,WAAY,aACvBosB,EAAQvtB,QACPutB,EAAQvtB,QAAQ6tB,QACdN,EAAQvtB,QAAQ8tB,YAAc,KAC5B,kBAAC50B,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC3Bq0B,GAIL,kBAAC,KAAD,CACEt0B,MAAO,CAAEI,WAAY,IACrBmN,MAAO9K,IAAO2xB,EAAQvtB,QAAQguB,WAC3B7Y,IAAIoY,EAAQtf,QAAS,WACrBlP,KAAKnD,MAAU,WAClBwS,WAAY,CACVnN,gBAAiB6C,EAAOjG,MAAM8H,WAEhC0I,cAAe,CAAEtU,MAAO+J,EAAOjG,MAAMiI,eACrCa,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,IAAK,KACvBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAI9B,kBAAC7N,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAAUq0B,SAQtD,kBAACv0B,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,uBCzHH0L,IAAWzI,IAAI,UAAjCjD,G,GAAAA,OAwgBOw0B,I,GAxgBCz0B,MAKK,SAAC,GAOf,IAAD,wBANJ0K,YACEJ,EAKE,EALFA,OACAK,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACUvG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAE4BrN,mBAAS,MAFrC,WAEGT,EAFH,KAEa+W,EAFb,OAG0BtW,oBAAS,GAHnC,WAGGyyB,EAHH,KAGYlN,EAHZ,OAI4BvlB,mBAAS,IAJrC,WAIGq1B,EAJH,KAIaC,EAJb,OAKoBt1B,mBAAS,IAL7B,WAKG0R,EALH,KAKS6jB,EALT,OAM4Bv1B,mBAAS,IANrC,WAMGw1B,EANH,KAMaC,GANb,QAO4Bz1B,mBAAS,IAPrC,6BAQ0BA,oBAAW,MAAFsL,GAAA,SAAAA,EAAIoG,WAAJ,IAAUgkB,UAAW,KARxD,aAQGA,GARH,MAQYC,GARZ,SAS0B31B,oBAAW,MAAFsL,GAAA,SAAAA,EAAIoG,WAAJ,IAAUnK,UAAW,IATxD,aASGA,GATH,MASYquB,GATZ,SAUoB51B,oBAAW,MAAFsL,GAAA,SAAAA,EAAIoG,WAAJ,IAAU1Q,OAAQ,IAV/C,aAUGA,GAVH,MAUSqV,GAVT,SAWsBrW,oBAAW,MAAFsL,GAAA,SAAAA,EAAIoG,WAAJ,IAAUuL,QAAS,IAXlD,aAWGA,GAXH,MAWU4Y,GAXV,SAY8B71B,oBAAS,GAZvC,aAYG81B,GAZH,MAYcC,GAZd,SAawB/1B,mBAAS,IAbjC,aAaG2mB,GAbH,MAaWyK,GAbX,MAcIjI,GAA+BC,2BAA/BD,2BAEF7nB,GAAakF,IAAM6Q,WAAW9Q,IAE9ByvB,GAAU,4BAAAv2B,EAAAC,OAAA,uDACd6lB,GAAW,GADG,WAAA9lB,EAAA,MAGKoE,EAAI,cAAD,MAAcyH,GAAd,SAAcA,EAAIoG,WAAlB,EAAc,EAAU1Q,QAHhC,OAGR0Q,EAHQ,OAId6T,GAAW,GACXgQ,EAAQ7jB,GALM,6DAQVukB,GAAiB,4BAAAx2B,EAAAC,OAAA,uDACrB6lB,GAAW,GADU,WAAA9lB,EAAA,MAEMoE,EAAI,qBAAqBoH,EAAOlL,aAFtC,gBAEbs1B,EAFa,EAEbA,SACR9P,GAAW,GACX+P,EAAYD,GAJS,6DAOjBa,GAAqB,SAAOze,EAAI0e,GAAX,iBAAA12B,EAAAC,OAAA,uDACzB6lB,GAAW,GADc,WAAA9lB,EAAA,MAEEqE,EAAK,iBAAkB,CAChD0H,MAAOP,EAAOlL,WACd0X,KACA0e,cALuB,gBAEjB52B,EAFiB,EAEjBA,SAKRgmB,GAAW,GACXjP,EAAY/W,GACZ02B,KATyB,6DAoCrBG,GAAsB,SAAOC,GAAP,iBAAA52B,EAAAC,OAAA,uDAC1B6lB,GAAW,GADe,WAAA9lB,EAAA,MAECqE,EAAK,kBAAmB,CACjD0H,MAAOP,EAAOlL,WACd4mB,UACA0P,WACAP,gBANwB,gBAElBv2B,EAFkB,EAElBA,SAMRgM,EAASN,EAAOlL,YAChBwlB,GAAW,GACXjP,EAAY/W,GAVc,6DAatB+2B,GAAgB,4BAAA72B,EAAAC,OAAA,uDACpB6lB,GAAW,GADS,WAAA9lB,EAAA,MAEOqE,EAAK,YAAa,CAC3C0H,MAAOP,EAAOlL,cAHI,gBAEZR,EAFY,EAEZA,SAGRgmB,GAAW,GACXjP,EAAY/W,GANQ,6DAoBhBg3B,GAAe,SAAC3C,GAAD,OACnBvyB,EAhHoB,IAiHlBuyB,EACI,gBApHmB,IAqHnBA,EACA,qBArHc,IAsHdA,EACA,gBACA,oBAGF4C,GAAiB,4BAAA/2B,EAAAC,OAAA,uDACrB6lB,GAAW,GADU,WAAA9lB,EAAA,MAEMqE,EAAK,aAAc,CAC5C0H,MAAOP,EAAOlL,cAHK,gBAEbR,EAFa,EAEbA,SAGRgmB,GAAW,GACXjP,EAAY/W,GACZgM,EAASN,EAAOlL,YAPK,6DAuBvBvB,EAAOy3B,IACPz3B,EAAOw3B,IAEP,IAAMS,GAAa,SAAC/O,GAElB,IAAMjgB,EAAU,CACdpG,EAAQ,mBACRA,EAAQ,iBACRA,EAAQ,sBACRA,EAAQ,kBAEVoG,EAAQK,KAAKzG,EAAQ,WACrB,IACMmoB,EAAoB/hB,EAAQtD,OAAS,EAE3CglB,GACE,CACE1hB,UACA+hB,oBACAC,4BAP2BpqB,IAS7B,SAACqqB,GACKA,EAAc,GAnCA,SAAOhC,EAAQtiB,GAAf,UAAA3F,EAAAC,OAAA,uDACtB6lB,GAAW,GADW,WAAA9lB,EAAA,MAEKqE,EAAK,cAAe,CAC7C0H,MAAOP,EAAOlL,WACd2nB,SACAtiB,UALoB,gBAEd7F,EAFc,EAEdA,SAKRgmB,GAAW,GACXjP,EAAY/W,GACZgM,EAASN,EAAOlL,YAChBi2B,KAVsB,4DAoChBU,CAAgBhP,EAAQgC,EAAc,OAMxCiN,GAAqB,0BAAAl3B,EAAAC,OAAA,mDACL,QAAhB0K,UAASC,IAAgC,YAAhBD,UAASC,GADb,kCAAA5K,EAAA,MAEEwiB,IAAqBA,MAFvB,gBAGR,YAHQ,EAEfE,QAENgL,MAAM9rB,EAAQ,2BAJO,6DAiC3B,OACE,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC3BkyB,GAAW,kBAAC/a,GAAA,EAAD,MACXnY,GAAY,kBAAC,GAAD,KAAIA,IAEnB,kBAAC8gB,GAAA,EAAD,CACEC,sBAAuB,CACrB1f,OAAwB,QAAhBwJ,UAASC,GAAezJ,QAASvB,GAE3CiB,MAAO,CAAE2I,KAAM,EAAGT,QAAS,MAE1B,MAAC8C,GAAD,SAACA,EAAIoG,WAAL,EAAC,EAAU+F,IAGV,kBAACpX,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO6Q,SAAU,SAC7C,kBAAC,GAAD,CACE9J,MAAOjG,EAAQ,eACfixB,aAAc,MACd7a,GAAG,gBAEA,MAAFnM,GAAA,SAAAA,EAAIoG,WAAJ,IAAUnK,UACT,kBAAC,KAAD,CAAcjH,MAAO,CAAEkB,KAAM,CAAEN,MAAO8D,EAAME,eAA5C,MACGoG,GADH,SACGA,EAAIoG,WADP,EACG,EAAUnK,UAKjB,kBAAC,GAAD,CACED,MAAOjG,EAAQ,cACfixB,aAAc,IACd7a,GAAG,sBAEH,kBAAC,GAAD,KAAIpW,EAAQ,aAAck1B,GAAY,MAACjrB,OAAD,EAACA,EAAIsoB,eAI1C,MAAFtoB,OAAA,EAAAA,EAAIsoB,YAtPY,EAuPf,kBAAC,GAAD,CACEtsB,MAAOjG,EAAQ,yBACfixB,aAAc,IACd7a,GAAG,sBAEF4d,EAASlxB,OAAS,EACjBkxB,EAASztB,KAAI,SAAC4X,GAAa,IAAD,EACxB,OACE,kBAACnf,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,kBAGlB,kBAAC,GAAD,cAAImX,EAAQyF,WAAZ,EAAI,EAAcjkB,MAClB,kBAACX,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,CACE+G,MAAOjG,EAAQ,UACfP,QAAS,kBAAMo1B,GAAmB1W,EAAQ/H,IAAI,MAEhD,kBAAC,GAAD,CACEnQ,MAAOjG,EAAQ,WACfP,QAAS,kBACPo1B,GAAmB1W,EAAQ/H,IAAI,WAQ3C,kBAAC,GAAD,KAAIpW,EAAQ,oBAGd,MAGD,MAAFiK,OAAA,EAAAA,EAAIsoB,YA5RY,EA6Rf,kBAAC,GAAD,CACEtsB,MAAOjG,EAAQ,gBACfixB,aAAc,IACd7a,GAAG,kBAEH,kBAACpX,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAACsI,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAOmtB,GAAOzoB,GAAOvD,UACrBqF,MAAO0uB,EACP1sB,aAAc2sB,GACdlnB,YAAalN,EAAQ,UAEvB,kBAAC,GAAD,CACEiG,MAAOjG,EAAQ,UACfP,QAtOK,4BAAArB,EAAAC,OAAA,uDACrB6lB,GAAW,GADU,WAAA9lB,EAAA,MAEMqE,EAAK,aAAc,CAC5C0H,MAAOP,EAAOlL,WACdiB,KAAMw0B,KAJa,gBAEbj2B,EAFa,EAEbA,SAIRgmB,GAAW,GACXjP,EAAY/W,GAPS,6DAuOLe,MAAO,CAAE2I,KAAM,EAAG2M,eAAgB,GAAIlV,WAAY,QAItD,KAIF,kBAAC,GAAD,CACE4G,MAAOjG,EAAQ,YACfixB,aAAc,IACd7a,GAAG,wBAEH,kBAAC,GAAD,KACGpW,EAAQ,aADX,WAC4BjD,GAAe,MAAFkN,GAAA,SAAAA,EAAIoG,WAAJ,IAAUE,OAAQ,GAD3D,MAGA,kBAAC,GAAD,KACGvQ,EAAQ,WADX,KACyBjD,GAAe,MAAFkN,GAAA,SAAAA,EAAIoG,WAAJ,IAAUG,UAAW,IAE3D,kBAACxR,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO6Q,SAAU,SAC7C,kBAACvI,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAOmtB,GAAOzoB,GAAOvD,UACrBqF,MAAO6f,GACP7d,aAAcsoB,GACd7iB,YAAalN,EAAQ,YAGvB,kBAAC,GAAD,CACEiG,MAAmBjG,EAAZy0B,GAAoB,UAAqB,QAChDh1B,QAAS,kBAAMi1B,IAAcD,KAC7Bx1B,MAAO,CAAE2I,KAAM,EAAG2M,eAAgB,GAAIlV,WAAY,MAGpD,kBAAC,GAAD,CACE4G,MAAOjG,EAAQ,MACfP,QAAS,kBAAMs1B,IAAoB,IACnC91B,MAAO,CAAE2I,KAAM,EAAG2M,eAAgB,GAAIlV,WAAY,MAjV9C,KAmVH,MAAF4K,OAAA,EAAAA,EAAIsoB,YAlVC,KAmVJ,MAAFtoB,OAAA,EAAAA,EAAIsoB,WACF,kBAAC,GAAD,CACEtsB,MAAOjG,EAAQ,OACfP,QAAS,kBAAMs1B,IAAoB,IACnC91B,MAAO,CAAE2I,KAAM,EAAG2M,eAAgB,GAAIlV,WAAY,MAElD,QAMP,MAAF4K,OAAA,EAAAA,EAAIsoB,YAjWY,GAkWf,kBAAC,GAAD,CACEtsB,MAAOjG,EAAQ,WACfixB,aAAa,MACb7a,GAAG,sBAHL,MAKG/F,GALH,SAKGA,EAAMklB,YALT,EAKG,EAAahvB,KAAI,SAACivB,GACjB,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAKv2B,MAAO,CAAE+H,eAAgB,WAC5B,kBAAC,GAAD,KAAIwuB,EAAO71B,OAGb,kBAAC,KAAD,CAAKV,MAAO,CAAE+H,eAAgB,WAC5B,kBAAC,GAAD,KAAIkuB,GAAaM,EAAOjD,aAG1B,kBAAC,KAAD,CACEtzB,MAAO,CACL+H,eAAgB,SAChBC,WAAY,aAGd,kBAACjI,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,SACzB,MAAF+K,OAAA,EAAAA,EAAIsoB,YAzXF,GA0XDiD,EAAOpf,MAAP,MAAcnM,OAAd,EAAcA,EAAImM,KAChB,kBAAC,GAAD,CACEnQ,MAAOjG,EAAQ,QACfP,QAAS,kBAvRlB,SAAO4mB,GAAP,iBAAAjoB,EAAAC,OAAA,uDACnB6lB,GAAW,GADQ,WAAA9lB,EAAA,MAEQqE,EAAK,WAAY,CAC1C0H,MAAOP,EAAOlL,WACd2nB,YAJiB,gBAEXnoB,EAFW,EAEXA,SAIRgmB,GAAW,GACXjP,EAAY/W,GACZy2B,KARmB,4DAuRwBc,CAAaD,EAAOpf,OA3X3C,KA8XK,MAAFnM,OAAA,EAAAA,EAAIsoB,YACH,kBAAC,GAAD,CACEtsB,MAAOjG,EAAQ,cACff,MAAO,CAAEI,WAAY,IACrBI,QAAS,kBAAM21B,GAAWI,EAAOpf,eAYhD,MAAFnM,OAAA,EAAAA,EAAIsoB,YAhZY,GAiZf,kBAAC,GAAD,CACEtsB,MAAOjG,EAAQ,eACfixB,aAAa,MACb7a,GAAG,yBAEH,kBAAC5W,EAAA,EAAD,CAAkBC,QA9NN,0BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MAClBk3B,MADkB,kCAAAl3B,EAAA,MAIHs3B,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfC,QAAQ,EACRC,QAAS,KATW,QAIlB7Y,EAJkB,QAYV8Y,WAEVxB,GACEtX,EAAO4Y,OAAP,cACkB5Y,EAAO7Y,KADzB,WACwC6Y,EAAO4Y,OAC3C5Y,EAAOne,KAjBO,gDAqBtBP,QAAQ6H,IAAR,MArBsB,kEA+NTuV,GACC,kBAACzc,EAAA,EAAD,CACEC,OAAQ,CACNL,IAAK6c,GAAMpV,SAAS,cAChBoV,GACAngB,EAAUC,YAAckgB,IAE9B3c,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,UAGb,kBAACxuB,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,WAIjB,kBAACnmB,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAOmtB,GAAOzoB,GAAOvD,UACrBqF,MAAO9F,GACP8H,aAAcuN,GACd9H,YAAalN,EAAQ,cAEvB,kBAAC,GAAD,CAAG2T,MAAI,GAAE3T,EAAQ,gBACjB,kBAACwH,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAO,CACLmtB,GAAOzoB,GAAOvD,UACd,CACEd,MAAO,OACPC,OAAQ,MAGZ02B,WAAW,EACXxwB,MAAO4uB,GACP5sB,aAAc6sB,KAEhB,kBAAC,GAAD,CAAG3gB,MAAI,GAAE3T,EAAQ,gBAEjB,kBAACwH,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAO,CACLmtB,GAAOzoB,GAAOvD,UACd,CACEd,MAAO,OACPC,OAAQ,MAGZ02B,WAAW,EACXxwB,MAAOS,GACPuB,aAAc8sB,KAGhB,kBAAC,GAAD,CACE90B,QAvZO,4BAAArB,EAAAC,OAAA,uDACrB6lB,GAAW,GADU,WAAA9lB,EAAA,MAEMqE,EAAK,aAAc,CAC5C0H,MAAOP,EAAOlL,WACd21B,WACAzY,SACA1V,WACAvG,WAPmB,gBAEbzB,EAFa,EAEbA,SAORgmB,GAAW,GACXjP,EAAY/W,GACZgM,EAASN,EAAOlL,YAXK,6DAwZPuH,MAAOjG,EAAQ,QACff,MAAO,CAAEwQ,UAAW,OAO1B,kBAACzQ,EAAA,QAAD,CAAMC,MAAO,CAAEsV,eAAgB,KAE3B,kBAAC,GAAD,CACEtO,MAAOjG,EAAQ,aACfP,QAAS,kBACPQ,GACED,EAAQ,cACRA,EAAQ,yBACR,CACE,CAAEG,KAAMH,EAAQ,MAAOP,QAASw1B,IAChC,CAAE90B,KAAMH,EAAQ,YAElB,CAAEzD,IAAK,kBAQjB,kBAACyC,EAAA,QAAD,CAAMC,MAAO,CAAEsV,eAAgB,KA1enB,KA2eP,MAAFtK,OAAA,EAAAA,EAAIsoB,YACH,kBAAC,GAAD,CACEtsB,MAAOjG,EAAQ,cACfP,QAAS,kBACPQ,GACED,EAAQ,cACRA,EAAQ,0BACR,CACE,CAAEG,KAAMH,EAAQ,MAAOP,QAAS01B,IAChC,CAAEh1B,KAAMH,EAAQ,YAElB,CAAEzD,IAAK,mBAOjB,kBAACyC,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,OAjSzB,kBAAC,GAAD,KAAIS,EAAQ,iB,skBC1OtB,I,GAC0BiL,IAAWzI,IAAI,UAAjClD,G,GAAAA,MAAOC,G,GAAAA,OACT22B,GAAO52B,GAAQ,IAAO,IAAM,IA8LnB62B,GAxLE,SAAC,GAUZ,EATJpqB,WASK,IAAD,gCARJ/B,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GAEAC,GAIE,EALFwkB,OAKE,EAJFxkB,UAEUvG,GAER,EAHFwgB,aAGE,EAFFva,OAAUjG,OAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9BoqB,EAAS,CACb,KACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KAGIC,EAAQ,CACZ,CACE12B,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUimB,MACnB1a,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUkmB,MACnB3a,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUmmB,MACnB5a,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUomB,MACnB7a,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUqmB,MACnB9a,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUsmB,MACnB/a,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUumB,MACnBhb,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUwmB,MACnBjb,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,iBACd6tB,MAAOuI,EAAO,GACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAUymB,MACnBlb,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,kBACd6tB,MAAOuI,EAAO,IACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAU0mB,OACnBnb,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,kBACd6tB,MAAOuI,EAAO,IACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAU2mB,OACnBpb,MAAOlf,EAAQ,MAEjB,CACEiD,KAAMK,EAAQ,kBACd6tB,MAAOuI,EAAO,IACdtwB,QAAO,MAAEmE,GAAF,SAAEA,EAAIoG,WAAN,EAAE,EAAU4mB,OACnBrb,MAAOlf,EAAQ,OA1Ff,EA8F4BiC,mBAAS,MA9FrC,WA8FGT,EA9FH,KA8Fa+W,EA9Fb,OA+FwBtW,mBAAS,IA/FjC,WA+FG2mB,EA/FH,KA+FWyK,EA/FX,OAgG0BpxB,oBAAS,GAhGnC,WAgGGyyB,EAhGH,KAgGYlN,EAhGZ,KA8GJ,OACE,kBAACllB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KAC9BjJ,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,KACG8B,EAAQ,YADX,WAC2BjD,GAAe,MAAFkN,GAAA,SAAAA,EAAIoG,WAAJ,IAAUE,OAAQ,GAD1D,MAGA,kBAAC,GAAD,KACGvQ,EAAQ,SADX,WACuBiK,GADvB,SACuBA,EAAIoG,WAD3B,EACuB,EAAU6mB,OAEjC,kBAAC1iB,GAAA,EAAD,CACE2iB,WAAY/F,EACZgG,UAAW,kBAAMltB,EAASN,EAAOlL,aACjC+V,KAAM4hB,EACNgB,WACkB,QAAhBtuB,UAASC,QACLhL,EACAY,KAAKoV,MAAM1U,IAAS42B,GAAOoB,KAEjCrY,sBACkB,QAAhBlW,UAASC,GACL,CAAE9J,cAAe,MAAO6Q,SAAU,OAAQxQ,OAAQA,GAAS,UAC3DvB,EAENu5B,aAAc,SAAC7zB,EAAM5G,GAAP,aAAwBA,GACtCgX,WAAY,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAAM5G,EAAY,EAAZA,MACnB,OACE,kBAACkC,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OA1JZ,KA2JD,kBAAC5R,EAAA,EAAD,CACEC,OAAQsE,EAAKkY,MACb3c,MAAO,CAAEK,MAAO42B,GAAM32B,OAAQ22B,IAC9BvI,WAAW,YAEb,kBAAC,GAAD,KAAIjqB,EAAK/D,MACT,kBAAC,GAAD,cAAK+D,EAAKmqB,MAAV,MACA,kBAAC,GAAD,KACG7tB,EAAQ,gBADX,KAC8B0D,EAAKoC,UA7JzB,KA+JN,MAAFmE,OAAA,EAAAA,EAAIsoB,YAhKI,KAiKN,MAAFtoB,OAAA,EAAAA,EAAIsoB,aACJ,kBAACvzB,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAACsI,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAO,CAACmtB,GAAOzoB,GAAOvD,UAAW,CAAEd,MAAO,MAC1CmG,MAAO6f,EAAOxoB,EAAQ,IAAM,GAC5B2K,aAAc,SAAC8gB,GAAD,OACZwH,EAAU,SAAKzK,GAAN,WAAexoB,EAAQ,EAAIyrB,MAEtCrb,YAAalN,EAAQ,YAEvB,kBAAC,GAAD,CACEf,MAAO,CAAEsV,eAAgB,GAAIlV,WAAY,IACzC4G,MAAOjG,EAAQ,OACfP,QAAS,kBAhEN,SAAO+3B,GAAP,iBAAAp5B,EAAAC,OAAA,uDACnB6lB,GAAW,GADQ,WAAA9lB,EAAA,MAEQqE,EAAK,WAAY,CAC1C+0B,SACAlS,OAAQA,EAAOkS,GACfrtB,MAAOP,EAAOlL,cALG,gBAEXR,EAFW,EAEXA,SAKRgM,EAASN,EAAOlL,YAChBuW,EAAY/W,GACZgmB,GAAW,GATQ,4DAgEYuT,CAAa36B,EAAQ,aC9IzC46B,GA3CC,SAAC7uB,GAAW,IAAD,EACnB7I,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAEhDqiB,EAAO,CACX,CACE9xB,IAAK,aACL0J,MAAOjG,EAAQ,kBACfM,UAAWwyB,IAGb,CACEv2B,IAAK,eACL0J,MAAOjG,EAAQ,oBACfM,UAAWyzB,IAEb,CACEx3B,IAAK,WACL0J,MAAOjG,EAAQ,gBACfM,UAAW61B,IAEb,CACE55B,IAAK,eACL0J,MAAOjG,EAAQ,oBACfM,UAAW0yB,KAvBU,EA2BHr0B,mBAAS0vB,EAAK,GAAG9xB,KA3Bd,WA2BlB+xB,EA3BkB,KA2BbY,EA3Ba,KA4BnBxlB,EAAY2kB,EAAKrF,MAAK,SAACuE,GAAD,OAAOA,EAAEhxB,MAAQ+xB,KAAKhuB,UAClD,OACE,kBAACtB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC8B,EAAcb,GAEf,kBAAC,GAAD,CACEwlB,KAAMA,EAAK9nB,KAAI,SAACgnB,GAAD,MAAQ,CACrBtnB,MAAOsnB,EAAEtnB,MACTkhB,SAAUmH,IAAQf,EAAEhxB,IACpBkD,QAAS,kBAAMyvB,EAAO3B,EAAEhxB,cCpCnBo7B,GANG,WAChB,OACE,kBAAC34B,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,OAAQC,OAAQ,GAAKwH,gBAAiB,W,w/BCWxDzH,GAAU2L,IAAWzI,IAAI,UAAzBlD,MAgOOs4B,G,qLA9NbvuB,MAAQ,CACNyC,SAAU,KACV5N,SAAU,KACV25B,KAAM,GACNvS,OAAQ,I,EAqBVwS,YAAc,WAAO,IACXluB,EAAW,EAAKf,MAAMmB,YAAtBJ,OAERjM,MAASlC,EAAUC,YAAd,wBAAiDkO,EAAOlL,WAAc,CACzEjB,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAO85B,GAAP,eAAA35B,EAAAC,OAAA,gDACEinB,EAASyS,EAAU3E,QACvB,SAAClG,EAAUpnB,GAAX,UAAC,MACIonB,GADL,WAEGpnB,EAAQsQ,GAAKvT,OAAOiD,EAAQwf,YAE/B,IAGF,EAAKlZ,SAAS,CACZ2rB,YACAzS,WAXE,+DAcLhnB,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBy5B,WAAa,SAACvb,EAAQwb,EAAM3S,GAAY,IAC9B5mB,EAAe,EAAKmK,MAAMmB,YAAYJ,OAAtClL,WACRf,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEunB,SAAQ7I,SAAQwb,OAAMv5B,iBAE5CT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,WAAU+5B,OAAM3S,OAAQ,KACxC,EAAKzc,MAAMmB,YAAYE,SAASxL,GAChC,EAAKo5B,cAHD,+DAKLx5B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB25B,WAAa,SAAC9hB,GAAQ,IACZ1X,EAAe,EAAKmK,MAAMmB,YAAYJ,OAAtClL,WACRf,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqY,KAAI1X,iBAE1BT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,WAAUkY,OAC1B,EAAKvN,MAAMmB,YAAYE,SAASxL,GAChC,EAAKo5B,cAHD,+DAKLx5B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB45B,YAAc,YAAsB,IAAnBz0B,EAAkB,EAAlBA,KAAM5G,EAAY,EAAZA,MAAY,EAO7B,EAAK+L,MALPmB,YACEJ,EAH6B,EAG7BA,OACUjG,EAJmB,EAI7BiG,OAAUjG,MACVsG,EAL6B,EAK7BA,GAIEjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAC9BvG,EAAQ,EAAK4D,MAAMic,OAAO5hB,EAAK0S,IAErC,OACE,kBAACpX,EAAA,QAAD,CACEzC,IAAG,OAASO,EACZmC,MAAO,CACL+H,eAAgB,WAGlB,kBAAC7H,EAAA,EAAD,CACEF,MAAO,CACLK,MAAO,IACPC,OAAQ,IACRouB,WAAY,UACZzX,UAAW,UAEb9W,OAAQ,CAAEL,IAAKtD,EAAUC,YAAc,IAAMgI,EAAKkY,SAGpD,kBAAC5c,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf6Q,SAAU,OACV/I,eAAgB,iBAGlB,kBAAChI,EAAA,QAAD,KACI,EAAKqK,MAAMnL,UAAY,EAAKmL,MAAM4uB,OAASv0B,EAAKu0B,MAClD,EAAK5uB,MAAM+M,KAAO1S,EAAK0S,GACrB,kBAAChP,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB,EAAKwF,MAAMnL,SAASA,UAErB,KAEJ,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgBH,EAAKu0B,MACjD,kBAAC7wB,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,gBADX,KAC8B0D,EAAK4hB,QAEnC,kBAACle,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAA5B,SACSH,EAAK4M,MAEd,kBAAClJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzBH,EAAK00B,OADR,IACiBp4B,EAAQ,YAGzB,kBAAC,GAAD,CAAG2T,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,UADX,KAGA,kBAACwH,EAAA,EAAD,CACEjL,IAAG,SAAWmH,EAAK0S,GACnBnX,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3BqF,MAAOA,EACPgC,aAAc,SAACzK,GAAD,OACZ,EAAKoP,SAAS,CACZkZ,OAAO,SAAM,EAAKjc,MAAMic,QAAlB,WAA2B5hB,EAAK0S,GAAKpZ,OAG/CsZ,qBAAsB3S,EAAM4S,kBAC5BrJ,YAAalN,EAAQ,aAIzB,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAE+H,eAAgB,gBAAiBoI,aAAc,KAC5D,kBAAC,GAAD,CACEzL,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,QACfP,QAAS,kBACP,EAAKu4B,WAAW,OAAQt0B,EAAKu0B,KAAM,EAAK5uB,MAAMic,OAAO5hB,EAAK0S,QAI9D,kBAAC,GAAD,CACEzS,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,SACfP,QAAS,kBACP,EAAKu4B,WACH,QACAt0B,EAAKu0B,KACL,EAAK5uB,MAAMic,OAAO5hB,EAAK0S,QAI7B,kBAAC,GAAD,CACEzS,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,WACfP,QAAS,kBAAM,EAAKy4B,WAAWx0B,EAAK0S,Y,2DAzLzBnN,KAAKJ,MAApBkD,WACW9C,KAAKJ,MAAMmB,YAAtBJ,OAERX,KAAK6uB,gB,+EA+LG,IAAD,EAIH7uB,KAAKJ,MAJF,KAELkD,WAFK,EAGL/B,YAAeC,GAE6BhB,KAAKI,OAArC0uB,GALP,EAKCF,KALD,EAKOE,WALP,EAKkB3hB,GALlB,EAKsBT,KALtB,EAK4B3N,OAEnC,OACE,kBAACwM,GAAA,EAAD,CACE6iB,WAAY/3B,GAAQ,IAAO,EAAI,EAC/B2f,sBAAuB,CAAEhY,WAAY,UACrCswB,aAAc,SAAC7zB,EAAM5G,GAAP,aAAwBA,GACtC2X,KAAMsjB,EACNjkB,WAAY7K,KAAKkvB,YACjBE,uBAAwBV,S,GAzNXjuB,a,kbCyLN4uB,G,qLAnMbjvB,MAAQ,CACNyC,SAAU,KACV5N,SAAU,KACV25B,KAAM,GACNzhB,GAAI,M,EAsBNmiB,YAAc,WAAO,IACX3uB,EAAW,EAAKf,MAAMmB,YAAtBJ,OAERjM,MAASlC,EAAUC,YAAd,mBAA4CkO,EAAOlL,WAAc,CACpEjB,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAO45B,GAAP,SAAAz5B,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAEyrB,SADZ,+DAGLv5B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBi6B,QAAU,SAACpiB,GAAQ,IACT1X,EAAe,EAAKmK,MAAMmB,YAAYJ,OAAtClL,WACRf,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqY,KAAI1X,iBAE1BT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,WAAUkY,OAC1B,EAAKvN,MAAMmB,YAAYE,SAASxL,GAChC,EAAK65B,cAHD,+DAKLj6B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBk6B,SAAW,SAACriB,GAAQ,IACV1X,EAAe,EAAKmK,MAAMmB,YAAYJ,OAAtClL,WACRf,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqY,KAAI1X,iBAE1BT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,WAAUkY,OAC1B,EAAKvN,MAAMmB,YAAYE,SAASxL,GAChC,EAAK65B,cAHD,+DAKLj6B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpB25B,WAAa,SAAC9hB,GAAQ,IACZ1X,EAAe,EAAKmK,MAAMmB,YAAYJ,OAAtClL,WACRf,MAASlC,EAAUC,YAAd,cAAwC,CAC3C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqY,KAAI1X,iBAE1BT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,WAAUkY,OAC1B,EAAKvN,MAAMmB,YAAYE,SAASxL,GAChC,EAAK65B,cAHD,+DAKLj6B,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBuV,WAAa,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAAM5G,EAAY,EAAZA,MAAY,EAM5B,EAAK+L,MAJPmB,YACEC,EAH4B,EAG5BA,GACUtG,EAJkB,EAI5BiG,OAAUjG,MAIR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CACEzC,IAAG,OAASO,EACZmC,MAAO,CACLC,cAAe,MACf6Q,SAAU,OACV/I,eAAgB,SAChBC,WAAY,SACZC,aAAc,GACd2G,YAAa,EACbC,YAAa,UAGf,kBAAC3O,EAAA,EAAD,CACEF,MAAO,CACLK,MAAO,IACPC,OAAQ,IACRouB,WAAY,WAEdvuB,OAAQ,CAAEL,IAAKtD,EAAUC,YAAc,IAAMgI,EAAKkY,SAGpD,kBAAC5c,EAAA,QAAD,CAAMC,MAAO,CAAEI,WAAY,KACxB,EAAKgK,MAAMnL,UAAY,EAAKmL,MAAM+M,KAAO1S,EAAK0S,GAC7C,kBAAChP,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB,EAAKwF,MAAMnL,SAASA,UAErB,KAEJ,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgBH,EAAKu0B,MACjD,kBAAC7wB,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAA5B,SAAkDH,EAAK4M,MACvD,kBAAClJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzBH,EAAK00B,OADR,IACiBp4B,EAAQ,YAEzB,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzBH,EAAKwzB,MADR,QACoBl3B,EAAQ,UAE5B,kBAAC,GAAD,CACE2D,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,QACfP,QAAS,kBAAM,EAAK+4B,QAAQ90B,EAAK0S,OAEnC,kBAAC,GAAD,CACEzS,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,SACfP,QAAS,kBAAM,EAAKg5B,SAAS/0B,EAAK0S,OAEpC,kBAAC,GAAD,CACEzS,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,WACfP,QAAS,kBAAM,EAAKy4B,WAAWx0B,EAAK0S,U,2DAhKrBnN,KAAKJ,MAApBkD,WACW9C,KAAKJ,MAAMmB,YAAtBJ,OAERX,KAAKsvB,gB,+EAoKG,IAAD,EAIHtvB,KAAKJ,MAJF,KAELkD,WAFK,EAGL/B,YAAeC,GAE6BhB,KAAKI,OAA3CwuB,EALD,EAKCA,KAAiBzhB,GALlB,EAKO2hB,UALP,EAKkB3hB,IAAUpO,GAL5B,EAKsB2N,KALtB,EAK4B3N,QAEnC,OACE,kBAAChJ,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC4M,GAAA,EAAD,CACE+iB,aAAc,SAAC7zB,EAAM5G,GAAP,aAAwBA,GACtC2X,KAAI,MAAEojB,OAAF,EAAEA,EAAM7vB,QAAO,SAAC0wB,GAAD,OAASA,EAAIT,OAASjwB,IAAWA,KACpD2wB,UAAWviB,EACXtC,WAAY7K,KAAK6K,kB,GA7LJpK,aCiCRmpB,GAjCG,SAAChqB,GAAW,IAAD,EACrB7I,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAEhDqiB,EAAO,CACX,CACE9xB,IAAK,SACL0J,MAAOjG,EAAQ,cACfM,UAAWs3B,IAGb,CACEr7B,IAAK,WACL0J,MAAOjG,EAAQ,gBACfM,UAAWg4B,KAbY,EAiBL35B,mBAAS0vB,EAAK,GAAG9xB,KAjBZ,WAiBpB+xB,EAjBoB,KAiBfY,EAjBe,KAkBrBxlB,EAAY2kB,EAAKrF,MAAK,SAACuE,GAAD,OAAOA,EAAEhxB,MAAQ+xB,KAAKhuB,UAClD,OACE,kBAACtB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC8B,EAAcb,GAEf,kBAAC,GAAD,CACEwlB,KAAMA,EAAK9nB,KAAI,SAACgnB,GAAD,MAAQ,CACrBtnB,MAAOsnB,EAAEtnB,MACTkhB,SAAUmH,IAAQf,EAAEhxB,IACpBkD,QAAS,kBAAMyvB,EAAO3B,EAAEhxB,cCnB1B+C,GAAU2L,IAAWzI,IAAI,UAAzBlD,MA0HOs5B,GAvHD,SAAC,GAUR,IATL7sB,EASI,EATJA,WASI,IARJ/B,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GAOIjK,GADF,EALF0uB,OAKE,EAJFxkB,SAIE,EAHFia,aAGE,EAFFva,OAAUjG,MAGIrH,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SADhC,EAE0BrN,oBAAS,GAFnC,WAEGyyB,EAFH,KAEYlN,EAFZ,OAG4BvlB,mBAAS,MAHrC,WAGGT,EAHH,KAGa+W,EAHb,OAIsBtW,mBAAS,IAJ/B,WAIGk6B,EAJH,KAIUC,EAJV,OAK0Bn6B,mBAAS,IALnC,WAKGo6B,EALH,KAKYC,EALZ,KAOEC,EAAW,4BAAA76B,EAAAC,OAAA,uDACf6lB,GAAW,GADI,WAAA9lB,EAAA,MAESoE,EAAI,UAFb,gBAEPq2B,EAFO,EAEPA,MACR3U,GAAW,GACX4U,EAASD,GAJM,6DAOXK,EAAa,4BAAA96B,EAAAC,OAAA,kEAAAD,EAAA,MACmBoE,EAAI,qBACjBoH,EAAOlL,aAFb,kBACTs1B,SAAU+E,EADD,EACCA,QAGlBC,EAAWD,GAJM,6DAObI,EAAuB,SAAO/iB,EAAI0e,GAAX,iBAAA12B,EAAAC,OAAA,kEAAAD,EAAA,MACAqE,EAAK,mBAAoB,CAClD0H,MAAOP,EAAOlL,WACd0X,KACA0e,cAJyB,gBACnB52B,EADmB,EACnBA,SAKR+W,EAAY/W,GACZg7B,IAP2B,6DAa7B,OAHA/7B,EAAO87B,GACP97B,EAAO+7B,GAGL,kBAACl6B,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KAC9BjJ,GAAY,kBAAC,GAAD,KAAIA,GAChB66B,EAAQj2B,OAAS,GAChBi2B,EAAQxyB,KAAI,SAAC6yB,EAAQt8B,GACnB,OACE,kBAACkC,EAAA,QAAD,CAAMzC,IAAG,SAAWO,EAASmC,MAAO,CAAEC,cAAe,QACnD,kBAAC,GAAD,KAAIc,EAAQ,gBAAiBo5B,EAAOC,WACpC,kBAAC,GAAD,CACEpzB,MAAOjG,EAAQ,UACfP,QAAS,kBAAM05B,EAAqBC,EAAOhjB,IAAI,MAEjD,kBAAC,GAAD,CACEnQ,MAAOjG,EAAQ,WACfP,QAAS,kBAAM05B,EAAqBC,EAAOhjB,IAAI,UAMzD,kBAAC5B,GAAA,EAAD,CACE2iB,WAAY/F,EACZgG,UAAW6B,EACXxkB,KAAMokB,EACNxB,WACkB,QAAhBtuB,UAASC,QACLhL,EACAY,KAAKoV,MAAM1U,GAAK,KAEtB2f,sBACkB,QAAhBlW,UAASC,GACL,CAAE9J,cAAe,MAAO6Q,SAAU,aAClC/R,EAENu5B,aAAc,SAAC7zB,EAAM5G,GAAP,aAAwBA,GACtCgX,WAAY,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAAkB,EAAZ5G,MAGnB,OACE,kBAAC0C,EAAA,EAAD,CACEC,QAJa,kBACfsM,EAAWoC,SAAS,OAAQ,CAAExO,KAAM+D,EAAK/D,QAIvCV,MAAO,CAAE8R,OAtFR,GAsFwBzR,MAvF1B,MAyFEoE,EAAKmY,UACJ,kBAAC1c,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,YAAcgI,EAAKmY,WAC5C5c,MAAO,CAAEK,MA5Fd,IA4F2BC,OA5F3B,KA6FKouB,WAAW,UAGb,kBAACxuB,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAlGd,IAkG2BC,OAlG3B,OAqGC,kBAAC,GAAD,KACGS,EAAQ,QADX,KACsB0D,EAAK/D,MAE3B,kBAAC,GAAD,KACGK,EAAQ,WADX,KACyB0D,EAAK2uB,SAE9B,kBAAC,GAAD,KACGryB,EAAQ,QADX,WACuBjD,EAAa2G,EAAK6M,MADzC,MAGA,kBAAC,GAAD,KACGvQ,EAAQ,SADX,KACuB0D,EAAK41B,aClHpCC,IAFatuB,IAAWzI,IAAI,UAA1BjD,OAEQ,CACd,CACEhD,IAAK,QACL0J,MAAO,UAET,CACE1J,IAAK,OACL0J,MAAO,QAET,CACE1J,IAAK,OACL0J,MAAO,UAILuzB,GAAS,CACb,CACEj9B,IAAK,WACL0J,MAAO,UAGT,CACE1J,IAAK,OACL0J,MAAO,WAGT,CACE1J,IAAK,OACL0J,MAAO,QAET,CACE1J,IAAK,SACL0J,MAAO,UAET,CACE1J,IAAK,UACL0J,MAAO,WAET,CACE1J,IAAK,OACL0J,MAAO,QAET,CACE1J,IAAK,OACL0J,MAAO,QAET,CACE1J,IAAK,WACL0J,MAAO,cAmNIkoB,iCA/MC,SAAC,GAIV,IAHLrG,EAGI,EAHJA,2BAGI,IAFJ9d,YAAeC,EAEX,EAFWA,GAAIL,EAEf,EAFeA,OACnBmC,EACI,EADJA,WACI,EAC0BpN,mBAAS,IADnC,WACG0zB,EADH,KACYoH,EADZ,OAEwB96B,mBAAS,IAFjC,WAEG3C,EAFH,KAEW09B,EAFX,OAG0B/6B,mBAAS66B,GAAO,IAH1C,WAGGG,EAHH,KAGYC,EAHZ,OAIwBj7B,mBAAS46B,GAAQ,IAJzC,WAIGvxB,EAJH,KAIW6xB,EAJX,KAKE75B,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC7O,GAAO,WAKLkX,EAAaslB,EAAQp9B,QAIvB,IAAM8X,EAAe,SAACC,EAAOtM,GAC3BrK,MAASlC,EAAUC,YAAd,kBAA2C4Y,EAA3C,WAA2DtM,EAAU,CACxEvK,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOo0B,GAAP,SAAAj0B,EAAAC,OAAA,gDACJo7B,EAAWpH,GADP,+DAGL/zB,OAAM,SAACC,GACNC,QAAQD,MAAMA,OA4Jdu7B,EAAkBzH,EAAQrqB,QAAO,SAAC4E,GAAD,aACrC5Q,IAAM,SAAG4Q,EAAEjN,WAAL,EAAG,EAAQo6B,cAAcvzB,SAASxK,EAAO+9B,mBAEjD,OACE,kBAAC/6B,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC4M,GAAA,EAAD,CACEyK,sBAAuB,CACrB1f,OAAwB,QAAhBwJ,UAASC,GAAe,OAAIhL,GAEtCq6B,uBAAwB,kBAAM,kBAAC,GAAD,OAC9B3jB,oBA/Ee,WACnB,OACE,kBAAC1V,EAAA,QAAD,CAAMC,MAAO,CAAE8H,gBAAiB6C,EAAOjG,MAAMsS,UAC3C,kBAACjX,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,CACE+G,MAAOjG,EAAQ,QACfP,QAAS,kBAjDS,WAE1B,IAAM2G,EAAUozB,GAAOjzB,KAAI,SAAC2hB,GAAD,OAAOA,EAAEjiB,SAEpCG,EAAQK,KAAKzG,EAAQ,WACrB8nB,EACE,CACE1hB,UACA+hB,kBAAmB/hB,EAAQtD,OAAS,EACpCslB,uBAAwB,OAE1B,SAACC,GACKA,EAAcjiB,EAAQtD,OAAS,IACjC82B,EAAWJ,GAAOnR,IAClBhU,EAAamlB,GAAOnR,GAAa9rB,IAAKyL,EAAOzL,SAmC5By9B,IACf7uB,KAAK,SACLC,KAAK,cACLnM,MAAO,CAAEwQ,UAAW,GAAIsX,iBAAkB,MAG5C,kBAAC,GAAD,CACE9gB,MAAOjG,EAAQ,UACfP,QAAS,kBApCW,WAE5B,IAAM2G,EAAUmzB,GAAQhzB,KAAI,SAAC2hB,GAAD,OAAOA,EAAEjiB,SAErCG,EAAQK,KAAKzG,EAAQ,WACrB8nB,EACE,CACE1hB,UACA+hB,kBAAmB/hB,EAAQtD,OAAS,EACpCslB,uBAAwB,OAE1B,SAACC,GACKA,EAAckR,GAAQz2B,SACxBtE,QAAQ6H,IAAI,YAAakzB,GAAQlR,IACjCwR,EAAUN,GAAQlR,IAClBhU,EAAamlB,GAAOnR,GAAa9rB,IAAKg9B,GAAQlR,GAAa9rB,SAqB1C09B,IACf9uB,KAAK,SACLC,KAAK,cACLnM,MAAO,CAAEwQ,UAAW,GAAIsX,iBAAkB,OAI9C,kBAAC/nB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfgI,aAAc,GACdH,gBAAiB6C,EAAOjG,MAAM8H,UAC9B8I,eAAgB,GAChBwS,iBAAkB,GAClBrb,kBAAmB,GACnBnM,OAAQ,GACR0H,WAAY,WAGd,kBAACO,EAAA,EAAD,CACE0F,YAAalN,EAAQ,UACrBsW,qBAAsB1M,EAAOjG,MAAM4S,kBACnC9Q,MAAOzJ,EACPiD,MAAO,CACL2I,KAAM,EACNN,SAAU,GACVzH,MAAO+J,EAAOjG,MAAMiI,eAEtBnE,aAAciyB,IAGhB,kBAAC,KAAD,CACE/5B,KAAK,SACLC,KAAM,GACNC,MAAO+J,EAAOjG,MAAMiI,iBAIxB,kBAAC5M,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACRwH,gBAAiB6C,EAAOjG,MAAM8H,UAC9BxE,WAAY,SACZyE,kBAAmB,KAGrB,kBAAC,GAAD,CAAGzM,MAAO,CAAEoI,WAAY,SAAWrH,EAAQ,SAC3C,kBAAC,GAAD,CAAGf,MAAO,CAAEoI,WAAY,SAAWsyB,EAAQ1zB,UAiB7CwO,KAAMqlB,EACNhmB,WApKa,SAAC,GAAqB,IAAnBpQ,EAAkB,EAAlBA,KAAM5G,EAAY,EAAZA,MACpBo9B,EAAWP,EAAQp9B,IAEnBsnB,GAAY3X,KAAK5H,MAAQZ,EAAKogB,UAAY,IAAQ,EAClDqW,EACS,aAAbD,EACIrW,EACE,SACA,eACW,SAAbqW,EAAA,SACIx2B,EAAK4M,KADT,KAEa,WAAb4pB,EAAA,GACGx2B,EAAK+rB,OACK,YAAbyK,EAAA,GACGx2B,EAAKiiB,QACK,SAAbuU,EAAA,GACGx2B,EAAK8rB,KACK,SAAb0K,EAAA,GACGl1B,GAAQtB,EAAKK,KAAM,QACT,aAAbm2B,EAAA,GACGj1B,GAAYvB,EAAKiN,SAAU,QAD9B,SAEIjN,EAAK6M,KAFT,KAIN,OACE,kBAACvR,EAAA,QAAD,CACEzC,IAAG,OAASO,EACZmC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBC,WAAY,SACZyE,kBAAmB,GACnBykB,gBAAiB,KAGnB,kBAAC,GAAD,CAAMpkB,WAAYA,EAAY6X,KAAMlgB,IACpC,kBAAC,GAAD,KAAIy2B,WC7FGC,GArCF,SAAC,GAAqC,IAAnC/pB,EAAkC,EAAlCA,KAAMtE,EAA4B,EAA5BA,WAA4B,IAAhBnM,YAAgB,MAAT,GAAS,EAC1C+D,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SAElD,OACE,kBAACnE,EAAA,EAAD,CACEC,QAAS,WACPsM,EAAWoC,SAAS,OAAQ,CAAExO,KAAM0Q,EAAK1Q,QAE3CV,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAE3C,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiBpD,EAAMsS,QACvB/O,aAActH,EAAO,EACrBiO,YAAa,EACbC,YAAanK,EAAM8H,YAGpB4E,EAAKwL,UACJ,kBAAC1c,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,YAAc2U,EAAKwL,WAC5C5c,MAAO,CAAEK,MAAOM,EAAML,OAAQK,EAAMsH,aAActH,EAAO,KAG3D,kBAACT,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAAOM,EAAML,OAAQK,EAAMsH,aAActH,EAAO,MAI/D,kBAACZ,EAAA,QAAD,CAAMC,MAAO,CAAEI,WAAY,KACzB,kBAAC,GAAD,KAAIgR,EAAK1Q,SC0EF06B,GA3FA,SAAC,GAMT,IALLtuB,EAKI,EALJA,WAKI,IAJJ/B,YACEC,EAGE,EAHFA,GACUtG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAEwBrN,mBAAS,IAFjC,WAEG27B,EAFH,KAEWC,EAFX,KASJ,OAFAp9B,GAJkB,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACSoE,EAAI,WADb,gBACR83B,EADQ,EACRA,OACRC,EAAUD,GAFM,+DAOhB,kBAACtb,GAAA,EAAD,KACGtd,MAASqX,QAAQxY,EAAgB0B,6BAChCP,MAASoZ,SAASva,EAAgB6B,sBAChC,kBAAC,KAAD,CAAcnD,MAAO,CAAEkB,KAAM,CAAEN,MAAO8D,EAAME,eACzC7D,EAAQ,gBAIZ,MAAFiK,OAAA,EAAAA,EAAI8Q,OAAQ,GACbrZ,MAASqX,QAAQxY,EAAgB6B,qBAC/B,kBAACpD,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO6Q,SAAU,SAC5CuqB,EAAO/zB,KAAI,SAACi0B,EAAO19B,GAClB,IAAM29B,EACY,SAAhBD,EAAME,MACF16B,EAAQ,aACQ,QAAhBw6B,EAAME,MACN16B,EAAQ,eACQ,SAAhBw6B,EAAME,MACN16B,EAAQ,sBACQ,UAAhBw6B,EAAME,MACNh5B,MAASi5B,MAAM,SAASC,OAAO,oBAC/B,KACN,OACE,kBAAC,GAAD,CACE3J,aAAc,MACd7a,GAAE,QAAUtZ,EACZmJ,MAAOjG,EAAQ,QAAQw6B,EAAMK,QAAf,SAAiC,IAAMJ,GAEpDD,EAAMM,MAAMv0B,KAAI,SAACw0B,EAAM/3B,GAEtB,OACE,kBAAC,KAAD,CAAMzG,IAAG,OAASyG,EAAT,IAAclG,GACrB,kBAAC,KAAD,CACE8C,KAAM,EACNX,MAAO,CAAE+H,eAAgB,SAAU2K,WAAY,KAE5B,SAAlB6oB,EAAMK,QACL,kBAAC,GAAD,CAAMj7B,KAAM,GAAImM,WAAYA,EAAYsE,KAAM0qB,IAE9C,kBAAC,GAAD,CAAMn7B,KAAM,GAAImM,WAAYA,EAAY6X,KAAMmX,KAIlD,kBAAC,KAAD,CAAK97B,MAAO,CAAE+H,eAAgB,SAAU2K,WAAY,KAClD,kBAAC,GAAD,KACGopB,EAAKP,MADR,IACgBx6B,EAAQw6B,EAAMQ,aAIb,SAAlBR,EAAMK,QAAqB,KAC1B,kBAAC,KAAD,CACE57B,MAAO,CAAE+H,eAAgB,SAAU2K,WAAY,KAE/C,kBAAC,GAAD,KACqB,SAAlB6oB,EAAMK,QACH71B,GAAQ+1B,EAAKP,EAAMK,SAAU,QACX,aAAlBL,EAAMK,QACN51B,GAAY81B,EAAKP,EAAMK,SAAU,QAC9BE,EAAKP,EAAMK,SAFd,IAE0B76B,EACxBw6B,EAAMK,oBAY9B,OC2BKI,GAhII,SAAC,GAGb,IAFLlvB,EAEI,EAFJA,WAEI,IADJ/B,YAAeC,EACX,EADWA,GAAIykB,EACf,EADeA,OAAQvK,EACvB,EADuBA,aAErBnkB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC7O,EAAOgnB,GAEP,IAAM+W,EAAY,CAChB/K,gBAAiB,GACjBrT,YAAa,GACbD,kBAAmB,GACnBuT,kBAAmB,SAGrB,OACE,kBAACpR,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACrC,kBAACnI,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAACF,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CAAMC,MAAOi8B,GACX,kBAAC,GAAD,CAAGvnB,MAAI,GAAE3T,EAAQ,UAFrB,MAIG0uB,OAJH,EAIGA,EAAQnoB,KAAI,SAACgG,EAAMzP,GAClB,OACE,kBAACkC,EAAA,QAAD,CACEzC,IAAG,IAAMO,EACTmC,MAAO,CACLi8B,EACA,CACErzB,iBAAkB,QAClBC,iBAAkB,GAClBqzB,gBAAiB,QACjBC,gBAAiB,GACjBte,YAAa,MAIjB,kBAAC,GAAD,KAAIvQ,EAAKA,WAMjB,kBAACyS,GAAA,EAAD,CAAY4H,YAAU,GACpB,kBAAC5nB,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAA2B,EAApB4E,EAAWpB,OAAa,MAC5C,kBAAC,KAAD,CAAM7D,MAAOi8B,GACVh3B,EAAWqC,KAAI,SAACwY,EAAUjiB,GACzB,MAAO,CAAC,QAAS,SAAU,SAAU,QAAS,WAAWyJ,KACvD,SAAC80B,GACC,GACc,UAAXA,GAAiC,YAAXA,GACL,kBAAlBtc,EAASpf,KAFX,CAMA,IAAM27B,EAAWt7B,EAAQ+e,EAASpf,MAAvB,IAAgCK,EACzCq7B,GAGF,OACE,kBAAC,KAAD,CAAKz7B,KAAM,EAAGrD,IAAG,OAASO,EAAQu+B,GAChC,kBAAC,GAAD,CAAG1nB,MAAI,EAACzF,cAAe,GACpBotB,YAlBjB,MA2BG5M,OA3BH,EA2BGA,EAAQnoB,KAAI,SAACgG,EAAMzP,GAClB,OACE,kBAAC,KAAD,CAAMmC,MAAOi8B,GACVh3B,EAAWqC,KAAI,SAACwY,GACf,MAAO,CACL,QACA,SACA,SACA,QACA,WACAxY,KAAI,SAACg1B,GACL,GACmB,UAAhBA,GACiB,YAAhBA,GACgB,kBAAlBxc,EAASpf,KAHX,CAOA,IAAM27B,EACY,YAAhBC,EACIA,EADJ,GAEOxc,EAASpf,KAAO47B,EAEnBC,EACY,UAAhBD,EACE,kBAAC/7B,EAAA,EAAD,CACEC,QAAS,kBACPsM,EAAWoC,SAAS,UAAW,CAC7BxO,KAAM4M,EAAK+uB,OAIf,kBAAC,GAAD,KAAI/uB,EAAK+uB,KAEO,WAAhBC,EACF,kBAAC,GAAD,KAAIhvB,EAAK+uB,GAAT,KACkB,WAAhBC,GACc,UAAhBA,EACA,kBAAC,GAAD,cAAKx+B,EAAawP,EAAK+uB,IAAvB,MAEA,kBAAC,GAAD,KAAIv+B,EAAawP,EAAK+uB,KAE1B,OAAO,kBAAC,KAAD,KAAME,iBAU7B,kBAACx8B,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,UCtHvBk8B,GAAW,CACf3H,UAAW,eACXvjB,KAAM,WACNkf,OAAQ,SACR9J,QAAS,UACT6J,KAAM,OACNzrB,KAAM,OACN4M,SAAU,YACVF,WAAY,aACZirB,WAAY,uBACZC,YAAa,wBAmKAC,GAhKD,SAAC,GAAyC,IAAvC7vB,EAAsC,EAAtCA,WAAsC,KAA1B/B,YAAeC,GAChBtL,mBAAS,KADkB,WAC9Cm8B,EAD8C,KACvCe,EADuC,OAEnBl9B,mBAAS,IAFU,WAE9Cm9B,EAF8C,KAEnCC,EAFmC,KAI/C97B,EAAakF,IAAM6Q,WAAW9Q,IAyBpC,OAFA/H,GAtBmB,WACjBQ,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC68B,GACLe,EAASf,MAEVx8B,OAAM,SAACC,GACNC,QAAQD,MAAMA,SAUpBpB,GANuB,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACGoE,EAAI,cADP,gBACbs4B,EADa,EACbA,MACRiB,EAAajB,GAFQ,+DAQrB,kBAAC9b,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf6Q,SAAU,OACV/I,eAAgB,SAChBG,QAAS,KALb,MAQG2zB,OARH,EAQGA,EAAOv0B,KAAI,SAACw0B,EAAMj+B,GACjB,IAAMP,EAAMwyB,OAAOC,KAAK+L,GAAM,GACxBiB,EAASjN,OAAOiN,OAAOjB,GAAM,GACnC,OACE,kBAAC,GAAD,CACE3kB,GAAE,OAAStZ,EACXP,IAAG,OAASO,EACZm0B,aAAc,IACdhrB,MAAOw1B,GAASl/B,IAEhB,kBAACyC,EAAA,QAAD,CAAMzC,IAAG,QAAUO,EAASmC,MAAO,CAAEK,MAAO,IAAKmQ,UAAW,KACzDusB,aAAkBC,MACjBD,EAAOz1B,KAAI,SAACd,EAAOzC,GACjB,IAAIulB,EAAI9iB,EAAMlJ,GAOd,MANY,SAARA,IAAgBgsB,EAAC,SAAOxrB,EAAawrB,GAApB,MACT,cAARhsB,IACFgsB,EAAI7mB,IAAO6mB,GAAGqS,OAAO,qBACX,aAARr+B,IAAoBgsB,EAAItjB,GAAYsjB,EAAG,SAC/B,SAARhsB,IAAgBgsB,EAAIvjB,GAAQujB,EAAG,SAGjC,kBAACvpB,EAAA,QAAD,CACEzC,IAAG,OAASA,EAAT,IAAgByG,EACnB/D,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBC,WAAY,SACZmI,aAAc,IAGhB,kBAAC,GAAD,CAAMrD,WAAYA,EAAY6X,KAAMne,EAAO7F,KAAM,KACjD,kBAACZ,EAAA,QAAD,KACE,kBAAC,GAAD,CAAGzC,IAAG,OAASA,EAAT,IAAgByG,GAAMulB,QAMpC,kBAAC,GAAD,KAAIyT,SAOfF,EAAUh5B,OAAS,GAClB,kBAAC9D,EAAA,QAAD,KACE,kBAAC,GAAD,eACA,kBAAC,GAAD,0EAGA,kBAACggB,GAAA,EAAD,CAAY4H,YAAU,EAACsV,WAAS,GAC9B,kBAAC,KAAD,CACEC,UAAQ,EACR1nB,KAAM,CACJ2nB,OAAQN,EAAUv1B,KAAI,SAACvJ,EAAGF,GAAJ,OACV,IAAVA,GAAeA,EAAQ,IAAM,EACzB4E,IAAO1E,EAAE82B,WAAW8G,OAAO,eAC3B,OAENyB,SAAU,CACR,CACE5nB,KAAMqnB,EAAUv1B,KAAI,SAACvJ,GAAD,OAAOA,EAAEgf,UAC7Bnc,MAAO,SAACy8B,GAAD,MAAa,QAEtB,CACE7nB,KAAMqnB,EAAUv1B,KAAI,SAACvJ,GAAD,OAAOA,EAAEu/B,kBAC7B18B,MAAO,SAACy8B,GAAD,MAAa,UAEtB,CACE7nB,KAAMqnB,EAAUv1B,KAAI,SAACvJ,GAAD,OAAOA,EAAEw/B,iBAC7B38B,MAAO,SAACy8B,GAAD,MAAa,WAI1BG,iBAAkB,SAAChoB,GACjB,IAAM/Q,EAAOo4B,EAAUrnB,EAAK3X,OAE5BmD,EACEyB,IAAOgC,EAAKowB,WAAW8G,OAAO,eAC3Bl3B,EAAKsY,OAFA,YAEkBtY,EAAK64B,eAFvB,oBAEyD74B,EAAK84B,cAF9D,kBAGR,KACA,CAAEjgC,IAAK,gBAGX+C,MAA0B,GAAnBw8B,EAAUh5B,OAAc,IAC/BvD,OAAQ,IACRm9B,WAAW,GACXC,cAAe,GACfC,WAAW,GACXC,YAAY,GACZC,cAAe,EACfC,YAAa,CACXh2B,gBAAiB,UACjBi2B,uBAAwB,UACxBC,qBAAsB,UACtBC,cAAe,EACfr9B,MAAO,eAACy8B,EAAD,uDAAW,EAAX,6BAAwCA,EAAxC,KACPa,WAAY,eAACb,EAAD,uDAAW,EAAX,6BAAwCA,EAAxC,KACZr9B,MAAO,CACLiI,aAAc,IAEhBk2B,aAAc,CACZ54B,EAAG,IACH64B,YAAa,IACbC,OAAQ,YAGZC,QAAM,EACNt+B,MAAO,CACLsV,eAAgB,EAChBrN,aAAc,UCrHfs2B,GAhDE,SAAC30B,GAAW,IAAD,IACpB7I,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAEhDqiB,EAAO,CACX,CACE9xB,IAAK,UACL0J,MAAOjG,EAAQ,cAAD,SAAgB6I,EAAMmB,YAAYC,SAAlC,EAAgB,EAAsB+R,QACpD1b,UAAWm9B,IAEb,CACElhC,IAAK,QACL0J,MAAOjG,EAAQ,aACfM,UAAWs7B,IAEb,CACEr/B,IAAK,QACL0J,MAAOjG,EAAQ,aACfM,UAAWs4B,IAEb,CACEr8B,IAAK,SACL0J,MAAOjG,EAAQ,UACfM,UAAW+5B,IAGb,CACE99B,IAAK,aACL0J,MAAOjG,EAAQ,kBACfM,UAAW26B,KA5BW,EAgCJt8B,mBAAS0vB,EAAK,GAAG9xB,KAhCb,WAgCnB+xB,EAhCmB,KAgCdY,EAhCc,KAiCpBxlB,EAAY2kB,EAAKrF,MAAK,SAACuE,GAAD,OAAOA,EAAEhxB,MAAQ+xB,KAAKhuB,UAClD,OACE,kBAACtB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC8B,EAAcb,GAEf,kBAAC,GAAD,CACEwlB,KAAMA,EAAK9nB,KAAI,SAACgnB,GAAD,MAAQ,CACrBtnB,MAAOsnB,EAAEtnB,MACTkhB,SAAUmH,IAAQf,EAAEhxB,IACpBkD,QAAS,kBAAMyvB,EAAO3B,EAAEhxB,c,8aC5ChB0O,IAAWzI,IAAI,UAAzBlD,M,IA4DOo+B,G,uLAxDbr0B,MAAQ,CACNs0B,SAAQ,SAAE,EAAK90B,MAAMmB,YAAYC,SAAzB,EAAE,EAA2B0zB,U,gDAE7B,IAAD,SAC0B10B,KAAKJ,MAAMmB,YAApCJ,EADD,EACCA,OAAQK,EADT,EACSA,GAAIC,EADb,EACaA,SAEdlK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGX,WAAY,SAAUD,eAAgB,WAC5D,kBAAC,GAAD,KAAIhH,EAAQ,eAA+B,KAAb,MAAFiK,OAAA,EAAAA,EAAI0zB,YAE/B,CAAC,EAAG,GAAK,IAAM,GAAK,GAAGp3B,KAAI,SAACosB,GAC3B,OACE,kBAACnzB,EAAA,EAAD,CAAkBC,QAAS,kBAAM,EAAK2M,SAAS,CAAEuxB,SAAUhL,MACzD,kBAAC3zB,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTJ,gBACE,EAAKsC,MAAMs0B,WAAahL,EAAK,YAAS30B,IAG1C,kBAAC,GAAD,KAAIgC,EAAQ,gBAAsB,IAAL2yB,SAKrC,kBAAC,GAAD,CACE1sB,MAAOjG,EAAQ,QACfP,QAAS,WACP9B,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnB4/B,SAAU,EAAKt0B,MAAMs0B,SACrBj/B,WAAYkL,EAAOlL,eAGpBT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLgM,EAASN,EAAOlL,eAEjBJ,OAAM,SAACC,GACNC,QAAQ6H,IAAI,eAAgB9H,GAC5ButB,MAAM9rB,EAAQ,kC,GAhDNmF,IAAMuE,WCsDfk0B,GAzDA,SAAC,GAQT,IAPL7xB,EAOI,EAPJA,WAOI,IANJ/B,YACEJ,EAKE,EALFA,OACAK,EAIE,EAJFA,GAIE,KAHFC,SAGE,EAFFN,OAAUjG,MAGIrH,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAERrN,mBAAS,KAHjC,WAGGk/B,EAHH,KAGWC,EAHX,OAI4Bn/B,mBAAS,MAJrC,WAIGT,EAJH,KAIa+W,EAJb,KAgBE8oB,EAAY,4BAAA3/B,EAAAC,OAAA,kEAAAD,EAAA,MACSoE,EAAI,qBAAqBoH,EAAOlL,aADzC,gBACRm/B,EADQ,EACRA,OAERC,EAAUD,GAHM,6DAQlB,OAFA1gC,EAAO4gC,GAGL,kBAAC/e,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACrC,kBAACnI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmJ,OAAQ,KAC9B,kBAAC/R,EAAA,QAAD,KACGd,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KADlC,MAGG2/B,GAHH,MAGGA,EAAQt3B,SAHX,EAGGs3B,EAAQt3B,KAAM,SAACy3B,GAAD,OACb,kBAACh/B,EAAA,QAAD,CACEC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBAE/C,kBAAC,GAAD,CAAM4c,KAAMoa,EAAMpa,KAAMhkB,KAAM,GAAImM,WAAYA,IAE9C,kBAACvM,EAAA,EAAD,CAAkBC,QAAS,kBA9Bf,SAAOw+B,GAAP,iBAAA7/B,EAAAC,OAAA,kEAAAD,EAAA,MACKqE,EAAK,cAAe,CAC7C/D,WAAYkL,EAAOlL,WACnBu/B,aAHoB,gBACd//B,EADc,EACdA,SAKR+W,EAAY/W,GACZ6/B,IAPsB,4DA8BqBG,CAAgBF,EAAMC,WACrD,kBAAC9nB,GAAA,EAAD,CAAQxW,KAAK,QAAQE,MAAM,MAAMD,KAAM,YAOjD,kBAACZ,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,kbC4Ed4+B,G,qLA/Hb90B,MAAQ,CACNyC,SAAU,KACV5N,SAAU,KACVumB,QAAS,GACT5lB,OAAQD,KAAKC,U,EAEfiV,WAAa,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAAM5G,EAAY,EAAZA,MAGN6G,EAEV,EAAKkF,MAHPmB,YACEJ,OAAUjG,MAIRoD,EACJ,EAAKsC,MAAMyC,WAAapI,EAAK0S,GAAK,eAAYpY,EAChD,OACE,kBAACwB,EAAA,EAAD,CACEC,QAAS,WACP,EAAK2M,SAAS,CAAEN,SAAUpI,EAAK0S,OAGjC,kBAACpX,EAAA,QAAD,CACEzC,IAAG,OAASO,EACZmC,MAAO,CACLC,cAAe,MACfgI,aAAc,GACdC,QAAS,GACTH,eAAgB,gBAChBD,oBAGF,kBAACK,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgBH,EAAKyI,QACjD,kBAAC/E,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAA5B,SAAkDH,EAAKmqB,U,EAM/DG,aAAe,WAAO,IAAD,EACI,EAAKnlB,MAAMmB,YAA1BJ,EADW,EACXA,OAAQK,EADG,EACHA,GACVjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,oCACE,kBAAC,GAAD,CACEhC,YAAa,EAAKnB,MAAMmB,YACxBya,QAAS,EAAKpb,MAAMob,QACpB8J,gBAAiB,SAACvxB,GAAD,OAAO,EAAKoP,SAAS,CAAEqY,QAASznB,KACjD6B,OAAQ,EAAKwK,MAAMxK,OACnB2vB,eAAgB,SAACxxB,GAAD,OAAO,EAAKoP,SAAS,CAAEvN,OAAQ7B,OAGjD,kBAAC,GAAD,CACEiC,MAAO,CAAEiI,aAAc,GAAIuI,UAAW,IACtCxJ,MAAOjG,EAAQ,aACfP,QAAS,0BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACgBqE,EAAK,SAAU,CACpC0H,MAAOP,EAAOlL,WACdyN,OAAQ,EAAK9C,MAAMyC,SACnB2Y,QAAS,EAAKpb,MAAMob,WAJf,OACDvmB,EADC,OAMP,EAAKkO,SAAS,CAAElO,WAAUumB,QAAS,GAAI5lB,OAAQD,KAAKC,WACpD,EAAKgK,MAAMmB,YAAYE,SAASN,EAAOlL,YAPhC,iE,gDAaP,IAAD,SAOHuK,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAGR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAR7B,EAUwB/C,KAAKI,MAA5BnL,EAVD,EAUCA,SAAU4N,EAVX,EAUWA,SAEZ1F,EAAU,CACd,CACEgQ,GAAI,EACJjK,OAAQnM,EAAQ,mBAChB6tB,MAAO,SAET,CACEzX,GAAI,EACJjK,OAAQnM,EAAQ,qBAChB6tB,MAAO,UAGT,CACEzX,GAAI,EACJjK,OAAQnM,EAAQ,mBAChB6tB,MAAO,YAIX,OACE,kBAAC7uB,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACc,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmV,UAAW,MACjC,kBAAC3V,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAGZ,kBAAC,GAAD,CACE+H,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2M,SAAS,CAAElO,SAAU,WAI7C,kBAACsW,GAAA,EAAD,CACE+iB,aAAc,SAAC7zB,EAAM5G,GAAP,aAAwBA,GACtC2X,KAAMrO,EACNuyB,UAAW7sB,EACX4I,oBAAqB,kBAAM,kBAAC,GAAD,KAAI1U,EAAQ,gBACvC8T,WAAY7K,KAAK6K,WACjBsqB,oBAAqBn1B,KAAK+kB,oB,GAxHjBtkB,aCAf20B,GAAmB38B,IAAO,aAAc,cAAcC,IAAI,OAAQ,IAiKzD28B,GA/JA,SAAC,GAUT,IATLvyB,EASI,EATJA,WASI,IARJ/B,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GACAykB,EAKE,EALFA,OACAvK,EAIE,EAJFA,aACAja,EAGE,EAHFA,SACUvG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG4BrN,mBAAS,MAHrC,WAGGT,EAHH,aAIkDS,mBAAS,OAJ3D,WAIGkxB,EAJH,KAIwBC,EAJxB,KAMJ3yB,EAAOgnB,GAEP,IAAMmJ,EAAc,SAAO/gB,GAAP,iBAAAnO,EAAAC,OAAA,kEAAAD,EAAA,MACSqE,EAAK,cAAe,CAC7C8J,OACAlI,KAAM,SACN8F,MAAOP,EAAOlL,cAJE,gBACVR,EADU,EACVA,SAKRimB,IACAja,EAASN,EAAOlL,YAChBoxB,EAAuB5xB,GARL,6DAWdqO,EAAI,MAAGmiB,OAAH,EAAGA,EAAQ1F,MAAK,SAAChsB,GAAD,OAAOA,EAAEuP,QAAF,MAAWtC,OAAX,EAAWA,EAAIsC,SAEhD,OACE,kBAACyS,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,MACpC,MAACoF,OAAD,EAACA,EAAMgyB,aAYN,oCACE,kBAACn3B,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,eAAgB,IACzB,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,SAA3B,MAAsC4C,OAAtC,EAAsCA,EAAIsC,MAAa,IACtDvM,EAAQ,MAAO,IAChB,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,UACpB,MAAJkF,OAAA,EAAAA,EAAMgyB,cAAev+B,EAAQ,WALlC,KAOKA,EAAQ,cAAD,MAAgBuM,OAAhB,EAAgBA,EAAMiyB,eAGlC,kBAACx/B,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,CACEO,QAAS,kBAAMsM,EAAWoC,SAAS,UACnClI,MAAOjG,EAAQ,YAGf0B,MAASqX,QAAQslB,MAAuB,MAAFp0B,OAAA,EAAAA,EAAI8Q,OAAQ,IAClD,kBAAC,GAAD,CACE9b,MAAO,CAAEI,WAAY,IACrBI,QAAS,kBAAMsM,EAAWoC,SAAS,UACnClI,MAAOjG,EAAQ,YAIpB9B,GACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,YAAa0Q,eAAgB,KACtDrW,IAtCP,kBAACc,EAAA,QAAD,KACE,kBAACoI,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,kBAEV6vB,GAAuB,kBAAC,GAAD,KAAIA,GAC5B,kBAAC,GAAD,CACE5pB,MAAOjG,EAAQ,eACfP,QAAS,kBAAM6tB,EAAW,MAACrjB,OAAD,EAACA,EAAIsC,UAqCrC,kBAACvN,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,MAEvB,kBAACP,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBACnD,kBAAChI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,UAGb,kBAAChB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBY,KAAM,IAGR,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,UAEX,kBAACoH,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,MAAO8D,EAAME,cAC7C7D,EAAQ,aAjEjB,MAqEG0uB,OArEH,EAqEGA,EAAQnoB,KAAI,SAACgG,EAAMzP,GAClB,OACE,kBAACkC,EAAA,QAAD,CACEzC,IAAG,IAAMO,EACTmC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBC,WAAY,SACZkpB,gBAAiB,GACjBtT,kBAAmB,GACnBuT,kBAAmB,UAGrB,kBAACpxB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,GAAD,KAAI2E,EAAKA,OAEX,kBAACvN,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBY,KAAM,IAGR,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC3BqN,EAAKgyB,YACJ,kBAAC,GAAD,KAAIhyB,EAAKgyB,aAET,kBAAC/+B,EAAA,EAAD,CAAkBC,QAAS,kBAAM6tB,EAAY/gB,EAAKA,QAChD,kBAAC,GAAD,KAAIvM,EAAQ,YAGfuM,EAAKgyB,eAAL,MAAqBt0B,OAArB,EAAqBA,EAAItK,MACxB,kBAACH,EAAA,EAAD,CACEC,QAAS,kBACPsM,EAAWoC,SAAS,eAAgB,CAClC9J,KAAM,SACNkI,KAAMA,EAAKA,SAIf,kBAAC4J,GAAA,EAAD,CAAQxW,KAAK,OAAOE,MAAO8D,EAAME,YAAajE,KAAM,MAEpD,MAGN,kBAACwH,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB0I,EAAKiyB,mBAOhB,kBAACx/B,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,skBC5J7B,IAiDek/B,GAjDI,SAAC,GAQd,EAPJ1yB,WAOK,IAAD,IANJ/B,YACEJ,EAKE,EALFA,OACAM,EAIE,EAJFA,SACAD,EAGE,EAHFA,GACUtG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAGoBrN,mBAAQ,MAACsL,OAAD,EAACA,EAAItK,MAHjC,WAGGA,EAHH,KAGSqV,EAHT,OAI4BrW,mBAAS,MAJrC,WAIGT,EAJH,KAIa+W,EAJb,KAeJ,OACE,kBAAC+J,GAAA,EAAD,KACE,kBAAChgB,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAEhC,kBAACc,EAAA,QAAD,CACEC,MAAO,CACLsV,eAAgB,GAChBrV,cAAe,MACf+H,WAAY,WAGd,kBAACO,EAAA,EAAD,CACEvI,MAAK,SAAOA,GAAM0E,GAAOvD,WAApB,IAA+BwH,KAAM,IAC1C0O,qBAAsB3S,EAAM4S,kBAC5BrJ,YAAalN,EAAQ,QACrByF,MAAO9F,EACP8H,aAAc,SAACzK,GAAD,OAAOgY,EAAQhY,MAE/B,kBAAC,GAAD,CAAQyC,QA5BG,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACUqE,EAAK,aAAc,CAC5C/D,WAAYkL,EAAOlL,WACnBiB,UAHe,gBACTzB,EADS,EACTA,SAIRgM,EAASN,EAAOlL,YAChBuW,EAAY/W,GANK,6DA4BkB+H,MAAOjG,EAAQ,gB,kbCqFvC0+B,G,qLA7Hbr1B,MAAQ,CACNs1B,UAAW,GACXC,UAAW,GACXrgC,MAAO,KACPgX,QAAS,M,+CAGF,IAAD,SACAvV,EAAU1D,EAAe,SAAC2M,KAAKJ,MAAMmB,YAAYC,SAAxB,EAAC,EAA2B+B,QAErD7B,EAAQlB,KAAKJ,MAAMmB,YAAYJ,OAAOlL,WAHtC,EAK2BuK,KAAKI,MAA9Bs1B,EALF,EAKEA,UAEJA,IAPE,EAKaC,UAOnBjhC,MAASlC,EAAUC,YAAd,kBAA4C,CAC/C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqX,SAAUqB,KAAIC,QAAQioB,GAAYx0B,YAExDlM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GAYL,OAXAnY,QAAQ6H,IAAI,eAAgBsQ,GAExBA,EAAapY,MACf,EAAK6N,SAAS,CAAEmJ,QAAS,KAAMhX,MAAOoY,EAAapY,QAEnD,EAAK6N,SACH,CAAE7N,MAAO,KAAMgX,QAASoB,EAAapB,UACrC,eAIGoB,KAERrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,MA5BhB0K,KAAKmD,SAAS,CAAE7N,MAAOyB,EAAQ,0B,+BAgCzB,IAAD,WAMHiJ,KAAKJ,MAFKlF,GAJP,EAELoI,WAFK,EAGL/B,YACEJ,OAAUjG,OAGR3D,EAAU1D,EAAe,SAAC2M,KAAKJ,MAAMmB,YAAYC,SAAxB,EAAC,EAA2B+B,QAE3D,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,SAAUC,WAAY,WAC5D,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACT6f,SAAU,IACV9f,aAAc,KAGf+B,KAAKI,MAAM9K,MACV,kBAAC6I,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,QAAUoJ,KAAKI,MAAM9K,OACzC0K,KAAKI,MAAMkM,QACb,kBAACnO,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,UAAYoJ,KAAKI,MAAMkM,SAC3C,KAEJ,kBAACvW,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,KAGX,kBAACC,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,GAAIzH,MAAO8D,EAAME,cACvC7D,EAAQ,gBAGX,kBAACwH,EAAA,EAAD,CACEgP,iBAAe,EACf/O,aAAc,SAACk3B,GAAD,OAAe,EAAKvyB,SAAS,CAAEuyB,eAC7Cl5B,MAAOwD,KAAKI,MAAMs1B,UAClB1/B,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,KAGX,kBAACC,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,GAAIzH,MAAO8D,EAAME,cACvC7D,EAAQ,WAGX,kBAACwH,EAAA,EAAD,CACEgP,iBAAe,EACf/O,aAAc,SAACm3B,GAAD,OAAe,EAAKxyB,SAAS,CAAEwyB,eAC7Cn5B,MAAOwD,KAAKI,MAAMu1B,UAClB3/B,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CACEiH,MAAOjG,EAAQ,kBACfP,QAAS,kBAAM,EAAKsW,kB,GArHL5Q,IAAMuE,W,4cCOnC,IAAM1J,GAAU1D,IAwGDuiC,G,qLArGbx1B,MAAQ,CAAEy1B,WAAW,G,EACrBxJ,mBAAqB,4BAAAl3B,EAAAC,OAAA,mDACC,QAAhB0K,UAASC,IAAgC,YAAhBD,UAASC,GADnB,mCAAA5K,EAAA,MAEQwiB,IAAqBA,MAF7B,mBAETE,EAFS,EAETA,OAERtiB,QAAQ6H,IAAI,UAAWya,GAER,YAAXA,EANa,uBAOfgL,MAAM9rB,GAAQ,2BAPC,mBAQR,GARQ,yCAYZ,GAZY,8D,EAerB++B,WAAa,gCAAA3gC,EAAAC,OAAA,kEAAAD,EAAA,MACiB,EAAKk3B,sBADtB,mDAIP,EAAKlpB,SAAS,CAAEglB,SAAS,IAJlB,WAAAhzB,EAAA,MAMYs3B,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EACfmJ,OAAQ,CAAC,EAAG,GACZlJ,QAAQ,KAVH,WAMH5Y,EANG,QAaK8Y,UAbL,wBAcCF,EACY,QAAhB/sB,UAASC,GACLkU,EAAOne,IACP,yBAA2Bme,EAAO4Y,OAjBnC,YAAA13B,EAAA,MAmBqB6gC,KACR,QAAhBl2B,UAASC,GAAe8sB,EAAS5Y,EAAOne,IACxC,CAAC,CAAEmgC,OAAQ,CAAE5/B,MAAO,IAAKC,OAAQ,OACjC,CACEq7B,OAAQqE,KAA4BE,IACpCrJ,QAAQ,IAEVx3B,OAAM,SAACyU,GAAD,OAAOvU,QAAQ6H,IAAI,IAAK0M,OA1B3B,QAmBCqsB,EAnBD,OA4BCC,EACY,QAAhBt2B,UAASC,GACLo2B,EAAYtJ,OACZ,yBAA2BsJ,EAAYtJ,OAE7C,EAAK1pB,SAAS,CAAEglB,SAAS,EAAO0N,WAAW,IAAQ,WACjD,EAAKj2B,MAAMyW,SAAS+f,MAlCjB,wBAqCL,EAAKjzB,SAAS,CAAEglB,SAAS,IArCpB,0DAwCP5yB,QAAQ6H,IAAR,MAxCO,kE,gDA6CH,IAAD,EACwB4C,KAAKI,MAA5By1B,EADD,EACCA,UAAW1N,EADZ,EACYA,QADZ,EAEkBnoB,KAAKJ,MAAtBpD,EAFD,EAECA,MAEFywB,EAJC,EAEQoJ,MAEM,GAAK,IAC1B,OACE,gBAACtgC,EAAA,QAAD,CAAMC,MAAO,CAAEgI,WAAY,SAAUD,eAAgB,WACnD,gBAACxH,EAAA,EAAD,CAAkBC,QAASwJ,KAAK81B,YAC7Bt5B,EACC,gBAACtG,EAAA,EAAD,CACEC,OAAQ,CACNL,IAAK+/B,EAAYr5B,EAAQhK,EAAUC,YAAc+J,GAEnDxG,MAAO,CAAEK,MAAO42B,EAAM32B,OAAQ22B,EAAMhvB,aAAcgvB,EAAO,KAG3D,gBAACl3B,EAAA,QAAD,CACEC,MAAO,CACLiI,aAAcgvB,EAAO,EACrBroB,YAAa,EACbC,YAAa,OACbxO,MAAO42B,EACP32B,OAAQ22B,EACRlvB,eAAgB,SAChBC,WAAY,WAGbmqB,EACC,gBAAC/a,GAAA,EAAD,MAEA,gBAACkpB,GAAA,EAAD,CAAU5/B,KAAK,YAAYE,MAAM,OAAOD,KAAMs2B,EAAO,W,GA5F5C/wB,aCqCVq6B,GAhDM,SAAC,GAAuB,IAArBv1B,EAAoB,EAApBA,GAAIyT,EAAgB,EAAhBA,IAAKvd,EAAW,EAAXA,KACzBH,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9ByzB,EAAO,gCAAmC/hB,EAC1CgiB,EAAgB,gDAAmDD,EAEzE,OACE,kBAACzgC,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAC/C,kBAAC,GAAD,KAAIjH,EAAQ,gBAEZ,kBAACR,EAAA,EAAD,CACEC,QAAS,WACP8d,WAAQoiB,QAAQD,KAGlB,kBAAC1gC,EAAA,QAAD,CACEC,MAAO,CACLI,WAAY,GACZ0H,gBAAiB,UACjBzH,MAAO,GACPC,OAAQ,GACR2H,aAAc,GACdF,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,CAAkBtH,KAAK,WAAWE,MAAM,QAAQD,KAAM,OAI1D,kBAACJ,EAAA,EAAD,CACEC,QAAS,WACP8d,WAAQoiB,QACU,QAAhB52B,UAASC,GAAT,uBAC2B7I,EAD3B,MACqCs/B,EADrC,wBAE4Bt/B,EAF5B,MAEsCs/B,KAI1C,kBAACtgC,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAAO,GAAIC,OAAQ,S,GCzBZ0L,IAAWzI,IAAI,UAAjClD,G,GAAAA,MAAOC,G,GAAAA,OACTqgC,GAActgC,GAAQ,IAItBugC,GAAS,SAAC,GAAuC,IAArC51B,EAAoC,EAApCA,GAAIL,EAAgC,EAAhCA,OAAQ2S,EAAwB,EAAxBA,OAAQujB,EAAgB,EAAhBA,UAC5BphC,EAAsBkL,EAAtBlL,WAAYiF,EAAUiG,EAAVjG,MADgC,EAE1BhF,mBAAS,MAFiB,WAE7Cid,EAF6C,KAEtC4Y,EAFsC,OAGtB71B,mBAAS,IAHa,WAG7CuH,EAH6C,KAGpCquB,EAHoC,OAIlB51B,oBAAS,GAJS,WAI7CmgC,EAJ6C,KAIlCiB,EAJkC,KAK9C//B,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9Bg0B,EAAO,WACXxL,EAAS,MACTD,EAAW,IACX,IAAM7W,EAASjiB,EAAUC,YAAhB,kBACTiC,MAAM+f,EAAK,CACTjgB,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBW,WAAYA,EACZkd,MAAOkjB,EAAYljB,OAAQ5d,EAC3BkI,UACA+5B,IAAG,MAAE1jB,OAAF,EAAEA,EAAQnG,OAGdnY,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAA4B,IAAzBsX,EAAwB,EAAxBA,QAASrX,EAAe,EAAfA,SACZA,GACF4tB,MAAM5tB,GAEJqX,GACFuqB,OAGHxhC,OAAM,SAACC,GACNC,QAAQ6H,IAAI9H,EAAOmf,OAuCzB,OAjCI,kBAAC1e,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf+H,WAAY,SACZ8f,iBAAkB,KAGpB,kBAAC,GAAD,CACEuY,OAAK,EACL75B,MAAOmW,EACP0D,SAAU,SAACwW,GACTtB,EAASsB,GACTiK,GAAa,MAIjB,kBAACv4B,EAAA,EAAD,CACEyuB,WAAS,EACTh3B,MAAO,CAACihC,GAAMv8B,GAAOvD,UAAW,CAAEwH,KAAM,IACxCnC,MAAOS,EACPgH,YAAalN,EAAQ,WACrByH,aAAc8sB,IAGhB,kBAAC/0B,EAAA,EAAD,CAAkBC,QAASugC,GACzB,kBAACT,GAAA,EAAD,CAAU5/B,KAAK,WAAWC,KAAM,SAkK7BugC,GAxJI,SAAC,GAWb,IAVLp0B,EAUI,EAVJA,WAEWwQ,EAQP,EATJxQ,WACE1C,MAASkT,OAQP,IANJvS,YACYtL,EAKR,EALFkL,OAAUlL,WACVkL,EAIE,EAJFA,OACAK,EAGE,EAHFA,GACAC,EAEE,EAFFA,SAEE,EACgCvL,oBAAS,GADzC,WACGyhC,EADH,KACeC,EADf,OAEoB1hC,mBAAS,IAF7B,WAEG0O,EAFH,KAESI,EAFT,OAG4B9O,mBAAS,MAHrC,WAGGT,EAHH,KAGa+W,EAHb,KAKJ,KAAI,MAACsH,OAAD,EAACA,EAAQnG,IACX,OAAO,kBAAC,GAAD,oBAET9Y,qBAAU,WACRwiC,IAEA,IAAMv2B,EAAWC,aAAY,WAC3Bs2B,IACAr9B,EAAK,UAAW,CAAE/D,aAAY0X,GAAE,MAAEmG,OAAF,EAAEA,EAAQ2M,QAC1Chf,EAASxL,KACR,KAEH,OAAO,kBAAM8L,cAAcjB,MAC1B,CAACgT,EAAOnG,KAEX,IAAM0pB,EAAY,4BAAA1hC,EAAAC,OAAA,uDACVqf,EADU,6BACyB9T,EAAOlL,WADhC,OACiD6d,EAAOnG,GADxD,WAAAhY,EAAA,MAEOoE,EAAIkb,IAFX,QAEVxf,EAFU,UAKduP,EAAQvP,EAASmP,MACjB4H,EAAY/W,EAASA,UACrBmiC,GAAc,IAPA,6DA+FlB,OACE,kBAAC52B,GAAA,EAAD,CAAcxK,MAAO,CAAE2I,KAAM,IAC1Bq0B,MAAMqE,QAAQjzB,GACb,kBAACmH,GAAA,EAAD,CACE+rB,mBAAoC,QAAhBx3B,UAASC,GAAeqE,EAAKvK,YAAS9E,EAC1DihB,sBAAuB,CACrB1f,OAAwB,QAAhBwJ,UAASC,GAAezJ,GAAS,SAAMvB,GAEjDyW,KAAMpH,EACNyG,WAxFW,SAAC,GAAqB,IAAD,MAAlBpQ,EAAkB,EAAlBA,KACd88B,GADgC,EAAZ1jC,OACb,SAAA4G,EAAKkgB,WAAL,IAAWxN,OAAX,MAAkBnM,OAAlB,EAAkBA,EAAImM,KAC7BqqB,EACJ,kBAACjhC,EAAA,EAAD,CACEC,QAAS,WAAO,IAAD,EACbsM,EAAWoC,SAAS,UAAW,CAAExO,KAAI,SAAE+D,EAAKkgB,WAAP,EAAE,EAAWjkB,SAGpD,kBAACR,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,aAAV,SAAwBgI,EAAKkgB,WAA7B,EAAwB,EAAW/H,YAClD5c,MAAO,CACLK,MAxIO,GAyIPC,OAzIO,GA0IP2H,aAAcw5B,OAKtB,OACE,kBAAC1hC,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf+H,WAAY,SACZ8f,iBAAkB,EAClB/f,eAAgBw5B,EAAO,WAAa,eAGpCA,EAAgB,KAATC,EACT,kBAACzhC,EAAA,QAAD,CACEC,MAAO,CACL2I,KAAM,EACN2M,eAAgB,GAChBwS,iBAAkB,GAClBhgB,gBAAiBrD,EAAKi9B,SAClB,OACAH,EACA,UACA,QACJr5B,QAAS,GACT4kB,SAAUroB,EAAKi9B,cAAW3iC,EAAY4hC,GAAc,IAAM,IAC1D14B,aAAc,GACd2G,YAAa,GACbC,YAAa,OACbkC,YAAa,OACbC,aAAc,CACZ3Q,MAAO,EACPC,OAAQ,GAEV2Q,cAAe,IACfC,aAAc,KACdC,UAAW,IAGb,kBAACpR,EAAA,QAAD,CACEC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBAE/C,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,SAA3B,SAAsC3D,EAAKkgB,WAA3C,EAAsC,EAAWjkB,OAElD+D,EAAKkY,MACJ,kBAACzc,EAAA,EAAD,CACEC,OAAQ,CACNL,IAAKtD,EAAUC,YAAcgI,EAAKkY,OAEpC3c,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,UAEX,KAEJ,kBAAC,KAAD,KAAejqB,EAAKwC,SAEnBxC,EAAKk9B,aACJ,kBAAC,GAAD,CAAc32B,GAAIA,EAAI9J,KAAMuD,EAAKwC,QAASwX,IAAG,MAGhD8iB,EAAOC,EAAS,OAeflJ,aAAc,SAAC7zB,EAAM5G,GAAP,cAAyBA,GACvC+jC,eACE,kBAAC,KAAD,CAAgB1J,WAAYiJ,EAAYhJ,UAhGhC,WAChBiJ,GAAc,GACdP,OAgGMgB,UAAQ,IAGV,kBAAC9hC,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,GAAD,KAAI1J,IAGR,kBAAC,GAAD,CAAQ+L,GAAIA,EAAIL,OAAQA,EAAQ2S,OAAQA,EAAQujB,UAAWA,M,8aCxOjE,IAAMiB,GAAoBr/B,IAAO,aAAc,cAAcC,IAAI,OAAQ,IAEnEw+B,G,kCACJ,WAAYt3B,GAAQ,IAAD,uBACjB,cAAMA,IAORmX,iBAAmB,WAAO,IAAD,EAGnB,EAAKnX,MADPmB,YAAeJ,EAFM,EAENA,QAEjBgW,EAJuB,EAEEA,gBAEVhW,EAAOlL,aAZL,EA2CnB04B,UAAY,WACV,EAAKhrB,SAAS,CAAEg0B,YAAY,IAAQ,WAClCn3B,KAAK+W,uBA7CU,EAiDnBghB,SAAW,SAAC5qB,EAAIiQ,GAAY,IAAD,IACF,EAAKxd,MAAMmB,YAA1BJ,EADiB,EACjBA,OAAQK,EADS,EACTA,GACVjK,EAAU1D,EAAe,SAAC,EAAKuM,MAAMmB,YAAYC,SAAxB,EAAC,EAA2B+B,QAGrD5F,EAAU,CAACpG,EAAQ,WAEnBihC,GACHv/B,MAASqX,QAAQgoB,MAAwB,MAAF92B,OAAA,EAAAA,EAAI8Q,OAAQ,IAAMsL,EACxD4a,GACF76B,EAAQK,KAAKzG,EAAQ,kBAGvBoG,EAAQK,KAAKzG,EAAQ,WAErB,EAAK6I,MAAMif,2BACT,CACE1hB,UACA+hB,kBAAmB/hB,EAAQtD,OAAS,EACpCslB,uBAAwB,OAE1B,SAAOC,GAAP,iBAAAjqB,EAAAC,OAAA,mDACsB,IAAhBgqB,EADN,uBAEI7pB,QAAQ6H,IAAI,SAAU+P,GAF1B,WAAAhY,EAAA,MAGUqE,EAAK,aAAc,CAAE/D,WAAYkL,EAAOlL,WAAY0X,GAAIA,KAHlE,OAII,EAAK4J,mBAJT,WAMMihB,GAAuC,IAAhB5Y,EAN7B,mCAAAjqB,EAAA,MAO+BqE,EAAK,WAAY,CAC1C/D,WAAYkL,EAAOlL,WACnBu/B,QAAS5X,KATf,gBAOYnoB,EAPZ,EAOYA,SAIR4tB,MAAM5tB,GAXV,iEAtEe,EAwFnBgjC,gBAAkB,WAAO,IAAD,IACC,EAAKr4B,MAAMmB,YAA1BJ,EADc,EACdA,OAAQK,EADM,EACNA,GACR8B,EAAe,EAAKlD,MAApBkD,WAEF/L,EAAU1D,EAAe,SAAC,EAAKuM,MAAMmB,YAAYC,SAAxB,EAAC,EAA2B+B,QAGrD5F,EAAU,CAACpG,EAAQ,mBAEnBmhC,EAAiBz/B,MAASqX,QAAQgoB,MAAwB,MAAF92B,OAAA,EAAAA,EAAI8Q,OAAQ,EAEtEomB,GACF/6B,EAAQK,KAAKzG,EAAQ,WAEvBoG,EAAQK,KAAKzG,EAAQ,WAErB,EAAK6I,MAAMif,2BACT,CACE1hB,UACA+hB,kBAAmB/hB,EAAQtD,OAAS,EACpCslB,uBAAwB,OAE1B,SAAOC,GAAP,SAAAjqB,EAAAC,OAAA,mDACsB,IAAhBgqB,EADN,uBAEI7pB,QAAQ6H,IAAI,aAFhB,WAAAjI,EAAA,MAGUqE,EAAK,YAAa,CAAE/D,WAAYkL,EAAOlL,cAHjD,OAII,EAAKshB,mBAJT,OAMsB,IAAhBqI,GAAqB8Y,GACvBp1B,EAAWoC,SAAS,UAPxB,gEA9Ge,EA2HnB2F,WAAa,YAAsB,IAAD,oCAAlBpQ,EAAkB,EAAlBA,KAAkB,KAAZ5G,MAOhB,EAAK+L,OALPkD,EAF8B,EAE9BA,WAF8B,IAG9B/B,YACEC,EAJ4B,EAI5BA,GAJ4B,IAK5BL,OAAUjG,EALkB,EAKlBA,MAAOjF,EALW,EAKXA,WAKf0iC,GAAe,SAAA19B,EAAKolB,cAAL,IAAcnpB,MAAd,SACjB+D,EAAKolB,cADY,EACjB,EAAcnpB,KACuB,KAArC,SAAA+D,EAAKolB,cAAL,IAAcC,YAAYjmB,QAA1B,SACAY,EAAKolB,UADL,SACA,EAAcC,YAAYC,MAAK,SAAChsB,GAAD,OAAOA,EAAEqpB,UAAF,MAAapc,OAAb,EAAaA,EAAImM,SADvD,SACA,EAA4DwN,WAD5D,EACA,EAAkEjkB,KAClE,WAEE0hC,GAAmB,SAAA39B,EAAKolB,cAAL,IAAclN,OAAd,SACrBlY,EAAKolB,cADgB,EACrB,EAAclN,MACuB,KAArC,SAAAlY,EAAKolB,cAAL,IAAcC,YAAYjmB,QAA1B,SACAY,EAAKolB,UADL,SACA,EAAcC,YAAYC,MAAK,SAAChsB,GAAD,OAAOA,EAAEqpB,UAAF,MAAapc,OAAb,EAAaA,EAAImM,SADvD,SACA,EAA4DwN,WAD5D,EACA,EACI/H,UACJ,KAEEylB,GAAqB,SAAA59B,EAAKolB,cAAL,IAAclN,OAAd,SACvBlY,EAAKolB,cADkB,EACvB,EAAclN,MACuB,KAArC,SAAAlY,EAAKolB,cAAL,IAAcC,YAAYjmB,QAA1B,SACAY,EAAKolB,UADL,SACA,EAAcC,YAAYC,MAAK,SAAChsB,GAAD,OAAOA,EAAEqpB,UAAF,MAAapc,OAAb,EAAaA,EAAImM,SADvD,SACA,EAA4DwN,WAD5D,EACA,EAAkExN,GAClE,KAEJ,OACE,gBAAC5W,EAAA,EAAD,CACEC,QAAS,WAAO,IAAD,EACbgD,EAAK,UAAW,CAAE/D,aAAY0X,GAAI1S,EAAK0S,KACvCrK,EAAWoC,SAAS,UAAW,CAC7BiI,GAAE,SAAE1S,EAAKolB,cAAP,EAAE,EAAc1S,GAClB8S,MAAOxlB,EAAK0S,OAIhB,gBAACpX,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf+H,WAAY,SACZsN,eAAgB,GAChBwS,iBAAkB,KAGnBsa,EACC,gBAACliC,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,YAAc2lC,GACvCpiC,MAAO,CAAEK,MAAO,GAAIC,OAAQ,GAAI2H,aAAc,MAGhD,gBAAClI,EAAA,QAAD,CACEC,MAAO,CACLK,MAAO,GACPC,OAAQ,GACR2H,aAAc,GACdH,gBAAiB,OACjBC,eAAgB,SAChBC,WAAY,WAGd,gBAACs4B,GAAA,EAAD,CAAU5/B,KAAK,aAAaE,MAAM,QAAQD,KAAM,MAGnD8D,EAAKulB,OAAS,EACb,gBAACjqB,EAAA,QAAD,CACEC,MAAO,CACLyH,SAAU,WACVC,IAAK,EACLE,KAAM,GACNvH,MAAO,GACPC,OAAQ,GACR2H,aAAc,GACdH,gBAAiB,MACjBC,eAAgB,SAChBC,WAAY,WAGd,gBAACG,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,UAAY6D,EAAKulB,SAEvC,KAEJ,gBAACjqB,EAAA,QAAD,CAAMC,MAAO,CAAEI,WAAY,GAAIuI,KAAM,IACnC,gBAAC,GAAD,CAAG+L,MAAI,GAEJytB,GAEF19B,EAAK69B,YACJ,gBAAC,GAAD,CAAGrzB,cAAe,GAAIxK,EAAK69B,aACzB,MAGN,gBAACviC,EAAA,QAAD,KACE,gBAACQ,EAAA,EAAD,CACEP,MAAO,CAAEiX,UAAW,YACpBzW,QAAS,kBAAM,EAAKuhC,SAASt9B,EAAK0S,GAAIkrB,IACtCtwB,QAAS,CAAErK,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAEjD,gBAACqP,GAAA,EAAD,CACElX,MAAO,CAAEI,WAAY,IACrBM,KAAK,wBACLC,KAAM,GACNC,MAAO8D,EAAME,eAGjB,gBAAC,GAAD,KACGnC,IAAOgC,EAAK89B,iBAAiB5G,OAC5Bl5B,IAAOgC,EAAK89B,iBAAiBzoB,QAAQrX,MAAS+/B,QAAQ,QAClD,QACA,mBAvOhB,EAAKp4B,MAAQ,CACX+2B,YAAY,GAJG,E,8CAmPT,IAAD,SAOHn3B,KAAKJ,MALPkD,EAFK,EAELA,WAFK,IAGL/B,YACYrG,EAJP,EAIHiG,OAAUjG,MACVsG,EALG,EAKHA,GAIEjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEnByc,EACbxf,KAAKJ,MADPmB,YAAeye,SAIjB,OADAjqB,QAAQ6H,IAAI,WAAYoiB,GAEtB,gBAAChf,GAAA,EAAD,CAAcxK,MAAOmtB,GAAOtX,WAC1B,gBAACN,GAAA,EAAD,CACEE,oBAAqB,WACnB,OACE,gBAAC1V,EAAA,QAAD,KACE,gBAACA,EAAA,QAAD,CACEC,MAAO,CACL+H,eAAgB,WAChB2E,YAAa,GACb8D,UAAW,KAGb,gBAACjQ,EAAA,EAAD,CACEP,MAAO,CAAEiX,UAAW,YACpBzW,QAAS,kBAAM,EAAKyhC,mBACpBlwB,QAAS,CAAErK,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAEjD,gBAACqP,GAAA,EAAD,CACElX,MAAO,CAAEI,WAAY,IACrBM,KAAK,wBACLC,KAAM,GACNC,MAAO8D,EAAME,gBAKnB,gBAACrE,EAAA,EAAD,CACEC,QAAS,WACPsM,EAAWoC,SAAS,UAGtB,gBAACnP,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf+H,WAAY,SACZkpB,gBAAiB,GACjBzkB,kBAAmB,GACnB0kB,kBAAmB,QACnBvT,kBAAmB,KAGrB,gBAAC7d,EAAA,QAAD,CACEC,MAAO,CACLK,MAAO,GACPC,OAAQ,GACR2H,aAAc,GACdH,gBAAiB,OACjBC,eAAgB,SAChBC,WAAY,WAGd,gBAACs4B,GAAA,EAAD,CAAU5/B,KAAK,aAAaE,MAAM,QAAQD,KAAM,MAGlD,gBAACZ,EAAA,QAAD,CAAMC,MAAO,CAAEI,WAAY,GAAIuI,KAAM,IACnC,gBAAC,GAAD,CAAG+L,MAAI,GAEJ3T,EAAQ,kBAQvByU,KAAMgU,EACN3U,WAAY7K,KAAK6K,WACjBukB,uBAAwB,kBAAM,gBAAC,GAAD,OAC9Bd,aAAc,SAAC7zB,EAAM5G,GAAP,OAAiBA,EAAMG,mB,GAxUtBkI,aA+UnBinB,GAASxX,KAAWC,OAAO,CAC/BC,UAAW,CACTlN,KAAM,EACNT,QAAS,MAIEgnB,gCAAmBgS,I,kbC1QnB3yB,G,qLA3FbnE,MAAQ,CACNgE,KAAM,GACNL,MAAO,I,2DAGY,IAAD,OAClB/D,KAAK8D,UACL9D,KAAKM,SAAWC,aAAY,kBAAM,EAAKuD,YAAW,O,6CAIlDvC,cAAcvB,KAAKM,Y,gCAGV,IAAD,OACR5L,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACoP,GACL,EAAKjB,SAAS,CAAEiB,YAEjB/O,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAIH0K,KAAKJ,MAJF,KAELkD,WAFK,EAGL/B,aAAeJ,EAHV,EAGUA,OAAQK,EAHlB,EAGkBA,GAGnBjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAN7B,EAQiB/C,KAAKI,MAArBgE,EARD,EAQCA,KAAML,EARP,EAQOA,MAEd,OACE,kBAAChO,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KAC9BkG,EAAK9G,KAAI,SAAC7C,EAAM5G,GAAP,OACR,kBAACsK,EAAA,QAAD,CACE7K,IAAG,IAAMO,EACTmC,MAAO,CAAEY,MAAO,EAAKgJ,MAAMmB,YAAYJ,OAAOjG,MAAME,cAEnDH,EAAK/D,KAJR,KAIgB+D,EAAKwC,QAAS,SAIlC,kBAACsB,EAAA,EAAD,CACE/B,MAAOuH,EACP/N,MAAO,CACL8H,gBAAiB,OACjBO,SAAU,GACVyJ,OAAQ,GACR5J,QAAS,EACTD,aAAc,GAEhBgG,YAAalN,EAAQ,eACrByH,aAAc,SAACuF,GAAD,OAAW,EAAKZ,SAAS,CAAEY,WACzCG,gBAAiB,YAAgC,IAAdhN,EAAa,EAA5BiN,YAAejN,KACjCxC,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdwH,QAAS/F,MAGVlC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACoP,GACL,EAAKN,UACL,EAAKX,SAAS,CAAEY,MAAO,QAExB1O,OAAM,SAACC,GACNC,QAAQD,MAAMA,c,GAnFXmL,aCmFJkvB,IAjFG3tB,IAAWzI,IAAI,UAAzBlD,MAGM,SAAC,GAUT,EATJyM,WASK,IAAD,IARJ/B,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GAOIjK,GADF,EALF0uB,OAKE,EAJFxkB,SAIE,EAHFia,aAGE,EAFFva,OAAUjG,MAGIrH,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SADhC,EAE4BrN,mBAAS,MAFrC,WAEGT,EAFH,KAEa+W,EAFb,OAG0BtW,oBAAS,GAHnC,WAGYulB,GAHZ,WAgBEwd,EAAc,CAClB,CAAEr9B,KAAM,QAASuX,MAAOlf,EAAQ,MAChC,CACE2H,KAAM,WACNuX,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,aACNuX,MAAOlf,EAAQ,MAEjB,CAAE2H,KAAM,SAAUuX,MAAOlf,EAAQ,MACjC,CAAE2H,KAAM,OAAQuX,MAAOlf,EAAQ,MAC/B,CAAE2H,KAAM,SAAUuX,MAAOlf,EAAQ,MACjC,CACE2H,KAAM,cACNuX,MAAOlf,EAAQ,OAInB,OACE,kBAACsiB,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACpCjJ,EACC,kBAAC,GAAD,KAAIA,IACA,MAAF+L,OAAA,EAAAA,EAAI03B,qBACN,kBAAC3iC,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO6Q,SAAU,SAC5C2xB,EAAYn7B,KAAI,SAACq7B,GAChB,OACE,kBAAC5iC,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,IAAKyR,OAAQ,KACjC,kBAAC5R,EAAA,EAAD,CACEC,OAAQwiC,EAAWhmB,MACnB3c,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,YAEb,kBAAC3uB,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,MACrB,kBAAC,GAAD,CAAGoU,MAAI,GAAE3T,EAAQ4hC,EAAWv9B,OAC5B,kBAAC,GAAD,KAAIrE,EAAQ4hC,EAAWv9B,KAAO,eAEhC,kBAAC,GAAD,CACE4B,MAAOjG,EAAQ,UACfP,QAAS,kBAlDI,SAAOmiC,GAAP,iBAAAxjC,EAAAC,OAAA,uDAC3B6lB,GAAW,GADgB,WAAA9lB,EAAA,MAGAqE,EAAK,mBAAoB,CAClD0H,MAAOP,EAAOlL,WACdkjC,gBALyB,gBAGnB1jC,EAHmB,EAGnBA,SAIRgmB,GAAW,GACXjP,EAAY/W,GARe,4DAkDE2jC,CAAqBD,EAAWv9B,cAOzD,kBAAC,GAAD,KAAIrE,EAAQ,mBAAoBA,EAAO,MAACiK,OAAD,EAACA,EAAI23B,iBCtCrCE,GAtCF,SAAC,GAKP,IAHMvlB,EAGP,EAJJxQ,WACE1C,MAASkT,OAGP,IADJvS,YAAeC,EACX,EADWA,GAAIL,EACf,EADeA,OAAQC,EACvB,EADuBA,SACvB,EAC4BlL,mBAAS,MADrC,WACGT,EADH,KACa+W,EADb,KAGEY,EAAI,MAAG0G,OAAH,EAAGA,EAAQwlB,MAErB5kC,GAAO,YACD,MAAC8M,OAAD,EAACA,EAAIqF,gBACPzF,EAAS,CAAExF,KAAM,aAAcoB,OAAO,OAI1C,IAAMzF,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,KACGd,EACC,kBAAC,GAAD,KAAIA,GAEJ,kBAAC,GAAD,CACE+H,MAAOjG,EAAQ,sBACfP,QAAS,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACoBqE,EAAK,YAAa,CAC3C/D,WAAYkL,EAAOlL,WACnBmX,UAHK,gBACC3X,EADD,EACCA,SAIR+W,EAAY/W,GALL,iE,kbCIJmuB,G,yIA3BH,IAAD,EAIHpjB,KAAKJ,MAJF,KAELkD,WAFK,EAGL/B,aAAeC,EAHV,EAGUA,GAAIL,EAHd,EAGcA,OAGf5J,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAOA,GAAM2K,EAAOjG,OAAOmR,WAC/B,kBAAC1N,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAME,cAChC7D,EAAQ,mBAGX,kBAAC,GAAD,CACEiG,MAAOjG,EAAQ,qBACfP,QAAS,WACP8d,WAAQoiB,QACN,iE,GAnBOj2B,aCiCN0kB,GAlCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACR1qB,EAAQ6H,aAAY,SAACnC,GAAD,OAAWA,EAAMO,OAAOjG,SAElD,OACE,kBAAC3E,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,iBAGjBqnB,EAAK9nB,KAAI,SAAC+nB,GACT,OACE,kBAAC9uB,EAAA,EAAD,CACEP,MAAO,CACL2I,KAAM,EACNrI,OAAQ,GACRwH,gBAAiBunB,EAAInH,SACdxjB,EAAM8H,UADI,KAEb9H,EAAM8H,UACV3D,iBAAkB,EAClBD,iBAAkB,QAClBZ,WAAY,SACZD,eAAgB,UAElBvH,QAAS6uB,EAAI7uB,SAEb,kBAAC,GAAD,KAAI6uB,EAAIroB,aC2FL+7B,GAjHE,SAAC,GASX,IARLj2B,EAQI,EARJA,WAQI,KAPJ/B,YAOI,EANJA,aACEC,EAKE,EALFA,GACAC,EAIE,EAJFA,SACA+3B,EAGE,EAHFA,UAGE,IAFFr4B,OAAUjG,EAER,EAFQA,MAAOjF,EAEf,EAFeA,WAGbsB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG0BrN,oBAAS,GAHnC,WAGGyyB,EAHH,KAGYlN,EAHZ,OAI4BvlB,mBAAS,MAJrC,WAIGujC,EAJH,KAIaC,EAJb,OAK4BxjC,mBAAS,MALrC,WAKGT,EALH,KAKa+W,EALb,OAM0CtW,mBAAS,KANnD,WAMGyjC,EANH,KAMoBC,EANpB,OAOoB1jC,mBAAS,WAP7B,WAOG0F,EAPH,KAOSwqB,EAPT,OAQkBlwB,qBARlB,WAQG+5B,EARH,KAQQ4J,EARR,KAkCJnlC,GAxBsB,0BAAAiB,EAAAC,OAAA,uDACpB6lB,GAAW,GADS,WAAA9lB,EAAA,MAEDoE,EAAI,kBAAkB9D,IAFrB,OAEdm5B,EAFc,OAGpBsK,EAAYtK,GAEZ3T,GAAW,GALS,+DAVlB,IAmCI4D,EAA+BC,2BAA/BD,2BAER,OACE,kBAAC9oB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,kBACtC,kBAAChI,EAAA,QAAD,KACGoyB,GAAW,kBAAC/a,GAAA,EAAD,MACXnY,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,KAAI8B,EAAQ,uBACZ,kBAACwH,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpBqF,MAAO28B,EACP36B,aAAc,SAACzK,GAAD,OAAOqlC,EAAmBrlC,MAG1C,kBAAC,GAAD,CAAGiC,MAAO,CAAEmQ,aAAc,KAA1B,QACA,kBAACmzB,GAAD,CACElU,KAAM,CACJ,CACEpoB,MAAOjG,EAAQ,UACfP,QAAS,kBAAMovB,EAAQ,SACvB1H,SAAmB,SAAT9iB,GAEZ,CACE4B,MAAOjG,EAAQ,UACfP,QAAS,kBAAMovB,EAAQ,SACvB1H,SAAmB,SAAT9iB,GAEZ,CACE4B,MAAOjG,EAAQ,cACfP,QAAS,kBAAMovB,EAAQ,aACvB1H,SAAmB,aAAT9iB,MAKhB,kBAAC,GAAD,CAAGpF,MAAO,CAAEwQ,UAAW,GAAIL,aAAc,KACtCpP,EAAQ,iBADX,KAGA,kBAAC,GAAD,CACEiG,MAAOyyB,EAAMA,EAAIT,KAAOj4B,EAAQ,cAChCP,QAAS,WAEP,IAAM2G,EAAU87B,EAAS37B,KAAI,SAACi8B,GAAD,OAC3BxiC,EAAQ,iBAAkBwiC,EAAQvK,KAAMuK,EAAQtL,UAElD9wB,EAAQK,KAAKzG,EAAQ,WACrB,IACMmoB,EAAoB/hB,EAAQtD,OAAS,EAE3CglB,EACE,CACE1hB,UACA+hB,oBACAC,4BAP2BpqB,IAS7B,SAACqqB,GACCia,EAAOJ,EAAS7Z,WAQ1B,kBAAC,GAAD,CAAQ5oB,QAjFG,8BAAArB,EAAAC,OAAA,uDACb6lB,GAAW,GADE,WAAA9lB,EAAA,MAEuBqE,EAAK,WAAY,CACnD/D,aACA0jC,kBACA/9B,OACAo+B,MAAK,MAAE/J,OAAF,EAAEA,EAAKtiB,MAND,gBAELb,EAFK,EAELA,QAASrX,EAFJ,EAEIA,SAMjBgM,EAASxL,GACTuW,EAAY/W,GACZ+jC,EAAUvjC,GACVwlB,GAAW,GACP3O,GACFxJ,EAAWkF,OAAO,GAbP,8DAiFchL,MAAOjG,EAAQ,cCvGjC0iC,GAAe,CAC1B,CACEr+B,KAAM,WACNs+B,KAAM,IACNxY,OAAQ,IACRyY,WAAY,EACZ7uB,QAAS,GACT6H,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,eACNs+B,KAAM,IACNxY,OAAQ,KACRyY,WAAY,EACZ7uB,QAAS,IACT6H,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,cACNs+B,KAAM,IACNxY,OAAQ,IACRyY,WAAY,GACZ7uB,QAAS,IACT6H,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,YACNs+B,KAAM,IACNxY,OAAQ,KACRyY,WAAY,GACZ7uB,QAAS,IACT6H,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,aACNs+B,KAAM,KACNxY,OAAQ,IACRyY,WAAY,GACZ7uB,QAAS,IACT6H,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,YACNs+B,KAAM,IACNxY,OAAQ,IACRyY,WAAY,IACZ7uB,QAAS,IACT6H,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,OACNs+B,KAAM,KACNxY,OAAQ,IACRyY,WAAY,IACZ7uB,QAAS,IACT6H,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,SACNs+B,KAAM,IACNxY,OAAQ,IACRyY,WAAY,IACZ7uB,QAAS,KACT6H,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,eACNs+B,KAAM,IACNxY,OAAQ,IACRyY,WAAY,IACZ7uB,QAAS,KACT6H,MAAOlf,EAAQ,OAIbmmC,GAAU,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAAS3b,EAA+B,EAA/BA,SAAU1nB,EAAqB,EAArBA,QAASwG,EAAY,EAAZA,MAC7C,OACE,kBAACzG,EAAA,EAAD,CACEP,MAAO,CACLq9B,QAASnV,EAAW,EAAI,GACxBJ,iBAAkB,IAEpBtnB,QAASA,GAET,kBAACN,EAAA,EAAD,CACEC,OAAQ0jC,EAAQlnB,MAChB3c,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,UAEb,kBAAC,GAAD,CAAGha,MAAI,GAAE1N,KAsFA88B,GAlFO,SAAC,GAShB,IARLh3B,EAQI,EARJA,WAQI,KAPJ/B,YAOI,EANJA,aACEC,EAKE,EALFA,GACAC,EAIE,EAJFA,SACA84B,EAGE,EAHFA,gBAGE,IAFFp5B,OAAUjG,EAER,EAFQA,MAAOjF,EAEf,EAFeA,WAGbsB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG0BrN,oBAAS,GAHnC,WAGYulB,GAHZ,aAI4BvlB,mBAAS,MAJrC,WAIawjC,GAJb,aAK4BxjC,mBAAS,MALrC,WAKGT,EALH,KAKa+W,EALb,OAM0CtW,mBAAS,KANnD,WAMGyjC,EANH,KAMoBC,EANpB,OAOoB1jC,mBAAS,WAP7B,WAOG0F,EAPH,KAOSwqB,EAPT,OAQsBlwB,mBAAS,IAR/B,WAQGkvB,EARH,aASsBlvB,mBAAS,MAT/B,WASG67B,EATH,aAUkB77B,sBAVlB,WAUG+5B,EAVH,UAsCJv7B,GA1BsB,0BAAAiB,EAAAC,OAAA,uDACpB6lB,GAAW,GADS,WAAA9lB,EAAA,MAEDoE,EAAI,kBAAkB9D,IAFrB,OAEdm5B,EAFc,OAGpBsK,EAAYtK,GAEZ3T,GAAW,GALS,+DA2BiB6D,2BAA/BD,2BAER,OACE,kBAAC9I,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,KACGd,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,KAAI8B,EAAQ,uBACZ,kBAACwH,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpBqF,MAAO28B,EACP36B,aAAc,SAACzK,GAAD,OAAOqlC,EAAmBrlC,MAG1C,kBAAC,GAAD,CAAGiC,MAAO,CAAEmQ,aAAc,KAA1B,QAEA,kBAACpQ,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO6Q,SAAU,SAC5C2yB,GAAan8B,KAAI,SAACgnB,GACjB,OACE,kBAAC,GAAD,CACEuV,QAASvV,EACTtnB,MAAOjG,EAAQutB,EAAElpB,MACjB5E,QAAS,kBAAMovB,EAAQtB,EAAElpB,OACzB8iB,SAAU9iB,IAASkpB,EAAElpB,YAO/B,kBAAC,GAAD,CAAQ5E,QAhDG,8BAAArB,EAAAC,OAAA,uDACb6lB,GAAW,GADE,WAAA9lB,EAAA,MAEuBqE,EAAK,gBAAiB,CACxD/D,aACA0jC,kBACA/9B,OACAwpB,QACA2M,QACAiI,MAAK,MAAE/J,OAAF,EAAEA,EAAKtiB,MARD,gBAELb,EAFK,EAELA,QAASrX,EAFJ,EAEIA,SAQjBgM,EAASxL,GACTuW,EAAY/W,GACZ8kC,IACA9e,GAAW,GACP3O,GACFxJ,EAAWkF,OAAO,GAfP,8DAgDchL,MAAOjG,EAAQ,cC7C/BijC,GAlIU,SAAC,GASnB,IARLl3B,EAQI,EARJA,WAQI,KAPJ/B,YAOI,EANJA,aACEC,EAKE,EALFA,GACAC,EAIE,EAJFA,SACAg5B,EAGE,EAHFA,kBAGE,IAFFt5B,OAAUjG,EAER,EAFQA,MAAOjF,EAEf,EAFeA,WAGbsB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG0BrN,oBAAS,GAHnC,WAGYulB,GAHZ,aAI4BvlB,mBAAS,MAJrC,WAIGujC,EAJH,KAIaC,EAJb,OAK4BxjC,mBAAS,MALrC,WAKGT,EALH,KAKa+W,EALb,OAM0CtW,mBAAS,KANnD,WAMGyjC,EANH,KAMoBC,EANpB,OAOoB1jC,mBAAS,WAP7B,WAOG0F,EAPH,KAOSwqB,EAPT,OAQsBlwB,mBAAS,IAR/B,WAQGkvB,EARH,KAQUsV,EARV,OASsBxkC,mBAAS,KAT/B,WASG67B,EATH,KASU4I,EATV,OAUkBzkC,qBAVlB,WAUG+5B,EAVH,KAUQ4J,EAVR,KAsCJnlC,GA1BsB,0BAAAiB,EAAAC,OAAA,uDACpB6lB,GAAW,GADS,WAAA9lB,EAAA,MAEDoE,EAAI,kBAAkB9D,IAFrB,OAEdm5B,EAFc,OAGpBsK,EAAYtK,GAEZ3T,GAAW,GALS,+DAZlB,IAuCI4D,EAA+BC,2BAA/BD,2BAER,OACE,kBAAC9oB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,kBACtC,kBAAChI,EAAA,QAAD,KACGd,GAAY,kBAAC,GAAD,KAAIA,GACjB,kBAAC,GAAD,KAAI8B,EAAQ,uBACZ,kBAACwH,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpBqF,MAAO28B,EACP36B,aAAc,SAACzK,GAAD,OAAOqlC,EAAmBrlC,MAG1C,kBAAC,GAAD,CAAGiC,MAAO,CAAEmQ,aAAc,KAA1B,QACA,kBAACmzB,GAAD,CACElU,KAAM,CACJ,CACEpoB,MAAOjG,EAAQ,WACfP,QAAS,kBAAMovB,EAAQ,YACvB1H,SAAmB,YAAT9iB,GAEZ,CACE4B,MAAOjG,EAAQ,QACfP,QAAS,kBAAMovB,EAAQ,SACvB1H,SAAmB,SAAT9iB,GAEZ,CACE4B,MAAOjG,EAAQ,UACfP,QAAS,kBAAMovB,EAAQ,WACvB1H,SAAmB,WAAT9iB,MAKhB,kBAAC,GAAD,CAAGpF,MAAO,CAAEwQ,UAAW,KAAOzP,EAAQ,yBACtC,kBAACwH,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpBqF,MAAOooB,EACPpmB,aAAc,SAACzK,GAAD,OAAOmmC,EAASnmC,MAGhC,kBAAC,GAAD,CAAGiC,MAAO,CAAEwQ,UAAW,KAAOzP,EAAQ,oBACtC,kBAACwH,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpBqF,MAAO+0B,EACP/yB,aAAc,SAACzK,GAAD,OAAOomC,EAASpmC,MAGhC,kBAAC,GAAD,CAAGiC,MAAO,CAAEwQ,UAAW,GAAIL,aAAc,KACtCpP,EAAQ,iBADX,KAGA,kBAAC,GAAD,CACEiG,MAAOyyB,EAAMA,EAAIT,KAAOj4B,EAAQ,cAChCP,QAAS,WAEP,IAAM2G,EAAU87B,EAAS37B,KAAI,SAACi8B,GAAD,OAC3BxiC,EAAQ,yBAA0BwiC,EAAQvK,KAAMuK,EAAQtL,UAE1D9wB,EAAQK,KAAKzG,EAAQ,WACrB,IACMmoB,EAAoB/hB,EAAQtD,OAAS,EAE3CglB,EACE,CACE1hB,UACA+hB,oBACAC,4BAP2BpqB,IAS7B,SAACqqB,GACCia,EAAOJ,EAAS7Z,WAQ1B,kBAAC,GAAD,CAAQ5oB,QAhGG,8BAAArB,EAAAC,OAAA,uDACb6lB,GAAW,GADE,WAAA9lB,EAAA,MAEuBqE,EAAK,mBAAoB,CAC3D/D,aACA0jC,kBACA/9B,OACAwpB,QACA2M,QACAiI,MAAK,MAAE/J,OAAF,EAAEA,EAAKtiB,MARD,gBAELb,EAFK,EAELA,QAASrX,EAFJ,EAEIA,SAQjBgM,EAASxL,GACTuW,EAAY/W,GACZglC,IACAhf,GAAW,GACP3O,GACFxJ,EAAWkF,OAAO,GAfP,8DAgGchL,MAAOjG,EAAQ,c,kbC+C/BqjC,G,kCA5Kb,WAAYx6B,GAAQ,IAAD,uBACjB,cAAMA,IAURiL,WAAa,SAACpQ,EAAM5G,GAAW,IAAD,EAIxB,EAAK+L,MAAMmB,YAFbC,EAF0B,EAE1BA,GACUtG,EAHgB,EAG1BiG,OAAUjG,MAGN2/B,EAAO1kC,KAAKwE,QAAS,MAAF6G,OAAA,EAAAA,EAAIlG,MAAO,KAAOL,EAAK0S,GAAK1S,EAAK0S,KACpDmtB,EAA+B,WAAjB,MAAFt5B,OAAA,EAAAA,EAAI23B,YAAyB,GAAK,GAC9C4B,EAAQF,EAAOC,EAAYA,EAAYD,EAEvCv8B,EACJ,EAAKsC,MAAMyC,WAAapI,EAAK0S,GAAK,eAAYpY,EAChD,OACE,kBAACwB,EAAA,EAAD,CACEC,QAAS,WACP,EAAK2M,SAAS,CAAEN,SAAUpI,EAAK0S,OAGjC,kBAACpX,EAAA,QAAD,CACEzC,IAAG,OAASO,EACZmC,MAAO,CACLC,cAAe,MACfgI,aAAc,GACdC,QAAS,GACTH,eAAgB,gBAChBD,oBAGF,kBAACK,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgBH,EAAKyI,QACjD,kBAAC/E,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB2/B,EAA5C,QAxCW,EA8CnB5X,OAAS,WAAO,IACNhiB,EAAW,EAAKf,MAAMmB,YAAtBJ,OAER,EAAKwC,SAAS,CAAEglB,SAAS,IACzBzzB,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdyN,OAAQ,EAAK9C,MAAMyC,SACnB2Y,QAAS,EAAKpb,MAAMob,YAGrBxmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CACZlO,WACAkzB,SAAS,EACTvyB,OAAQD,KAAKC,SACb4lB,QAAS,KAEX,EAAK5b,MAAMmB,YAAYE,SAASN,EAAOlL,YAPnC,+DASLJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAzED,EA6EnByvB,aAAe,WAAO,IAAD,EACbhuB,EAAU1D,EAAe,SAAC,EAAKuM,MAAMmB,YAAYC,SAAxB,EAAC,EAA2B+B,QAE3D,OACE,kBAAChN,EAAA,QAAD,KACE,kBAAC,GAAD,CACEgL,YAAa,EAAKnB,MAAMmB,YACxBya,QAAS,EAAKpb,MAAMob,QACpB8J,gBAAiB,SAACvxB,GAAD,OAAO,EAAKoP,SAAS,CAAEqY,QAASznB,KACjD6B,OAAQ,EAAKwK,MAAMxK,OACnB2vB,eAAgB,SAACxxB,GAAD,OAAO,EAAKoP,SAAS,CAAEvN,OAAQ7B,OAGjD,kBAAC,GAAD,CACE2G,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MAErC1E,MAAO,CAAEiI,aAAc,GAAIuI,UAAW,IACtCxJ,MAAOjG,EAAQ,SACfP,QAAS,EAAKmsB,WA5FpB,EAAKviB,MAAQ,CACXyC,SAAU,KACV5N,SAAU,KACVumB,QAAS,GACT5lB,OAAQD,KAAKC,UAPE,E,8CAoGT,IAAD,SAOHoK,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MALP,EAQwBsF,KAAKI,MAA5BnL,EARD,EAQCA,SAEF8B,GAVC,EAQW8L,SAEFxP,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SAE9B5F,EAAU,CACd,CACEgQ,GAAI,EACJjK,OAAQnM,EAAQ,iBAElB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,iBAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,iBAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,iBAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,kBAIpB,OACE,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACc,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmV,UAAW,MACjC,kBAAC3V,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAGXA,EAAS2X,MACR,kBAAC,GAAD,CACE5L,GAAIA,EACJ9J,KAAMH,EAAQ,iBACd0d,IAAG,QAAUxf,EAAS2X,OAI1B,kBAAC,GAAD,CACElS,MAAOA,EACPsC,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2M,SAAS,CAAElO,SAAU,WAI7C,kBAAC8gB,GAAA,EAAD,KACG5Y,EAAQG,IAAI0C,KAAK6K,YAEjB7K,KAAK+kB,qB,GArKGtkB,aC2GN+5B,GAzGI,SAAC,GAQb,IAPL13B,EAOI,EAPJA,WAOI,IANJ/B,YACEJ,EAKE,EALFA,OACAK,EAIE,EAJFA,GAEUtG,GAER,EAHFuG,SAGE,EAFFN,OAAUjG,OAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAGgCrN,mBAAS,IAHzC,WAGG+kC,EAHH,KAGeC,EAHf,OAI4BhlC,mBAAS,MAJrC,WAIGT,EAJH,KAIa+W,EAJb,OAKoBtW,mBAAS,QAL7B,WAKG0F,EALH,KAKSwqB,EALT,OAMoBlwB,mBAAS,IAN7B,WAMGgB,EANH,KAMSqV,EANT,KAmBE4uB,EAAgB,4BAAAxlC,EAAAC,OAAA,kEAAAD,EAAA,MACSoE,EAAI,yBACNoH,EAAOlL,aAFd,gBACZglC,EADY,EACZA,WAGRC,EAAcD,GAJM,6DAStB,OAFAvmC,EAAOymC,GAGL,kBAAC5kB,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACrC,kBAACnI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmJ,OAAQ,KAC9B,kBAAC/R,EAAA,QAAD,KACGd,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAEhC,kBAACsJ,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpB8M,YAAalN,EAAQ,QACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAO9F,EACP8H,aAAcuN,IAGhB,kBAAC,GAAD,CACE/V,MAAO,CAAEmQ,aAAc,IACvBnJ,MAAOjG,EAAQqE,EAAO,aACtB5E,QAAS,kBACPovB,EACW,SAATxqB,EAAkB,SAAoB,WAATA,EAAoB,OAAS,WAKhE,kBAAC,GAAD,KACGrE,EACC,gBACS,SAATqE,EAAkB,IAAkB,WAATA,EAAoB,IAAU,IACzDrE,EAAQqE,EAAO,eAInB,kBAAC,GAAD,CAAQ4B,MAAOjG,EAAQ,QAASP,QApDd,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACGqE,EAAK,gBAAiB,CAC/C/D,WAAYkL,EAAOlL,WACnBiB,OACA0E,UAJsB,gBAChBnG,EADgB,EAChBA,SAMR+W,EAAY/W,GACZ0lC,IARwB,+DAsDlB,kBAAC5kC,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,OA/BzB,MAgCGmkC,GAhCH,MAgCGA,EAAYn9B,SAhCf,EAgCGm9B,EAAYn9B,KAAM,SAACs9B,GAAD,OACjB,kBAAC7kC,EAAA,QAAD,CACEC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBAE9C68B,EAAUjgB,MACT,kBAAC,GAAD,CAAMA,KAAMigB,EAAUjgB,KAAMhkB,KAAM,GAAImM,WAAYA,IAGnD83B,EAAUt3B,KACT,kBAAC,GAAD,KAAIs3B,EAAUt3B,MAEd,kBAAC,KAAD,CACEtN,MAAO,CAAEI,WAAY,IACrBmN,MAAO9K,IAAOmiC,EAAU/P,WACrB7Y,IAAI4oB,EAAU9vB,QAAS,WACvBlP,KAAKnD,MAAU,WAClBwS,WAAY,CAAEnN,gBAAiBpD,EAAM8H,WACrC0I,cAAe,CAAEtU,MAAO8D,EAAMiI,eAC9Ba,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,IAAK,KACvBC,WAAY,CAAEm3B,EAAG,KAAMl3B,EAAG,KAAMC,EAAG,cAQ/C,kBAAC7N,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,+DC1G7B,SAASwkC,KACP,IAAIC,EAAYxjB,UAAUwjB,WAAaxjB,UAAUyjB,QAAU/yB,OAAOgzB,MAGlE,MAAI,iBAAiBC,KAAKH,GACjB,UAGL,WAAWG,KAAKH,GACX,UAIL,mBAAmBG,KAAKH,KAAe9yB,OAAOkzB,SACzC,MAGF,UAGT,IAmBeC,GAnBK,WAalB,MAZmC,YAA/BN,OACFvlC,QAAQ6H,IAAI,cACZ6K,OAAO5D,SAASpQ,QAAQzB,EAAUI,kBAGD,QAA/BkoC,OACFvlC,QAAQ6H,IAAI,UACZ6K,OAAO5D,SAASpQ,QAAQzB,EAAUG,cAGpC4C,QAAQ6H,IAAI09B,MAGV,kBAAC,GAAD,KACE,kBAAC,GAAD,4BChCSO,GAJK,SAAC,GAAiC,IAA/Bv4B,EAA8B,EAA9BA,WAAY/B,EAAkB,EAAlBA,YACjC,OAAO,kBAAC,GAAD,CAAM3F,KAAK,OAAO0H,WAAYA,EAAY/B,YAAaA,K,kbCsGjDu6B,G,qLAnGbl7B,MAAQ,CACN6L,MAAO,GACP3W,MAAO,KACPgX,QAAS,M,+CAGF,IAAD,SACsBtM,KAAKI,MAAzB6L,EADF,EACEA,MADF,EACSE,SACfzX,MAASlC,EAAUC,YAAd,kBAA4C,CAC/C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEmX,YAEtBjX,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GAYL,OAXAnY,QAAQ6H,IAAI,eAAgBsQ,GAExBA,EAAapY,MACf,EAAK6N,SAAS,CAAEmJ,QAAS,KAAMhX,MAAOoY,EAAapY,QAEnD,EAAK6N,SACH,CAAE7N,MAAO,KAAMgX,QAASoB,EAAapB,UACrC,eAIGoB,KAERrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOH0K,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aACYrG,EAJP,EAIHiG,OAAUjG,MACVsG,EALG,EAKHA,GAIEjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CACEC,MAAO,CACL8R,OAAQ,GACRiW,SAAU,IACV9f,aAAc,KAGf+B,KAAKI,MAAM9K,MACV,kBAAC6I,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,QAAUoJ,KAAKI,MAAM9K,OACzC0K,KAAKI,MAAMkM,QACb,kBAACnO,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,UAAYoJ,KAAKI,MAAMkM,SAC3C,KAEJ,kBAACvW,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,KAGX,kBAACC,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,UAExC,kBAACwH,EAAA,EAAD,CACE0F,YAAalN,EAAQ,SACrBsW,qBAAsB3S,EAAM4S,kBAC5B9O,aAAc,SAACyN,GAAD,OAAW,EAAK9I,SAAS,CAAE8I,WACzCzP,MAAOwD,KAAKI,MAAM6L,MAClBjW,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CACE2E,MAAOA,EACPlE,QAAS,kBAAM,EAAKsW,SACpB9P,MAAOjG,EAAQ,oB,GA3FTmF,IAAMuE,W,w/BCiVX86B,G,qLArUbn7B,MAAQ,CACNo7B,SAAU,KACVC,YAAY,G,EA8BdC,YAAc,WAAO,IACX/6B,EAAW,EAAKf,MAAMmB,YAAtBJ,OADU,EAES,EAAKP,MAAxBpD,EAFU,EAEVA,MAAOC,EAFG,EAEHA,QACfvI,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACduH,QACAC,cAGDjI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,SAAUqX,EAAc,EAAdA,QACjB,EAAKnJ,SAAS,CAAElO,aACZqX,IACF,EAAKqvB,YACL,EAAKx4B,SAAS,CAAEy4B,UAAU,EAAOC,WAAW,QAG/CxmC,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBwmC,cAAgB,WAAO,IACbn7B,EAAW,EAAKf,MAAMmB,YAAtBJ,OACA1D,EAAY,EAAKmD,MAAjBnD,QACR1H,QAAQ6H,IAAI,oBACZ1I,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACd0X,GAAI,EAAK/M,MAAMy7B,UACf5mC,SAAUgI,MAGXjI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLM,QAAQ6H,IAAI,WAAYnI,GACxB,EAAKkO,SAAS,CAAElG,QAAS,OACzB,EAAK8+B,eAAe,EAAK37B,MAAMy7B,cAEhCxmC,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,EAIpBymC,eAAiB,SAAC5uB,GAAQ,IAChBxM,EAAW,EAAKf,MAAMmB,YAAtBJ,OACRjM,MACKlC,EAAUC,YADV,gBACqCkO,EAAOlL,WAD5C,OAC6D0X,EAChE,CACE3Y,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKkO,SAAS,CAAE64B,MAAO/mC,OAExBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,2DAnGC,IAAD,EAClB0K,KAAK27B,YAEL,IAAMv7B,EAAK,SAAGJ,KAAKJ,MAAMkD,WAAW1C,MAAMkT,aAA/B,EAAG,EAAoClT,MAC9CA,GACFJ,KAAKmD,SAAS/C,K,kCAIL,IAAD,OACFO,EAAWX,KAAKJ,MAAMmB,YAAtBJ,OACRjM,MAASlC,EAAUC,YAAd,iBAA0CkO,EAAOlL,WAAc,CAClEjB,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL,EAAKkO,SAAS,CAAE84B,OAAQhnC,OAEzBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,kCAgFP,IAAD,SAGN0K,KAAKJ,MADPmB,YAAeJ,EAFP,EAEOA,OAAQK,EAFf,EAEeA,GAGnBjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAACgT,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACxBqB,KAAKI,MAAMnL,SAAW,kBAAC,GAAD,KAAI+K,KAAKI,MAAMnL,SAASA,UAAgB,KAC/D,kBAACsJ,EAAA,EAAD,CACEvI,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3B8M,YAAalN,EAAQ,SACrBsW,qBAAsB1M,EAAOjG,MAAM4S,kBACnC9Q,MAAOwD,KAAKI,MAAMpD,MAClBwB,aAAc,SAACxB,GAAD,OAAW,EAAKmG,SAAS,CAAEnG,aAE3C,kBAACuB,EAAA,EAAD,CACEyuB,WAAS,EACT3f,qBAAsB1M,EAAOjG,MAAM4S,kBACnCrI,cAAe,EACfjP,MAAK,SAAOA,GAAM2K,EAAOjG,OAAOvD,WAA3B,IAAsCb,OAAQ,MACnD2N,YAAalN,EAAQ,WACrByF,MAAOwD,KAAKI,MAAMnD,QAClBuB,aAAc,SAACvB,GAAD,OAAa,EAAKkG,SAAS,CAAElG,eAE7C,kBAAC,GAAD,CACEvC,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrC1E,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,QACfP,QAASwJ,KAAK07B,iB,qCAMN,IAAD,SAEI16B,EACbhB,KAAKJ,MADPmB,YAAeC,GAGXjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAACwI,GAAA,EAAD,CACEC,KAAI,SAAExL,KAAKI,MAAM67B,aAAb,EAAE,EAAmBA,OACzB7M,uBAAwB,kBACtB,kBAACr5B,EAAA,QAAD,CACEC,MAAO,CAAEM,OAAQ,GAAKwH,gBAAiB,OAAQzH,MAAO,WAG1DwU,WAAY,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAAkB,EAAZ5G,MACnB,OACE,kBAAC0C,EAAA,EAAD,CACEC,QAAS,WACP,EAAKulC,eAAethC,EAAK0S,IACzB,EAAKhK,SAAS,CAAE04B,UAAWphC,EAAK0S,OAGlC,kBAACpX,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,KAGX,kBAAC,GAAD,KACGnH,EAAQ,UADX,KACwB0D,EAAK/D,MAE7B,kBAAC,GAAD,KACGK,EAAQ,SADX,KACuB0D,EAAKuC,OAE5B,kBAAC,GAAD,KACGjG,EAAQ,gBADX,IAC6B,IAC1B0B,IAAOgC,EAAKyhC,WAAWvK,OAAO,gBAEjC,kBAAC,GAAD,KACGl3B,EAAK0hC,UADR,IACoBplC,EAAQ,iBAMpCu3B,aAAc,SAAC7zB,EAAM5G,GAAP,aAAwBA,O,kCAK/B,IAAD,SAGNmM,KAAKJ,MADPmB,YAAeJ,EAFP,EAEOA,OAAQK,EAFf,EAEeA,GAGnBjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9BtI,EAAOuF,KAAKI,MAAM47B,MACxB,OAAOvhC,EACL,kBAACsb,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CACEC,MAAO,CACL2I,KAAM,EACNmJ,OAAQ,GACR5J,QAAS,GACT0G,YAAa,EACbC,YAAa,UAGf,kBAAC,GAAD,KACG9N,EAAQ,UADX,KACwB0D,EAAKuhC,MAAMtlC,MAEnC,kBAAC,GAAD,KACGK,EAAQ,SADX,KACuB0D,EAAKuhC,MAAMh/B,OAElC,kBAAC,GAAD,KAAIvC,EAAKuhC,MAAM/+B,SACf,kBAAC,GAAD,KACGxC,EAAK0hC,UAAUtiC,OADlB,IAC2B9C,EAAQ,eAIrC,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,GAAD,KAAI5H,EAAQ,aAAZ,KACC0D,EAAK0hC,UAAU7+B,KAAI,SAACrI,GACnB,OACE,kBAACc,EAAA,QAAD,CACEzC,IAAG,OAAS2B,EAASkY,GACrBnX,MAAO,CACL4O,YAAa,EACbC,YAAa,QACb3G,QAAS,GACToN,eAAgB,KAGlB,kBAACvV,EAAA,QAAD,CACEC,MAAO,CACLyH,SAAU,WACVK,gBAAiB6C,EAAOjG,MAAM8H,UAC9B9E,KAAM,GACNO,aAAc,GACdwE,kBAAmB,GACnBykB,gBAAiB,IAGnB,kBAAC,GAAD,KACGjyB,EAASyB,KADZ,MACqB,IAClB+B,IAAOxD,EAAS41B,WAAW8G,OAAO,iBAIvC,kBAAC,KAAD,CACE37B,MAAO,CAAEkB,KAAM,CAAEN,MAAO+J,EAAOjG,MAAME,eAEpC3F,EAASgI,cAOpB,kBAAClH,EAAA,QAAD,KACE,kBAACwI,EAAA,EAAD,CACEyuB,WAAS,EACT/nB,cAAe,EACfjP,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3BkW,qBAAsB1M,EAAOjG,MAAM4S,kBACnCrJ,YAAalN,EAAQ,SACrByF,MAAOwD,KAAKI,MAAMnD,QAClBuB,aAAc,SAACvB,GAAD,OAAa,EAAKkG,SAAS,CAAElG,eAE7C,kBAAC,GAAD,CACEvC,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrC1E,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,QACfP,QAASwJ,KAAK87B,kBAKpB,kBAAC,GAAD,KAAI/kC,EAAQ,oB,+BAIN,IAAD,SAGHiJ,KAAKJ,MADPmB,YAAuBC,GAFlB,EAEUL,OAFV,EAEkBK,IAGnBjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAL7B,EAOyB/C,KAAKI,MAA7Bw7B,EAPD,EAOCA,SAAUC,EAPX,EAOWA,UAClB,OACE,kBAAC9lC,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,GAAD,CACEymB,KAAM,CACJ,CACEpoB,MAAOjG,EAAQ,YACfP,QAAS,kBACP,EAAK2M,SAAS,CAAEy4B,UAAU,EAAMC,WAAW,KAC7C3d,SAAUle,KAAKI,MAAMw7B,UAGvB,CACE5+B,MAAOjG,EAAQ,UACfP,QAAS,kBACP,EAAK2M,SAAS,CAAEy4B,UAAU,EAAOC,WAAW,KAC9C3d,UAAkC,IAAxBle,KAAKI,MAAMw7B,WAAoC,IAAdC,MAKhDD,EACG57B,KAAKo8B,YACLP,EACA77B,KAAK67B,YACL77B,KAAKq8B,oB,GAhUM57B,aC2JRkvB,IAjJG3tB,IAAWzI,IAAI,UAAzBlD,MAGM,SAAC,GAUR,IAAD,IATJyM,EASI,EATJA,WASI,IARJ/B,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GAIUtG,GAER,EALF+qB,OAKE,EAJFxkB,SAIE,EAHFia,aAGE,EAFFva,OAAUjG,OAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAE0BrN,oBAAS,GAFnC,WAEGyyB,EAFH,KAEYlN,EAFZ,OAGoBvlB,mBAAS,IAH7B,WAGG+E,EAHH,KAGS8tB,EAHT,OAI4B7yB,mBAAS,MAJrC,WAIGT,EAJH,KAIa+W,EAJb,KAMEtV,EAAI,SAAGoM,EAAW1C,MAAMkT,aAApB,EAAG,EAAyB5c,KAUhC4lC,EAAe,4BAAAnnC,EAAAC,OAAA,uDACnB6lB,GAAW,GADQ,WAAA9lB,EAAA,MAGQqE,EAAK,WAAY,CAC1C0H,MAAOP,EAAOlL,WACdiB,UALiB,gBAGXzB,EAHW,EAGXA,SAIRgmB,GAAW,GACXjP,EAAY/W,GARO,6DAWrBf,GAnBgB,0BAAAiB,EAAAC,OAAA,uDACd6lB,GAAW,GADG,WAAA9lB,EAAA,MAGKoE,EAAI,aAAa7C,IAHtB,OAGR0Q,EAHQ,OAId6T,GAAW,GACXsN,EAAQnhB,GALM,+DAqBhB,IAWMm1B,EAAW,SAAG9hC,EAAK6xB,YAAR,EAAG,EAAYnC,QAAO,SAAC3uB,EAAMmf,GAAP,OAAgBnf,EAAOmf,EAAKlT,SAAQ,GAE3E,OACE,kBAAC1R,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC4M,GAAA,EAAD,CACE4pB,oBAAqB,WACnB,OACE,kBAAC,KAAD,CAAcn/B,MAAO,CAAEkB,KAAM,CAAEN,MAAO8D,EAAME,eAA5C,MACGH,OADH,EACGA,EAAM2wB,UAIb3f,oBAAqB,WACnB,OACE,kBAAC1V,EAAA,QAAD,CACEC,MAAO,CAAE8R,OAlER,GAkEwB7R,cAAe,MAAO6Q,SAAU,SAEzD,kBAAC/Q,EAAA,QAAD,KACG0E,EAAKkY,MACJ,kBAACzc,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,YAAcgI,EAAKkY,OAC5C3c,MAAO,CAAEK,MAzEhB,IAyE6BC,OAzE7B,KA0EOouB,WAAW,UAGb,kBAACxuB,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MA/EhB,IA+E6BC,OA/E7B,OAmFoB,IAAhBimC,EACC,kBAACrmC,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAtFhB,IAsF6BC,OAtF7B,OAwFO,MAEN,kBAACP,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAzFd,KA0FEqgB,EAAU,kBAAC/a,GAAA,EAAD,MAAwB,KACnC,kBAAC,GAAD,KACGrW,EAAQ,QADX,KACsB0D,EAAK/D,MAE3B,kBAAC,GAAD,KACGK,EAAQ,WADX,KACyB0D,EAAK2uB,SAE9B,kBAAC,GAAD,KACGryB,EAAQ,QADX,WACuBjD,EAAa2G,EAAK6M,MADzC,MAGA,kBAAC,GAAD,KACGvQ,EAAQ,SADX,KACuB0D,EAAK41B,SAE3B,MAACrvB,OAAD,EAACA,EAAIoG,QACHnS,EACC,kBAAC,GAAD,KAAIA,GAEJ,kBAAC,GAAD,CACEuB,QAAS8lC,EACTt/B,MAAOjG,EAAQ,eACf2D,MAAOA,QAOrB8Q,KAAM/Q,EAAK6xB,MACXgC,aAAc,SAAC7zB,EAAM5G,GAAP,aAAwBA,GACtCgX,WAAY,YAAsB,IA/ElBye,EA+ED7uB,EAAkB,EAAlBA,KAAM5G,EAAY,EAAZA,MACDoP,KAAK5H,MAAQZ,EAAKogB,SAEtBrgB,EAAaC,EAAMC,GAEjC,OACE,kBAAC,KAAD,CAAMpH,IAAG,OAASO,EAASmC,MAAO,IAChC,kBAAC,KAAD,CAAKW,KAAM,EAAGX,MAAO,CAAEsV,eAAgB,IACrC,kBAAC,GAAD,CAAMxI,WAAYA,EAAY6X,KAAMlgB,KAEtC,kBAAC,KAAD,CAAKzE,MAAO,CAAE+H,eAAgB,WAC5B,kBAAC,GAAD,MA1FQurB,EA0FS7uB,EAAK6uB,UAzFlCvyB,EA7CoB,IA8ClBuyB,EACI,gBAjDmB,IAkDnBA,EACA,qBAlDc,IAmDdA,EACA,gBACA,sBAoFI,kBAAC,KAAD,CAAKtzB,MAAO,CAAE+H,eAAgB,WAC5B,kBAAC,GAAD,qBAAOtD,EAAKgN,OAAZ,aCjDD+0B,GA1GU,SAAC,GAUpB,EATJ15B,WASK,IAAD,IARJ/B,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GAIUtG,GAER,EALF+qB,OAKE,EAJFxkB,SAIE,EAHFia,aAGE,EAFFva,OAAUjG,OAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAGwBrN,mBAAS,CAAET,SAAU8B,EAAQ,aAHrD,WAGGkd,EAHH,KAGW+V,EAHX,OAI0Bt0B,oBAAS,GAJnC,WAIYulB,GAJZ,WAeJ,OAFA/mB,GAP4B,0BAAAiB,EAAAC,OAAA,uDAC1B6lB,GAAW,GADe,WAAA9lB,EAAA,MAELoE,EAAI,0BAA0BoH,EAAOlL,aAFhC,OAEpBwe,EAFoB,OAG1B+V,EAAU/V,GACVgH,GAAW,GAJe,+DAU1B,kBAAClF,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACpC+V,EAAOhf,SACN,kBAAC,GAAD,KAAIgf,EAAOhf,UAEX,kBAACc,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CAAMC,MAAO,CAAEmQ,aAAc,KAC3B,kBAAC,GAAD,KACGpP,EAAQ,SADX,KACuBkd,EAAOga,QAG/Bha,EAAOwoB,cACN3W,OAAOC,KAAK9R,EAAOwoB,cAAcn/B,KAAI,SAAChK,GACpC,IAAMu+B,EAAQ5d,EAAOwoB,aAAanpC,GAElC,OACE,kBAACyC,EAAA,QAAD,CAAMC,MAAO,CAAEmQ,aAAc,KAC3B,kBAAC,GAAD,CAAGuE,MAAI,EAAC1U,MAAO,CAAEiX,UAAW,SAAU3B,eAAgB,KACnDvU,EAAQzD,IAGX,kBAACyC,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,SAChBC,WAAY,WAGd,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACLK,MAAO,IACPyH,gBAAiBpD,EAAM8H,UACvBtE,QAAS,GACTD,aAAc,KAGhB,kBAAC,GAAD,KACGlH,EAAQ,SADX,KACuB86B,EAAM/f,OAG7B,kBAAC,GAAD,KACG/a,EAAQ,WADX,KACyB86B,EAAMh1B,UAIjC,kBAAC,KAAD,CACEnG,KAAK,aACLE,MAAO8D,EAAME,YACbjE,KAAM,KAGR,kBAACZ,EAAA,QAAD,CACEC,MAAO,CACLK,MAAO,IACPyH,gBAAiBpD,EAAM8H,UACvBtE,QAAS,GACTD,aAAc,KAGf4zB,EAAMlN,MACL,kBAAC,GAAD,KACG5tB,EAAQ,SADX,KACuB86B,EAAM/f,MAAQ,GAGvC,kBAAC,GAAD,KACG+f,EAAMlN,KACA5tB,EAAQ,WADd,KAC6B86B,EAAMlN,KAChC5tB,EAAQ,wBAS9B,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,QCnGdomC,GANI,SAAC,GAAiC,IAA/B55B,EAA8B,EAA9BA,WAAY/B,EAAkB,EAAlBA,YAChC,OACE,kBAAC,GAAD,CAAM3F,KAAK,SAAS0H,WAAYA,EAAY/B,YAAaA,K,kbC4L9C47B,G,kCAvLb,WAAY/8B,GAAQ,IAAD,uBACjB,cAAMA,IAyBR8L,aAAe,WAAO,IAEH1K,EACb,EAAKpB,MADPmB,YAAeC,GAGXjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,KACG,EAAKyuB,SACJztB,EAAQ,gBACRiF,GAAW,MAACgF,OAAD,EAACA,EAAI0G,SAAU,WArCf,EA0CnBmD,WAAa,SAACpQ,EAAM5G,GAAW,IAGf6G,EAEV,EAAKkF,MAHPmB,YACEJ,OAAUjG,MAGRoD,EACJ,EAAKsC,MAAMyC,WAAapI,EAAK0S,GAAK,eAAYpY,EAChD,OACE,kBAACwB,EAAA,EAAD,CACEC,QAAS,WACP,EAAK2M,SAAS,CAAEN,SAAUpI,EAAK0S,OAGjC,kBAACpX,EAAA,QAAD,CACEzC,IAAG,OAASO,EACZmC,MAAO,CACLC,cAAe,MACfgI,aAAc,GACdC,QAAS,GACTH,eAAgB,gBAChBD,oBAGF,kBAACK,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgBH,EAAKyI,WAlEtC,EAwEnByf,OAAS,WAAO,IACNhiB,EAAW,EAAKf,MAAMmB,YAAtBJ,OAER,EAAKwC,SAAS,CAAEglB,SAAS,IACzBzzB,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdyN,OAAQ,EAAK9C,MAAMyC,SACnB2Y,QAAS,EAAKpb,MAAMob,YAGrBxmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CACZlO,WACAkzB,SAAS,EACT3M,QAAS,GACT5lB,OAAQD,KAAKC,WAEf,EAAKgK,MAAMmB,YAAYE,SAASN,EAAOlL,YAPnC,+DASLJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAnGD,EAuGnByvB,aAAe,WAAO,IAAD,EACbhuB,EAAU1D,EAAe,SAAC,EAAKuM,MAAMmB,YAAYC,SAAxB,EAAC,EAA2B+B,QAE3D,OACE,kBAAChN,EAAA,QAAD,KACE,kBAAC,GAAD,CACEgL,YAAa,EAAKnB,MAAMmB,YACxBya,QAAS,EAAKpb,MAAMob,QACpB8J,gBAAiB,SAACvxB,GAAD,OAAO,EAAKoP,SAAS,CAAEqY,QAASznB,KACjD6B,OAAQ,EAAKwK,MAAMxK,OACnB2vB,eAAgB,SAACxxB,GAAD,OAAO,EAAKoP,SAAS,CAAEvN,OAAQ7B,OAGjD,kBAAC,GAAD,CACE2G,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrC1E,MAAO,CAAEiI,aAAc,GAAIuI,UAAW,IACtCxJ,MAAOjG,EAAQ,SACfP,QAAS,EAAKmsB,WAtHpB,EAAKviB,MAAQ,CACXyC,SAAU,KACV5N,SAAU,KACVumB,QAAS,GACT5lB,OAAQD,KAAKC,UANE,E,8CAUVtC,EAAKkJ,GACZ,OACE,kBAACzG,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,WAGd,kBAAC,GAAD,KAAI1K,GACJ,kBAAC,GAAD,KAAIkJ,M,+BAwGA,IAAD,SAOHwD,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MALP,EAQwBsF,KAAKI,MAA5BnL,EARD,EAQCA,SAEF8B,GAVC,EAQW8L,SAEFxP,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SAE9B5F,EAAU,CACd,CACEgQ,GAAI,EACJjK,OAAQnM,EAAQ,eAElB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,gBAIpB,OACE,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGX,WAAY,WAClC,kBAACjI,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,GAAIzR,MAAO,MAC/BpB,EACC,kBAACc,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmV,UAAW,MACjC,kBAAC3V,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAGZ,kBAAC,GAAD,CACEyF,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2M,SAAS,CAAElO,SAAU,WAI7C,kBAAC8gB,GAAA,EAAD,KACG/V,KAAK0L,eAELvO,EAAQG,IAAI0C,KAAK6K,YAEjB7K,KAAK+kB,sB,GA/KFtkB,aCkBH+iB,GAvBQ,SAAC,GAOlB,EANJ1gB,WAMI,EALJ/B,YAKK,IAAD,IAJJA,YACEC,EAGE,EAHFA,GAGE,IAFFL,OAGI5J,GADF,EAFQ2D,MAER,EAFejF,WAGHpC,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SACpC,OACE,kBAACgT,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KAErC,kBAAChI,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAAO,IAAKC,OAAQ,OAE/B,kBAAC,GAAD,KAAIS,EAAQ,gBAEZ,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,kbC8HdsmC,G,kCA1Ib,WAAYh9B,GAAQ,IAAD,uBACjB,cAAMA,IA4BR+iB,OAAS,WAAO,IACNhiB,EAAW,EAAKf,MAAMmB,YAAtBJ,OAER,EAAKwC,SAAS,CAAEglB,SAAS,IACzBzzB,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACd+lB,QAAS,EAAKpb,MAAMob,YAGrBxmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CACZlO,WACAkzB,SAAS,EACT3M,QAAS,GACT5lB,OAAQD,KAAKC,WAEf,EAAKgK,MAAMmB,YAAYE,SAASN,EAAOlL,YAPnC,+DASLJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAvDD,EA2DnByvB,aAAe,WAAO,IAAD,EACI,EAAKnlB,MAAMmB,YAAlBC,GADG,EACXL,OADW,EACHK,IACVjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QACpC,OACE,kBAAChN,EAAA,QAAD,KACG,EAAKyuB,SAASztB,EAAQ,2BAAtB,MAAkDiK,OAAlD,EAAkDA,EAAIwlB,QAEvD,kBAAC,GAAD,CACEzlB,YAAa,EAAKnB,MAAMmB,YACxBya,QAAS,EAAKpb,MAAMob,QACpB8J,gBAAiB,SAACvxB,GAAD,OAAO,EAAKoP,SAAS,CAAEqY,QAASznB,KACjD6B,OAAQ,EAAKwK,MAAMxK,OACnB2vB,eAAgB,SAACxxB,GAAD,OAAO,EAAKoP,SAAS,CAAEvN,OAAQ7B,OAGjD,kBAAC,GAAD,CACE2G,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MAErC1E,MAAO,CAAEwQ,UAAW,IACpBxJ,MAAOjG,EAAQ,mBACfP,QAAS,EAAKmsB,WA/EH,EAqFnB0B,YAAc,SAAO/gB,GAAP,uBAAAnO,EAAAC,OAAA,yDAC+B,EAAKwK,MAAMmB,YAA9CE,EADI,EACJA,SAAUN,EADN,EACMA,OAAQua,EADd,EACcA,aADd,WAAA/lB,EAAA,MAEeqE,EAAK,cAAe,CAC7C8J,OACAlI,KAAM,MACN8F,MAAOP,EAAOlL,cALJ,kBAEJR,SAKRimB,IACAja,EAASN,EAAOlL,YARJ,6DAlFZ,EAAK2K,MAAQ,CACXnL,SAAU,KACVumB,QAAS,GACT5lB,OAAQD,KAAKC,UANE,E,yDAWjBoK,KAAKJ,MAAMmB,YAAYma,iB,+BAEhB5nB,EAAKkJ,GACZ,OACE,kBAACzG,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,WAGd,kBAAC,GAAD,KAAI1K,GACJ,kBAAC,GAAD,KAAIkJ,M,+BAwEA,IAAD,OACCvH,EAAa+K,KAAKI,MAAlBnL,SADD,EAQH+K,KAAKJ,MAJPmB,YACYrG,EALP,EAKHiG,OAAUjG,MACVsG,EANG,EAMHA,GAGE67B,EAASlnC,KAAKsa,KAAqB,GAAhBta,KAAKC,UACxBmB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QACpC,OACE,kBAACgT,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACc,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmV,UAAW,MACjC,kBAAC5d,EAAA,EAAD,CACEF,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BH,OAAQ,CACNL,IACEtD,EAAUC,YAAc,kBAAoBoqC,EAAS,UAG3D,kBAAC1+B,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAGZ,kBAAC,GAAD,CACEyF,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2M,SAAS,CAAElO,SAAU,WAI7C+K,KAAK+kB,qB,GAnIItkB,a,+bCeKuB,IAAWzI,IAAI,UAAjClD,G,GAAAA,MAAOC,G,GAAAA,OACTwmC,GAAYzmC,GAAQ,EAAI,IAAM,IAAMA,GAAQ,EAC5C2P,GAAgB3P,GAAQ,IAExB0mC,GAAyD,EAAzCpnC,KAAKoV,OAAOzU,GAAS,KAAOwmC,IAElD,SAAShC,KACP,IAAIC,EAAYxjB,UAAUwjB,WAAaxjB,UAAUyjB,QAAU/yB,OAAOgzB,MAGlE,MAAI,iBAAiBC,KAAKH,GACjB,UAGL,WAAWG,KAAKH,GACX,UAIL,cAAcG,KAAKH,KAAe9yB,OAAOkzB,SAEpC,MAGF,U,IAuTM6B,G,qLAnTb58B,MAAQ,CACNnL,SAAU,KACVgoC,YAAa,EACbC,qBAAqB,G,EAcvBC,sBAAwB,SAAC/nB,GACF,WAAjBA,IACF,EAAKyB,sBACL,EAAKC,iB,EAITA,aAAe,WAAO,IAAD,EACI,EAAKlX,MAAMmB,YAA1BJ,EADW,EACXA,OAAQK,EADG,EACHA,GAEV+B,EACY,QAAhBjD,UAASC,GACLiX,KAAcC,gBAAgBC,SAASC,aACvCH,KAAcC,gBAAgBC,SAASE,eAAe,GACtC,YAAhBtX,UAASC,GACTiX,KAAcK,YAAYC,iBACV,QAAhBxX,UAASC,GACTwX,UAAUC,SACV,KAGFzU,KAAM,MAAK/B,OAAL,EAAKA,EAAI+B,SACjBvJ,EAAK,gBAAiB,CACpBuJ,SACAtN,WAAYkL,EAAOlL,c,EAIzBohB,oBAAsB,0CAAA1hB,EAAAC,OAAA,qDACG,EAAKwK,MAAMmB,YAA1BJ,EADY,EACZA,OAAQK,EADI,EACJA,IACZyW,IAAcC,UAA4B,QAAhB5X,UAASC,GAFnB,mCAAA5K,EAAA,MAGuBwiB,IACvCA,MAJgB,mBAGFC,EAHE,EAGVC,OAGJC,EAAcF,EACK,YAAnBA,EAPc,oCAAAziB,EAAA,MAQSwiB,IACvBA,MATc,iBAQRE,EARQ,EAQRA,OAGRC,EAAcD,EAXE,WAaE,YAAhBC,EAbc,wBAchB,EAAK3U,SAAS,CAAE+5B,qBAAqB,IAEf,MAAhB,MAAFl8B,OAAA,EAAAA,EAAI+W,YACNve,EAAK,gBAAiB,CACpBue,UAAW,GACXtiB,WAAYkL,EAAOlL,aAnBP,8CAAAN,EAAA,MAyBGioC,2BAzBH,SAyBZl8B,EAzBY,OAyB0CsK,SACnD,MAAKxK,OAAL,EAAKA,EAAI+W,YAChBve,EAAK,gBAAiB,CACpBue,UAAW7W,EACXzL,WAAYkL,EAAOlL,aAGvB,EAAK0N,SAAS,CAAE+5B,qBAAqB,IAhCnB,8D,EAoCtBG,YAAc,YAAsB,IAAnB5iC,EAAkB,EAAlBA,KAAkB,KAAZ5G,MAOjB,EAAK+L,OALPkD,EAF+B,EAE/BA,WAF+B,IAG/B/B,YACEH,EAJ6B,EAI7BA,SACUlG,EALmB,EAK7BiG,OAAUjG,MAId,OACE,kBAAC3E,EAAA,QAAD,CACEC,MAAO,CACL2I,KAAM,EACNZ,eAAgB,SAChB9H,cAAe,MACf6Q,SAAU,OACVwE,eAAgB,KAGjB7Q,EAAK6C,KAAI,SAACqX,EAAM9gB,GACf,IAAMwO,EAAUC,GAAKqS,EAAKjD,UAC1B,OACE,kBAAC3b,EAAA,QAAD,CACEzC,IAAG,IAAMO,EACTmC,MAAO,CAAEK,MAAOymC,GAAW9+B,WAAY,WAEvC,kBAACzH,EAAA,EAAD,CACEP,MAAO,CACL4O,YAAa,EACbC,YAAa,OACb/G,gBAAiBpD,EAAM8H,UACvBvE,aAAc,GACd5H,MAAOymC,GAAY,GACnBxmC,OAAQwmC,GAAY,GACpB/+B,eAAgB,SAChBC,WAAY,UAEdxH,QAAS,SAACsT,GACRhH,EAAWoC,SAASyP,EAAKhD,IAEzB,IAAM4B,EAAW,CACfC,OAAQ,YAAcmB,EAAKhD,GAC3B8B,UAAW3J,EAAE3F,YAAYsP,UACzBC,UAAW5J,EAAE3F,YAAYuP,UACzBC,UAAW1Q,KAAK5H,OAGlBuF,EAAS,CAAExF,KAAM,eAAgBoB,MAAO+W,MAGzClR,GACC,kBAACA,EAAD,CACE3L,KAAMie,EAAKzS,KACXvL,MAAOmmC,GAAY,IAAM,EACzBlmC,MAAO8D,EAAMiI,iBAInB,kBAAC5M,EAAA,QAAD,KACE,kBAACoI,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB+Z,EAAKzd,MAChDyd,EAAKtd,iB,2DAtIlBoe,KAAStV,iBAAiB,SAAUH,KAAKm9B,uBAEzCn9B,KAAK6W,sBACL7W,KAAK8W,iB,6CAILrB,KAASC,oBAAoB,SAAU1V,KAAKm9B,yB,uCAwI5B,IAAD,SAGXn9B,KAAKJ,MADPmB,YAAyBC,GAFZ,EAEEJ,SAFF,EAEYI,IAAIL,EAFhB,EAEgBA,OAGvBu8B,EAAwBl9B,KAAKI,MAA7B88B,oBAYFI,EAVK,cACNvtB,GAAS/O,EAAIL,EAAOjG,OAAOyvB,QAC5B,SAAClG,EAAUpnB,GAAX,oBAA2BonB,GAA3B,IAAwCpnB,EAAQ4U,YAChD,KAHO,IAKNa,GAAUtR,EAAIL,EAAOjG,OAAOyvB,QAC7B,SAAClG,EAAUpnB,GAAX,oBAA2BonB,GAA3B,IAAwCpnB,EAAQ4U,YAChD,MAGmB1S,QAAO,SAAC4V,GAAD,OAAWA,EAAKpD,WAAaoD,EAAK7B,WAE1D/b,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9ByI,EAAO,CACX8xB,EAAS1d,MAAM,EAAGmd,IAClBO,EAAS1d,MAAMmd,GAA+B,EAAhBA,IACd,EAAhBA,GAAoBO,EAASzjC,YACzB9E,EACAuoC,EAAS1d,MAAsB,EAAhBmd,GAAmBO,EAASzjC,SAC/CkF,QAAO,SAAChL,GAAD,QAASA,KAElB,OACE,kBAACgC,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IAClBu+B,GACC,kBAAC3mC,EAAA,EAAD,CACEC,QAAS,WACS,QAAhBsJ,UAASC,GACLuU,WAAQoiB,QAAQ,iBAChB6G,IACEA,OAIR,kBAACxnC,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,EACTjI,cAAe,MACf+H,WAAY,WAGd,kBAAC,KAAD,CACEtH,KAAK,qBACLE,MAAM,MACNZ,MAAO,CAAE0M,YAAa,MAExB,kBAAC,GAAD,KAAI3L,EAAQ,8BAKlB,kBAAC,KAAD,CACE0H,IAAK,SAAC3E,GACJ,EAAK0jC,UAAY1jC,GAEnB0R,KAAMA,EACNX,WAAY7K,KAAKq9B,YACjBI,YAAapnC,GACbqnC,aAAc,SAAC7pC,GAAD,OAAW,EAAKsP,SAAS,CAAE85B,YAAappC,KACtDipC,UAAWzmC,KAGb,kBAAC,KAAD,CACEsnC,WAAYnyB,EAAK3R,OACjB+jC,eAAgB59B,KAAKI,MAAM68B,YAE3BY,SAAU,CACRxnC,MAAO,GACPC,OAAQ,GACR2H,aAAc,EACd6f,iBAAkB,EAClBhgB,gBAAiB,6BAEnBggC,iBACE,GAIFC,mBAAoB,GACpBC,iBAAkB,Q,+BAKhB,IAAD,EAKHh+B,KAAKJ,MAAMmB,YAHbJ,EAFK,EAELA,OAEAK,GAJK,EAGLL,OAAUjG,MAHL,EAILsG,IAGIjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAY9Bu6B,EAVK,cACNvtB,GAAS/O,EAAIL,EAAOjG,OAAOyvB,QAC5B,SAAClG,EAAUpnB,GAAX,oBAA2BonB,GAA3B,IAAwCpnB,EAAQ4U,YAChD,KAHO,IAKNa,GAAUtR,EAAIL,EAAOjG,OAAOyvB,QAC7B,SAAClG,EAAUpnB,GAAX,oBAA2BonB,GAA3B,IAAwCpnB,EAAQ4U,YAChD,MAGmB1S,QAAO,SAAC4V,GAAD,OAAWA,EAAKpD,WAAaoD,EAAK7B,WAE5DmrB,EAAU,KAWd,MAVoB,QAAhBn+B,UAASC,KACwB,YAA/B+6B,OACFmD,EAAUzrC,EAAUI,iBAGa,QAA/BkoC,OACFmD,EAAUzrC,EAAUG,cAIJ,QAAhBmN,UAASC,GACPiG,GAEA,kBAAC+P,GAAA,EAAD,KACGkoB,GACC,kBAAC1nC,EAAA,EAAD,CAAkBC,QAAS,kBAAM8d,WAAQoiB,QAAQuH,KAC/C,kBAACloC,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,EACTjI,cAAe,MACf+H,WAAY,WAGd,kBAAC,KAAD,CACEtH,KAAK,qBACLE,MAAM,MACNZ,MAAO,CAAE0M,YAAa,MAExB,kBAAC,GAAD,KAAI3L,EAAQ,qBAKjBiJ,KAAKq9B,YAAY,CAAE5iC,KAAM6iC,KAIvB,kBAAC,GAAD,KAAIvmC,EAAQ,gBAGhBiJ,KAAKk+B,qB,GAhTGz9B,a,kbCmDJ09B,G,qLA9Fb/9B,MAAQ,CACNnL,SAAU,M,EAUZmpC,KAAO,SAAC1nC,GAAU,IAECiK,EACb,EAAKf,MADPmB,YAAeJ,OAGjBjM,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBW,WAAYkL,EAAOlL,WACnBiB,WAGD1B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,aAChB,EAAK2K,MAAMmB,YAAYE,SAASN,EAAOlL,YAFnC,+DAILJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,2DA7BC,IAAD,EACZoB,EAAI,SAAGsJ,KAAKJ,MAAMkD,WAAW1C,MAAMkT,aAA/B,EAAG,EAAoC5c,KAC7CA,GACFsJ,KAAKmD,SAAS,CAAEzM,W,mCA6BN,IAAD,SAGPsJ,KAAKJ,MADPmB,YAAeJ,EAFN,EAEMA,OAAQK,EAFd,EAEcA,GAGnBjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEnB/C,KAAKI,MAAd1J,KACR,OACE,kBAACX,EAAA,QAAD,KACE,kBAACwI,EAAA,EAAD,CACEvI,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3B8M,YAAalN,EAAQ,QACrBsW,qBAAsB1M,EAAOjG,MAAM4S,kBACnC9Q,MAAOwD,KAAKI,MAAM1J,KAClB8H,aAAc,SAAC9H,GAAD,OAAU,EAAKyM,SAAS,CAAEzM,YAE1C,kBAAC,GAAD,CACEgE,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrC1E,MAAO,CAAEwQ,UAAW,IACpBxJ,MAAOjG,EAAQ,QACfP,QAAS,kBAAM,EAAK4nC,KAAK,EAAKh+B,MAAM1J,SAEtC,kBAAC,GAAD,CACEgE,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrC1E,MAAO,CAAEwQ,UAAW,IACpBxJ,MAAOjG,EAAQ,gBACfP,QAAS,kBAAM,EAAK4nC,KAAL,MAAUp9B,OAAV,EAAUA,EAAItK,Y,+BAK3B,IAAD,EAOHsJ,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aAEYrG,GALP,EAIHsG,GAJG,EAKHL,OAAUjG,OAGNzF,EAAa+K,KAAKI,MAAlBnL,SAER,OACE,kBAACc,EAAA,QAAD,CAAMC,MAAOA,GAAM0E,GAAOmR,WACxB,kBAAC9V,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAEV,KAEH+K,KAAKujB,mB,GAxFO9iB,aCgDR49B,GAhDF,SAAC,GAOP,IANLt9B,EAMI,EANJA,YAMI,IALJA,YACEC,EAIE,EAJFA,GACAL,EAGE,EAHFA,OACUjG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAE0BrN,mBAAS,IAFnC,WAEG8lB,EAFH,KAEYmK,EAFZ,OAGwBjwB,mBAASC,KAAKC,UAHtC,WAGGA,EAHH,KAGWC,EAHX,OAI4BH,mBAAS,MAJrC,WAIGT,EAJH,KAIa+W,EAJb,KAcEsyB,EAAS3oC,KAAKwE,QAAS,MAAF6G,OAAA,EAAAA,EAAIu9B,YAAat7B,KAAK5H,OAAvB,KAE1B,OACE,kBAACtF,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAAC,GAAD,KAAIA,IACA,MAAF+L,OAAA,EAAAA,EAAIu9B,YAAat7B,KAAK5H,MACxB,kBAAC,GAAD,KAAItE,EAAQ,WAAYunC,IAExB,kBAACvoC,EAAA,QAAD,KACE,kBAAC,GAAD,CACEgL,YAAaA,EACbya,QAASA,EACT8J,gBAAiBK,EACjB/vB,OAAQA,EACR2vB,eAAgB1vB,IAGlB,kBAAC,GAAD,CAAQ6E,MAAOA,EAAOsC,MAAOjG,EAAQ,WAAYP,QA3B5C,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACcqE,EAAK,OAAQ,CACtC0H,MAAOP,EAAOlL,WACd+lB,aAHW,gBACLvmB,EADK,EACLA,SAIR+W,EAAY/W,GALC,mE,UC0DFupC,GAxEG,SAAC,GAQZ,IAPL17B,EAOI,EAPJA,WAOI,IANJ/B,YACEC,EAKE,EALFA,GACAka,EAIE,EAJFA,aACAuK,EAGE,EAHFA,OACU/qB,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC7O,EAAOgnB,GAEP,IAAImB,EAAS,EAYb,OAXAphB,EACGqC,KAAI,SAACmhC,GAAD,OAAOA,EAAE/nC,QACb/C,SAAQ,SAACmiB,GACR,aAAO2P,OAAP,EAAOA,EAAQ9xB,SAAQ,SAAC2P,EAAMzP,GAExByP,EADgBwS,EAAN,YACV,MAAmB9U,OAAnB,EAAmBA,EAAItK,QAAvB,MAA+BsK,OAA/B,EAA+BA,EAAItK,QACrC2lB,GAAU,SAMhB,kBAACtmB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KAC/B,kBAAC,GAAD,CAAGwM,MAAI,GACJ3T,EAAQ,WADX,IACwBslB,EAAQ,IACdtlB,EAAJ,IAAXslB,EAAuB,WAAsB,cAFhD,KAKCphB,EACEqC,KAAI,SAACmhC,GAAD,OAAOA,EAAE/nC,QACb4G,KAAI,SAACwY,GACJ,aAAO2P,OAAP,EAAOA,EAAQnoB,KAAI,SAACgG,EAAMzP,GACxB,IAAM6qC,EAAc5oB,EAAN,QACR6oB,EAAiB5nC,EAAQ+e,GAE/B,QADuB/gB,IAAnB4pC,GAA8BppC,QAAQ6H,IAAI0Y,GAC1CxS,EAAKo7B,MAAL,MAAmB19B,OAAnB,EAAmBA,EAAItK,QAAvB,MAA+BsK,OAA/B,EAA+BA,EAAItK,MACrC,OACE,kBAACX,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBC,WAAY,WAGd,kBAAC,GAAD,KAAO2gC,EAAP,OAA4Br7B,EAAKA,MACjC,kBAAC,GAAD,CACEhQ,IAAG,QAAUO,EAAQiiB,EACrB9f,MAAO,CAAEsV,eAAgB,IACzB5Q,MAAOA,EACPsC,MAAOjG,EAAQ,UACfP,QAAS,kBACPsM,EAAWoC,SAAS,eAAgB,CAClC9J,KAAM0a,EACNxS,KAAMA,EAAKA,iBAU7B,kBAACvN,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,8aC/D7B,IAAMsoC,GAAwBnmC,IAAO,aAAc,cAAcC,IAC/D,OACA,IAGI0qB,G,qLACJhjB,MAAQ,CACNnL,SAAU,M,gDAEH3B,EAAKkJ,GACZ,OACE,kBAACzG,EAAA,QAAD,CAAMC,MAAOmtB,GAAOiD,KAClB,kBAAC,GAAD,KAAI9yB,GACJ,kBAAC,GAAD,KAAIkJ,M,+BAIA,IAAD,OACCvH,EAAa+K,KAAKI,MAAlBnL,SADD,EAOH+K,KAAKJ,MAHPkD,EAJK,EAILA,WACA/B,EALK,EAKLA,YALK,IAMLA,YAAeC,EANV,EAMUA,GAAIC,EANd,EAMcA,SAAUN,EANxB,EAMwBA,OAGzB5J,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9B87B,EAAMlpC,KAAKwE,QAAS,MAAF6G,OAAA,EAAAA,EAAI89B,cAAe77B,KAAK5H,OAAS,MAEzD,OACE,kBAAC0a,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACxB1J,EAAW,kBAAC,GAAD,KAAIA,GAAgB,MAE7B,MAAF+L,OAAA,EAAAA,EAAI89B,cAAe77B,KAAK5H,MACvB,kBAAC,KAAD,CACE7E,QAAS,WAEP9B,MAASlC,EAAUC,YAAd,oBAA8C,CACjD+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEoM,MAAOP,EAAOlL,eAEpCT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASH,EAAT,EAASA,SACb,EAAKkO,SAAS,CAAElO,aAChBgM,EAASN,EAAOlL,YAFZ,+DAILJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,QAIpB,kBAACS,EAAA,QAAD,KACE,kBAAC,GAAD,KAAIgB,EAAQ,iBAAkB8nC,MAGhC,MAED,MAAF79B,OAAA,EAAAA,EAAI03B,uBACFjgC,MAASqX,QAAQ8uB,MAA4B,MAAF59B,OAAA,EAAAA,EAAI8Q,OAAQ,IACtD,kBAAC/b,EAAA,QAAD,KACE,kBAAC,GAAD,KAAIgB,EAAQ,kCACZ,kBAAC,GAAD,CACEiG,MAAOjG,EAAQ,mCACfP,QAAS,kBAAMsM,EAAWoC,SAAS,wBAK3C,kBAACnP,EAAA,QAAD,CAAMC,MAAO,CAAE8nB,iBAAkB,KAC9B9d,KAAKwkB,SAASztB,EAAQ,QAAtB,gBAAmCiK,OAAnC,EAAmCA,EAAIqG,OACvCrH,KAAKwkB,SAASztB,EAAQ,QAAtB,gBAAmCiK,OAAnC,EAAmCA,EAAIsG,OACvCtH,KAAKwkB,SAASztB,EAAQ,cAAtB,MAAqCiK,OAArC,EAAqCA,EAAIwG,YACzCxH,KAAKwkB,SAASztB,EAAQ,QAASgF,GAAO,MAACiF,OAAD,EAACA,EAAIlG,KAAM,SACjDkF,KAAKwkB,SACJztB,EAAQ,YACRiF,GAAW,MAACgF,OAAD,EAACA,EAAI0G,SAAU,SAE3B1H,KAAKwkB,SAASztB,EAAQ,WAAtB,MAAoCiK,OAApC,EAAoCA,EAAIyG,QAAxC,KACAzH,KAAKwkB,SAASztB,EAAQ,WAAtB,MAAkCiK,OAAlC,EAAkCA,EAAIuG,SACtCvH,KAAKwkB,SAASztB,EAAQ,QAAtB,MAA+BiK,OAA/B,EAA+BA,EAAIulB,MACnCvmB,KAAKwkB,SAASztB,EAAQ,WAAtB,MAAkCiK,OAAlC,EAAkCA,EAAI0b,SACtC1c,KAAKwkB,SAASztB,EAAQ,eAAtB,MAAsCiK,OAAtC,EAAsCA,EAAIwlB,SAG7C,kBAAC,GAAD,CAAW1jB,WAAYA,EAAY/B,YAAaA,S,GApFnCN,aA0Ff0iB,GAASxX,KAAWC,OAAO,CAC/Bwa,IAAK,CACHnwB,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,YAIDolB,MCrEAmR,GAtCE,SAAC30B,GAAW,IAAD,EACpB7I,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAEhDqiB,EAAO,CACX,CACE9xB,IAAK,SACL0J,MAAOjG,EAAQ,cACfM,UAAW+rB,IAEb,CACE9vB,IAAK,SACL0J,MAAOjG,EAAQ,cACfM,UAAW69B,IAEb,CACE5hC,IAAK,OACL0J,MAAOjG,EAAQ,YACfM,UAAWgnC,KAjBW,EAqBJ3oC,mBAAS0vB,EAAK,GAAG9xB,KArBb,WAqBnB+xB,EArBmB,KAqBdY,EArBc,KAsBpBxlB,EAAY2kB,EAAKrF,MAAK,SAACuE,GAAD,OAAOA,EAAEhxB,MAAQ+xB,KAAKhuB,UAClD,OACE,kBAACtB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC8B,EAAcb,IAEjB,kBAAC,GAAD,CACEwlB,KAAMA,EAAK9nB,KAAI,SAACgnB,GAAD,MAAQ,CACrBtnB,MAAOsnB,EAAEtnB,MACTkhB,SAAUmH,IAAQf,EAAEhxB,IACpBkD,QAAS,kBAAMyvB,EAAO3B,EAAEhxB,cCAnByrC,GAnCF,SAAC,GAA+D,IAA7Dj8B,EAA4D,EAA5DA,WAAY9F,EAAgD,EAAhDA,MAAO2U,EAAyC,EAAzCA,GAAInb,EAAqC,EAArCA,QAASwoC,EAA4B,EAA5BA,SAAU98B,EAAkB,EAAlBA,KAAMxH,EAAY,EAAZA,MACxD2H,EAAU28B,GAAY98B,EAAOI,GAAK08B,GAAY,KACpD,OACE,kBAACzoC,EAAA,EAAD,CACEC,QAAS,kBAAOA,EAAUA,IAAYsM,EAAWoC,SAASyM,KAE1D,kBAAC5b,EAAA,QAAD,CACEC,MAAO,CACLgI,WAAY,SACZD,eAAgB,gBAChB9H,cAAe,MACfwM,kBAAmB,GACnBmR,kBAAmB,GACnBuT,kBAAmB,QACnBD,gBAAiB,KAGnB,kBAACnxB,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAC/C,kBAACjI,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,KACnBgM,GACC,kBAACA,EAAD,CAAS3L,KAAMwL,EAAMvL,KAAM,GAAIC,MAAO8D,EAAME,eAGhD,kBAACuD,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgBoC,IAE9C,kBAAC,KAAD,CACEtG,KAAK,uBACLC,KAAM,GACNC,MAAO8D,EAAME,iB,kbCyCRwoB,G,yIAnEH,IAAD,EAOHpjB,KAAKJ,MALPkD,EAFK,EAELA,WAFK,IAGL/B,YACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAIR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,KACmB,QAAhB+J,UAASC,IACR,kBAAC,GAAD,CACErF,MAAOA,EACPsC,MAAOjG,EAAQ,eACfP,QAAS,kBAAM8e,QACf0pB,SAAS,YACT98B,KAAK,UAIT,kBAAC,GAAD,CACExH,MAAOA,EACPsC,MAAOjG,EAAQ,sBACfP,QAAS,kBAAM8d,WAAQoiB,QAAQ,oCAC/BsI,SAAS,YACT98B,KAAK,UAEP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,YACf4a,GAAG,WACHqtB,SAAS,YACT98B,KAAK,eAEP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,iBACf4a,GAAG,UACHqtB,SAAS,YACT98B,KAAK,eAEP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,SACf4a,GAAG,YACHqtB,SAAS,YACT98B,KAAK,eAEP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,cACf4a,GAAG,aACHqtB,SAAS,SACT98B,KAAK,iB,GA7DMzB,aCgENw+B,GA5DK,SAAC,GAAwC,EAAtCn8B,WAAuC,IAAZ9B,EAAW,EAA1BD,YAAeC,GAC1C+B,EAAS5P,EAAS,MAAC6N,OAAD,EAACA,EAAI+B,QAEvBm8B,EAAa,GAmDnB,OAlDAA,EAAWC,GACT,kBAACppC,EAAA,QAAD,KACE,kBAAC,GAAD,qBAGJmpC,EAAWE,GACT,kBAACrpC,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACrB,kBAAC,GAAD,8BACA,kBAAC,GAAD,ihBAWA,kBAAC,GAAD,oCACA,kBAAC,GAAD,6TAQA,kBAAC,GAAD,uDACA,kBAAC,GAAD,2FAIA,kBAAC,GAAD,sHAIA,kBAAC,GAAD,wCACA,kBAAC,GAAD,8FAIA,kBAAC,GAAD,iEACA,kBAAC,GAAD,uKAQF,kBAACiO,GAAA,EAAD,CAAYC,sBAAuB,CAAEhY,WAAY,WAC9CkhC,EAAWn8B,KCaHk8B,GAxEK,SAAC,GAAwC,EAAtCn8B,WAAuC,IAAZ9B,EAAW,EAA1BD,YAAeC,GAC1Cq+B,EAAU,CAEhBA,GAAA,cACAA,GAAA,woGA0DMnoC,EAAOmoC,EAFElsC,EAAS,MAAC6N,OAAD,EAACA,EAAI+B,SAI7B,OACE,kBAACgT,GAAA,EAAD,KACE,kBAAChgB,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACrB,kBAAC,GAAD,KAAI5Q,M,kbC+CGyT,G,qLAhHbvK,MAAQ,CACNwK,KAAM,I,EAwBRC,WAAa,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAAkB,KAAZ5G,MAGhB,EAAK+L,MADPmB,aAAeC,EAFe,EAEfA,GAAIL,EAFW,EAEXA,OAAQM,EAFG,EAEHA,SAGvBlK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9B+H,EAAUnV,KAAKoV,OAAOtQ,EAAKuQ,OAAS/H,KAAK5H,OAAS,KAExD,OACE,kBAACtF,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,KAAIwE,EAAK/D,MACT,kBAAC,KAAD,CACEV,MAAO,CAAEI,WAAY,IACrBmN,MAAOuH,EACPG,WAAY,CAAEnN,gBAAiB,WAC/BoN,cAAe,CAAEtU,MAAO,SACxB4M,SAAU,aACV7M,KAAM,EACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG,KAAMC,EAAG,QAE5B,kBAAC,GAAD,CACElJ,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,YACfP,QAAS,WACP9B,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdiB,KAAM+D,EAAK/D,SAGZ1B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASH,EAAT,EAASA,SACb,EAAKkO,SAAS,CAAElO,aAChB,EAAKmW,eACLnK,EAASN,EAAOlL,YAHZ,+DAKLJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,W,EAO5BoW,aAAe,WACb,OAAO,kBAAC,GAAD,KAAI,EAAKtL,MAAMnL,W,EAGxBovB,YAAc,SAAO/gB,GAAP,uBAAAnO,EAAAC,OAAA,yDAC+B,EAAKwK,MAAMmB,YAA9CE,EADI,EACJA,SAAUia,EADN,EACMA,aAAcva,EADpB,EACoBA,OADpB,WAAAxL,EAAA,MAEeqE,EAAK,cAAe,CAC7C8J,OACAlI,KAAM,OACN8F,MAAOP,EAAOlL,cALJ,kBAEJR,SAKRimB,IACAja,EAASN,EAAOlL,YARJ,6D,2DA5EZuK,KAAKoL,eACLpL,KAAKJ,MAAMmB,YAAYma,iB,mCAGZ7P,GAAQ,IAAD,OAClB3W,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,2BAAAG,EAAAC,OAAA,gDAASwV,EAAT,EAASA,KACb,EAAKzH,SAAS,CAAEyH,SADZ,+DAGLvV,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAsEV,IAAD,EAIH0K,KAAKJ,MADQoB,GAHV,EAEL8B,WAFK,EAGL/B,YAAeC,IAGXjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC4M,GAAA,EAAD,CACEC,KAAMxL,KAAKI,MAAMwK,KACjBC,WAAY7K,KAAK6K,WACjBY,oBAAqBzL,KAAK0L,aAC1B4zB,mBAAoB,kBAAC,GAAD,KAAIvoC,EAAQ,qB,GA1GvB0J,a,kbCwIJ8+B,G,kCArIb,WAAY3/B,GAAQ,IAAD,uBACjB,cAAMA,IAaR+iB,OAAS,WAAO,IAAD,EACU,EAAK/iB,MAAMmB,YAA1BJ,EADK,EACLA,OADK,EACGK,GAEhB,EAAKmC,SAAS,CAAEglB,SAAS,IACzBzzB,MAASlC,EAAUC,YAAd,WAAqC,CACxC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACd+lB,QAAS,EAAKpb,MAAMob,YAGrBxmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CACZlO,WACAkzB,SAAS,EACTvyB,OAAQD,KAAKC,SACb4lB,QAAS,KAEX,EAAK5b,MAAMmB,YAAYE,SAASN,EAAOlL,YAPnC,+DASLJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAxCD,EA4CnByvB,aAAe,WAAO,IAAD,EACI,EAAKnlB,MAAMmB,YAAlBC,GADG,EACXL,OADW,EACHK,IACVjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,KACG,EAAKyuB,SAASztB,EAAQ,uBAAtB,MAA8CiK,OAA9C,EAA8CA,EAAI0b,SAEnD,kBAAC,GAAD,CACE3b,YAAa,EAAKnB,MAAMmB,YACxBya,QAAS,EAAKpb,MAAMob,QACpB8J,gBAAiB,SAACvxB,GAAD,OAAO,EAAKoP,SAAS,CAAEqY,QAASznB,KACjD6B,OAAQ,EAAKwK,MAAMxK,OACnB2vB,eAAgB,SAACxxB,GAAD,OAAO,EAAKoP,SAAS,CAAEvN,OAAQ7B,OAGjD,kBAAC,GAAD,CACE2G,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MAErC1E,MAAO,CAAEwQ,UAAW,IACpBxJ,MAAOjG,EAAQ,gBACfP,QAAS,EAAKmsB,WAjEH,EAuFnB0B,YAAc,SAAO/gB,GAAP,uBAAAnO,EAAAC,OAAA,yDAC+B,EAAKwK,MAAMmB,YAA9CE,EADI,EACJA,SAAUN,EADN,EACMA,OAAQua,EADd,EACcA,aADd,WAAA/lB,EAAA,MAEeqE,EAAK,cAAe,CAC7C8J,OACAlI,KAAM,UACN8F,MAAOP,EAAOlL,cALJ,kBAEJR,SAKRimB,IACAja,EAASN,EAAOlL,YARJ,6DApFZ,EAAK2K,MAAQ,CACXnL,SAAU,KACVW,OAAQD,KAAKC,SACb4lB,QAAS,IANM,E,yDAWjBxb,KAAKJ,MAAMmB,YAAYma,iB,+BA4DhB5nB,EAAKkJ,GACZ,OACE,kBAACzG,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,WAGd,kBAAC,GAAD,CAAGhI,MAAO,CAAE0M,YAAa,KAAOpP,GAChC,kBAAC,GAAD,KAAIkJ,M,+BAgBA,IAAD,OACCvH,EAAa+K,KAAKI,MAAlBnL,SADD,EAOH+K,KAAKJ,MAJPmB,YACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAIR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAACgT,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACc,EAAA,QAAD,KACE,kBAACoI,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAGZ,kBAAC,GAAD,CACEyF,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2M,SAAS,CAAElO,SAAU,WAI7C+K,KAAK+kB,qB,GA9HKtkB,a,kbCqGP++B,G,qLAhGbp/B,MAAQ,CACNnL,SAAU,M,EAGZwqC,KAAO,WAAO,IACJ9+B,EAAW,EAAKf,MAAMmB,YAAtBJ,OAERjM,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdiB,KAAM,EAAK0J,MAAM1J,KACjB6Q,QAAS,EAAKnH,MAAMmH,YAGrBvS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,aAChB,EAAK2K,MAAMmB,YAAYE,SAASN,EAAOlL,YAFnC,+DAILJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,2DAhCC,IAAD,EACZoB,EAAI,SAAGsJ,KAAKJ,MAAMkD,WAAW1C,MAAMkT,aAA/B,EAAG,EAAoC5c,KAC7CA,GACFsJ,KAAKmD,SAAS,CAAEzM,W,mCAiCN,IAAD,SAMPsJ,KAAKJ,MAJPmB,YACEC,EAHO,EAGPA,GACUtG,EAJH,EAIPiG,OAAUjG,MAIR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,KACE,kBAACwI,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpB8M,YAAalN,EAAQ,QACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAOwD,KAAKI,MAAM1J,KAClB8H,aAAc,SAAC9H,GAAD,OAAU,EAAKyM,SAAS,CAAEzM,YAE1C,kBAAC6H,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpB8M,YAAalN,EAAQ,WACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAOwD,KAAKI,MAAMmH,QAClB/I,aAAc,SAAC+I,GAAD,OAAa,EAAKpE,SAAS,CAAEoE,eAG7C,kBAACxR,EAAA,QAAD,CACEC,MAAO,CACLwQ,UAAW,KAGb,kBAAC,GAAD,CACE9L,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,QACfP,QAAS,kBAAM,EAAKipC,c,+BAMpB,IAAD,EAOHz/B,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aAEYrG,GALP,EAIHsG,GAJG,EAKHL,OAAUjG,OAGNzF,EAAa+K,KAAKI,MAAlBnL,SAER,OACE,kBAAC8gB,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAEV,KAEH+K,KAAKujB,mB,GAjGG9iB,a,kbC6KJiB,M,qLAzKbtB,MAAQ,CACN6L,MAAO,GACPE,SAAU,GACV7W,MAAO,M,+CAGA,IAAD,SAIF0K,KAAKJ,MAJH,KAEJkD,WAFI,EAGJ/B,aAAeH,EAHX,EAGWA,SAAUK,EAHrB,EAGqBA,SAHrB,EAKsBjB,KAAKI,MAAzB6L,EALF,EAKEA,MAAOE,EALT,EAKSA,SAEfzX,MAASlC,EAAUC,YAAd,SAAmC,CACtC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEmX,QAAOE,SAAUqB,KAAIC,QAAQtB,OAEnDnX,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAO0Y,GAAP,SAAAvY,EAAAC,OAAA,uDACJG,QAAQ6H,IAAI,eAAgBsQ,GAExBA,EAAapY,MACf,EAAK6N,SAAS,CAAE7N,MAAOoY,EAAapY,SAGpCsL,EAAS,CACPxF,KAAM,4BACNoB,MAAOkR,EAAajY,aAGtBwL,EAASyM,EAAajY,YAEtB,EAAKmK,MAAMkC,UAAUL,uBAAuBiM,EAAajY,YAEzD,EAAK0N,SAAS,CAAE7N,MAAO,KAAMgX,QAASoB,EAAapB,WAhBjD,kBAmBGoB,GAnBH,+DAqBLrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOH0K,KAAKJ,MALPkD,EAFK,EAELA,WAFK,IAGL/B,YACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAIR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,SAAUC,WAAY,WAC5D,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACL8R,OAAQ,GACR5J,QAAS,GACTD,aAAc,KAGf+B,KAAKI,MAAM9K,MACV,kBAAC6I,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,QAAUoJ,KAAKI,MAAM9K,OACzC,KAEH0K,KAAKI,MAAMkM,QACV,kBAACnO,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,UAAYoJ,KAAKI,MAAMkM,SAE7C,kBAACvW,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,UAExC,kBAACwH,EAAA,EAAD,CACE0F,YAAalN,EAAQ,SACrBsW,qBAAsB3S,EAAM4S,kBAC5B9O,aAAc,SAACyN,GAAD,OAAW,EAAK9I,SAAS,CAAE8I,WACzCzP,MAAOwD,KAAKI,MAAM6L,MAClBjW,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,aAExC,kBAACwH,EAAA,EAAD,CACEgP,iBAAe,EACf/O,aAAc,SAAC2N,GAAD,OAAc,EAAKhJ,SAAS,CAAEgJ,cAC5C3P,MAAOwD,KAAKI,MAAM+L,SAClBnW,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CACE2E,MAAOA,EACPsC,MAAOjG,EAAQ,SACfP,QAAS,kBAAM,EAAKsW,YAIxB,kBAAC/W,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACT4I,SAAU,OACV/I,eAAgB,kBAGlB,kBAACxH,EAAA,EAAD,CACEC,QAAS,kBAAMsM,EAAWoC,SAAS,iBAEnC,kBAAC/G,EAAA,QAAD,CACEnI,MAAO,CACL8R,OAAQ,GACRzJ,SAAU,GACVsP,mBAAoB,cAGrB5W,EAAQ,cAIb,kBAACR,EAAA,EAAD,CACEC,QAAS,kBAAMsM,EAAWoC,SAAS,oBAEnC,kBAAC/G,EAAA,QAAD,CACEnI,MAAO,CACL8R,OAAQ,GACRzJ,SAAU,GACVsP,mBAAoB,cAGrB5W,EAAQ,4B,GA9JTmF,IAAMuE,YCwFXi/B,IARA/zB,KAAWC,OAAO,CAC/Bwa,IAAK,CACHnwB,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,YAxFF,SAAC,GAQT,EAPJ8E,WAOK,IAAD,IANJ/B,YACEJ,EAKE,EALFA,OACAK,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACUvG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG4BrN,mBAAS,MAHrC,WAGGT,EAHH,KAGa+W,EAHb,OAIwBtW,mBAAS,IAJjC,WAIG2mB,EAJH,KAIWyK,EAJX,OAKoBpxB,mBAAS,YAL7B,WAKG0F,EALH,KAKSwqB,EALT,KAiBJ,OACE,kBAAC7P,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACrC,kBAACnI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmJ,OAAQ,KAC9B,kBAAC/R,EAAA,QAAD,KACGd,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAChC,kBAACc,EAAA,QAAD,KACE,kBAAC,GAAD,KAAIgB,EAAQ,oBAAD,MAAsBiK,OAAtB,EAAsBA,EAAI2+B,WACrC,kBAAC,GAAD,KAAI5oC,EAAQ,qBAAD,MAAuBiK,OAAvB,EAAuBA,EAAI4+B,YACtC,kBAAC,GAAD,KAAI7oC,EAAQ,sBAAD,MAAwBiK,OAAxB,EAAwBA,EAAI6+B,aAEvC,kBAAC,GAAD,CAAGn1B,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,QAEX,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAACsI,EAAA,EAAD,CACEvI,MAAO,CAACA,GAAM0E,GAAOvD,UAAW,CAAEwH,KAAM,IACxCsF,YAAalN,EAAQ,UACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAO6f,EACP7d,aAAc,SAAC6d,GAAD,OAAYyK,EAAUzK,MAGtC,kBAAC,GAAD,CACErmB,MAAO,CAAEsV,eAAgB,GAAIlV,WAAY,IACzC4G,MAEMjG,EADK,aAATqE,EACY,WACC,cAATA,EACQ,YACA,cAEd5E,QAAS,WACPovB,EACW,aAATxqB,EACI,YACS,cAATA,EACA,aACA,gBAMZ,kBAAC,GAAD,CACEV,MAAOA,EACPsC,MAAOjG,EAAQ,OACfP,QAAS,kBAzDT,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACiBqE,EAAK,WAAY,CAC1C0H,MAAOP,EAAOlL,WACd4mB,SACAjhB,UAJQ,gBACFnG,EADE,EACFA,SAMR+W,EAAY/W,GACZgM,EAASN,EAAOlL,YARN,4DAyDe8uB,IACfvuB,MAAO,CAAEK,MAAO,SAMxB,kBAACN,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,S,skBC7E7B,IAkNewpC,GAlNM,SAAC,GAahB,EAZJh9B,WAYK,IAVMwQ,EAUP,EAXJxQ,WACE1C,MAASkT,OAUP,IARJvS,YACEJ,EAOE,EAPFA,OACAK,EAME,EANFA,GACAykB,EAKE,EALFA,OACAvK,EAIE,EAJFA,aACAja,EAGE,EAHFA,SACUvG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9BO,EAAI,MAAGgQ,OAAH,EAAGA,EAAQhQ,KACflI,EAAI,MAAGkY,OAAH,EAAGA,EAAQlY,KAJjB,EAM4B1F,mBAAS,MANrC,WAMGT,EANH,KAMa+W,EANb,OAOwBtW,mBAAS,IAPjC,WAOGqqC,EAPH,KAOWC,EAPX,OAQsBtqC,mBAAS,IAR/B,WAQGkvB,EARH,KAQUsV,EARV,OASkBxkC,mBAAS,IAT3B,WASGuqC,EATH,KASQC,EATR,KAWEC,EAAO,MAAG1a,OAAH,EAAGA,EAAQ1F,MAAK,SAACjmB,GAAD,OAAOA,EAAEwJ,OAASA,KAE/CpP,EAAOgnB,GAEP,IA0DMklB,EAAW,CACfnqC,cAAe,MACf8H,eAAgB,gBAChBmpB,gBAAiB,IAGbmZ,EAAatpC,EAAQqE,GAE3B,IAAKilC,EACH,OAAO,kBAAC,GAAD,KAAItpC,EAAQ,gBAGrB,IAAMupC,EAAellC,EAAN,SACTmlC,EAAcnlC,EAAN,QACRsjC,EAActjC,EAAN,QACRolC,EAAeplC,EAAN,SACf,OACE,kBAAC2a,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACpCjJ,GAAY,kBAAC,GAAD,KAAIA,IAEd,MAAF+L,OAAA,EAAAA,EAAItK,QAAe,MAAPypC,OAAA,EAAAA,EAAUzB,OAAV,MAAwB19B,OAAxB,EAAwBA,EAAItK,MACvC,kBAACX,EAAA,QAAD,KACE,kBAAC,GAAD,CAAGC,MAAO,CAAEoI,WAAY,SACrBiiC,EADH,IACgBtpC,EAAQ,QADxB,IACkCuM,GAGlC,kBAACvN,EAAA,QAAD,CAAMC,MAAOoqC,GACX,kBAAC,GAAD,KAAIrpC,EAAQ,WACZ,kBAAC,GAAD,cAAKjD,EAAaqsC,EAAQG,IAA1B,OAGDH,EAAQI,IACP,kBAACxqC,EAAA,QAAD,CAAMC,MAAOoqC,GACX,kBAAC,GAAD,KAAIrpC,EAAQ,UACZ,kBAAC,GAAD,KAAIopC,EAAQI,KAIhB,kBAAC,GAAD,CACEvqC,MAAO,CAAEsV,eAAgB,IACzB9U,QAlGQ,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACWqE,EAAK,YAAa,CAC3C0H,MAAOP,EAAOlL,WACd6N,OACAlI,UAJc,gBACRnG,EADQ,EACRA,SAKR+W,EAAY/W,GACZgM,EAASN,EAAOlL,YAChBylB,IARgB,6DAmGRxgB,MAAOA,EACPsC,MAAOjG,EAAQ,eAGjB,kBAAChB,EAAA,QAAD,CAAMC,MAAOoqC,GACX,kBAAC,GAAD,KAAIrpC,EAAQ,WACZ,kBAAC,GAAD,KAAIopC,EAAQK,GAAZ,MAEF,kBAAC,GAAD,CACExqC,MAAO,CAAEsV,eAAgB,IACzB9U,QAlGK,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACcqE,EAAK,eAAgB,CAC9C0H,MAAOP,EAAOlL,WACd6N,OACAlI,UAJW,gBACLnG,EADK,EACLA,SAKR+W,EAAY/W,GACZgM,EAASN,EAAOlL,YAChBylB,IARa,6DAmGLxgB,MAAOA,EACPsC,MAAOjG,EAAQ,YAGjB,kBAAChB,EAAA,QAAD,CACEC,MAAO,CACLsV,eAAgB,GAChBrV,cAAe,MACf+H,WAAY,WAGd,kBAACO,EAAA,EAAD,CACEvI,MAAK,SAAOA,GAAM0E,GAAOvD,WAApB,IAA+BwH,KAAM,IAC1CsF,YAAalN,EAAQ,QACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAOujC,EACPvhC,aAAc,SAACzK,GAAD,OAAOisC,EAAUjsC,MAEjC,kBAAC,GAAD,CAAQyC,QA1GD,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACYqE,EAAK,WAAY,CAC1C0H,MAAOP,EAAOlL,WACd6N,OACAlI,OACAuW,GAAIouB,KALS,gBACP9qC,EADO,EACPA,SAMRgM,EAASN,EAAOlL,YAChBylB,IACAlP,EAAY/W,GATG,6DA0GoByF,MAAOA,EAAOsC,MAAOjG,EAAQ,WAGhD,kBAATqE,GACC,kBAACrF,EAAA,QAAD,CACEC,MAAO,CACLsV,eAAgB,GAChBrV,cAAe,MACf+H,WAAY,WAGd,kBAACO,EAAA,EAAD,CACEvI,MAAK,SAAOA,GAAM0E,GAAOvD,WAApB,IAA+BwH,KAAM,IAC1CsF,YAAalN,EAAQ,kBACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAOooB,EACPpmB,aAAc,SAACzK,GAAD,OAAOmmC,EAASnmC,MAEhC,kBAAC,GAAD,CACEyC,QArGM,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACSqE,EAAK,cAAe,CAC7C0H,MAAOP,EAAOlL,WACd6N,OACAlI,OACAwpB,WALgB,gBACV3vB,EADU,EACVA,SAMRgM,EAASN,EAAOlL,YAChBylB,IACAlP,EAAY/W,GATM,6DAsGNyF,MAAOA,EACPsC,MAAOjG,EAAQ,kBAKX,SAATqE,GACC,kBAACrF,EAAA,QAAD,CACEC,MAAO,CACLsV,eAAgB,GAChBrV,cAAe,MACf+H,WAAY,WAGd,kBAACO,EAAA,EAAD,CACEvI,MAAK,SAAOA,GAAM0E,GAAOvD,WAApB,IAA+BwH,KAAM,IAC1CsF,YAAalN,EAAQ,QACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAOyjC,EACPzhC,aAAc,SAACzK,GAAD,OAAOmsC,EAAOnsC,MAE9B,kBAAC,GAAD,CACEyC,QAxII,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACWqE,EAAK,YAAa,CAC3C0H,MAAOP,EAAOlL,WACd6N,OACAlI,OACA6kC,SALc,gBACRhrC,EADQ,EACRA,SAMRgM,EAASN,EAAOlL,YAChBylB,IACAlP,EAAY/W,GATI,6DAyIJyF,MAAOA,EACPsC,MAAOjG,EAAQ,iBAKrB,O,GC3LgBiL,IAAWzI,IAAI,UAAzBlD,I,GAARC,O,GAAQD,OAqNDoqC,GAhNA,SAAC,GAQT,IAPL39B,EAOI,EAPJA,WAOI,IANJ/B,YACEJ,EAKE,EALFA,OACAK,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACUvG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAE0BrN,oBAAS,GAFnC,WAEGyyB,EAFH,KAEYlN,EAFZ,OAGwBvlB,mBAAS,IAHjC,WAGGqnB,EAHH,KAGW2jB,EAHX,OAM4BhrC,mBAAS,MANrC,WAMGT,EANH,KAMa+W,EANb,OAOwBtW,mBAAS,IAPjC,WAOG2mB,EAPH,KAOWyK,EAPX,OAQsBpxB,mBAAS,IAR/B,WAQGkvB,EARH,KAQUsV,EARV,OASkBxkC,oBAAS,GAT3B,WASG6uB,EATH,KASQoc,EATR,OAUoBjrC,mBAAS,MAV7B,WAUG0F,EAVH,KAUSwqB,EAVT,KAYI/G,EAA+BC,2BAA/BD,2BAEF+hB,EAAY,4BAAAzrC,EAAAC,OAAA,uDAChB6lB,GAAW,GADK,WAAA9lB,EAAA,MAGSoE,EAAI,WAHb,gBAGRwjB,EAHQ,EAGRA,OACR9B,GAAW,GACXylB,EAAU3jB,GALM,6DA+ClB7oB,EAAO0sC,GA2BP,OACE,kBAAC7qC,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC3BhB,GAAY,kBAAC,GAAD,KAAIA,IAGnB,kBAACc,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IAGnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAEsV,eAAgB,KAC7B,kBAACvV,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAC/C,kBAAC,GAAD,CACEhB,MAAajG,EAANwtB,EAAc,MAAiB,QACtC/tB,QAAS,kBAAMmqC,GAAQpc,IACvBvuB,MAAO,CAAE2I,KAAM,EAAG2M,eAAgB,GAAIlV,WAAY,MAGpD,kBAACmI,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAO,CAACmtB,GAAOzoB,GAAOvD,UAAW,CAAEf,WAAY,KAC/CoG,MAAO6f,EACP7d,aAAcsoB,EACd7iB,YAAalN,EAAQ,YAGvB,kBAAC,GAAD,CACEiG,MAAcjG,EAAPqE,GAA+B,YACtC5E,QApDO,WAEjB,IAAMqqC,EAAa,CAAC,UAAW,SAAU,OAAQ,aAAc,WAEzD1jC,EAAU0jC,EAAWvjC,KAAI,SAAClC,GAAD,OAAUrE,EAAQqE,MAEjD+B,EAAQK,KAAKzG,EAAQ,WACrB,IACMmoB,EAAoB/hB,EAAQtD,OAAS,EAE3CglB,EACE,CACE1hB,UACA+hB,oBACAC,4BAP2BpqB,IAS7B,SAACqqB,GACKA,EAAcyhB,EAAWhnC,QAC3B+rB,EAAQib,EAAWzhB,QAmCfppB,MAAO,CAAE2I,KAAM,EAAG2M,eAAgB,GAAIlV,WAAY,MAGpD,kBAAC,GAAD,CAAGJ,MAAO,CAAEI,WAAY,KAAOW,EAAQ,QAEvC,kBAACwH,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAO,CAACmtB,GAAOzoB,GAAOvD,UAAW,CAAEf,WAAY,KAC/CoG,MAAOooB,EACPpmB,aAAc07B,EACdj2B,YAAalN,EAAQ,WAGvB,kBAAC,GAAD,CACEiG,MAAOjG,EAAQ,UACfP,QAAS,kBA7GS,4BAAArB,EAAAC,OAAA,uDAC5B6lB,GAAW,GADiB,WAAA9lB,EAAA,MAEDqE,EAAK,oBAAqB,CACnD0H,MAAOP,EAAOlL,WACd2F,OACAwpB,QACAvI,SACAkI,SAP0B,gBAEpBtvB,EAFoB,EAEpBA,SAORgmB,GAAW,GACXjP,EAAY/W,GACZgM,EAASN,EAAOlL,YAChBmrC,IAZ4B,4DA6GHE,IACf9qC,MAAO,CAAE2I,KAAM,EAAG2M,eAAgB,GAAIlV,WAAY,QAKxD,kBAACmV,GAAA,EAAD,CACEqsB,eACE,kBAAC,KAAD,CAAgB1J,WAAY/F,EAASgG,UAAWyS,IAElDp1B,KAAMuR,EACNqR,WACkB,QAAhBtuB,UAASC,QACLhL,EACAY,KAAKoV,MAAM1U,GAAK,KAEtB2f,sBACkB,QAAhBlW,UAASC,GACL,CAAE9J,cAAe,MAAO6Q,SAAU,aAClC/R,EAENu5B,aAAc,SAAC7zB,EAAM5G,GAAP,cAAyBA,GACvCgX,WAAY,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAAkB,EAAZ5G,MACnB,OACE,kBAACkC,EAAA,QAAD,CACEC,MAAO,CACLK,MAxKL,IAyKKyH,gBAAiBvD,EAAUG,EAAMsS,SACjC/O,aAAc,GACdC,QA1KH,GA2KG4J,OA3KH,KA8KErN,EAAK2iB,UAAL,MAAgBpc,OAAhB,EAAgBA,EAAImM,KACnB,kBAAC5W,EAAA,EAAD,CACEP,MAAO,CAAEiX,UAAW,YACpBzW,QAAS,kBAtHG,SAAOuqC,GAAP,iBAAA5rC,EAAAC,OAAA,uDAC5B6lB,GAAW,GADiB,WAAA9lB,EAAA,MAEDqE,EAAK,oBAAqB,CACnD0H,MAAOP,EAAOlL,WACdsrC,aAJ0B,gBAEpB9rC,EAFoB,EAEpBA,SAIRgmB,GAAW,GACXjP,EAAY/W,GACZgM,EAASN,EAAOlL,YAChBmrC,IAT4B,4DAsHGI,CAAsBvmC,EAAK0S,MAE1C,kBAACD,GAAA,EAAD,CAAQxW,KAAK,QAAQE,MAAO8D,EAAME,YAAajE,KAAM,MAGzD,kBAACZ,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,GAAD,KACGlE,EAAKwmC,MAAQlqC,EAAQ,aAAeA,EAAQ,aAIjD,kBAAC,GAAD,CAAM+L,WAAYA,EAAY6X,KAAMlgB,EAAKkgB,OAEzC,kBAAC,GAAD,KACGlgB,EAAK4hB,OADR,IACiBtlB,EAAQ0D,EAAKW,OAE9B,kBAAC,GAAD,cAAKtH,EAAa2G,EAAKmqB,OAAvB,MAEA,kBAAC,GAAD,CACE5nB,MAAOvC,EAAKwmC,MAAQlqC,EAAQ,QAAUA,EAAQ,OAC9CP,QAAS,kBAtJK,SAAOuqC,GAAP,iBAAA5rC,EAAAC,OAAA,uDAC5B6lB,GAAW,GADiB,WAAA9lB,EAAA,MAEDqE,EAAK,oBAAqB,CACnD0H,MAAOP,EAAOlL,WACdsrC,aAJ0B,gBAEpB9rC,EAFoB,EAEpBA,SAIRgmB,GAAW,GACXjP,EAAY/W,GACZgM,EAASN,EAAOlL,YAChBmrC,IAT4B,4DAsJCM,CAAsBzmC,EAAK0S,WAOpD,kBAACpX,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,SCnNhB6qC,GAjBQ,SAAC,GAKjB,IAAD,IAJJpgC,YACEC,EAGE,EAHFA,GACUtG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAACR,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,uBCkDFysB,GAzDQ,SAAC,GAOjB,IANL1gB,EAMI,EANJA,WAMI,KALJ/B,YAKI,EAJJA,aACEC,EAGE,EAHFA,GAGE,IAFFL,OAGI5J,GADF,EAFQ2D,MAER,EAFejF,WAGHpC,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SADhC,EAEsBrN,mBAAS,IAF/B,WAEGk6B,EAFH,KAEUC,EAFV,KAQJ,OADA37B,GAJiB,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACSoE,EAAI,WADb,gBACPq2B,EADO,EACPA,MACRC,EAASD,GAFM,+DAMf,kBAAC7Z,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KAErC,kBAAChI,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAAO,IAAKC,OAAQ,OAE/B,kBAAC,GAAD,KAAIS,EAAQ,eAEZ,kBAAC,GAAD,CAAG2T,MAAI,EAAC1U,MAAO,CAAEwQ,UAAW,KACzBzP,EAAQ,kBAEV64B,EAAMtyB,KAAI,SAAC8J,GACV,OACE,kBAACrR,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,KAAD,CAAM3I,MAAO,CAAEwQ,UAAW,KACxB,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAMY,KAAMA,EAAMtE,WAAYA,KAGhC,kBAAC,KAAD,CAAK9M,MAAO,CAAE+H,eAAgB,WAC5B,kBAAC,GAAD,KACGqJ,EAAKG,QADR,IACkBxQ,EAAQ,cAI7BqQ,EAAKklB,MAAMhvB,KAAI,SAACqd,GAAD,OACd,kBAAC,KAAD,CAAM3kB,MAAO,CAAEwQ,UAAW,KACxB,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAM1D,WAAYA,EAAY6X,KAAMA,EAAMhkB,KAAM,cAQ5D,kBAACZ,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,QC0Gd8qC,GAhKE,SAAC,GASX,IARLt+B,EAQI,EARJA,WAQI,IAPJ/B,YACEH,EAME,EANFA,SACAI,EAKE,EALFA,GACAC,EAIE,EAJFA,SACAN,EAGE,EAHFA,OACUjG,EAER,EAFFiG,OAAUjG,MAKN3D,GAFamF,IAAM6Q,WAAW9Q,IAEpB5I,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SAEpC,OACE,kBAACgT,GAAA,EAAD,MAaGsrB,EA2BD,kBAAC,GAAD,CACE3mC,MAAOA,EACPskC,SAAS,SACT98B,KAAK,QACLY,WAAYA,EACZ9F,MAAOjG,EAAQ,eACf4a,GAAG,gBAEL,kBAAC,GAAD,CACEjX,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,sBACf4a,GAAG,iBACHqtB,SAAS,yBACT98B,KAAK,gBAEP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,eACf4a,GAAG,cACHqtB,SAAS,SACT98B,KAAK,UAEP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,cACf4a,GAAG,aACHqtB,SAAS,cACT98B,KAAK,SAEP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,UACf4a,GAAG,QACHqtB,SAAS,WACT98B,KAAK,uBAGJ,MAAFlB,OAAA,EAAAA,EAAI8Q,QAAS,GACZ,kBAAC,GAAD,CACEpX,MAAOA,EACPoI,WAAYA,EACZ9F,MAAK,UAAY,MAAFgE,OAAA,EAAAA,EAAI2G,YAAa,MAAQ,MAAnC,eACLq3B,SAAS,SACT98B,KAAK,MACL1L,QAAS,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACoBqE,EAAK,gBAAiB,CAC/C/D,WAAYkL,EAAOlL,WACnBkS,aAAY,MAAC3G,OAAD,EAACA,EAAI2G,eAHZ,gBACC1S,EADD,EACCA,SAIRgM,EAASN,EAAOlL,YAChBotB,MAAM5tB,GANC,+DAWb,kBAAC,GAAD,CACEyF,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,aACfioC,SAAS,SACT98B,KAAK,QACL1L,QAAS,kBAAMoK,EAAS,CAAExF,KAAM,aAAcoB,OAAO,OAEvD,kBAAC,GAAD,CACE9B,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,iBACf4a,GAAG,YACHqtB,SAAS,YACT98B,KAAK,SAGP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,iBACf4a,GAAG,YACHqtB,SAAS,YACT98B,KAAK,SAGP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,gBACf4a,GAAG,WACHqtB,SAAS,yBACT98B,KAAK,WAEP,kBAAC,GAAD,CACExH,MAAOA,EACPoI,WAAYA,EACZ9F,MAAOjG,EAAQ,kBACf4a,GAAG,aACHqtB,SAAS,cACT98B,KAAK,uBCnHEo/B,GAtCF,SAAC1hC,GAAW,IAAD,EAChB7I,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAEhDqiB,EAAO,CACX,CACE9xB,IAAK,WACL0J,MAAOjG,EAAQ,gBACfM,UAAW+pC,IAEb,CACE9tC,IAAK,OACL0J,MAAOjG,EAAQ,YACfM,UAAWkqC,IAEb,CACEjuC,IAAK,SACL0J,MAAOjG,EAAQ,cACfM,UAAWmqC,KAjBO,EAqBA9rC,mBAAS0vB,EAAK,GAAG9xB,KArBjB,WAqBf+xB,EArBe,KAqBVY,EArBU,KAsBhBxlB,EAAY2kB,EAAKrF,MAAK,SAACuE,GAAD,OAAOA,EAAEhxB,MAAQ+xB,KAAKhuB,UAClD,OACE,kBAACtB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC8B,EAAcb,IAEjB,kBAAC,GAAD,CACEwlB,KAAMA,EAAK9nB,KAAI,SAACgnB,GAAD,MAAQ,CACrBtnB,MAAOsnB,EAAEtnB,MACTkhB,SAAUmH,IAAQf,EAAEhxB,IACpBkD,QAAS,kBAAMyvB,EAAO3B,EAAEhxB,c,skBCtBhB0O,IAAWzI,IAAI,UAAzBlD,M,IA6POo+B,GA1PG,SAAC,GAOZ,IAAD,IANJ1zB,YACEC,EAKE,EALFA,GACAL,EAIE,EAJFA,OACUjG,EAGR,EAHFiG,OAAUjG,MACVuG,EAEE,EAFFA,SAGIlK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAGsBrN,mBAAS,MAH/B,WAGU+rC,GAHV,aAIsB/rC,mBAAQ,MAACsL,OAAD,EAACA,EAAI2R,OAJnC,WAIGA,EAJH,KAIU4Y,EAJV,OAMwB71B,mBAAS,IANjC,WAMGgsC,EANH,KAMWC,EANX,OAOsCjsC,mBAAS,MAP/C,WAOGksC,EAPH,KAOkBC,EAPlB,OAQkBnsC,oBAAW,MAAFsL,OAAA,EAAAA,EAAI8gC,MAAO,IARtC,WAQGA,EARH,KAQQC,EARR,KAUJ7tC,GAAO,WACLm4B,IACA2V,OAGF,IAAMA,EAAc,WAClBttC,MACKlC,EAAUC,YADV,qBAC0CkO,EAAOlL,WADjD,QACmEuL,EAAGmM,GACzE,CACE3Y,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAiB,IAAd0sC,EAAa,EAAbA,OACPC,EAAUD,MAEXrsC,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAqDd+2B,EAAqB,0BAAAl3B,EAAAC,OAAA,mDACL,QAAhB0K,UAASC,IAAgC,YAAhBD,UAASC,GADb,kCAAA5K,EAAA,MAEEwiB,IAAqBA,MAFvB,gBAGR,YAHQ,EAEfE,QAENgL,MAAM,6DAJe,6DAmF3B,OACE,kBAAC9M,GAAA,EAAD,CACE/f,MAAO,CACL2I,KAAM,EACNmJ,OAAQ,KAGV,kBAACvR,EAAA,EAAD,CAAkBC,QA3II,0BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MAClBk3B,KADkB,kCAAAl3B,EAAA,MAIHs3B,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfC,QAAQ,EACRC,QAAS,KATW,QAIlB7Y,EAJkB,QAYV8Y,WAEVxB,EACEtX,EAAO4Y,OAAP,cACkB5Y,EAAO7Y,KADzB,WACwC6Y,EAAO4Y,OAC3C5Y,EAAOne,KAjBO,gDAqBtBP,QAAQ6H,IAAR,MArBsB,kEA4InBuV,EACC,kBAACzc,EAAA,EAAD,CACEC,OAAQ,CACNL,IAAK6c,EAAMpV,SAAS,cAChBoV,EACAngB,EAAUC,YAAckgB,GAE9B3c,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,UAGb,kBAACxuB,EAAA,EAAD,CACEC,OAAQ1C,EAAQ,KAChBuC,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,WAKjB,kBAACnmB,EAAA,EAAD,CACE8O,qBAAsB3S,EAAM4S,kBAC5BtX,MAAO,CAACA,GAAM0E,GAAOvD,UAAW,CAAEd,MAAO,OAAQC,OAAQ,MACzD02B,WAAW,EACX/nB,cAAe,EACfzI,MAAOslC,EACPtjC,aAAc,SAACzK,GAAD,OAAOguC,EAAOhuC,MAE9B,kBAAC,GAAD,CACEiJ,MAAOjG,EAAQ,QACff,MAAO,CAAEsV,eAAgB,IACzB9U,QAAS,WACP9B,MAASlC,EAAUC,YAAd,iBAA2C,CAC9C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBgtC,IAAKA,EACLnvB,QACAld,WAAYkL,EAAOlL,eAGpBT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL4tB,MAAM9rB,EAAQ,YACdkK,EAASN,EAAOlL,eAEjBJ,OAAM,SAACC,GACNC,QAAQ6H,IAAI,eAAgB9H,GAC5ButB,MAAM9rB,EAAQ,6BAKtB,kBAAC,GAAD,CACEf,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,iBACfP,QA5IoB,0BAAArB,EAAAC,OAAA,2EAAAD,EAAA,MAEHs3B,KAAoC,CACrDC,WAAYD,KAA6BE,IACzCC,eAAe,EAEfC,QAAQ,EACRC,QAAS,KAPW,OAElB7Y,EAFkB,OAUtB1e,QAAQ6H,IAAI,SAAU6W,GAEjBA,EAAO8Y,YACV0U,EAASxtB,GA9CYguB,EA+CHhuB,EA9CtBvf,MAASlC,EAAUC,YAAd,UAAoC,CACvC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnB6d,MAAOsvB,EAAInsC,IACXoL,MAAOP,EAAOlL,eAGfT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL+sC,IACAnf,MAAM9rB,EAAQ,YACd0qC,EAAS,SAEVpsC,OAAM,SAACC,GACNC,QAAQ6H,IAAI,eAAgB9H,GAC5ButB,MAAM9rB,EAAQ,2BAaM,gDAiBtBxB,QAAQ6H,IAAR,MAjBsB,kCAjCA,IAAC6kC,IAiCD,8BA+IrBP,EAAOpkC,KAAI,SAACqV,EAAO9e,GAAR,OA1HG,SAAC,GAAqB,IAAnB4G,EAAkB,EAAlBA,KACd3E,GADgC,EAAZjC,MACdrB,EAAUC,YAAc,IAAMgI,EAAKkY,OAC/C,OACE,kBAACpc,EAAA,EAAD,CAAkBC,QAAS,kBAAMqrC,EAAiBpnC,EAAK0S,MACrD,kBAACpX,EAAA,QAAD,KACE,kBAACG,EAAA,EAAD,CACEC,OAAQ,CAAEL,OACVE,MAAK,IACHK,MAAO,IACPC,OAAQ,KACJsrC,IAAkBnnC,EAAK0S,GACvB,CAAEvI,YAAa,EAAGC,YAAa,SAC/B,IAEN6f,WAAW,cA4Ga7Z,CAAW,CAAEpQ,KAAMkY,EAAO9e,aAnGxD,kBAAC,GAAD,CACEmJ,MAAOjG,EAAQ,UACfP,QAAS,WACHorC,EACFltC,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACd0X,GAAIy0B,MAGL5sC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAgB,EAAb0sC,OACPM,OAED3sC,OAAM,SAACC,GACNC,QAAQD,MAAMA,MAGlButB,MAAM9rB,EAAQ,2B,YC3KAiL,IAAWzI,IAAI,UAA1BjD,I,GAAPD,M,GAAOC,QAsKA4rC,GArKJ,SAAC,GAUL,IATLp/B,EASI,EATJA,WASI,KARJ/B,YAQI,EAPJA,aACEC,EAME,EANFA,GACAmhC,EAKE,EALFA,IACAnJ,EAIE,EAJFA,UACA/3B,EAGE,EAHFA,SAGE,IAFFN,OAAUjG,EAER,EAFQA,MAAOjF,EAEf,EAFeA,WAGbsB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAK0BrN,oBAAS,GALnC,WAKGyyB,EALH,KAKYlN,EALZ,OAM4BvlB,qBAN5B,WAMGT,EANH,KAMa+W,EANb,OAO4BtW,mBAAS,MAPrC,WAOawjC,GAPb,WASmCpa,2BAA/BD,2BASR3qB,GAAO,kBAAM8kC,EAAUvjC,MACvBvB,GARsB,0BAAAiB,EAAAC,OAAA,uDACpB6lB,GAAW,GADS,WAAA9lB,EAAA,MAEDoE,EAAI,kBAAkB9D,IAFrB,OAEdm5B,EAFc,OAGpBsK,EAAYtK,GACZ3T,GAAW,GAJS,+DAyHtB,OACE,kBAACllB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IAZnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE+H,eAAgB,gBAAiB9H,cAAe,QAC7D,kBAACF,EAAA,QAAD,KAAOd,GAAY,kBAAC,GAAD,KAAIA,IAEvB,kBAACc,EAAA,QAAD,KACE,kBAACQ,EAAA,EAAD,CAAkBC,QAAS,kBAAMsM,EAAWoC,SAAS,cACnD,kBAAC,KAAD,CAAWxO,KAAK,aAAaE,MAAM,SAASD,KAAM,QASxD,kBAAC4U,GAAA,EAAD,CACEyK,sBAAuB,CACrB1f,OAAwB,QAAhBwJ,UAASC,GAAezJ,GAAS,SAAMvB,GAEjD6iC,eACE,kBAACwK,GAAA,EAAD,CACElU,WAAY/F,EACZgG,UAAW,WACT6K,EAAUvjC,GACVuW,EAAY,SAIlBR,KAAM22B,EACNt3B,WA1Fa,SAAC,GAAqB,IAAnBpQ,EAAkB,EAAlBA,KAAkB,EAAZ5G,MAC1B,OACE,kBAACkC,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAC/C,kBAAC9H,EAAA,EAAD,CACEC,OACgB,SAAdsE,EAAKW,KACD3H,EAAQ,KACM,SAAdgH,EAAKW,KACL3H,EAAQ,KACRA,EAAQ,KAEduC,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAY,YAGd,kBAAC3uB,EAAA,QAAD,CAAMC,MAAO,CAAEI,WAAY,GAAIuI,KAAM,IACnC,kBAAC,GAAD,KACG5H,EAAQ,aADX,KAC2B0D,EAAK4nC,SAEhC,kBAAC,GAAD,KACGtrC,EAAQ,SADX,KACuB0D,EAAK6I,MAE5B,kBAAC,GAAD,KACGvM,EAAQ,gBADX,KAC8B0D,EAAK6nC,eAAezoC,OADlD,IAEGY,EAAK0+B,iBAEP1+B,EAAK6nC,eAAezoC,OAAS,GAC5B,kBAAC,GAAD,KAAIY,EAAK6nC,eAAehlC,KAAI,SAACvJ,GAAD,OAAOA,EAAE2C,QAAMxD,KAAK,OAGlD,kBAAC6C,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QACzBwE,EAAK6nC,eAAeviB,MAAK,SAAChsB,GAAD,OAAOA,EAAE2C,QAAF,MAAWsK,OAAX,EAAWA,EAAItK,SAChD+D,EAAK6nC,eAAezoC,SAAWY,EAAK0+B,gBAClC,kBAAC,GAAD,CACEz+B,MAAOA,EACPsC,MAAOjG,EAAQ,YACfP,QAAS,kBAhDX,SAAO+rC,GAAP,iBAAAptC,EAAAC,OAAA,uDACZ6lB,GAAW,GADC,WAAA9lB,EAAA,MAEeqE,EAAK,UAAW,CACzC/D,aACA8sC,UAJU,gBAEJttC,EAFI,EAEJA,SAIR+W,EAAY/W,GACZgmB,GAAW,GACXha,EAASxL,GACTujC,EAAUvjC,GATE,4DAgDiBmZ,CAAMnU,EAAK0S,OAG5B,kBAAC,GAAD,CACEzS,MAAOA,EACPsC,MAAOjG,EAAQ,YACfP,QAAS,kBAlEX,SAAO+rC,GAAP,iBAAAptC,EAAAC,OAAA,uDACZ6lB,GAAW,GADC,WAAA9lB,EAAA,MAEeqE,EAAK,UAAW,CACzC/D,aACA8sC,UAJU,gBAEJttC,EAFI,EAEJA,SAIR+W,EAAY/W,GACZ+jC,EAAUvjC,GACVwlB,GAAW,GACXha,EAASxL,GATG,4DAkEiB+sC,CAAM/nC,EAAK0S,OAI9B,kBAAC,GAAD,CACEzS,MAAOA,EACPsC,MAAOjG,EAAQ,eACfP,QAAS,YAvFV,SAAO+rC,GAAP,YAAAptC,EAAAC,OAAA,uDACX6lB,GAAW,GADA,WAAA9lB,EAAA,MAEyBqE,EAAK,SAAU,CACjD/D,aACA8sC,UAJS,gBAEHj2B,EAFG,EAEHA,QAASrX,EAFN,EAEMA,SAIjB+W,EAAY/W,GACZgmB,GAAW,GACP3O,IACF0sB,EAAUvjC,GACVwL,EAASxL,IAVA,4DAwFGvC,CAAKuH,EAAK0S,e,skBC7EbxB,KAAWC,OAAO,CAC/Bwa,IAAK,CACHnwB,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,YA1DhB,IA6DeykC,GA7DD,SAAC,GAQT,EAPJ3/B,WAOK,IAAD,IANJ/B,YACEJ,EAKE,EALFA,OACAK,EAIE,EAJFA,GACAC,EAGE,EAHFA,SACUvG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAG4BrN,mBAAS,MAHrC,WAGGT,EAHH,KAGa+W,EAHb,OAIwBtW,mBAAS,IAJjC,WAIG2mB,EAJH,KAIWyK,EAJX,KAgBJ,OACE,kBAAC/Q,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACrC,kBAACnI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmJ,OAAQ,KAC9B,kBAAC/R,EAAA,QAAD,KACGd,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAChC,kBAACc,EAAA,QAAD,KACE,kBAACwI,EAAA,EAAD,CACEvI,MAAK,SAAOA,GAAM0E,GAAOvD,WAApB,IAA+BwH,KAAM,IAC1CsF,YAAalN,EAAQ,UACrBsW,qBAAsB3S,EAAM4S,kBAC5B9Q,MAAO6f,EACP7d,aAAc,SAAC6d,GAAD,OAAYyK,EAAUzK,MAGtC,kBAAC,GAAD,CACE3hB,MAAOA,EACPsC,MAAOjG,EAAQ,UACfP,QAAS,kBA3BP,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACeqE,EAAK,QAAS,CACvC/D,WAAYkL,EAAOlL,WACnB4mB,YAHU,gBACJpnB,EADI,EACJA,SAKR+W,EAAY/W,GACZgM,EAASN,EAAOlL,YAPJ,4DA2BaitC,IACf1sC,MAAO,CAAEK,MAAO,SAMxB,kBAACN,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,QClDvBqsC,GAAiB,eAyGR1D,GApGK,SAAC,GAKf,EAJJn8B,WAIK,IAFOpI,EAER,EAHJqG,YACEJ,OAAUjG,MAGZ,OACE,kBAACqb,GAAA,EAAD,CAAY/f,MAAO,CAAEgI,WAAY,WAC/B,kBAACjI,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACrB,kBAAC3J,EAAA,QAAD,CACEnI,MAAO,CAAEY,MAAO8D,EAAME,aACtBgoC,YAAa,SAACC,GACZttC,QAAQ6H,IAAI,YAAaylC,GACzBvuB,WAAQoiB,QAAQmM,KAGdF,GAPN,qEAQMA,GARN,w5I,0CCaFG,GAAqBC,aAAW,CAAEC,aAAa,IAElDC,IAAIC,MACJD,IAAIE,MAGDC,GAAMlnC,IAAM+hB,MAAK,YAAqB,IAAlB6jB,EAAiB,EAAjBA,IAAKpnC,EAAY,EAAZA,MAC7B,OACE,kBAAC,KAAD,CACE2oC,gBAAc,EACdC,WAAYR,GACZ9sC,MAAO,CAAEvB,KAAM,CAAEmC,MAAO8D,EAAME,cAC9B2oC,MAAO,CACLC,UAAW,SAACC,EAAMpnC,EAAUqnC,EAAQvgB,GAClC,OACE,kBAAC5sB,EAAA,EAAD,CACEjD,IAAKmwC,EAAKnwC,IACVkD,QAAS,WACY,OAAfsJ,UAASC,GACXkI,OAAO07B,KAAKF,EAAKG,WAAWC,KAAM,UAElCvvB,WAAQoiB,QAAQ+M,EAAKG,WAAWC,QAInCxnC,IAKPsW,MAAO,SAAC8wB,EAAMpnC,EAAUqnC,EAAQvgB,GAAY,IAAD,EACfztB,mBAAS,GADM,WAClCW,EADkC,KAC3BytC,EAD2B,OAEbpuC,mBAAS,GAFI,WAElCY,EAFkC,KAE1BytC,EAF0B,KAWzC,OARA7tC,IAAM8tC,QAAQP,EAAKG,WAAWK,KAAK,SAAC5tC,EAAOC,GACzCwtC,EAASztC,GACT0tC,EAAUztC,MAOV,kBAACJ,EAAA,EAAD,CACE5C,IAAKmwC,EAAKnwC,IACV6C,OAAQ,CAAEL,IAAK2tC,EAAKG,WAAWK,KAC/BjuC,MAAO,CAAEK,MAAOA,EAAOC,OAAQA,GAC/BouB,WAAW,aAKjBwe,MAAO,SAACO,EAAMpnC,EAAUqnC,EAAQvgB,GAI9B,OAAO,kBAAChlB,EAAA,QAAD,CAAM7K,IAAKmwC,EAAKnwC,KAAMmwC,EAAKhyB,UAGpCyyB,WAAY,SAACT,EAAMpnC,EAAUqnC,EAAQvgB,GAInC,OACE,kBAACptB,EAAA,QAAD,CACEzC,IAAKmwC,EAAKnwC,IACV0C,MAAO,CACL2I,KAAM,EACNX,WAAY,WAGb3B,IAKP8nC,UAAW,SAACV,EAAMpnC,EAAUqnC,EAAQvgB,GAIlC,OACE,kBAACptB,EAAA,QAAD,CAAMzC,IAAKmwC,EAAKnwC,IAAK0C,MAAO,CAAE2I,KAAM,IACjCtC,IAKP+nC,UAAW,SAACX,EAAMpnC,EAAUqnC,EAAQvgB,GAIlC,OACE,kBAACptB,EAAA,QAAD,CAAMzC,IAAKmwC,EAAKnwC,IAAK0C,MAAO,CAAE2I,KAAM,IACjCtC,MAMRylC,MAmWD3e,GAASxX,KAAWC,OAAO,CAC/Bwa,IAAK,CACHnwB,cAAe,MACf6Q,SAAU,OACV/I,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,YAIDqmC,GAzWO,SAAC,GAYhB,IAAD,MAXJvhC,EAWI,EAXJA,WAEWwQ,EASP,EAVJxQ,WACE1C,MAASkT,OASP,IAPJvS,YACEJ,EAME,EANFA,OACAK,EAKE,EALFA,GACAykB,EAIE,EAJFA,OACAvK,EAGE,EAHFA,aAGE,IAFFva,OAAUjG,EAER,EAFQA,MAAOjF,EAEf,EAFeA,WAEf,EAC0BC,mBAAS,IADnC,WACG01B,EADH,KACYC,EADZ,OAEwB31B,mBAAS,IAFjC,WAEGgsC,EAFH,KAEWC,EAFX,OAG0BjsC,oBAAS,GAHnC,WAGGyyB,EAHH,KAGYlN,EAHZ,OAI4BvlB,mBAAS,MAJrC,WAIGT,EAJH,KAIa+W,EAJb,KAMEtV,EAAI,MAAG4c,OAAH,EAAGA,EAAQ5c,KACfK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC7O,GAAO,WACLowC,EAAW5tC,MAEbxC,EAAOgnB,GAEP7mB,qBAAU,WACRiwC,EAAW5tC,KACV,OAAC4c,OAAD,EAACA,EAAQ5c,OAEZrC,qBAAU,WACR2tC,MACC,OAAC5W,OAAD,EAACA,EAASje,KAEb,IAWMm3B,EAAa,SAAC5tC,GAElB,OADAukB,GAAW,GACJvmB,MAASlC,EAAUC,YAAd,iBAA0CiE,EAAQ,CAC5DlC,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAO0Y,GAAP,SAAAvY,EAAAC,OAAA,uDACJi2B,EAAW3d,GACXuN,GAAW,GAFP,kBAGGvN,GAHH,+DAKLrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIdkvB,EAAW,SAAClxB,EAAKkJ,GACrB,OACE,kBAACzG,EAAA,QAAD,CAAMC,MAAOmtB,GAAOiD,KAClB,kBAAC,GAAD,KAAI9yB,GACJ,kBAAC,GAAD,KAAIkJ,KAKJwlC,EAAc,WAClBttC,MACKlC,EAAUC,YADV,qBAC0CkO,EAAOlL,WADjD,eACmE21B,OADnE,EACmEA,EAASje,IAC/E,CACE3Y,OAAQ,MACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAiB,IAAd0sC,EAAa,EAAbA,OACPC,EAAUD,MAEXrsC,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAIpB,GAAI6yB,EACF,OAAO,kBAAC/a,GAAA,EAAD,MAGT,IAAKge,EACH,OAAO,kBAAC,GAAD,KAAIr0B,EAAQ,sBAGrB,IAAM6jB,EAAW3X,KAAK5H,OAAL,MAAa+vB,OAAb,EAAaA,EAASvQ,UAAW,IAE5CjkB,EAAQ4D,EAAa4wB,EAASzqB,EAAOjG,OAErC5E,EAAMtD,EAAUC,aAAV,MAAwB24B,OAAxB,EAAwBA,EAASzY,OACvC4xB,MAAY,MAACnZ,OAAD,EAACA,EAASzY,OAsCtB8lB,GAAc,CAClB,CAAEr9B,KAAM,QAASuX,MAAOlf,EAAQ,MAChC,CACE2H,KAAM,WACNuX,MAAOlf,EAAQ,MAEjB,CACE2H,KAAM,aACNuX,MAAOlf,EAAQ,MAEjB,CAAE2H,KAAM,SAAUuX,MAAOlf,EAAQ,MACjC,CAAE2H,KAAM,OAAQuX,MAAOlf,EAAQ,MAC/B,CAAE2H,KAAM,SAAUuX,MAAOlf,EAAQ,MACjC,CACE2H,KAAM,cACNuX,MAAOlf,EAAQ,OAGbklC,IAAoB,MAAPvN,OAAA,EAAAA,EAASuN,YACxBF,GAAY1Y,MAAK,SAAC0e,GAAD,OAAOA,EAAErjC,OAASgwB,EAAQuN,cAC3C,KAEEiG,GAAwBnmC,IAAO,aAAc,cAAcC,IAC/D,OACA,IAEI1B,GAAakF,IAAM6Q,WAAW9Q,IAEpC,OACE,kBAAC8Z,GAAA,EAAD,KACE,kBAAChgB,EAAA,QAAD,CAAMC,MAAO,CAAE+H,eAAgB,WAC7B,kBAAChI,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiB,OACjBG,aAAc,GACd6J,OAAQ,GACR5J,QAAS,KAGX,kBAACC,EAAA,QAAD,CAAMnI,MAAO,CAAEoI,WAAY,OAAQxH,UAAnC,MAA6Cw0B,OAA7C,EAA6CA,EAAS10B,MAErDzB,GAAY,kBAAC,GAAD,KAAIA,GAChBsvC,GACC,kBAACxuC,EAAA,QAAD,KACE,kBAACG,EAAA,EAAD,CACEC,OAAQ,CAAEL,OACVE,MAAO,CACLK,MAAO,OACPC,OAAQ,KAEVouB,WAAW,aAGb,MAEI,MAAP0G,OAAA,EAAAA,EAAShkB,MACR,kBAAC7Q,EAAA,EAAD,CACEC,QAAS,WAAO,IAAD,EACbsM,EAAWoC,SAAS,OAAQ,CAAExO,KAAI,MAAE00B,GAAF,SAAEA,EAAShkB,WAAX,EAAE,EAAe1Q,SAGrD,kBAAC,GAAD,cACQ,MAAP00B,GAAA,SAAAA,EAAShkB,WAAT,IAAeuL,QACd,kBAACzc,EAAA,EAAD,CACEC,OAAQ,CAAEL,IAAKtD,EAAUC,aAAV,MAAwB24B,GAAxB,SAAwBA,EAAShkB,WAAjC,EAAwB,EAAeuL,QACtD3c,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,YAGf,kBAAC,GAAD,WAAI0G,GAAJ,SAAIA,EAAShkB,WAAb,EAAI,EAAe1Q,OAEnB,KAEHiiC,IAAclgC,MAASqX,QAAQ8uB,KAC9B,kBAAC7oC,EAAA,QAAD,CAAMC,MAAO,CAAEK,MAAO,IAAKyR,OAAQ,KACjC,kBAAC5R,EAAA,EAAD,CACEC,OAAQwiC,GAAWhmB,MACnB3c,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAW,YAEb,kBAAC3uB,EAAA,QAAD,KACE,kBAAC,GAAD,CAAG2U,MAAI,GAAE3T,EAAQ4hC,GAAWv9B,SAKjCopB,EAASztB,EAAQ,UAAW6jB,EAAW,SAAM,gBAC7C4J,EACCztB,EAAQ,cACR0B,IAAM,MAAC2yB,OAAD,EAACA,EAASvQ,UAAU8W,OAAO,eAElCnN,EAASztB,EAAQ,QAAT,gBAAsBq0B,OAAtB,EAAsBA,EAAS/jB,OACvCmd,EAASztB,EAAQ,QAAT,gBAAsBq0B,OAAtB,EAAsBA,EAAS9jB,OACvCkd,EAASztB,EAAQ,QAASgF,GAAO,MAACqvB,OAAD,EAACA,EAAStwB,KAAM,SACjD0pB,EACCztB,EAAQ,YACRiF,GAAW,MAACovB,OAAD,EAACA,EAAS1jB,SAAU,SAEhC8c,EAASztB,EAAQ,WAAT,MAAuBq0B,OAAvB,EAAuBA,EAAS3jB,QAAhC,KACR+c,EAASztB,EAAQ,QAAT,MAAkBq0B,OAAlB,EAAkBA,EAAS7E,MACnC/B,EAASztB,EAAQ,WAAT,MAAqBq0B,OAArB,EAAqBA,EAAS1O,SACtC8H,EAASztB,EAAQ,eAAT,MAAyBq0B,OAAzB,EAAyBA,EAAS5E,QAE3C,kBAAC,GAAD,CAAG9b,MAAI,GAAE3T,EAAQ,eA3IN,CACjB,CACEL,KAAM,iBAER,CACEA,KAAM,UAER,CACEA,KAAM,OAER,CACEA,KAAM,YAER,CACEA,KAAM,WAER,CACEA,KAAM,cAER,CACEA,KAAM,WAER,CACEA,KAAM,eAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,SA6GC4G,KAAI,SAACmhC,GAAD,OAAOA,EAAE/nC,QACb4G,KAAI,SAACwY,GACJ,OACE2P,GACAA,EAAOnoB,KAAI,SAACgG,EAAMzP,GAChB,IAAM6qC,EAAc5oB,EAAN,QACd,OAAW,MAAPsV,OAAA,EAAAA,EAAS10B,QAAS4M,EAAKo7B,GAEvB,kBAAC,GAAD,KACG3nC,EAAQ+e,GADX,OAC0BxS,EAAKA,MAK5B,WAKf,kBAACvN,EAAA,QAAD,CAAMC,MAAOmtB,GAAOiD,KAClB,kBAAC,GAAD,CACEppB,MAAOjG,EAAQ,QACfP,QAAS,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACcoE,EAAI,iBACN9D,EADK,WACgB21B,EAAQje,KAFzC,gBACCA,EADD,EACCA,GAIRrK,EAAWoC,SAAS,UAAW,CAAEiI,OAL1B,+DASX,kBAAC,GAAD,CACEnQ,MAAOjG,EAAQ,OACfP,QAAS,kBACPsM,EAAWoC,SAAS,MAAO,CACzBxO,KAAM00B,EAAQ10B,UAIpB,kBAAC,GAAD,CACEsG,MAAOjG,EAAQ,UACfP,QAAS,kBACPsM,EAAWoC,SAAS,OAAQ,CAC1BxO,KAAM00B,EAAQ10B,UAIpB,kBAAC,GAAD,CACEsG,MAAOjG,EAAQ,UACfP,QAAS,kBACPsM,EAAWoC,SAAS,SAAU,CAC5ByM,GAAIyZ,EAAQ10B,UAKlB,kBAAC,GAAD,CACEsG,MAAOjG,EAAQ,UACfP,QAAS,kBACPQ,GACED,EAAQ,cACRA,EAAQ,cACR,CACE,CAAEG,KAAMH,EAAQ,MAAOP,QAAS,kBAvR/B,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACUqE,EAAK,SAAU,CACxC0H,MAAOP,EAAOlL,WACd2nB,OAAM,MAAEgO,OAAF,EAAEA,EAASje,GACjBq3B,IAAK,WACLC,UAAW,aALI,gBACTxvC,EADS,EACTA,SAOR+W,EAAY/W,GARK,4DAuRqCyvC,KACtC,CAAExtC,KAAMH,EAAQ,YAElB,CAAEzD,IAAK,oBAOjB,kBAACyC,EAAA,QAAD,CAAMC,MAAO,CAAEsV,eAAgB,KACX,kBAAV,MAAP8f,OAAA,EAAAA,EAASoZ,MAA2C,YAAV,MAAPpZ,OAAA,EAAAA,EAASoZ,MAC3C,kBAACpB,GAAD,CAAK1oC,MAAOA,EAAOonC,IAAG,MAAE1W,OAAF,EAAEA,EAAS0W,OAIrC,kBAAC/rC,EAAA,QAAD,KACG2rC,EAAOpkC,KAAI,SAACqV,GACX,IAAM7c,EAAMtD,EAAUC,YAAc,IAAMkgB,EAAMA,MAChD,OACE,kBAAC5c,EAAA,QAAD,KACE,kBAACG,EAAA,EAAD,CACEC,OAAQ,CAAEL,OACVE,MAAO,CACLK,MAAO,OACPC,OAAQ,KAEVouB,WAAW,oBChddigB,GANQ,SAAC,GAAiC,IAA/B7hC,EAA8B,EAA9BA,WAAY/B,EAAkB,EAAlBA,YACpC,OACE,kBAAC,GAAD,CAAM3F,KAAK,aAAa0H,WAAYA,EAAY/B,YAAaA,K,kbC+IlD6jC,G,qLA7IbxkC,MAAQ,CACNs1B,UAAW,GACXC,UAAW,GACXrgC,MAAO,KACPgX,QAAS,M,+CAGF,IAAD,OACEtL,EAAOhB,KAAKJ,MAAMmB,YAAlBC,GAEFjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAH9B,EAK2B/C,KAAKI,MAA9Bs1B,EALF,EAKEA,UAAWC,EALb,EAKaA,UAEXz0B,EAAUlB,KAAKJ,MAAMkD,WAAW1C,MAAMkT,OAAtCpS,MAEHA,EAIDw0B,IAAcC,EAKlBjhC,MAASlC,EAAUC,YAAd,mBAA6C,CAChD+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEqX,SAAUqB,KAAIC,QAAQioB,GAAYx0B,YAExDlM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GAYL,OAXAnY,QAAQ6H,IAAI,eAAgBsQ,GAExBA,EAAapY,MACf,EAAK6N,SAAS,CAAEmJ,QAAS,KAAMhX,MAAOoY,EAAapY,QAEnD,EAAK6N,SACH,CAAE7N,MAAO,KAAMgX,QAASoB,EAAapB,UACrC,eAIGoB,KAERrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,MA5BhB0K,KAAKmD,SAAS,CAAE7N,MAAOyB,EAAQ,wBAJ/BiJ,KAAKmD,SAAS,CAAE7N,MAAOyB,EAAQ,e,+BAoCzB,IAAD,SAIHiJ,KAAKJ,MADQoB,GAHV,EAEL8B,WAFK,EAGL/B,YAAeC,IAGXjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,SAAUC,WAAY,WAC5D,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACL8R,OAAQ,GACR5J,QAAS,GACT6f,SAAU,IACVjgB,gBAAiB,OACjBG,aAAc,KAGf+B,KAAKI,MAAM9K,MACV,kBAAC6I,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,QAAUoJ,KAAKI,MAAM9K,OACzC0K,KAAKI,MAAMkM,QACb,kBAACnO,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,UAAYoJ,KAAKI,MAAMkM,SAC3C,KAEJ,kBAACvW,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,gBAExC,kBAACwH,EAAA,EAAD,CACEgP,iBAAe,EACf/O,aAAc,SAACk3B,GAAD,OAAe,EAAKvyB,SAAS,CAAEuyB,eAC7Cl5B,MAAOwD,KAAKI,MAAMs1B,UAClB1/B,MAAO,CAAE8H,gBAAiB,QAASO,SAAU,OAIjD,kBAACtI,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,WAExC,kBAACwH,EAAA,EAAD,CACEgP,iBAAe,EACf/O,aAAc,SAACm3B,GAAD,OAAe,EAAKxyB,SAAS,CAAEwyB,eAC7Cn5B,MAAOwD,KAAKI,MAAMu1B,UAClB3/B,MAAO,CAAE8H,gBAAiB,QAASO,SAAU,OAIjD,kBAACtI,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAACQ,EAAA,EAAD,CACEP,MAAO,CACL8H,gBAAiB,OACjB2E,kBAAmB,GACnBvE,QAAS,GACTD,aAAc,IAEhBzH,QAAS,kBAAM,EAAKsW,UAEpB,kBAAC3O,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,GAAIzH,MAAO,UACjCG,EAAQ,kB,GApIKmF,IAAMuE,WC4ErBokC,GA1EC,SAAC,GAQV,IAPL/hC,EAOI,EAPJA,WAOI,IANJ/B,YACEJ,EAKE,EALFA,OACAK,EAIE,EAJFA,GAKIjK,GADF,EAHFkK,SAGE,EAFFN,OAAUjG,MAGIrH,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SADhC,EAG0BrN,mBAAS,IAHnC,WAGGovC,EAHH,KAGYC,EAHZ,OAI4BrvC,mBAAS,MAJrC,WAIGT,EAJH,KAIa+W,EAJb,OAK8BtW,mBAAS,IALvC,WAKG+uC,EALH,KAOEC,GAPF,KAOe,SAAOF,EAAKpnB,GAAZ,iBAAAjoB,EAAAC,OAAA,kEAAAD,EAAA,MACUqE,EAAK,SAAU,CACxC0H,MAAOP,EAAOlL,WACd2nB,SACAonB,MACAC,eALe,gBACTxvC,EADS,EACTA,SAOR+W,EAAY/W,GACZ+vC,IATiB,8DAYbA,EAAa,4BAAA7vC,EAAAC,OAAA,kEAAAD,EAAA,MACSoE,EAAI,iBAAiBoH,EAAOlL,aADrC,gBACTqvC,EADS,EACTA,QACRC,EAAWD,GAFM,6DAQnB,OAHA5wC,EAAO8wC,GAEPzvC,QAAQ6H,IAAI,UAAW0nC,GAErB,kBAAC/uB,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACrC,kBAACnI,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmJ,OAAQ,KAC9B,kBAAC/R,EAAA,QAAD,KACGd,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KADlC,MAGG6vC,GAHH,MAGGA,EAASxnC,SAHZ,EAGGwnC,EAASxnC,KAAM,SAACqd,GAAD,OACd,kBAAC5kB,EAAA,QAAD,CACEC,MAAO,CAAEC,cAAe,MAAO8H,eAAgB,kBAE/C,kBAAC,GAAD,CAAM4c,KAAMA,EAAMhkB,KAAM,GAAImM,WAAYA,IAExC,kBAAC/M,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAAC,GAAD,KAAIc,EAAQ4jB,EAAK6pB,MACjB,kBAAC,GAAD,KACGztC,EAAQ,UADX,KACwB4jB,EAAK8pB,WAE7B,kBAAC,GAAD,CACEznC,MAAOjG,EAAQ,OACfP,QAAS,kBAAMkuC,EAAW,SAAU/pB,EAAKxN,OAE3C,kBAAC,GAAD,CACEnQ,MAAOjG,EAAQ,aACfP,QAAS,kBAAMkuC,EAAW,eAAgB/pB,EAAKxN,OAEjD,kBAAC5W,EAAA,EAAD,CAAkBC,QAAS,kBAAMkuC,EAAW,OAAQ/pB,EAAKxN,MACvD,kBAACD,GAAA,EAAD,CAAQxW,KAAK,QAAQE,MAAM,MAAMD,KAAM,aAQnD,kBAACZ,EAAA,QAAD,CAAMC,MAAO,CAAEM,OAAQ,Q,kbCqDd4vB,G,qLA5Gb9lB,MAAQ,CACNnL,SAAU,KACVumB,QAAS,GACT5lB,OAAQD,KAAKC,U,EAGfqvC,IAAM,WAAO,IACHtkC,EAAW,EAAKf,MAAMmB,YAAtBJ,OAERjM,MAASlC,EAAUC,YAAd,OAAiC,CACpC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdiB,KAAM,EAAK0J,MAAM1J,KACjB8kB,QAAS,EAAKpb,MAAMob,YAGrBxmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CAAElO,WAAUW,OAAQD,KAAKC,SAAU4lB,QAAS,KAC1D,EAAK5b,MAAMmB,YAAYE,SAASN,EAAOlL,YAFnC,+DAILJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,O,2DAjCC,IAAD,EACZoB,EAAI,SAAGsJ,KAAKJ,MAAMkD,WAAW1C,MAAMkT,aAA/B,EAAG,EAAoC5c,KAC7CA,GACFsJ,KAAKmD,SAAS,CAAEzM,W,mCAkCN,IAAD,SAMPsJ,KAAKJ,MAJPmB,YACEC,EAHO,EAGPA,GACUtG,EAJH,EAIPiG,OAAUjG,MAIR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,KACE,kBAACwI,EAAA,EAAD,CACEvI,MAAOA,GAAM0E,GAAOvD,UACpBkW,qBAAsB3S,EAAM4S,kBAC5BrJ,YAAalN,EAAQ,QACrByF,MAAOwD,KAAKI,MAAM1J,KAClB8H,aAAc,SAAC9H,GAAD,OAAU,EAAKyM,SAAS,CAAEzM,YAG1C,kBAAC,GAAD,CACEqK,YAAaf,KAAKJ,MAAMmB,YACxBya,QAASxb,KAAKI,MAAMob,QACpB8J,gBAAiB,SAACvxB,GAAD,OAAO,EAAKoP,SAAS,CAAEqY,QAASznB,KACjD6B,OAAQoK,KAAKI,MAAMxK,OACnB2vB,eAAgB,SAACxxB,GAAD,OAAO,EAAKoP,SAAS,CAAEvN,OAAQ7B,OAGjD,kBAACgC,EAAA,QAAD,CACEC,MAAO,CACLwQ,UAAW,KAGb,kBAAC,GAAD,CACE9L,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,OACfP,QAAS,kBAAM,EAAKyuC,a,+BAMpB,IAAD,EAOHjlC,KAAKJ,MALPkD,EAFK,EAELA,WAFK,IAGL/B,YACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAGNzF,EAAa+K,KAAKI,MAAlBnL,SAEF8B,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAACgT,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAEV,KAEH+K,KAAKujB,aAEN,kBAAChtB,EAAA,EAAD,CACEP,MAAO,CAAEwQ,UAAW,IACpBhQ,QAAS,kBAAMsM,EAAWoC,SAAS,UAAW,CAAEmG,MAAO,MAEvD,kBAAC,GAAD,KAAItU,EAAQ,qC,GA3GL0J,a,GCGOuB,IAAWzI,IAAI,UAA1BjD,I,GAAPD,M,GAAOC,QA6KAsjC,GA5KC,SAAC,GAUV,IATL92B,EASI,EATJA,WASI,KARJ/B,YAQI,EAPJA,aACEC,EAME,EANFA,GACAkkC,EAKE,EALFA,UACAnL,EAIE,EAJFA,gBACA94B,EAGE,EAHFA,SAGE,IAFFN,OAAUjG,EAER,EAFQA,MAAOjF,EAEf,EAFeA,WAGbsB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAK0BrN,oBAAS,GALnC,WAKGyyB,EALH,KAKYlN,EALZ,OAM4BvlB,qBAN5B,WAMGT,EANH,KAMa+W,EANb,OAO4BtW,mBAAS,MAPrC,WAOawjC,GAPb,WASmCpa,2BAA/BD,2BASR3qB,EAAO6lC,GACP7lC,GARsB,0BAAAiB,EAAAC,OAAA,uDACpB6lB,GAAW,GADS,WAAA9lB,EAAA,MAEDoE,EAAI,kBAAkB9D,IAFrB,OAEdm5B,EAFc,OAGpBsK,EAAYtK,GACZ3T,GAAW,GAJS,+DAgItB,OACE,kBAACllB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IAdnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE+H,eAAgB,gBAAiB9H,cAAe,QAC7D,kBAACF,EAAA,QAAD,KAAOd,GAAY,kBAAC,GAAD,KAAIA,IAEvB,kBAACc,EAAA,QAAD,KACE,kBAACQ,EAAA,EAAD,CACEC,QAAS,kBAAMsM,EAAWoC,SAAS,mBAEnC,kBAAC,KAAD,CAAWxO,KAAK,aAAaE,MAAM,SAASD,KAAM,QASxD,kBAAC4U,GAAA,EAAD,CACEyK,sBAAuB,CACrB1f,OAAwB,QAAhBwJ,UAASC,GAAezJ,GAAS,SAAMvB,GAEjD6iC,eACE,kBAACwK,GAAA,EAAD,CACElU,WAAY/F,EACZgG,UAAW,WACT4L,IACA/tB,EAAY,SAIlBR,KAAM05B,EACNr6B,WAjGa,SAAC,GAAqB,IAAnBpQ,EAAkB,EAAlBA,KACdW,GADgC,EAAZvH,MACb4lC,GAAa1Z,MAAK,SAAChsB,GAAD,OAAOA,EAAEqH,OAASX,EAAKW,SAEtD,OACE,kBAACrF,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAACC,EAAA,EAAD,CACEC,OAAQiF,EAAKuX,MACb3c,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAY,YAGd,kBAAC3uB,EAAA,QAAD,CAAMC,MAAO,CAAEI,WAAY,GAAIuI,KAAM,IACnC,kBAAC,GAAD,KACG5H,EAAQ,aADX,KAC2B0D,EAAK4nC,SAEhC,kBAAC,GAAD,KACGtrC,EAAQ,SADX,KACuB0D,EAAK6I,MAE5B,kBAAC,GAAD,KACGvM,EAAQ,gBADX,KAC8B0D,EAAK0qC,oBAAoBtrC,OADvD,IAEGY,EAAK0+B,iBAER,kBAAC,GAAD,KACGpiC,EAAQ,SADX,WACwBqE,EAAKs+B,KAD7B,MAGA,kBAAC,GAAD,KACG3iC,EAAQ,UADX,WACyBqE,EAAK8lB,OAASzmB,EAAK0+B,gBAD5C,MAIA,kBAAC,GAAD,KACGpiC,EAAQ,cADX,KAC4BqE,EAAKu+B,YAEhCl/B,EAAK0qC,oBAAoBtrC,OAAS,GACjCY,EAAK0qC,oBAAoB7nC,KAAI,SAACmhC,GAAD,OAC3B,kBAAC,GAAD,CAAM9jB,KAAM8jB,EAAE9jB,KAAM7X,WAAYA,EAAYnM,KAAM,QAGnD8D,EAAK0qC,oBAAoBplB,MAAK,SAAChsB,GAAD,aAAQ,MAADA,GAAA,SAAAA,EAAG4mB,WAAH,IAASxN,OAAT,MAAgBnM,OAAhB,EAAgBA,EAAImM,OAC1D1S,EAAK0qC,oBAAoBtrC,SAAWY,EAAK0+B,gBACvC,kBAAC,GAAD,CACEz+B,MAAOA,EACPsC,MAAOjG,EAAQ,YACfP,QAAS,kBAtDT,SAAO4uC,GAAP,iBAAAjwC,EAAAC,OAAA,uDACZ6lB,GAAW,GADC,WAAA9lB,EAAA,MAEeqE,EAAK,eAAgB,CAC9C/D,aACA2vC,eAJU,gBAEJnwC,EAFI,EAEJA,SAIR+W,EAAY/W,GACZgmB,GAAW,GACXha,EAASxL,GACTskC,IATY,4DAsDenrB,CAAMnU,EAAK0S,OAG5B,kBAAC,GAAD,CACEzS,MAAOA,EACPsC,MAAOjG,EAAQ,YACfP,QAAS,kBAxET,SAAO4uC,GAAP,iBAAAjwC,EAAAC,OAAA,uDACZ6lB,GAAW,GADC,WAAA9lB,EAAA,MAEeqE,EAAK,eAAgB,CAC9C/D,aACA2vC,eAJU,gBAEJnwC,EAFI,EAEJA,SAIR+W,EAAY/W,GACZ8kC,IACA9e,GAAW,GACXha,EAASxL,GATG,4DAwEe+sC,CAAM/nC,EAAK0S,OAI9B,kBAAC,GAAD,CACEzS,MAAOA,EACPsC,MAAOjG,EAAQ,eACfP,QAAS,YA7FR,SAAO4uC,GAAP,YAAAjwC,EAAAC,OAAA,uDACX6lB,GAAW,GADA,WAAA9lB,EAAA,MAEyBqE,EAAK,cAAe,CACtD/D,aACA2vC,eAJS,gBAEH94B,EAFG,EAEHA,QAASrX,EAFN,EAEMA,SAIjB+W,EAAY/W,GACZgmB,GAAW,GACP3O,IACFytB,IACA94B,EAASxL,IAVA,4DA8FCvC,CAAKuH,EAAK0S,c,kbCpCXmuB,G,qLArGbl7B,MAAQ,CACN6L,MAAO,GACP3W,MAAO,KACPgX,QAAS,M,+CAGF,IAAD,OACE7W,EAAeuK,KAAKJ,MAAMmB,YAAYJ,OAAtClL,WADF,EAEsBuK,KAAKI,MAAzB6L,EAFF,EAEEA,MAFF,EAESE,SACf5W,QAAQ6H,IAAI,UACZ1I,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEW,aAAYwW,YAElCjX,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GAWL,OAVAnY,QAAQ6H,IAAI,eAAgBsQ,GAExBA,EAAapY,MACf,EAAK6N,SAAS,CAAEmJ,QAAS,KAAMhX,MAAOoY,EAAapY,QAEnD,EAAK6N,SACH,CAAE7N,MAAO,KAAMgX,QAASoB,EAAapB,UACrC,eAGGoB,KAERrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,UACgB0K,KAAKJ,MAApBkD,WAMJ9C,KAAKJ,MAJPmB,aACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAIR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CACEC,MAAO,CACL8R,OAAQ,GACR5J,QAAS,GACT6f,SAAU,IACV9f,aAAc,KAGf+B,KAAKI,MAAM9K,MACV,kBAAC6I,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,QAAUoJ,KAAKI,MAAM9K,OACzC0K,KAAKI,MAAMkM,QACb,kBAACnO,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO,UAAYoJ,KAAKI,MAAMkM,SAC3C,KAEJ,kBAACvW,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,KAGX,kBAACC,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,UAExC,kBAACwH,EAAA,EAAD,CACE0F,YAAalN,EAAQ,SACrBsW,qBAAsB3S,EAAM4S,kBAC5B9O,aAAc,SAACyN,GAAD,OAAW,EAAK9I,SAAS,CAAE8I,WACzCzP,MAAOwD,KAAKI,MAAM6L,MAClBjW,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CACE2E,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,gBACfP,QAAS,kBAAM,EAAKsW,kB,GA7Fd5Q,IAAMuE,W,kbCuCX66B,G,qLAvCbl7B,MAAQ,CACNilC,SAAU,M,2DAIVrlC,KAAKslC,a,iCAGK,IAAD,OACHC,EAAkBvlC,KAAKJ,MAAMkD,WAAW1C,MAAMkT,OAAOpS,MAE3DxM,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAEywC,sBAEtBvwC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GACL,EAAKvK,SAAS,CAAElO,SAAUyY,OAE3BrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,IACgB0K,KAAKJ,MAApBkD,WAER,OACE,kBAAC/M,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,SAAUC,WAAY,WAC5D,kBAAC,GAAD,cAAIgC,KAAKI,QAAT,SAAI,EAAYnL,eAAhB,EAAI,EAAsBA,e,GAlCdiH,IAAMuE,W,kbCkBlBpK,GAAU2L,IAAWzI,IAAI,UAAzBlD,MACF0L,GAAU1L,GAAQ,IA8STmvC,G,kCA3Sb,WAAY5lC,GAAQ,IAAD,uBACjB,cAAMA,IAWRiL,WAAa,YAAsB,IAAnBpQ,EAAkB,EAAlBA,KAAM5G,EAAY,EAAZA,MAAY,EAI5B,EAAK+L,MAAMmB,YAFbC,EAF8B,EAE9BA,GACUtG,EAHoB,EAG9BiG,OAAUjG,MAGN2/B,EAAO1kC,KAAKwE,QAAS,MAAF6G,OAAA,EAAAA,EAAIlG,MAAO,KAAOL,EAAK0S,GAAK1S,EAAK0S,KACpDotB,EAAQF,EAAO,GAAK,GAAKA,EAEzBv8B,EACJ,EAAKsC,MAAMyC,WAAapI,EAAK0S,GAAK,eAAYpY,EAChD,OACE,kBAACwB,EAAA,EAAD,CACEC,QAAS,WACP,EAAK2M,SAAS,CAAEN,SAAUpI,EAAK0S,OAGjC,kBAACpX,EAAA,QAAD,CACEzC,IAAG,OAASO,EACZmC,MAAO,CACLC,cAAe,MACfgI,aAAc,GACdC,QAAS,GACTuE,kBAAmB,GACnB1E,eAAgB,gBAChBD,oBAGF,kBAACK,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgBH,EAAKyI,QACjD,kBAAC/E,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB2/B,EAA5C,QAzCW,EA+CnB5X,OAAS,WAAO,IACNhiB,EAAW,EAAKf,MAAMmB,YAAtBJ,OAER,EAAKwC,SAAS,CAAEglB,SAAS,IAAQ,WAC/BzzB,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdyN,OAAQ,EAAK9C,MAAMyC,SACnB2Y,QAAS,EAAKpb,MAAMob,YAGrBxmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAKwK,MAAMmB,YAAYE,SAASN,EAAOlL,YAEvC,EAAK0N,SAAS,CACZlO,WACAkzB,SAAS,EACTvyB,OAAQD,KAAKC,SACb4lB,QAAS,KAPP,+DAULnmB,OAAM,SAACC,GACNC,QAAQD,MAAMA,UA3EH,EAgFnByvB,aAAe,WAAO,IAAD,EAQf,EAAKnlB,MANPmB,EAFiB,EAEjBA,YAFiB,IAGjBA,YACEC,EAJe,EAIfA,GAJe,IAMfL,OAIE5J,GAVa,EAMLtB,WANK,EAMOiF,MAIVrH,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SAEpC,OACE,kBAAChN,EAAA,QAAD,KACE,kBAAC,GAAD,CACEgL,YAAaA,EACbya,QAAS,EAAKpb,MAAMob,QACpB8J,gBAAiB,SAACvxB,GAAD,OAAO,EAAKoP,SAAS,CAAEqY,QAASznB,KACjD6B,OAAQ,EAAKwK,MAAMxK,OACnB2vB,eAAgB,SAACxxB,GAAD,OAAO,EAAKoP,SAAS,CAAEvN,OAAQ7B,OAGjD,kBAAC,GAAD,CACE2G,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MAErC1E,MAAO,CAAEiI,aAAc,GAAIuI,UAAW,IACtCxJ,MAAOjG,EAAQ,SACfP,QAAS,EAAKmsB,WA3GH,EAuHnBxP,WAAa,SAACmR,EAAGxxB,GAAY,IAAD,EACM,EAAKsN,MAAnBhF,GADQ,EAClBnG,SADkB,EACRmG,MADQ,KACFmpB,IAOpB,EAAK3kB,OARiB,KAGxBkD,WAHwB,EAIxB/B,aAEYrG,GANY,EAKtBiG,OALsB,EAMtBA,OAAUjG,OAId,OACE,kBAACnE,EAAA,EAAD,CACEP,MAAO,CACL8H,gBACE1C,IAASkpB,EAAO5pB,EAAM8H,UAAtB,KAAsC9H,EAAM8H,UAC9CoR,kBAAmB,EACnB/U,iBAAkB,EAClBF,KAAM,EACNZ,eAAgB,SAChBC,WAAY,UAEdxH,QAAS,kBAAM,EAAK2M,SAAS,CAAE/H,KAAMkpB,MAErC,kBAAC,GAAD,KAAIxxB,KA3IR,EAAKsN,MAAQ,CACXyC,SAAU,KACV2Y,QAAS,GACT5lB,OAAQD,KAAKC,SACbX,SAAU,KACVmG,KAAM,YARS,E,8CAkJT,IAAD,SAIH4E,KAAKJ,MAJF,KAELkD,WAFK,EAGL/B,aAAeC,EAHV,EAGUA,GAAIL,EAHd,EAGcA,OAHd,EAK8BX,KAAKI,MAAlCnL,EALD,EAKCA,SAAU4N,EALX,EAKWA,SAAUzH,EALrB,EAKqBA,KAEtBrE,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9B+H,EAAUnV,KAAKsa,MAAMjP,EAAGkP,aAAe,IAAQjN,KAAK5H,OAAS,KAE7DoqC,EAAqB,aAATrqC,EAAsB,EAAa,YAATA,EAAqB,EAAI,GAE/D+B,EAAU,CACd,CACEgQ,GAAI,EACJjK,OAAQnM,EAAQ,eAElB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,EACJjK,OAAQnM,EAAQ,eAGlB,CACEoW,GAAI,GACJjK,OAAQnM,EAAQ,gBAGlB,CACEoW,GAAI,GACJjK,OAAQnM,EAAQ,gBAGlB,CACEoW,GAAI,GACJjK,OAAQnM,EAAQ,gBAGlB,CACEoW,GAAI,GACJjK,OAAQnM,EAAQ,gBAGlB,CACEoW,GAAI,GACJjK,OAAQnM,EAAQ,gBAGlB,CACEoW,GAAI,GACJjK,OAAQnM,EAAQ,iBAIpB,OACE,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,eAChBzH,OAAQ,KAGT0J,KAAKmT,WAAW,WAAYpc,EAAQ,aACpCiJ,KAAKmT,WAAW,UAAWpc,EAAQ,aACnCiJ,KAAKmT,WAAW,SAAUpc,EAAQ,YAGpC9B,EACC,kBAAC8gB,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGmV,UAAW,MACtC7e,EAAS25B,KACN35B,EAAS25B,KAAKtxB,KAAI,SAACmyB,GACjB,OACE,kBAACv5B,EAAA,EAAD,CACEF,MAAO,CACLK,MAAO0L,GAAU1L,GAAQ,IACzBC,OAAQ,IACRouB,WAAY,WAEdvuB,OAAQ,CACNL,IAAKtD,EAAUC,YAAc,IAAMg9B,EAAIhb,UAK/C,KACJ,kBAACtW,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAME,cAChC3F,EAASA,UAGZ,kBAAC,GAAD,CACEyF,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2M,SAAS,CAAElO,SAAU,WAG3C6V,EAAU,EACZ,kBAAC,KAAD,CACEvH,MAAOuH,EACPtH,SAAU,kBAAM,EAAKL,SAAS,CAAEuiC,UAAU,KAC1C/uC,KAAM,GACN8M,WAAY,CAAC,IAAK,KAClBC,WAAY,CAAEC,EAAG5M,EAAQ,WAAY6M,EAAG7M,EAAQ,cAGlD,kBAACwU,GAAA,EAAD,CACE+iB,aAAc,SAAC7zB,EAAM5G,GAAP,aAAwBA,GACtC2X,KAAMrO,EAAQyiB,MAAM6lB,EAAWA,EAAY,GAC3C/V,UAAW7sB,EACXgI,WAAY7K,KAAK6K,WACjBsqB,oBAAqBn1B,KAAK+kB,oB,GApSftkB,a,GCVGuB,IAAWzI,IAAI,UAA1BjD,I,GAAPD,M,GAAOC,QAoMAqvC,GAnMI,SAAC,GAUb,IATL7iC,EASI,EATJA,WASI,KARJ/B,YAQI,EAPJA,aACEC,EAME,EANFA,GACA4kC,EAKE,EALFA,YACA3L,EAIE,EAJFA,kBACAh5B,EAGE,EAHFA,SAGE,IAFFN,OAAUjG,EAER,EAFQA,MAAOjF,EAEf,EAFeA,WAGbsB,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAK0BrN,oBAAS,GALnC,WAKGyyB,EALH,KAKYlN,EALZ,OAM4BvlB,qBAN5B,WAMGT,EANH,KAMa+W,EANb,OAO4BtW,mBAAS,MAPrC,WAOGujC,EAPH,KAOaC,EAPb,KASIra,EAA+BC,2BAA/BD,2BASR3qB,EAAO+lC,GACP/lC,GARsB,0BAAAiB,EAAAC,OAAA,uDACpB6lB,GAAW,GADS,WAAA9lB,EAAA,MAEDoE,EAAI,kBAAkB9D,IAFrB,OAEdm5B,EAFc,OAGpBsK,EAAYtK,GACZ3T,GAAW,GAJS,+DAuJtB,OACE,kBAACllB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IAdnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE+H,eAAgB,gBAAiB9H,cAAe,QAC7D,kBAACF,EAAA,QAAD,KAAOd,GAAY,kBAAC,GAAD,KAAIA,IAEvB,kBAACc,EAAA,QAAD,KACE,kBAACQ,EAAA,EAAD,CACEC,QAAS,kBAAMsM,EAAWoC,SAAS,sBAEnC,kBAAC,KAAD,CAAWxO,KAAK,aAAaE,MAAM,SAASD,KAAM,QASxD,kBAAC4U,GAAA,EAAD,CACEyK,sBAAuB,CACrB1f,OAAwB,QAAhBwJ,UAASC,GAAezJ,GAAS,SAAMvB,GAEjD6iC,eACE,kBAACwK,GAAA,EAAD,CACElU,WAAY/F,EACZgG,UAAW,WACT8L,IACAjuB,EAAY,SAIlBR,KAAMo6B,EACN/6B,WAvHa,SAAC,GAAqB,IAAnBpQ,EAAkB,EAAlBA,KAAkB,EAAZ5G,MAC1B,OACE,kBAACkC,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,QAC5B,kBAACC,EAAA,EAAD,CACEC,OACgB,SAAdsE,EAAKW,KACD3H,EAAQ,KACM,YAAdgH,EAAKW,KACL3H,EAAQ,KACRA,EAAQ,KAEduC,MAAO,CAAEK,MAAO,IAAKC,OAAQ,KAC7BouB,WAAY,YAGd,kBAAC3uB,EAAA,QAAD,CAAMC,MAAO,CAAEI,WAAY,GAAIuI,KAAM,IACnC,kBAAC,GAAD,KACG5H,EAAQ,aADX,KAC2B0D,EAAK4nC,SAEhC,kBAAC,GAAD,KACGtrC,EAAQ,SADX,KACuB0D,EAAK6I,MAE5B,kBAAC,GAAD,KACGvM,EAAQ,gBADX,KAC8B0D,EAAKorC,uBAAuBhsC,OAD1D,IAEGY,EAAK0+B,iBAER,kBAAC,GAAD,KACGpiC,EAAQ,SADX,WACwB0D,EAAKmqB,MAD7B,MAGA,kBAAC,GAAD,KACG7tB,EAAQ,mBADX,WACkC0D,EAAK82B,MADvC,MAGC92B,EAAKorC,uBAAuBhsC,OAAS,GACpC,kBAAC,GAAD,KAAIY,EAAKorC,uBAAuBvoC,KAAI,SAACvJ,GAAD,OAAOA,EAAE2C,QAAMxD,KAAK,OAGvDuH,EAAKorC,uBAAuB9lB,MAAK,SAAChsB,GAAD,OAAOA,EAAE2C,QAAF,MAAWsK,OAAX,EAAWA,EAAItK,SACxD+D,EAAKorC,uBAAuBhsC,SAAWY,EAAK0+B,gBAC1C,kBAAC,GAAD,CACEz+B,MAAOA,EACPsC,MAAOjG,EAAQ,YACfP,QAAS,kBArDT,SAAOsvC,GAAP,iBAAA3wC,EAAAC,OAAA,uDACZ6lB,GAAW,GADC,WAAA9lB,EAAA,MAEeqE,EAAK,kBAAmB,CACjD/D,aACAqwC,kBAJU,gBAEJ7wC,EAFI,EAEJA,SAIR+W,EAAY/W,GACZgmB,GAAW,GACXha,EAASxL,GACTwkC,IATY,4DAqDerrB,CAAMnU,EAAK0S,OAG5B,kBAAC,GAAD,CACEzS,MAAOA,EACPsC,MAAOjG,EAAQ,YACfP,QAAS,kBAvET,SAAOsvC,GAAP,iBAAA3wC,EAAAC,OAAA,uDACZ6lB,GAAW,GADC,WAAA9lB,EAAA,MAEeqE,EAAK,kBAAmB,CACjD/D,aACAqwC,kBAJU,gBAEJ7wC,EAFI,EAEJA,SAIR+W,EAAY/W,GACZglC,IACAhf,GAAW,GACXha,EAASxL,GATG,4DAuEe+sC,CAAM/nC,EAAK0S,OAI9B,kBAAC,GAAD,CACEzS,MAAOA,EACPsC,MAAOjG,EAAQ,eACfP,QAAS,WAEP,IAAM2G,EAAU87B,EAAS37B,KACvB,SAACi8B,GAAD,OACKA,EAAQvK,KADb,IACqBj4B,EAAQ,QAD7B,IAEIwiC,EAAQtL,MAFZ,QAGUl3B,EAAQ,YAEpBoG,EAAQK,KAAKzG,EAAQ,WACrB,IACMmoB,EAAoB/hB,EAAQtD,OAAS,EAE3CglB,EACE,CACE1hB,UACA+hB,oBACAC,4BAP2BpqB,IAS7B,SAACqqB,GACKA,IAAgBjiB,EAAQtD,OAAS,GAhH1C,SAAOisC,EAAcrW,GAArB,YAAAt6B,EAAAC,OAAA,uDACX6lB,GAAW,GADA,WAAA9lB,EAAA,MAEyBqE,EAAK,iBAAkB,CACzD/D,aACAqwC,eACAtM,MAAK,MAAE/J,OAAF,EAAEA,EAAKtiB,MALH,gBAEHb,EAFG,EAEHA,QAASrX,EAFN,EAEMA,SAKjB+W,EAAY/W,GACZgmB,GAAW,GACP3O,IACF2tB,IACAh5B,EAASxL,IAXA,4DAiHOvC,CAAKuH,EAAK0S,GAAI8rB,EAAS7Z,iBC7JhC2mB,GAAgB,CAC3BrvC,KAAM,WACN8L,UAAW,UACXG,cAAe,UACf2K,kBAAmB,UACnBN,QAAS,UACTpS,YAAa,UACborC,eAAgB,WA0GHC,GA/FK,SAAC,GAA0D,EAAxDnjC,WAAyD,IAAD,IAA5C/B,YAAeH,EAA6B,EAA7BA,SAAUI,EAAmB,EAAnBA,GACpDklC,EADuE,EAAfvlC,OAClCjG,MAKtB3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9BojC,EAAS,CACbJ,GAEA,CACErvC,KAAMK,EAAQ,mBACdyL,UAAW,UACXG,cAAe,UACf2K,kBAAmB,UACnBN,QAAS,UACTpS,YAAa,UACborC,eAAgB,WAElB,CACEtvC,KAAMK,EAAQ,cACdiW,QAAS,UACTxK,UAAW,UACX5H,YAAa,UACb+H,cAAe,UACf2K,kBAAmB,UACnB04B,eAAgB,WAElB,CACEtvC,KAAMK,EAAQ,aACdiW,QAAS,UACTxK,UAAW,UACX5H,YAAa,UACb+H,cAAe,UACf2K,kBAAmB,UACnB04B,eAAgB,WAElB,CACEtvC,KAAMK,EAAQ,cACdiW,QAAS,UACTxK,UAAW,UACX5H,YAAa,UACb+H,cAAe,UACf2K,kBAAmB,UACnB04B,eAAgB,YAIpB,OACE,kBAACjwB,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACxBwnC,EAAO7oC,KAAI,SAAC5C,EAAO7G,GAClB,OACE,kBAAC0C,EAAA,EAAD,CACEC,QAAS,kBApDF,SAACkE,GAChBkG,EAAS,CAAExF,KAAM,YAAaoB,MAAO9B,IAmDd0rC,CAAS1rC,IACxBpH,IAAG,IAAMO,EACTmC,MAAO,CACLC,cAAe,MACf+H,WAAY,SACZ8J,OAAQ,KAGV,kBAAC/R,EAAA,QAAD,KACE,kBAACA,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiBpD,EAAMsS,QACvBq5B,oBAAqB,GACrBzhC,YAAa,EACb0hC,qBAAsB,GACtBjwC,MAAO,GACPC,OAAQ,MAGZ,kBAACP,EAAA,QAAD,CACEC,MAAO,CACL8H,gBAAiBpD,EAAM8H,UACvBoC,YAAa,EACb2hC,uBAAwB,GACxBC,wBAAyB,GACzBnwC,MAAO,GACPC,OAAQ,OAKd,kBAAC6H,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAOsvC,EAAatrC,YAAaxE,WAAY,KACzDsE,EAAMhE,Y,kbCSN4kC,G,qLA7Gbl7B,MAAQ,CACNoM,MAAO,GACPlX,MAAO,KACPgX,QAAS,M,8CAGH,IAAD,OACGxJ,EAAe9C,KAAKJ,MAApBkD,WAEF5B,EAAQlB,KAAKJ,MAAMmB,YAAYJ,OAAOlL,WAEpC+W,EAAUxM,KAAKI,MAAfoM,MAER9X,MAASlC,EAAUC,YAAd,YAAsC,CACzC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CAAE0X,QAAOtL,YAE7BlM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GAQL,OAPAnY,QAAQ6H,IAAI,eAAgBsQ,GAE5B,EAAKvK,SAAS,CAAElO,SAAUyY,EAAazY,WAEnCyY,EAAapB,SACfxJ,EAAWoC,SAAS,kBAAmB,CAAEsH,UAEpCkB,KAERrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOH0K,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAKR3D,GAFYiJ,KAAKI,MAAfoM,MAEQnZ,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,SAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,SAAUC,WAAY,WAC5D,kBAAC+X,GAAA,EAAD,CACE/f,MAAO,CACL2I,KAAM,IAGPqB,KAAKI,MAAMnL,SACV,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzBoF,KAAKI,MAAMnL,UAEZ,KAEJ,kBAACc,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEqI,SAAU,KAAOtH,EAAQ,gBACxC,kBAACwH,EAAA,EAAD,CACE0F,YAAY,MACZoJ,qBAAsB3S,EAAM4S,kBAC5B9O,aAAc,SAACgO,GAAD,OAAW,EAAKrJ,SAAS,CAAEqJ,WACzChQ,MAAOwD,KAAKI,MAAMoM,MAClBxW,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CACE2E,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,QACfP,QAAS,kBAAM,EAAKiwC,iB,GA3FdvqC,IAAMuE,W,kbCqHXiB,M,qLAnHbtB,MAAQ,CACNwM,KAAM,GACNtX,MAAO,KACPgX,QAAS,M,8CAGH,IAAD,WAIDtM,KAAKJ,MAJJ,KAEHkD,WAFG,EAGH/B,aAAeH,EAHZ,EAGYA,SAAUK,EAHtB,EAGsBA,SAGnB2L,EAAS5M,KAAKI,MAAdwM,KAERlY,MAASlC,EAAUC,YAAd,eAAyC,CAC5C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnB8X,OACAJ,MAAK,SAAExM,KAAKJ,MAAMkD,WAAW1C,MAAMkT,aAA9B,EAAE,EAAoC9G,UAG5CxX,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC0Y,GAiBL,OAhBAnY,QAAQ6H,IAAI,eAAgBsQ,GAE5B,EAAKvK,SAAS,CAAElO,SAAUyY,EAAazY,WAEnCyY,EAAapB,UACf1L,EAAS,CACPxF,KAAM,4BACNoB,MAAOkR,EAAaxM,QAGtBD,EAASyM,EAAajY,YAEtB,EAAKmK,MAAMkC,UAAUL,uBAAuBiM,EAAajY,aAIpDiY,KAERrY,OAAM,SAACC,GACNC,QAAQD,MAAMA,Q,+BAIV,IAAD,SAOH0K,KAAKJ,MAPF,KAELkD,WAFK,EAGL/B,aACYrG,EAJP,EAIHiG,OAAUjG,MACVsG,EALG,EAKHA,GAIEjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,SAAUC,WAAY,WAC5D,kBAACjI,EAAA,QAAD,CACEC,MAAO,CACL2I,KAAM,EACNmJ,OAAQ,GACR5J,QAAS,GACTD,aAAc,KAGf+B,KAAKI,MAAMnL,SACV,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzBoF,KAAKI,MAAMnL,UAEZ,KAEJ,kBAACc,EAAA,QAAD,CACEC,MAAO,CACLkI,QAAS,GACTH,eAAgB,kBAGlB,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB7D,EAAQ,SAEpD,kBAACwH,EAAA,EAAD,CACE0F,YAAY,SACZoJ,qBAAsB3S,EAAM4S,kBAC5B9O,aAAc,SAACoO,GAAD,OAAU,EAAKzJ,SAAS,CAAEyJ,UACxCpQ,MAAOwD,KAAKI,MAAMwM,KAClB5W,MAAOA,GAAM0E,GAAOvD,aAIxB,kBAACpB,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACfiI,QAAS,GACTH,eAAgB,kBAGlB,kBAAChI,EAAA,QAAD,MAEA,kBAAC,GAAD,CACE2E,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,YACfP,QAAS,kBAAM,EAAKiwC,iB,GA3GdvqC,IAAMuE,YCoDXimC,GAvDI,SAAC,GAAqB,IAAnB3lC,EAAkB,EAAlBA,YAAkB,EACZrL,mBAAS,MADG,WAC/B03B,EAD+B,KACxBuZ,EADwB,OAENjxC,mBAAS,MAFH,WAE/BT,EAF+B,KAErB+W,EAFqB,KAKpCrL,EAIEI,EAJFJ,OACUjG,EAGRqG,EAHFJ,OAAUjG,MACVuG,EAEEF,EAFFE,SACAD,EACED,EADFC,GAGIjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAC9BA,EAAS5P,EAAS,MAAC6N,OAAD,EAACA,EAAI+B,QAC7B7O,GAAO,4BAAAiB,EAAAC,OAAA,kEAAAD,EAAA,MACmBoE,EAAI,eADvB,gBACG6zB,EADH,EACGA,MACRuZ,EAASvZ,GAFJ,+DAcP,OACE,kBAACr3B,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,iBACtC,kBAACI,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAME,YAAaqS,UAAW,WACxDlW,EAAQ,sBAAD,MAAwBiK,OAAxB,EAAwBA,EAAI4lC,UAGrC3xC,GACC,kBAACkJ,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO+J,EAAOjG,MAAME,YAAaqS,UAAW,WACxDhY,GAPP,MAWGm4B,OAXH,EAWGA,EAAO9vB,KAAI,SAAC7C,GAAD,OACV,kBAAC,GAAD,CACEC,MAAOA,EACP1E,MAAO,CAAE8nB,iBAAkB,IAC3B9gB,MAAUvC,EAAKosC,SAAS9jC,GAAnB,IAA8BhM,EAAQ,OAAtC,IACH0D,EAAKqsC,OADF,IAED/vC,EAAQ,WACZP,QAAS,YA5BL,SAAO4E,GAAP,UAAAjG,EAAAC,OAAA,kEAAAD,EAAA,MACiBqE,EAAK,gBAAiB,CAC/C/D,WAAYkL,EAAOlL,WACnB2F,UAHQ,gBACFnG,EADE,EACFA,SAIR+W,EAAY/W,GACZgM,EAASN,EAAOlL,YANN,4DA6BF8uB,CAAI9pB,EAAK0S,YCCN45B,GAjDA,SAAC,GAMT,IAAD,IALJhmC,YACEJ,EAIE,EAJFA,OACAK,EAGE,EAHFA,GACUtG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAE9B4f,EAAS,SAAOloB,GAAP,eAAAtF,EAAAC,OAAA,kEAAAD,EAAA,MACUqE,EAAK,eAAgB,CAC1C0H,MAAOP,EAAOlL,WACdgF,UAHW,QACPxF,EADO,QAMAwf,KACXH,WAAQoiB,QAAQzhC,EAASwf,KAPd,6DAUf,MAAuB,QAAhB3U,UAASC,GACd,kBAAC5B,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB7D,EAAQ,+BAGX,kBAAChB,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGZ,eAAgB,iBACtC,kBAAC,GAAD,CACErD,MAAOA,EACP1E,MAAO,CAAE8nB,iBAAkB,IAC3B9gB,MAAOjG,EAAQ,WACfP,QAAS,kBAAMmsB,EAAO,MAExB,kBAAC,GAAD,CACEjoB,MAAOA,EACP1E,MAAO,CAAE8nB,iBAAkB,IAC3B9gB,MAAOjG,EAAQ,WACfP,QAAS,kBAAMmsB,EAAO,MAExB,kBAAC,GAAD,CACEjoB,MAAOA,EACP1E,MAAO,CAAE8nB,iBAAkB,IAC3B9gB,MAAOjG,EAAQ,WACfP,QAAS,kBAAMmsB,EAAO,MAGxB,kBAACxkB,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cAAgB7D,EAAQ,kB,glBCvC1D,IAoKeiwC,GApKM,SAAC,GAAqC,IAAD,IAAlCjmC,YAAeC,EAAmB,EAAnBA,GAAIL,EAAe,EAAfA,OAAe,EACxBjL,mBAAS,MADe,WACjDT,EADiD,KACvC+W,EADuC,OAE1BtW,mBAAS,IAFiB,WAEjDuH,EAFiD,KAExCquB,EAFwC,OAGxB51B,oBAAS,GAHe,WAGjDuxC,EAHiD,KAGvCC,EAHuC,OAIhCxxC,mBAAS+C,MAASk5B,OAAO,eAJO,WAIjDze,EAJiD,KAI3Ci0B,EAJ2C,OAOtBzxC,mBAAS,IAPa,WAOjD0xC,EAPiD,KAOtCC,EAPsC,OAQxB3xC,mBAAS,IARe,WAQjD8lC,EARiD,KAQvC8L,EARuC,OAS9B5xC,mBAAS,IATqB,WASjD6xC,EATiD,KAS1CC,EAT0C,KAWlDC,EAAe,4BAAAtyC,EAAAC,OAAA,mDACD,MAAZ,MAAF4L,OAAA,EAAAA,EAAI8Q,OADW,kCAAA3c,EAAA,MAEqBoE,EAAI,mBACrBoH,EAAOlL,aAHX,gBAET2xC,EAFS,EAETA,UAFS,EAEEnyC,SAGfmyC,IACFC,EAAaD,GACbE,EACEF,EAAUjd,QACR,SAAClG,EAAUpnB,GAAX,UAAC,MACIonB,GADL,WAEGpnB,EAAQsQ,GAAKtQ,EAAQI,YAExB,KAIJuqC,EACEJ,EAAUjd,QACR,SAAClG,EAAUpnB,GAAX,UAAC,MACIonB,GADL,WAEGpnB,EAAQsQ,GAAK1U,IAAOoE,EAAQqW,MAAMye,OAAO,kBAE5C,MAvBW,6DA6BrBz9B,EAAOuzC,GAEP,IAoCM1wC,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAACgT,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,EAAGT,QAAS,KACrC,kBAAC,GAAD,KAAInH,EAAQ,mBAAD,MAAqBiK,OAArB,EAAqBA,EAAI4lC,UACnC3xC,EAAW,kBAAC,GAAD,KAAIA,GAAgB,KAEjB,MAAZ,MAAF+L,OAAA,EAAAA,EAAI8Q,QACH,kBAAC/b,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAC/C,kBAAC0pC,GAAA,EAAD,CAAQlrC,MAAOyqC,EAAUU,cAAeT,IACvCD,GACC,kBAAC1oC,EAAA,EAAD,CACEvI,MAAOA,GAAM2K,EAAOjG,OAAOvD,UAC3B8M,YAAalN,EAAQ,QACrBsW,qBAAsB1M,EAAOjG,MAAM4S,kBACnC9Q,MAAO0W,EACP1U,aAAc2oC,KAKtB,kBAAC5oC,EAAA,EAAD,CACEvI,MAAO,CAACA,GAAM2K,EAAOjG,OAAOvD,UAAW,CAAEb,OAAQ,MACjD2N,YAAalN,EAAQ,WACrBsW,qBAAsB1M,EAAOjG,MAAM4S,kBACnC0f,WAAS,EACTxwB,MAAOS,EACPuB,aAAc8sB,IAGhB,kBAAC,GAAD,CACE5wB,MAAOiG,EAAOjG,MACd1E,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,QACfP,QA1Dc,WAClB9B,MAASlC,EAAUC,YAAd,gBAA0C,CAC7C+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACdwH,UACAiW,KAAMA,EACFza,IAAOya,EAAM,cAAcxa,IAAI,QAAS,IAAIkvC,eAC5C7yC,MAGLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACL+W,EAAW,MAAC/W,OAAD,EAACA,EAAUA,aAEvBI,OAAM,SAACC,GACNC,QAAQD,MAAMA,SAyCD,MAAZ,MAAF0L,OAAA,EAAAA,EAAI8Q,QACH,kBAAC/b,EAAA,QAAD,KACE,kBAAC,GAAD,KAAKgB,EAAQ,cADf,MAGGqwC,OAHH,EAGGA,EAAW9pC,KAAI,SAACL,EAASpJ,GACxB,OACE,kBAACkC,EAAA,QAAD,CAAMzC,IAAG,UAAYO,EAASmC,MAAO,CAAEC,cAAe,QACpD,kBAACsI,EAAA,EAAD,CACEvI,MAAO,CACLA,GAAM2K,EAAOjG,OAAOvD,UACpB,CAAEb,OAAQ,IAAKD,MAAO,IAAKsI,KAAM,IAEnCsF,YAAalN,EAAQ,WACrBsW,qBAAsB1M,EAAOjG,MAAM4S,kBACnC0f,WAAS,EACTxwB,MAAOg/B,EAASv+B,EAAQkQ,IACxB3O,aAAc,SAACqpC,GAAD,OACZP,EAAY,SAAK9L,GAAN,WAAiBv+B,EAAQkQ,GAAK06B,QAI7C,kBAACtpC,EAAA,EAAD,CACEvI,MAAO,CACLA,GAAM2K,EAAOjG,OAAOvD,UACpB,CAAE2mB,iBAAkB,GAAIxnB,OAAQ,KAElC2N,YAAalN,EAAQ,QACrBsW,qBAAsB1M,EAAOjG,MAAM4S,kBACnC9Q,MAAO+qC,EAAMtqC,EAAQkQ,IACrB3O,aAAc,SAAC0U,GAAD,OACZs0B,EAAS,SAAKD,GAAN,WAActqC,EAAQkQ,GAAK+F,QAIvC,kBAAC,GAAD,CACExY,MAAOiG,EAAOjG,MACd1E,MAAO,CAAEsV,eAAgB,IACzBtO,MAAOjG,EAAQ,QACfP,QAAS,kBA/GH,SAAO2W,GAAP,iBAAAhY,EAAAC,OAAA,kEAAAD,EAAA,MACOqE,EAAK,kBAAmB,CACjD0H,MAAOP,EAAOlL,WACdwH,QAASu+B,EAASruB,GAClB+F,KAAMza,IAAO8uC,EAAMp6B,GAAK,cAAczU,IAAI,QAAS,IAAIkvC,UACvDz6B,QALkB,gBACZlY,EADY,EACZA,SAORwyC,IAEAz7B,EAAY/W,GAVQ,4DA+GS6yC,CAAc7qC,EAAQkQ,cCxHxC46B,GAlCH,SAACnoC,GAAW,IAAD,IACClK,mBAAS,UADV,WACd2vB,EADc,KACTY,EADS,KAGflvB,EAAU1D,EAAe,SAACuM,EAAMmB,YAAYC,SAAnB,EAAC,EAAsB+B,QAEtD,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC,GAAD,CACEymB,KAAM,CACJ,CACEpoB,MAAOjG,EAAQ,cACfmnB,SAAkB,WAARmH,EACV7uB,QAAS,kBAAMyvB,EAAO,YAExB,CACEjpB,MAAOjG,EAAQ,cACfmnB,SAAkB,eAARmH,EACV7uB,QAAS,kBAAMyvB,EAAO,gBAGxB,CACEjpB,MAAOjG,EAAQ,gBACfmnB,SAAkB,iBAARmH,EACV7uB,QAAS,kBAAMyvB,EAAO,qBAKnB,WAARZ,GAAoB,kBAAC,GAAWzlB,GACxB,eAARylB,GAAwB,kBAAC,GAAezlB,GAChC,iBAARylB,GAA0B,kBAAC,GAAiBzlB,KC7BpCooC,GANI,SAAC,GAAiC,IAA/BllC,EAA8B,EAA9BA,WAAY/B,EAAkB,EAAlBA,YAChC,OACE,kBAAC,GAAD,CAAM3F,KAAK,SAAS0H,WAAYA,EAAY/B,YAAaA,K,kbC0I9CknC,G,kCAtIb,WAAYroC,GAAQ,IAAD,uBACjB,cAAMA,IA6BR+iB,OAAS,WAAO,IACNhiB,EAAW,EAAKf,MAAMmB,YAAtBJ,OAER,EAAKwC,SAAS,CAAEglB,SAAS,IACzBzzB,MAASlC,EAAUC,YAAd,QAAkC,CACrC+B,OAAQ,OACRG,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBH,KAAMI,KAAKC,UAAU,CACnBoM,MAAOP,EAAOlL,WACd+lB,QAAS,EAAKpb,MAAMob,YAGrBxmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAOC,GAAP,SAAAE,EAAAC,OAAA,gDACJ,EAAK+N,SAAS,CACZlO,WACAkzB,SAAS,EACTvyB,OAAQD,KAAKC,SACb4lB,QAAS,KAEX,EAAK5b,MAAMmB,YAAYE,SAASN,EAAOlL,YAPnC,+DASLJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,OAxDD,EA4DnB+uB,YAAc,SAAO/gB,GAAP,uBAAAnO,EAAAC,OAAA,yDAC+B,EAAKwK,MAAMmB,YAA9CE,EADI,EACJA,SAAUN,EADN,EACMA,OAAQua,EADd,EACcA,aADd,WAAA/lB,EAAA,MAEeqE,EAAK,cAAe,CAC7C8J,OACAlI,KAAM,WACN8F,MAAOP,EAAOlL,cALJ,kBAEJR,SAKRimB,IAEAja,EAASN,EAAOlL,YATJ,6DA5DK,EAuEnBsvB,aAAe,WAAO,IAAD,EAIf,EAAKnlB,MAAMmB,YADbC,GAHiB,EAEjBL,OAAUjG,MAFO,EAGjBsG,IAGIjK,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAACgT,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACxB,EAAK6lB,SAASztB,EAAQ,oBAAtB,MAA2CiK,OAA3C,EAA2CA,EAAIulB,MAEhD,kBAAC,GAAD,CACExlB,YAAa,EAAKnB,MAAMmB,YACxBya,QAAS,EAAKpb,MAAMob,QACpB8J,gBAAiB,SAACvxB,GAAD,OAAO,EAAKoP,SAAS,CAAEqY,QAASznB,KACjD6B,OAAQ,EAAKwK,MAAMxK,OACnB2vB,eAAgB,SAACxxB,GAAD,OAAO,EAAKoP,SAAS,CAAEvN,OAAQ7B,OAGjD,kBAAC,GAAD,CACE2G,MAAO,EAAKkF,MAAMmB,YAAYJ,OAAOjG,MACrC1E,MAAO,CAAEwQ,UAAW,IACpBxJ,MAAOjG,EAAQ,YACfP,QAAS,EAAKmsB,WA5FpB,EAAKviB,MAAQ,CACXnL,SAAU,KACVumB,QAAS,GACT5lB,OAAQD,KAAKC,UANE,E,yDAWjBoK,KAAKJ,MAAMmB,YAAYma,iB,+BAGhB5nB,EAAKkJ,GACZ,OACE,kBAACzG,EAAA,QAAD,CACEC,MAAO,CACLC,cAAe,MACf8H,eAAgB,gBAChBzH,OAAQ,GACR0H,WAAY,WAGd,kBAAC,GAAD,KAAI1K,GACJ,kBAAC,GAAD,KAAIkJ,M,+BA2EA,IAAD,OACCvH,EAAa+K,KAAKI,MAAlBnL,SADD,EAOH+K,KAAKJ,MAJPmB,YACEC,EAJG,EAIHA,GACUtG,EALP,EAKHiG,OAAUjG,MAGR3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QAEpC,OACE,kBAAChN,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,IACnB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,GAAInJ,KAAM,IAC9B1J,EACC,kBAACc,EAAA,QAAD,CAAMC,MAAO,CAAE2I,KAAM,EAAGmV,UAAW,MACjC,kBAAC3V,EAAA,QAAD,CAAMnI,MAAO,CAAEY,MAAO8D,EAAME,cACzB3F,EAASA,UAGZ,kBAAC,GAAD,CACEyF,MAAOsF,KAAKJ,MAAMmB,YAAYJ,OAAOjG,MACrCsC,MAAOjG,EAAQ,MACfP,QAAS,kBAAM,EAAK2M,SAAS,CAAElO,SAAU,WAI7C+K,KAAK+kB,qB,GA/HEtkB,aCaJynC,GAlBE,SAAC,GAAgB,IAAd5xB,EAAa,EAAbA,OAClB,OACE,kBAACvgB,EAAA,QAAD,CACEC,MAAO,CACLK,MAAO,GACPC,OAAQ,GACR2H,aAAc,GACd2G,YAAa,EACbC,YAAa,QACb9G,eAAgB,SAChBC,WAAY,WAGbsY,GAAU,kBAACpJ,GAAA,EAAD,CAAQxW,KAAK,QAAQC,KAAM,OCmH7BwxC,GAjHF,SAAC,GAOP,IANLpnC,EAMI,EANJA,YAMI,IALJA,YACEC,EAIE,EAJFA,GACAL,EAGE,EAHFA,OACUjG,EAER,EAFFiG,OAAUjG,MAGN3D,EAAU1D,EAAe,MAAC2N,OAAD,EAACA,EAAI+B,QADhC,EAE0BrN,mBAAS,IAFnC,WAEG8lB,EAFH,KAEYmK,EAFZ,OAGwBjwB,mBAASC,KAAKC,UAHtC,WAGGA,EAHH,KAGWC,EAHX,KAKEsH,EAAU,CACd,CACEH,MAAOjG,EAAQ,eACfqxC,MAAO,GAGT,CACEprC,MAAOjG,EAAQ,eACfqxC,MAAO,GAGT,CACEprC,MAAOjG,EAAQ,eACfqxC,MAAO,GAGT,CACEprC,MAAOjG,EAAQ,eACfqxC,MAAO,GAGT,CACEprC,MAAOjG,EAAQ,eACfqxC,MAAO,GAGT,CACEprC,MAAOjG,EAAQ,eACfqxC,MAAO,GAGT,CACEprC,MAAOjG,EAAQ,eACfqxC,MAAO,IAtCP,EA0C4B1yC,mBAAS,GA1CrC,WA0CGmN,EA1CH,KA0Cayb,EA1Cb,OA2C4B5oB,mBAAS,MA3CrC,WA2CGT,EA3CH,KA2Ca+W,EA3Cb,KAsDEsyB,EAAS3oC,KAAKwE,QAAS,MAAF6G,OAAA,EAAAA,EAAIqnC,YAAaplC,KAAK5H,OAAvB,KAE1B,OACE,kBAAC0a,GAAA,EAAD,CAAY/f,MAAO,CAAE2I,KAAM,IACzB,kBAAC5I,EAAA,QAAD,CAAMC,MAAO,CAAE8R,OAAQ,KACpB7S,EACC,kBAAC,GAAD,KAAIA,IACA,MAAF+L,OAAA,EAAAA,EAAIqnC,YAAaplC,KAAK5H,MACxB,kBAAC,GAAD,KAAItE,EAAQ,WAAYunC,IAExB,kBAACvoC,EAAA,QAAD,KACGoH,EAAQG,KAAI,SAAC4F,EAAQrP,GACpB,OACE,kBAAC0C,EAAA,EAAD,CACEC,QAAS,kBAAM8nB,EAAYzqB,EAAQ,IACnCP,IAAG,MAAQO,EACXmC,MAAO,CACLC,cAAe,MACf+H,WAAY,SACZD,eAAgB,gBAChBmpB,gBAAiB,GACjBzkB,kBAAmB,GACnBxE,aAAc,IAGhB,kBAAClI,EAAA,QAAD,CAAMC,MAAO,CAAEC,cAAe,MAAO+H,WAAY,WAC/C,kBAAC,GAAD,CAAUsY,OAAQzT,IAAahP,EAAQ,IACvC,kBAAC,GAAD,CAAGmC,MAAO,CAAEI,WAAY,KAAO8M,EAAOlG,QAExC,kBAAC,GAAD,KACGkG,EAAOklC,MADV,IACkBrxC,EAAQ,cAMhC,kBAAC,GAAD,CACEgK,YAAaA,EACbya,QAASA,EACT8J,gBAAiBK,EACjB/vB,OAAQA,EACR2vB,eAAgB1vB,IAGlB,kBAAC,GAAD,CAAQ6E,MAAOA,EAAOsC,MAAOjG,EAAQ,WAAYP,QArD5C,4BAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACcqE,EAAK,OAAQ,CACtC0H,MAAOP,EAAOlL,WACd+lB,UACAtY,OAAQL,KAJG,gBACL5N,EADK,EACLA,SAKR+W,EAAY/W,GANC,mEC8BJqzC,GAAU,CACrB3V,SACA4V,YACAjH,QACAkH,WACAhU,WACA7E,SACAyB,UACAY,cACAoP,YACAG,QACAC,UACAuG,OACA9lB,cACAwmB,cACAjlB,kBACAqB,gBACAC,WACAkB,cACAoB,YACAshB,oBACAja,WACA7E,aACA2K,YACAoU,YACAziB,QACAyO,UACAtN,iBACA6N,UACAG,UACAG,cACAC,kBACAmT,WACArkC,QACAskC,oBACAhQ,QACAiQ,cACA/P,YACAe,iBACAE,oBACAI,UACAI,cACAnU,UACA+U,eACAC,eACA0N,kBACAvjB,QACAwjB,SACA7X,QACAqL,oBACA7T,qBACAkB,cACAE,gBACAe,gBACAoC,YACAyB,UACA+N,cACAC,OACAsM,WACArM,UACAI,QACAmB,YACA+K,SACAziB,UACA0iB,YACAC,aACAz+B,QACA40B,WACAC,QACAlE,SACAoE,SACAI,gBACAW,UACAU,kBACA3C,aACA/J,aACA4U,MACA5G,SACA6G,WACA3E,kBACAtV,YACAuV,mBACAC,WACA0E,OACA3P,WACA1V,QACAslB,eACAC,gBACApL,QACAjb,UACAoiB,YACA7e,aACA+iB,SACA/D,cACAgE,eACAC,mBACA5B,cACAC,QACAE,SAUa0B,GAPA,SAAC,GAAiC,IAA/B/mC,EAA8B,EAA9BA,WAAY/B,EAAkB,EAAlBA,YACtB+oC,EAAShnC,EAAW1C,MAAMqE,UAE1BhE,EAAY6nC,GAAQwB,GAC1B,OAAO,kBAACrpC,EAAD,CAAWqC,WAAYA,EAAY/B,YAAaA,KCxD1CgpC,GA/IK7tC,IAAM+hB,MAAK,YAAiC,IAAD,IAA7Bjd,EAA6B,EAA7BA,GAAIL,EAAyB,EAAzBA,OAAQmC,EAAiB,EAAjBA,WACtCoD,EAAY,CAChBxD,YAAa,GACbyD,aAAc,GACdvP,MAAO,SAGL6O,GAAkB,EACF,QAAhB3F,UAASC,KACX0F,EAAkBD,MAEpB,IAEMe,GAFyC,KAApB,MAAFvF,OAA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","file":"static/js/app.0a4eb543.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d2180cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/market.32e2d0f1.png\";","module.exports = __webpack_public_path__ + \"static/media/shop.a9cce2eb.png\";","module.exports = __webpack_public_path__ + \"static/media/thief.fa783e06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carthief.b6f3fdd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weedgrower.0b8f1c24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/killer.fef52faa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pimp.f2697d22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banker.1d9edc53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jailbreaker.a5d507ae.jpg\";","const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://192.168.1.100:4001\"; //192.168.1.38\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\", //https://apps.apple.com/us/app/mastercrimez/id1527333711?app=itunes\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Alert,\n  Dimensions,\n  Image,\n  Platform,\n  ScaledSize,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Captcha = ({ loginToken }) => {\n  const [random, setRandom] = useState(Math.random());\n\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${loginToken}`;\n\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      <Image\n        source={{ uri }}\n        style={{ marginLeft: 20, width: 150, height: 50 }}\n      />\n      <TouchableOpacity onPress={() => setRandom(Math.random())}>\n        <MaterialCommunityIcons name=\"reload\" size={32} color=\"black\" />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport const withCaptcha = (\n  loginToken,\n  needCaptcha,\n  getText,\n  alertAlert,\n  setCode\n) => {\n  if (needCaptcha) {\n    alertAlert(\n      getText(\"fillInCaptcha\"),\n      getText(\"pleaseFillInCaptcha\"),\n      [\n        {\n          text: getText(\"ok\"),\n          onPress: setCode,\n        },\n      ],\n      {\n        key: \"captcha\",\n        textInput: true,\n        keyboardType: \"numeric\",\n        component: <Captcha loginToken={loginToken} />,\n      }\n    );\n  } else {\n    setCode(null);\n  }\n};\n\nexport const InactiveScreens = {\n  ACTIONS_BEFORE_ROBBERY: 120,\n  ACTIONS_BEFORE_DETECTIVES: 30,\n  ACTIONS_BEFORE_BOMB: 60,\n  ACTIONS_BEFORE_CASINO: 70,\n  ACTIONS_BEFORE_BUNKER: 20,\n  ACTIONS_BEFORE_HOSPITAL: 30,\n  ACTIONS_BEFORE_RACECARS: 80,\n  ACTIONS_BEFORE_STREETRACE: 80,\n  ACTIONS_AMOUNT_NEW: 10,\n  ACTIONS_BEFORE_ROB: 20,\n  ACTIONS_BEFORE_ROB_KILL_MENU: 20,\n  ACTIONS_BEFORE_KILL: 30,\n  ACTIONS_BEFORE_BULLETFACTORY: 40,\n  ACTIONS_BEFORE_MARKET: 50,\n  ACTIONS_BEFORE_AIRPORT: 30,\n  DAYS_NEW: 14,\n  ACTIONS_BEFORE_POLICE: 100,\n\n  STOCK_MARKET_RELEASE_DATE: moment(\"15/09/2021\", \"DD/MM/YYYY\").set(\"hour\", 17),\n\n  LOTTO_RELEASE_DATE: moment(\"01/07/2021\", \"DD/MM/YYYY\").set(\"hour\", 17),\n  OC_RELEASE_DATE: moment(\"01/08/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  DETECTIVES_RELEASE_DATE: moment(\"01/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  GANG_MISSIONS_RELEASE_DATE: moment(\"01/05/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_BULLET_FACTORY_RELEASE_DATE: moment(\"15/08/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  PRIZES_NORMAL_RELEASE_DATE: moment(\"01/12/2020\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_RELEASE_DATE: moment(\"30/11/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  MARKET_RELEASE_DATE: moment(\"15/12/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  PRIZES_RELEASE_DATE: moment(\"01/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  POLICE_RELEASE_DATE: moment(\"15/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  ROBBERY_RELEASE_DATE: moment(\"15/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  //happy hour 1 feb\n\n  WORK_RELEASE_DATE: moment(\"15/04/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport function ColorLuminance(hex, lum) {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  var rgb = \"#\",\n    c,\n    i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += (\"00\" + c).substr(c.length);\n  }\n\n  return rgb;\n}\n\nexport const lighterHex = (hex) => ColorLuminance(hex, 0.2);\nexport const darkerHex = (hex) => ColorLuminance(hex, -0.2);\n\nexport const getUserColor = (item, theme) =>\n  item?.creditsTotal >= 10000\n    ? \"red\"\n    : item?.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nexport const properties = [\n  { name: \"bulletFactory\" },\n  { name: \"casino\" },\n  { name: \"rld\" },\n  { name: \"landlord\" },\n  { name: \"junkies\" },\n  { name: \"weaponShop\" },\n  { name: \"airport\" },\n  { name: \"estateAgent\" },\n  { name: \"garage\" },\n  { name: \"jail\" },\n  { name: \"bank\" },\n  { name: \"gym\" },\n  { name: \"hospital\" },\n  { name: \"market\" },\n  { name: \"stockExchange\" },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nexport const AlertContext = React.createContext({});\n\nexport const AlertProvider = ({ children }) => {\n  const [alerts, setAlerts] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const getText = getTextFunction(); //TODO: Provide me?.locale\n\n  const textInputRef = useRef(null);\n\n  const theAlert = alerts[0];\n  useEffect(() => {\n    textInputRef.current?.focus();\n  }, [textInputRef, alerts.length]);\n\n  return (\n    <AlertContext.Provider\n      value={(title, message, buttons, options) => {\n        setValue(\"\");\n\n        console.log(\"lengte\", alerts.length);\n\n        // alerts copy.\n        const newAlerts = [...alerts];\n        if (!alerts.map((x) => x.options.key).includes(options.key)) {\n          newAlerts.push({ title, message, buttons, options });\n        }\n        //NB: copy needed!!!\n        setAlerts([...newAlerts]);\n      }}\n    >\n      {children}\n      {alerts.length > 0 ? (\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: theAlert.options?.textInput ? 200 : 0,\n            left: 0,\n            right: 0,\n            backgroundColor: \"rgba(0,0,0,0.3)\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: \"#DDD\",\n              borderRadius: 20,\n              width: \"80%\",\n              alignItems: \"center\",\n            }}\n          >\n            {(theAlert.title || theAlert.message) && (\n              <View style={{ padding: 20 }}>\n                {theAlert.title && (\n                  <Text\n                    style={{\n                      fontWeight: \"bold\",\n                      fontSize: 18,\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {theAlert.title}\n                  </Text>\n                )}\n                {theAlert.message && (\n                  <Text style={{ textAlign: \"center\" }}>\n                    {theAlert.message}\n                  </Text>\n                )}\n              </View>\n            )}\n\n            {theAlert.options?.component && (\n              <View style={{ padding: 20 }}>{theAlert.options.component}</View>\n            )}\n\n            {theAlert.options?.textInput && (\n              <View style={{ padding: 20, width: \"100%\" }}>\n                <TextInput\n                  value={value}\n                  onChangeText={setValue}\n                  ref={textInputRef}\n                  style={{\n                    fontSize: 18,\n                    backgroundColor: \"white\",\n                    width: \"100%\",\n                    borderRadius: 3,\n                    padding: 3,\n                  }}\n                  keyboardType={theAlert.options?.keyboardType}\n                />\n              </View>\n            )}\n\n            <View\n              style={{ width: \"100%\", height: 1, backgroundColor: \"#BBB\" }}\n            />\n\n            {theAlert.buttons ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  width: \"100%\",\n                }}\n              >\n                {theAlert.buttons.map((button, index) => (\n                  <TouchableOpacity\n                    key={`${theAlert.options.key}button${index}`}\n                    style={{\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      height: 40,\n                      flex: 1,\n                      borderRightColor: \"#BBB\",\n                      borderRightWidth:\n                        index < theAlert.buttons.length - 1 ? 1 : 0,\n                    }}\n                    onPress={() => {\n                      const newAlerts = [...alerts];\n                      newAlerts.shift();\n\n                      console.log(\"newAlerts\", newAlerts.length);\n\n                      // NB: we need to make a copy here, otherwise it has the same reference and the component thinks that it didn't change.\n                      setAlerts([...newAlerts]);\n\n                      setValue(\"\");\n\n                      button.onPress?.(value);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: \"blue\",\n                        fontSize: 18,\n                      }}\n                    >\n                      {button.text}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            ) : (\n              <TouchableOpacity\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 40,\n                }}\n                onPress={() => {\n                  const newAlerts = alerts.filter(\n                    (x) => x.options.key !== theAlert.options.key\n                  );\n\n                  console.log(\"newAlerts\", newAlerts.lenth);\n\n                  // NB: we need to make a copy here, otherwise it has the same reference and the component thinks that it didn't change.\n                  setAlerts([...newAlerts]);\n                }}\n              >\n                <Text style={{ color: \"blue\", fontSize: 18 }}>\n                  {getText(\"ok\")}\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      ) : null}\n    </AlertContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withAlert = (ChildComponent) => (props) => (\n  <AlertContext.Consumer>\n    {(context) => <ChildComponent {...props} alert={context} />}\n  </AlertContext.Consumer>\n);\n","import NetInfo from \"@react-native-community/netinfo\";\nimport React from \"react\";\nimport { Platform, SafeAreaView, Text, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Constants from \"../Constants\";\n\nconst CONNECTION_GOOD = 2;\nconst CONNECTION_BAD = 1;\nconst CONNECTION_NONE = 0;\n\nclass ConnectionProviderScreen extends React.Component {\n  componentDidMount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe = NetInfo.addEventListener((state) => {\n        // console.log(\"Connection type\", state.type);\n        // console.log(\"Is connected?\", state.isConnected);\n        this.props.setIsConnected(\n          state.isConnected ? CONNECTION_GOOD : CONNECTION_NONE\n        );\n      });\n    }\n\n    this.interval = setInterval(this.fetchWithTimeout, 5000);\n\n    // To unsubscribe to these update, just use:\n  }\n\n  fetchWithTimeout = () => {\n    const FETCH_TIMEOUT = 5000;\n    let didTimeOut = false;\n\n    new Promise(function (resolve, reject) {\n      const timeout = setTimeout(function () {\n        didTimeOut = true;\n        reject(new Error(\"Request timed out\"));\n      }, FETCH_TIMEOUT);\n\n      fetch(Constants.SERVER_ADDR + \"/healthcheck\")\n        .then(function (response) {\n          // Clear the timeout as cleanup\n          clearTimeout(timeout);\n          if (!didTimeOut) {\n            // console.log(\"fetch good! \");\n            resolve(response);\n          }\n        })\n        .catch(function (err) {\n          // console.log(\"fetch failed! \", err);\n\n          // Rejection already happened with setTimeout\n          if (didTimeOut) return;\n          // Reject with error\n          reject(err);\n        });\n    })\n      .then(() => {\n        // Request success and no timeout\n        this.props.setIsConnected(CONNECTION_GOOD);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        this.props.setIsConnected(CONNECTION_BAD);\n        // Error: response error, request timeout or runtime error\n      });\n  };\n\n  componentWillUnmount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe();\n    }\n    clearTimeout(this.interval);\n  }\n\n  render() {\n    const { children, isConnected } = this.props;\n\n    return (\n      <View style={{ flex: 1 }}>\n        {isConnected !== CONNECTION_GOOD && (\n          <View\n            style={{\n              backgroundColor:\n                isConnected === CONNECTION_BAD ? \"orange\" : \"red\",\n              padding: 15,\n            }}\n          >\n            <SafeAreaView>\n              <Text style={{ color: \"white\" }}>\n                {isConnected === CONNECTION_BAD ? \"Slechte\" : \"Geen\"}{\" \"}\n                internetverbinding!\n              </Text>\n            </SafeAreaView>\n          </View>\n        )}\n        {children}\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isConnected: state.device.isConnected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setIsConnected: (isConnected) =>\n    dispatch({ type: \"SET_IS_CONNECTED\", value: isConnected }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectionProviderScreen);\n","import React, { useEffect, useState } from \"react\";\nimport { post } from \"../Util\";\n\nexport const IntervalContext = React.createContext({});\nexport const IntervalProvider = ({\n  children,\n  screenProps: { me, dispatch, device, reloadMe },\n}) => {\n  const [token, setToken] = useState(device.loginToken);\n\n  useEffect(() => {\n    if (token) {\n      const intervalReloadMe = setInterval(() => {\n        // console.log(\"This will run every 5 seconds! TOKEN:\", token);\n        reloadMe(device.loginToken);\n      }, 5000);\n\n      const intervalMovements = setInterval(() => {\n        // console.log(\"This will run every 60 seconds! TOKEN:\");\n        sendMovements();\n      }, 60000);\n\n      return () => {\n        // console.log(\"clearing interval because token changed\");\n        clearInterval(intervalReloadMe);\n        clearInterval(intervalMovements);\n      };\n    }\n  }, [token]);\n\n  const sendMovements = () => {\n    // console.log(\"sendMovements\", device.loginToken);\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  };\n\n  return (\n    <IntervalContext.Provider\n      value={{\n        resetIntervalsForToken: (token) => setToken(token),\n      }}\n    >\n      {children}\n    </IntervalContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withInterval = (ChildComponent) => (props) => (\n  <IntervalContext.Consumer>\n    {(context) => <ChildComponent {...props} intervals={context} />}\n  </IntervalContext.Consumer>\n);\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport { useSelector } from \"react-redux\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nconst Button = ({ icon, font, title, onPress, disabled, style }) => {\n  const TheIcon = font && icon ? Icon[font] : View;\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity onPress={disabled ? undefined : onPress}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: disabled ? `${theme.secondary}55` : theme.secondary,\n          padding: 10,\n          justifyContent: \"center\",\n          paddingHorizontal: isSmall ? 5 : 20,\n          // borderRadius: 20,\n          ...style,\n        }}\n      >\n        {font && icon ? (\n          <View style={{ marginRight: 20 }}>\n            <TheIcon name={icon} color={theme.secondaryText} size={20} />\n          </View>\n        ) : null}\n\n        {title && (\n          <Text style={{ textAlign: \"center\", color: theme.secondaryText }}>\n            {title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Image, Text, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View>\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Dead;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getTextFunction } from \"../Util\";\n\nclass Fly extends React.Component {\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"flyYoureTravelingTo\", me?.city)}\n        </Text>\n        <CountDown\n          until={sec}\n          onFinish={() => {\n            reloadMe(device.loginToken);\n          }}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Fly;\n","import React, { Fragment, useEffect, useMemo, useState } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { doOnce, getTextFunction } from \"../Util\";\n\nconst MessageInput = ({ device, locale, getChat }) => {\n  const getText = getTextFunction(locale);\n  const [input, setInput] = useState(\"\");\n\n  return (\n    <TextInput\n      value={input}\n      placeholder={getText(\"chatYourMessage\")}\n      style={{\n        backgroundColor: \"#404040\",\n        fontSize: 20,\n        color: \"white\",\n        flex: 1,\n        width: 100,\n      }}\n      onChangeText={setInput}\n      onSubmitEditing={({ nativeEvent: { text } }) => {\n        fetch(`${Constants.SERVER_ADDR}/chat`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            token: device.loginToken,\n            message: text,\n          }),\n        })\n          .then((response) => response.json())\n          .then((chat) => {\n            getChat();\n\n            if (Platform.OS === \"web\") {\n              location.reload();\n            }\n\n            setInput(\"\");\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }}\n    />\n  );\n};\nconst Chat = ({ device, navigation, me }) => {\n  const [chat, setChat] = useState([]);\n\n  const getChat = () => {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        setChat(chat);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  doOnce(() => getChat());\n\n  useEffect(() => {\n    getChat();\n  }, [navigation.state.routeName]);\n\n  // const renderChat = () => {\n  //   return chat.map((item, index) => (\n  //     <Text key={`item${index}`}>\n  //       <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n  //       {item.message}&nbsp;&nbsp;\n  //     </Text>\n  //   ));\n  // };\n\n  const allText = chat\n    .map((item) => `${item.name}${item.message}`)\n    .join(\"::::\");\n\n  const key = useMemo(() => `chat${Math.random().toString()}`, [\n    navigation.state.routeName,\n  ]);\n\n  return (\n    <View key={key}>\n      <View\n        style={{\n          width: \"100%\",\n          backgroundColor: \"#444\",\n          borderWidth: 1,\n          borderColor: \"black\",\n          flexDirection: Platform.select({ web: \"row\", default: undefined }),\n        }}\n      >\n        {Platform.select({\n          web: (\n            <View style={{ flex: 1, justifyContent: \"center\" }}>\n              {allText ? (\n                <Ticker>\n                  {({ index }) => {\n                    return (\n                      <>\n                        {chat.map((item, index) => (\n                          <Text\n                            style={{ color: \"white\" }}\n                            numberOfLines={1}\n                            key={`item${index}`}\n                          >\n                            <TouchableOpacity\n                              onPress={() => {\n                                navigation.navigate(\"Profile\", {\n                                  name: item.name,\n                                });\n                              }}\n                            >\n                              <Text style={{ fontWeight: \"bold\" }}>\n                                {item.name}\n                              </Text>\n                            </TouchableOpacity>\n                            :&nbsp;{item.message}&nbsp;&nbsp;\n                          </Text>\n                        ))}\n                      </>\n                    );\n                  }}\n                </Ticker>\n              ) : null}\n            </View>\n          ),\n\n          default: (\n            <MarqueeText\n              style={{ fontSize: 20 }}\n              duration={allText.length * 50}\n              marqueeOnStart\n              loop\n              marqueeDelay={200}\n              marqueeResetDelay={1000}\n            >\n              <>\n                {chat.map((item, index) => (\n                  <Fragment key={`item${index}`}>\n                    <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                    :&nbsp;{item.message}&nbsp;&nbsp;\n                  </Fragment>\n                ))}\n              </>\n            </MarqueeText>\n          ),\n        })}\n        <View style={{ width: 100, height: 30 }}>\n          <MessageInput locale={me?.locale} device={device} getChat={getChat} />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Chat;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  StatusBar,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Chat from \"../components/Chat\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nconst isSmallDevice = width < 800;\n\nfunction Header({ navigation, device, me }) {\n  const getText = getTextFunction(me?.locale);\n\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: device.theme.secondaryText,\n  };\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n  const showNotActivated = me?.phoneVerified === false && me?.numActions >= 20;\n\n  const notActivated = showNotActivated && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const renderNotVerified = !me?.phoneVerified && (\n    <View\n      style={{\n        padding: 5,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <TouchableOpacity\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => navigation.navigate(\"VerifyPhone\")}\n      >\n        <AntDesign\n          name=\"exclamationcircleo\"\n          color=\"red\"\n          style={{ marginRight: 10 }}\n        />\n        <Text\n          style={{\n            color: device.theme.secondaryText,\n            fontWeight: \"bold\",\n          }}\n        >\n          {getText(\"headerVerifyYourAccount\")}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n  const dontShowStatsHeader = false;\n\n  const showBackButton = navigation.state.routeName !== \"Home\";\n\n  const statsHeader = dontShowStatsHeader ? null : (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2,\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5,\n        }}\n      >\n        <Text style={textStyle}>\n          😎 {me?.name} {me?.gang?.name}\n        </Text>\n        <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n        <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon.MaterialCommunityIcons\n            name=\"pistol\"\n            size={18}\n            color={device.theme.secondaryText}\n            style={{ marginRight: 5 }}\n          />\n          <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n        </View>\n        <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n        <Text style={textStyle}>🌍 {me?.city}</Text>\n        <Text style={textStyle}>❤️ {me?.health}%</Text>\n        <Text style={textStyle}>\n          ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n        </Text>\n        <Text style={textStyle}>💪 {getStrength(me?.strength, \"both\")}</Text>\n        {!me?.newVersion && (\n          <Text\n            style={textStyle}\n            onPress={() => navigation.navigate(\"Channels\")}\n          >\n            💬 {me?.chats}\n          </Text>\n        )}\n      </View>\n\n      {renderNotVerified}\n    </View>\n  );\n\n  const backButton = (\n    <View\n      style={{\n        margin: 10,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n      }}\n    >\n      {showBackButton ? (\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => {\n            if (isSmallDevice || Platform.OS !== \"web\") {\n              navigation.goBack();\n            } else {\n              window.history.back();\n            }\n          }}\n        >\n          <AntDesign\n            name=\"arrowleft\"\n            size={32}\n            color={device.theme.secondaryText}\n          />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ height: 20 }} />\n      )}\n    </View>\n  );\n\n  const webHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n        <View style={{ width: 50 }}>{backButton}</View>\n\n        <View style={{ alignItems: \"center\", flex: 1 }}>\n          <Image\n            source={require(\"../../assets/logos/logo5.jpg\")}\n            style={{\n              margin: 10,\n              width: isSmallDevice ? 200 : 600,\n              height: isSmallDevice ? 33 : 100,\n            }}\n          />\n        </View>\n\n        <Text style={{ color: \"white\", marginTop: 20 }}>\n          v{Constants.manifest.version}\n        </Text>\n\n        {isSmallDevice ? (\n          <TouchableOpacity\n            onPress={() => {\n              navigation.toggleDrawer();\n            }}\n            style={{ margin: 10 }}\n          >\n            <Feather\n              name=\"menu\"\n              size={32}\n              color=\"#FFF\"\n              style={{ color: \"#FFF\" }}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      {isSmallDevice && statsHeader}\n\n      <Chat me={me} device={device} navigation={navigation} />\n    </View>\n  );\n\n  const showSomething =\n    showBackButton ||\n    !dontShowStatsHeader ||\n    updateAvailable ||\n    showNotActivated;\n\n  return (\n    <View style={{ justifyContent: \"center\" }}>\n      {Platform.OS === \"web\" ? (\n        webHeader\n      ) : (\n        <View\n          style={{\n            backgroundColor: device.theme.secondary,\n            paddingTop:\n              Platform.OS === \"android\" && showSomething\n                ? StatusBar.currentHeight\n                : 0,\n          }}\n        >\n          {backButton}\n          {updateComponent || notActivated || statsHeader}\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default Header;\n","import { canUseDOM } from \"fbjs/lib/ExecutionEnvironment\";\n\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener(\"touchstart\", disableHover, true);\n  document.addEventListener(\"touchmove\", disableHover, true);\n  document.addEventListener(\"mousemove\", enableHover, true);\n}\n\nexport function isHoverEnabled() {\n  return isEnabled;\n}\n","import { element, func, oneOfType } from \"prop-types\";\nimport React from \"react\";\nimport { isHoverEnabled } from \"./HoverState\";\n\nexport default function Hoverable({ onHoverIn, onHoverOut, children }) {\n  const [isHovered, setHovered] = React.useState(false);\n  const [showHover, setShowHover] = React.useState(true);\n\n  function handleMouseEnter(e) {\n    if (isHoverEnabled() && !isHovered) {\n      if (onHoverIn) onHoverIn();\n      setHovered(true);\n    }\n  }\n\n  function handleMouseLeave(e) {\n    if (isHovered) {\n      if (onHoverOut) onHoverOut();\n      setHovered(false);\n    }\n  }\n\n  function handleGrant() {\n    setShowHover(false);\n  }\n\n  function handleRelease() {}\n\n  const child =\n    typeof children === \"function\"\n      ? children(showHover && isHovered)\n      : children;\n\n  return React.cloneElement(React.Children.only(child), {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    // prevent hover showing while responder\n    onResponderGrant: () => setShowHover(false),\n    onResponderRelease: () => setShowHover(true),\n    // if child is Touchable\n    onPressIn: handleGrant,\n    onPressOut: handleRelease,\n  });\n}\n\nHoverable.displayName = \"Hoverable\";\n\nHoverable.propTypes = {\n  children: oneOfType([func, element]),\n  onHoverIn: func,\n  onHoverOut: func,\n};\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\nclass Jail extends React.Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n\n    const { reloadMe, device } = this.props.screenProps;\n    this.interval = setInterval(() => {\n      reloadMe(device.loginToken);\n      this.fetchMembers();\n    }, 2500);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clear interval jail\");\n    clearInterval(this.interval);\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n      </View>\n    );\n  };\n\n  buyOut = async (type) => {\n    const { device, reloadMe } = this.props.screenProps;\n    const { response } = await post(\"buyout\", {\n      token: device.loginToken,\n      type,\n    });\n    this.setState({ response });\n    reloadMe(device.loginToken);\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { response } = this.state;\n    const sec = Math.round((me.jailAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <T>{getText(\"jailYoureInJail\")}</T>\n\n        <CountDown\n          until={sec}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n\n        <View style={{ height: 15 }} />\n\n        {response && <T>{response}</T>}\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCredits\")}\n          onPress={() => this.buyOut(\"credits\")}\n        />\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCash\")}\n          onPress={() => this.buyOut(\"cash\")}\n        />\n\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport { IntervalContext } from \"./IntervalProvider\";\nimport T from \"./T\";\n\nconst LoginModal = ({\n  screenProps: {\n    dispatch,\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n  navigation,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [phone, setPhone] = useState(\"\");\n  const [view, setView] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const changeName = async () => {\n    const { response, success } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    setResponse(response);\n\n    return success;\n  };\n\n  const login = () => dispatch({ type: \"SET_LOGGED\", value: true });\n  useEffect(() => {\n    setName(me?.name);\n  }, [me?.name]);\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n  const postVerifyPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n          resetIntervalsForToken(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postLogin = () => {\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        if (responseJson.error) {\n          setError(responseJson.error);\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n          reloadMe(responseJson.loginToken);\n          setError(null);\n          setSuccess(responseJson.success);\n          resetIntervalsForToken(responseJson.token);\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postSetPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token: device.loginToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          setView(\"code\");\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderEmailPassLogin = () => (\n    <View>\n      <View\n        style={{\n          margin: 20,\n          padding: 20,\n          borderRadius: 20,\n        }}\n      >\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\n\n        {success ? (\n          <Text style={{ color: \"green\" }}>{success}</Text>\n        ) : (\n          <View>\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n              <TextInput\n                placeholder={getText(\"email\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                onChangeText={setEmail}\n                value={email}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n              <TextInput\n                secureTextEntry\n                onChangeText={setPassword}\n                value={password}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <View />\n\n              <Button\n                theme={theme}\n                title={getText(\"login\")}\n                onPress={() => postLogin()}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n\n                  navigation.navigate(\"SignupEmail\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"register\")}\n                </Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n                  navigation.navigate(\"ForgotPassword\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"forgotPassword\")}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n  const renderCode = () => (\n    <View>\n      {response && <T>{response}</T>}\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n        <TextInput\n          placeholder=\"000000\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setCode}\n          value={code}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button title={getText(\"validate\")} onPress={() => postVerifyPhone()} />\n      </View>\n    </View>\n  );\n  const renderPhoneLogin = () => (\n    <View>\n      {response && <T>{response}</T>}\n\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n        <TextInput\n          placeholder=\"+31\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setPhone}\n          value={phone}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button\n          theme={theme}\n          title={getText(\"save\")}\n          onPress={() => postSetPhone()}\n        />\n      </View>\n    </View>\n  );\n  const renderMain = () => (\n    <View>\n      {/* Option 1: Just play */}\n      {response && <T>{response}</T>}\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"youAre\")}</T>\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={[style(theme).textInput, { marginLeft: 10 }]}\n          placeholder={getText(\"name\")}\n          value={name}\n          onChangeText={setName}\n        />\n      </View>\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"justPlay\")}\n        onPress={async () => {\n          if (!me) {\n            setResponse(getText(\"waitUntilLoaded\"));\n            return;\n          }\n          if (name !== me?.name) {\n            const success = await changeName();\n            if (success) {\n              reloadMe(device.loginToken);\n\n              login();\n            }\n          } else {\n            login();\n          }\n        }}\n      />\n      {/* Option 2: Login with email */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithEmail\")}\n        onPress={() => setView(\"emailPass\")}\n      />\n      {/* Option 3: Login with phone number */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithPhone\")}\n        onPress={() => setView(\"phone\")}\n      />\n    </View>\n  );\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: \"rgba(0,0,0,0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: 20,\n          padding: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={view !== null ? () => setView(null) : login}\n          style={{ alignSelf: \"flex-end\" }}\n        >\n          <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n        </TouchableOpacity>\n\n        {!me?.id ? <ActivityIndicator /> : null}\n\n        {view === \"emailPass\"\n          ? renderEmailPassLogin()\n          : view === \"phone\"\n          ? renderPhoneLogin()\n          : view === \"code\"\n          ? renderCode()\n          : renderMain()}\n      </View>\n    </View>\n  );\n};\n\nexport default LoginModal;\n","import * as React from \"react\";\nimport { Animated, Easing, Keyboard, Platform, StatusBar } from \"react-native\";\nimport { isIphoneX } from \"./Util\";\n\ninterface KeyboardAvoidingSpaceProps {\n  onKeyboardWillShow?: (duration: number) => void;\n  onKeyboardWillHide?: (duration: number) => void;\n  offset?: number;\n}\n\ninterface KeyboardAvoidingSpaceState {\n  height: Animated.Value;\n}\n\n/**\n * Made with swag by yours truly\n * @author Brad \"Swagalicious\" Johnson\n */\nexport class KeyboardAvoidingSpace extends React.Component<\n  KeyboardAvoidingSpaceProps,\n  KeyboardAvoidingSpaceState\n> {\n  constructor(props: KeyboardAvoidingSpaceProps) {\n    super(props);\n    this.state = {\n      height: new Animated.Value(0),\n    };\n  }\n\n  componentDidMount() {\n    this.bindListeners();\n  }\n\n  componentWillUnmount() {\n    this.unbindListeners();\n  }\n\n  bindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        this.keyboardWillHide\n      );\n    } else {\n      this.keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        this.keyboardWillHide\n      );\n    }\n  }\n\n  unbindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    } else {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }\n\n  keyboardWillShow = (e: any) => {\n    // because of iPhone X new screen settings, remove SafeAreaView padding-bottom when keyboard is open\n    const SafeAreaViewPaddingBottom = 34;\n    const duration = e && e.duration ? e.duration : 100;\n    let notchHeight = 0;\n    if (\n      Platform.OS === \"android\" &&\n      StatusBar.currentHeight &&\n      StatusBar.currentHeight > 24\n    ) {\n      notchHeight = StatusBar.currentHeight;\n    }\n    // let suggestHeight = 0;\n    // if (Platform.OS === \"ios\") {\n    //   suggestHeight = 30;\n    // }\n    if (this.props.onKeyboardWillShow) {\n      this.props.onKeyboardWillShow(duration);\n    }\n\n    const toValue =\n      e.endCoordinates.height -\n      // suggestHeight +\n      // notchHeight -\n      (this.props.offset || 0) -\n      (isIphoneX() ? SafeAreaViewPaddingBottom : 0);\n\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  keyboardWillHide = (e: any) => {\n    const duration = e && e.duration ? e.duration : 100;\n    if (this.props.onKeyboardWillHide) {\n      this.props.onKeyboardWillHide(duration);\n    }\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    return <Animated.View style={{ height: this.state.height }} />;\n  }\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"./Constants\";\nimport {\n  getRank,\n  getTextFunction,\n  InactiveScreens,\n  numberFormat,\n} from \"./Util\";\n\nexport const isHappyHour = () => {\n  const isSunday = moment().day() === 0; //sunday\n  const is7pm = moment().hour() === 19; //19pm\n  const isHappyHourReleased = moment().isAfter(\n    moment(\"01/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17)\n  );\n  return isHappyHourReleased && (isSunday || is7pm);\n};\n\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const robberySeconds = Math.ceil(\n    (me?.robberyAt + me?.robberySeconds * 1000 - Date.now()) / 1000\n  );\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCrime\"),\n        label: isHappyHour() ? \"Happy Hour\" : undefined,\n      },\n\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuCrimes\"),\n          to: \"Crimes\",\n          component:\n            crimeSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={crimeSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"stepforward\",\n          text: getText(\"menuGym\"),\n          to: \"Gym\",\n          component:\n            gymSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={gymSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"tree\",\n          text: getText(\"menuWiet\"),\n          to: \"Wiet\",\n          component:\n            wietSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={wietSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialIcons\",\n          icon: \"people\",\n          text: getText(\"menuJunkies\"),\n          to: \"Junkies\",\n          component:\n            junkiesSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={junkiesSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"female\",\n          text: getText(\"menuProstitutes\"),\n          to: \"Hoeren\",\n          component:\n            hoerenSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={hoerenSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive:\n            moment().isBefore(InactiveScreens.WORK_RELEASE_DATE) &&\n            me?.level < 2,\n          isNew: moment().isBefore(\n            moment(InactiveScreens.WORK_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"tool\",\n          text: getText(\"menuWork\"),\n          to: \"Work\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bars\",\n          text: getText(\"menuJail\", me?.jail),\n          to: \"Jail\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_BOMB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BOMB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"bomb\",\n          text: getText(\"menuBomb\"),\n          to: \"Bomb\",\n        },\n\n        {\n          inactive:\n            (moment().isBefore(InactiveScreens.ROBBERY_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROBBERY,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.ROBBERY_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_ROBBERY +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuRobbery\"),\n          to: \"Robbery\",\n          component:\n            robberySeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robberySeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    !(\n      !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB_KILL_MENU\n    ) && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerRobMurder\"),\n      },\n\n      content: [\n        {\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_KILL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_KILL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuKill\"),\n          to: \"Kill\",\n          component:\n            attackSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={attackSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_ROB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuRob\"),\n          to: \"Rob\",\n          component:\n            robSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive:\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuBulletfactory\"),\n          to: \"Bulletfactory\",\n        },\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_BUNKER,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BUNKER +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"warehouse\",\n          text: getText(\"menuBunker\"),\n          to: \"Bunker\",\n          component:\n            bunkerSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={bunkerSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_HOSPITAL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_HOSPITAL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"hospital\",\n          text: getText(\"menuHospital\"),\n          to: \"Hospital\",\n        },\n\n        {\n          inactive:\n            (moment().isBefore(InactiveScreens.DETECTIVES_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_DETECTIVES,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.DETECTIVES_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACtIONS_BEFORE_DETECTIVES +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"search\",\n          text: getText(\"menuDetectives\"),\n          to: \"Detectives\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCars\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"car\",\n          text: getText(\"menuStealCar\"),\n          to: \"StealCar\",\n          component:\n            stealcarSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={stealcarSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-car\",\n          text: getText(\"menuGarage\"),\n          to: \"AllGarage\",\n        },\n        // {\n        //   inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_RACECARS,\n        //   isNew:\n        //     me?.numActions <\n        //     InactiveScreens.ACTIONS_BEFORE_RACECARS +\n        //       InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n        //   iconType: \"MaterialIcons\",\n        //   icon: \"local-car-wash\",\n        //   text: getText(\"menuRacecars\"),\n        //   to: \"Racecars\",\n        // },\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_STREETRACE,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_STREETRACE +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"car-key\",\n          text: getText(\"menuStreetrace\"),\n          to: \"Streetrace\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSpend\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuBank\"),\n          to: \"AllBanks\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me.level < 1) &&\n              moment().isBefore(InactiveScreens.MARKET_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_MARKET,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.MARKET_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_MARKET +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuMarket\"),\n          to: \"Market\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_CASINO,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_CASINO +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome5\",\n          icon: \"dice\",\n          text: getText(\"menuCasino\"),\n          to: \"Casino\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"home\",\n          text: getText(\"homeShop\"),\n          to: \"EstateAgent\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuWeaponShop\"),\n          to: \"WeaponShop\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"shield\",\n          text: getText(\"menuProtectionShop\"),\n          to: \"ProtectionShop\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-airplane\",\n          text: getText(\"menuAirplaneShop\"),\n          to: \"AirplaneShop\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"garage\",\n          text: getText(\"menuGarageShop\"),\n          to: \"GarageShop\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_AIRPORT,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_AIRPORT +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"plane\",\n          text: getText(\"menuAirport\"),\n          to: \"Airport\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n  ].filter((x) => !!x);\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level >= 5\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuReports\"),\n            to: \"Reports\",\n          },\n        ]\n      : [];\n\n  const betaTester = me?.level >= 2 ? [] : [];\n  const admin = me?.level >= 10 ? [] : [];\n\n  return (\n    me?.level > 1 && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAdminPanel\"),\n      },\n      content: [...betaTester, ...gameMod, ...admin],\n    }\n  );\n};\n\nexport const rightMenu = (me, theme) => {\n  const getText = getTextFunction(me?.locale);\n  const ocSeconds = Math.ceil((me?.ocAt + 3600000 - Date.now()) / 1000);\n\n  const isGangsReleased = new moment().isAfter(\n    InactiveScreens.GANG_RELEASE_DATE\n  );\n  const gangMenus =\n    me?.level > 1 || isGangsReleased\n      ? {\n          header: {\n            isHeader: true,\n            isNew: moment().isBefore(\n              moment(InactiveScreens.GANG_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ),\n            text: me?.gang?.name || getText(\"headerGang\"),\n            image: me?.gang?.thumbnail\n              ? Constants.SERVER_ADDR + me?.gang?.thumbnail\n              : null,\n          },\n          content: [\n            !me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangCreate\"),\n              to: \"GangCreate\",\n            },\n            {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangs\"),\n              to: \"Gangs\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangSettings\"),\n              to: \"GangSettings\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangShop\"),\n              to: \"GangShop\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangAchievements\"),\n              to: \"GangAchievements\",\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(\n                  InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE\n                ),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"MaterialCommunityIcons\",\n              icon: \"pistol\",\n              text: getText(\"menuBulletfactory\"),\n              to: \"GangBulletFactory\",\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(InactiveScreens.OC_RELEASE_DATE),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.OC_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"Ionicons\",\n              icon: \"md-cash\",\n              text: getText(\"menuOC\"),\n              to: \"OC\",\n              component:\n                ocSeconds > 0 ? (\n                  <CountDown\n                    style={{ marginLeft: 10 }}\n                    until={ocSeconds}\n                    digitStyle={{ backgroundColor: theme.secondary }}\n                    digitTxtStyle={{ color: theme.secondaryText }}\n                    onFinish={() => {}}\n                    size={8}\n                    timeToShow={[\"M\", \"S\"]}\n                    timeLabels={{ m: null, s: null }}\n                  />\n                ) : null,\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(InactiveScreens.GANG_MISSIONS_RELEASE_DATE),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.GANG_MISSIONS_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"Ionicons\",\n              icon: \"md-cash\",\n              text: getText(\"menuGangMissions\"),\n              to: \"GangMissions\",\n            },\n          ].filter((x) => !!x && !x.inactive),\n        }\n      : null;\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: me?.name,\n        image: me?.thumbnail ? Constants.SERVER_ADDR + me?.thumbnail : null,\n      },\n\n      content: [\n        {\n          isStats: true,\n          iconType: \"FontAwesome5\",\n          icon: \"coins\",\n          text: getText(\"menuCash\", numberFormat(me?.cash)),\n          to: \"AllBanks\",\n        },\n\n        {\n          isStats: true,\n\n          iconType: \"FontAwesome\",\n          icon: \"money\",\n\n          text: getText(\"menuBankMoney\", numberFormat(me?.bank)),\n          to: \"AllBanks\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"bullet\",\n\n          text: getText(\"menuBullets\", numberFormat(me?.bullets)),\n          to: \"Kill\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"SimpleLineIcons\",\n          icon: \"badge\",\n          text: getText(\"menuRank\", getRank(me?.rank, \"both\")),\n          to: \"Status\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"AntDesign\",\n          icon: \"heart\",\n\n          text: getText(\"menuHealth\", me?.health),\n          to: \"Hospital\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"Ionicons\",\n          icon: \"ios-airplane\",\n\n          text: getText(\"menuCity\", me?.city),\n          to: \"Airport\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChannels\", me?.chats),\n          to: \"Channels\",\n        },\n      ],\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSociety\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n\n          text: getText(\"menuMembers\", me?.online),\n          to: \"Members\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStats\"),\n          to: \"Stats\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStatus\"),\n          to: \"Status\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuProperties\"),\n          to: \"Properties\",\n        },\n      ],\n    },\n\n    gangMenus,\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerGeneral\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChat\"),\n          to: \"Chat\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"wechat\",\n\n          text: getText(\"menuForum\"),\n          to: \"Forum\",\n        },\n\n        {\n          inactive:\n            me?.level < 2 &&\n            !(\n              moment().year() > 2020 &&\n              ((moment().month() === 10 && moment().date() > 15) ||\n                (moment().month() === 11 && moment().date() < 6))\n            ),\n          isNew: true,\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuSint\"),\n          to: \"Sint\",\n        },\n\n        {\n          iconType: \"SimpleLineIcons\",\n          icon: \"settings\",\n\n          text: getText(\"menuSettings\"),\n          to: \"Settings\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"info-with-circle\",\n\n          text: getText(\"menuInfo\"),\n          to: \"Info\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuHackers\"),\n          to: \"Hackers\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuPolice\"),\n          to: \"Police\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuVIP\"),\n          to: \"VIP\",\n        },\n\n        {\n          inactive:\n            me?.level < 2 &&\n            moment().isBefore(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.PRIZES_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"prizes\"),\n          to: \"Prizes\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    adminMenu(me),\n  ].filter((x) => !!x);\n};\n","import * as Icon from \"@expo/vector-icons\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as StoreReview from \"expo-store-review\";\nimport React, { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  AppState,\n  Dimensions,\n  Image,\n  Linking,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport Dead from \"./components/Dead\";\nimport Fly from \"./components/Fly\";\nimport Header from \"./components/Header\";\nimport Hoverable from \"./components/Hoverable\";\nimport { IntervalContext } from \"./components/IntervalProvider\";\nimport Jail from \"./components/Jail\";\n// import { loadReCaptcha } from \"react-recaptcha-v3\";\nimport LoginModal from \"./components/LoginModal\";\nimport T from \"./components/T\";\nimport { KeyboardAvoidingSpace } from \"./KeyboardAvoidingSpace\";\nimport { leftMenu, rightMenu } from \"./Menus\";\nimport { darkerHex, doOnce, getTextFunction, lighterHex } from \"./Util\";\n\nexport const CustomDrawerContentComponent = (props) => {\n  const {\n    navigation,\n    screenProps: { me, device, dispatch },\n  } = props;\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  return (\n    <ScrollView>\n      <SafeAreaView\n        style={{ flex: 1, backgroundColor: device.theme.primary }}\n        forceInset={{ top: \"always\", horizontal: \"never\" }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\nexport const renderMenu = (\n  item,\n  index,\n  navigation,\n  theme: Theme,\n  dispatch,\n  me\n) => {\n  const TheIcon = Icon[item.iconType];\n\n  const isCurrent = navigation.state.routeName === item.to;\n  const TouchOrView = item.isHeader ? View : TouchableOpacity;\n  const getText = getTextFunction(me?.locale);\n  return (\n    <TouchOrView\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <Hoverable onHoverIn={null} onHoverOut={null}>\n        {(isHovered) => (\n          <View\n            style={{\n              borderBottomWidth: 0,\n              padding: 3,\n              backgroundColor: item.isHeader\n                ? theme.primary\n                : darkerHex(theme.primary),\n              paddingLeft: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                minHeight: 25,\n                backgroundColor:\n                  isHovered || isCurrent\n                    ? lighterHex(theme.primary)\n                    : undefined,\n                borderRadius: isHovered || isCurrent ? 15 : undefined,\n              }}\n            >\n              <View style={{ width: 30, alignItems: \"center\" }}>\n                {TheIcon ? (\n                  <TheIcon\n                    name={item.icon}\n                    size={20}\n                    color={theme.secondaryText}\n                  />\n                ) : item.image ? (\n                  <Image\n                    source={{ uri: item.image }}\n                    style={{ width: 40, height: 40, borderRadius: 20 }}\n                  />\n                ) : null}\n              </View>\n              <Text\n                style={{\n                  marginLeft: 15,\n                  color: theme.primaryText,\n                  fontWeight: item.isHeader ? \"bold\" : undefined,\n                }}\n              >\n                {item.text}\n              </Text>\n              {item.isNew && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{getText(\"new\")}</T>\n                </View>\n              )}\n\n              {item.label && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{item.label}</T>\n                </View>\n              )}\n              {item.component}\n            </View>\n          </View>\n        )}\n      </Hoverable>\n    </TouchOrView>\n  );\n};\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nconst Layout = ({ screenProps, navigation, children }) => {\n  const { me, device, dispatch, reloadMe } = screenProps;\n\n  const useNewContainer = me?.newVersion;\n\n  const window = Dimensions.get(\"window\");\n  const isSmallDevice = window.width < 800;\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n\n  doOnce(() => {\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n\n      resetIntervalsForToken(token);\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n\n    Linking.addEventListener(\"url\", openWebUrl);\n    Linking.getInitialURL().then((url) => openWebUrl(url));\n  });\n\n  const openWebUrl = (url) => {\n    console.log(\"should open web url here\", url);\n  };\n\n  useEffect(() => {\n    reloadMe(device.loginToken);\n  }, [device.logged]);\n\n  const getText = getTextFunction(me?.locale);\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    //TODO: Fix dat hij naar chat redirect\n    // navigation.navigate(\"Channels\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      screenProps.dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (screenProps.device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          // console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Channels\",\n    \"Channel\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n    \"Market\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const renderForWeb = () => (\n    <Helmet>\n      <title>MasterCrimeZ - The Ultimate Game</title>\n      <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n      <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n      <meta property=\"og:description\" content={getText(\"metaOgDescription\")} />\n      <meta property=\"og:image\" content=\"\" />\n    </Helmet>\n  );\n\n  const renderLeftMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const renderRightMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const SafeOrView = useNewContainer ? View : SafeAreaView;\n  return (\n    <View style={{ flex: 1 }}>\n      <SafeOrView\n        style={{\n          flexDirection: \"row\",\n          flex: 1,\n          backgroundColor: device.theme.primary,\n        }}\n      >\n        {Platform.OS === \"web\" && renderForWeb()}\n        {isSmallDevice ? null : renderLeftMenu()}\n\n        <View\n          style={{\n            height: Platform.OS === \"web\" ? window.height : undefined,\n            flex: 1,\n          }}\n        >\n          {(!useNewContainer ||\n            (useNewContainer && navigation.state.routeName !== \"Map\")) && (\n            <Header navigation={navigation} device={device} me={me} />\n          )}\n\n          {me?.reizenAt > Date.now() && !skip ? (\n            <Fly screenProps={screenProps} navigation={navigation} />\n          ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n            <Dead screenProps={screenProps} navigation={navigation} />\n          ) : me?.jailAt > Date.now() && !skip ? (\n            <Jail screenProps={screenProps} navigation={navigation} />\n          ) : (\n            <View style={{ flex: 1 }}>{children}</View>\n          )}\n\n          {navigation.state.routeName !== \"Map\" && (\n            <KeyboardAvoidingSpace offset={useNewContainer ? 65 : 0} />\n          )}\n        </View>\n\n        {isSmallDevice ? null : renderRightMenu()}\n      </SafeOrView>\n\n      {!device.logged && (\n        <LoginModal navigation={navigation} screenProps={screenProps} />\n      )}\n    </View>\n  );\n};\nexport const withLayout = (Component) => (props) => (\n  <Layout {...props}>\n    <Component {...props} />\n  </Layout>\n);\n","import ExpoConstants from \"expo-constants\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport * as StoreReview from \"expo-store-review\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { AppState, NativeModules, Platform, View } from \"react-native\";\nimport { IntervalContext } from \"../components/IntervalProvider\";\nimport LoginModal from \"../components/LoginModal\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\n\nconst Logic = ({\n  children,\n  screenProps,\n  navigation,\n  screenProps: { device, dispatch, me, reloadMe, reloadChannels },\n}) => {\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n  const getText = getTextFunction(me?.locale);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleAppStateChange);\n    turnOnNotifications();\n    sendLanguage();\n\n    return () => AppState.removeEventListener(\"change\", handleAppStateChange);\n  }, []);\n\n  useEffect(() => {\n    fetchChannelsubs();\n\n    const interval = setInterval(() => fetchChannelsubs(), 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchChannelsubs = () => {\n    reloadChannels(device.loginToken);\n  };\n\n  const handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      turnOnNotifications();\n      sendLanguage();\n    }\n  };\n\n  const sendLanguage = () => {\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  const turnOnNotifications = async () => {\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        dispatch({ type: \"SET_SHOW_NOTIFICATIONS_HEADER\", value: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await ExpoNotifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      dispatch({ type: \"SET_SHOW_NOTIFICATIONS_HEADER\", value: false });\n    }\n  };\n\n  doOnce(() => {\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n\n      resetIntervalsForToken(token);\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n  });\n\n  useEffect(() => {\n    reloadMe(device.loginToken);\n  }, [device.logged]);\n\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    //TODO: Fix dat hij naar chat redirect\n    // navigation.navigate(\"Channels\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          // console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const renderForWeb = () => (\n    <Helmet>\n      <title>MasterCrimeZ - The Ultimate Game</title>\n      <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n      <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n      <meta property=\"og:description\" content={getText(\"metaOgDescription\")} />\n      <meta property=\"og:image\" content=\"\" />\n    </Helmet>\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      {Platform.OS === \"web\" && renderForWeb()}\n      {children}\n\n      {!device.logged && (\n        <LoginModal navigation={navigation} screenProps={screenProps} />\n      )}\n    </View>\n  );\n};\n\nexport default Logic;\n","import moment from \"moment\";\nimport { Platform } from \"react-native\";\nexport const API_KEY = \"AIzaSyCOENphOkWqcrvmehHhhgKu7lJpwqfLQzc\";\n\nexport const OBJECT_SIZE_FACTOR = 4;\nexport const SIZE_FACTOR = 100;\n\nexport const objects = [\n  {\n    title: \"menuHouse\",\n    type: \"house\",\n    image: require(\"../../assets/map/house2.png\"),\n    size: 10,\n    aspectRatio: 783 / 500,\n  },\n\n  {\n    title: \"menuHeadquarter\",\n    type: \"headquarter\",\n    image: require(\"../../assets/map/headquarter.png\"),\n    size: 10,\n    aspectRatio: 202 / 182,\n  },\n\n  {\n    title: \"menuBulletfactory\",\n    type: \"bulletFactory\",\n    image: require(\"../../assets/map/bulletfactory.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n  {\n    title: \"menuAirport\",\n    type: \"airport\",\n    image: require(\"../../assets/map/airport.png\"),\n    size: 15,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuBank\",\n    type: \"bank\",\n    image: require(\"../../assets/map/bank.png\"),\n    size: 8,\n    aspectRatio: 200 / 235,\n  },\n\n  {\n    title: \"menuCasino\",\n    type: \"casino\",\n    image: require(\"../../assets/map/casino.png\"),\n    size: 20,\n    aspectRatio: 400 / 251,\n  },\n\n  {\n    title: \"menuCoffeeShop\",\n    type: \"landlord\",\n    image: require(\"../../assets/map/coffeeshop.png\"),\n    size: 10,\n    aspectRatio: 300 / 270,\n  },\n\n  {\n    title: \"menuSalvationArmy\",\n    type: \"junkies\",\n    image: require(\"../../assets/map/junkies.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuGarage\",\n    type: \"garage\",\n    image: require(\"../../assets/map/garage.png\"),\n    size: 10,\n    aspectRatio: 400 / 292,\n  },\n\n  {\n    title: \"menuGym\",\n    type: \"gym\",\n    to: \"Gym\",\n    image: require(\"../../assets/map/gym.png\"),\n    size: 10,\n    aspectRatio: 300 / 231,\n  },\n\n  {\n    title: \"menuHospital\",\n    type: \"hospital\",\n    to: \"Hospital\",\n    image: require(\"../../assets/map/hospital.png\"),\n    size: 10,\n    aspectRatio: 300 / 270,\n  },\n\n  {\n    title: \"menuJail2\",\n    type: \"jail\",\n    to: \"Jail\",\n    image: require(\"../../assets/map/jail.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuMarket\",\n    type: \"market\",\n    to: \"Market\",\n    image: require(\"../../assets/map/market.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n  {\n    title: \"menuWeaponShop\",\n    type: \"weaponShop\",\n    image: require(\"../../assets/map/shop.png\"),\n    size: 10,\n    aspectRatio: 300 / 262,\n  },\n\n  {\n    title: \"menuEstateAgent\",\n    type: \"estateAgent\",\n    to: \"EstateAgent\",\n    image: require(\"../../assets/map/shop.png\"),\n    size: 10,\n    aspectRatio: 300 / 262,\n  },\n\n  {\n    title: \"menuRLD\",\n    type: \"rld\",\n    image: require(\"../../assets/map/sexshop.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuStockExchange\",\n    type: \"stockExchange\",\n    to: \"StockExchange\",\n    image: require(\"../../assets/map/market.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n];\n\nexport const rgbs = [\n  \"0,255,0\",\n  \"255,0,0\",\n  \"0,255,255\",\n  \"0,0,255\",\n  \"255,0,255\",\n  \"255,255,0\",\n  \"0,150,0\",\n  \"0,0,150\",\n];\n\nconst decimalHash = (string) => {\n  let sum = 0;\n  for (let i = 0; i < string.length; i++)\n    sum += ((i + 1) * string.codePointAt(i)) / (1 << 8);\n  return sum % 1;\n};\n\n// kies positiegetal deterministisch aan de hand van een string van moment().format(\"DD-MM-YY HH\") en index en type\nexport const getPosition = (id, type) => {\n  const string = moment().format(\"DD-MM-YY HH\") + id?.toString() + type;\n  return decimalHash(string);\n};\n\nexport const getZoom = (delta) => Math.ceil(Math.log(360 / delta) / Math.LN2);\n\nexport const animateToCity = ({ map, dispatch, city, delayZoom }) => {\n  if (Platform.OS === \"web\") {\n    const zoom = getZoom(city?.delta);\n    console.log(\"animateTocity\", zoom);\n\n    const doZoom = () => dispatch({ type: \"SET_ZOOM\", value: zoom });\n\n    if (delayZoom) {\n      setTimeout(() => doZoom(), 2000);\n    } else {\n      doZoom();\n    }\n    map.panTo({\n      lat: city.latitude,\n      lng: city.longitude,\n    });\n  } else {\n    map.animateToRegion({\n      latitude: city.latitude,\n      longitude: city.longitude,\n      latitudeDelta: city.delta * 1.2,\n      longitudeDelta: city.delta * 1.2,\n    });\n  }\n};\nexport const getObjectMeta = ({ object, index, city, cityAreas }) => {\n  let latitude = city?.[`${object.type}Latitude`];\n  let longitude = city?.[`${object.type}Longitude`];\n\n  if (!latitude || !longitude) {\n    const terri = cityAreas.areas[index % (cityAreas.areas.length - 1)];\n    latitude = terri.centerLatitude;\n    longitude = terri.centerLongitude;\n  }\n\n  const deltaLatitude =\n    (city?.delta * object.size) / object.aspectRatio / SIZE_FACTOR; //width\n  const deltaLongitude = (city?.delta * object.size) / SIZE_FACTOR;\n\n  const biggestDeltaLatitude =\n    deltaLatitude > deltaLongitude ? deltaLatitude : deltaLongitude;\n  const topLeftLatitude = latitude - deltaLatitude / 2;\n  const topLeftLongitude = longitude - deltaLongitude / 2;\n  const bottomRightLatitude = latitude + deltaLatitude / 2;\n  const bottomRightLongitude = longitude + deltaLongitude / 2;\n\n  const topRightLatitude = latitude + deltaLatitude / 2;\n  const topRightLongitude = longitude - deltaLongitude / 2;\n  const bottomLeftLatitude = latitude - deltaLatitude / 2;\n  const bottomLeftLongitude = longitude + deltaLongitude / 2;\n\n  const square = [\n    { latitude: topLeftLatitude, longitude: topLeftLongitude },\n    { latitude: topRightLatitude, longitude: topRightLongitude },\n    {\n      latitude: bottomRightLatitude,\n      longitude: bottomRightLongitude,\n    },\n    { latitude: bottomLeftLatitude, longitude: bottomLeftLongitude },\n  ];\n\n  const bounds = {\n    east: bottomRightLongitude,\n    south: bottomLeftLatitude,\n    north: bottomRightLatitude,\n    west: topRightLongitude,\n  };\n\n  const platformBounds =\n    Platform.OS === \"ios\"\n      ? [\n          [topLeftLatitude, topLeftLongitude],\n          [bottomRightLatitude, bottomRightLongitude],\n        ]\n      : [\n          [bottomRightLatitude, topLeftLongitude],\n          [topLeftLatitude, bottomRightLongitude],\n        ];\n\n  const radius = biggestDeltaLatitude * 50000;\n\n  const zoom = getZoom(biggestDeltaLatitude);\n  return {\n    latitude,\n    longitude,\n    deltaLatitude,\n    deltaLongitude,\n    biggestDeltaLatitude,\n    radius,\n    zoom,\n    square,\n    bounds,\n    platformBounds,\n  };\n};\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport { getLocale, getUserColor } from \"../Util\";\nimport T from \"./T\";\n\nconst User = ({ user, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const color = getUserColor(user, theme);\n  const isOnline = (Date.now() - user.onlineAt) / 60000 < 5;\n\n  const extraIcon =\n    user.level === 2\n      ? \"💼\"\n      : user.level === 3\n      ? \"🕶\"\n      : user.level === 10\n      ? \"🤓\"\n      : null;\n\n  const country = getLocale(user.locale) === \"nl\" ? \"🇳🇱\" : \"🌍\";\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Profile\", { name: user.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {user.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + user.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n        <View style={{ position: \"absolute\", top: 0, right: 0 }}>\n          <T>{isOnline ? \"✅\" : \"🛑\"}</T>\n        </View>\n\n        {extraIcon && (\n          <View style={{ position: \"absolute\", bottom: 0, right: 0 }}>\n            <T>{extraIcon}</T>\n          </View>\n        )}\n\n        {user.gang && user.gang.thumbnail && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: -0.1 * size,\n              left: -0.1 * size,\n            }}\n          >\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + user.gang.thumbnail }}\n              style={{\n                width: size / 2,\n                height: size / 2,\n                borderRadius: size / 4,\n              }}\n            />\n          </View>\n        )}\n\n        <View style={{ position: \"absolute\", bottom: 0, left: 0 }}>\n          <T>{country}</T>\n        </View>\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T style={{ color }}>{user.name}</T>\n        {user.gang && <T>{user.gang.name}</T>}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default User;\n","import * as Icon from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport {\n  getTextFunction,\n  InactiveScreens,\n  lighterHex,\n  post,\n  withCaptcha,\n} from \"../Util\";\n\nconst ActionsBar = ({\n  selected,\n  city,\n  me,\n  device,\n  navigation,\n  setLoading,\n  reloadMe,\n  reloadCities,\n  selectedArea,\n  reloadAreas,\n  view,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const alertAlert = React.useContext(AlertContext);\n\n  const bombAction = (type) => ({\n    inactive: !city?.[`${type}Owner`] || city?.[`${type}Owner`] === me?.name,\n    text: getText(\"bombard\"),\n    onPress: () => {\n      const airplanes = [\n        \"\",\n        \"Fokker\",\n        \"Fleet\",\n        \"Havilland\",\n        \"Cessna\",\n        \"Douglas\",\n        \"Lear Jet\",\n        \"Raket\",\n      ];\n\n      alertAlert(\n        getText(\"fillInBombs\"),\n        me?.airplane === 0\n          ? getText(\"bombNoAirplane\")\n          : getText(\n              \"bombAirplaneText\",\n              airplanes[me?.airplane],\n              me?.airplane * 5\n            ),\n        [\n          {\n            text: getText(\"ok\"),\n            onPress: (bombs) => {\n              withCaptcha(\n                device.loginToken,\n                me?.needCaptcha,\n                getText,\n                alertAlert,\n                async (captcha) => {\n                  setLoading(true);\n                  const { response } = await post(\"bomb\", {\n                    loginToken: device.loginToken,\n                    bombs,\n                    type,\n                    captcha,\n                  });\n                  setLoading(false);\n                  reloadMe(device.loginToken);\n                  alertAlert(response, null, null, { key: \"bombResponse\" });\n                  reloadCities();\n                }\n              );\n            },\n          },\n          {\n            text: getText(\"cancel\"),\n          },\n        ],\n        { key: \"bomb\", textInput: true, keyboardType: \"numeric\" }\n      );\n    },\n    icon: Icon.FontAwesome,\n    iconName: \"bomb\",\n  });\n  const takeOverAction = (type) => ({\n    inactive: !!city?.[`${type}Owner`],\n    text: getText(\"takeOver\"),\n    onPress: async () => {\n      const { response } = await post(\"becomeOwner\", {\n        city: me?.city,\n        type,\n        token: device.loginToken,\n      });\n      reloadCities();\n      reloadMe(device.loginToken);\n      alertAlert(response, null, null, { key: \"becomeOwnerResponse\" });\n    },\n    icon: Icon.MaterialCommunityIcons,\n    iconName: \"account-arrow-left\",\n  });\n  const manageAction = (type) => ({\n    inactive: city?.[`${type}Owner`] !== me?.name,\n    text: getText(\"manage\"),\n    onPress: () => navigation.resetTo(\"ManageObject\", { type, city: me?.city }),\n    icon: Icon.Ionicons,\n    iconName: \"md-settings\",\n  });\n\n  const postGetIncome = async (type, captcha) => {\n    setLoading(true);\n    const { response } = await post(\"income\", {\n      token: device.loginToken,\n      captcha,\n      type,\n    });\n\n    setLoading(false);\n\n    reloadMe(device.loginToken);\n    reloadCities();\n    alertAlert(response, null, null, { key: \"incomeResponse\" });\n  };\n  const incomeAction = (type) => ({\n    text: getText(\"getIncome\"),\n    onPress: () =>\n      withCaptcha(\n        device.loginToken,\n        me?.needCaptcha,\n        getText,\n        alertAlert,\n        (code) => postGetIncome(type, code)\n      ),\n    icon: Icon.FontAwesome5,\n    iconName: \"money-bill-wave\",\n  });\n\n  const allActions = {\n    casino: () => [\n      {\n        text: getText(\"poker\"),\n        onPress: () => navigation.resetTo(\"Poker\"),\n        isSelected: navigation.state.routeName === \"Poker\",\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"poker-chip\",\n        badgeAmount: 0,\n      },\n      {\n        inactive:\n          me?.level < 2 &&\n          InactiveScreens.LOTTO_RELEASE_DATE.isBefore(moment()),\n        text: getText(\"lotto\"),\n        onPress: () => navigation.resetTo(\"Lotto\"),\n        isSelected: navigation.state.routeName === \"Lotto\",\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"cash-100\",\n        badgeAmount: 0,\n      },\n      bombAction(\"casino\"),\n      takeOverAction(\"casino\"),\n      manageAction(\"casino\"),\n    ],\n    bulletFactory: () => [\n      {\n        text: getText(\"buyBullets\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"factory\",\n        onPress: () => {\n          alertAlert(\n            getText(\"buyBullets\"),\n            getText(\"bulletsText\", city?.bulletFactoryPrice, city?.bullets),\n            [\n              {\n                text: getText(\"ok\"),\n                onPress: (amount) => {\n                  withCaptcha(\n                    device.loginToken,\n                    me?.needCaptcha,\n                    getText,\n                    alertAlert,\n                    async (captcha) => {\n                      setLoading(true);\n                      const { response } = await post(\"buyBullets\", {\n                        loginToken: device.loginToken,\n                        amount,\n                        captcha,\n                      });\n                      setLoading(false);\n                      reloadMe(device.loginToken);\n                      reloadCities();\n                      alertAlert(response, null, null, {\n                        key: \"buyBulletsResponse\",\n                      });\n                    }\n                  );\n                },\n              },\n              {\n                text: getText(\"cancel\"),\n              },\n            ],\n            { key: \"buyBullets\", textInput: true, keyboardType: \"numeric\" }\n          );\n        },\n        badgeAmount: city?.bullets,\n      },\n\n      {\n        text: getText(\"menuGangBulletfactory\"),\n        icon: Icon.FontAwesome,\n        iconName: \"group\",\n        onPress: () => navigation.resetTo(\"GangBulletFactory\"),\n        isSelected: navigation.state.routeName === \"GangBulletFactory\",\n        badgeAmount: 0,\n\n        inactive:\n          !me?.gangId ||\n          (me?.level < 2 &&\n            moment().isBefore(\n              InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE\n            )),\n        isNew: moment().isBefore(\n          moment(InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE).add(\n            InactiveScreens.DAYS_NEW,\n            \"days\"\n          )\n        ),\n      },\n      bombAction(\"bulletFactory\"),\n      takeOverAction(\"bulletFactory\"),\n      manageAction(\"bulletFactory\"),\n    ],\n    airport: () => [\n      {\n        text: getText(\"menuAirport\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-airplane\",\n        onPress: () => navigation.resetTo(\"Airport\"),\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuAirplaneShop\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-airplane\",\n        isSelected: navigation.state.routeName === \"AirplaneShop\",\n        onPress: () => navigation.resetTo(\"AirplaneShop\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"airport\"),\n      takeOverAction(\"airport\"),\n      manageAction(\"airport\"),\n    ],\n\n    bank: () => [\n      {\n        text: getText(\"menuBank\"),\n        icon: Icon.FontAwesome,\n        iconName: \"bank\",\n        isSelected: navigation.state.routeName === \"Bank\",\n        onPress: () => navigation.resetTo(\"Bank\"),\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuSwissBank\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"money-bill\",\n        onPress: () => navigation.resetTo(\"SwissBank\"),\n        isSelected: navigation.state.routeName === \"SwissBank\",\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuDonate\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"donate\",\n        onPress: () => navigation.resetTo(\"Donate\"),\n        isSelected: navigation.state.routeName === \"Donate\",\n        badgeAmount: 0,\n      },\n\n      bombAction(\"bank\"),\n      takeOverAction(\"bank\"),\n      manageAction(\"bank\"),\n    ],\n\n    hospital: () => [\n      {\n        text: getText(\"menuHospital\"),\n        icon: Icon.Entypo,\n        iconName: \"heart\",\n        onPress: () => navigation.resetTo(\"Hospital\"),\n        isSelected: navigation.state.routeName === \"Hospital\",\n\n        badgeAmount: 0,\n      },\n      bombAction(\"hospital\"),\n      takeOverAction(\"hospital\"),\n      manageAction(\"hospital\"),\n    ],\n    house: () => [\n      {\n        text: getText(\"menuStatus\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-stats\",\n        onPress: () => navigation.resetTo(\"Status\"),\n        isSelected: navigation.state.routeName === \"Status\",\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuBunker\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"castle\",\n        onPress: () => navigation.resetTo(\"Bunker\"),\n        isSelected: navigation.state.routeName === \"Bunker\",\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuSint\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"shoe-formal\",\n        onPress: () => navigation.resetTo(\"Sint\"),\n        isSelected: navigation.state.routeName === \"Sint\",\n        badgeAmount: 0,\n        inactive:\n          me?.level < 2 &&\n          !(\n            moment().year() > 2020 &&\n            ((moment().month() === 10 && moment().date() > 15) ||\n              (moment().month() === 11 && moment().date() < 6))\n          ),\n      },\n    ],\n\n    landlord: () => [\n      incomeAction(\"landlord\"),\n      bombAction(\"landlord\"),\n      takeOverAction(\"landlord\"),\n      manageAction(\"landlord\"),\n    ],\n    junkies: () => [\n      incomeAction(\"junkies\"),\n      bombAction(\"junkies\"),\n      takeOverAction(\"junkies\"),\n      manageAction(\"junkies\"),\n    ],\n    rld: () => [\n      incomeAction(\"rld\"),\n      bombAction(\"rld\"),\n      takeOverAction(\"rld\"),\n      manageAction(\"rld\"),\n    ],\n\n    headquarter: () => [\n      {\n        text: getText(\"menuGangCreate\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangCreate\"),\n        isSelected: navigation.state.routeName === \"GangCreate\",\n\n        badgeAmount: 0,\n        inactive: !!me?.gangId,\n      },\n      {\n        text: getText(\"menuGangSettings\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangSettings\"),\n        isSelected: navigation.state.routeName === \"GangSettings\",\n\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n\n      {\n        text: getText(\"menuGangShop\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangShop\"),\n        isSelected: navigation.state.routeName === \"GangShop\",\n\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n\n      {\n        text: getText(\"menuGangAchievements\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangAchievements\"),\n        isSelected: navigation.state.routeName === \"GangAchievements\",\n\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n      {\n        inactive:\n          !me?.gangId ||\n          (me?.level < 2 &&\n            moment().isBefore(InactiveScreens.GANG_MISSIONS_RELEASE_DATE)),\n        isNew: moment().isBefore(\n          moment(InactiveScreens.GANG_MISSIONS_RELEASE_DATE).add(\n            InactiveScreens.DAYS_NEW,\n            \"days\"\n          )\n        ),\n        text: getText(\"menuGangMissions\"),\n        isSelected: navigation.state.routeName === \"GangMissions\",\n\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangMissions\"),\n        badgeAmount: 0,\n      },\n    ],\n    gym: () => [\n      {\n        text: getText(\"menuGym\"),\n        icon: Icon.Ionicons,\n        iconName: \"md-fitness\",\n        onPress: () => navigation.resetTo(\"Gym\"),\n        isSelected: navigation.state.routeName === \"Gym\",\n\n        badgeAmount: 0,\n      },\n      bombAction(\"gym\"),\n      takeOverAction(\"gym\"),\n      manageAction(\"gym\"),\n    ],\n    garage: () => [\n      {\n        text: getText(\"menuGarage\"),\n        icon: Icon.FontAwesome,\n        iconName: \"car\",\n        onPress: () => navigation.resetTo(\"Garage\"),\n        isSelected: navigation.state.routeName === \"Garage\",\n\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuRacecars\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"car\",\n        onPress: () => navigation.resetTo(\"Racecars\"),\n        isSelected: navigation.state.routeName === \"Racecars\",\n\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuGarageShop\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"garage\",\n        onPress: () => navigation.resetTo(\"GarageShop\"),\n        isSelected: navigation.state.routeName === \"GarageShop\",\n\n        badgeAmount: 0,\n      },\n\n      bombAction(\"garage\"),\n      takeOverAction(\"garage\"),\n      manageAction(\"garage\"),\n    ],\n\n    jail: () => [\n      {\n        text: getText(\"menuJail2\"),\n        icon: Icon.FontAwesome,\n        iconName: \"bars\",\n        onPress: () => navigation.resetTo(\"Jail\"),\n        isSelected: navigation.state.routeName === \"Jail\",\n\n        badgeAmount: me?.jail,\n      },\n      bombAction(\"jail\"),\n      takeOverAction(\"jail\"),\n      manageAction(\"jail\"),\n    ],\n\n    market: () => [\n      {\n        text: getText(\"menuMarket\"),\n        icon: Icon.FontAwesome,\n        iconName: \"handshake-o\",\n        onPress: () => navigation.resetTo(\"Market\"),\n        isSelected: navigation.state.routeName === \"Market\",\n        inactive:\n          me?.level < 2 &&\n          InactiveScreens.MARKET_RELEASE_DATE.isBefore(moment()),\n\n        badgeAmount: 0,\n      },\n      bombAction(\"market\"),\n      takeOverAction(\"market\"),\n      manageAction(\"market\"),\n    ],\n    weaponShop: () => [\n      {\n        text: getText(\"buyWeapons\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"pistol\",\n        onPress: () => navigation.resetTo(\"WeaponShop\"),\n        isSelected: navigation.state.routeName === \"WeaponShop\",\n\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"buyProtection\"),\n        icon: Icon.FontAwesome,\n        iconName: \"shield\",\n        onPress: () => navigation.resetTo(\"ProtectionShop\"),\n        isSelected: navigation.state.routeName === \"ProtectionShop\",\n\n        badgeAmount: 0,\n      },\n      bombAction(\"weaponShop\"),\n      takeOverAction(\"weaponShop\"),\n      manageAction(\"weaponShop\"),\n    ],\n\n    estateAgent: () => [\n      {\n        text: getText(\"menuEstateAgent\"),\n        icon: Icon.FontAwesome,\n        iconName: \"home\",\n        onPress: () => navigation.resetTo(\"EstateAgent\"),\n        isSelected: navigation.state.routeName === \"EstateAgent\",\n\n        badgeAmount: 0,\n      },\n      bombAction(\"estateAgent\"),\n      takeOverAction(\"estateAgent\"),\n      manageAction(\"estateAgent\"),\n    ],\n\n    stockExchange: () => [\n      {\n        text: getText(\"menuStockExchange\"),\n        icon: Icon.Entypo,\n        iconName: \"area-graph\",\n        onPress: () => navigation.resetTo(\"StockExchange\"),\n        isSelected: navigation.state.routeName === \"StockExchange\",\n        inactive:\n          me?.level < 2 &&\n          InactiveScreens.STOCK_MARKET_RELEASE_DATE.isBefore(moment()),\n\n        badgeAmount: 0,\n      },\n      bombAction(\"stockExchange\"),\n      takeOverAction(\"stockExchange\"),\n      manageAction(\"stockExchange\"),\n    ],\n    area: () => {\n      return [\n        {\n          inactive: !!selectedArea?.userId,\n          text: getText(\"takeOver\"),\n          onPress: async () => {\n            setLoading(true);\n            const { response } = await post(\"takeEmptyArea\", {\n              loginToken: device.loginToken,\n              id: selectedArea?.id,\n            });\n\n            setLoading(false);\n            alertAlert(response, null, null, {\n              key: \"takeEmptyAreaResponse\",\n            });\n\n            reloadAreas(me?.city);\n            reloadMe(device.loginToken);\n          },\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"account-arrow-left\",\n        },\n\n        {\n          inactive:\n            selectedArea?.userId === me?.id || selectedArea?.userId === null,\n          text: getText(\"menuBomb\"),\n          onPress: async () => {\n            const airplanes = [\n              \"\",\n              \"Fokker\",\n              \"Fleet\",\n              \"Havilland\",\n              \"Cessna\",\n              \"Douglas\",\n              \"Lear Jet\",\n              \"Raket\",\n            ];\n\n            alertAlert(\n              getText(\"fillInBombs\"),\n              me?.airplane === 0\n                ? getText(\"bombNoAirplane\")\n                : getText(\n                    \"bombAirplaneText\",\n                    airplanes[me?.airplane],\n                    me?.airplane * 5\n                  ),\n              [\n                {\n                  text: getText(\"ok\"),\n                  onPress: (bombs) => {\n                    withCaptcha(\n                      device.loginToken,\n                      me?.needCaptcha,\n                      getText,\n                      alertAlert,\n                      async (captcha) => {\n                        setLoading(true);\n                        const { response } = await post(\"bombArea\", {\n                          loginToken: device.loginToken,\n                          bombs,\n                          areaId: selectedArea?.id,\n                          captcha,\n                        });\n                        setLoading(false);\n                        reloadMe(device.loginToken);\n                        alertAlert(response, null, null, {\n                          key: \"bombAreaResponse\",\n                        });\n                        reloadAreas(me?.city);\n                      }\n                    );\n                  },\n                },\n                {\n                  text: getText(\"cancel\"),\n                },\n              ],\n              { key: \"bombArea\", textInput: true, keyboardType: \"numeric\" }\n            );\n          },\n          icon: Icon.FontAwesome,\n          iconName: \"bomb\",\n        },\n\n        {\n          inactive:\n            selectedArea?.userId !== me?.id || selectedArea?.damage === 0,\n          text: getText(\"repair\"),\n          onPress: async () => {\n            setLoading(true);\n            const { response } = await post(\"repairMyArea\", {\n              loginToken: device.loginToken,\n              id: selectedArea?.id,\n            });\n            setLoading(false);\n            reloadAreas(me?.city);\n            reloadMe(device.loginToken);\n            alertAlert(response, null, null, { key: \"repairMyAreaResponse\" });\n          },\n          icon: Icon.AntDesign,\n          iconName: \"tool\",\n        },\n      ];\n    },\n  };\n\n  const statsActions = [\n    {\n      text: getText(\"menuMembers\", me?.online),\n      icon: Icon.FontAwesome,\n      iconName: \"group\",\n      onPress: () => navigation.resetTo(\"Members\"),\n      isSelected: navigation.state.routeName === \"Members\",\n\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuStats\"),\n      icon: Icon.Entypo,\n      iconName: \"area-graph\",\n      onPress: () => navigation.resetTo(\"Stats\"),\n      isSelected: navigation.state.routeName === \"Stats\",\n\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuGangs\"),\n      icon: Icon.MaterialCommunityIcons,\n      iconName: \"home-group\",\n      onPress: () => navigation.resetTo(\"Gangs\"),\n      isSelected: navigation.state.routeName === \"Gangs\",\n\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"prizes\"),\n      icon: Icon.FontAwesome5,\n      iconName: \"award\",\n      onPress: () => navigation.resetTo(\"Prizes\"),\n      isSelected: navigation.state.routeName === \"Prizes\",\n\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuProperties\"),\n      icon: Icon.FontAwesome5,\n      iconName: \"house-damage\",\n      onPress: () => navigation.resetTo(\"Properties\"),\n      isSelected: navigation.state.routeName === \"Properties\",\n\n      badgeAmount: 0,\n    },\n  ];\n\n  const moreActions = [\n    {\n      text: getText(\"menuSettings\"),\n      icon: Icon.Ionicons,\n      iconName: \"ios-settings\",\n      onPress: () => navigation.resetTo(\"Settings\"),\n      isSelected: navigation.state.routeName === \"Settings\",\n    },\n\n    {\n      text: getText(\"menuInfo\"),\n      icon: Icon.Entypo,\n      iconName: \"info\",\n      onPress: () => navigation.resetTo(\"Info\"),\n      isSelected: navigation.state.routeName === \"Info\",\n    },\n\n    {\n      text: getText(\"menuPolice\"),\n      icon: Icon.Foundation,\n      iconName: \"sheriff-badge\",\n      onPress: () => navigation.resetTo(\"Police\"),\n      isSelected: navigation.state.routeName === \"Police\",\n    },\n    {\n      text: getText(\"menuVIP\"),\n      icon: Icon.MaterialIcons,\n      iconName: \"person-add\",\n      onPress: () => navigation.resetTo(\"VIP\"),\n      isSelected: navigation.state.routeName === \"VIP\",\n    },\n\n    {\n      text: getText(\"menuForum\"),\n      icon: Icon.MaterialIcons,\n      iconName: \"forum\",\n      onPress: () => navigation.resetTo(\"Forum\"),\n      isSelected: navigation.state.routeName === \"Forum\",\n    },\n  ];\n  const actions =\n    view === \"territories\" || view === \"game\"\n      ? selected\n        ? allActions[selected]().filter((x) => !x.inactive)\n        : []\n      : view === \"stats\"\n      ? statsActions\n      : view === \"more\"\n      ? moreActions\n      : [];\n\n  return (\n    actions.length > 0 && (\n      <ScrollView\n        horizontal\n        style={{\n          zIndex: 1,\n          position: \"absolute\",\n          left: 0,\n          bottom: 60,\n          height: 70,\n          flexDirection: \"row\",\n        }}\n      >\n        {actions.map((action, index) => (\n          <View key={`action${index}`}>\n            <TouchableOpacity\n              onPress={() => {\n                requestAnimationFrame(() => {\n                  console.log(\"onPress action\");\n                  action.onPress();\n                });\n              }}\n              style={{\n                width: 70,\n                marginHorizontal: 10,\n                height: 70,\n                borderRadius: 10,\n                backgroundColor: action.isSelected\n                  ? lighterHex(device.theme.primary)\n                  : device.theme.secondary,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <action.icon\n                name={action.iconName}\n                size={40}\n                color={device.theme.secondaryText}\n              />\n              <Text\n                style={{\n                  color: device.theme.secondaryText,\n                  fontWeight: \"bold\",\n                  fontSize: 10,\n                }}\n                numberOfLines={1}\n              >\n                {action.text}\n              </Text>\n            </TouchableOpacity>\n            {action.badgeAmount > 0 ? (\n              <View\n                style={{\n                  position: \"absolute\",\n                  right: 0,\n                  top: 0,\n                  backgroundColor: \"red\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderRadius: 10,\n                  minWidth: 20,\n                  height: 20,\n                }}\n              >\n                <Text\n                  style={{ color: \"white\", fontWeight: \"bold\", fontSize: 10 }}\n                >\n                  {action.badgeAmount}\n                </Text>\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </ScrollView>\n    )\n  );\n};\n\nexport default ActionsBar;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\n\nconst MapIcon = React.memo(({ view }) => {\n  return (\n    <TouchableOpacity\n      key={`v${view.view}`}\n      hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n      style={{\n        marginBottom: 10,\n        backgroundColor: view.isActive ? \"rgba(0,0,0,0.8)\" : \"rgba(0,0,0,0.4)\",\n        borderRadius: 20,\n        width: 40,\n        height: 40,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n      onPress={view.onPress}\n      onLongPress={view.onLongPress}\n    >\n      <view.icon name={view.iconName} color=\"white\" size={30} />\n      {view.badgeCount > 0 && (\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            backgroundColor: \"red\",\n            borderRadius: 10,\n            width: 20,\n            height: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text style={{ color: \"white\", fontWeight: \"bold\", fontSize: 10 }}>\n            {view.badgeCount}\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n});\n\nexport default MapIcon;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport MapIcon from \"./MapIcon\";\nimport { animateToCity, objects } from \"./MapUtil\";\nconst BottomTabs = ({\n  view,\n  setSelected,\n  navigation,\n  setView,\n  dragAndDropMode,\n  setDragAndDropMode,\n  level,\n  chatBadgeCount,\n  territoriesBadgeCount,\n  crimesBadgeCount,\n  gameBadgeCount,\n  getText,\n  map,\n  city,\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n  const dispatch = useDispatch();\n\n  const openGameActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = objects.map((o) => getText(o.type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          const type = objects[buttonIndex].type;\n          const to = objects[buttonIndex].to;\n          if (to) {\n            navigation.resetTo(to);\n          }\n          setSelected(type);\n          setView(\"game\");\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={{\n        zIndex: 2,\n        position: \"absolute\",\n        flexDirection: \"row\",\n        left: 0,\n        right: 0,\n        justifyContent: \"space-around\",\n        bottom: 0,\n      }}\n    >\n      {[\n        {\n          view: \"game\",\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"factory\",\n          isActive: view === \"game\",\n          onLongPress: Platform.OS === \"web\" ? undefined : openGameActionSheet,\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"game\");\n            animateToCity({ map, dispatch, city });\n          },\n          badgeCount: gameBadgeCount,\n        },\n        {\n          view: \"crimes\",\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"pistol\",\n          isActive: view === \"crimes\",\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"crimes\");\n            animateToCity({ map, dispatch, city });\n          },\n          badgeCount: crimesBadgeCount,\n        },\n        {\n          view: \"territories\",\n          icon: Icon.Ionicons,\n          iconName: \"md-grid\",\n          isActive: view === \"territories\",\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"territories\");\n            animateToCity({ map, dispatch, city });\n          },\n          badgeCount: territoriesBadgeCount,\n        },\n\n        {\n          view: \"stats\",\n          icon: Icon.Entypo,\n          iconName: \"bar-graph\",\n          isActive: view === \"stats\",\n          onPress: () => {\n            if (view === \"stats\") {\n              navigation.popToTop();\n              setView(\"game\");\n            } else {\n              setSelected(null);\n              setView(\"stats\");\n              navigation.resetTo(\"Members\");\n            }\n          },\n        },\n\n        {\n          view: \"chat\",\n          icon: Icon.Ionicons,\n          iconName: \"ios-chatbubbles\",\n          isActive: view === \"chat\",\n          onPress: () => {\n            if (view === \"chat\") {\n              setView(\"game\");\n              navigation.popToTop();\n            } else {\n              setSelected(null);\n              setView(\"chat\");\n              navigation.resetTo(\"Channels\");\n            }\n          },\n          badgeCount: chatBadgeCount,\n        },\n\n        {\n          view: \"more\",\n          icon: Icon.Entypo,\n          iconName: \"dots-three-horizontal\",\n          isActive: view === \"more\",\n          onPress: () => {\n            if (view === \"more\") {\n              setView(\"game\");\n              navigation.popToTop();\n            } else {\n              setSelected(null);\n              setView(\"more\");\n              navigation.resetTo(\"Settings\");\n            }\n          },\n        },\n\n        level >= 5 && {\n          icon: Icon.Feather,\n          iconName: \"move\",\n          isActive: dragAndDropMode,\n          onPress: () => {\n            setSelected(null);\n            setView(\"game\");\n            setDragAndDropMode(!dragAndDropMode);\n          },\n        },\n      ]\n        .filter((x) => !!x)\n        .map((v, index) => (\n          <MapIcon key={`icon${index}`} view={v} />\n        ))}\n    </View>\n  );\n};\n\nexport default BottomTabs;\n","import * as Icon from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport CountDown from \"react-native-countdown-component\";\nimport Hoverable from \"../components/Hoverable\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, InactiveScreens, lighterHex, post } from \"../Util\";\nimport { getObjectMeta, getZoom, objects } from \"./MapUtil\";\n\nexport const isHappyHour = () => {\n  const isSunday = moment().day() === 0; //sunday\n  const is7pm = moment().hour() === 19; //19pm\n  const isHappyHourReleased = moment().isAfter(\n    moment(\"01/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17)\n  );\n  return isHappyHourReleased && (isSunday || is7pm);\n};\n\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const robberySeconds = Math.ceil(\n    (me?.robberyAt + me?.robberySeconds * 1000 - Date.now()) / 1000\n  );\n\n  const ocSeconds = Math.ceil((me?.ocAt + 3600000 - Date.now()) / 1000);\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCrime\"),\n        label: isHappyHour() ? \"Happy Hour\" : undefined,\n      },\n\n      content: [\n        {\n          view: \"crimes\",\n          iconType: \"FontAwesome\",\n          icon: \"car\",\n          text: getText(\"menuStealCar\"),\n          to: \"StealCar\",\n          component:\n            stealcarSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={stealcarSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuCrimes\"),\n          to: \"Crimes\",\n          view: \"crimes\",\n          component:\n            crimeSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={crimeSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"tree\",\n          text: getText(\"menuWiet\"),\n          to: \"Wiet\",\n          component:\n            wietSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={wietSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"MaterialIcons\",\n          icon: \"people\",\n          text: getText(\"menuJunkies\"),\n          to: \"Junkies\",\n          component:\n            junkiesSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={junkiesSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"FontAwesome\",\n          icon: \"female\",\n          text: getText(\"menuProstitutes\"),\n          to: \"Hoeren\",\n          component:\n            hoerenSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={hoerenSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            moment().isBefore(InactiveScreens.WORK_RELEASE_DATE) &&\n            me?.level < 2,\n          isNew: moment().isBefore(\n            moment(InactiveScreens.WORK_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"tool\",\n          text: getText(\"menuWork\"),\n          to: \"Work\",\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_KILL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_KILL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuKill\"),\n          to: \"Kill\",\n          component:\n            attackSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={attackSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          view: \"crimes\",\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_ROB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuRob\"),\n          to: \"Rob\",\n          component:\n            robSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            (moment().isBefore(InactiveScreens.ROBBERY_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROBBERY,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.ROBBERY_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_ROBBERY +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuRobbery\"),\n          to: \"Robbery\",\n          component:\n            robberySeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robberySeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_STREETRACE,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_STREETRACE +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"car-crash\",\n          text: getText(\"menuStreetrace\"),\n          to: \"Streetrace\",\n        },\n\n        me?.gangId && {\n          view: \"crimes\",\n          inactive:\n            me?.level < 2 && moment().isBefore(InactiveScreens.OC_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.OC_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuOC\"),\n          to: \"OC\",\n          component:\n            ocSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={ocSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerBuildings\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome5\",\n          icon: \"home\",\n          text: getText(\"menuHome\"),\n          buildingType: \"house\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"home-analytics\",\n          text: getText(\"menuHeadquarter\"),\n          buildingType: \"headquarter\",\n        },\n\n        {\n          iconType: \"FontAwesome5\",\n          icon: \"beer\",\n          text: getText(\"menuSalvationArmy\"),\n          buildingType: \"junkies\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"heart\",\n          text: getText(\"menuSexShop\"),\n          buildingType: \"rld\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"shop\",\n          text: getText(\"menuCoffeeShop\"),\n          buildingType: \"landlord\",\n        },\n\n        {\n          inactive:\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuBulletfactory\"),\n          buildingType: \"bulletFactory\",\n        },\n\n        {\n          view: \"game\",\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_AIRPORT,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_AIRPORT +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"plane\",\n          text: getText(\"menuAirport\"),\n          buildingType: \"airport\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuBank\"),\n          buildingType: \"bank\",\n          to: \"Bank\",\n        },\n\n        {\n          view: \"game\",\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_CASINO,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_CASINO +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome5\",\n          icon: \"dice\",\n          text: getText(\"menuCasino\"),\n          buildingType: \"casino\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-car\",\n          text: getText(\"menuGarage\"),\n          buildingType: \"garage\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"stepforward\",\n          text: getText(\"menuGym\"),\n          buildingType: \"gym\",\n          component:\n            gymSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={gymSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_HOSPITAL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_HOSPITAL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"hospital\",\n          text: getText(\"menuHospital\"),\n          buildingType: \"hospital\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bars\",\n          text: getText(\"menuJail2\"),\n          buildingType: \"jail\",\n          badgeCount: me?.jail,\n        },\n\n        {\n          view: \"game\",\n          inactive:\n            ((!me?.id || me.level < 1) &&\n              moment().isBefore(InactiveScreens.MARKET_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_MARKET,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.MARKET_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_MARKET +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuMarket\"),\n          buildingType: \"market\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"Entypo\",\n          icon: \"home\",\n          text: getText(\"homeShop\"),\n          buildingType: \"estateAgent\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuWeaponShop\"),\n          buildingType: \"weaponShop\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"Entypo\",\n          icon: \"line-graph\",\n          inactive:\n            me?.level < 2 &&\n            InactiveScreens.STOCK_MARKET_RELEASE_DATE.isBefore(moment()),\n          text: getText(\"menuStockExchange\"),\n          buildingType: \"stockExchange\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n  ].filter((x) => !!x);\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level >= 5\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuReports\"),\n            to: \"Reports\",\n          },\n        ]\n      : [];\n\n  const betaTester = me?.level >= 2 ? [] : [];\n  const admin = me?.level >= 10 ? [] : [];\n\n  return (\n    me?.level > 1 && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAdminPanel\"),\n      },\n      content: [...betaTester, ...gameMod, ...admin],\n    }\n  );\n};\n\nexport const rightMenu = (me, theme, areas, channels, device) => {\n  const getText = getTextFunction(me?.locale);\n\n  const allAreasMenus = areas.map((area, index) => {\n    return {\n      image: area.user?.thumbnail,\n      iconType: \"Feather\",\n      icon: \"map-pin\",\n      text: area.name,\n      goToArea: index,\n    };\n  });\n\n  const last10ChannelsMenus = channels.slice(0, 10).map((item) => {\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.name\n      : \"(System)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          ?.thumbnail\n      : null;\n\n    return {\n      image: null,\n      text: channelTitle,\n      image: channelThumbnail,\n      iconType: \"Ionicons\",\n      view: \"chat\",\n      icon: \"ios-person\",\n      badgeCount: item.unread,\n      to: \"Channel\",\n      params: { subid: item.id, id: item.channel.id },\n      onPress: () => {\n        post(\"setRead\", { loginToken: device.loginToken, id: item.id });\n      },\n    };\n  });\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerStats\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n          text: getText(\"menuMembers\", me?.online),\n          to: \"Members\",\n          view: \"stats\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStats\"),\n          to: \"Stats\",\n\n          view: \"stats\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n          text: getText(\"menuGangs\"),\n          to: \"Gangs\",\n\n          view: \"stats\",\n        },\n\n        {\n          text: getText(\"prizes\"),\n          iconType: \"FontAwesome5\",\n          icon: \"award\",\n          to: \"Prizes\",\n\n          view: \"stats\",\n          inactive:\n            me?.level < 2 &&\n            moment().isBefore(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.PRIZES_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n        },\n\n        {\n          text: getText(\"menuProperties\"),\n          iconType: \"FontAwesome5\",\n          icon: \"house-damage\",\n          to: \"Properties\",\n\n          view: \"stats\",\n        },\n      ],\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerChat\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"everyone\"),\n          to: \"Chat\",\n          view: \"chat\",\n        },\n\n        ...last10ChannelsMenus,\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"allChats\"),\n          to: \"Channels\",\n          view: \"chat\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAreas\"),\n      },\n      content: allAreasMenus,\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerMore\"),\n      },\n      content: [\n        {\n          iconType: \"SimpleLineIcons\",\n          icon: \"settings\",\n          view: \"more\",\n          text: getText(\"menuSettings\"),\n          to: \"Settings\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"info-with-circle\",\n\n          view: \"more\",\n          text: getText(\"menuInfo\"),\n          to: \"Info\",\n        },\n\n        {\n          view: \"more\",\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuPolice\"),\n          to: \"Police\",\n        },\n\n        {\n          view: \"more\",\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuVIP\"),\n          to: \"VIP\",\n        },\n\n        {\n          view: \"more\",\n          iconType: \"FontAwesome\",\n          icon: \"wechat\",\n          text: getText(\"menuForum\"),\n          to: \"Forum\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    adminMenu(me),\n  ].filter((x) => !!x);\n};\n\nexport const renderMenu = ({\n  item,\n  index,\n  navigation,\n  theme,\n  dispatch,\n  me,\n  cityAreas,\n  setSelectedAreaIndex,\n  map,\n  setSelected,\n  setZoom,\n  city,\n  setView,\n  areas,\n}) => {\n  const TheIcon = Icon[item.iconType];\n\n  const isCurrent = navigation.state.routeName === item.to;\n  const TouchOrView = item.isHeader ? View : TouchableOpacity;\n  const getText = getTextFunction(me?.locale);\n\n  let specialColor = null;\n  const gangMembers = me?.gangMembers; //should be an {name,id}[] of users in your gang\n\n  if (item.buildingType !== undefined) {\n    const owner = city[`${item.buildingType}Owner`];\n    const isYours = owner === me?.name;\n    const isGang = gangMembers?.map((x) => x.name).includes(owner);\n    const hasDamage = city[`${item.buildingType}Damage`] > 0;\n    const hasProfit = city[`${item.buildingType}Profit`] > 0;\n\n    const incomeJunkies =\n      item.buildingType === \"junkies\" &&\n      Math.floor((Date.now() - me?.junkiesIncomeAt) / 3600000) > 0;\n    const incomeLandlord =\n      item.buildingType === \"landlord\" &&\n      Math.floor((Date.now() - me?.landlordIncomeAt) / 3600000) > 0;\n    const incomeRLD =\n      item.buildingType === \"rld\" &&\n      Math.floor((Date.now() - me?.rldIncomeAt) / 3600000) > 0;\n\n    const incomeToGet = incomeJunkies || incomeRLD || incomeLandlord;\n    specialColor =\n      isYours && hasDamage\n        ? \"darkred\"\n        : (isYours && hasProfit) || incomeToGet\n        ? \"yellow\"\n        : isYours\n        ? \"blue\"\n        : !owner &&\n          item.buildingType !== \"house\" &&\n          item.buildingType !== \"headquarter\"\n        ? \"lightblue\"\n        : hasDamage\n        ? \"red\"\n        : isGang\n        ? \"green\"\n        : null;\n  } else if (item.goToArea !== undefined) {\n    const area = cityAreas.areas[item.goToArea];\n    const connectedArea = areas?.find((x) => x.code === area.code);\n\n    const isYours = connectedArea?.userId === me?.id;\n    const isGang =\n      connectedArea?.gangId === me?.gangId ||\n      connectedArea?.user?.gangId === me?.gangId;\n    const hasDamage = connectedArea?.damage > 0;\n    const hasProfit = connectedArea?.profit > 0;\n\n    specialColor =\n      isYours && hasDamage\n        ? \"darkred\"\n        : isYours && hasProfit\n        ? \"yellow\"\n        : isYours\n        ? \"blue\"\n        : !connectedArea?.userId\n        ? \"lightblue\"\n        : hasDamage\n        ? \"red\"\n        : isGang\n        ? \"green\"\n        : null;\n  }\n  return (\n    <TouchOrView\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.onPress) {\n          item.onPress();\n        }\n        if (item.to) {\n          navigation.resetTo(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        } else {\n          navigation.popToTop();\n        }\n\n        if (item.view) {\n          setView(item.view);\n        }\n        if (item.buildingType) {\n          const objectIndex = objects.findIndex(\n            (x) => x.type === item.buildingType\n          );\n          const object = objects[objectIndex];\n          const {\n            latitude,\n            longitude,\n            zoom,\n            deltaLatitude,\n            deltaLongitude,\n          } = getObjectMeta({\n            city,\n            cityAreas,\n            index: objectIndex,\n            object,\n          });\n\n          if (latitude && longitude) {\n            if (Platform.OS === \"web\") {\n              map.panTo({\n                lat: latitude,\n                lng: longitude,\n              });\n\n              setZoom(zoom - 2);\n            } else {\n              map.animateToRegion({\n                latitude: latitude,\n                longitude: longitude,\n                latitudeDelta: deltaLatitude,\n                longitudeDelta: deltaLongitude,\n              });\n            }\n          }\n\n          setView(\"game\");\n          setSelected(item.buildingType);\n        }\n\n        if (item.goToArea !== undefined) {\n          const area = cityAreas.areas[item.goToArea];\n          // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n          if (Platform.OS === \"web\") {\n            map.panTo({\n              lat: area.centerLatitude,\n              lng: area.centerLongitude,\n            });\n            const biggestDelta =\n              area.latitudeDelta > area.longitudeDelta\n                ? area.latitudeDelta\n                : area.longitudeDelta;\n\n            setZoom(getZoom(biggestDelta));\n          } else {\n            map.animateToRegion({\n              latitude: area.centerLatitude,\n              longitude: area.centerLongitude,\n              latitudeDelta: area.latitudeDelta,\n              longitudeDelta: area.longitudeDelta,\n            });\n          }\n\n          setView(\"territories\");\n          setSelected(\"area\");\n          setSelectedAreaIndex(item.goToArea);\n        }\n      }}\n    >\n      <Hoverable onHoverIn={null} onHoverOut={null}>\n        {(isHovered) => (\n          <View\n            style={{\n              borderBottomWidth: 0,\n              padding: 3,\n              backgroundColor: item.isHeader\n                ? theme.primary\n                : `${theme.primary}CC`,\n              paddingLeft: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                minHeight: 25,\n                backgroundColor:\n                  isHovered || isCurrent\n                    ? lighterHex(theme.primary)\n                    : undefined,\n                borderRadius: isHovered || isCurrent ? 15 : undefined,\n              }}\n            >\n              <View style={{ width: 30, alignItems: \"center\" }}>\n                {item.image ? (\n                  <Image\n                    source={{ uri: Constants.SERVER_ADDR + item.image }}\n                    style={{\n                      width: 40,\n                      height: 40,\n                      borderRadius: 20,\n                      borderWidth: specialColor ? 2 : 0,\n                      borderColor: specialColor ? specialColor : undefined,\n                    }}\n                  />\n                ) : TheIcon ? (\n                  <TheIcon\n                    name={item.icon}\n                    size={20}\n                    color={specialColor ? specialColor : theme.secondaryText}\n                  />\n                ) : null}\n              </View>\n              <Text\n                numberOfLines={1}\n                style={{\n                  marginLeft: 15,\n                  color: theme.primaryText,\n                  fontWeight: item.isHeader ? \"bold\" : undefined,\n                }}\n              >\n                {item.text}\n              </Text>\n              {item.isNew && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{getText(\"new\")}</T>\n                </View>\n              )}\n\n              {item.label && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{item.label}</T>\n                </View>\n              )}\n\n              {item.badgeCount > 0 ? (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    borderRadius: 10,\n                    width: 20,\n                    height: 20,\n                    backgroundColor: \"red\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", fontSize: 10, fontWeight: \"bold\" }}\n                  >\n                    {item.badgeCount}\n                  </Text>\n                </View>\n              ) : null}\n              {item.component}\n            </View>\n          </View>\n        )}\n      </Hoverable>\n    </TouchOrView>\n  );\n};\n\nconst Menus = ({\n  children,\n  device,\n  me,\n  navigation,\n  dispatch,\n  cityAreas,\n  setSelectedAreaIndex,\n  map,\n  setSelected,\n  setZoom,\n  setView,\n  city,\n  areas,\n  channels,\n}) => {\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  const window = Dimensions.get(\"window\");\n  const isSmallDevice = window.width < 800;\n\n  const renderLeftMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu({\n              item: section.header,\n              index,\n              navigation,\n              theme: device.theme,\n              dispatch,\n              me,\n              cityAreas,\n              setSelectedAreaIndex,\n              map,\n              setSelected,\n              setZoom,\n              city,\n              setView,\n              areas,\n            })\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu({\n                item,\n                index,\n                navigation,\n                theme: device.theme,\n                dispatch,\n                me,\n                cityAreas,\n                setSelectedAreaIndex,\n                map,\n                setSelected,\n                setZoom,\n                city,\n                setView,\n                areas,\n              })\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const renderRightMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme, areas, channels, device)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu({\n              item: section.header,\n              index,\n              navigation,\n              theme: device.theme,\n              dispatch,\n              me,\n              cityAreas,\n              setSelectedAreaIndex,\n              map,\n              setSelected,\n              setZoom,\n              city,\n              areas,\n              setView,\n            })\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu({\n                item,\n                index,\n                navigation,\n                theme: device.theme,\n                dispatch,\n                me,\n                cityAreas,\n                setSelectedAreaIndex,\n                map,\n                setSelected,\n                setZoom,\n                city,\n                setView,\n                areas,\n              })\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  return isSmallDevice ? (\n    children\n  ) : (\n    <View\n      style={{\n        flexDirection: \"row\",\n        height: \"100%\",\n        width: \"100%\",\n        position: \"absolute\",\n      }}\n      pointerEvents=\"box-none\"\n    >\n      {device.menuShown && renderLeftMenu()}\n      <View style={{ flex: 1 }} pointerEvents=\"box-none\">\n        {children}\n      </View>\n      {device.menuShown && renderRightMenu()}\n    </View>\n  );\n};\n\nexport default Menus;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Keyboard, Platform, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst Modal = ({ view, navigation, setView, children, headerHeight }) => {\n  const [keyboardHeight, setKeyboardHeight] = useState(null);\n  useEffect(() => {\n    let keyboardWillShowListener;\n    let keyboardWillHideListener;\n    let keyboardDidShowListener;\n    let keyboardDidHideListener;\n    if (Platform.OS === \"ios\") {\n      keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        keyboardWillShow\n      );\n      keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        keyboardWillHide\n      );\n    } else {\n      keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        keyboardWillShow\n      );\n      keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        keyboardWillHide\n      );\n    }\n\n    return () => {\n      if (Platform.OS === \"ios\") {\n        keyboardWillShowListener.remove();\n        keyboardWillHideListener.remove();\n      } else {\n        keyboardDidShowListener.remove();\n        keyboardDidHideListener.remove();\n      }\n    };\n  });\n\n  const keyboardWillShow = (e) => {\n    const toValue = e.endCoordinates.height;\n    setKeyboardHeight(toValue);\n  };\n\n  const keyboardWillHide = (e) => {\n    setKeyboardHeight(null);\n  };\n\n  const keydown = useCallback((event) => {\n    if (event.keyCode === 27) {\n      //esc\n      //Do whatever when esc is pressed\n      close();\n    }\n  }, []);\n\n  const close = () => {\n    if (view !== \"game\" && view !== \"territories\" && view !== \"crimes\") {\n      setView(\"game\");\n    }\n\n    navigation.popToTop();\n  };\n  useEffect(() => {\n    if (Platform.OS === \"web\") {\n      document.addEventListener(\"keydown\", keydown, false);\n\n      return () => {\n        document.removeEventListener(\"keydown\", keydown, false);\n      };\n    }\n  }, []);\n\n  const theme = useSelector((state) => state.device.theme);\n\n  const defaultBottom = view === \"chat\" || view === \"crimes\" ? 70 : 140;\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: headerHeight + 20,\n        bottom: keyboardHeight ? keyboardHeight : defaultBottom,\n        left: 5,\n        right: 5,\n        backgroundColor: `${theme.primary}CC`,\n        borderRadius: 10,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {navigation.state.history.length > 1 ? (\n          <TouchableOpacity\n            hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n            onPress={() => {\n              navigation.goBack();\n            }}\n          >\n            <Icon.AntDesign\n              name=\"arrowleft\"\n              size={32}\n              color={theme.secondaryText}\n            />\n          </TouchableOpacity>\n        ) : (\n          <View />\n        )}\n\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={close}\n        >\n          <Icon.AntDesign name=\"close\" size={32} color={theme.secondaryText} />\n        </TouchableOpacity>\n      </View>\n      {children}\n    </View>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  ScrollView,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { default as style, default as styles } from \"../Style\";\nimport { getRank, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst Accomplice = ({\n  navigation,\n  screenProps: {\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [accomplice1, setAccomplice1] = useState(me?.accomplice);\n  const [accomplice2, setAccomplice2] = useState(me?.accomplice2);\n  const [accomplice3, setAccomplice3] = useState(me?.accomplice3);\n  const [accomplice4, setAccomplice4] = useState(me?.accomplice4);\n  const [response, setResponse] = useState(null);\n\n  const submit = (acc) => {\n    //how to set accomplice acc from params to the right body?\n\n    fetch(`${Constants.SERVER_ADDR}/setAccomplice`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        accomplice: accomplice1,\n        accomplice2,\n        accomplice3,\n        accomplice4,\n        loginToken: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response }) => {\n        setResponse(response);\n        reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    const accomplice = navigation.state.params?.accomplice;\n    if (accomplice) {\n      submit(accomplice);\n    }\n  }, []);\n\n  const rank = getRank(me?.rank, \"number\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n      }}\n    >\n      <View style={{ maxWidth: 600, margin: 20 }}>\n        <T>{getText(\"accompliceInfo\")}</T>\n\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"accompliceLinkText\")}</T>\n          <TextInput\n            value={url}\n            onFocus={() => {\n              Clipboard.setString(url);\n              setResponse(getText(\"copiedToClipboard\"));\n            }}\n            style={style(theme).textInput}\n          />\n        </View>\n\n        <T bold>{getText(\"yourAccomplicesHeader\")}</T>\n        {me?.accomplices.length > 0 ? (\n          me?.accomplices.map((accomplice) => {\n            return keyValue(accomplice.name, getRank(accomplice.rank, \"both\"));\n          })\n        ) : (\n          <T>{getText(\"accomplicesNone\")}</T>\n        )}\n\n        <T bold style={{ marginTop: 15 }}>\n          {getText(\"accompliceWhoseYouWantToBe\")}\n        </T>\n        <T>{response}</T>\n\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={styles(theme).textInput}\n          value={accomplice1}\n          onChangeText={setAccomplice1}\n          placeholder={getText(\"accomplice\", 1)}\n        />\n\n        {rank >= 11 ? (\n          <TextInput\n            placeholderTextColor={theme.secondaryTextSoft}\n            style={styles(theme).textInput}\n            value={accomplice2}\n            onChangeText={setAccomplice2}\n            placeholder={getText(\"accomplice\", 2)}\n          />\n        ) : null}\n\n        {rank >= 16 ? (\n          <>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={styles(theme).textInput}\n              value={accomplice3}\n              onChangeText={setAccomplice3}\n              placeholder={getText(\"accomplice\", 3)}\n            />\n\n            <TextInput\n              style={styles(theme).textInput}\n              value={accomplice4}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={setAccomplice4}\n              placeholder={getText(\"accomplice\", 4)}\n            />\n          </>\n        ) : null}\n\n        <Button title={getText(\"save\")} onPress={submit} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Accomplice;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <View style={{ marginTop: 20 }} />\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(this.props.type || \"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    const keyValue = (key, value) => {\n      return (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <T>{key}</T>\n          <T>{value}</T>\n        </View>\n      );\n    };\n    return (\n      <ScrollView>\n        {keyValue(getText(\"cash\"), `€${me?.cash}`)}\n        {keyValue(getText(\"bank\"), `€${me?.bank}`)}\n        {keyValue(getText(\"swissBank\"), `€${me?.swissBank}`)}\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst AirplaneShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"airplane\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default AirplaneShop;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Airport extends Component {\n  state = {\n    response: null,\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        style={{ borderRadius: 10, marginTop: 20 }}\n        title={getText(\"fly\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/airport`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: device.loginToken,\n              to,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      \"Paris\",\n      \"Barcelona\",\n      \"London\",\n      \"Amsterdam\",\n      \"Berlin\",\n      \"Porto\",\n      \"Rome\",\n      \"Dublin\",\n      \"Madrid\",\n      \"Brussels\",\n      \"Bali\",\n      \"New York\",\n      \"San Fransisco\",\n    ].sort();\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ to: options[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n    return (\n      <View>\n        <Button\n          title={this.state.to ? this.state.to : getText(\"chooseCity\")}\n          onPress={this.openActionSheet}\n        />\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Airport);\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab, index) => {\n        return (\n          <TouchableOpacity\n            key={`tab${index}`}\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Image, ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst Bomb = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [bombs, setBombs] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [type, setType] = useState(navigation.state.params?.type || \"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const airplanes = [\n    \"\",\n    \"Fokker\",\n    \"Fleet\",\n    \"Havilland\",\n    \"Cessna\",\n    \"Douglas\",\n    \"Lear Jet\",\n    \"Raket\",\n  ];\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"bomb\", {\n      loginToken: device.loginToken,\n      bombs,\n      type,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  const selectType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = Object.keys(typeStrings).map(\n      (type) =>\n        `${typeStrings[type]} (${city[`${type}Damage`]}% ${getText(\n          \"damage\"\n        )}, €${numberFormat(city[`${type}Profit`])} ${getText(\"profit\")})`\n    );\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex !== options.length - 1) {\n          setType(Object.keys(typeStrings)[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {\n        <>\n          <Image source={require(\"../../assets/bombarderen.jpg\")} />\n          <Text style={{ color: theme.primaryText }}>\n            {me?.airplane === 0\n              ? getText(\"bombNoAirplane\")\n              : getText(\n                  \"bombAirplaneText\",\n                  airplanes[me?.airplane],\n                  me?.airplane * 5\n                )}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <T style={{ marginTop: 15 }}>{getText(\"bombs\")}</T>\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bombs}\n            onChangeText={(x) => setBombs(x)}\n            style={style(theme).textInput}\n          />\n\n          <T style={{ marginVertical: 15 }}>{getText(\"property\")}</T>\n          <Button\n            onPress={selectType}\n            title={type ? typeStrings[type] : getText(\"whichProperty\")}\n          />\n\n          {type ? (\n            <T>\n              {getText(\n                \"bombInfo\",\n                typeStrings[type],\n                city[`${type}Damage`],\n                numberFormat(city[`${type}Profit`]),\n                city[`${type}Owner`] || `(Niemand)`\n              )}\n            </T>\n          ) : null}\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button\n            style={{ marginTop: 15 }}\n            title={getText(\"bombAction\")}\n            onPress={submit}\n          />\n        </>\n      }\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bomb;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Airport from \"./Airport\";\nimport Bomb from \"./Bomb\";\nconst AllAirport = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"airport\",\n      title: getText(\"menuAirport\"),\n      component: Airport,\n    },\n\n    {\n      key: \"bomb\",\n      title: getText(\"menuBomb\"),\n      component: Bomb,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllAirport;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { withAlert } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post, withCaptcha } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter() {\n    const { alert } = this.props;\n    const { me, device, reloadMe, reloadCities } = this.props.screenProps;\n\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const postGetIncome = async (type, captcha) => {\n      const { response } = await post(\"income\", {\n        token: device.loginToken,\n        captcha,\n        type,\n      });\n\n      reloadMe(device.loginToken);\n      reloadCities();\n      alert(response, null, null, { key: \"incomeResponse\" });\n    };\n    const incomeAction = (type) =>\n      withCaptcha(device.loginToken, me?.needCaptcha, getText, alert, (code) =>\n        postGetIncome(type, code)\n      );\n\n    return (\n      <View style={{ flexDirection: \"column\" }}>\n        <Button\n          title={\"Haal Sex Shop inkomen op\"}\n          onPress={() => incomeAction(\"rld\")}\n          style={{ margin: 10 }}\n        />\n        <Button\n          title={\"Verkoop je wiet aan de coffeeshop\"}\n          onPress={() => incomeAction(\"landlord\")}\n          style={{ margin: 10 }}\n        />\n        <Button\n          title={\"Haal Junkies inkomen op (leger des heils)\"}\n          onPress={() => incomeAction(\"junkies\")}\n          style={{ margin: 10 }}\n        />\n      </View>\n    );\n  }\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default withAlert(Income);\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bank from \"./Bank\";\nimport Donate from \"./Donate\";\nimport Income from \"./Income\";\nimport SwissBank from \"./SwissBank\";\nconst AllBanks = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const [tab, setTab] = useState(\"bank\");\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"menuBank\"),\n            isActive: tab === \"bank\",\n            onPress: () => setTab(\"bank\"),\n          },\n          {\n            title: getText(\"menuSwissBank\"),\n            isActive: tab === \"swissBank\",\n            onPress: () => setTab(\"swissBank\"),\n          },\n\n          {\n            title: getText(\"menuDonate\"),\n            isActive: tab === \"donate\",\n            onPress: () => setTab(\"donate\"),\n          },\n          {\n            title: getText(\"menuIncome\"),\n            isActive: tab === \"income\",\n            onPress: () => setTab(\"income\"),\n          },\n        ]}\n      />\n\n      {tab === \"bank\" && <Bank {...props} />}\n      {tab === \"swissBank\" && <SwissBank {...props} />}\n      {tab === \"donate\" && <Donate {...props} />}\n      {tab === \"income\" && <Income {...props} />}\n    </View>\n  );\n};\nexport default AllBanks;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  LayoutAnimation,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { lighterHex } from \"../Util\";\nimport T from \"./T\";\n\nUIManager.setLayoutAnimationEnabledExperimental &&\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n\nconst storeData = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (e) {\n    // saving error\n  }\n};\n\nconst getData = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    if (value !== null) {\n      return value;\n      // value previously stored\n    } else {\n      return undefined;\n    }\n  } catch (e) {\n    // error reading value\n    return undefined;\n  }\n};\n\nconst Content = ({ id, title, children, contentWidth }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const [expanded, setExpanded] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const isExpanded = await getData(`@content=${id}`);\n      if (isExpanded !== undefined) {\n        setExpanded(isExpanded === \"true\");\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <View\n      style={{\n        backgroundColor: lighterHex(theme.primary),\n        margin: 20,\n        padding: 20,\n        borderRadius: 20,\n        width:\n          typeof contentWidth === \"string\"\n            ? contentWidth\n            : contentWidth + 20 * 4,\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          LayoutAnimation.linear();\n          setExpanded(!expanded);\n          storeData(`@content=${id}`, String(!expanded));\n        }}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <T bold>{title}</T>\n        <AntDesign\n          name={expanded ? \"caretup\" : \"caretdown\"}\n          color={theme.primaryText}\n        />\n      </TouchableOpacity>\n\n      <View\n        onLayout={(event) => {\n          var { x, y, width, height } = event.nativeEvent.layout;\n          // setHeight(height);\n          // setWidth(width);\n        }}\n      >\n        {expanded && !loading && children}\n      </View>\n    </View>\n  );\n};\n\nexport default Content;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Platform,\n  ScrollView,\n  View,\n} from \"react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst SHIFT_FACTOR = 0.45;\nconst GangBulletFactory = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [shifts, setShifts] = useState({});\n  const { morning, day, evening, night, underachievers } = shifts;\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const alertAlert = React.useContext(AlertContext);\n\n  /*\n  userDoShift,\n  gangBuyBulletFactory,\n  shifts,*/\n\n  const getShifts = async () => {\n    setLoading(true);\n\n    const shifts = await get(`shifts?token=${device.loginToken}`);\n    setLoading(false);\n    setShifts(shifts);\n  };\n\n  const postUserDoShift = async () => {\n    setLoading(true);\n    const { response } = await post(\"userDoShift\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    getShifts();\n  };\n\n  const postGangBuyBulletFactory = async (type) => {\n    setLoading(true);\n    const { response } = await post(\"gangBuyBulletFactory\", {\n      token: device.loginToken,\n      type,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken); //reload gang\n  };\n\n  doOnce(getShifts);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const bulletFactories = [\n    {\n      type: \"small\",\n      generates: 10000,\n      initialCost: 10000000,\n      dailyCost: 1000000,\n    },\n    {\n      type: \"medium\",\n      generates: 20000,\n      initialCost: 100000000,\n      dailyCost: 10000000,\n    },\n    {\n      type: \"big\",\n      generates: 40000,\n      initialCost: 1000000000,\n      dailyCost: 100000000,\n    },\n    {\n      type: \"mega\",\n      generates: 60000,\n      initialCost: 10000000000,\n      dailyCost: 1000000000,\n    },\n  ];\n\n  const renderShiftUser = (user) => {\n    return <User size={40} navigation={navigation} user={user} />;\n  };\n\n  const renderUnderAchieverUserRow = (user) => {\n    return (\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <User size={40} navigation={navigation} user={user} />\n        <T>\n          {user.totalShiftsDone} {getText(\"shiftsDone\")}\n        </T>\n      </View>\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        <Content\n          title={getText(\"workForBulletFactoryTitle\")}\n          contentWidth={\"90%\"}\n          id=\"userDoShift\"\n        >\n          <Button\n            onPress={postUserDoShift}\n            title={getText(\"workForBulletFactory\")}\n          />\n        </Content>\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"shiftSchedule\")}\n              contentWidth={\"90%\"}\n              id=\"shifts\"\n            >\n              <T>\n                {getText(\n                  \"shiftToDo\",\n                  me?.gang?.members,\n                  Math.floor(me?.gang?.members * SHIFT_FACTOR)\n                )}\n              </T>\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"morningShift\")}\n              </T>\n              {morning?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"dayShift\")}\n              </T>\n              {day?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"eveningShift\")}\n              </T>\n              {evening?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"nightShift\")}\n              </T>\n              {night?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"underachievers\")}\n              </T>\n              {underachievers?.map(renderUnderAchieverUserRow)}\n            </Content>\n\n            {me?.gangLevel === GANG_LEVEL_BANK ||\n              (me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Content\n                  title={getText(\"buyBulletFactory\")}\n                  contentWidth={\"90%\"}\n                  id=\"buyBulletFactory\"\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      marginTop: 20,\n                    }}\n                  >\n                    {bulletFactories.map((bf) => {\n                      return (\n                        <View style={{ width: 200, marginHorizontal: 10 }}>\n                          <T bold>{getText(`bf${bf.type}`)}</T>\n                          <T>{getText(\"generatesBullets\", bf.generates)}</T>\n                          <T>\n                            {getText(\"initialCost\")}: €\n                            {numberFormat(bf.initialCost)},-\n                          </T>\n                          <T>\n                            {getText(\"dailyCost\")}: €\n                            {numberFormat(bf.dailyCost)}\n                            ,-\n                          </T>\n                          {me?.gang?.bulletFactory === bf.type ? (\n                            <T bold>{getText(\"currentBulletFactory\")}</T>\n                          ) : (\n                            <Button\n                              title={getText(\"buy\")}\n                              onPress={() => postGangBuyBulletFactory(bf.type)}\n                            />\n                          )}\n                        </View>\n                      );\n                    })}\n                  </View>\n                </Content>\n              ))}\n\n            <Content\n              contentWidth={\"90%\"}\n              id=\"gangbulletfacotryinfo\"\n              title={getText(\"info\")}\n            >\n              <Markdown style={{ text: { color: theme.primaryText } }}>\n                {getText(\"gangBulletFactoryInfo\")}\n              </Markdown>\n            </Content>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangBulletFactory;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bulletfactory from \"./Bulletfactory\";\nimport GangBulletFactory from \"./GangBulletFactory\";\nconst AllGarage = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"bulletfactory\",\n      title: getText(\"menuBulletfactory\"),\n      component: Bulletfactory,\n    },\n\n    {\n      key: \"gangBulletfactory\",\n      title: getText(\"menuGangBulletfactory\"),\n      component: GangBulletFactory,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGarage;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  const postGangCreate = async () => {\n    const { response } = await post(\"gangCreate\", {\n      name,\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <TextInput\n        value={name}\n        onChangeText={setName}\n        style={style(theme).textInput}\n        placeholder=\"Name\"\n        placeholderTextColor={theme.secondaryTextSoft}\n      />\n      <Button\n        onPress={postGangCreate}\n        title={getText(\"gangCreateCTA\")}\n        theme={theme}\n      />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ActivityIndicator, ScrollView, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Button from \"../components/Button\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nconst GangMissions = ({ navigation, screenProps: { device, me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const postGangMissionPrestige = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangMissionPrestige\", {\n      token: device.loginToken,\n    });\n    setResponse(response);\n    getGangMissions();\n    setLoading(false);\n  };\n  const postGangStartMission = async (index) => {\n    setLoading(true);\n    const { response } = await post(\"gangStartMission\", {\n      token: device.loginToken,\n      index,\n    });\n    setResponse(response);\n    getGangMissions();\n    setLoading(false);\n  };\n\n  const getGangMissions = async () => {\n    setLoading(true);\n    const result = await get(`gangMissions?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangMissions);\n\n  const isPrestige = result?.reduce?.(\n    (prev, mission) => prev && !!mission.current\n  );\n  console.log(isPrestige);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {loading && <ActivityIndicator />}\n      {response && <T>{response}</T>}\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>{getText(\"missions\")}</H1>\n          </View>\n          {isPrestige && (\n            <Button\n              title={getText(\"youArePrestige\")}\n              onPress={postGangMissionPrestige}\n            />\n          )}\n          {result?.map((mission, index) => {\n            const time =\n              mission.seconds < 120\n                ? `${mission.seconds} ${getText(\"seconds\")}`\n                : mission.seconds < 3600\n                ? `${Math.round(mission.seconds / 60)} ${getText(\"minutes\")}`\n                : `${Math.round(mission.seconds / 3600)} ${getText(\"hours\")}`;\n\n            const startButton = (\n              <Button\n                onPress={() => postGangStartMission(index)}\n                title={getText(\"start\")}\n              />\n            );\n            return (\n              <Grid style={{ height: 50 }}>\n                <Col size={4}>\n                  <T>\n                    {getText(\n                      mission.what + \"Mission\",\n                      mission.amountPerMember * me?.gang?.members\n                    )}{\" \"}\n                    in {time}\n                  </T>\n                </Col>\n                <Col>\n                  {mission.current ? (\n                    mission.current.isEnded ? (\n                      mission.current.isSucceeded ? (\n                        <T>✅</T>\n                      ) : (\n                        <View style={{ flexDirection: \"row\" }}>\n                          <T>⛔️</T>\n                        </View>\n                      )\n                    ) : (\n                      <View style={{ flexDirection: \"row\" }}>\n                        <T>\n                          {mission.current.amountDone}/\n                          {mission.amountPerMember * me?.gang?.members}\n                        </T>\n                      </View>\n                    )\n                  ) : null}\n                </Col>\n\n                <Col style={{ alignItems: \"flex-end\" }}>\n                  {mission.current ? (\n                    mission.current.isEnded ? (\n                      mission.current.isSucceeded ? null : (\n                        <View style={{ flexDirection: \"row\" }}>\n                          {startButton}\n                        </View>\n                      )\n                    ) : (\n                      <CountDown\n                        style={{ marginLeft: 10 }}\n                        until={moment(mission.current.createdAt)\n                          .add(mission.seconds, \"seconds\")\n                          .diff(moment(), \"seconds\")}\n                        digitStyle={{\n                          backgroundColor: device.theme.secondary,\n                        }}\n                        digitTxtStyle={{ color: device.theme.secondaryText }}\n                        onFinish={() => {}}\n                        size={8}\n                        timeToShow={[\"H\", \"M\", \"S\"]}\n                        timeLabels={{ m: null, s: null }}\n                      />\n                    )\n                  ) : (\n                    <View style={{ flexDirection: \"row\" }}>{startButton}</View>\n                  )}\n                </Col>\n              </Grid>\n            );\n          })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangMissions;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangSettings = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [gang, setGang] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [gangName, setGangName] = useState(\"\");\n  const [profile, setProfile] = useState(me?.gang?.profile || \"\");\n  const [message, setMessage] = useState(me?.gang?.message || \"\");\n  const [name, setName] = useState(me?.gang?.name || \"\");\n  const [image, setImage] = useState(me?.gang?.image || \"\");\n  const [isBullets, setIsBullets] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const alertAlert = React.useContext(AlertContext);\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${me?.gang?.name}`);\n    setLoading(false);\n    setGang(gang);\n  };\n\n  const getGangInvites = async () => {\n    setLoading(true);\n    const { requests } = await get(`gangInvites?token=${device.loginToken}`);\n    setLoading(false);\n    setRequests(requests);\n  };\n\n  const postGangAnswerJoin = async (id, accepted) => {\n    setLoading(true);\n    const { response } = await post(\"gangAnswerJoin\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGangInvites();\n  };\n\n  const postGangUpdate = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangUpdate\", {\n      token: device.loginToken,\n      profile,\n      image,\n      message,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangInvite = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangInvite\", {\n      token: device.loginToken,\n      name: username,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangTransaction = async (isToUser) => {\n    setLoading(true);\n    const { response } = await post(\"gangTransaction\", {\n      token: device.loginToken,\n      amount,\n      isToUser,\n      isBullets,\n    });\n    reloadMe(device.loginToken);\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangLeave = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangLeave\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangKick = async (userId) => {\n    setLoading(true);\n    const { response } = await post(\"gangKick\", {\n      token: device.loginToken,\n      userId,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGang();\n  };\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const postGangRemove = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangRemove\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangSetRank = async (userId, rank) => {\n    setLoading(true);\n    const { response } = await post(\"gangSetRank\", {\n      token: device.loginToken,\n      userId,\n      rank,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getGang();\n  };\n\n  doOnce(getGangInvites);\n  doOnce(getGang);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n      }\n    }\n  };\n  const handleChoosePhoto = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"gangProfile\")}\n              contentWidth={\"90%\"}\n              id=\"gangProfile\"\n            >\n              {me?.gang?.message && (\n                <MarkdownView style={{ text: { color: theme.primaryText } }}>\n                  {me?.gang?.message}\n                </MarkdownView>\n              )}\n            </Content>\n\n            <Content\n              title={getText(\"yourStatus\")}\n              contentWidth={250}\n              id=\"settingsYourStatus\"\n            >\n              <T>{getText(\"youAreWhat\", getGangLevel(me?.gangLevel))}</T>\n            </Content>\n\n            {/* Answer join */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"gangJoinRequestsTitle\")}\n                contentWidth={250}\n                id=\"settingsAnswerJoin\"\n              >\n                {requests.length > 0 ? (\n                  requests.map((request) => {\n                    return (\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{request.user?.name}</T>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Button\n                            title={getText(\"accept\")}\n                            onPress={() => postGangAnswerJoin(request.id, true)}\n                          />\n                          <Button\n                            title={getText(\"decline\")}\n                            onPress={() =>\n                              postGangAnswerJoin(request.id, false)\n                            }\n                          />\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{getText(\"noJoinRequests\")}</T>\n                )}\n              </Content>\n            ) : null}\n\n            {/* Invite */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"invitePeople\")}\n                contentWidth={250}\n                id=\"settingsInvite\"\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={username}\n                    onChangeText={setUsername}\n                    placeholder={getText(\"name\")}\n                  />\n                  <Button\n                    title={getText(\"invite\")}\n                    onPress={postGangInvite}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </Content>\n            ) : null}\n\n            {/* Transactions */}\n            {\n              <Content\n                title={getText(\"gangBank\")}\n                contentWidth={250}\n                id=\"settingsTransactions\"\n              >\n                <T>\n                  {getText(\"bankMoney\")}: €{numberFormat(me?.gang?.bank || 0)},-\n                </T>\n                <T>\n                  {getText(\"bullets\")}: {numberFormat(me?.gang?.bullets || 0)}\n                </T>\n                <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={amount}\n                    onChangeText={setAmount}\n                    placeholder={getText(\"amount\")}\n                  />\n\n                  <Button\n                    title={isBullets ? getText(\"bullets\") : getText(\"bank\")}\n                    onPress={() => setIsBullets(!isBullets)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n\n                  <Button\n                    title={getText(\"in\")}\n                    onPress={() => postGangTransaction(false)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                  {me?.gangLevel === GANG_LEVEL_BANK ||\n                  me?.gangLevel === GANG_LEVEL_BOSS ? (\n                    <Button\n                      title={getText(\"out\")}\n                      onPress={() => postGangTransaction(true)}\n                      style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                    />\n                  ) : null}\n                </View>\n              </Content>\n            }\n\n            {/* memberview with kick or change rank, per member */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"members\")}\n                contentWidth=\"90%\"\n                id=\"memberViewSettings\"\n              >\n                {gang?.users?.map((member) => {\n                  return (\n                    <Grid>\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{member.name}</T>\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{getGangLevel(member.gangLevel)}</T>\n                      </Col>\n\n                      <Col\n                        style={{\n                          justifyContent: \"center\",\n                          alignItems: \"flex-end\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          {me?.gangLevel >= GANG_LEVEL_UNDERBOSS &&\n                            member.id !== me?.id && (\n                              <Button\n                                title={getText(\"kick\")}\n                                onPress={() => postGangKick(member.id)}\n                              />\n                            )}\n                          {me?.gangLevel === GANG_LEVEL_BOSS && (\n                            <Button\n                              title={getText(\"changeRank\")}\n                              style={{ marginLeft: 10 }}\n                              onPress={() => changeRank(member.id)}\n                            />\n                          )}\n                        </View>\n                      </Col>\n                    </Grid>\n                  );\n                })}\n              </Content>\n            )}\n            {/* update name,profile,image */}\n\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"gangProfile\")}\n                contentWidth=\"90%\"\n                id=\"updateProfileSettings\"\n              >\n                <TouchableOpacity onPress={handleChoosePhoto}>\n                  {image ? (\n                    <Image\n                      source={{\n                        uri: image.includes(\"data:image\")\n                          ? image\n                          : Constants.SERVER_ADDR + image,\n                      }}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  ) : (\n                    <Image\n                      source={require(\"../../assets/icon.png\")}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  )}\n                </TouchableOpacity>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={styles(theme).textInput}\n                  value={name}\n                  onChangeText={setName}\n                  placeholder={getText(\"gangName\")}\n                />\n                <T bold>{getText(\"gangProfile\")}</T>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={profile}\n                  onChangeText={setProfile}\n                />\n                <T bold>{getText(\"gangMessage\")}</T>\n\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={message}\n                  onChangeText={setMessage}\n                />\n\n                <Button\n                  onPress={postGangUpdate}\n                  title={getText(\"save\")}\n                  style={{ marginTop: 10 }}\n                />\n              </Content>\n            )}\n            {/* transactions */}\n\n            {/* Leave */}\n            <View style={{ marginVertical: 20 }}>\n              {\n                <Button\n                  title={getText(\"leaveGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"leaveGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangLeave },\n                        { text: getText(\"cancel\") },\n                      ],\n                      { key: \"leaveGang\" }\n                    )\n                  }\n                />\n              }\n            </View>\n\n            {/* Gang delete */}\n            <View style={{ marginVertical: 20 }}>\n              {me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Button\n                  title={getText(\"removeGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"removeGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangRemove },\n                        { text: getText(\"cancel\") },\n                      ],\n                      { key: \"removeGang\" }\n                    )\n                  }\n                />\n              )}\n            </View>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangSettings;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\nconst MARGIN = 20;\nconst { width, height } = Dimensions.get(\"window\");\nconst SIZE = width < 1000 ? 100 : 200;\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangShop = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const prices = [\n    null,\n    50000,\n    100000,\n    200000,\n    500000,\n    1000000,\n    1500000,\n    2000000,\n    3000000,\n    4000000,\n    5000000,\n    10000000,\n    20000000,\n  ];\n\n  const items = [\n    {\n      name: getText(\"gangShopItem1\"),\n      price: prices[1],\n      current: me?.gang?.item1,\n      image: require(\"../../assets/gangshop/item1.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem2\"),\n      price: prices[2],\n      current: me?.gang?.item2,\n      image: require(\"../../assets/gangshop/item2.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem3\"),\n      price: prices[3],\n      current: me?.gang?.item3,\n      image: require(\"../../assets/gangshop/item3.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem4\"),\n      price: prices[4],\n      current: me?.gang?.item4,\n      image: require(\"../../assets/gangshop/item4.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem5\"),\n      price: prices[5],\n      current: me?.gang?.item5,\n      image: require(\"../../assets/gangshop/item5.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem6\"),\n      price: prices[6],\n      current: me?.gang?.item6,\n      image: require(\"../../assets/gangshop/item6.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem7\"),\n      price: prices[7],\n      current: me?.gang?.item7,\n      image: require(\"../../assets/gangshop/item7.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem8\"),\n      price: prices[8],\n      current: me?.gang?.item8,\n      image: require(\"../../assets/gangshop/item8.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem9\"),\n      price: prices[9],\n      current: me?.gang?.item9,\n      image: require(\"../../assets/gangshop/item9.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem10\"),\n      price: prices[10],\n      current: me?.gang?.item10,\n      image: require(\"../../assets/gangshop/item10.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem11\"),\n      price: prices[11],\n      current: me?.gang?.item11,\n      image: require(\"../../assets/gangshop/item11.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem12\"),\n      price: prices[12],\n      current: me?.gang?.item12,\n      image: require(\"../../assets/gangshop/item12.jpg\"),\n    },\n  ];\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const postGangShop = async (itemId) => {\n    setLoading(true);\n    const { response } = await post(\"gangShop\", {\n      itemId,\n      amount: amount[itemId],\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    setLoading(false);\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <T>\n        {getText(\"gangBank\")}: €{numberFormat(me?.gang?.bank || 0)},-\n      </T>\n      <T>\n        {getText(\"power\")}: {me?.gang?.power}\n      </T>\n      <FlatList\n        refreshing={loading}\n        onRefresh={() => reloadMe(device.loginToken)}\n        data={items}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\", height: height - 200 }\n            : undefined\n        }\n        keyExtractor={(item, index) => `shop${index}`}\n        renderItem={({ item, index }) => {\n          return (\n            <View style={{ margin: MARGIN }}>\n              <Image\n                source={item.image}\n                style={{ width: SIZE, height: SIZE }}\n                resizeMode=\"contain\"\n              />\n              <T>{item.name}</T>\n              <T>€{item.price},-</T>\n              <T>\n                {getText(\"inPossession\")}: {item.current}\n              </T>\n              {(me?.gangLevel === GANG_LEVEL_BOSS ||\n                me?.gangLevel === GANG_LEVEL_BANK) && (\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={[styles(theme).textInput, { width: 100 }]}\n                    value={amount[index + 1] || \"\"}\n                    onChangeText={(v) =>\n                      setAmount({ ...amount, [index + 1]: v })\n                    }\n                    placeholder={getText(\"amount\")}\n                  />\n                  <Button\n                    style={{ marginVertical: 10, marginLeft: 10 }}\n                    title={getText(\"buy\")}\n                    onPress={() => postGangShop(index + 1)}\n                  />\n                </View>\n              )}\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default GangShop;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport GangCreate from \"./GangCreate\";\nimport GangMissions from \"./GangMissions\";\nimport GangSettings from \"./GangSettings\";\nimport GangShop from \"./GangShop\";\nconst AllGang = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"gangCreate\",\n      title: getText(\"menuGangCreate\"),\n      component: GangCreate,\n    },\n\n    {\n      key: \"gangSettings\",\n      title: getText(\"menuGangSettings\"),\n      component: GangSettings,\n    },\n    {\n      key: \"gangShop\",\n      title: getText(\"menuGangShop\"),\n      component: GangShop,\n    },\n    {\n      key: \"gangMissions\",\n      title: getText(\"menuGangMissions\"),\n      component: GangMissions,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGang;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    // this.focusListener = navigation.addListener(\"didFocus\", () => {\n    //   // The screen is focused\n    //   // Call any action\n    //   this.fetchGroups();\n    // });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    // this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    // this.focusListener = navigation.addListener(\"didFocus\", () => {\n    //   // The screen is focused\n    //   // Call any action\n    //   console.log(\"FETCH GARAGE\");\n    //   this.fetchGarage();\n    // });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    // this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Garage from \"./Garage\";\nimport Racecars from \"./Racecars\";\nconst AllGarage = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"garage\",\n      title: getText(\"menuGarage\"),\n      component: Garage,\n    },\n\n    {\n      key: \"racecars\",\n      title: getText(\"menuRacecars\"),\n      component: Racecars,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGarage;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 100;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [gangs, setGangs] = useState([]);\n  const [invites, setInvites] = useState([]);\n\n  const getGangs = async () => {\n    setLoading(true);\n    const { gangs } = await get(\"gangs\");\n    setLoading(false);\n    setGangs(gangs);\n  };\n\n  const getInvites = async () => {\n    const { requests, invites } = await get(\n      `gangInvites?token=${device.loginToken}`\n    );\n    setInvites(invites);\n  };\n\n  const postGangAnswerInvite = async (id, accepted) => {\n    const { response } = await post(\"gangAnswerInvite\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setResponse(response);\n    getInvites();\n  };\n\n  doOnce(getGangs);\n  doOnce(getInvites);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      {invites.length > 0 &&\n        invites.map((invite, index) => {\n          return (\n            <View key={`invite${index}`} style={{ flexDirection: \"row\" }}>\n              <T>{getText(\"gangInvitedTo\", invite.gangName)}</T>\n              <Button\n                title={getText(\"accept\")}\n                onPress={() => postGangAnswerInvite(invite.id, true)}\n              />\n              <Button\n                title={getText(\"decline\")}\n                onPress={() => postGangAnswerInvite(invite.id, false)}\n              />\n            </View>\n          );\n        })}\n\n      <FlatList\n        refreshing={loading}\n        onRefresh={getGangs}\n        data={gangs}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n            : undefined\n        }\n        keyExtractor={(item, index) => `gang${index}`}\n        renderItem={({ item, index }) => {\n          const navigate = () =>\n            navigation.navigate(\"Gang\", { name: item.name });\n          return (\n            <TouchableOpacity\n              onPress={navigate}\n              style={{ margin: MARGIN, width: SIZE }}\n            >\n              {item.thumbnail ? (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + item.thumbnail }}\n                  style={{ width: SIZE, height: SIZE }}\n                  resizeMode=\"cover\"\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              )}\n              <T>\n                {getText(\"name\")}: {item.name}\n              </T>\n              <T>\n                {getText(\"members\")}: {item.members}\n              </T>\n              <T>\n                {getText(\"bank\")}: €{numberFormat(item.bank)},-\n              </T>\n              <T>\n                {getText(\"power\")}: {item.score}\n              </T>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Dimensions, FlatList, Platform, TextInput, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, getRank, getStrength, getTextFunction } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\n\nconst filters = [\n  {\n    key: \"alive\",\n    title: \"Levend\",\n  },\n  {\n    key: \"dead\",\n    title: \"Dood\",\n  },\n  {\n    key: \"crew\",\n    title: \"Crew\",\n  },\n];\n\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\n\nconst Members = ({\n  showActionSheetWithOptions,\n  screenProps: { me, device },\n  navigation,\n}) => {\n  const [members, setMembers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [orderBy, setOrderBy] = useState(orders[0]);\n  const [filter, setFilter] = useState(filters[0]);\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    //   if (order) {\n    //     setOrderBy(orders[order]);\n    //     fetchMembers(orders[order].key);\n    //   } else {\n    fetchMembers(orderBy.key);\n    //   }\n  });\n\n  const fetchMembers = (order, filter) => {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}&filter=${filter}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        setMembers(members);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderItem = ({ item, index }) => {\n    const orderKey = orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n          paddingVertical: 10,\n        }}\n      >\n        <User navigation={navigation} user={item} />\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  const openActionSheetSort = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          setOrderBy(orders[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filter.key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const openActionSheetFilter = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = filters.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < filters.length) {\n          console.log(\"setfilter\", filters[buttonIndex]);\n          setFilter(filters[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filters[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ backgroundColor: device.theme.primary }}>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title={getText(\"sort\")}\n            onPress={() => openActionSheetSort()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n\n          <Button\n            title={getText(\"filter\")}\n            onPress={() => openActionSheetFilter()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: device.theme.secondaryText,\n            }}\n            onChangeText={setSearch}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n\n  const searchedMembers = members.filter((m) =>\n    search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? 0 : undefined,\n        }}\n        ItemSeparatorComponent={() => <Separator />}\n        ListHeaderComponent={renderHeader}\n        data={searchedMembers}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default connectActionSheet(Members);\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport T from \"./T\";\n\nconst Gang = ({ gang, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Gang\", { name: gang.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {gang.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + gang.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T>{gang.name}</T>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Gang;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Content from \"../components/Content\";\nimport Gang from \"../components/Gang\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport {\n  doOnce,\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  InactiveScreens,\n} from \"../Util\";\n\n/**\n */\nconst Prizes = ({\n  navigation,\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [prizes, setPrizes] = useState([]);\n  const getPrizes = async () => {\n    const { prizes } = await get(\"prizes\");\n    setPrizes(prizes);\n  };\n  doOnce(getPrizes);\n\n  return (\n    <ScrollView>\n      {moment().isAfter(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE) &&\n        moment().isBefore(InactiveScreens.PRIZES_RELEASE_DATE) && (\n          <MarkdownView style={{ text: { color: theme.primaryText } }}>\n            {getText(\"prizesText\")}\n          </MarkdownView>\n        )}\n\n      {me?.level > 1 ||\n      moment().isAfter(InactiveScreens.PRIZES_RELEASE_DATE) ? (\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {prizes.map((prize, index) => {\n            const when =\n              prize.every === \"hour\"\n                ? getText(\"everyHour\")\n                : prize.every === \"day\"\n                ? getText(\"everyDay5pm\")\n                : prize.every === \"week\"\n                ? getText(\"everyWeekSunday5pm\")\n                : prize.every === \"month\"\n                ? moment().endOf(\"month\").format(\"DD-MM-YYYY HH:mm\")\n                : null;\n            return (\n              <Content\n                contentWidth={\"90%\"}\n                id={`prize${index}`}\n                title={getText(`prize${prize.forWhat}title`) + \" \" + when}\n              >\n                {prize.stats.map((stat, i) => {\n                  //stat is user\n                  return (\n                    <Grid key={`grid${i}x${index}`}>\n                      <Col\n                        size={2}\n                        style={{ justifyContent: \"center\", paddingTop: 10 }}\n                      >\n                        {prize.forWhat === \"gang\" ? (\n                          <Gang size={40} navigation={navigation} gang={stat} />\n                        ) : (\n                          <User size={40} navigation={navigation} user={stat} />\n                        )}\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\", paddingTop: 10 }}>\n                        <T>\n                          {stat.prize} {getText(prize.prizeWhat)}\n                        </T>\n                      </Col>\n\n                      {prize.forWhat === \"gang\" ? null : (\n                        <Col\n                          style={{ justifyContent: \"center\", paddingTop: 10 }}\n                        >\n                          <T>\n                            {prize.forWhat === \"rank\"\n                              ? getRank(stat[prize.forWhat], \"both\")\n                              : prize.forWhat === \"strength\"\n                              ? getStrength(stat[prize.forWhat], \"both\")\n                              : `${stat[prize.forWhat]} ${getText(\n                                  prize.forWhat\n                                )}`}\n                          </T>\n                        </Col>\n                      )}\n                    </Grid>\n                  );\n                })}\n              </Content>\n            );\n          })}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\nexport default Prizes;\n","import React from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, numberFormat, properties } from \"../Util\";\n\nconst Properties = ({\n  navigation,\n  screenProps: { me, cities, reloadCities },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(reloadCities);\n\n  const gridStyle = {\n    paddingVertical: 10,\n    paddingLeft: 10,\n    borderBottomWidth: 0.5,\n    borderBottomColor: \"black\",\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        <View>\n          <View style={gridStyle}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          {cities?.map((city, index) => {\n            return (\n              <View\n                key={`i${index}`}\n                style={[\n                  gridStyle,\n                  {\n                    borderRightColor: \"black\",\n                    borderRightWidth: 0.5,\n                    borderLeftColor: \"black\",\n                    borderLeftWidth: 0.5,\n                    paddingLeft: 10,\n                  },\n                ]}\n              >\n                <T>{city.city}</T>\n              </View>\n            );\n          })}\n        </View>\n\n        <ScrollView horizontal>\n          <View style={{ width: properties.length * 3 * 150 }}>\n            <Grid style={gridStyle}>\n              {properties.map((property, index) => {\n                return [\"owner\", \"damage\", \"profit\", \"price\", \"bullets\"].map(\n                  (suffix) => {\n                    if (\n                      (suffix === \"price\" || suffix === \"bullets\") &&\n                      property.name !== \"bulletFactory\"\n                    ) {\n                      return;\n                    }\n                    const field = `${getText(property.name)} ${getText(\n                      suffix\n                    )}`;\n\n                    return (\n                      <Col size={1} key={`prop${index}${suffix}`}>\n                        <T bold numberOfLines={1}>\n                          {field}\n                        </T>\n                      </Col>\n                    );\n                  }\n                );\n              })}\n            </Grid>\n\n            {cities?.map((city, index) => {\n              return (\n                <Grid style={gridStyle}>\n                  {properties.map((property) => {\n                    return [\n                      \"Owner\",\n                      \"Damage\",\n                      \"Profit\",\n                      \"Price\",\n                      \"bullets\",\n                    ].map((fieldSuffix) => {\n                      if (\n                        (fieldSuffix === \"Price\" ||\n                          fieldSuffix === \"bullets\") &&\n                        property.name !== \"bulletFactory\"\n                      ) {\n                        return;\n                      }\n                      const field =\n                        fieldSuffix === \"bullets\"\n                          ? fieldSuffix\n                          : `${property.name}${fieldSuffix}`;\n\n                      const formattedField =\n                        fieldSuffix === \"Owner\" ? (\n                          <TouchableOpacity\n                            onPress={() =>\n                              navigation.navigate(\"Profile\", {\n                                name: city[field],\n                              })\n                            }\n                          >\n                            <T>{city[field]}</T>\n                          </TouchableOpacity>\n                        ) : fieldSuffix === \"Damage\" ? (\n                          <T>{city[field]}%</T>\n                        ) : fieldSuffix === \"Profit\" ||\n                          fieldSuffix === \"Price\" ? (\n                          <T>€{numberFormat(city[field])},-</T>\n                        ) : (\n                          <T>{numberFormat(city[field])}</T>\n                        );\n                      return <Col>{formattedField}</Col>;\n                    });\n                  })}\n                </Grid>\n              );\n            })}\n          </View>\n        </ScrollView>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Properties;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Content from \"../components/Content\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getRank, getStrength, numberFormat } from \"../Util\";\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nconst Stats = ({ navigation, screenProps: { me } }) => {\n  const [stats, setStats] = useState([]);\n  const [gameStats, setGameStats] = useState([]);\n\n  const alertAlert = React.useContext(AlertContext);\n  const fetchStats = () => {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        setStats(stats);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchGameStats = async () => {\n    const { stats } = await get(\"gamestats\");\n    setGameStats(stats);\n  };\n\n  doOnce(fetchStats);\n  doOnce(fetchGameStats);\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          padding: 20,\n        }}\n      >\n        {stats?.map((stat, index) => {\n          const key = Object.keys(stat)[0];\n          const values = Object.values(stat)[0];\n          return (\n            <Content\n              id={`stat${index}`}\n              key={`stat${index}`}\n              contentWidth={300}\n              title={keyNames[key]}\n            >\n              <View key={`index${index}`} style={{ width: 300, marginTop: 20 }}>\n                {values instanceof Array ? (\n                  values.map((value, i) => {\n                    let v = value[key];\n                    if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                    if (key === \"createdAt\")\n                      v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                    if (key === \"strength\") v = getStrength(v, \"both\");\n                    if (key === \"rank\") v = getRank(v, \"both\");\n\n                    return (\n                      <View\n                        key={`stat${key}-${i}`}\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          marginBottom: 5,\n                        }}\n                      >\n                        <User navigation={navigation} user={value} size={40} />\n                        <View>\n                          <T key={`stat${key}-${i}`}>{v}</T>\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{values}</T>\n                )}\n              </View>\n            </Content>\n          );\n        })}\n      </View>\n      {gameStats.length > 0 && (\n        <View>\n          <H1>Online</H1>\n          <T>\n            Rood is online, groen is online per uur, blauw is online per dag.\n          </T>\n          <ScrollView horizontal snapToEnd>\n            <LineChart\n              fromZero\n              data={{\n                labels: gameStats.map((x, index) =>\n                  index === 0 || index % 6 === 0\n                    ? moment(x.createdAt).format(\"D MMM HH:00\")\n                    : \" \"\n                ),\n                datasets: [\n                  {\n                    data: gameStats.map((x) => x.online),\n                    color: (opacity) => \"red\",\n                  },\n                  {\n                    data: gameStats.map((x) => x.onlineLastHour),\n                    color: (opacity) => \"green\",\n                  },\n                  {\n                    data: gameStats.map((x) => x.onlineLastDay),\n                    color: (opacity) => \"blue\",\n                  },\n                ],\n              }}\n              onDataPointClick={(data) => {\n                const item = gameStats[data.index];\n\n                alertAlert(\n                  moment(item.createdAt).format(\"D MMM HH:00\"),\n                  `${item.online} online, ${item.onlineLastHour} online dat uur, ${item.onlineLastDay} online die dag`,\n                  null,\n                  { key: \"onlineInfo\" }\n                );\n              }}\n              width={gameStats.length * 20 + 100} // from react-native\n              height={225}\n              xAxisLabel=\"\"\n              xLabelsOffset={10}\n              yAxisLabel=\"\"\n              yAxisSuffix=\"\"\n              yAxisInterval={1} // optional, defaults to 1\n              chartConfig={{\n                backgroundColor: \"#e26a00\",\n                backgroundGradientFrom: \"#fb8c00\",\n                backgroundGradientTo: \"#ffa726\",\n                decimalPlaces: 0, // optional, defaults to 2dp\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                style: {\n                  borderRadius: 16,\n                },\n                propsForDots: {\n                  r: \"6\",\n                  strokeWidth: \"2\",\n                  stroke: \"#ffa726\",\n                },\n              }}\n              bezier\n              style={{\n                marginVertical: 8,\n                borderRadius: 16,\n              }}\n            />\n          </ScrollView>\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default Stats;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Gangs from \"./Gangs\";\nimport Members from \"./Members\";\nimport Prizes from \"./Prizes\";\nimport Properties from \"./Properties\";\nimport Stats from \"./Stats\";\nconst AllStats = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"members\",\n      title: getText(\"menuMembers\", props.screenProps.me?.online),\n      component: Members,\n    },\n    {\n      key: \"stats\",\n      title: getText(\"menuStats\"),\n      component: Stats,\n    },\n    {\n      key: \"gangs\",\n      title: getText(\"menuGangs\"),\n      component: Gangs,\n    },\n    {\n      key: \"prizes\",\n      title: getText(\"prizes\"),\n      component: Prizes,\n    },\n\n    {\n      key: \"properties\",\n      title: getText(\"menuProperties\"),\n      component: Properties,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllStats;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Blocks = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [blocks, setBlocks] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  const postRemoveBlock = async (user2id) => {\n    const { response } = await post(\"removeBlock\", {\n      loginToken: device.loginToken,\n      user2id,\n    });\n\n    setResponse(response);\n    getBlocks();\n  };\n\n  const getBlocks = async () => {\n    const { blocks } = await get(`blocks?loginToken=${device.loginToken}`);\n\n    setBlocks(blocks);\n  };\n\n  doOnce(getBlocks);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          {blocks?.map?.((block) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <User user={block.user} size={40} navigation={navigation} />\n\n              <TouchableOpacity onPress={() => postRemoveBlock(block.user2id)}>\n                <Entypo name=\"cross\" color=\"red\" size={33} />\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Blocks;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import { Entypo } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst lottoReleaseDate = moment(\"01/07/2021\", \"DD/MM/YYYY\").set(\"hour\", 17);\n\nconst Casino = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"casino\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.casinoOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.casinoOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"casinoInfo2\", city?.casinoProfit)}\n          </Text>\n\n          <View style={{ flexDirection: \"row\" }}>\n            <Button\n              onPress={() => navigation.navigate(\"Poker\")}\n              title={getText(\"poker\")}\n            />\n\n            {(moment().isAfter(lottoReleaseDate) || me?.level > 1) && (\n              <Button\n                style={{ marginLeft: 10 }}\n                onPress={() => navigation.navigate(\"Lotto\")}\n                title={getText(\"lotto\")}\n              />\n            )}\n          </View>\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.casinoOwner ? (\n                  <T>{city.casinoOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.casinoOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"casino\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.casinoProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Casino;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button onPress={changeName} title={getText(\"change\")} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst getText = getTextFunction();\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n        return false;\n      }\n      return true;\n    }\n    return true;\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, Linking, Platform, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nimport T from \"./T\";\n\nconst ShareButtons = ({ me, url, text }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const siteUrl = `https://mastercrimez.com/%23/${url}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=${siteUrl}`;\n\n  return (\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n      <T>{getText(\"footerShare\")}</T>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(facebookShareUrl);\n        }}\n      >\n        <View\n          style={{\n            marginLeft: 20,\n            backgroundColor: \"#3b5998\",\n            width: 40,\n            height: 40,\n            borderRadius: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n        </View>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(\n            Platform.OS === \"web\"\n              ? `https://wa.me/?text=${text}%20${siteUrl}`\n              : `whatsapp://send?text=${text}%20${siteUrl}`\n          );\n        }}\n      >\n        <Image\n          source={require(\"../../assets/whatsapp.png\")}\n          style={{ width: 55, height: 55 }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ShareButtons;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\n\nconst IMAGE_SIZE = 40;\n\nconst Footer = ({ me, device, params, fetchChat }) => {\n  const { loginToken, theme } = device;\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [hasEdited, setHasEdited] = useState(false);\n  const getText = getTextFunction(me?.locale);\n\n  const send = () => {\n    setImage(null);\n    setMessage(\"\");\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ success, response }) => {\n        if (response) {\n          alert(response);\n        }\n        if (success) {\n          fetchChat();\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  const renderFooter = () => {\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) => {\n              setImage(base64);\n              setHasEdited(true);\n            }}\n          />\n\n          <TextInput\n            multiline\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={setMessage}\n          />\n\n          <TouchableOpacity onPress={send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  return renderFooter();\n};\n\nconst ChatScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device: { loginToken },\n    device,\n    me,\n    reloadMe,\n  },\n}) => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [chat, setChat] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  if (!params?.id) {\n    return <T>No id given</T>;\n  }\n  useEffect(() => {\n    fetchChat();\n\n    const interval = setInterval(() => {\n      fetchChat();\n      post(\"setRead\", { loginToken, id: params?.subid });\n      reloadMe(loginToken);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [params.id]);\n\n  const fetchChat = async () => {\n    const url = `channelmessage?loginToken=${device.loginToken}&id=${params.id}`;\n    const response = await get(url);\n\n    if (response) {\n      setChat(response.chat);\n      setResponse(response.response);\n      setIsFetching(false);\n    }\n  };\n\n  const onRefresh = () => {\n    setIsFetching(true);\n    fetchChat();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.name });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            flex: 1,\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{item.user?.name}</Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <MarkdownView>{item.message}</MarkdownView>\n\n          {item.isShareable && (\n            <ShareButtons me={me} text={item.message} url={``} />\n          )}\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      {Array.isArray(chat) ? (\n        <FlatList\n          initialNumToRender={Platform.OS === \"web\" ? chat.length : undefined}\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 250 : undefined,\n          }}\n          data={chat}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => `index${index}`}\n          refreshControl={\n            <RefreshControl refreshing={isFetching} onRefresh={onRefresh} />\n          }\n          inverted\n        />\n      ) : (\n        <View style={{ flex: 1 }}>\n          <T>{response}</T>\n        </View>\n      )}\n      <Footer me={me} device={device} params={params} fetchChat={fetchChat} />\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst blocksReleaseDate = moment(\"15/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17);\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFetching: true,\n    };\n  }\n\n  fetchChannelsubs = () => {\n    const {\n      screenProps: { device, reloadChannels },\n    } = this.props;\n    reloadChannels(device.loginToken);\n  };\n\n  // fetchChannelsubs = () => {\n  //   const {\n  //     screenProps: { device },\n  //   } = this.props;\n  //   fetch(\n  //     `${Constants.SERVER_ADDR}/channelsubs?loginToken=${device.loginToken}`,\n  //     {\n  //       method: \"GET\",\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     }\n  //   )\n  //     .then((response) => response.json())\n  //     .then((channelsubs) => {\n  //       if (channelsubs.response) {\n  //         this.setState({ response: channelsubs.response });\n  //       } else {\n  //         this.setState({ channelsubs });\n  //       }\n  //       this.setState({ isFetching: false });\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  openMenu = (id, userId) => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"delete\")];\n\n    const isBlockButtonActive =\n      (moment().isAfter(blocksReleaseDate) || me?.level > 1) && userId;\n    if (isBlockButtonActive) {\n      options.push(getText(\"blockThisUser\"));\n    }\n\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"delete\", id);\n          await post(\"setDeleted\", { loginToken: device.loginToken, id: id });\n          this.fetchChannelsubs();\n        }\n        if (isBlockButtonActive && buttonIndex === 1) {\n          const { response } = await post(\"addBlock\", {\n            loginToken: device.loginToken,\n            user2id: userId,\n          });\n          alert(response);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  openGeneralMenu = () => {\n    const { device, me } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"deleteAllChats\")];\n\n    const isBlocksActive = moment().isAfter(blocksReleaseDate) || me?.level > 1;\n\n    if (isBlocksActive) {\n      options.push(getText(\"blocks\"));\n    }\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"deleteAll\");\n          await post(\"deleteAll\", { loginToken: device.loginToken });\n          this.fetchChannelsubs();\n        }\n        if (buttonIndex === 1 && isBlocksActive) {\n          navigation.navigate(\"Blocks\");\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.name\n      : \"(System)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          ?.thumbnail\n      : null;\n\n    const channelOtherUserId = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.id\n      : null;\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel?.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          {channelThumbnail ? (\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + channelThumbnail }}\n              style={{ width: 60, height: 60, borderRadius: 30 }}\n            />\n          ) : (\n            <View\n              style={{\n                width: 60,\n                height: 60,\n                borderRadius: 30,\n                backgroundColor: \"#CCC\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n            </View>\n          )}\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20, flex: 1 }}>\n            <T bold>\n              {/* name or other person in chat */}\n              {channelTitle}\n            </T>\n            {item.lastmessage ? (\n              <T numberOfLines={1}>{item.lastmessage}</T>\n            ) : null}\n          </View>\n\n          <View>\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\" }}\n              onPress={() => this.openMenu(item.id, channelOtherUserId)}\n              hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n            >\n              <Entypo\n                style={{ marginLeft: 10 }}\n                name=\"dots-three-horizontal\"\n                size={20}\n                color={theme.primaryText}\n              />\n            </TouchableOpacity>\n            <T>\n              {moment(item.lastmessageDate).format(\n                moment(item.lastmessageDate).isAfter(moment().startOf(\"day\"))\n                  ? \"HH:mm\"\n                  : \"DD-MM-YYYY\"\n              )}\n            </T>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const {\n      screenProps: { channels },\n    } = this.props;\n\n    console.log(\"channels\", channels);\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          ListHeaderComponent={() => {\n            return (\n              <View>\n                <View\n                  style={{\n                    justifyContent: \"flex-end\",\n                    marginRight: 20,\n                    marginTop: 20,\n                  }}\n                >\n                  <TouchableOpacity\n                    style={{ alignSelf: \"flex-end\" }}\n                    onPress={() => this.openGeneralMenu()}\n                    hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n                  >\n                    <Entypo\n                      style={{ marginLeft: 10 }}\n                      name=\"dots-three-horizontal\"\n                      size={20}\n                      color={theme.primaryText}\n                    />\n                  </TouchableOpacity>\n                </View>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    navigation.navigate(\"Chat\");\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      paddingVertical: 10,\n                      paddingHorizontal: 20,\n                      borderBottomColor: \"black\",\n                      borderBottomWidth: 0.5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 60,\n                        height: 60,\n                        borderRadius: 30,\n                        backgroundColor: \"#CCC\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n                    </View>\n\n                    <View style={{ marginLeft: 20, flex: 1 }}>\n                      <T bold>\n                        {/* name or other person in chat */}\n                        {getText(\"everyone\")}\n                      </T>\n                    </View>\n                  </View>\n                </TouchableOpacity>\n              </View>\n            );\n          }}\n          data={channels}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default connectActionSheet(ChatScreen);\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    this.interval = setInterval(() => this.getChat(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport { Dimensions, Image, ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const postChooseProfession = async (profession) => {\n    setLoading(true);\n\n    const { response } = await post(`chooseProfession`, {\n      token: device.loginToken,\n      profession,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const PROFESSIONS = [\n    { type: \"thief\", image: require(\"../../assets/profession/thief.jpg\") },\n    {\n      type: \"carthief\",\n      image: require(\"../../assets/profession/carthief.jpg\"),\n    },\n    {\n      type: \"weedgrower\",\n      image: require(\"../../assets/profession/weedgrower.jpg\"),\n    },\n    { type: \"killer\", image: require(\"../../assets/profession/killer.jpg\") },\n    { type: \"pimp\", image: require(\"../../assets/profession/pimp.jpg\") },\n    { type: \"banker\", image: require(\"../../assets/profession/banker.jpg\") },\n    {\n      type: \"jailbreaker\",\n      image: require(\"../../assets/profession/jailbreaker.jpg\"),\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response ? (\n        <T>{response}</T>\n      ) : me?.canChooseProfession ? (\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {PROFESSIONS.map((profession) => {\n            return (\n              <View style={{ width: 100, margin: 20 }}>\n                <Image\n                  source={profession.image}\n                  style={{ width: 100, height: 100 }}\n                  resizeMode=\"contain\"\n                />\n                <View style={{ height: 100 }}>\n                  <T bold>{getText(profession.type)}</T>\n                  <T>{getText(profession.type + \"Advantage\")}</T>\n                </View>\n                <Button\n                  title={getText(\"choose\")}\n                  onPress={() => postChooseProfession(profession.type)}\n                />\n              </View>\n            );\n          })}\n        </View>\n      ) : (\n        <T>{getText(\"youAreProfession\", getText(me?.profession))}</T>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default Gangs;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Code = ({\n  navigation: {\n    state: { params },\n  },\n  screenProps: { me, device, dispatch },\n}) => {\n  const [response, setResponse] = useState(null);\n\n  const code = params?.param;\n  //  When opening the site on web  on /Case or /Code or /StealCar on an unverified account, open modal\n  doOnce(() => {\n    if (!me?.phoneVerified) {\n      dispatch({ type: \"SET_LOGGED\", value: false });\n    }\n  });\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View>\n      {response ? (\n        <T>{response}</T>\n      ) : (\n        <Button\n          title={getText(\"openSuitcaseButton\")}\n          onPress={async () => {\n            const { response } = await post(\"enterCode\", {\n              loginToken: device.loginToken,\n              code,\n            });\n            setResponse(response);\n          }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default Code;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { ActivityIndicator, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateOc = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadOcs,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createOc\", {\n      loginToken,\n      numParticipants,\n      type,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadOcs(loginToken);\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"ocBank\"),\n              onPress: () => setType(\"bank\"),\n              isActive: type === \"bank\",\n            },\n            {\n              title: getText(\"ocCars\"),\n              onPress: () => setType(\"cars\"),\n              isActive: type === \"cars\",\n            },\n            {\n              title: getText(\"ocShootout\"),\n              onPress: () => setType(\"shootout\"),\n              isActive: type === \"shootout\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createOcOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateOc;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  Image,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nexport const RobberyTypes = [\n  {\n    type: \"snackbar\",\n    cost: 10000,\n    profit: 50000,\n    difficulty: 1,\n    seconds: 60,\n    image: require(\"../../assets/robbery/snackbar.jpg\"),\n  },\n  {\n    type: \"clothesstore\",\n    cost: 20000,\n    profit: 75000,\n    difficulty: 5,\n    seconds: 180,\n    image: require(\"../../assets/robbery/clothesstore.jpg\"),\n  },\n  {\n    type: \"supermarket\",\n    cost: 50000,\n    profit: 100000,\n    difficulty: 10,\n    seconds: 240,\n    image: require(\"../../assets/robbery/supermarket.jpg\"),\n  },\n  {\n    type: \"drugstore\",\n    cost: 100000,\n    profit: 250000,\n    difficulty: 20,\n    seconds: 300,\n    image: require(\"../../assets/robbery/drugstore.jpg\"),\n  },\n  {\n    type: \"coffeeshop\",\n    cost: 150000,\n    profit: 300000,\n    difficulty: 50,\n    seconds: 300,\n    image: require(\"../../assets/robbery/coffeeshop.jpg\"),\n  },\n  {\n    type: \"cardealer\",\n    cost: 200000,\n    profit: 400000,\n    difficulty: 100,\n    seconds: 600,\n    image: require(\"../../assets/robbery/cardealer.jpg\"),\n  },\n  {\n    type: \"bank\",\n    cost: 250000,\n    profit: 500000,\n    difficulty: 200,\n    seconds: 900,\n    image: require(\"../../assets/robbery/bank.jpg\"),\n  },\n  {\n    type: \"casino\",\n    cost: 500000,\n    profit: 1000000,\n    difficulty: 300,\n    seconds: 1800,\n    image: require(\"../../assets/robbery/casino.jpg\"),\n  },\n  {\n    type: \"jewelrystore\",\n    cost: 1000000,\n    profit: 2000000,\n    difficulty: 500,\n    seconds: 3600,\n    image: require(\"../../assets/robbery/jewelrystore.jpg\"),\n  },\n];\n\nconst Robbery = ({ robbery, isActive, onPress, title }) => {\n  return (\n    <TouchableOpacity\n      style={{\n        opacity: isActive ? 1 : 0.4,\n        marginHorizontal: 20,\n      }}\n      onPress={onPress}\n    >\n      <Image\n        source={robbery.image}\n        style={{ width: 100, height: 100 }}\n        resizeMode=\"cover\"\n      />\n      <T bold>{title}</T>\n    </TouchableOpacity>\n  );\n};\nconst CreateRobbery = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadRobberies,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [prize, setPrize] = useState(\"0\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createRobbery\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      prize,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadRobberies();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {RobberyTypes.map((t) => {\n            return (\n              <Robbery\n                robbery={t}\n                title={getText(t.type)}\n                onPress={() => setType(t.type)}\n                isActive={type === t.type}\n              />\n            );\n          })}\n        </View>\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </ScrollView>\n  );\n};\n\nexport default CreateRobbery;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [prize, setPrize] = useState(\"0\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      prize,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"addedPrizeMoney\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={prize}\n          onChangeText={(x) => setPrize(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const maxChance = me?.profession === \"thief\" ? 99 : 75;\n    const kans2 = kans > maxChance ? maxChance : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            {response.code && (\n              <ShareButtons\n                me={me}\n                text={getText(\"crimeSuitcase\")}\n                url={`Case/${response.code}`}\n              />\n            )}\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Detectives = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [detectives, setDetectives] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [type, setType] = useState(\"slow\");\n  const [name, setName] = useState(\"\");\n\n  const postHireDetective = async () => {\n    const { response } = await post(\"hireDetective\", {\n      loginToken: device.loginToken,\n      name,\n      type,\n    });\n\n    setResponse(response);\n    getDetectives();\n  };\n\n  const getDetectives = async () => {\n    const { detectives } = await get(\n      `detectives?loginToken=${device.loginToken}`\n    );\n    setDetectives(detectives);\n  };\n\n  doOnce(getDetectives);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          <TextInput\n            style={style(theme).textInput}\n            placeholder={getText(\"name\")}\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={name}\n            onChangeText={setName}\n          />\n\n          <Button\n            style={{ marginBottom: 10 }}\n            title={getText(type + \"Detective\")}\n            onPress={() =>\n              setType(\n                type === \"slow\" ? \"normal\" : type === \"normal\" ? \"fast\" : \"slow\"\n              )\n            }\n          />\n\n          <T>\n            {getText(\n              \"detectiveCost\",\n              type === \"slow\" ? 100000 : type === \"normal\" ? 1000000 : 10000000,\n              getText(type + \"Detective\")\n            )}\n          </T>\n\n          <Button title={getText(\"hire\")} onPress={postHireDetective} />\n\n          <View style={{ height: 100 }} />\n          {detectives?.map?.((detective) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              {detective.user && (\n                <User user={detective.user} size={40} navigation={navigation} />\n              )}\n\n              {detective.city ? (\n                <T>{detective.city}</T>\n              ) : (\n                <CountDown\n                  style={{ marginLeft: 10 }}\n                  until={moment(detective.createdAt)\n                    .add(detective.seconds, \"seconds\")\n                    .diff(moment(), \"seconds\")}\n                  digitStyle={{ backgroundColor: theme.secondary }}\n                  digitTxtStyle={{ color: theme.secondaryText }}\n                  onFinish={() => {}}\n                  size={8}\n                  timeToShow={[\"H\", \"M\", \"S\"]}\n                  timeLabels={{ h: null, m: null, s: null }}\n                />\n              )}\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Detectives;\n","const { Platform, Linking, View, Text } = require(\"react-native\");\nimport React from \"react\";\nimport Constants from \"../Constants\";\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nconst DownloadApp = () => {\n  if (getMobileOperatingSystem() === \"android\") {\n    console.log(\"is android\");\n    window.location.replace(Constants.ANDROID_APP_URL);\n  }\n\n  if (getMobileOperatingSystem() === \"ios\") {\n    console.log(\"is ios\");\n    window.location.replace(Constants.IOS_APP_URL);\n  }\n\n  console.log(getMobileOperatingSystem());\n\n  return (\n    <View>\n      <Text>Download the app!</Text>\n    </View>\n  );\n};\nexport default DownloadApp;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst EstateAgent = ({ navigation, screenProps }) => {\n  return <Shop type=\"home\" navigation={navigation} screenProps={screenProps} />;\n};\n\nexport default EstateAgent;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n        <TextInput\n          multiline\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          numberOfLines={4}\n          style={{ ...style(device.theme).textInput, height: 150 }}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n\n                <MarkdownView\n                  style={{ text: { color: device.theme.primaryText } }}\n                >\n                  {response.message}\n                </MarkdownView>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={style(device.theme).textInput}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            placeholder={getText(\"react\")}\n            value={this.state.message}\n            onChangeText={(message) => this.setState({ message })}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Image,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getTextFunction,\n  getUserColor,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const [response, setResponse] = useState(null);\n\n  const name = navigation.state.params?.name;\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${name}`);\n    setLoading(false);\n    setItem(gang);\n  };\n\n  const postGangJoin = async () => {\n    setLoading(true);\n\n    const { response } = await post(`gangJoin`, {\n      token: device.loginToken,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getGang);\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const totalHealth = item.users?.reduce((prev, user) => prev + user.health, 0);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        ListFooterComponent={() => {\n          return (\n            <MarkdownView style={{ text: { color: theme.primaryText } }}>\n              {item?.profile}\n            </MarkdownView>\n          );\n        }}\n        ListHeaderComponent={() => {\n          return (\n            <View\n              style={{ margin: MARGIN, flexDirection: \"row\", flexWrap: \"wrap\" }}\n            >\n              <View>\n                {item.image ? (\n                  <Image\n                    source={{ uri: Constants.SERVER_ADDR + item.image }}\n                    style={{ width: SIZE, height: SIZE }}\n                    resizeMode=\"cover\"\n                  />\n                ) : (\n                  <Image\n                    source={require(\"../../assets/icon.png\")}\n                    style={{ width: SIZE, height: SIZE }}\n                  />\n                )}\n\n                {totalHealth === 0 ? (\n                  <Image\n                    source={require(\"../../assets/uitgemoord.jpg\")}\n                    style={{ width: SIZE, height: SIZE }}\n                  />\n                ) : null}\n              </View>\n              <View style={{ margin: MARGIN }}>\n                {loading ? <ActivityIndicator /> : null}\n                <T>\n                  {getText(\"name\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"members\")}: {item.members}\n                </T>\n                <T>\n                  {getText(\"bank\")}: €{numberFormat(item.bank)},-\n                </T>\n                <T>\n                  {getText(\"power\")}: {item.score}\n                </T>\n                {!me?.gang &&\n                  (response ? (\n                    <T>{response}</T>\n                  ) : (\n                    <Button\n                      onPress={postGangJoin}\n                      title={getText(\"gangJoinCTA\")}\n                      theme={theme}\n                    />\n                  ))}\n              </View>\n            </View>\n          );\n        }}\n        data={item.users}\n        keyExtractor={(item, index) => `item${index}`}\n        renderItem={({ item, index }) => {\n          const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n\n          const color = getUserColor(item, theme);\n\n          return (\n            <Grid key={`item${index}`} style={{}}>\n              <Col size={2} style={{ marginVertical: 5 }}>\n                <User navigation={navigation} user={item} />\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>{getGangLevel(item.gangLevel)}</T>\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>❤️ {item.health}%</T>\n              </Col>\n            </Grid>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\n\nconst GangAchievements = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n\n  const getGangAchievements = async () => {\n    setLoading(true);\n    const result = await get(`gangAchievements?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangAchievements);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>\n              {getText(\"level\")}: {result.power}\n            </H1>\n          </View>\n          {result.achievements &&\n            Object.keys(result.achievements).map((key) => {\n              const stats = result.achievements[key];\n\n              return (\n                <View style={{ marginBottom: 20 }}>\n                  <T bold style={{ alignSelf: \"center\", marginVertical: 20 }}>\n                    {getText(key)}\n                  </T>\n\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 150,\n                        backgroundColor: theme.secondary,\n                        padding: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <T>\n                        {getText(\"level\")}: {stats.level}\n                      </T>\n\n                      <T>\n                        {getText(\"average\")}: {stats.current}\n                      </T>\n                    </View>\n\n                    <AntDesign\n                      name=\"arrowright\"\n                      color={theme.primaryText}\n                      size={36}\n                    />\n\n                    <View\n                      style={{\n                        width: 150,\n                        backgroundColor: theme.secondary,\n                        padding: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      {stats.next && (\n                        <T>\n                          {getText(\"level\")}: {stats.level + 1}\n                        </T>\n                      )}\n                      <T>\n                        {stats.next\n                          ? `${getText(\"average\")}: ${stats.next}`\n                          : getText(\"maximumLevel\")}\n                      </T>\n                    </View>\n                  </View>\n                </View>\n              );\n            })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangAchievements;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst GarageShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"garage\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default GarageShop;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* Show all people with isHacker set to true */}\n      <Image\n        source={require(\"../../assets/hacker.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"hackersInfo\")}</T>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React, { Component } from \"react\";\nimport { Image, ScrollView, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const number = Math.ceil(Math.random() * 60);\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Image\n                style={{ width: 100, height: 100 }}\n                source={{\n                  uri:\n                    Constants.SERVER_ADDR + \"/images/female/\" + number + \".gif\",\n                }}\n              />\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { Component } from \"react\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  NativeModules,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { leftMenu, rightMenu } from \"../Menus\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst itemWidth = width / 4 > 100 ? 100 : width / 4;\nconst isSmallDevice = width < 800;\n\nconst amountOfItems = Math.floor((height - 200) / itemWidth) * 4;\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    //iPad|\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nclass Home extends Component {\n  state = {\n    response: null,\n    activeSlide: 0,\n    notificationsHeader: false,\n  };\n\n  componentDidMount() {\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n\n    this.turnOnNotifications();\n    this.sendLanguage();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      this.turnOnNotifications();\n      this.sendLanguage();\n    }\n  };\n\n  sendLanguage = () => {\n    const { device, me } = this.props.screenProps;\n\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  turnOnNotifications = async () => {\n    const { device, me } = this.props.screenProps;\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        this.setState({ notificationsHeader: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      this.setState({ notificationsHeader: false });\n    }\n  };\n\n  _renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginVertical: 15,\n        }}\n      >\n        {item.map((menu, index) => {\n          const TheIcon = Icon[menu.iconType];\n          return (\n            <View\n              key={`i${index}`}\n              style={{ width: itemWidth, alignItems: \"center\" }}\n            >\n              <TouchableOpacity\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"#000\",\n                  backgroundColor: theme.secondary,\n                  borderRadius: 10,\n                  width: itemWidth - 25,\n                  height: itemWidth - 25,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={(e) => {\n                  navigation.navigate(menu.to);\n\n                  const movement = {\n                    action: \"App_Menu_\" + menu.to,\n                    locationX: e.nativeEvent.locationX,\n                    locationY: e.nativeEvent.locationY,\n                    timestamp: Date.now(),\n                  };\n\n                  dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n                }}\n              >\n                {TheIcon && (\n                  <TheIcon\n                    name={menu.icon}\n                    size={(itemWidth - 25) / 2}\n                    color={theme.secondaryText}\n                  />\n                )}\n              </TouchableOpacity>\n              <View>\n                <Text style={{ color: theme.primaryText }}>{menu.text}</Text>\n                {menu.component}\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCarousel() {\n    const {\n      screenProps: { dispatch, me, device },\n    } = this.props;\n\n    const { notificationsHeader } = this.state;\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    const getText = getTextFunction(me?.locale);\n\n    const data = [\n      filtered.slice(0, amountOfItems),\n      filtered.slice(amountOfItems, amountOfItems * 2),\n      amountOfItems * 2 > filtered.length\n        ? undefined\n        : filtered.slice(amountOfItems * 2, filtered.length),\n    ].filter((x) => !!x);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {notificationsHeader && (\n          <TouchableOpacity\n            onPress={() => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            }}\n          >\n            <View\n              style={{\n                padding: 5,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"exclamationcircleo\"\n                color=\"red\"\n                style={{ marginRight: 10 }}\n              />\n              <T>{getText(\"turnOnNotificationsText\")}</T>\n            </View>\n          </TouchableOpacity>\n        )}\n\n        <Carousel\n          ref={(c) => {\n            this._carousel = c;\n          }}\n          data={data}\n          renderItem={this._renderItem}\n          sliderWidth={width}\n          onSnapToItem={(index) => this.setState({ activeSlide: index })}\n          itemWidth={width}\n        />\n\n        <Pagination\n          dotsLength={data.length}\n          activeDotIndex={this.state.activeSlide}\n          // containerStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.75)\" }}\n          dotStyle={{\n            width: 10,\n            height: 10,\n            borderRadius: 5,\n            marginHorizontal: 8,\n            backgroundColor: \"rgba(255, 255, 255, 0.92)\",\n          }}\n          inactiveDotStyle={\n            {\n              // Define styles for inactive dots here\n            }\n          }\n          inactiveDotOpacity={0.4}\n          inactiveDotScale={0.6}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      device,\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    let appLink = null;\n    if (Platform.OS === \"web\") {\n      if (getMobileOperatingSystem() === \"android\") {\n        appLink = Constants.ANDROID_APP_URL;\n      }\n\n      if (getMobileOperatingSystem() === \"ios\") {\n        appLink = Constants.IOS_APP_URL;\n      }\n    }\n\n    if (Platform.OS === \"web\") {\n      if (isSmallDevice) {\n        return (\n          <ScrollView>\n            {appLink && (\n              <TouchableOpacity onPress={() => Linking.openURL(appLink)}>\n                <View\n                  style={{\n                    padding: 5,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <AntDesign\n                    name=\"exclamationcircleo\"\n                    color=\"red\"\n                    style={{ marginRight: 10 }}\n                  />\n                  <T>{getText(\"downloadTheApp\")}</T>\n                </View>\n              </TouchableOpacity>\n            )}\n\n            {this._renderItem({ item: filtered })}\n          </ScrollView>\n        );\n      } else {\n        return <T>{getText(\"welcomeBack\")}</T>;\n      }\n    }\n    return this.renderCarousel();\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst Sint = ({\n  screenProps,\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"sint\", {\n      token: device.loginToken,\n      captcha,\n    });\n    setResponse(response);\n  };\n\n  const minute = Math.round((me?.sintEndsAt - Date.now()) / (60 * 1000));\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <T>{response}</T>\n        ) : me?.sintEndsAt > Date.now() ? (\n          <T>{getText(\"sintWait\", minute)}</T>\n        ) : (\n          <View>\n            <Captcha\n              screenProps={screenProps}\n              captcha={captcha}\n              onChangeCaptcha={setCaptcha}\n              random={random}\n              onChangeRandom={setRandom}\n            />\n\n            <Button theme={theme} title={getText(\"sintCTA\")} onPress={submit} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default Sint;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, properties } from \"../Util\";\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    me,\n    reloadCities,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = getText(property);\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  <Button\n                    key={`index${index}${property}`}\n                    style={{ marginVertical: 15 }}\n                    theme={theme}\n                    title={getText(\"manage\")}\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: property,\n                        city: city.city,\n                      })\n                    }\n                  />\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </View>\n  );\n};\n\nexport default MyObjects;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, StyleSheet, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\nimport MyObjects from \"./MyObjects\";\n\nconst professionReleaseDate = moment(\"15/03/2021\", \"DD/MM/YYYY\").set(\n  \"hour\",\n  17\n);\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n\n        {me?.protectionAt > Date.now() ? (\n          <TouchableOpacity\n            onPress={() => {\n              //haalweg\n              fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ token: device.loginToken }),\n              })\n                .then((response) => response.json())\n                .then(async ({ response }) => {\n                  this.setState({ response });\n                  reloadMe(device.loginToken);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            <View>\n              <T>{getText(\"protectionInfo\", uur)}</T>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n\n        {me?.canChooseProfession &&\n          (moment().isAfter(professionReleaseDate) || me?.level > 1) && (\n            <View>\n              <T>{getText(\"statusCanChooseProfessionText\")}</T>\n              <Button\n                title={getText(\"statusCanChooseProfessionButton\")}\n                onPress={() => navigation.navigate(\"ChooseProfession\")}\n              />\n            </View>\n          )}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n\n        <MyObjects navigation={navigation} screenProps={screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bunker from \"./Bunker\";\nimport Sint from \"./Sint\";\nimport Status from \"./Status\";\nconst AllStats = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"status\",\n      title: getText(\"menuStatus\"),\n      component: Status,\n    },\n    {\n      key: \"bunker\",\n      title: getText(\"menuBunker\"),\n      component: Bunker,\n    },\n    {\n      key: \"sint\",\n      title: getText(\"menuSint\"),\n      component: Sint,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1 }}>\n        <Component {...props} />\n      </View>\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllStats;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 1.000.000 kogels kosten Hoe dit wordt berekend, is\n        geheim, maar het ligt aan deze factoren: Voor de aanvaller: Het wapen,\n        de moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels\n        je nodig zult hebben. Voor de verdediger: De verdediging, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe meer kogels de\n        aanvaller nodig zal hebben. De rang heeft de meeste invloed, daarna het\n        wapen, de verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Coffeeshop, Leger des Heils en het Sex shop krijgen 20% van iedereens\n        inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React, { Component } from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n    this.props.screenProps.reloadCities();\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n                this.fetchMembers();\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, reloadCities, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"jail\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Lotto = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"lottoDay\");\n  const buy = async () => {\n    const { response } = await post(\"buyLotto\", {\n      token: device.loginToken,\n      amount,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <T>{getText(\"youHaveDayTickets\", me?.lottoDay)}</T>\n            <T>{getText(\"youHaveWeekTickets\", me?.lottoWeek)}</T>\n            <T>{getText(\"youHaveMonthTickets\", me?.lottoMonth)}</T>\n\n            <T bold style={{ marginTop: 20 }}>\n              {getText(\"buy\")}\n            </T>\n            <View style={{ flexDirection: \"row\" }}>\n              <TextInput\n                style={[style(theme).textInput, { flex: 1 }]}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <Button\n                style={{ marginVertical: 10, marginLeft: 10 }}\n                title={\n                  type === \"lottoDay\"\n                    ? getText(\"dayLotto\")\n                    : type === \"lottoWeek\"\n                    ? getText(\"weekLotto\")\n                    : getText(\"monthLotto\")\n                }\n                onPress={() => {\n                  setType(\n                    type === \"lottoDay\"\n                      ? \"lottoWeek\"\n                      : type === \"lottoWeek\"\n                      ? \"lottoMonth\"\n                      : \"lottoDay\"\n                  );\n                }}\n              />\n            </View>\n\n            <Button\n              theme={theme}\n              title={getText(\"buy\")}\n              onPress={() => buy()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Lotto;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = getText(type);\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport styles from \"../Style\";\nimport {\n  darkerHex,\n  doOnce,\n  get,\n  getTextFunction,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\n\nconst SIZE = 250;\nconst MARGIN = 20;\n\nconst Market = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [market, setMarket] = useState([]);\n\n  //new offer\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [buy, setBuy] = useState(false);\n  const [type, setType] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getMarket = async () => {\n    setLoading(true);\n\n    const { market } = await get(`market`);\n    setLoading(false);\n    setMarket(market);\n  };\n\n  const postMarketCreateOffer = async () => {\n    setLoading(true);\n    const { response } = await post(\"marketCreateOffer\", {\n      token: device.loginToken,\n      type,\n      price,\n      amount,\n      buy,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  const postMarketTransaction = async (offerId) => {\n    setLoading(true);\n    const { response } = await post(\"marketTransaction\", {\n      token: device.loginToken,\n      offerId,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  const postMarketRemoveOffer = async (offerId) => {\n    setLoading(true);\n    const { response } = await post(\"marketRemoveOffer\", {\n      token: device.loginToken,\n      offerId,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  doOnce(getMarket);\n\n  const chooseType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const validTypes = [\"junkies\", \"hoeren\", \"wiet\", \"gamepoints\", \"bullets\"];\n\n    const options = validTypes.map((type) => getText(type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < validTypes.length) {\n          setType(validTypes[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {response && <T>{response}</T>}\n      </View>\n\n      <View style={{ flex: 1 }}>\n        {/* New offer */}\n\n        <View style={{ marginVertical: 20 }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Button\n              title={buy ? getText(\"buy\") : getText(\"sell\")}\n              onPress={() => setBuy(!buy)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={amount}\n              onChangeText={setAmount}\n              placeholder={getText(\"amount\")}\n            />\n\n            <Button\n              title={type ? getText(type) : getText(\"whatType\")}\n              onPress={chooseType}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <T style={{ marginLeft: 10 }}>{getText(\"for\")}</T>\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={price}\n              onChangeText={setPrice}\n              placeholder={getText(\"price\")}\n            />\n\n            <Button\n              title={getText(\"submit\")}\n              onPress={() => postMarketCreateOffer(true)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n          </View>\n        </View>\n\n        <FlatList\n          refreshControl={\n            <RefreshControl refreshing={loading} onRefresh={getMarket} />\n          }\n          data={market}\n          numColumns={\n            Platform.OS === \"web\"\n              ? undefined\n              : Math.floor(width / (SIZE + MARGIN * 2))\n          }\n          contentContainerStyle={\n            Platform.OS === \"web\"\n              ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n              : undefined\n          }\n          keyExtractor={(item, index) => `offer${index}`}\n          renderItem={({ item, index }) => {\n            return (\n              <View\n                style={{\n                  width: SIZE,\n                  backgroundColor: darkerHex(theme.primary),\n                  borderRadius: 15,\n                  padding: MARGIN,\n                  margin: MARGIN,\n                }}\n              >\n                {item.userId === me?.id && (\n                  <TouchableOpacity\n                    style={{ alignSelf: \"flex-end\" }}\n                    onPress={() => postMarketRemoveOffer(item.id)}\n                  >\n                    <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n                  </TouchableOpacity>\n                )}\n                <View style={{ flex: 1 }}>\n                  <T>\n                    {item.isBuy ? getText(\"requested\") : getText(\"forSale\")}\n                  </T>\n                </View>\n\n                <User navigation={navigation} user={item.user} />\n\n                <T>\n                  {item.amount} {getText(item.type)}\n                </T>\n                <T>€{numberFormat(item.price)},-</T>\n\n                <Button\n                  title={item.isBuy ? getText(\"sell\") : getText(\"buy\")}\n                  onPress={() => postMarketTransaction(item.id)}\n                />\n              </View>\n            );\n          }}\n        />\n\n        <View style={{ height: 80 }} />\n      </View>\n    </View>\n  );\n};\n\nexport default Market;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React, { useState } from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Gang from \"../components/Gang\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [gangs, setGangs] = useState([]);\n  const getGangs = async () => {\n    const { gangs } = await get(\"police\");\n    setGangs(gangs);\n  };\n  doOnce(getGangs);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      {gangs.map((gang) => {\n        return (\n          <View style={{ flex: 1 }}>\n            <Grid style={{ marginTop: 20 }}>\n              <Col>\n                <Gang gang={gang} navigation={navigation} />\n              </Col>\n\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>\n                  {gang.bullets} {getText(\"bullets\")}\n                </T>\n              </Col>\n            </Grid>\n            {gang.users.map((user) => (\n              <Grid style={{ marginTop: 10 }}>\n                <Col>\n                  <User navigation={navigation} user={user} size={40} />\n                </Col>\n              </Grid>\n            ))}\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst Settings = ({\n  navigation,\n  screenProps: {\n    dispatch,\n    me,\n    reloadMe,\n    device,\n    device: { theme },\n  },\n}) => {\n  const alertAlert = React.useContext(AlertContext);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView>\n      {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n      {__DEV__ && (\n        <Menu\n          theme={theme}\n          theme={theme}\n          IconFont=\"Ionicons\"\n          icon=\"ios-notifications\"\n          navigation={navigation}\n          title={getText(\"purge\")}\n          onPress={() =>\n            alertAlert(\n              getText(\"areYouSure\"),\n              getText(\"areYouSure\"),\n              [\n                {\n                  text: getText(\"ok\"),\n                  onPress: () => dispatch({ type: \"PURGE\" }),\n                },\n                {\n                  text: getText(\"cancel\"),\n                },\n              ],\n              { key: \"purge\" }\n            )\n          }\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        IconFont=\"Entypo\"\n        icon=\"phone\"\n        navigation={navigation}\n        title={getText(\"verifyPhone\")}\n        to=\"VerifyPhone\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuChangePassword\")}\n        to=\"ChangePassword\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"onepassword\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"signupEmail\")}\n        to=\"SignupEmail\"\n        IconFont=\"Entypo\"\n        icon=\"email\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"changeName\")}\n        to=\"ChangeName\"\n        IconFont=\"FontAwesome\"\n        icon=\"bank\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"layout\")}\n        to=\"Theme\"\n        IconFont=\"Ionicons\"\n        icon=\"ios-color-palette\"\n      />\n\n      {me?.level >= 2 && (\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={`Turn ${me?.newVersion ? \"off\" : \"on\"} new version`}\n          IconFont=\"Entypo\"\n          icon=\"new\"\n          onPress={async () => {\n            const { response } = await post(\"updateProfile\", {\n              loginToken: device.loginToken,\n              newVersion: !me?.newVersion,\n            });\n            reloadMe(device.loginToken);\n            alert(response);\n          }}\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuLogin\")}\n        IconFont=\"Entypo\"\n        icon=\"login\"\n        onPress={() => dispatch({ type: \"SET_LOGGED\", value: false })}\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuBackfire\")}\n        to=\"Backfire\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"pistol\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuAccomplice\")}\n        to=\"Accomplice\"\n        IconFont=\"FontAwesome\"\n        icon=\"universal-access\"\n      />\n    </ScrollView>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Info from \"./Info\";\nimport Police from \"./Police\";\nimport Settings from \"./Settings\";\nconst More = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"settings\",\n      title: getText(\"menuSettings\"),\n      component: Settings,\n    },\n    {\n      key: \"info\",\n      title: getText(\"menuInfo\"),\n      component: Info,\n    },\n    {\n      key: \"police\",\n      title: getText(\"menuPolice\"),\n      component: Police,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1 }}>\n        <Component {...props} />\n      </View>\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default More;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst MyProfile = ({\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n    reloadMe,\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [photo, setPhoto] = useState(null);\n  const [image, setImage] = useState(me?.image);\n\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [bio, setBio] = useState(me?.bio || \"\");\n\n  doOnce(() => {\n    getPermissionAsync();\n    fetchImages();\n  });\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${me.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleChooseImage = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleUploadPhoto = (pic) => {\n    fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: pic.uri,\n        token: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        fetchImages();\n        alert(getText(\"success\"));\n        setPhoto(null);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      console.log(\"result\", result);\n\n      if (!result.cancelled) {\n        setPhoto(result);\n        handleUploadPhoto(result);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderItem = ({ item, index }) => {\n    const uri = Constants.SERVER_ADDR + \"/\" + item.image;\n    return (\n      <TouchableOpacity onPress={() => setSelectedImage(item.id)}>\n        <View>\n          <Image\n            source={{ uri }}\n            style={{\n              width: 200,\n              height: 200,\n              ...(selectedImage === item.id\n                ? { borderWidth: 2, borderColor: \"black\" }\n                : {}),\n            }}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderFooter = () => {\n    return (\n      <Button\n        title={getText(\"delete\")}\n        onPress={() => {\n          if (selectedImage) {\n            fetch(`${Constants.SERVER_ADDR}/deleteimage`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                id: selectedImage,\n              }),\n            })\n              .then((response) => response.json())\n              .then(({ images }) => {\n                fetchImages();\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } else {\n            alert(getText(\"noPictureSelected\"));\n          }\n        }}\n      />\n    );\n  };\n\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n        margin: 20,\n      }}\n    >\n      <TouchableOpacity onPress={handleChooseImage}>\n        {image ? (\n          <Image\n            source={{\n              uri: image.includes(\"data:image\")\n                ? image\n                : Constants.SERVER_ADDR + image,\n            }}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        )}\n      </TouchableOpacity>\n\n      <TextInput\n        placeholderTextColor={theme.secondaryTextSoft}\n        style={[style(theme).textInput, { width: \"100%\", height: 200 }]}\n        multiline={true}\n        numberOfLines={4}\n        value={bio}\n        onChangeText={(x) => setBio(x)}\n      />\n      <Button\n        title={getText(\"save\")}\n        style={{ marginVertical: 20 }}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              bio: bio,\n              image,\n              loginToken: device.loginToken,\n            }),\n          })\n            .then((response) => response.json())\n            .then((response) => {\n              alert(getText(\"success\"));\n              reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.log(\"upload error\", error);\n              alert(getText(\"somethingWentWrong\"));\n            });\n        }}\n      />\n\n      <Button\n        style={{ marginVertical: 20 }}\n        title={getText(\"choosePicture\")}\n        onPress={handleChoosePhoto}\n      />\n\n      {images.map((image, index) => renderItem({ item: image, index }))}\n\n      {renderFooter()}\n    </ScrollView>\n  );\n};\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Oc = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    ocs,\n    reloadOcs,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(() => reloadOcs(loginToken));\n  doOnce(fetchRacecars);\n\n  const join = async (ocId) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadOcs(loginToken);\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (ocId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    reloadOcs(loginToken);\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (ocId) => {\n    setLoading(true);\n    const { response } = await post(\"startOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadOcs(loginToken);\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={\n            item.type === \"bank\"\n              ? require(\"../../assets/bank.jpg\")\n              : item.type === \"cars\"\n              ? require(\"../../assets/cars.jpeg\")\n              : require(\"../../assets/shootout.jpeg\")\n          }\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.ocParticipants.length}/\n            {item.numParticipants}\n          </T>\n          {item.ocParticipants.length > 0 && (\n            <T>{item.ocParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          <View style={{ flexDirection: \"row\" }}>\n            {!!item.ocParticipants.find((x) => x.name === me?.name) ? (\n              item.ocParticipants.length === item.numParticipants ? (\n                <Button\n                  theme={theme}\n                  title={getText(\"startCTA\")}\n                  onPress={() => start(item.id)}\n                />\n              ) : (\n                <Button\n                  theme={theme}\n                  title={getText(\"leaveCTA\")}\n                  onPress={() => leave(item.id)}\n                />\n              )\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"participate\")}\n                onPress={() => {\n                  join(item.id);\n                }}\n              />\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity onPress={() => navigation.navigate(\"CreateOc\")}>\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadOcs(loginToken);\n              setResponse(null);\n            }}\n          />\n        }\n        data={ocs}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Oc;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","// import color from \"markdown-it-color-text\";\nimport center from \"markdown-it-center-text\";\nimport emoji from \"markdown-it-emoji\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Linking,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Markdown, { MarkdownIt } from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n  post,\n} from \"../Util\";\n\nconst markdownItInstance = MarkdownIt({ typographer: true })\n  // .use(taskLists)\n  .use(emoji)\n  .use(center);\n// .use(color);\n\nconst Bio = React.memo(({ bio, theme }) => {\n  return (\n    <Markdown\n      debugPrintTree\n      markdownit={markdownItInstance}\n      style={{ body: { color: theme.primaryText } }}\n      rules={{\n        blocklink: (node, children, parent, styles) => {\n          return (\n            <TouchableOpacity\n              key={node.key}\n              onPress={() => {\n                if (Platform.OS == \"web\") {\n                  window.open(node.attributes.href, \"_blank\");\n                } else {\n                  Linking.openURL(node.attributes.href); // normal Linking react-native\n                }\n              }}\n            >\n              {children}\n            </TouchableOpacity>\n          );\n        },\n\n        image: (node, children, parent, styles) => {\n          const [width, setWidth] = useState(0);\n          const [height, setHeight] = useState(0);\n          Image.getSize(node.attributes.src, (width, height) => {\n            setWidth(width);\n            setHeight(height);\n          });\n\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <Image\n              key={node.key}\n              source={{ uri: node.attributes.src }}\n              style={{ width: width, height: height }}\n              resizeMode=\"contain\"\n            />\n          );\n        },\n\n        emoji: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return <Text key={node.key}>{node.content}</Text>;\n        },\n\n        centertext: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View\n              key={node.key}\n              style={{\n                flex: 1,\n                alignItems: \"center\",\n              }}\n            >\n              {children}\n            </View>\n          );\n        },\n\n        paragraph: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View key={node.key} style={{ flex: 1 }}>\n              {children}\n            </View>\n          );\n        },\n\n        textgroup: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View key={node.key} style={{ flex: 1 }}>\n              {children}\n            </View>\n          );\n        },\n      }}\n    >\n      {bio}\n    </Markdown>\n  );\n});\nconst ProfileScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    device: { theme, loginToken },\n  },\n}) => {\n  const [profile, setProfile] = useState({});\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const name = params?.name;\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    getProfile(name);\n  });\n  doOnce(reloadCities);\n\n  useEffect(() => {\n    getProfile(name);\n  }, [params?.name]);\n\n  useEffect(() => {\n    fetchImages();\n  }, [profile?.id]);\n\n  const postReport = async () => {\n    const { response } = await post(\"report\", {\n      token: device.loginToken,\n      userId: profile?.id,\n      ban: \"reported\",\n      banReason: \"profile\",\n    });\n\n    setResponse(response);\n  };\n\n  const getProfile = (name) => {\n    setLoading(true);\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        setProfile(responseJson);\n        setLoading(false);\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${profile?.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (loading) {\n    return <ActivityIndicator />;\n  }\n\n  if (!profile) {\n    return <T>{getText(\"personDoesntExist\")}</T>;\n  }\n\n  const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n  const color = getUserColor(profile, device.theme);\n\n  const uri = Constants.SERVER_ADDR + profile?.image;\n  const hasImage = !!profile?.image;\n\n  const properties = [\n    {\n      name: \"bulletFactory\",\n    },\n    {\n      name: \"casino\",\n    },\n    {\n      name: \"rld\",\n    },\n    {\n      name: \"landlord\",\n    },\n    {\n      name: \"junkies\",\n    },\n    {\n      name: \"weaponShop\",\n    },\n    {\n      name: \"airport\",\n    },\n    {\n      name: \"estateAgent\",\n    },\n    {\n      name: \"garage\",\n    },\n    {\n      name: \"jail\",\n    },\n    {\n      name: \"bank\",\n    },\n  ];\n\n  const PROFESSIONS = [\n    { type: \"thief\", image: require(\"../../assets/profession/thief.jpg\") },\n    {\n      type: \"carthief\",\n      image: require(\"../../assets/profession/carthief.jpg\"),\n    },\n    {\n      type: \"weedgrower\",\n      image: require(\"../../assets/profession/weedgrower.jpg\"),\n    },\n    { type: \"killer\", image: require(\"../../assets/profession/killer.jpg\") },\n    { type: \"pimp\", image: require(\"../../assets/profession/pimp.jpg\") },\n    { type: \"banker\", image: require(\"../../assets/profession/banker.jpg\") },\n    {\n      type: \"jailbreaker\",\n      image: require(\"../../assets/profession/jailbreaker.jpg\"),\n    },\n  ];\n  const profession = profile?.profession\n    ? PROFESSIONS.find((p) => p.type === profile.profession)\n    : null;\n\n  const professionReleaseDate = moment(\"15/03/2021\", \"DD/MM/YYYY\").set(\n    \"hour\",\n    17\n  );\n  const alertAlert = React.useContext(AlertContext);\n\n  return (\n    <ScrollView>\n      <View style={{ justifyContent: \"center\" }}>\n        <View\n          style={{\n            backgroundColor: \"#444\",\n            borderRadius: 10,\n            margin: 20,\n            padding: 20,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n          {response && <T>{response}</T>}\n          {hasImage ? (\n            <View>\n              <Image\n                source={{ uri }}\n                style={{\n                  width: \"100%\",\n                  height: 400,\n                }}\n                resizeMode=\"contain\"\n              />\n            </View>\n          ) : null}\n\n          {profile?.gang ? (\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"Gang\", { name: profile?.gang?.name });\n              }}\n            >\n              <T>Gang</T>\n              {profile?.gang?.image && (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + profile?.gang?.image }}\n                  style={{ width: 200, height: 200 }}\n                  resizeMode=\"contain\"\n                />\n              )}\n              <T>{profile?.gang?.name}</T>\n            </TouchableOpacity>\n          ) : null}\n\n          {profession && moment().isAfter(professionReleaseDate) && (\n            <View style={{ width: 100, margin: 20 }}>\n              <Image\n                source={profession.image}\n                style={{ width: 100, height: 100 }}\n                resizeMode=\"contain\"\n              />\n              <View>\n                <T bold>{getText(profession.type)}</T>\n              </View>\n            </View>\n          )}\n\n          {keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n          {keyValue(\n            getText(\"lastOnline\"),\n            moment(profile?.onlineAt).format(\"DD-MM-YYYY\")\n          )}\n          {keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n          {keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n          {keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n          {keyValue(\n            getText(\"strength\"),\n            getStrength(profile?.strength, \"both\")\n          )}\n          {keyValue(getText(\"health\"), `${profile?.health}%`)}\n          {keyValue(getText(\"weed\"), profile?.wiet)}\n          {keyValue(getText(\"junkies\"), profile?.junkies)}\n          {keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n          <T bold>{getText(\"properties\")}</T>\n          {properties\n            .map((p) => p.name)\n            .map((property) => {\n              return (\n                cities &&\n                cities.map((city, index) => {\n                  const ownerKey = `${property}Owner`;\n                  if (profile?.name === city[ownerKey]) {\n                    return (\n                      <T>\n                        {getText(property)} in {city.city}\n                      </T>\n                    );\n                  }\n\n                  return null;\n                })\n              );\n            })}\n\n          <View style={styles.row}>\n            <Button\n              title={getText(\"chat\")}\n              onPress={async () => {\n                const { id } = await get(\n                  `pm?loginToken=${loginToken}&userId=${profile.id}`\n                );\n\n                navigation.navigate(\"Channel\", { id });\n              }}\n            />\n\n            <Button\n              title={getText(\"rob\")}\n              onPress={() =>\n                navigation.navigate(\"Rob\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"attack\")}\n              onPress={() =>\n                navigation.navigate(\"Kill\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"donate\")}\n              onPress={() =>\n                navigation.navigate(\"Donate\", {\n                  to: profile.name,\n                })\n              }\n            />\n\n            <Button\n              title={getText(\"report\")}\n              onPress={() =>\n                alertAlert(\n                  getText(\"areYouSure\"),\n                  getText(\"areYouSure\"),\n                  [\n                    { text: getText(\"ok\"), onPress: () => postReport() },\n                    { text: getText(\"cancel\") },\n                  ],\n                  { key: \"postReport\" }\n                )\n              }\n            />\n          </View>\n        </View>\n\n        <View style={{ marginVertical: 20 }}>\n          {profile?.ban !== \"shadowBanned\" && profile?.ban !== \"banned\" && (\n            <Bio theme={theme} bio={profile?.bio} />\n          )}\n        </View>\n\n        <View>\n          {images.map((image) => {\n            const uri = Constants.SERVER_ADDR + \"/\" + image.image;\n            return (\n              <View>\n                <Image\n                  source={{ uri }}\n                  style={{\n                    width: \"100%\",\n                    height: 400,\n                  }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n            );\n          })}\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst ProtectionShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"protection\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default ProtectionShop;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Reports = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [reports, setReports] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [banReason, setBanReason] = useState(\"\");\n\n  const postReport = async (ban, userId) => {\n    const { response } = await post(\"report\", {\n      token: device.loginToken,\n      userId,\n      ban,\n      banReason,\n    });\n\n    setResponse(response);\n    getReports();\n  };\n\n  const getReports = async () => {\n    const { reports } = await get(`reports?token=${device.loginToken}`);\n    setReports(reports);\n  };\n\n  doOnce(getReports);\n\n  console.log(\"reports\", reports);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          {reports?.map?.((user) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <User user={user} size={40} navigation={navigation} />\n\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{getText(user.ban)}</T>\n                <T>\n                  {getText(\"reason\")}: {user.banReason}\n                </T>\n                <Button\n                  title={getText(\"ban\")}\n                  onPress={() => postReport(\"banned\", user.id)}\n                />\n                <Button\n                  title={getText(\"shadowBan\")}\n                  onPress={() => postReport(\"shadowBanned\", user.id)}\n                />\n                <TouchableOpacity onPress={() => postReport(\"none\", user.id)}>\n                  <Entypo name=\"cross\" color=\"red\" size={33} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Reports;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nimport { RobberyTypes } from \"./CreateRobbery\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Robbery = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    robberies,\n    reloadRobberies,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadRobberies);\n  doOnce(fetchRacecars);\n\n  const join = async (robberyId) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadRobberies();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (robberyId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    reloadRobberies();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (robberyId) => {\n    setLoading(true);\n    const { response } = await post(\"startRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadRobberies();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const type = RobberyTypes.find((x) => x.type === item.type);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={type.image}\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.robberyParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{type.cost},-\n          </T>\n          <T>\n            {getText(\"profit\")}: €{type.profit * item.numParticipants},-\n          </T>\n\n          <T>\n            {getText(\"difficulty\")}: {type.difficulty}\n          </T>\n          {item.robberyParticipants.length > 0 &&\n            item.robberyParticipants.map((p) => (\n              <User user={p.user} navigation={navigation} size={40} />\n            ))}\n\n          {!!item.robberyParticipants.find((x) => x?.user?.id === me?.id) ? (\n            item.robberyParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                join(item.id);\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateRobbery\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadRobberies();\n              setResponse(null);\n            }}\n          />\n        }\n        data={robberies}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Robbery;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={seconds}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          <T>\n            {getText(\"addedPrizeMoney\")}: €{item.prize},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Original\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          // reloadMe(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Switch, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nconst SuperMessage = ({ screenProps: { me, device } }) => {\n  const [response, setResponse] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [schedule, setSchedule] = useState(false);\n  const [date, setDate] = useState(moment().format(\"DD/MM/YYYY\"));\n\n  //for admin\n  const [scheduled, setScheduled] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [dates, setDates] = useState({});\n\n  const getScheduled = async () => {\n    if (me?.level === 10) {\n      const { scheduled, response } = await get(\n        `scheduled?token=${device.loginToken}`\n      );\n      if (scheduled) {\n        setScheduled(scheduled);\n        setMessages(\n          scheduled.reduce(\n            (previous, current) => ({\n              ...previous,\n              [current.id]: current.message,\n            }),\n            {}\n          )\n        );\n\n        setDates(\n          scheduled.reduce(\n            (previous, current) => ({\n              ...previous,\n              [current.id]: moment(current.date).format(\"DD/MM/YYYY\"),\n            }),\n            {}\n          )\n        );\n      }\n    }\n  };\n  doOnce(getScheduled);\n\n  const saveScheduled = async (id) => {\n    const { response } = await post(\"updateScheduled\", {\n      token: device.loginToken,\n      message: messages[id],\n      date: moment(dates[id], \"DD/MM/YYYY\").set(\"hours\", 17).valueOf(),\n      id,\n    });\n\n    getScheduled();\n\n    setResponse(response);\n  };\n  const sendMessage = () => {\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        date: date\n          ? moment(date, \"DD/MM/YYYY\").set(\"hours\", 17).valueOf()\n          : undefined,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResponse(response?.response);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n      {response ? <T>{response}</T> : null}\n\n      {me?.level === 10 && (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Switch value={schedule} onValueChange={setSchedule} />\n          {schedule && (\n            <TextInput\n              style={style(device.theme).textInput}\n              placeholder={getText(\"date\")}\n              placeholderTextColor={device.theme.secondaryTextSoft}\n              value={date}\n              onChangeText={setDate}\n            />\n          )}\n        </View>\n      )}\n      <TextInput\n        style={[style(device.theme).textInput, { height: 200 }]}\n        placeholder={getText(\"message\")}\n        placeholderTextColor={device.theme.secondaryTextSoft}\n        multiline\n        value={message}\n        onChangeText={setMessage}\n      />\n\n      <Button\n        theme={device.theme}\n        style={{ marginVertical: 10 }}\n        title={getText(\"send\")}\n        onPress={sendMessage}\n      />\n\n      {me?.level === 10 && (\n        <View>\n          <H1>{getText(\"scheduled\")}</H1>\n\n          {scheduled?.map((message, index) => {\n            return (\n              <View key={`message${index}`} style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  style={[\n                    style(device.theme).textInput,\n                    { height: 100, width: 200, flex: 1 },\n                  ]}\n                  placeholder={getText(\"message\")}\n                  placeholderTextColor={device.theme.secondaryTextSoft}\n                  multiline\n                  value={messages[message.id]}\n                  onChangeText={(msg) =>\n                    setMessages({ ...messages, [message.id]: msg })\n                  }\n                />\n\n                <TextInput\n                  style={[\n                    style(device.theme).textInput,\n                    { marginHorizontal: 10, height: 40 },\n                  ]}\n                  placeholder={getText(\"date\")}\n                  placeholderTextColor={device.theme.secondaryTextSoft}\n                  value={dates[message.id]}\n                  onChangeText={(date) =>\n                    setDates({ ...dates, [message.id]: date })\n                  }\n                />\n\n                <Button\n                  theme={device.theme}\n                  style={{ marginVertical: 10 }}\n                  title={getText(\"send\")}\n                  onPress={() => saveScheduled(message.id)}\n                />\n              </View>\n            );\n          })}\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst WeaponShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"weapon\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default WeaponShop;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps,\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(1);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", {\n      token: device.loginToken,\n      captcha,\n      option: selected,\n    });\n    setResponse(response);\n  };\n\n  const minute = Math.round((me?.workEndsAt - Date.now()) / (60 * 1000));\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <T>{response}</T>\n        ) : me?.workEndsAt > Date.now() ? (\n          <T>{getText(\"workWait\", minute)}</T>\n        ) : (\n          <View>\n            {options.map((option, index) => {\n              return (\n                <TouchableOpacity\n                  onPress={() => setSelected(index + 1)}\n                  key={`key${index}`}\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    paddingVertical: 10,\n                    paddingHorizontal: 10,\n                    borderRadius: 5,\n                  }}\n                >\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Checkbox active={selected === index + 1} />\n                    <T style={{ marginLeft: 10 }}>{option.title}</T>\n                  </View>\n                  <T>\n                    {option.hours} {getText(\"hours\")}\n                  </T>\n                </TouchableOpacity>\n              );\n            })}\n\n            <Captcha\n              screenProps={screenProps}\n              captcha={captcha}\n              onChangeCaptcha={setCaptcha}\n              random={random}\n              onChangeRandom={setRandom}\n            />\n\n            <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n          </View>\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Work;\n","import React from \"react\";\nimport Accomplice from \"../screens/Accomplice\";\nimport AdminEmail from \"../screens/AdminEmail\";\nimport AdminUserWatch from \"../screens/AdminUserWatch\";\nimport AirplaneShop from \"../screens/AirplaneShop\";\nimport Airport from \"../screens/Airport\";\nimport AllAirport from \"../screens/AllAirport\";\nimport AllBanks from \"../screens/AllBanks\";\nimport AllBulletfactory from \"../screens/AllBulletfactory\";\nimport AllGang from \"../screens/AllGang\";\nimport AllGarage from \"../screens/AllGarage\";\nimport AllStats from \"../screens/AllStats\";\nimport Backfire from \"../screens/Backfire\";\nimport Bank from \"../screens/Bank\";\nimport Blocks from \"../screens/Blocks\";\nimport Bomb from \"../screens/Bomb\";\nimport Bulletfactory from \"../screens/Bulletfactory\";\nimport Bunker from \"../screens/Bunker\";\nimport Casino from \"../screens/Casino\";\nimport ChangeName from \"../screens/ChangeName\";\nimport ChangePassword from \"../screens/ChangePassword\";\nimport Channel from \"../screens/Channel\";\nimport Channels from \"../screens/Channels\";\nimport Chat from \"../screens/Chat\";\nimport ChooseProfession from \"../screens/ChooseProfession\";\nimport Code from \"../screens/Code\";\nimport Contribute from \"../screens/Contribute\";\nimport CreateOc from \"../screens/CreateOC\";\nimport CreateRobbery from \"../screens/CreateRobbery\";\nimport CreateStreetrace from \"../screens/CreateStreetrace\";\nimport Crimes from \"../screens/Crimes\";\nimport Detectives from \"../screens/Detectives\";\nimport Donate from \"../screens/Donate\";\nimport DownloadApp from \"../screens/DownloadApp\";\nimport EstateAgent from \"../screens/EstateAgent\";\nimport ForgotPassword from \"../screens/ForgotPassword\";\nimport Forum from \"../screens/Forum\";\nimport Gang from \"../screens/Gang\";\nimport GangAchievements from \"../screens/GangAchievements\";\nimport GangBulletFactory from \"../screens/GangBulletFactory\";\nimport GangCreate from \"../screens/GangCreate\";\nimport GangMissions from \"../screens/GangMissions\";\nimport Gangs from \"../screens/Gangs\";\nimport GangSettings from \"../screens/GangSettings\";\nimport GangShop from \"../screens/GangShop\";\nimport Garage from \"../screens/Garage\";\nimport GarageShop from \"../screens/GarageShop\";\nimport Gym from \"../screens/Gym\";\nimport Hackers from \"../screens/Hackers\";\nimport Hoeren from \"../screens/Hoeren\";\nimport Home from \"../screens/Home\";\nimport Hospital from \"../screens/Hospital\";\nimport House from \"../screens/House\";\nimport Income from \"../screens/Income\";\nimport Info from \"../screens/Info\";\nimport InfoGame from \"../screens/InfoGame\";\nimport InfoRules from \"../screens/InfoRules\";\nimport Jail from \"../screens/Jail\";\nimport Junkies from \"../screens/Junkies\";\nimport Kill from \"../screens/Kill\";\nimport Login from \"../screens/Login\";\nimport Lotto from \"../screens/Lotto\";\nimport ManageObject from \"../screens/ManageObject\";\nimport Market from \"../screens/Market\";\nimport Members from \"../screens/Members\";\nimport MollieComplete from \"../screens/MollieComplete\";\nimport More from \"../screens/More\";\nimport MyObjects from \"../screens/MyObjects\";\nimport MyProfile from \"../screens/MyProfile\";\nimport OC from \"../screens/OC\";\nimport Poker from \"../screens/Poker\";\nimport Police from \"../screens/Police\";\nimport Privacy from \"../screens/Privacy\";\nimport Prizes from \"../screens/Prizes\";\nimport Profile from \"../screens/Profile\";\nimport Properties from \"../screens/Properties\";\nimport ProtectionShop from \"../screens/ProtectionShop\";\nimport Racecars from \"../screens/Racecars\";\nimport RecoverPassword from \"../screens/RecoverPassword\";\nimport Reports from \"../screens/Reports\";\nimport Rob from \"../screens/Rob\";\nimport Robbery from \"../screens/Robbery\";\nimport Settings from \"../screens/Settings\";\nimport Shop from \"../screens/Shop\";\nimport SignupEmail from \"../screens/SignupEmail\";\nimport SignupEmail2 from \"../screens/SignupEmail2\";\nimport Sint from \"../screens/Sint\";\nimport Stats from \"../screens/Stats\";\nimport Status from \"../screens/Status\";\nimport StealCar from \"../screens/StealCar\";\nimport Streetrace from \"../screens/Streetrace\";\nimport SwissBank from \"../screens/SwissBank\";\nimport Theme from \"../screens/Theme\";\nimport VerifyPhone from \"../screens/VerifyPhone\";\nimport VerifyPhoneCode from \"../screens/VerifyPhoneCode\";\nimport VIP from \"../screens/VIP\";\nimport WeaponShop from \"../screens/WeaponShop\";\nimport Wiet from \"../screens/Wiet\";\nimport Work from \"../screens/Work\";\n\nexport const screens = {\n  Stats,\n  Channels,\n  More,\n  Profile,\n  Members,\n  Gangs,\n  Prizes,\n  Properties,\n  Settings,\n  Info,\n  Police,\n  VIP,\n  Accomplice,\n  AdminEmail,\n  AdminUserWatch,\n  AirplaneShop,\n  Airport,\n  AllAirport,\n  AllBanks,\n  AllBulletfactory,\n  AllGang,\n  AllGarage,\n  AllStats,\n  Backfire,\n  Bank,\n  Blocks,\n  Bulletfactory,\n  Bunker,\n  Casino,\n  ChangeName,\n  ChangePassword,\n  Channel,\n  Chat,\n  ChooseProfession,\n  Code,\n  Contribute,\n  CreateOc,\n  CreateRobbery,\n  CreateStreetrace,\n  Crimes,\n  Detectives,\n  Donate,\n  DownloadApp,\n  EstateAgent,\n  ForgotPassword,\n  Bomb,\n  Forum,\n  Gang,\n  GangAchievements,\n  GangBulletFactory,\n  GangCreate,\n  GangMissions,\n  GangSettings,\n  GangShop,\n  Garage,\n  GarageShop,\n  Gym,\n  Hackers,\n  Hoeren,\n  Home,\n  Hospital,\n  House,\n  Income,\n  InfoGame,\n  InfoRules,\n  Jail,\n  Junkies,\n  Kill,\n  Login,\n  Lotto,\n  ManageObject,\n  Market,\n  MollieComplete,\n  MyObjects,\n  MyProfile,\n  OC,\n  Poker,\n  Privacy,\n  ProtectionShop,\n  Racecars,\n  RecoverPassword,\n  Reports,\n  Rob,\n  Robbery,\n  Shop,\n  SignupEmail,\n  SignupEmail2,\n  Sint,\n  Status,\n  StealCar,\n  SwissBank,\n  Theme,\n  Streetrace,\n  VerifyPhone,\n  VerifyPhoneCode,\n  WeaponShop,\n  Wiet,\n  Work,\n};\n\nconst Screen = ({ navigation, screenProps }) => {\n  const screen = navigation.state.routeName;\n\n  const Component = screens[screen];\n  return <Component navigation={navigation} screenProps={screenProps} />;\n};\n\nexport default Screen;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Platform, Text, TouchableOpacity, View } from \"react-native\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, numberFormat } from \"../Util\";\n\nconst StatsHeader = React.memo(({ me, device, navigation }) => {\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: \"white\",\n  };\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n  const showNotActivated = me?.phoneVerified === false && me?.numActions >= 20;\n\n  const notActivated = showNotActivated && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const renderNotVerified = !me?.phoneVerified && (\n    <View\n      style={{\n        padding: 5,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <TouchableOpacity\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => navigation.navigate(\"VerifyPhone\")}\n      >\n        <AntDesign\n          name=\"exclamationcircleo\"\n          color=\"red\"\n          style={{ marginRight: 10 }}\n        />\n        <Text\n          style={{\n            color: device.theme.secondaryText,\n            fontWeight: \"bold\",\n          }}\n        >\n          {getText(\"headerVerifyYourAccount\")}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    updateComponent ||\n    notActivated || (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Profile\", { name: me?.name })}\n        >\n          <Text style={textStyle}>\n            {me?.name} {me?.gang?.name}\n          </Text>\n        </TouchableOpacity>\n\n        {me?.gangId && (\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate(\"Gang\", { name: me?.gang?.name })\n            }\n          >\n            <Text style={textStyle}>{me?.gang?.name}</Text>\n          </TouchableOpacity>\n        )}\n        <Text style={textStyle}>❤️ {me?.health}%</Text>\n\n        <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n        <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon.MaterialCommunityIcons\n            name=\"pistol\"\n            size={18}\n            color={device.theme.secondaryText}\n            style={{ marginRight: 5 }}\n          />\n          <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n        </View>\n        <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n        <Text style={textStyle}>\n          ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n        </Text>\n\n        {renderNotVerified}\n      </View>\n    )\n  );\n});\n\nexport default StatsHeader;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport React, { useMemo, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Platform,\n  SafeAreaView,\n  StatusBar,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Swiper from \"react-native-web-swiper\";\nimport { useDispatch } from \"react-redux\";\nimport Chat from \"../components/Chat\";\nimport Dead from \"../components/Dead\";\nimport Fly from \"../components/Fly\";\nimport Jail from \"../components/Jail\";\nimport User from \"../components/User\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport ActionsBar from \"./ActionsBar\";\nimport BottomTabs from \"./BottomTabs\";\nimport MapIcon from \"./MapIcon\";\nimport { animateToCity, getZoom } from \"./MapUtil\";\nimport Menus from \"./Menus\";\nimport Modal from \"./Modal\";\nimport Screen from \"./Screen\";\nimport StatsHeader from \"./StatsHeader\";\n\nconst window = Dimensions.get(\"window\");\n\nconst Overlay = ({\n  screenProps,\n  navigation,\n  map,\n  view,\n  setView,\n  setZoom,\n  device,\n  me,\n  selected,\n  setSelected,\n  objects,\n  dragAndDropMode,\n  setDragAndDropMode,\n  territoriesSwiperRefContainer,\n  propertiesSwiperRefContainer,\n  cityAreas,\n  areas,\n  reloadCities,\n  reloadMe,\n  city,\n  selectedAreaIndex,\n  setSelectedAreaIndex,\n}) => {\n  const dispatch = useDispatch();\n  const window = Dimensions.get(\"window\");\n  const isSmallDevice = window.width < 800;\n  const { showActionSheetWithOptions } = useActionSheet();\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n\n  const [headerHeight, setHeaderHeight] = useState(0);\n\n  const selectedArea =\n    selectedAreaIndex !== undefined\n      ? areas?.find((x) => x.code === cityAreas.areas[selectedAreaIndex]?.code)\n      : null;\n  // console.log(\"render overlay\");\n\n  const openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = [\n      getText(\"killSomeone\"),\n      getText(\"robSomeone\"),\n      getText(\"organizeStreetrace\"),\n      getText(\"organizeRobbery\"),\n    ];\n\n    if (me?.gangId) {\n      options.push(getText(\"organizeOC\"));\n    }\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex === 0) {\n          navigation.navigate(\"Kill\");\n        } else if (buttonIndex === 1) {\n          navigation.navigate(\"Rob\");\n        } else if (buttonIndex === 2) {\n          navigation.navigate(\"CreateStreetrace\");\n        } else if (buttonIndex === 3) {\n          navigation.navigate(\"CreateRobbery\");\n        } else if (buttonIndex === 4 && me?.gangId) {\n          navigation.navigate(\"CreateOc\");\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const territoriesSwiperChildren = useMemo(\n    () => [\n      <View style={{ flex: 1 }}>\n        <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"bold\" }}>\n          {me?.city}: {cityAreas.areas.length} {getText(\"territories\")}\n        </Text>\n      </View>,\n      ...cityAreas.areas.map((area, index) => {\n        const connectedArea = areas?.find((x) => x.code === area.code);\n\n        return (\n          <View key={`page${index}`} style={{ height: 150, flex: 1 }}>\n            <Grid>\n              <Col>\n                <Text style={{ color: \"white\" }}>{getText(\"area\")}</Text>\n              </Col>\n              <Col size={2}>\n                <Text style={{ color: \"white\" }}>{area.name}</Text>\n              </Col>\n            </Grid>\n            <Grid>\n              <Col>\n                <Text style={{ color: \"white\" }}>{getText(\"owner\")}</Text>\n              </Col>\n              <Col size={2}>\n                {connectedArea?.user && (\n                  <User\n                    size={40}\n                    user={connectedArea.user}\n                    navigation={navigation}\n                  />\n                )}\n              </Col>\n            </Grid>\n\n            <Grid>\n              <Col>\n                <Text style={{ color: \"white\" }}>{getText(\"damage\")}</Text>\n              </Col>\n              <Col size={2}>\n                <Text style={{ color: \"white\" }}>\n                  {connectedArea?.damage}% {getText(\"damage\")}\n                </Text>\n              </Col>\n            </Grid>\n\n            <Text style={{ color: \"white\" }}></Text>\n          </View>\n        );\n      }),\n    ],\n    [areas]\n  );\n\n  const territoriesSwiperKey = useMemo(() => Math.random().toString(), [areas]);\n\n  const onTerritoriesIndexChanged = (position) => {\n    if (position === 0) {\n      //should animate to whole city\n      animateToCity({ map, dispatch, city });\n      setSelected(null);\n      setSelectedAreaIndex(null);\n    } else {\n      setSelected(\"area\");\n      setSelectedAreaIndex(position - 1);\n\n      const area = cityAreas.areas[position - 1];\n      // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n      if (Platform.OS === \"web\") {\n        map.panTo({\n          lat: area.centerLatitude,\n          lng: area.centerLongitude,\n        });\n        const biggestDelta =\n          area.latitudeDelta > area.longitudeDelta\n            ? area.latitudeDelta\n            : area.longitudeDelta;\n\n        setZoom(getZoom(biggestDelta));\n      } else {\n        map.animateToRegion({\n          latitude: area.centerLatitude,\n          longitude: area.centerLongitude,\n          latitudeDelta: area.latitudeDelta,\n          longitudeDelta: area.longitudeDelta,\n        });\n      }\n    }\n    //improve this once i have centers.\n  };\n\n  const renderTerritoriesSwiper = (\n    <View style={{ height: 150 }}>\n      <Swiper\n        controlsEnabled={false}\n        key={territoriesSwiperKey}\n        ref={territoriesSwiperRefContainer}\n        style={{ flex: 1 }}\n        from={selectedAreaIndex + 1}\n        onIndexChanged={onTerritoriesIndexChanged}\n      >\n        {territoriesSwiperChildren}\n      </Swiper>\n    </View>\n  );\n\n  const propertiesSwiperFirstPage = (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"bold\" }}>\n        {me?.city}\n      </Text>\n    </View>\n  );\n\n  const swiper1Children = useMemo(\n    () => [\n      propertiesSwiperFirstPage,\n\n      ...objects.map((object, index) => {\n        const keyValue = (key, value) => {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                paddingHorizontal: 20,\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{key}</Text>\n              <Text style={{ color: \"white\" }}>{value}</Text>\n            </View>\n          );\n        };\n        if (object.type === \"house\") {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n              }}\n            >\n              <View style={{ flex: 1 }}>\n                {keyValue(getText(\"cash\"), `€${numberFormat(me?.cash)}`)}\n                {keyValue(getText(\"bank\"), `€${numberFormat(me?.bank)}`)}\n                {keyValue(getText(\"gamepoints\"), numberFormat(me?.gamepoints))}\n                {keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n                {keyValue(\n                  getText(\"strength\"),\n                  getStrength(me?.strength, \"both\")\n                )}\n              </View>\n\n              <View style={{ flex: 1 }}>\n                {keyValue(getText(\"health\"), `${me?.health}%`)}\n                {keyValue(getText(\"bullets\"), numberFormat(me?.bullets))}\n                {keyValue(getText(\"weed\"), numberFormat(me?.wiet))}\n                {keyValue(getText(\"junkies\"), numberFormat(me?.junkies))}\n                {keyValue(getText(\"prostitutes\"), numberFormat(me?.hoeren))}\n              </View>\n            </View>\n          );\n        }\n\n        if (object.type === \"headquarter\") {\n          return me?.gangId ? (\n            <View\n              style={{\n                flexDirection: \"row\",\n              }}\n            >\n              <View style={{ flex: 1 }}>\n                {keyValue(getText(\"gang\"), `${me?.gang?.name}`)}\n                {keyValue(getText(\"bank\"), `€${numberFormat(me?.gang?.bank)}`)}\n                {keyValue(getText(\"bullets\"), numberFormat(me?.gang?.bullets))}\n                {keyValue(getText(\"members\"), `${me?.gang?.members}`)}\n              </View>\n\n              <View style={{ flex: 1 }}></View>\n            </View>\n          ) : null;\n        }\n\n        const owner = city?.[`${object.type}Owner`];\n        const damage = city?.[`${object.type}Damage`];\n        const profit = city?.[`${object.type}Profit`];\n\n        const ownerProfile = owner ? (\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"Profile\", { name: owner })}\n          >\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>{owner}</Text>\n          </TouchableOpacity>\n        ) : (\n          <Text style={{ fontWeight: \"bold\", color: \"white\" }}>\n            ({getText(\"none\")})\n          </Text>\n        );\n\n        return (\n          <View key={`page${index}`} style={{ flex: 1 }}>\n            {owner !== undefined && (\n              <Grid>\n                <Col>\n                  <Text style={{ color: \"white\" }}>\n                    {getText(object.type)} {getText(\"owner\")}\n                  </Text>\n                </Col>\n                <Col>{ownerProfile}</Col>\n              </Grid>\n            )}\n\n            {profit !== undefined && (\n              <Grid>\n                <Col>\n                  <Text style={{ color: \"white\" }}>\n                    {getText(object.type)} {getText(\"profit\")}\n                  </Text>\n                </Col>\n                <Col>\n                  <Text style={{ color: \"white\" }}>\n                    €{numberFormat(profit)},-\n                  </Text>\n                </Col>\n              </Grid>\n            )}\n            {damage !== undefined && (\n              <Grid>\n                <Col>\n                  <Text style={{ color: \"white\" }}>\n                    {getText(object.type)} {getText(\"damage\")}\n                  </Text>\n                </Col>\n                <Col>\n                  <Text style={{ color: \"white\" }}>{damage}%</Text>\n                </Col>\n              </Grid>\n            )}\n          </View>\n        );\n      }),\n    ],\n    [me?.city, city]\n  );\n  const keyValue = useMemo(() => Math.random().toString(), [swiper1Children]);\n\n  const selectedIndex = useMemo(\n    () => objects.findIndex((x) => x.type === selected),\n    [swiper1Children]\n  );\n  const renderPropertiesSwiper = (\n    <View style={{ height: 100 }}>\n      <Swiper\n        controlsEnabled={false}\n        key={keyValue}\n        ref={propertiesSwiperRefContainer}\n        style={{ flex: 1 }}\n        from={selectedIndex !== -1 ? selectedIndex + 1 : 0}\n        onIndexChanged={(position) => {\n          if (position === 0) {\n            //should animate to whole city\n            animateToCity({ map, dispatch, city });\n            setSelected(null);\n          } else {\n            const object = objects[position - 1];\n            setSelected(object.type);\n          }\n          //improve this once i have centers.\n        }}\n      >\n        {swiper1Children}\n      </Swiper>\n    </View>\n  );\n\n  const currentObject = objects.find((x) => x.type === selected);\n  const title =\n    view === \"game\" || view === \"territories\"\n      ? selected === \"area\"\n        ? selectedArea?.name\n        : currentObject\n        ? getText(currentObject?.title)\n        : \"\"\n      : \"\";\n\n  const renderHeader = (\n    <View\n      style={{\n        position: \"absolute\",\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        top: 0,\n        left: 0,\n        right: 0,\n        padding: 5,\n      }}\n      onLayout={({\n        nativeEvent: {\n          layout: { width, height },\n        },\n      }) => {\n        setHeaderHeight(height);\n      }}\n    >\n      <SafeAreaView\n        style={{\n          marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n        }}\n      >\n        {view === \"territories\" ? (\n          renderTerritoriesSwiper\n        ) : view === \"game\" ? (\n          renderPropertiesSwiper\n        ) : view === \"crimes\" || view === \"stats\" ? (\n          <StatsHeader navigation={navigation} device={device} me={me} />\n        ) : null}\n        {!isSmallDevice && (\n          <Chat me={me} device={device} navigation={navigation} />\n        )}\n      </SafeAreaView>\n    </View>\n  );\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Channels\",\n    \"Channel\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n    \"Market\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  return (\n    <>\n      <Menus\n        areas={screenProps.areas}\n        channels={screenProps.channels}\n        city={city}\n        cityAreas={cityAreas}\n        setSelectedAreaIndex={setSelectedAreaIndex}\n        map={map}\n        setSelected={setSelected}\n        setZoom={setZoom}\n        setView={setView}\n        dispatch={dispatch}\n        device={device}\n        me={me}\n        navigation={navigation}\n      >\n        {renderHeader}\n\n        <View style={{ position: \"absolute\", left: 10, bottom: 135 }}>\n          <Text style={{ fontSize: 30, fontWeight: \"bold\" }}>{title}</Text>\n        </View>\n\n        {view === \"crimes\" && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: headerHeight + 10,\n              left: 5,\n            }}\n          >\n            <MapIcon\n              view={{\n                icon: Icon.AntDesign,\n                iconName: \"plus\",\n                isActive: false,\n                onPress: openActionSheet,\n              }}\n            />\n          </View>\n        )}\n\n        {!isSmallDevice && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: headerHeight + 10,\n              right: 5,\n            }}\n          >\n            <MapIcon\n              view={{\n                icon: Icon.Entypo,\n                iconName: \"menu\",\n                isActive: false,\n                onPress: () =>\n                  dispatch({\n                    type: \"SET_MENU_SHOWN\",\n                    value: !device.menuShown,\n                  }),\n              }}\n            />\n          </View>\n        )}\n\n        {loading && (\n          <View\n            style={{\n              position: \"absolute\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              top: 0,\n              bottom: 0,\n              left: 0,\n              right: 0,\n            }}\n          >\n            <ActivityIndicator color=\"black\" size=\"large\" />\n          </View>\n        )}\n\n        <View\n          style={{\n            position: \"absolute\",\n            top: headerHeight + 60,\n\n            right: 5,\n            backgroundColor: \"rgba(0,0,0,0.5)\",\n            borderRadius: 20,\n          }}\n        >\n          {me?.reizenAt > Date.now() && (\n            <View style={{ flexDirection: \"row\", padding: 10 }}>\n              <Icon.Ionicons name=\"ios-airplane\" color=\"white\" size={24} />\n\n              <CountDown\n                until={Math.round((me?.reizenAt - Date.now()) / 1000)}\n                onFinish={() => {\n                  // reloadMe(device.loginToken);\n                }}\n                size={10}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            </View>\n          )}\n\n          {me?.jailAt > Date.now() && (\n            <View style={{ flexDirection: \"row\", padding: 10 }}>\n              <Icon.FontAwesome name=\"bars\" color=\"white\" size={24} />\n\n              <CountDown\n                until={Math.round((me?.jailAt - Date.now()) / 1000)}\n                onFinish={() => {\n                  // reloadMe(device.loginToken);\n                }}\n                size={10}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            </View>\n          )}\n\n          {me?.bunkerAt > Date.now() && (\n            <View style={{ flexDirection: \"row\", padding: 10 }}>\n              <Icon.FontAwesome name=\"shield\" color=\"white\" size={24} />\n\n              <CountDown\n                until={Math.round((me?.bunkerAt - Date.now()) / 1000)}\n                onFinish={() => {\n                  // reloadMe(device.loginToken);\n                }}\n                size={10}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            </View>\n          )}\n        </View>\n\n        <ActionsBar\n          selected={selected}\n          view={view}\n          city={city}\n          me={me}\n          device={device}\n          navigation={navigation}\n          setLoading={setLoading}\n          reloadMe={reloadMe}\n          reloadCities={reloadCities}\n          reloadAreas={screenProps.reloadAreas}\n          selectedArea={selectedArea}\n        />\n\n        {navigation.state.routeName ? (\n          <Modal\n            headerHeight={headerHeight}\n            view={view}\n            navigation={navigation}\n            setView={setView}\n          >\n            {me?.reizenAt > Date.now() && !skip ? (\n              <Fly screenProps={screenProps} navigation={navigation} />\n            ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n              <Dead screenProps={screenProps} navigation={navigation} />\n            ) : me?.jailAt > Date.now() && !skip ? (\n              <Jail screenProps={screenProps} navigation={navigation} />\n            ) : (\n              <Screen navigation={navigation} screenProps={screenProps} />\n            )}\n          </Modal>\n        ) : null}\n\n        <BottomTabs\n          getText={getText}\n          view={view}\n          setSelected={setSelected}\n          navigation={navigation}\n          setView={setView}\n          map={map}\n          setZoom={setZoom}\n          city={city}\n          dragAndDropMode={dragAndDropMode}\n          setDragAndDropMode={setDragAndDropMode}\n          level={me?.level}\n          chatBadgeCount={me?.chats}\n          territoriesBadgeCount={0}\n          crimesBadgeCount={0}\n          gameBadgeCount={0}\n        />\n\n        {/* \n        \n        <View\n          style={{\n            position: \"absolute\",\n            zIndex: 0,\n            bottom: 0,\n            left: 0,\n          }}\n        >\n          <Image\n            source={require(\"../../../assets/gangster2.png\")}\n            style={{ width: 300, height: 250 }}\n            resizeMode=\"contain\"\n          />\n\n          <Text\n            style={{ position: \"absolute\", top: 40, right: 35, width: 140 }}\n          >\n            He jij daar! Wat ben je aan het doen? Ga eens even snel een misdaad\n            doen! Klik onderin het menu op het tweede icoontje om naar het\n            misdaden overzicht te gaan.\n          </Text>\n        </View> */}\n      </Menus>\n    </>\n  );\n};\n\nexport default Overlay;\n","import {\n  Circle,\n  GoogleMap,\n  GroundOverlay,\n  LoadScript,\n  OverlayView,\n  Polygon,\n} from \"@react-google-maps/api\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Animated,\n  Dimensions,\n  LayoutAnimation,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport T from \"../components/T\";\nimport { doOnce, post } from \"../Util\";\nimport Logic from \"./Logic\";\nimport {\n  animateToCity,\n  API_KEY,\n  getObjectMeta,\n  getPosition,\n  getZoom,\n  objects,\n  OBJECT_SIZE_FACTOR,\n  rgbs,\n} from \"./MapUtil\";\nimport Overlay from \"./Overlay\";\nconst mapStyle = require(\"./mapStyle.json\");\nconst mapStyleNight = require(\"./mapStyleNight.json\");\n\nconst citiesAreas = require(\"../../assets/map/cities.json\");\n\nif (Platform.OS === \"android\") {\n  if (UIManager.setLayoutAnimationEnabledExperimental) {\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n}\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst ReactMap = ({ zoom, map, setMap, children, setMapReady }) => {\n  const dispatch = useDispatch();\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n    setMapReady(true);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return (\n    <LoadScript googleMapsApiKey={API_KEY}>\n      <GoogleMap\n        clickableIcons={false}\n        mapContainerStyle={containerStyle}\n        zoom={zoom}\n        onZoomChanged={() => {\n          const zoom = map?.getZoom();\n          // console.log(\"zoom changed to \", zoom);\n          dispatch({ type: \"SET_ZOOM\", value: zoom });\n        }}\n        //center={{ lat: city?.latitude, lng: city?.longitude }}\n        onLoad={onLoad}\n        options={{ disableDefaultUI: true }}\n        onUnmount={onUnmount}\n      >\n        {children}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nconst Territories = React.memo(\n  ({ territories, MapsComponent, onPress, opacity, selectedAreaIndex }) => {\n    return territories.map(({ area, userId, gangId }, index) => {\n      const number = gangId ? gangId : userId ? userId : 0;\n      const rgb = !number ? \"255,255,255\" : rgbs[number % (rgbs.length - 1)];\n      const key = `polygon${index}`;\n      const onClick = () => onPress(index);\n      const realOpacity = index === selectedAreaIndex ? 0.4 : opacity;\n\n      const fillColor = `rgba(${rgb},${realOpacity})`;\n      return Platform.OS === \"web\" ? (\n        <Polygon\n          key={key}\n          onClick={onClick}\n          path={area.map((x) => ({ lat: x.latitude, lng: x.longitude }))}\n          options={{ fillColor }}\n        />\n      ) : (\n        <MapsComponent.Polygon\n          key={key}\n          onPress={onClick}\n          tappable\n          coordinates={area}\n          fillColor={fillColor}\n        />\n      );\n    });\n  }\n);\n\nconst GameObjects = React.memo(\n  ({\n    city,\n    object,\n    index,\n    dragAndDropMode,\n    MapsComponent,\n    isSelected,\n    setSelected,\n    reloadCities,\n    cityAreas,\n    level,\n    gangMembers,\n    myName,\n    device,\n    junkiesIncomeAt,\n    landlordIncomeAt,\n    rldIncomeAt,\n  }) => {\n    // console.log(\"RENDER GAME OBJECT\", index);\n\n    const {\n      latitude,\n      longitude,\n      radius,\n      square,\n      bounds,\n      platformBounds,\n    } = getObjectMeta({ object, index, city, cityAreas });\n\n    const draggable = level >= 5;\n    const onDragEnd = async ({ nativeEvent: { coordinate } }) => {\n      const { response, success } = await post(\"moveBuilding\", {\n        loginToken: device.loginToken,\n        type: object.type,\n        latitude: coordinate.latitude,\n        longitude: coordinate.longitude,\n      });\n      reloadCities();\n      if (!success) {\n        Alert.alert(response);\n      }\n    };\n\n    const image = dragAndDropMode ? (\n      <Animated.Image\n        source={object.image}\n        style={{\n          width: object.animated,\n          height: object.animated,\n        }}\n        resizeMode=\"contain\"\n      />\n    ) : null;\n\n    const onPressObject = () => {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n      isSelected ? setSelected(null) : setSelected(object.type);\n    };\n    const owner = city?.[`${object.type}Owner`];\n\n    const isYours = owner === myName;\n    const isGang = gangMembers?.map((x) => x.name).includes(owner);\n    const hasDamage = city?.[`${object.type}Damage`] > 0;\n    const hasProfit = city?.[`${object.type}Profit`] > 0;\n\n    const incomeJunkies =\n      object.type === \"junkies\" &&\n      Math.floor((Date.now() - junkiesIncomeAt) / 3600000) > 0;\n    const incomeLandlord =\n      object.type === \"landlord\" &&\n      Math.floor((Date.now() - landlordIncomeAt) / 3600000) > 0;\n    const incomeRLD =\n      object.type === \"rld\" &&\n      Math.floor((Date.now() - rldIncomeAt) / 3600000) > 0;\n\n    const incomeToGet = incomeJunkies || incomeRLD || incomeLandlord;\n\n    const specialColor = isSelected\n      ? \"rgba(0,0,0,0.5)\"\n      : isYours && hasDamage\n      ? \"rgba(139,0,0,0.5)\"\n      : (isYours && hasProfit) || incomeToGet\n      ? \"rgba(255,255,0,0.5)\"\n      : isYours\n      ? \"rgba(0,0,255,0.5)\"\n      : !owner && object.type !== \"house\" && object.type !== \"headquarter\"\n      ? \"rgba(172,216,230,0.5)\" //lightblue\n      : hasDamage\n      ? \"rgba(255,0,0,0.5)\"\n      : isGang\n      ? \"rgba(0,255,0,0.5)\"\n      : null;\n\n    return Platform.OS === \"web\" ? (\n      <>\n        {specialColor ? (\n          <Circle\n            key={`circle${index}${isSelected}`}\n            center={{ lat: latitude, lng: longitude }}\n            radius={radius}\n            options={{ fillColor: specialColor, strokeColor: specialColor }}\n            onClick={onPressObject}\n          />\n        ) : null}\n\n        <GroundOverlay\n          onClick={onPressObject}\n          key={`overlay${index}${isSelected}`} //add selected to the key to ensure rerender after selected changes\n          url={object.image}\n          //dont use onpress on the overlay because it only works on android. use an invisible polygon instead at the same location\n          // tappable\n          // onPress={() => navigation.navigate(object.to)}\n          bounds={bounds}\n        />\n      </>\n    ) : dragAndDropMode ? (\n      <MapsComponent.Marker\n        draggable={draggable}\n        onDragEnd={onDragEnd}\n        key={`object${index}`}\n        coordinate={{ latitude, longitude }}\n      >\n        {image}\n      </MapsComponent.Marker>\n    ) : (\n      <>\n        {specialColor ? (\n          <MapsComponent.Circle\n            key={`circle${index}${isSelected}`}\n            center={{ latitude, longitude }}\n            radius={radius}\n            fillColor={specialColor}\n            strokeColor={specialColor}\n          />\n        ) : null}\n\n        <MapsComponent.Overlay\n          zIndex={1} //works for android to render it over the areas\n          key={`overlay${index}${isSelected}`} //add selected to the key to ensure rerender after selected changes\n          image={object.image}\n          //dont use onpress on the overlay because it only works on android. use an invisible polygon instead at the same location\n          // tappable\n          // onPress={() => navigation.navigate(object.to)}\n          bounds={platformBounds}\n        />\n\n        <MapsComponent.Polygon\n          key={`overlayPolygon${index}`}\n          onPress={onPressObject}\n          tappable\n          coordinates={square}\n          zIndex={2}\n          strokeWidth={0.00001}\n          // fillColor={`rgba(${rgb},${opacity})`}\n        />\n      </>\n    );\n  }\n);\n\n// GameObjects.whyDidYouRender = true;\n\nconst Map = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    cities,\n    areas,\n    me,\n    ocs,\n    dispatch,\n    reloadMe,\n    streetraces,\n    robberies,\n    reloadCities,\n    reloadStreetraces,\n    reloadOcs,\n    reloadRobberies,\n    reloadAreas,\n  },\n}) => {\n  doOnce(() => {\n    dispatch({ type: \"SET_ZOOM\", value: getZoom(city?.delta) });\n  });\n\n  const [dragAndDropMode, setDragAndDropMode] = useState(false);\n\n  const [selected, setSelected] = useState(null);\n  const [selectedAreaIndex, setSelectedAreaIndex] = useState(null); //index\n\n  const [map, setMap] = useState(null);\n  const [view, setView] = useState(\"game\");\n  const [region, setRegion] = useState({\n    latitude: 52.378, //amsterdam\n    longitude: 4.89707,\n    latitudeDelta: 0.05,\n    longitudeDelta: 0.05,\n  });\n  const city = React.useMemo(() => cities?.find((x) => x.city === me?.city), [\n    cities,\n    me?.city,\n  ]);\n  const [mapReady, setMapReady] = useState(false);\n\n  const territoriesSwiperRefContainer = useRef(null);\n  const propertiesSwiperRefContainer = useRef(null);\n\n  doOnce(reloadCities);\n\n  doOnce(() => reloadOcs(device.loginToken));\n  doOnce(reloadStreetraces);\n  doOnce(reloadRobberies);\n  useEffect(() => {\n    reloadAreas(me?.city);\n  }, [me?.city]);\n\n  const window = Dimensions.get(\"window\");\n\n  const cityAreas = citiesAreas.find((x) => x.city === me?.city);\n\n  const objectsWithAnimated = objects.map((object) => ({\n    ...object,\n    animated: useRef(\n      new Animated.Value(\n        (city?.delta * OBJECT_SIZE_FACTOR * object.size) / region.latitudeDelta\n      )\n    ).current,\n  }));\n\n  useEffect(() => {\n    if (selected === \"area\") {\n      territoriesSwiperRefContainer?.current?.goTo(selectedAreaIndex + 1);\n    } else if (selected) {\n      const index = objects.findIndex((o) => o.type === selected);\n      propertiesSwiperRefContainer?.current?.goTo(index + 1);\n    }\n  }, [selected, selectedAreaIndex]);\n\n  useEffect(() => {\n    if (map && city && mapReady) {\n      const reg = {\n        latitude: city?.latitude, //amsterdam\n        longitude: city?.longitude,\n        latitudeDelta: city?.delta,\n        longitudeDelta: city?.delta,\n      };\n      setRegion(reg);\n\n      animateToCity({ map, dispatch, city, delayZoom: true });\n      //map.fitToElements(true);\n    }\n  }, [me?.city, map, mapReady]);\n\n  const territories = React.useMemo(\n    () =>\n      cityAreas.areas.map((area) => {\n        const connectedArea = areas?.find((x) => x.code === area.code);\n\n        return {\n          ...area,\n          userId: connectedArea?.userId,\n          gangId: connectedArea?.gangId || connectedArea?.user?.gangId,\n        };\n      }),\n    [areas]\n  );\n\n  if (!me || !city) {\n    return <T>No city, no me</T>;\n  }\n  //useEffect(() => {\n  //map?.fitToElements(true);\n  //}, [view]);\n\n  const NativeMapsComponent = Platform.select({\n    native: () => require(\"react-native-maps\").default,\n    web: () => null,\n  })();\n\n  const crimeIcons = [\n    {\n      inactive: me?.autostelenAt + 60000 - Date.now() > 0,\n      to: \"StealCar\",\n      icon: \"🚘\",\n      type: \"stealcar\",\n    },\n\n    {\n      inactive: me?.crimeAt + 60000 - Date.now() > 0,\n      to: \"Crimes\",\n      icon: \"💰\",\n      type: \"crimes\",\n    },\n\n    {\n      inactive: me?.junkiesAt + 120000 - Date.now() > 0,\n      to: \"Junkies\",\n      icon: \"🧔\",\n      type: \"junkies\",\n    },\n\n    {\n      inactive: me?.hoerenAt + 120000 - Date.now() > 0,\n      to: \"Hoeren\",\n      icon: \"💃\",\n      type: \"hoeren\",\n    },\n    {\n      inactive: me?.workEndsAt - Date.now() > 0,\n      to: \"Work\",\n      icon: \"🛠\",\n      type: \"work\",\n    },\n\n    {\n      inactive: me?.wietAt + 120000 - Date.now() > 0,\n      to: \"Wiet\",\n      icon: \"🌳\",\n      type: \"wiet\",\n    },\n  ].filter((x) => !x.inactive);\n\n  const ocIcons = ocs\n    ?.filter((x) => x.city === me?.city)\n    .map((oc) => ({\n      icon: \"🔥\",\n      type: \"oc\",\n      to: \"OC\",\n      id: oc.id,\n      params: { id: oc.id },\n    }));\n  const streetraceIcons = streetraces\n    ?.filter((x) => x.city === me?.city)\n    .map((x) => ({\n      icon: \"🛣\",\n      type: \"streetrace\",\n      id: x.id,\n      to: \"Streetrace\",\n      params: { id: x.id },\n    }));\n\n  const robberyIcons = robberies\n    ?.filter((x) => x.city === me?.city)\n    .map((x) => ({\n      icon: \"🚨\",\n      type: \"robbery\",\n      to: \"Robbery\",\n      id: x.id,\n      params: { id: x.id },\n    }));\n\n  const icons = crimeIcons\n    .concat(ocIcons)\n    .concat(streetraceIcons)\n    .concat(robberyIcons)\n    .filter((x) => !!x);\n\n  const iconToMapIcon = (icon) => {\n    const position = getPosition(icon.id, icon.type); //0-1\n\n    const areaIndex = Math.floor(cityAreas.areas.length * position);\n\n    const area = cityAreas.areas[areaIndex];\n\n    const pseudoRandom = (x, y) => x + position * (y - x);\n\n    const latitude = pseudoRandom(\n      area.centerLatitude - area.latitudeDelta / 2,\n      area.centerLatitude + area.latitudeDelta / 2\n    );\n    const longitude = pseudoRandom(\n      area.centerLongitude - area.longitudeDelta / 2,\n      area.centerLongitude + area.longitudeDelta / 2\n    );\n\n    const onPress = () => navigation.resetTo(icon.to);\n\n    const theIcon = icon.icon;\n\n    const deltaLatitude = (city?.delta * 3) / 100; //width\n    const deltaLongitude = (city?.delta * 3) / 100;\n\n    const topLeftLatitude = latitude - deltaLatitude / 2;\n    const topLeftLongitude = longitude - deltaLongitude / 2;\n    const bottomRightLatitude = latitude + deltaLatitude / 2;\n    const bottomRightLongitude = longitude + deltaLongitude / 2;\n\n    const topRightLatitude = latitude + deltaLatitude / 2;\n    const topRightLongitude = longitude - deltaLongitude / 2;\n    const bottomLeftLatitude = latitude - deltaLatitude / 2;\n    const bottomLeftLongitude = longitude + deltaLongitude / 2;\n\n    const square = [\n      { lat: topLeftLatitude, lng: topLeftLongitude },\n      { lat: topRightLatitude, lng: topRightLongitude },\n      {\n        lat: bottomRightLatitude,\n        lng: bottomRightLongitude,\n      },\n      { lat: bottomLeftLatitude, lng: bottomLeftLongitude },\n    ];\n\n    return {\n      onPress,\n      icon: theIcon,\n      latitude,\n      longitude,\n      square,\n    };\n  };\n\n  const rightObjects = React.useMemo(\n    () => (dragAndDropMode ? objectsWithAnimated : objects),\n    [dragAndDropMode, region.latitudeDelta]\n  );\n  const renderGame = React.useMemo(\n    () =>\n      rightObjects.map((object, index) => {\n        const isSelected = selected === object.type;\n\n        return (\n          <GameObjects\n            gangMembers={me?.gangMembers}\n            key={`game${object.type}`}\n            MapsComponent={NativeMapsComponent}\n            city={city}\n            dragAndDropMode={dragAndDropMode}\n            object={object}\n            index={index}\n            isSelected={isSelected}\n            cityAreas={cityAreas}\n            setSelected={setSelected}\n            reloadCities={reloadCities}\n            level={me?.level}\n            device={device}\n            myName={me?.name}\n            junkiesIncomeAt={me?.junkiesIncomeAt}\n            landlordIncomeAt={me?.landlordIncomeAt}\n            rldIncomeAt={me?.rldIncomeAt}\n          />\n        );\n      }),\n    [\n      rightObjects,\n      selected,\n      city,\n      dragAndDropMode,\n      cityAreas.city,\n      me?.name,\n      me?.level,\n      device,\n    ]\n  );\n\n  const renderTerritories = React.useMemo(() => {\n    return (\n      <Territories\n        opacity={view === \"territories\" ? 0.8 : 0.2}\n        onPress={\n          view === \"territories\"\n            ? (index) => {\n                setSelected(\"area\");\n                setSelectedAreaIndex(index);\n              }\n            : () => null\n        }\n        selectedAreaIndex={selectedAreaIndex}\n        territories={territories}\n        MapsComponent={NativeMapsComponent}\n      />\n    );\n  }, [view, territories, selectedAreaIndex]);\n\n  const renderCrimes = icons\n    .map(iconToMapIcon)\n    .map(({ onPress, icon, latitude, longitude, square }, index) => {\n      //random positions on the first territorium\n      const view = (\n        <TouchableOpacity onPress={onPress} style={{ alignItems: \"center\" }}>\n          <Text style={{ fontSize: 24 }}>{icon}</Text>\n        </TouchableOpacity>\n      );\n      return Platform.OS === \"web\" ? (\n        <OverlayView\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n          // onClick={onPress}\n          key={`icon${index}`}\n          position={{ lat: latitude, lng: longitude }}\n        >\n          {view}\n        </OverlayView>\n      ) : (\n        <NativeMapsComponent.Marker\n          key={`icon${index}`}\n          onPress={onPress}\n          coordinate={{ latitude, longitude }}\n        >\n          {view}\n        </NativeMapsComponent.Marker>\n      );\n    });\n\n  const renderAllMapObjects = React.useMemo(() => {\n    const shouldRenderTerritories =\n      Platform.OS === \"web\" ? view === \"territories\" : true;\n    return (\n      <>\n        {shouldRenderTerritories && renderTerritories}\n        {/* NB: areas.length moet geladen zijn voor renderGame, anders rendert hij de teritoriums over de game heen */}\n        {(view === \"stats\" ||\n          view === \"more\" ||\n          view === \"game\" ||\n          view === \"chat\") &&\n          areas.length > 0 &&\n          renderGame}\n\n        {view === \"crimes\" && renderCrimes}\n      </>\n    );\n  }, [view, renderTerritories, renderGame, renderCrimes, areas.length]);\n\n  const renderMapsComponentNative = () => {\n    return (\n      <NativeMapsComponent\n        pitchEnabled={false}\n        rotateEnabled={false}\n        onMapReady={() => {\n          console.log(\"map ready\");\n          setMapReady(true);\n        }}\n        // provider={PROVIDER_GOOGLE}\n        customMapStyle={\n          Platform.OS === \"android\"\n            ? moment().hour() > 18 && moment().hour() < 7\n              ? mapStyleNight\n              : mapStyle\n            : undefined\n        }\n        ref={(map) => setMap(map)}\n        initialRegion={region}\n        onRegionChange={(r) => {\n          setRegion(r);\n\n          if (dragAndDropMode) {\n            objectsWithAnimated.forEach((object) => {\n              Animated.timing(object.animated, {\n                toValue:\n                  (city?.delta * OBJECT_SIZE_FACTOR * object.size) /\n                  r.latitudeDelta,\n                duration: 100,\n                useNativeDriver: false,\n              }).start();\n            });\n          }\n        }}\n        style={StyleSheet.absoluteFill}\n      >\n        {renderAllMapObjects}\n      </NativeMapsComponent>\n    );\n  };\n\n  const setZoom = (zoom) => dispatch({ type: \"SET_ZOOM\", value: zoom });\n\n  const renderOverlay = (\n    <Overlay\n      screenProps={screenProps}\n      map={map}\n      view={view}\n      setView={setView}\n      selected={selected}\n      setSelected={setSelected}\n      setSelectedAreaIndex={setSelectedAreaIndex}\n      selectedAreaIndex={selectedAreaIndex}\n      device={device}\n      me={me}\n      dragAndDropMode={dragAndDropMode}\n      setDragAndDropMode={setDragAndDropMode}\n      territoriesSwiperRefContainer={territoriesSwiperRefContainer}\n      propertiesSwiperRefContainer={propertiesSwiperRefContainer}\n      cityAreas={cityAreas}\n      areas={areas}\n      navigation={navigation}\n      city={city}\n      objects={objects}\n      reloadMe={reloadMe}\n      reloadCities={reloadCities}\n      setZoom={setZoom}\n    />\n  );\n\n  return Platform.OS === \"web\" ? (\n    <Logic screenProps={screenProps} navigation={navigation}>\n      <View style={{ flex: 1 }}>\n        <ReactMap\n          map={map}\n          setMap={setMap}\n          zoom={device.map.zoom}\n          setMapReady={setMapReady}\n        >\n          {renderAllMapObjects}\n        </ReactMap>\n        {renderOverlay}\n      </View>\n    </Logic>\n  ) : (\n    <Logic screenProps={screenProps} navigation={navigation}>\n      <View style={{ flex: 1 }}>\n        {renderMapsComponentNative()}\n        {renderOverlay}\n      </View>\n    </Logic>\n  );\n};\n\nexport default Map;\n","import React, { useState } from \"react\";\nimport { Linking, Platform } from \"react-native\";\nimport { doOnce } from \"../Util\";\nimport Map from \"./Map\";\nimport { screens } from \"./Screen\";\n\nconst Container = ({ screenProps }) => {\n  const initialNavigationState = {\n    params: null,\n    routeName: null,\n    history: [],\n  };\n  const [navigationState, setNavigationState] = useState(\n    initialNavigationState\n  );\n  doOnce(() => {\n    Linking.addEventListener(\"url\", openWebUrl);\n    Linking.getInitialURL().then((url) => openWebUrl(url));\n  });\n  const openWebUrl = (url) => {\n    const parts = url.split(\"://\")[1].split(\"/\");\n    //parts is now [\"masercrimez.com\",\"#\",\"Junkies\",\"param\"]\n    const routeName = parts[2];\n    const params = parts[3] ? { param: parts[3] } : undefined;\n\n    if (Object.keys(screens).includes(routeName)) {\n      setNavigationState({\n        history: [{ routeName, params }],\n        routeName,\n        params,\n      });\n    }\n  };\n\n  const navigation = {\n    navigate: (routeName, params) => {\n      const newHistory = navigationState.history.concat([\n        { routeName, params },\n      ]);\n      setNavigationState({ history: newHistory, routeName, params });\n      if (Platform.OS === \"web\") {\n        window.history.pushState(routeName, routeName, `/#/${routeName}`);\n      }\n    },\n\n    resetTo: (routeName, params) => {\n      const newHistory = [{ routeName, params }];\n      setNavigationState({ history: newHistory, routeName, params });\n      if (Platform.OS === \"web\") {\n        window.history.pushState(routeName, routeName, `/#/${routeName}`);\n      }\n    },\n\n    state: navigationState,\n    popToTop: () => {\n      setNavigationState(initialNavigationState);\n      if (Platform.OS === \"web\") {\n        window.history.pushState(\"home\", \"Home\", \"/#/\");\n      }\n    },\n    goBack: () => {\n      navigationState.history.pop();\n      setNavigationState({\n        history: navigationState.history,\n        ...(navigationState.history.length > 0\n          ? navigationState.history[navigationState.history.length - 1]\n          : {}),\n      });\n    },\n  };\n\n  return <Map navigation={navigation} screenProps={screenProps} />;\n};\n\nexport default Container;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchRobberies = (payload) => {\n  return get(\"robberies\");\n};\n\nconst fetchOcs = (payload) => {\n  return get(`ocs?token=${payload.token}`);\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchChannels = (payload) => {\n  return get(`channelsubs?loginToken=${payload.token}`);\n};\n\nconst fetchAreas = (payload) => {\n  return get(`areas?city=${payload.city}`);\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      // console.log(\"got me\", me);\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = {\n  fetchMe,\n  fetchCities,\n  fetchStreetraces,\n  fetchOcs,\n  fetchRobberies,\n  fetchAreas,\n  fetchChannels,\n};\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchRobberies(action) {\n  try {\n    const { robberies } = yield call(Api.fetchRobberies, action.payload);\n\n    yield put({ type: \"ROBBERIES_FETCH_SUCCEEDED\", robberies });\n  } catch (e) {\n    yield put({ type: \"ROBBERIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchOcs(action) {\n  try {\n    const { ocs } = yield call(Api.fetchOcs, action.payload);\n\n    yield put({ type: \"OCS_FETCH_SUCCEEDED\", ocs });\n  } catch (e) {\n    yield put({ type: \"OCS_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchChannels(action) {\n  try {\n    const channels = yield call(Api.fetchChannels, action.payload);\n\n    yield put({ type: \"CHANNELS_FETCH_SUCCEEDED\", channels });\n  } catch (e) {\n    yield put({ type: \"CHANNELS_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchAreas(action) {\n  try {\n    const { areas } = yield call(Api.fetchAreas, action.payload);\n\n    yield put({ type: \"AREAS_FETCH_SUCCEEDED\", areas });\n  } catch (e) {\n    yield put({ type: \"AREAS_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"CHANNELS_FETCH_REQUESTED\", fetchChannels);\n  yield takeLatest(\"AREAS_FETCH_REQUESTED\", fetchAreas);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n  yield takeLatest(\"OCS_FETCH_REQUESTED\", fetchOcs);\n  yield takeLatest(\"ROBBERIES_FETCH_REQUESTED\", fetchRobberies);\n}\n\nexport default mySaga;\n","import { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\n\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  menuShown: Boolean,\n  movements: Movement[],\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: false,\n  theme: DEFAULT_THEME,\n  isConnected: 2,\n  menuShown: false,\n  foregrounded: 0,\n  movements: [],\n  menu: {\n    left: [0, 1, 2, 3, 4, 5, 6],\n    right: [0, 1, 2, 3, 4, 5, 6],\n  },\n  map: {\n    zoom: 12,\n  },\n  showNotificatonsHeader: false,\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"SET_SHOW_NOTIFICATIONS_HEADER\": {\n      return { ...state, showNotificatonsHeader: action.value };\n    }\n    case \"MENU_SET_RIGHT_ACTIVE_SECTIONS\": {\n      return { ...state, menu: { left: state.menu.left, right: action.value } };\n    }\n    case \"MENU_SET_LEFT_ACTIVE_SECTIONS\": {\n      return {\n        ...state,\n        menu: { right: state.menu.right, left: action.value },\n      };\n    }\n\n    case \"SET_IS_CONNECTED\": {\n      return { ...state, isConnected: action.value };\n    }\n\n    case \"SET_ZOOM\": {\n      return { ...state, map: { ...state.map, zoom: action.value } };\n    }\n\n    case \"SET_MENU_SHOWN\": {\n      return { ...state, menuShown: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN_AND_LOGIN\": {\n      return { ...initDevice, loginToken: action.value, logged: true };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      return action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initRobberies = null;\nconst robberiesReducer = (state = initRobberies, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initRobberies;\n    }\n\n    case \"ROBBERIES_FETCH_SUCCEEDED\": {\n      return action.robberies;\n    }\n\n    case \"ROBBERIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initOcs = null;\nconst ocsReducer = (state = initOcs, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initOcs;\n    }\n\n    case \"OCS_FETCH_SUCCEEDED\": {\n      return action.ocs;\n    }\n\n    case \"OCS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initAreas = [];\nconst areasReducer = (state = initAreas, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initAreas;\n    }\n    case \"AREAS_FETCH_SUCCEEDED\": {\n      return action.areas;\n    }\n    case \"AREAS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initChannels = [];\nconst channelsReducer = (state = initChannels, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initChannels;\n    }\n    case \"CHANNELS_FETCH_SUCCEEDED\": {\n      return action.channels;\n    }\n    case \"CHANNELS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\n    \"device\",\n    \"me\",\n    \"streetraces\",\n    \"cities\",\n    \"ocs\",\n    \"robberies\",\n    \"areas\",\n    \"channels\",\n  ],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n  ocs: ocsReducer,\n  robberies: robberiesReducer,\n  areas: areasReducer,\n  channels: channelsReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport React from \"react\";\nimport { Dimensions, Platform } from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { AlertProvider } from \"./components/AlertProvider\";\nimport ConnectionProvider from \"./components/ConnectionProvider\";\nimport { IntervalProvider } from \"./components/IntervalProvider\";\nimport { CustomDrawerContentComponent, withLayout } from \"./Layout\";\nimport NewContainer from \"./layout/Container\";\nimport Accomplice from \"./screens/Accomplice\";\nimport AdminEmail from \"./screens/AdminEmail\";\nimport AdminUserWatch from \"./screens/AdminUserWatch\";\nimport AirplaneShop from \"./screens/AirplaneShop\";\nimport Airport from \"./screens/Airport\";\nimport AllAirport from \"./screens/AllAirport\";\nimport AllBanks from \"./screens/AllBanks\";\nimport AllBulletfactory from \"./screens/AllBulletfactory\";\nimport AllGang from \"./screens/AllGang\";\nimport AllGarage from \"./screens/AllGarage\";\nimport AllStats from \"./screens/AllStats\";\nimport Backfire from \"./screens/Backfire\";\nimport Bank from \"./screens/Bank\";\nimport Blocks from \"./screens/Blocks\";\nimport Bomb from \"./screens/Bomb\";\nimport Bulletfactory from \"./screens/Bulletfactory\";\nimport Bunker from \"./screens/Bunker\";\nimport Casino from \"./screens/Casino\";\nimport ChangeName from \"./screens/ChangeName\";\nimport ChangePassword from \"./screens/ChangePassword\";\nimport Channel from \"./screens/Channel\";\nimport Channels from \"./screens/Channels\";\nimport Chat from \"./screens/Chat\";\nimport ChooseProfession from \"./screens/ChooseProfession\";\nimport Code from \"./screens/Code\";\nimport Contribute from \"./screens/Contribute\";\nimport CreateOc from \"./screens/CreateOC\";\nimport CreateRobbery from \"./screens/CreateRobbery\";\nimport CreateStreetrace from \"./screens/CreateStreetrace\";\nimport Crimes from \"./screens/Crimes\";\nimport Detectives from \"./screens/Detectives\";\nimport Donate from \"./screens/Donate\";\nimport DownloadApp from \"./screens/DownloadApp\";\nimport EstateAgent from \"./screens/EstateAgent\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Forum from \"./screens/Forum\";\nimport Gang from \"./screens/Gang\";\nimport GangAchievements from \"./screens/GangAchievements\";\nimport GangBulletFactory from \"./screens/GangBulletFactory\";\nimport GangCreate from \"./screens/GangCreate\";\nimport GangMissions from \"./screens/GangMissions\";\nimport Gangs from \"./screens/Gangs\";\nimport GangSettings from \"./screens/GangSettings\";\nimport GangShop from \"./screens/GangShop\";\nimport Garage from \"./screens/Garage\";\nimport GarageShop from \"./screens/GarageShop\";\nimport Gym from \"./screens/Gym\";\nimport Hackers from \"./screens/Hackers\";\nimport Hoeren from \"./screens/Hoeren\";\nimport Home from \"./screens/Home\";\nimport Hospital from \"./screens/Hospital\";\nimport House from \"./screens/House\";\nimport Income from \"./screens/Income\";\nimport Info from \"./screens/Info\";\nimport InfoGame from \"./screens/InfoGame\";\nimport InfoRules from \"./screens/InfoRules\";\nimport JailScreen from \"./screens/Jail\";\nimport Junkies from \"./screens/Junkies\";\nimport Kill from \"./screens/Kill\";\nimport Login from \"./screens/Login\";\nimport Lotto from \"./screens/Lotto\";\nimport ManageObject from \"./screens/ManageObject\";\nimport Market from \"./screens/Market\";\nimport Members from \"./screens/Members\";\nimport MollieComplete from \"./screens/MollieComplete\";\nimport More from \"./screens/More\";\nimport MyObjects from \"./screens/MyObjects\";\nimport MyProfile from \"./screens/MyProfile\";\nimport OC from \"./screens/OC\";\nimport Poker from \"./screens/Poker\";\nimport Police from \"./screens/Police\";\nimport Privacy from \"./screens/Privacy\";\nimport Prizes from \"./screens/Prizes\";\nimport Profile from \"./screens/Profile\";\nimport ProtectionShop from \"./screens/ProtectionShop\";\nimport Racecars from \"./screens/Racecars\";\nimport RecoverPassword from \"./screens/RecoverPassword\";\nimport Reports from \"./screens/Reports\";\nimport Rob from \"./screens/Rob\";\nimport Robbery from \"./screens/Robbery\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport SignupEmail from \"./screens/SignupEmail\";\nimport SignupEmail2 from \"./screens/SignupEmail2\";\nimport Sint from \"./screens/Sint\";\nimport Stats from \"./screens/Stats\";\nimport Status from \"./screens/Status\";\nimport StealCar from \"./screens/StealCar\";\nimport Streetrace from \"./screens/Streetrace\";\nimport SwissBank from \"./screens/SwissBank\";\nimport Theme from \"./screens/Theme\";\nimport VerifyPhone from \"./screens/VerifyPhone\";\nimport VerifyPhoneCode from \"./screens/VerifyPhoneCode\";\nimport VIP from \"./screens/VIP\";\nimport WeaponShop from \"./screens/WeaponShop\";\nimport Wiet from \"./screens/Wiet\";\nimport Work from \"./screens/Work\";\nimport { persistor, store } from \"./Store\";\n\n//hoi\n\n// if (process.env.NODE_ENV === \"development\") {\n//   const whyDidYouRender = require(\"@welldone-software/why-did-you-render\");\n//   whyDidYouRender(React, {\n//     trackAllPureComponents: false,\n//   });\n// }\n\nconst rightContainer =\n  Platform.OS === \"web\" ? createBrowserApp : createAppContainer;\n\nconst window = Dimensions.get(\"window\");\nconst isSmallDevice = window.width < 800;\n\nconst rightNavigator =\n  Platform.OS === \"web\"\n    ? isSmallDevice\n      ? createDrawerNavigator\n      : createSwitchNavigator\n    : createStackNavigator;\n\nconst routes = {\n  Home: {\n    screen: withLayout(Home),\n    path: \"\",\n  },\n\n  GangCreate: withLayout(GangCreate),\n  AllGang: withLayout(AllGang),\n\n  Gang: {\n    screen: withLayout(Gang),\n    path: \"Gang/:name\",\n  },\n\n  Gangs: withLayout(Gangs),\n  GangShop: withLayout(GangShop),\n  GangSettings: withLayout(GangSettings),\n  GangAchievements: withLayout(GangAchievements),\n  GangMissions: withLayout(GangMissions),\n  GangBulletFactory: withLayout(GangBulletFactory),\n  AllBulletfactory: withLayout(AllBulletfactory),\n\n  Robbery: withLayout(Robbery),\n  CreateRobbery: withLayout(CreateRobbery),\n\n  Status: withLayout(Status),\n  Hackers: withLayout(Hackers),\n  Police: withLayout(Police),\n  StealCar: withLayout(StealCar),\n  CreateStreetrace: withLayout(CreateStreetrace),\n  Channels: withLayout(Channels),\n  Channel: withLayout(Channel),\n  AllBanks: withLayout(AllBanks),\n  Poker: withLayout(Poker),\n  Lotto: withLayout(Lotto),\n  Bomb: withLayout(Bomb),\n  Detectives: withLayout(Detectives),\n  SwissBank: withLayout(SwissBank),\n\n  Crimes: withLayout(Crimes),\n  Jail: withLayout(JailScreen),\n  Kill: withLayout(Kill),\n  Rob: withLayout(Rob),\n  // Showroom: withLayout(Showroom),\n  Bank: withLayout(Bank),\n  Shop: withLayout(Shop),\n  Garage: withLayout(Garage),\n  GarageShop: withLayout(GarageShop),\n  WeaponShop: withLayout(WeaponShop),\n  ProtectionShop: withLayout(ProtectionShop),\n\n  AllGarage: withLayout(AllGarage),\n  ManageObject: withLayout(ManageObject),\n  MyObjects: withLayout(MyObjects),\n  Racecars: withLayout(Racecars),\n  Backfire: withLayout(Backfire),\n  Accomplice: withLayout(Accomplice),\n  Streetrace: withLayout(Streetrace),\n  Bulletfactory: withLayout(Bulletfactory),\n  Casino: withLayout(Casino),\n  Airport: withLayout(Airport),\n  AllAirport: withLayout(AllAirport),\n  Members: withLayout(Members),\n  Stats: withLayout(Stats),\n  Chat: withLayout(Chat),\n  Gym: withLayout(Gym),\n  Wiet: withLayout(Wiet),\n  MollieComplete: withLayout(MollieComplete),\n  Junkies: withLayout(Junkies),\n  Hoeren: withLayout(Hoeren),\n  Bunker: withLayout(Bunker),\n  House: withLayout(House),\n  Donate: withLayout(Donate),\n  Hospital: withLayout(Hospital),\n  Income: withLayout(Income),\n  AdminEmail: withLayout(AdminEmail),\n  AdminUserWatch: withLayout(AdminUserWatch),\n  Forum: withLayout(Forum),\n  Theme: withLayout(Theme),\n  DownloadApp: DownloadApp,\n  VIP: withLayout(VIP),\n  Market: withLayout(Market),\n  Sint: withLayout(Sint),\n  ChooseProfession: withLayout(ChooseProfession),\n  Profile: {\n    screen: withLayout(Profile),\n    path: \"Profile/:name\",\n  },\n\n  //SETTINGS\n  Settings: withLayout(Settings),\n  SignupEmail: withLayout(SignupEmail),\n\n  SignupEmail2: {\n    screen: withLayout(SignupEmail2),\n    path: \"SignupEmail2/:token\",\n  },\n\n  ChangeName: withLayout(ChangeName),\n  VerifyPhoneCode: withLayout(VerifyPhoneCode),\n  ForgotPassword: withLayout(ForgotPassword),\n  Blocks: withLayout(Blocks),\n  Reports: withLayout(Reports),\n  RecoverPassword: {\n    screen: withLayout(RecoverPassword),\n    path: \"RecoverPassword/:token\",\n  },\n\n  Code: {\n    screen: withLayout(Code),\n    path: \"Code/:code\",\n  },\n  Case: {\n    screen: withLayout(Code),\n    path: \"Case/:code\",\n  },\n  Car: {\n    screen: withLayout(Code),\n    path: \"Car/:code\",\n  },\n\n  ChangePassword: {\n    screen: withLayout(ChangePassword),\n  },\n  VerifyPhone: withLayout(VerifyPhone),\n  MyProfile: withLayout(MyProfile),\n  Login: withLayout(Login),\n  Work: withLayout(Work),\n  OC: withLayout(OC),\n  CreateOc: withLayout(CreateOc),\n\n  AirplaneShop: withLayout(AirplaneShop),\n  EstateAgent: withLayout(EstateAgent),\n  //INFO\n  Info: withLayout(Info),\n  InfoGame: withLayout(InfoGame),\n  InfoRules: withLayout(InfoRules),\n  Privacy: withLayout(Privacy),\n  Contribute: withLayout(Contribute),\n  Prizes: withLayout(Prizes),\n  AllStats: withLayout(AllStats),\n  More: withLayout(More),\n};\n\nconst OldContainer = rightContainer(\n  rightNavigator(routes, {\n    drawerPosition: \"right\",\n    edgeWidth: Platform.OS === \"web\" && isSmallDevice ? 0 : undefined,\n    contentComponent: CustomDrawerContentComponent,\n    unmountInactiveRoutes: true,\n    navigationOptions: {\n      drawerLockMode: \"locked-open\",\n    },\n    defaultNavigationOptions: {\n      headerShown: false,\n    },\n  }),\n  {\n    history: \"hash\",\n  }\n);\n\nconst _RootContainer = (props) => {\n  // NB: we got screenProps here , but not navigation\n  // if you also need navigation, use withLayout/Layout\n\n  const Container = props.me?.newVersion ? NewContainer : OldContainer;\n  return (\n    <IntervalProvider screenProps={props}>\n      <ActionSheetProvider>\n        <ConnectionProvider>\n          <AlertProvider>\n            <Container screenProps={props} />\n          </AlertProvider>\n        </ConnectionProvider>\n      </ActionSheetProvider>\n    </IntervalProvider>\n  );\n};\n\nconst mapStateToProps = ({\n  device,\n  me,\n  streetraces,\n  ocs,\n  cities,\n  robberies,\n  channels,\n  areas,\n}) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, ocs, cities, robberies, channels, areas };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) => {\n    // console.log(\"reloadMe with loginToken\", loginToken);\n    dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } });\n  },\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadRobberies: () =>\n    dispatch({ type: \"ROBBERIES_FETCH_REQUESTED\", payload: null }),\n  reloadOcs: (token) =>\n    dispatch({ type: \"OCS_FETCH_REQUESTED\", payload: { token } }),\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n  reloadChannels: (token) =>\n    dispatch({ type: \"CHANNELS_FETCH_REQUESTED\", payload: { token } }),\n  reloadAreas: (city) =>\n    dispatch({ type: \"AREAS_FETCH_REQUESTED\", payload: { city } }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nconst App = () => {\n  return (\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <RootContainer />\n      </Provider>\n    </PersistGate>\n  );\n};\nexport default App;\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 308,\n\t\"./af.js\": 308,\n\t\"./ar\": 309,\n\t\"./ar-dz\": 310,\n\t\"./ar-dz.js\": 310,\n\t\"./ar-kw\": 311,\n\t\"./ar-kw.js\": 311,\n\t\"./ar-ly\": 312,\n\t\"./ar-ly.js\": 312,\n\t\"./ar-ma\": 313,\n\t\"./ar-ma.js\": 313,\n\t\"./ar-sa\": 314,\n\t\"./ar-sa.js\": 314,\n\t\"./ar-tn\": 315,\n\t\"./ar-tn.js\": 315,\n\t\"./ar.js\": 309,\n\t\"./az\": 316,\n\t\"./az.js\": 316,\n\t\"./be\": 317,\n\t\"./be.js\": 317,\n\t\"./bg\": 318,\n\t\"./bg.js\": 318,\n\t\"./bm\": 319,\n\t\"./bm.js\": 319,\n\t\"./bn\": 320,\n\t\"./bn.js\": 320,\n\t\"./bo\": 321,\n\t\"./bo.js\": 321,\n\t\"./br\": 322,\n\t\"./br.js\": 322,\n\t\"./bs\": 323,\n\t\"./bs.js\": 323,\n\t\"./ca\": 324,\n\t\"./ca.js\": 324,\n\t\"./cs\": 325,\n\t\"./cs.js\": 325,\n\t\"./cv\": 326,\n\t\"./cv.js\": 326,\n\t\"./cy\": 327,\n\t\"./cy.js\": 327,\n\t\"./da\": 328,\n\t\"./da.js\": 328,\n\t\"./de\": 329,\n\t\"./de-at\": 330,\n\t\"./de-at.js\": 330,\n\t\"./de-ch\": 331,\n\t\"./de-ch.js\": 331,\n\t\"./de.js\": 329,\n\t\"./dv\": 332,\n\t\"./dv.js\": 332,\n\t\"./el\": 333,\n\t\"./el.js\": 333,\n\t\"./en-au\": 334,\n\t\"./en-au.js\": 334,\n\t\"./en-ca\": 335,\n\t\"./en-ca.js\": 335,\n\t\"./en-gb\": 336,\n\t\"./en-gb.js\": 336,\n\t\"./en-ie\": 337,\n\t\"./en-ie.js\": 337,\n\t\"./en-il\": 338,\n\t\"./en-il.js\": 338,\n\t\"./en-in\": 339,\n\t\"./en-in.js\": 339,\n\t\"./en-nz\": 340,\n\t\"./en-nz.js\": 340,\n\t\"./en-sg\": 341,\n\t\"./en-sg.js\": 341,\n\t\"./eo\": 342,\n\t\"./eo.js\": 342,\n\t\"./es\": 343,\n\t\"./es-do\": 344,\n\t\"./es-do.js\": 344,\n\t\"./es-us\": 345,\n\t\"./es-us.js\": 345,\n\t\"./es.js\": 343,\n\t\"./et\": 346,\n\t\"./et.js\": 346,\n\t\"./eu\": 347,\n\t\"./eu.js\": 347,\n\t\"./fa\": 348,\n\t\"./fa.js\": 348,\n\t\"./fi\": 349,\n\t\"./fi.js\": 349,\n\t\"./fil\": 350,\n\t\"./fil.js\": 350,\n\t\"./fo\": 351,\n\t\"./fo.js\": 351,\n\t\"./fr\": 352,\n\t\"./fr-ca\": 353,\n\t\"./fr-ca.js\": 353,\n\t\"./fr-ch\": 354,\n\t\"./fr-ch.js\": 354,\n\t\"./fr.js\": 352,\n\t\"./fy\": 355,\n\t\"./fy.js\": 355,\n\t\"./ga\": 356,\n\t\"./ga.js\": 356,\n\t\"./gd\": 357,\n\t\"./gd.js\": 357,\n\t\"./gl\": 358,\n\t\"./gl.js\": 358,\n\t\"./gom-deva\": 359,\n\t\"./gom-deva.js\": 359,\n\t\"./gom-latn\": 360,\n\t\"./gom-latn.js\": 360,\n\t\"./gu\": 361,\n\t\"./gu.js\": 361,\n\t\"./he\": 362,\n\t\"./he.js\": 362,\n\t\"./hi\": 363,\n\t\"./hi.js\": 363,\n\t\"./hr\": 364,\n\t\"./hr.js\": 364,\n\t\"./hu\": 365,\n\t\"./hu.js\": 365,\n\t\"./hy-am\": 366,\n\t\"./hy-am.js\": 366,\n\t\"./id\": 367,\n\t\"./id.js\": 367,\n\t\"./is\": 368,\n\t\"./is.js\": 368,\n\t\"./it\": 369,\n\t\"./it-ch\": 370,\n\t\"./it-ch.js\": 370,\n\t\"./it.js\": 369,\n\t\"./ja\": 371,\n\t\"./ja.js\": 371,\n\t\"./jv\": 372,\n\t\"./jv.js\": 372,\n\t\"./ka\": 373,\n\t\"./ka.js\": 373,\n\t\"./kk\": 374,\n\t\"./kk.js\": 374,\n\t\"./km\": 375,\n\t\"./km.js\": 375,\n\t\"./kn\": 376,\n\t\"./kn.js\": 376,\n\t\"./ko\": 377,\n\t\"./ko.js\": 377,\n\t\"./ku\": 378,\n\t\"./ku.js\": 378,\n\t\"./ky\": 379,\n\t\"./ky.js\": 379,\n\t\"./lb\": 380,\n\t\"./lb.js\": 380,\n\t\"./lo\": 381,\n\t\"./lo.js\": 381,\n\t\"./lt\": 382,\n\t\"./lt.js\": 382,\n\t\"./lv\": 383,\n\t\"./lv.js\": 383,\n\t\"./me\": 384,\n\t\"./me.js\": 384,\n\t\"./mi\": 385,\n\t\"./mi.js\": 385,\n\t\"./mk\": 386,\n\t\"./mk.js\": 386,\n\t\"./ml\": 387,\n\t\"./ml.js\": 387,\n\t\"./mn\": 388,\n\t\"./mn.js\": 388,\n\t\"./mr\": 389,\n\t\"./mr.js\": 389,\n\t\"./ms\": 390,\n\t\"./ms-my\": 391,\n\t\"./ms-my.js\": 391,\n\t\"./ms.js\": 390,\n\t\"./mt\": 392,\n\t\"./mt.js\": 392,\n\t\"./my\": 393,\n\t\"./my.js\": 393,\n\t\"./nb\": 394,\n\t\"./nb.js\": 394,\n\t\"./ne\": 395,\n\t\"./ne.js\": 395,\n\t\"./nl\": 396,\n\t\"./nl-be\": 397,\n\t\"./nl-be.js\": 397,\n\t\"./nl.js\": 396,\n\t\"./nn\": 398,\n\t\"./nn.js\": 398,\n\t\"./oc-lnc\": 399,\n\t\"./oc-lnc.js\": 399,\n\t\"./pa-in\": 400,\n\t\"./pa-in.js\": 400,\n\t\"./pl\": 401,\n\t\"./pl.js\": 401,\n\t\"./pt\": 402,\n\t\"./pt-br\": 403,\n\t\"./pt-br.js\": 403,\n\t\"./pt.js\": 402,\n\t\"./ro\": 404,\n\t\"./ro.js\": 404,\n\t\"./ru\": 405,\n\t\"./ru.js\": 405,\n\t\"./sd\": 406,\n\t\"./sd.js\": 406,\n\t\"./se\": 407,\n\t\"./se.js\": 407,\n\t\"./si\": 408,\n\t\"./si.js\": 408,\n\t\"./sk\": 409,\n\t\"./sk.js\": 409,\n\t\"./sl\": 410,\n\t\"./sl.js\": 410,\n\t\"./sq\": 411,\n\t\"./sq.js\": 411,\n\t\"./sr\": 412,\n\t\"./sr-cyrl\": 413,\n\t\"./sr-cyrl.js\": 413,\n\t\"./sr.js\": 412,\n\t\"./ss\": 414,\n\t\"./ss.js\": 414,\n\t\"./sv\": 415,\n\t\"./sv.js\": 415,\n\t\"./sw\": 416,\n\t\"./sw.js\": 416,\n\t\"./ta\": 417,\n\t\"./ta.js\": 417,\n\t\"./te\": 418,\n\t\"./te.js\": 418,\n\t\"./tet\": 419,\n\t\"./tet.js\": 419,\n\t\"./tg\": 420,\n\t\"./tg.js\": 420,\n\t\"./th\": 421,\n\t\"./th.js\": 421,\n\t\"./tk\": 422,\n\t\"./tk.js\": 422,\n\t\"./tl-ph\": 423,\n\t\"./tl-ph.js\": 423,\n\t\"./tlh\": 424,\n\t\"./tlh.js\": 424,\n\t\"./tr\": 425,\n\t\"./tr.js\": 425,\n\t\"./tzl\": 426,\n\t\"./tzl.js\": 426,\n\t\"./tzm\": 427,\n\t\"./tzm-latn\": 428,\n\t\"./tzm-latn.js\": 428,\n\t\"./tzm.js\": 427,\n\t\"./ug-cn\": 429,\n\t\"./ug-cn.js\": 429,\n\t\"./uk\": 430,\n\t\"./uk.js\": 430,\n\t\"./ur\": 431,\n\t\"./ur.js\": 431,\n\t\"./uz\": 432,\n\t\"./uz-latn\": 433,\n\t\"./uz-latn.js\": 433,\n\t\"./uz.js\": 432,\n\t\"./vi\": 434,\n\t\"./vi.js\": 434,\n\t\"./x-pseudo\": 435,\n\t\"./x-pseudo.js\": 435,\n\t\"./yo\": 436,\n\t\"./yo.js\": 436,\n\t\"./zh-cn\": 437,\n\t\"./zh-cn.js\": 437,\n\t\"./zh-hk\": 438,\n\t\"./zh-hk.js\": 438,\n\t\"./zh-mo\": 439,\n\t\"./zh-mo.js\": 439,\n\t\"./zh-tw\": 440,\n\t\"./zh-tw.js\": 440\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 620;","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo5.8e72dd72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/house2.a0265669.png\";","module.exports = __webpack_public_path__ + \"static/media/headquarter.e93c6de6.png\";","module.exports = __webpack_public_path__ + \"static/media/bulletfactory.e58e7c97.png\";","module.exports = __webpack_public_path__ + \"static/media/airport.72e68404.png\";","module.exports = __webpack_public_path__ + \"static/media/bank.94332498.png\";","module.exports = __webpack_public_path__ + \"static/media/casino.63f60844.png\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop.0f0755bd.png\";","module.exports = __webpack_public_path__ + \"static/media/junkies.c17461b4.png\";","module.exports = __webpack_public_path__ + \"static/media/garage.6bda310e.png\";","module.exports = __webpack_public_path__ + \"static/media/gym.8d563841.png\";","module.exports = __webpack_public_path__ + \"static/media/hospital.77df0a1e.png\";","module.exports = __webpack_public_path__ + \"static/media/jail.138d3d71.png\";","module.exports = __webpack_public_path__ + \"static/media/sexshop.7153d904.png\";","module.exports = __webpack_public_path__ + \"static/media/bombarderen.3d0c7534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item1.a5e891d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item2.e86438ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item3.27b6a03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item4.b980bfe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item5.1da86cb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item6.935530e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item7.bf00b038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item8.e50cc6c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item9.44698ead.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item10.2cf60cef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item11.d162fbe5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item12.0bcfb4c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","module.exports = __webpack_public_path__ + \"static/media/snackbar.a17d7683.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clothesstore.5d863b13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/supermarket.1313f5be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drugstore.4fbc8e73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop.bd3dee77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cardealer.9341f232.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a34b0cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/casino.701d6832.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jewelrystore.e2f62912.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uitgemoord.89bc3b35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hacker.010dc613.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a34b0cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cars.a3f3b108.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/shootout.f88bc10f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}