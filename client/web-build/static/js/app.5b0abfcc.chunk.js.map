{"version":3,"sources":["assets/icon.png","assets/whatsapp.png","assets/profession/thief.jpg","assets/profession/carthief.jpg","assets/profession/weedgrower.jpg","assets/profession/killer.jpg","assets/profession/pimp.jpg","assets/profession/banker.jpg","assets/profession/jailbreaker.jpg","assets/map/market.png","assets/map/shop.png","src/Constants.js","src/Util.js","src/components/AlertProvider.js","src/components/ConnectionProvider.js","src/components/IntervalProvider.js","src/components/Button.js","src/components/Dead.js","src/components/Fly.js","src/components/Chat.js","src/components/Header.js","src/updateHook.js","src/components/HoverState.js","src/components/Hoverable.js","src/components/T.js","src/components/Jail.js","src/Style.js","src/components/LoginModal.js","src/KeyboardAvoidingSpace.js","src/Menus.js","src/Layout.js","src/screens/Accomplice.js","src/screens/AdminEmail.js","src/screens/AdminUserWatch.js","src/screens/Shop.js","src/screens/AirplaneShop.js","src/screens/Airport.js","src/components/Tabs.js","src/components/Captcha.js","src/screens/Bomb.js","src/screens/AllAirport.js","src/screens/Bank.js","src/screens/Donate.js","src/screens/Income.js","src/screens/SwissBank.js","src/screens/AllBanks.js","src/screens/Bulletfactory.js","src/components/Content.js","src/components/User.js","src/screens/GangBulletFactory.js","src/screens/AllBulletfactory.js","src/screens/GangCreate.js","src/components/H1.js","src/screens/GangMissions.js","src/screens/GangSettings.js","src/screens/GangShop.js","src/screens/AllGang.js","src/components/Separator.js","src/screens/Garage.js","src/screens/Racecars.js","src/screens/AllGarage.js","src/screens/Gangs.js","src/screens/Members.js","src/components/Gang.js","src/screens/Prizes.js","src/screens/Properties.js","src/screens/Stats.js","src/screens/AllStats.js","src/screens/Backfire.js","src/screens/Blocks.js","src/screens/Bunker.js","src/screens/Casino.js","src/screens/ChangeName.js","src/screens/ChangePassword.js","src/components/ImageInput.js","src/components/ShareButtons.js","src/screens/Channel.js","src/screens/Channels.js","src/screens/Chat.js","src/screens/ChooseProfession.js","src/screens/Code.js","src/screens/Contribute.js","src/components/TabInput.js","src/screens/CreateOC.js","src/screens/CreateRobbery.js","src/screens/CreateStreetrace.js","src/components/Footer.js","src/screens/Crimes.js","src/screens/Detectives.js","src/screens/DownloadApp.js","src/screens/EstateAgent.js","src/screens/ForgotPassword.js","src/screens/Forum.js","src/screens/Gang.js","src/screens/GangAchievements.js","src/screens/GarageShop.js","src/screens/Gym.js","src/screens/Hackers.js","src/screens/Hoeren.js","src/screens/Home.js","src/screens/Hospital.js","src/screens/Sint.js","src/screens/MyObjects.js","src/screens/Status.js","src/screens/House.js","src/components/Menu.js","src/screens/Info.js","src/screens/InfoGame.js","src/screens/InfoRules.js","src/screens/Jail.js","src/screens/Junkies.js","src/screens/Kill.js","src/screens/Login.js","src/screens/Lotto.js","src/screens/ManageObject.js","src/screens/Map/MapUtil.js","src/screens/Map/Menus.js","src/screens/Map/ActionsBar.js","src/screens/Map/MapIcon.js","src/screens/Map/BottomTabs.js","src/screens/Map/Modal.js","src/screens/Market.js","src/screens/MollieComplete.js","src/screens/Police.js","src/screens/Settings.js","src/screens/More.js","src/screens/MyProfile.js","src/screens/OC.js","src/screens/Poker.js","src/screens/Privacy.js","src/screens/Profile.js","src/screens/ProtectionShop.js","src/screens/RecoverPassword.js","src/screens/Reports.js","src/screens/Rob.js","src/screens/Robbery.js","src/screens/SignupEmail.js","src/screens/SignupEmail2.js","src/screens/StealCar.js","src/screens/Streetrace.js","src/screens/Theme.js","src/screens/VerifyPhone.js","src/screens/VerifyPhoneCode.js","src/screens/Creditshop.js","src/screens/Mollie.js","src/screens/SuperMessage.js","src/screens/VIP.js","src/screens/WeaponShop.js","src/screens/Wiet.js","src/components/Checkbox.js","src/screens/Work.js","src/screens/Map/Screen.js","src/screens/Map/StatsHeader.js","src/screens/Map/Overlay.js","src/screens/Map/Map.js","src/Api.js","src/Sagas.js","src/Store.js","src/App.js","App.js","web-build/register-service-worker.js","assets/dood.jpg","assets/logos/logo5.jpg","node_modules/moment/locale sync /^/.//.*$","assets/bombarderen.jpg","assets/gangshop/item1.jpg","assets/gangshop/item2.jpg","assets/gangshop/item3.jpg","assets/gangshop/item4.jpg","assets/gangshop/item5.jpg","assets/gangshop/item6.jpg","assets/gangshop/item7.jpg","assets/gangshop/item8.jpg","assets/gangshop/item9.jpg","assets/gangshop/item10.jpg","assets/gangshop/item11.jpg","assets/gangshop/item12.jpg","assets/robbery/snackbar.jpg","assets/robbery/clothesstore.jpg","assets/robbery/supermarket.jpg","assets/robbery/drugstore.jpg","assets/robbery/coffeeshop.jpg","assets/robbery/cardealer.jpg","assets/robbery/bank.jpg","assets/robbery/casino.jpg","assets/robbery/jewelrystore.jpg","assets/instagram.png","assets/spotify.png","assets/youtube.png","assets/uitgemoord.jpg","assets/hacker.jpeg","assets/map/house2.png","assets/map/headquarter.png","assets/map/bulletfactory.png","assets/map/airport.png","assets/map/bank.png","assets/map/casino.png","assets/map/coffeeshop.png","assets/map/junkies.png","assets/map/garage.png","assets/map/gym.png","assets/map/hospital.png","assets/map/jail.png","assets/map/sexshop.png","assets/politie.jpeg","assets/bank.jpg","assets/cars.jpeg","assets/shootout.jpeg","assets/city.jpeg","assets/highway.jpeg","assets/forest.jpeg"],"names":["module","exports","Constants","SERVER_ADDR","CAPTCHA","IOS_APP_URL","ANDROID_APP_URL","replaceAll","string","search","replacement","split","join","getLocale","userLocale","getTextFunction","key","firstPart","languageObject","require","args","forEach","arg","index","numberFormat","x","toString","replace","doOnce","cb","cleanup","useEffect","apiCall","endpoint","method","body","fetch","headers","Accept","JSON","stringify","undefined","then","response","json","a","async","catch","error","console","Captcha","loginToken","useState","Math","random","setRandom","uri","View","style","flexDirection","Image","source","marginLeft","width","height","TouchableOpacity","onPress","MaterialCommunityIcons","name","size","color","withCaptcha","needCaptcha","getText","alertAlert","setCode","text","textInput","keyboardType","component","get","post","ColorLuminance","hex","lum","String","length","c","i","rgb","parseInt","substr","round","min","max","lighterHex","darkerHex","getUserColor","item","theme","creditsTotal","primaryText","ranks","rank","exp","strengthRanks","getRankThing","returntype","type","now","findIndex","r","prev","nowExp","prevExp","nowRank","diff","progress","percentage","getRank","getStrength","AlertContext","React","createContext","AlertProvider","children","alerts","setAlerts","value","setValue","textInputRef","useRef","theAlert","current","focus","Provider","title","message","buttons","options","log","newAlerts","map","includes","push","position","top","bottom","left","right","backgroundColor","justifyContent","alignItems","borderRadius","padding","Text","fontWeight","fontSize","textAlign","TextInput","onChangeText","ref","button","flex","borderRightColor","borderRightWidth","shift","filter","lenth","ConnectionProviderScreen","fetchWithTimeout","didTimeOut","Promise","resolve","reject","timeout","setTimeout","Error","clearTimeout","err","props","setIsConnected","Platform","OS","this","unsubscribe","NetInfo","addEventListener","state","isConnected","interval","setInterval","SafeAreaView","Component","connect","device","dispatch","IntervalContext","IntervalProvider","screenProps","me","reloadMe","token","setToken","intervalReloadMe","intervalMovements","sendMovements","clearInterval","movements","resetIntervalsForToken","withInterval","ChildComponent","Consumer","context","intervals","isSmall","Dimensions","Button","icon","font","disabled","TheIcon","Icon","useSelector","secondary","paddingHorizontal","marginRight","secondaryText","Dead","selected","navigation","locale","reizenAt","Date","option","setState","Fly","sec","city","until","onFinish","timeToShow","timeLabels","m","s","Chat","chat","input","getChat","allText","select","web","default","borderWidth","borderColor","numberOfLines","navigate","duration","marqueeOnStart","loop","marqueeDelay","marqueeResetDelay","placeholder","onSubmitEditing","nativeEvent","location","reload","isSmallDevice","Header","updateAvailable","setUpdateAvailable","setUpdateListener","Updates","checkUpdate","res","isAvailable","useExpoUpdate","textStyle","marginBottom","showNotActivated","phoneVerified","numActions","notActivated","marginTop","showBackButton","routeName","statsHeader","flexWrap","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","gang","cash","bank","bullets","gamepoints","health","strength","newVersion","chats","AntDesign","updateComponent","reloadAsync","backButton","margin","hitSlop","goBack","window","history","back","webHeader","manifest","version","toggleDrawer","Feather","showSomething","paddingTop","StatusBar","currentHeight","isEnabled","canUseDOM","lastTouchTimestamp","disableHover","document","Hoverable","onHoverIn","onHoverOut","isHovered","setHovered","showHover","setShowHover","child","cloneElement","Children","only","onMouseEnter","e","onMouseLeave","onResponderGrant","onResponderRelease","onPressIn","onPressOut","displayName","propTypes","oneOfType","func","element","T","bold","Jail","jail","renderItem","seconds","floor","jailAt","digitStyle","digitTxtStyle","buyOut","fetchMembers","order","marginVertical","FlatList","data","ListHeaderComponent","renderHeader","StyleSheet","create","container","LoginModal","setName","setResponse","email","setEmail","password","setPassword","setError","success","setSuccess","phone","setPhone","view","setView","code","changeName","login","useContext","primary","alignSelf","Entypo","id","ActivityIndicator","placeholderTextColor","secondaryTextSoft","secureTextEntry","md5","str_md5","responseJson","textDecorationLine","KeyboardAvoidingSpace","keyboardWillShow","onKeyboardWillShow","toValue","endCoordinates","offset","dim","isIPhoneXSize","isIPhoneXrSize","isIphoneX","Animated","timing","easing","Easing","ease","useNativeDriver","start","keyboardWillHide","onKeyboardWillHide","Value","bindListeners","unbindListeners","keyboardWillShowListener","Keyboard","addListener","keyboardWillHideListener","keyboardDidShowListener","keyboardDidHideListener","remove","isHappyHour","isSunday","moment","day","is7pm","hour","isAfter","set","InactiveScreens","ACTIONS_BEFORE_ROBBERY","ACTIONS_BEFORE_DETECTIVES","ACTIONS_BEFORE_BOMB","ACTIONS_BEFORE_CASINO","ACTIONS_BEFORE_BUNKER","ACTIONS_BEFORE_HOSPITAL","ACTIONS_BEFORE_RACECARS","ACTIONS_BEFORE_STREETRACE","ACTIONS_AMOUNT_NEW","ACTIONS_BEFORE_ROB","ACTIONS_BEFORE_ROB_KILL_MENU","ACTIONS_BEFORE_KILL","ACTIONS_BEFORE_BULLETFACTORY","ACTIONS_BEFORE_MARKET","ACTIONS_BEFORE_AIRPORT","DAYS_NEW","ACTIONS_BEFORE_POLICE","OC_RELEASE_DATE","DETECTIVES_RELEASE_DATE","GANG_MISSIONS_RELEASE_DATE","GANG_BULLET_FACTORY_RELEASE_DATE","PRIZES_NORMAL_RELEASE_DATE","GANG_RELEASE_DATE","MARKET_RELEASE_DATE","PRIZES_RELEASE_DATE","POLICE_RELEASE_DATE","ROBBERY_RELEASE_DATE","WORK_RELEASE_DATE","leftMenu","stealcarSeconds","ceil","autostelenAt","crimeSeconds","crimeAt","bunkerSeconds","bunkerAt","attackSeconds","attackAt","robSeconds","robAt","gymSeconds","gymAt","gymTime","wietSeconds","wietAt","junkiesSeconds","junkiesAt","hoerenSeconds","hoerenAt","robberySeconds","robberyAt","header","isHeader","label","content","iconType","to","inactive","isBefore","level","isNew","add","ACtIONS_BEFORE_DETECTIVES","adminMenu","gameMod","betaTester","admin","rightMenu","ocSeconds","ocAt","isGangsReleased","gangMenus","image","thumbnail","gangId","isStats","online","year","month","date","renderMenu","isCurrent","TouchOrView","params","movement","action","locationX","locationY","timestamp","borderBottomWidth","paddingLeft","minHeight","Layout","useNewContainer","result","characters","charactersLength","charAt","makeid","Linking","openWebUrl","getInitialURL","url","logged","menu","leftActive","setLeftActive","rightActive","setRightActive","_handleNotificationResponse","notification","request","handleChange","nextAppState","foregrounded","StoreReview","available","ExpoNotifications","AppState","removeEventListener","skip","SafeOrView","Helmet","property","ScrollView","contentContainerStyle","Accordion","expandMultiple","sections","activeSections","onChange","active","section","renderContent","withLayout","Accomplice","accomplice","accomplice1","setAccomplice1","accomplice2","setAccomplice2","accomplice3","setAccomplice3","accomplice4","setAccomplice4","submit","acc","alert","maxWidth","onFocus","Clipboard","setString","accomplices","styles","Status","subject","sendMessage","renderForm","AdminUserWatch","ips","setIps","setId","user","setUser","actions","setActions","setMovements","getActions","ip","previous","Shop","fetchCities","reloadCities","fetchShop","becomeOwner","renderCities","cities","propertyKey","ownerKey","profitKey","propertyString","paddingVertical","borderBottomColor","t","buy","resizeMode","next","price","AirplaneShop","Airport","renderFooter","openActionSheet","sort","showActionSheetWithOptions","buttonIndex","connectActionSheet","Tabs","tabs","tab","isActive","onChangeCaptcha","captcha","onChangeRandom","Bomb","useActionSheet","bombs","setBombs","setCaptcha","setType","typeStrings","bulletFactory","casino","landlord","junkies","weaponShop","rld","airport","estateAgent","garage","find","airplane","Object","keys","cancelButtonIndex","destructiveButtonIndex","AllAirport","setTab","Bank","deposit","amount","row","keyValue","Donate","names","wiet","hoeren","Income","incomeAction","postGetIncome","withAlert","SwissBank","becomeOwnerResponse","setBecomeOwnerResponse","setAmount","swissBank","swissBullets","bankOwner","bankProfit","AllBanks","Bulletfactory","setBullets","bulletFactoryOwner","bulletFactoryPrice","bulletFactoryProfit","bulletFactoryDamage","UIManager","setLayoutAnimationEnabledExperimental","getData","AsyncStorage","getItem","Content","contentWidth","expanded","setExpanded","loading","setLoading","isExpanded","LayoutAnimation","linear","setItem","onLayout","event","layout","y","User","isOnline","onlineAt","extraIcon","country","GangBulletFactory","shifts","setShifts","morning","evening","night","underachievers","getShifts","renderShiftUser","members","totalShiftsDone","gangLevel","generates","initialCost","dailyCost","bf","marginHorizontal","postGangBuyBulletFactory","AllGarage","GangCreate","H1","GangMissions","setResult","getGangMissions","isPrestige","reduce","mission","time","startButton","postGangStartMission","what","amountPerMember","isEnded","isSucceeded","amountDone","createdAt","GangSettings","requests","setRequests","setGang","username","setUsername","profile","setProfile","setMessage","setImage","isBullets","setIsBullets","getGang","getGangInvites","postGangAnswerJoin","accepted","postGangTransaction","isToUser","postGangLeave","getGangLevel","postGangRemove","changeRank","userId","postGangSetRank","getPermissionAsync","Permissions","status","users","member","postGangKick","ImagePicker","mediaTypes","All","allowsEditing","base64","quality","cancelled","multiline","SIZE","GangShop","prices","items","item1","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","power","refreshing","onRefresh","numColumns","MARGIN","keyExtractor","v","itemId","postGangShop","AllGang","Separator","Garage","cars","fetchGroups","carGroups","bulkAction","auto","upgradeCar","renderGroup","kogels","focusListener","ItemSeparatorComponent","Racecars","fetchGarage","sellCar","crushCar","car","extraData","Gangs","gangs","setGangs","invites","setInvites","getGangs","getInvites","postGangAnswerInvite","invite","gangName","score","filters","orders","setMembers","setSearch","orderBy","setOrderBy","setFilter","searchedMembers","toLowerCase","o","openActionSheetSort","openActionSheetFilter","orderKey","secondKey","Gang","Prizes","prizes","setPrizes","prize","when","every","endOf","format","forWhat","stats","stat","prizeWhat","properties","Properties","gridStyle","borderLeftColor","borderLeftWidth","horizontal","suffix","field","fieldSuffix","formattedField","keyNames","newMembers","onlineToday","Stats","setStats","gameStats","setGameStats","values","Array","snapToEnd","fromZero","labels","datasets","opacity","onlineLastHour","onlineLastDay","onDataPointClick","xAxisLabel","xLabelsOffset","yAxisLabel","yAxisSuffix","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","strokeWidth","stroke","bezier","AllStats","Members","MyProfile","backfire","Blocks","blocks","setBlocks","getBlocks","block","user2id","postRemoveBlock","Bunker","ListFooterComponent","lottoReleaseDate","Casino","casinoOwner","casinoProfit","ChangeName","ChangePassword","password1","password2","minWidth","ImageInput","hasEdited","_pickImage","aspect","ImageManipulator","resize","PNG","manipulated","manipulatedBase64","small","Ionicons","ShareButtons","siteUrl","facebookShareUrl","openURL","isBigDevice","Footer","fetchChat","setHasEdited","send","cid","STYLE","ChatScreen","isFetching","setIsFetching","setChat","subid","isArray","initialNumToRender","isMe","avatar","IMAGE_SIZE","isSystem","isShareable","refreshControl","inverted","blocksReleaseDate","fetchChannelsubs","reloadChannels","openMenu","isBlockButtonActive","openGeneralMenu","isBlocksActive","channelTitle","channel","channelsubs","channelThumbnail","channelOtherUserId","unread","lastmessage","lastmessageDate","startOf","channels","PROFESSIONS","canChooseProfession","profession","postChooseProfession","Code","CreateOc","reloadOcs","racecars","setRacecars","numParticipants","setNumParticipants","setCar","TabInput","racecar","carId","RobberyTypes","cost","profit","difficulty","Robbery","robbery","CreateRobbery","reloadRobberies","CreateStreetrace","reloadStreetraces","setPrice","setPrize","setText","copy","getFullYear","Crimes","kans","maxChance","kans2","Detectives","detectives","setDetectives","getDetectives","detective","h","getMobileOperatingSystem","userAgent","navigator","vendor","opera","test","MSStream","DownloadApp","EstateAgent","Login","Messages","messages","newMessage","createTopic","getTopics","newTopic","readTopic","createMessage","fetchReadTopic","topic","topics","updatedAt","responses","renderNew","renderTopics","postGangJoin","totalHealth","GangAchievements","achievements","GarageShop","Gym","Hoeren","rldOwner","rldProfit","number","itemWidth","amountOfItems","Home","activeSlide","notificationsHeader","_handleAppStateChange","turnOnNotifications","sendLanguage","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","language","ExpoConstants","isDevice","existingStatus","finalStatus","pushtoken","Notifications","_renderItem","filtered","slice","IntentLauncher","_carousel","sliderWidth","onSnapToItem","dotsLength","activeDotIndex","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","appLink","renderCarousel","Hospital","heal","Sint","minute","sintEndsAt","MyObjects","p","professionReleaseDate","uur","protectionAt","Menu","IconFont","PrivacyPage","components","en","nl","strings","jailOwner","jailProfit","ListEmptyComponent","Junkies","junkiesOwner","junkiesProfit","Kill","kill","Lotto","lottoDay","lottoWeek","lottoMonth","ManageObject","giveTo","setGiveTo","who","setWho","theCity","rowStyle","typeString","priceKey","damageKey","objects","aspectRatio","rgbs","getZoom","delta","LN2","getObjectMeta","object","cityAreas","latitude","longitude","terri","areas","centerLatitude","centerLongitude","deltaLatitude","deltaLongitude","biggestDeltaLatitude","topLeftLatitude","topLeftLongitude","bottomRightLatitude","bottomRightLongitude","topRightLongitude","bottomLeftLatitude","square","bounds","east","south","north","west","platformBounds","radius","zoom","goToBuilding","allAreasMenus","area","goToArea","last10ChannelsMenus","setSelectedAreaIndex","setSelected","setZoom","resetTo","popToTop","objectIndex","panTo","lat","lng","animateToRegion","latitudeDelta","longitudeDelta","biggestDelta","Menus","pointerEvents","menuShown","ActionsBar","selectedArea","reloadAreas","bombAction","iconName","takeOverAction","manageAction","allActions","badgeAmount","hospital","house","headquarter","gym","market","stockExchange","airplanes","connectedArea","damage","statsActions","moreActions","zIndex","requestAnimationFrame","MapIcon","memo","BottomTabs","animateToCity","dragAndDropMode","setDragAndDropMode","Modal","Market","setMarket","setBuy","getMarket","validTypes","postMarketCreateOffer","offerId","postMarketRemoveOffer","isBuy","postMarketTransaction","MollieComplete","Settings","__DEV__","More","Info","Police","setPhoto","images","setImages","selectedImage","setSelectedImage","bio","setBio","fetchImages","pic","Oc","ocs","RefreshControl","creator","ocParticipants","ocId","leave","Poker","poker","Config","onLinkPress","link","markdownItInstance","MarkdownIt","typographer","use","emoji","center","Bio","debugPrintTree","markdownit","rules","blocklink","node","parent","open","attributes","href","setWidth","setHeight","getSize","src","centertext","paragraph","textgroup","ProfileScreen","getProfile","hasImage","ban","banReason","postReport","ProtectionShop","RecoverPassword","Reports","reports","setReports","getReports","rob","robberies","robberyParticipants","robberyId","respones","activate","activationToken","StealCar","typeStart","finished","Streetrace","streetraces","streetraceParticipants","streetraceId","DEFAULT_THEME","separatorColor","ThemeScreen","currentTheme","themes","setTheme","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","save","Creditshop","setItems","credits","kooptext","kosten","Mollie","SuperMessage","schedule","setSchedule","setDate","scheduled","setScheduled","setMessages","dates","setDates","getScheduled","Switch","onValueChange","valueOf","msg","saveScheduled","VIP","WeaponShop","Wiet","landlordOwner","landlordProfit","Checkbox","Work","hours","workEndsAt","Screen","screen","StatsScreen","Channels","Profile","AdminEmail","AllBulletfactory","Backfire","Channel","ChooseProfession","Contribute","ForgotPassword","Forum","Hackers","House","InfoGame","InfoRules","JailScreen","OC","Privacy","Rob","SignupEmail","SignupEmail2","Theme","VerifyPhone","VerifyPhoneCode","StatsHeader","Overlay","territoriesSwiperRefContainer","propertiesSwiperRefContainer","selectedAreaIndex","useDispatch","renderTerritoriesSwiper","controlsEnabled","initialPage","onIndexChanged","renderPropertiesSwiper","owner","ownerProfile","currentObject","mapStyle","mapStyleNight","citiesAreas","containerStyle","ReactMap","setMap","setMapReady","onLoad","useCallback","google","maps","LatLngBounds","fitBounds","onUnmount","googleMapsApiKey","mapContainerStyle","initialZoom","disableDefaultUI","Territories","territories","MapsComponent","onClick","fillColor","path","Polygon","tappable","coordinates","GameObjects","isSelected","myName","draggable","animated","onPressObject","configureNext","Presets","spring","goTo","Marker","onDragEnd","coordinate","Alert","Circle","Map","region","setRegion","useMemo","mapReady","objectsWithAnimated","reg","NativeMapsComponent","native","crimeIcons","ocIcons","oc","streetraceIcons","robberyIcons","icons","concat","rightObjects","renderGame","renderTerritories","renderCrimes","sum","codePointAt","decimalHash","areaIndex","pseudoRandom","theIcon","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","renderAllMapObjects","shouldRenderTerritories","renderOverlay","pitchEnabled","rotateEnabled","onMapReady","customMapStyle","initialRegion","onRegionChange","absoluteFill","Api","fetchMe","payload","fetchStreetraces","fetchOcs","fetchRobberies","fetchAreas","fetchChannels","mySaga","call","put","takeLatest","initDevice","initAreas","initChannels","config","storage","whitelist","sagaMiddleware","createSagaMiddleware","reducers","rootReducer","persistCombineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","rightContainer","createBrowserApp","createAppContainer","rightNavigator","createDrawerNavigator","createSwitchNavigator","createStackNavigator","routes","Case","Car","NewContainer","initialNavigationState","navigationState","setNavigationState","newHistory","pop","MapWithLayout","OldContainer","drawerPosition","edgeWidth","contentComponent","forceInset","unmountInactiveRoutes","navigationOptions","drawerLockMode","defaultNavigationOptions","headerShown","RootContainer","Container","ConnectionProvider","App","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__"],"mappings":"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AeC,EAAK,KAC1Ca,EAAY,SAACb,GAAD,OAASD,EAAeC,GAAM,KAE1Cc,EAAe,SAACC,EAAMC,GAAP,OACtB,MAAJD,OAAA,EAAAA,EAAME,eAAgB,IAClB,OACI,MAAJF,OAAA,EAAAA,EAAME,eAAgB,IACtB,SACAD,EAAME,aAENC,EAAQ,CACZ,CACEC,KAAM,SACNC,IAAK,IAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,WACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,MAEP,CACED,KAAM,YACNC,IAAK,KAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,sBACNC,IAAK,MAEP,CACED,KAAM,MACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAIHC,EAAgB,CACpB,CACEF,KAAM,YACNC,IAAK,IAEP,CACED,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,UACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,SACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,MAEP,CACED,KAAM,SACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,eACNC,IAAK,KAEP,CACED,KAAM,WACNC,IAAK,KAEP,CACED,KAAM,gBACNC,IAAK,MAEP,CACED,KAAM,iBACNC,IAAK,MAEP,CACED,KAAM,wBACNC,IAAK,MAEP,CACED,KAAM,qBACNC,IAAK,KAEP,CACED,KAAM,mBACNC,IAAK,MAEP,CACED,KAAM,QACNC,IAAK,KAEP,CACED,KAAM,aACNC,IAAK,MAEP,CACED,KAAM,cACNC,IAAK,KAEP,CACED,KAAM,qBACN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AAUigD,EACjBA,EAAe3nC,GAAK,K,oBC/RpBvY,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/app.5b0abfcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d2180cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.7c63448f.png\";","module.exports = __webpack_public_path__ + \"static/media/thief.fa783e06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carthief.b6f3fdd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weedgrower.0b8f1c24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/killer.fef52faa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pimp.f2697d22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banker.1d9edc53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jailbreaker.a5d507ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/market.32e2d0f1.png\";","module.exports = __webpack_public_path__ + \"static/media/shop.a9cce2eb.png\";","const serverAddr = \"https://mcz.leckrapi.xyz\";\nconst localAddr = \"http://192.168.1.100:4001\"; //192.168.1.38\nconst devLocal = true;\n\nconst Constants = {\n  SERVER_ADDR: __DEV__ && devLocal ? localAddr : serverAddr,\n  CAPTCHA: \"6Lcc6egUAAAAABDsc8m8s3m-sxfWAdPR5iV13-Tf\",\n  IOS_APP_URL:\n    \"https://apps.apple.com/us/app/mastercrimez/id1527333711?uo=4&at=11l6hc&app=itunes&ct=fnd\", //https://apps.apple.com/us/app/mastercrimez/id1527333711?app=itunes\n  ANDROID_APP_URL:\n    \"https://play.google.com/store/apps/details?id=com.wwoessi.mastercrimez&gl=NL\",\n};\n\nexport default Constants;\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Alert,\n  Dimensions,\n  Image,\n  Platform,\n  ScaledSize,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"./Constants\";\n\nconst replaceAll = (string, search, replacement) =>\n  string.split(search).join(replacement);\n\nexport const getLocale = (userLocale) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  return firstPart === \"nl\" ? \"nl\" : \"en\";\n};\nexport const getTextFunction = (userLocale) => (key, ...args) => {\n  const firstPart = userLocale && userLocale.split(\"-\")[0].split(\"_\")[0];\n\n  //default\n  let languageObject = require(\"./locale/en.json\"); //change default to 'en' later\n\n  if (firstPart === \"nl\") {\n    languageObject = require(\"./locale/nl.json\");\n  }\n\n  let string =\n    languageObject[key] ||\n    `Couldn't find key '${key}' for locale '${userLocale}'`;\n\n  args.forEach((arg, index) => {\n    string = replaceAll(string, `$${index + 1}`, arg);\n  });\n\n  return string;\n};\n\nexport const numberFormat = (x) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport async function registerForPushNotificationsAsync() {\n  let token;\n\n  if (ExpoConstants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      Alert.alert(\n        \"Geen toegang\",\n        \"Je hebt notificaties uitgezet. Ga naar instellingen om het aan te zetten.\",\n        [\n          {\n            text: \"Cancel\",\n          },\n          {\n            text: \"Open Settings\",\n            onPress: () => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            },\n          },\n        ]\n      );\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.log(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n\nexport const areYouSure = (callback, message: string) => {\n  Alert.alert(\n    \"Are you sure?\",\n    message || \"Are you sure you want to do this?\",\n    [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n\n      { text: \"Yes\", style: \"destructive\", onPress: () => callback() },\n    ],\n    { cancelable: true }\n  );\n};\n\nexport const doOnce = (cb, cleanup) => {\n  useEffect(() => {\n    cb();\n    return cleanup?.();\n  }, []);\n};\nexport const apiCall = (endpoint, method, body) => {\n  return fetch(`${Constants.SERVER_ADDR}/${endpoint}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: method === \"POST\" ? JSON.stringify(body) : undefined,\n  })\n    .then((response) => response.json())\n    .then(async (response) => {\n      return response;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Captcha = ({ loginToken }) => {\n  const [random, setRandom] = useState(Math.random());\n\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${loginToken}`;\n\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      <Image\n        source={{ uri }}\n        style={{ marginLeft: 20, width: 150, height: 50 }}\n      />\n      <TouchableOpacity onPress={() => setRandom(Math.random())}>\n        <MaterialCommunityIcons name=\"reload\" size={32} color=\"black\" />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport const withCaptcha = (\n  loginToken,\n  needCaptcha,\n  getText,\n  alertAlert,\n  setCode\n) => {\n  if (needCaptcha) {\n    alertAlert(\n      getText(\"fillInCaptcha\"),\n      getText(\"pleaseFillInCaptcha\"),\n      [\n        {\n          text: getText(\"ok\"),\n          onPress: setCode,\n        },\n      ],\n      {\n        key: \"captcha\",\n        textInput: true,\n        keyboardType: \"numeric\",\n        component: <Captcha loginToken={loginToken} />,\n      }\n    );\n  } else {\n    setCode(null);\n  }\n};\n\nexport const get = (endpoint) => apiCall(endpoint, \"GET\");\nexport const post = (endpoint, body) => apiCall(endpoint, \"POST\", body);\n\nconst isIPhoneXSize = (dim: ScaledSize) => {\n  return dim.height == 812 || dim.width == 812;\n};\n\nconst isIPhoneXrSize = (dim: ScaledSize) => {\n  return dim.height == 896 || dim.width == 896;\n};\n\nexport const isIphoneX = () => {\n  const dim = Dimensions.get(\"window\");\n\n  return (\n    // This has to be iOS\n    Platform.OS === \"ios\" &&\n    // Check either, iPhone X or XR\n    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))\n  );\n};\n\nexport function ColorLuminance(hex, lum) {\n  // validate hex string\n  hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n  if (hex.length < 6) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  lum = lum || 0;\n\n  // convert to decimal and change luminosity\n  var rgb = \"#\",\n    c,\n    i;\n  for (i = 0; i < 3; i++) {\n    c = parseInt(hex.substr(i * 2, 2), 16);\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n    rgb += (\"00\" + c).substr(c.length);\n  }\n\n  return rgb;\n}\n\nexport const lighterHex = (hex) => ColorLuminance(hex, 0.2);\nexport const darkerHex = (hex) => ColorLuminance(hex, -0.2);\n\nexport const getUserColor = (item, theme) =>\n  item?.creditsTotal >= 10000\n    ? \"red\"\n    : item?.creditsTotal >= 1000\n    ? \"yellow\"\n    : theme.primaryText;\n\nconst ranks = [\n  {\n    rank: \"Nobody\",\n    exp: 50,\n  },\n  {\n    rank: \"Vandal\",\n    exp: 150,\n  },\n  {\n    rank: \"Little thief\",\n    exp: 300,\n  },\n  {\n    rank: \"Thief\",\n    exp: 500,\n  },\n  {\n    rank: \"Carthief\",\n    exp: 800,\n  },\n  {\n    rank: \"Criminal\",\n    exp: 1200,\n  },\n  {\n    rank: \"Hitman\",\n    exp: 1800,\n  },\n  {\n    rank: \"Dangerous-Hitman\",\n    exp: 2800,\n  },\n  {\n    rank: \"Gangster\",\n    exp: 4400,\n  },\n  {\n    rank: \"Dangerous-Gangster\",\n    exp: 7600,\n  },\n  {\n    rank: \"Godfather\",\n    exp: 10000,\n  },\n  {\n    rank: \"Dangerous-Godfather\",\n    exp: 15000,\n  },\n  {\n    rank: \"Unlimited-Godfather\",\n    exp: 22000,\n  },\n  {\n    rank: \"Don\",\n    exp: 30000,\n  },\n  {\n    rank: \"Dangerous-Don\",\n    exp: 40000,\n  },\n  {\n    rank: \"Unlimited-Don\",\n    exp: 60000,\n  },\n];\n\nconst strengthRanks = [\n  {\n    rank: \"Very weak\",\n    exp: 50,\n  },\n  {\n    rank: \"Weak\",\n    exp: 150,\n  },\n  {\n    rank: \"Incredibly amature\",\n    exp: 300,\n  },\n  {\n    rank: \"Amature\",\n    exp: 500,\n  },\n  {\n    rank: \"Normal\",\n    exp: 800,\n  },\n  {\n    rank: \"Judoka\",\n    exp: 1200,\n  },\n  {\n    rank: \"A bit strong\",\n    exp: 1800,\n  },\n  {\n    rank: \"Boxer\",\n    exp: 2800,\n  },\n  {\n    rank: \"Strong\",\n    exp: 4000,\n  },\n  {\n    rank: \"Kickbokser\",\n    exp: 5600,\n  },\n  {\n    rank: \"Super strong\",\n    exp: 7000,\n  },\n  {\n    rank: \"Powerful\",\n    exp: 9000,\n  },\n  {\n    rank: \"Very powerful\",\n    exp: 11000,\n  },\n  {\n    rank: \"Super powerful\",\n    exp: 14000,\n  },\n  {\n    rank: \"Ultra deluxe powerful\",\n    exp: 17000,\n  },\n  {\n    rank: \"Inhumanly powerful\",\n    exp: 20000,\n  },\n  {\n    rank: \"Robotly powerful\",\n    exp: 25000,\n  },\n  {\n    rank: \"Godly\",\n    exp: 30000,\n  },\n  {\n    rank: \"Very godly\",\n    exp: 35000,\n  },\n  {\n    rank: \"Super godly\",\n    exp: 40000,\n  },\n  {\n    rank: \"Ultra deluxe godly\",\n    exp: 45000,\n  },\n  {\n    rank: \"God damn strong\",\n    exp: 50000,\n  },\n  {\n    rank: \"King of the gods\",\n    exp: 60000,\n  },\n];\n\nconst getRankThing = (rank, returntype, type) => {\n  const now = type.findIndex((r) => rank < r.exp);\n  const prev = now - 1;\n\n  const nowExp = type[now] ? type[now].exp : type[type.length - 1].exp;\n  const prevExp = type[prev] ? type[prev].exp : 0;\n\n  const nowRank = type[now] ? type[now].rank : type[type.length - 1].rank; //last rank always\n\n  const diff = nowExp - prevExp;\n  const progress = rank - prevExp;\n  const percentage = Math.round((progress / diff) * 100 * 10) / 10;\n\n  if (returntype === \"rankname\") {\n    return nowRank;\n  } else if (returntype === \"number\") {\n    return now !== -1 ? now + 1 : type.length;\n  } else if (returntype === \"percentage\") {\n    return percentage;\n  } else if (returntype === \"both\") {\n    return nowRank + \" \" + percentage + \"%\";\n  }\n};\n\nexport const getRank = (rank, returntype) =>\n  getRankThing(rank, returntype, ranks);\nexport const getStrength = (rank, returntype) =>\n  getRankThing(rank, returntype, strengthRanks);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nexport const AlertContext = React.createContext({});\n\nexport const AlertProvider = ({ children }) => {\n  const [alerts, setAlerts] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const getText = getTextFunction(); //TODO: Provide me?.locale\n\n  const textInputRef = useRef(null);\n\n  const theAlert = alerts[0];\n  useEffect(() => {\n    textInputRef.current?.focus();\n  }, [textInputRef, alerts.length]);\n\n  return (\n    <AlertContext.Provider\n      value={(title, message, buttons, options) => {\n        setValue(\"\");\n\n        console.log(\"lengte\", alerts.length);\n\n        // alerts copy.\n        const newAlerts = [...alerts];\n        if (!alerts.map((x) => x.options.key).includes(options.key)) {\n          newAlerts.push({ title, message, buttons, options });\n        }\n        //NB: copy needed!!!\n        setAlerts([...newAlerts]);\n      }}\n    >\n      {children}\n      {alerts.length > 0 ? (\n        <View\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: theAlert.options?.textInput ? 200 : 0,\n            left: 0,\n            right: 0,\n            backgroundColor: \"rgba(0,0,0,0.3)\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: \"#DDD\",\n              borderRadius: 20,\n              width: \"80%\",\n              alignItems: \"center\",\n            }}\n          >\n            {(theAlert.title || theAlert.message) && (\n              <View style={{ padding: 20 }}>\n                {theAlert.title && (\n                  <Text\n                    style={{\n                      fontWeight: \"bold\",\n                      fontSize: 18,\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {theAlert.title}\n                  </Text>\n                )}\n                {theAlert.message && (\n                  <Text style={{ textAlign: \"center\" }}>\n                    {theAlert.message}\n                  </Text>\n                )}\n              </View>\n            )}\n\n            {theAlert.options?.component && (\n              <View style={{ padding: 20 }}>{theAlert.options.component}</View>\n            )}\n\n            {theAlert.options?.textInput && (\n              <View style={{ padding: 20, width: \"100%\" }}>\n                <TextInput\n                  value={value}\n                  onChangeText={setValue}\n                  ref={textInputRef}\n                  style={{\n                    fontSize: 18,\n                    backgroundColor: \"white\",\n                    width: \"100%\",\n                    borderRadius: 3,\n                    padding: 3,\n                  }}\n                  keyboardType={theAlert.options?.keyboardType}\n                />\n              </View>\n            )}\n\n            <View\n              style={{ width: \"100%\", height: 1, backgroundColor: \"#BBB\" }}\n            />\n\n            {theAlert.buttons ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  width: \"100%\",\n                }}\n              >\n                {theAlert.buttons.map((button, index) => (\n                  <TouchableOpacity\n                    key={`${theAlert.options.key}button${index}`}\n                    style={{\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      height: 40,\n                      flex: 1,\n                      borderRightColor: \"#BBB\",\n                      borderRightWidth:\n                        index < theAlert.buttons.length - 1 ? 1 : 0,\n                    }}\n                    onPress={() => {\n                      const newAlerts = [...alerts];\n                      newAlerts.shift();\n\n                      console.log(\"newAlerts\", newAlerts.length);\n\n                      // NB: we need to make a copy here, otherwise it has the same reference and the component thinks that it didn't change.\n                      setAlerts([...newAlerts]);\n\n                      setValue(\"\");\n\n                      button.onPress?.(value);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: \"blue\",\n                        fontSize: 18,\n                      }}\n                    >\n                      {button.text}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            ) : (\n              <TouchableOpacity\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: 40,\n                }}\n                onPress={() => {\n                  const newAlerts = alerts.filter(\n                    (x) => x.options.key !== theAlert.options.key\n                  );\n\n                  console.log(\"newAlerts\", newAlerts.lenth);\n\n                  // NB: we need to make a copy here, otherwise it has the same reference and the component thinks that it didn't change.\n                  setAlerts([...newAlerts]);\n                }}\n              >\n                <Text style={{ color: \"blue\", fontSize: 18 }}>\n                  {getText(\"ok\")}\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      ) : null}\n    </AlertContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withAlert = (ChildComponent) => (props) => (\n  <AlertContext.Consumer>\n    {(context) => <ChildComponent {...props} alert={context} />}\n  </AlertContext.Consumer>\n);\n","import NetInfo from \"@react-native-community/netinfo\";\nimport React from \"react\";\nimport { Platform, SafeAreaView, Text, View } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport Constants from \"../Constants\";\n\nconst CONNECTION_GOOD = 2;\nconst CONNECTION_BAD = 1;\nconst CONNECTION_NONE = 0;\n\nclass ConnectionProviderScreen extends React.Component {\n  componentDidMount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe = NetInfo.addEventListener((state) => {\n        // console.log(\"Connection type\", state.type);\n        // console.log(\"Is connected?\", state.isConnected);\n        this.props.setIsConnected(\n          state.isConnected ? CONNECTION_GOOD : CONNECTION_NONE\n        );\n      });\n    }\n\n    this.interval = setInterval(this.fetchWithTimeout, 5000);\n\n    // To unsubscribe to these update, just use:\n  }\n\n  fetchWithTimeout = () => {\n    const FETCH_TIMEOUT = 5000;\n    let didTimeOut = false;\n\n    new Promise(function (resolve, reject) {\n      const timeout = setTimeout(function () {\n        didTimeOut = true;\n        reject(new Error(\"Request timed out\"));\n      }, FETCH_TIMEOUT);\n\n      fetch(Constants.SERVER_ADDR + \"/healthcheck\")\n        .then(function (response) {\n          // Clear the timeout as cleanup\n          clearTimeout(timeout);\n          if (!didTimeOut) {\n            // console.log(\"fetch good! \");\n            resolve(response);\n          }\n        })\n        .catch(function (err) {\n          // console.log(\"fetch failed! \", err);\n\n          // Rejection already happened with setTimeout\n          if (didTimeOut) return;\n          // Reject with error\n          reject(err);\n        });\n    })\n      .then(() => {\n        // Request success and no timeout\n        this.props.setIsConnected(CONNECTION_GOOD);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        this.props.setIsConnected(CONNECTION_BAD);\n        // Error: response error, request timeout or runtime error\n      });\n  };\n\n  componentWillUnmount() {\n    if (Platform.OS !== \"web\") {\n      this.unsubscribe();\n    }\n    clearTimeout(this.interval);\n  }\n\n  render() {\n    const { children, isConnected } = this.props;\n\n    return (\n      <View style={{ flex: 1 }}>\n        {isConnected !== CONNECTION_GOOD && (\n          <View\n            style={{\n              backgroundColor:\n                isConnected === CONNECTION_BAD ? \"orange\" : \"red\",\n              padding: 15,\n            }}\n          >\n            <SafeAreaView>\n              <Text style={{ color: \"white\" }}>\n                {isConnected === CONNECTION_BAD ? \"Slechte\" : \"Geen\"}{\" \"}\n                internetverbinding!\n              </Text>\n            </SafeAreaView>\n          </View>\n        )}\n        {children}\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isConnected: state.device.isConnected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setIsConnected: (isConnected) =>\n    dispatch({ type: \"SET_IS_CONNECTED\", value: isConnected }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectionProviderScreen);\n","import React, { useEffect, useState } from \"react\";\nimport { post } from \"../Util\";\n\nexport const IntervalContext = React.createContext({});\nexport const IntervalProvider = ({\n  children,\n  screenProps: { me, dispatch, device, reloadMe },\n}) => {\n  const [token, setToken] = useState(device.loginToken);\n\n  useEffect(() => {\n    if (token) {\n      const intervalReloadMe = setInterval(() => {\n        // console.log(\"This will run every 5 seconds! TOKEN:\", token);\n        reloadMe(device.loginToken);\n      }, 5000);\n\n      const intervalMovements = setInterval(() => {\n        // console.log(\"This will run every 60 seconds! TOKEN:\");\n        sendMovements();\n      }, 60000);\n\n      return () => {\n        // console.log(\"clearing interval because token changed\");\n        clearInterval(intervalReloadMe);\n        clearInterval(intervalMovements);\n      };\n    }\n  }, [token]);\n\n  const sendMovements = () => {\n    // console.log(\"sendMovements\", device.loginToken);\n    if (device.movements.length > 0) {\n      post(\"movementsApp\", {\n        loginToken: device.loginToken,\n        movements: device.movements,\n      });\n      dispatch({ type: \"CLEAR_MOVEMENTS\" });\n    }\n  };\n\n  return (\n    <IntervalContext.Provider\n      value={{\n        resetIntervalsForToken: (token) => setToken(token),\n      }}\n    >\n      {children}\n    </IntervalContext.Provider>\n  );\n};\n\n// create the consumer as higher order component\nexport const withInterval = (ChildComponent) => (props) => (\n  <IntervalContext.Consumer>\n    {(context) => <ChildComponent {...props} intervals={context} />}\n  </IntervalContext.Consumer>\n);\n","import React from \"react\";\nimport { Dimensions, Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport { useSelector } from \"react-redux\";\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nconst Button = ({ icon, font, title, onPress, disabled, style }) => {\n  const TheIcon = font && icon ? Icon[font] : View;\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity onPress={disabled ? undefined : onPress}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: disabled ? `${theme.secondary}55` : theme.secondary,\n          padding: 10,\n          justifyContent: \"center\",\n          paddingHorizontal: isSmall ? 5 : 20,\n          // borderRadius: 20,\n          ...style,\n        }}\n      >\n        {font && icon ? (\n          <View style={{ marginRight: 20 }}>\n            <TheIcon name={icon} color={theme.secondaryText} size={20} />\n          </View>\n        ) : null}\n\n        {title && (\n          <Text style={{ textAlign: \"center\", color: theme.secondaryText }}>\n            {title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Image, Text, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nclass Dead extends React.Component {\n  state = {\n    selected: null,\n    response: null,\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View>\n          <Image\n            source={require(\"../../assets/dood.jpg\")}\n            style={{ width: 402, height: 424 }}\n          />\n          {this.state.response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n          <Button\n            title={getText(\"deadBecomeAlive\")}\n            onPress={() => {\n              fetch(`${Constants.SERVER_ADDR}/getalive`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  token: device.loginToken,\n                  option: this.state.selected,\n                }),\n              })\n                .then((response) => response.json())\n                .then(async (response) => {\n                  reloadMe(device.loginToken);\n\n                  this.setState({ response });\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Dead;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { getTextFunction } from \"../Util\";\n\nclass Fly extends React.Component {\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n    const sec = Math.round((me.reizenAt - Date.now()) / 1000);\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"flyYoureTravelingTo\", me?.city)}\n        </Text>\n        <CountDown\n          until={sec}\n          onFinish={() => {\n            reloadMe(device.loginToken);\n          }}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Fly;\n","import React, { Component, Fragment } from \"react\";\nimport {\n  Platform,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarqueeText from \"react-native-marquee\";\nimport Ticker from \"react-ticker\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  chat = () => {\n    const { chat } = this.state;\n    return chat.map((item, index) => (\n      <Text key={`item${index}`}>\n        <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>:&nbsp;\n        {item.message}&nbsp;&nbsp;\n      </Text>\n    ));\n  };\n  render() {\n    const { device, navigation, me } = this.props;\n\n    const { chat, input } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const allText = chat\n      .map((item) => `${item.name}${item.message}`)\n      .join(\"::::\");\n    return (\n      <View style={{ height: Platform.select({ web: 50, default: 100 }) }}>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"#444\",\n            borderWidth: 1,\n            borderColor: \"black\",\n            flexDirection: Platform.select({ web: \"row\", default: undefined }),\n          }}\n        >\n          {Platform.select({\n            web: (\n              <View style={{ flex: 1, justifyContent: \"center\" }}>\n                {allText ? (\n                  <Ticker>\n                    {({ index }) => {\n                      return (\n                        <>\n                          {chat.map((item, index) => (\n                            <Text\n                              style={{ color: \"white\" }}\n                              numberOfLines={1}\n                              key={`item${index}`}\n                            >\n                              <TouchableOpacity\n                                onPress={() => {\n                                  navigation.navigate(\"Profile\", {\n                                    name: item.name,\n                                  });\n                                }}\n                              >\n                                <Text style={{ fontWeight: \"bold\" }}>\n                                  {item.name}\n                                </Text>\n                              </TouchableOpacity>\n                              :&nbsp;{item.message}&nbsp;&nbsp;\n                            </Text>\n                          ))}\n                        </>\n                      );\n                    }}\n                  </Ticker>\n                ) : null}\n              </View>\n            ),\n\n            default: (\n              <MarqueeText\n                style={{ fontSize: 20 }}\n                duration={allText.length * 50}\n                marqueeOnStart\n                loop\n                marqueeDelay={200}\n                marqueeResetDelay={1000}\n              >\n                <>\n                  {chat.map((item, index) => (\n                    <Fragment key={`item${index}`}>\n                      <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\n                      :&nbsp;{item.message}&nbsp;&nbsp;\n                    </Fragment>\n                  ))}\n                </>\n              </MarqueeText>\n            ),\n          })}\n          <View style={{ width: 100, height: 30 }}>\n            <TextInput\n              value={input}\n              placeholder={getText(\"chatYourMessage\")}\n              style={{\n                backgroundColor: \"#404040\",\n                fontSize: 20,\n                color: \"white\",\n                flex: 1,\n                width: 100,\n              }}\n              onChangeText={(input) => this.setState({ input })}\n              onSubmitEditing={({ nativeEvent: { text } }) => {\n                fetch(`${Constants.SERVER_ADDR}/chat`, {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    token: device.loginToken,\n                    message: text,\n                  }),\n                })\n                  .then((response) => response.json())\n                  .then((chat) => {\n                    this.getChat();\n\n                    if (Platform.OS === \"web\") {\n                      location.reload();\n                    }\n\n                    this.setState({ input: \"\" });\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Constants from \"expo-constants\";\nimport React from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  StatusBar,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Chat from \"../components/Chat\";\nimport { useExpoUpdate } from \"../updateHook\";\nimport { getRank, getStrength, getTextFunction, numberFormat } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nconst isSmallDevice = width < 800;\n\nfunction Header({ navigation, device, me }) {\n  const getText = getTextFunction(me?.locale);\n\n  let updateAvailable = false;\n  if (Platform.OS !== \"web\") {\n    updateAvailable = useExpoUpdate();\n  }\n\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: device.theme.secondaryText,\n  };\n  const showNotActivated = me?.phoneVerified === false && me?.numActions >= 20;\n  const notActivated = showNotActivated && (\n    <View\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerNotVerified\")}\n      </Text>\n      <View\n        style={{\n          marginTop: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Button\n          title={getText(\"headerVerify\")}\n          onPress={() => navigation.navigate(\"VerifyPhone\")}\n        />\n        <Button\n          title={getText(\"headerLoginOnAnother\")}\n          onPress={() => navigation.navigate(\"Login\")}\n        />\n      </View>\n    </View>\n  );\n\n  const dontShowStatsHeader = false;\n\n  const showBackButton = navigation.state.routeName !== \"Home\";\n\n  const statsHeader = dontShowStatsHeader ? null : (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2,\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5,\n        }}\n      >\n        <Text style={textStyle}>\n          😎 {me?.name} {me?.gang?.name}\n        </Text>\n        <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n        <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon.MaterialCommunityIcons\n            name=\"pistol\"\n            size={18}\n            color={device.theme.secondaryText}\n            style={{ marginRight: 5 }}\n          />\n          <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n        </View>\n        <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n        <Text style={textStyle}>🌍 {me?.city}</Text>\n        <Text style={textStyle}>❤️ {me?.health}%</Text>\n        <Text style={textStyle}>\n          ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n        </Text>\n        <Text style={textStyle}>💪 {getStrength(me?.strength, \"both\")}</Text>\n        {!me?.newVersion && (\n          <Text\n            style={textStyle}\n            onPress={() => navigation.navigate(\"Channels\")}\n          >\n            💬 {me?.chats}\n          </Text>\n        )}\n      </View>\n\n      {!me?.phoneVerified && (\n        <View\n          style={{\n            padding: 5,\n            backgroundColor: device.theme.secondary,\n            borderRadius: 5,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"VerifyPhone\")}\n          >\n            <AntDesign\n              name=\"exclamationcircleo\"\n              color=\"red\"\n              style={{ marginRight: 10 }}\n            />\n            <Text\n              style={{\n                color: device.theme.secondaryText,\n                fontWeight: \"bold\",\n              }}\n            >\n              {getText(\"headerVerifyYourAccount\")}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n  const updateComponent = updateAvailable && (\n    <TouchableOpacity\n      onPress={() => Updates.reloadAsync()}\n      style={{\n        padding: 15,\n        backgroundColor: device.theme.secondary,\n        borderRadius: 5,\n      }}\n    >\n      <Text style={{ color: device.theme.secondaryText }}>\n        {getText(\"headerUpdateAvailable\")}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const backButton = (\n    <View\n      style={{\n        margin: 10,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n      }}\n    >\n      {showBackButton ? (\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => {\n            if (isSmallDevice || Platform.OS !== \"web\") {\n              navigation.goBack();\n            } else {\n              window.history.back();\n            }\n          }}\n        >\n          <AntDesign\n            name=\"arrowleft\"\n            size={32}\n            color={device.theme.secondaryText}\n          />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ height: 20 }} />\n      )}\n    </View>\n  );\n\n  const webHeader = (\n    <View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n        <View style={{ width: 50 }}>{backButton}</View>\n\n        <View style={{ alignItems: \"center\", flex: 1 }}>\n          <Image\n            source={require(\"../../assets/logos/logo5.jpg\")}\n            style={{\n              margin: 10,\n              width: isSmallDevice ? 200 : 600,\n              height: isSmallDevice ? 33 : 100,\n            }}\n          />\n        </View>\n\n        <Text style={{ color: \"white\", marginTop: 20 }}>\n          v{Constants.manifest.version}\n        </Text>\n\n        {isSmallDevice ? (\n          <TouchableOpacity\n            onPress={() => {\n              navigation.toggleDrawer();\n            }}\n            style={{ margin: 10 }}\n          >\n            <Feather\n              name=\"menu\"\n              size={32}\n              color=\"#FFF\"\n              style={{ color: \"#FFF\" }}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n\n      {isSmallDevice && statsHeader}\n\n      <Chat me={me} device={device} navigation={navigation} />\n    </View>\n  );\n\n  const showSomething =\n    showBackButton ||\n    !dontShowStatsHeader ||\n    updateAvailable ||\n    showNotActivated;\n\n  return (\n    <View style={{ justifyContent: \"center\" }}>\n      {Platform.OS === \"web\" ? (\n        webHeader\n      ) : (\n        <View\n          style={{\n            backgroundColor: device.theme.secondary,\n            paddingTop:\n              Platform.OS === \"android\" && showSomething\n                ? StatusBar.currentHeight\n                : 0,\n          }}\n        >\n          {backButton}\n          {updateComponent || notActivated || statsHeader}\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default Header;\n","import * as Updates from \"expo-updates\";\nimport { useEffect, useState } from \"react\";\n\nexport const useExpoUpdate = () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    if (!__DEV__) {\n      setUpdateListener();\n      Updates.addListener(() => checkUpdate());\n      checkUpdate();\n    }\n  }, []);\n\n  const setUpdateListener = () => {\n    Updates.addListener(() => checkUpdate());\n  };\n  const checkUpdate = () => {\n    Updates.checkForUpdateAsync().then((res) => {\n      if (res.isAvailable) {\n        Updates.fetchUpdateAsync().then((res) => {\n          setUpdateAvailable(true);\n        });\n      }\n    });\n  };\n\n  return updateAvailable;\n};\n","import { canUseDOM } from \"fbjs/lib/ExecutionEnvironment\";\n\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener(\"touchstart\", disableHover, true);\n  document.addEventListener(\"touchmove\", disableHover, true);\n  document.addEventListener(\"mousemove\", enableHover, true);\n}\n\nexport function isHoverEnabled() {\n  return isEnabled;\n}\n","import { element, func, oneOfType } from \"prop-types\";\nimport React from \"react\";\nimport { isHoverEnabled } from \"./HoverState\";\n\nexport default function Hoverable({ onHoverIn, onHoverOut, children }) {\n  const [isHovered, setHovered] = React.useState(false);\n  const [showHover, setShowHover] = React.useState(true);\n\n  function handleMouseEnter(e) {\n    if (isHoverEnabled() && !isHovered) {\n      if (onHoverIn) onHoverIn();\n      setHovered(true);\n    }\n  }\n\n  function handleMouseLeave(e) {\n    if (isHovered) {\n      if (onHoverOut) onHoverOut();\n      setHovered(false);\n    }\n  }\n\n  function handleGrant() {\n    setShowHover(false);\n  }\n\n  function handleRelease() {}\n\n  const child =\n    typeof children === \"function\"\n      ? children(showHover && isHovered)\n      : children;\n\n  return React.cloneElement(React.Children.only(child), {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    // prevent hover showing while responder\n    onResponderGrant: () => setShowHover(false),\n    onResponderRelease: () => setShowHover(true),\n    // if child is Touchable\n    onPressIn: handleGrant,\n    onPressOut: handleRelease,\n  });\n}\n\nHoverable.displayName = \"Hoverable\";\n\nHoverable.propTypes = {\n  children: oneOfType([func, element]),\n  onHoverIn: func,\n  onHoverOut: func,\n};\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst T = ({ children, bold, ...props }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <Text\n      {...props}\n      style={[\n        { color: theme.primaryText, fontWeight: bold ? \"bold\" : undefined },\n        props.style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default T;\n","import React from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport T from \"./T\";\nclass Jail extends React.Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n\n    const { reloadMe, device } = this.props.screenProps;\n    this.interval = setInterval(() => {\n      reloadMe(device.loginToken);\n      this.fetchMembers();\n    }, 2500);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clear interval jail\");\n    clearInterval(this.interval);\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n      </View>\n    );\n  };\n\n  buyOut = async (type) => {\n    const { device, reloadMe } = this.props.screenProps;\n    const { response } = await post(\"buyout\", {\n      token: device.loginToken,\n      type,\n    });\n    this.setState({ response });\n    reloadMe(device.loginToken);\n  };\n  render() {\n    const {\n      screenProps: { me, device, reloadMe },\n      navigation,\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { response } = this.state;\n    const sec = Math.round((me.jailAt - Date.now()) / 1000);\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <T>{getText(\"jailYoureInJail\")}</T>\n\n        <CountDown\n          until={sec}\n          size={20}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n        />\n\n        <View style={{ height: 15 }} />\n\n        {response && <T>{response}</T>}\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCredits\")}\n          onPress={() => this.buyOut(\"credits\")}\n        />\n        <Button\n          style={{ marginVertical: 15 }}\n          title={getText(\"jailBuyoutCash\")}\n          onPress={() => this.buyOut(\"cash\")}\n        />\n\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","import { StyleSheet } from \"react-native\";\n\nconst style = (theme) =>\n  StyleSheet.create({\n    textInput: {\n      color: theme.secondaryText,\n      backgroundColor: theme.secondary,\n      padding: 10,\n      justifyContent: \"center\",\n      paddingHorizontal: 20,\n      // borderRadius: 20,\n      marginVertical: 10,\n    },\n    container: {\n      flex: 1,\n      margin: 20,\n    },\n  });\n\nexport default style;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nimport Button from \"./Button\";\nimport { IntervalContext } from \"./IntervalProvider\";\nimport T from \"./T\";\n\nconst LoginModal = ({\n  screenProps: {\n    dispatch,\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n  navigation,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [phone, setPhone] = useState(\"\");\n  const [view, setView] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const changeName = async () => {\n    const { response, success } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    setResponse(response);\n\n    return success;\n  };\n\n  const login = () => dispatch({ type: \"SET_LOGGED\", value: true });\n  useEffect(() => {\n    setName(me?.name);\n  }, [me?.name]);\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n  const postVerifyPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n          resetIntervalsForToken(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postLogin = () => {\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        if (responseJson.error) {\n          setError(responseJson.error);\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n          reloadMe(responseJson.loginToken);\n          setError(null);\n          setSuccess(responseJson.success);\n          resetIntervalsForToken(responseJson.token);\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const postSetPhone = () => {\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token: device.loginToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setResponse(responseJson.response);\n\n        if (responseJson.success) {\n          setView(\"code\");\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderEmailPassLogin = () => (\n    <View>\n      <View\n        style={{\n          margin: 20,\n          padding: 20,\n          borderRadius: 20,\n        }}\n      >\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\n\n        {success ? (\n          <Text style={{ color: \"green\" }}>{success}</Text>\n        ) : (\n          <View>\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n              <TextInput\n                placeholder={getText(\"email\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                onChangeText={setEmail}\n                value={email}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n              <TextInput\n                secureTextEntry\n                onChangeText={setPassword}\n                value={password}\n                style={style(theme).textInput}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <View />\n\n              <Button\n                theme={theme}\n                title={getText(\"login\")}\n                onPress={() => postLogin()}\n              />\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                padding: 10,\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n\n                  navigation.navigate(\"SignupEmail\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"register\")}\n                </Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() => {\n                  login();\n                  navigation.navigate(\"ForgotPassword\");\n                }}\n              >\n                <Text\n                  style={{\n                    margin: 20,\n                    fontSize: 20,\n                    textDecorationLine: \"underline\",\n                  }}\n                >\n                  {getText(\"forgotPassword\")}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n  const renderCode = () => (\n    <View>\n      {response && <T>{response}</T>}\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n        <TextInput\n          placeholder=\"000000\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setCode}\n          value={code}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button title={getText(\"validate\")} onPress={() => postVerifyPhone()} />\n      </View>\n    </View>\n  );\n  const renderPhoneLogin = () => (\n    <View>\n      {response && <T>{response}</T>}\n\n      <View\n        style={{\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n        <TextInput\n          placeholder=\"+31\"\n          placeholderTextColor={theme.secondaryTextSoft}\n          onChangeText={setPhone}\n          value={phone}\n          style={style(theme).textInput}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 10,\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View />\n\n        <Button\n          theme={theme}\n          title={getText(\"save\")}\n          onPress={() => postSetPhone()}\n        />\n      </View>\n    </View>\n  );\n  const renderMain = () => (\n    <View>\n      {/* Option 1: Just play */}\n      {response && <T>{response}</T>}\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"youAre\")}</T>\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={[style(theme).textInput, { marginLeft: 10 }]}\n          placeholder={getText(\"name\")}\n          value={name}\n          onChangeText={setName}\n        />\n      </View>\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"justPlay\")}\n        onPress={async () => {\n          if (!me) {\n            setResponse(getText(\"waitUntilLoaded\"));\n            return;\n          }\n          if (name !== me?.name) {\n            const success = await changeName();\n            if (success) {\n              reloadMe(device.loginToken);\n\n              login();\n            }\n          } else {\n            login();\n          }\n        }}\n      />\n      {/* Option 2: Login with email */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithEmail\")}\n        onPress={() => setView(\"emailPass\")}\n      />\n      {/* Option 3: Login with phone number */}\n      <Button\n        style={{ marginVertical: 10 }}\n        title={getText(\"loginWithPhone\")}\n        onPress={() => setView(\"phone\")}\n      />\n    </View>\n  );\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: \"rgba(0,0,0,0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: 20,\n          padding: 20,\n        }}\n      >\n        <TouchableOpacity\n          onPress={view !== null ? () => setView(null) : login}\n          style={{ alignSelf: \"flex-end\" }}\n        >\n          <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n        </TouchableOpacity>\n\n        {!me?.id ? <ActivityIndicator /> : null}\n\n        {view === \"emailPass\"\n          ? renderEmailPassLogin()\n          : view === \"phone\"\n          ? renderPhoneLogin()\n          : view === \"code\"\n          ? renderCode()\n          : renderMain()}\n      </View>\n    </View>\n  );\n};\n\nexport default LoginModal;\n","import * as React from \"react\";\nimport { Animated, Easing, Keyboard, Platform, StatusBar } from \"react-native\";\nimport { isIphoneX } from \"./Util\";\n\ninterface KeyboardAvoidingSpaceProps {\n  onKeyboardWillShow?: (duration: number) => void;\n  onKeyboardWillHide?: (duration: number) => void;\n  offset?: number;\n}\n\ninterface KeyboardAvoidingSpaceState {\n  height: Animated.Value;\n}\n\n/**\n * Made with swag by yours truly\n * @author Brad \"Swagalicious\" Johnson\n */\nexport class KeyboardAvoidingSpace extends React.Component<\n  KeyboardAvoidingSpaceProps,\n  KeyboardAvoidingSpaceState\n> {\n  constructor(props: KeyboardAvoidingSpaceProps) {\n    super(props);\n    this.state = {\n      height: new Animated.Value(0),\n    };\n  }\n\n  componentDidMount() {\n    this.bindListeners();\n  }\n\n  componentWillUnmount() {\n    this.unbindListeners();\n  }\n\n  bindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener = Keyboard.addListener(\n        \"keyboardWillShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardWillHideListener = Keyboard.addListener(\n        \"keyboardWillHide\",\n        this.keyboardWillHide\n      );\n    } else {\n      this.keyboardDidShowListener = Keyboard.addListener(\n        \"keyboardDidShow\",\n        this.keyboardWillShow\n      );\n      this.keyboardDidHideListener = Keyboard.addListener(\n        \"keyboardDidHide\",\n        this.keyboardWillHide\n      );\n    }\n  }\n\n  unbindListeners() {\n    if (Platform.OS === \"ios\") {\n      this.keyboardWillShowListener.remove();\n      this.keyboardWillHideListener.remove();\n    } else {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }\n\n  keyboardWillShow = (e: any) => {\n    // because of iPhone X new screen settings, remove SafeAreaView padding-bottom when keyboard is open\n    const SafeAreaViewPaddingBottom = 34;\n    const duration = e && e.duration ? e.duration : 100;\n    let notchHeight = 0;\n    if (\n      Platform.OS === \"android\" &&\n      StatusBar.currentHeight &&\n      StatusBar.currentHeight > 24\n    ) {\n      notchHeight = StatusBar.currentHeight;\n    }\n    // let suggestHeight = 0;\n    // if (Platform.OS === \"ios\") {\n    //   suggestHeight = 30;\n    // }\n    if (this.props.onKeyboardWillShow) {\n      this.props.onKeyboardWillShow(duration);\n    }\n\n    const toValue =\n      e.endCoordinates.height -\n      // suggestHeight +\n      // notchHeight -\n      (this.props.offset || 0) -\n      (isIphoneX() ? SafeAreaViewPaddingBottom : 0);\n\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  keyboardWillHide = (e: any) => {\n    const duration = e && e.duration ? e.duration : 100;\n    if (this.props.onKeyboardWillHide) {\n      this.props.onKeyboardWillHide(duration);\n    }\n    Animated.timing(this.state.height, {\n      duration,\n      easing: Easing.ease,\n      toValue: 0,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    return <Animated.View style={{ height: this.state.height }} />;\n  }\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport CountDown from \"react-native-countdown-component\";\nimport Constants from \"./Constants\";\nimport { getRank, getTextFunction, numberFormat } from \"./Util\";\n\nexport const isHappyHour = () => {\n  const isSunday = moment().day() === 0; //sunday\n  const is7pm = moment().hour() === 19; //19pm\n  const isHappyHourReleased = moment().isAfter(\n    moment(\"01/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17)\n  );\n  return isHappyHourReleased && (isSunday || is7pm);\n};\n\nexport const InactiveScreens = {\n  ACTIONS_BEFORE_ROBBERY: 120,\n  ACTIONS_BEFORE_DETECTIVES: 30,\n  ACTIONS_BEFORE_BOMB: 60,\n  ACTIONS_BEFORE_CASINO: 70,\n  ACTIONS_BEFORE_BUNKER: 20,\n  ACTIONS_BEFORE_HOSPITAL: 30,\n  ACTIONS_BEFORE_RACECARS: 80,\n  ACTIONS_BEFORE_STREETRACE: 80,\n  ACTIONS_AMOUNT_NEW: 10,\n  ACTIONS_BEFORE_ROB: 20,\n  ACTIONS_BEFORE_ROB_KILL_MENU: 20,\n  ACTIONS_BEFORE_KILL: 30,\n  ACTIONS_BEFORE_BULLETFACTORY: 40,\n  ACTIONS_BEFORE_MARKET: 50,\n  ACTIONS_BEFORE_AIRPORT: 30,\n  DAYS_NEW: 14,\n  ACTIONS_BEFORE_POLICE: 100,\n  OC_RELEASE_DATE: moment(\"01/08/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  DETECTIVES_RELEASE_DATE: moment(\"01/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  GANG_MISSIONS_RELEASE_DATE: moment(\"01/05/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_BULLET_FACTORY_RELEASE_DATE: moment(\"15/08/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  PRIZES_NORMAL_RELEASE_DATE: moment(\"01/12/2020\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_RELEASE_DATE: moment(\"30/11/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  MARKET_RELEASE_DATE: moment(\"15/12/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  PRIZES_RELEASE_DATE: moment(\"01/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  POLICE_RELEASE_DATE: moment(\"15/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  ROBBERY_RELEASE_DATE: moment(\"15/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  //happy hour 1 feb\n\n  WORK_RELEASE_DATE: moment(\"15/04/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n};\n\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const robberySeconds = Math.ceil(\n    (me?.robberyAt + me?.robberySeconds * 1000 - Date.now()) / 1000\n  );\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCrime\"),\n        label: isHappyHour() ? \"Happy Hour\" : undefined,\n      },\n\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuCrimes\"),\n          to: \"Crimes\",\n          component:\n            crimeSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={crimeSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"stepforward\",\n          text: getText(\"menuGym\"),\n          to: \"Gym\",\n          component:\n            gymSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={gymSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"tree\",\n          text: getText(\"menuWiet\"),\n          to: \"Wiet\",\n          component:\n            wietSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={wietSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"MaterialIcons\",\n          icon: \"people\",\n          text: getText(\"menuJunkies\"),\n          to: \"Junkies\",\n          component:\n            junkiesSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={junkiesSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"female\",\n          text: getText(\"menuProstitutes\"),\n          to: \"Hoeren\",\n          component:\n            hoerenSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={hoerenSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive:\n            moment().isBefore(InactiveScreens.WORK_RELEASE_DATE) &&\n            me?.level < 2,\n          isNew: moment().isBefore(\n            moment(InactiveScreens.WORK_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"tool\",\n          text: getText(\"menuWork\"),\n          to: \"Work\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bars\",\n          text: getText(\"menuJail\", me?.jail),\n          to: \"Jail\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_BOMB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BOMB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"bomb\",\n          text: getText(\"menuBomb\"),\n          to: \"Bomb\",\n        },\n\n        {\n          inactive:\n            (moment().isBefore(InactiveScreens.ROBBERY_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROBBERY,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.ROBBERY_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_ROBBERY +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuRobbery\"),\n          to: \"Robbery\",\n          component:\n            robberySeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robberySeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    !(\n      !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB_KILL_MENU\n    ) && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerRobMurder\"),\n      },\n\n      content: [\n        {\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_KILL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_KILL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuKill\"),\n          to: \"Kill\",\n          component:\n            attackSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={attackSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_ROB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuRob\"),\n          to: \"Rob\",\n          component:\n            robSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive:\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuBulletfactory\"),\n          to: \"Bulletfactory\",\n        },\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_BUNKER,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BUNKER +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"warehouse\",\n          text: getText(\"menuBunker\"),\n          to: \"Bunker\",\n          component:\n            bunkerSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={bunkerSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_HOSPITAL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_HOSPITAL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"hospital\",\n          text: getText(\"menuHospital\"),\n          to: \"Hospital\",\n        },\n\n        {\n          inactive:\n            (moment().isBefore(InactiveScreens.DETECTIVES_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_DETECTIVES,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.DETECTIVES_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACtIONS_BEFORE_DETECTIVES +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"search\",\n          text: getText(\"menuDetectives\"),\n          to: \"Detectives\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCars\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"car\",\n          text: getText(\"menuStealCar\"),\n          to: \"StealCar\",\n          component:\n            stealcarSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={stealcarSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-car\",\n          text: getText(\"menuGarage\"),\n          to: \"AllGarage\",\n        },\n        // {\n        //   inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_RACECARS,\n        //   isNew:\n        //     me?.numActions <\n        //     InactiveScreens.ACTIONS_BEFORE_RACECARS +\n        //       InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n        //   iconType: \"MaterialIcons\",\n        //   icon: \"local-car-wash\",\n        //   text: getText(\"menuRacecars\"),\n        //   to: \"Racecars\",\n        // },\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_STREETRACE,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_STREETRACE +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"car-key\",\n          text: getText(\"menuStreetrace\"),\n          to: \"Streetrace\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSpend\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuBank\"),\n          to: \"AllBanks\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me.level < 1) &&\n              moment().isBefore(InactiveScreens.MARKET_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_MARKET,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.MARKET_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_MARKET +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuMarket\"),\n          to: \"Market\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_CASINO,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_CASINO +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome5\",\n          icon: \"dice\",\n          text: getText(\"menuCasino\"),\n          to: \"Casino\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"home\",\n          text: getText(\"homeShop\"),\n          to: \"EstateAgent\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuWeaponShop\"),\n          to: \"WeaponShop\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"shield\",\n          text: getText(\"menuProtectionShop\"),\n          to: \"ProtectionShop\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-airplane\",\n          text: getText(\"menuAirplaneShop\"),\n          to: \"AirplaneShop\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"garage\",\n          text: getText(\"menuGarageShop\"),\n          to: \"GarageShop\",\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_AIRPORT,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_AIRPORT +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"plane\",\n          text: getText(\"menuAirport\"),\n          to: \"Airport\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n  ].filter((x) => !!x);\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level >= 5\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuReports\"),\n            to: \"Reports\",\n          },\n        ]\n      : [];\n\n  const betaTester = me?.level >= 2 ? [] : [];\n  const admin = me?.level >= 10 ? [] : [];\n\n  return (\n    me?.level > 1 && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAdminPanel\"),\n      },\n      content: [...betaTester, ...gameMod, ...admin],\n    }\n  );\n};\n\nexport const rightMenu = (me, theme) => {\n  const getText = getTextFunction(me?.locale);\n  const ocSeconds = Math.ceil((me?.ocAt + 3600000 - Date.now()) / 1000);\n\n  const isGangsReleased = new moment().isAfter(\n    InactiveScreens.GANG_RELEASE_DATE\n  );\n  const gangMenus =\n    me?.level > 1 || isGangsReleased\n      ? {\n          header: {\n            isHeader: true,\n            isNew: moment().isBefore(\n              moment(InactiveScreens.GANG_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ),\n            text: me?.gang?.name || getText(\"headerGang\"),\n            image: me?.gang?.thumbnail\n              ? Constants.SERVER_ADDR + me?.gang?.thumbnail\n              : null,\n          },\n          content: [\n            !me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangCreate\"),\n              to: \"GangCreate\",\n            },\n            {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangs\"),\n              to: \"Gangs\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangSettings\"),\n              to: \"GangSettings\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangShop\"),\n              to: \"GangShop\",\n            },\n\n            me?.gangId && {\n              iconType: \"Ionicons\",\n              icon: \"ios-people\",\n              text: getText(\"menuGangAchievements\"),\n              to: \"GangAchievements\",\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(\n                  InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE\n                ),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"MaterialCommunityIcons\",\n              icon: \"pistol\",\n              text: getText(\"menuBulletfactory\"),\n              to: \"GangBulletFactory\",\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(InactiveScreens.OC_RELEASE_DATE),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.OC_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"Ionicons\",\n              icon: \"md-cash\",\n              text: getText(\"menuOC\"),\n              to: \"OC\",\n              component:\n                ocSeconds > 0 ? (\n                  <CountDown\n                    style={{ marginLeft: 10 }}\n                    until={ocSeconds}\n                    digitStyle={{ backgroundColor: theme.secondary }}\n                    digitTxtStyle={{ color: theme.secondaryText }}\n                    onFinish={() => {}}\n                    size={8}\n                    timeToShow={[\"M\", \"S\"]}\n                    timeLabels={{ m: null, s: null }}\n                  />\n                ) : null,\n            },\n\n            me?.gangId && {\n              inactive:\n                me?.level < 2 &&\n                moment().isBefore(InactiveScreens.GANG_MISSIONS_RELEASE_DATE),\n              isNew: moment().isBefore(\n                moment(InactiveScreens.GANG_MISSIONS_RELEASE_DATE).add(\n                  InactiveScreens.DAYS_NEW,\n                  \"days\"\n                )\n              ),\n              iconType: \"Ionicons\",\n              icon: \"md-cash\",\n              text: getText(\"menuGangMissions\"),\n              to: \"GangMissions\",\n            },\n          ].filter((x) => !!x && !x.inactive),\n        }\n      : null;\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: me?.name,\n        image: me?.thumbnail ? Constants.SERVER_ADDR + me?.thumbnail : null,\n      },\n\n      content: [\n        {\n          isStats: true,\n          iconType: \"FontAwesome5\",\n          icon: \"coins\",\n          text: getText(\"menuCash\", numberFormat(me?.cash)),\n          to: \"AllBanks\",\n        },\n\n        {\n          isStats: true,\n\n          iconType: \"FontAwesome\",\n          icon: \"money\",\n\n          text: getText(\"menuBankMoney\", numberFormat(me?.bank)),\n          to: \"AllBanks\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"bullet\",\n\n          text: getText(\"menuBullets\", numberFormat(me?.bullets)),\n          to: \"Kill\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"SimpleLineIcons\",\n          icon: \"badge\",\n          text: getText(\"menuRank\", getRank(me?.rank, \"both\")),\n          to: \"Status\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"AntDesign\",\n          icon: \"heart\",\n\n          text: getText(\"menuHealth\", me?.health),\n          to: \"Hospital\",\n        },\n        {\n          isStats: true,\n\n          iconType: \"Ionicons\",\n          icon: \"ios-airplane\",\n\n          text: getText(\"menuCity\", me?.city),\n          to: \"Airport\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChannels\", me?.chats),\n          to: \"Channels\",\n        },\n      ],\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerSociety\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n\n          text: getText(\"menuMembers\", me?.online),\n          to: \"Members\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStats\"),\n          to: \"Stats\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStatus\"),\n          to: \"Status\",\n        },\n      ],\n    },\n\n    gangMenus,\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerGeneral\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"menuChat\"),\n          to: \"Chat\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"wechat\",\n\n          text: getText(\"menuForum\"),\n          to: \"Forum\",\n        },\n\n        {\n          inactive:\n            me?.level < 2 &&\n            !(\n              moment().year() > 2020 &&\n              ((moment().month() === 10 && moment().date() > 15) ||\n                (moment().month() === 11 && moment().date() < 6))\n            ),\n          isNew: true,\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuSint\"),\n          to: \"Sint\",\n        },\n\n        {\n          iconType: \"SimpleLineIcons\",\n          icon: \"settings\",\n\n          text: getText(\"menuSettings\"),\n          to: \"Settings\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"info-with-circle\",\n\n          text: getText(\"menuInfo\"),\n          to: \"Info\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuHackers\"),\n          to: \"Hackers\",\n        },\n\n        {\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuPolice\"),\n          to: \"Police\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuVIP\"),\n          to: \"VIP\",\n        },\n\n        {\n          inactive:\n            me?.level < 2 &&\n            moment().isBefore(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.PRIZES_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"prizes\"),\n          to: \"Prizes\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    adminMenu(me),\n  ].filter((x) => !!x);\n};\n","import * as Icon from \"@expo/vector-icons\";\nimport * as ExpoNotifications from \"expo-notifications\";\nimport * as StoreReview from \"expo-store-review\";\nimport React, { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  AppState,\n  Dimensions,\n  Image,\n  Linking,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport Dead from \"./components/Dead\";\nimport Fly from \"./components/Fly\";\nimport Header from \"./components/Header\";\nimport Hoverable from \"./components/Hoverable\";\nimport { IntervalContext } from \"./components/IntervalProvider\";\nimport Jail from \"./components/Jail\";\n// import { loadReCaptcha } from \"react-recaptcha-v3\";\nimport LoginModal from \"./components/LoginModal\";\nimport T from \"./components/T\";\nimport { KeyboardAvoidingSpace } from \"./KeyboardAvoidingSpace\";\nimport { leftMenu, rightMenu } from \"./Menus\";\nimport { darkerHex, doOnce, getTextFunction, lighterHex } from \"./Util\";\n\nexport const CustomDrawerContentComponent = (props) => {\n  const {\n    navigation,\n    screenProps: { me, device, dispatch },\n  } = props;\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  return (\n    <ScrollView>\n      <SafeAreaView\n        style={{ flex: 1, backgroundColor: device.theme.primary }}\n        forceInset={{ top: \"always\", horizontal: \"never\" }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </SafeAreaView>\n    </ScrollView>\n  );\n};\nexport const renderMenu = (\n  item,\n  index,\n  navigation,\n  theme: Theme,\n  dispatch,\n  me\n) => {\n  const TheIcon = Icon[item.iconType];\n\n  const isCurrent = navigation.state.routeName === item.to;\n  const TouchOrView = item.isHeader ? View : TouchableOpacity;\n  const getText = getTextFunction(me?.locale);\n  return (\n    <TouchOrView\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.navigate(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        }\n      }}\n    >\n      <Hoverable onHoverIn={null} onHoverOut={null}>\n        {(isHovered) => (\n          <View\n            style={{\n              borderBottomWidth: 0,\n              padding: 3,\n              backgroundColor: item.isHeader\n                ? theme.primary\n                : darkerHex(theme.primary),\n              paddingLeft: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                minHeight: 25,\n                backgroundColor:\n                  isHovered || isCurrent\n                    ? lighterHex(theme.primary)\n                    : undefined,\n                borderRadius: isHovered || isCurrent ? 15 : undefined,\n              }}\n            >\n              <View style={{ width: 30, alignItems: \"center\" }}>\n                {TheIcon ? (\n                  <TheIcon\n                    name={item.icon}\n                    size={20}\n                    color={theme.secondaryText}\n                  />\n                ) : item.image ? (\n                  <Image\n                    source={{ uri: item.image }}\n                    style={{ width: 40, height: 40, borderRadius: 20 }}\n                  />\n                ) : null}\n              </View>\n              <Text\n                style={{\n                  marginLeft: 15,\n                  color: theme.primaryText,\n                  fontWeight: item.isHeader ? \"bold\" : undefined,\n                }}\n              >\n                {item.text}\n              </Text>\n              {item.isNew && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{getText(\"new\")}</T>\n                </View>\n              )}\n\n              {item.label && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{item.label}</T>\n                </View>\n              )}\n              {item.component}\n            </View>\n          </View>\n        )}\n      </Hoverable>\n    </TouchOrView>\n  );\n};\n\nfunction makeid(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nconst Layout = ({ screenProps, navigation, children }) => {\n  const { me, device, dispatch, reloadMe } = screenProps;\n\n  const useNewContainer =\n    Platform.OS !== \"web\" && me?.level >= 2 && me?.newVersion;\n\n  const window = Dimensions.get(\"window\");\n  const isSmallDevice = window.width < 800;\n\n  const { resetIntervalsForToken } = React.useContext(IntervalContext);\n\n  doOnce(() => {\n    let token = device.loginToken;\n\n    if (!token || token.length < 64) {\n      token = makeid(64);\n      dispatch({ type: \"SET_LOGIN_TOKEN\", value: token });\n\n      resetIntervalsForToken(token);\n      reloadMe(token);\n    } else {\n      reloadMe(token);\n    }\n\n    Linking.addEventListener(\"url\", openWebUrl);\n    Linking.getInitialURL().then((url) => openWebUrl(url));\n  });\n\n  const openWebUrl = (url) => {\n    console.log(\"should open web url here\", url);\n  };\n\n  useEffect(() => {\n    reloadMe(device.loginToken);\n  }, [device.logged]);\n\n  const getText = getTextFunction(me?.locale);\n\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  const _handleNotificationResponse = ({\n    notification: {\n      request: {\n        content: { data },\n      },\n    },\n  }) => {\n    //TODO: Fix dat hij naar chat redirect\n    // navigation.navigate(\"Channels\", { id: data.body.id });\n  };\n\n  const handleChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      // somehow this doesn't work properly\n      // screenProps.reloadMe(screenProps.device.loginToken);\n\n      screenProps.dispatch({ type: \"INCREASE_FOREGROUNDED\" });\n\n      if (screenProps.device.foregrounded > 3) {\n        StoreReview.isAvailableAsync().then((available) => {\n          // console.log(\"avaiable\", available);\n          if (available) {\n            StoreReview.requestReview();\n          }\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    ExpoNotifications.addNotificationResponseReceivedListener(\n      _handleNotificationResponse\n    );\n  }, []);\n\n  useEffect(() => {\n    AppState.addEventListener(\"change\", handleChange);\n\n    return () => {\n      AppState.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  const allowedRoutes = [\n    \"Home\",\n    \"Settings\",\n    \"Members\",\n    \"Profile\",\n    \"Status\",\n    \"Stats\",\n    \"MyObjects\",\n    \"Chat\",\n    \"Channels\",\n    \"Channel\",\n    \"Forum\",\n    \"Info\",\n    \"InfoGame\",\n    \"InfoRules\",\n    \"Privacy\",\n    \"Contribute\",\n    \"Prizes\",\n    \"Notifications\",\n    \"VerifyPhone\",\n    \"ChangePassword\",\n    \"SignupEmail\",\n    \"ChangeName\",\n    \"Theme\",\n    \"Login\",\n    \"MyProfile\",\n    \"Backfire\",\n    \"Accomplice\",\n    \"Gangs\",\n    \"Gang\",\n    \"GangSettings\",\n    \"GangAchievements\",\n    \"Market\",\n  ];\n  const skip = allowedRoutes.includes(navigation.state.routeName);\n\n  const renderForWeb = () => (\n    <Helmet>\n      <title>MasterCrimeZ - The Ultimate Game</title>\n      <meta name=\"description\" content={getText(\"metaDescription\")} />\n\n      <meta property=\"og:url\" content=\"https://mastercrimez.com/\" />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={getText(\"metaOgTitle\")} />\n      <meta property=\"og:description\" content={getText(\"metaOgDescription\")} />\n      <meta property=\"og:image\" content=\"\" />\n    </Helmet>\n  );\n\n  const renderLeftMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const renderRightMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu(\n              section.header,\n              index,\n              navigation,\n              device.theme,\n              dispatch,\n              me\n            )\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu(item, index, navigation, device.theme, dispatch, me)\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const SafeOrView = useNewContainer ? View : SafeAreaView;\n  return (\n    <View style={{ flex: 1 }}>\n      <SafeOrView\n        style={{\n          flexDirection: \"row\",\n          flex: 1,\n          backgroundColor: device.theme.primary,\n        }}\n      >\n        {Platform.OS === \"web\" && renderForWeb()}\n        {isSmallDevice ? null : renderLeftMenu()}\n\n        <View\n          style={{\n            height: Platform.OS === \"web\" ? window.height : undefined,\n            flex: 1,\n          }}\n        >\n          {(!useNewContainer ||\n            (useNewContainer && navigation.state.routeName !== \"Map\")) && (\n            <Header navigation={navigation} device={device} me={me} />\n          )}\n\n          {me?.reizenAt > Date.now() && !skip ? (\n            <Fly screenProps={screenProps} navigation={navigation} />\n          ) : (me?.health <= 0 || me?.health === null) && !skip ? (\n            <Dead screenProps={screenProps} navigation={navigation} />\n          ) : me?.jailAt > Date.now() && !skip ? (\n            <Jail screenProps={screenProps} navigation={navigation} />\n          ) : (\n            <View style={{ flex: 1 }}>{children}</View>\n          )}\n\n          {navigation.state.routeName !== \"Map\" && (\n            <KeyboardAvoidingSpace offset={useNewContainer ? 65 : 0} />\n          )}\n        </View>\n\n        {isSmallDevice ? null : renderRightMenu()}\n      </SafeOrView>\n\n      {!device.logged && (\n        <LoginModal navigation={navigation} screenProps={screenProps} />\n      )}\n    </View>\n  );\n};\nexport const withLayout = (Component) => (props) => (\n  <Layout {...props}>\n    <Component {...props} />\n  </Layout>\n);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  ScrollView,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { default as style, default as styles } from \"../Style\";\nimport { getRank, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst Accomplice = ({\n  navigation,\n  screenProps: {\n    me,\n    device,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [accomplice1, setAccomplice1] = useState(me?.accomplice);\n  const [accomplice2, setAccomplice2] = useState(me?.accomplice2);\n  const [accomplice3, setAccomplice3] = useState(me?.accomplice3);\n  const [accomplice4, setAccomplice4] = useState(me?.accomplice4);\n  const [response, setResponse] = useState(null);\n\n  const submit = (acc) => {\n    //how to set accomplice acc from params to the right body?\n\n    fetch(`${Constants.SERVER_ADDR}/setAccomplice`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        accomplice: accomplice1,\n        accomplice2,\n        accomplice3,\n        accomplice4,\n        loginToken: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response }) => {\n        setResponse(response);\n        reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    const accomplice = navigation.state.params?.accomplice;\n    if (accomplice) {\n      submit(accomplice);\n    }\n  }, []);\n\n  const rank = getRank(me?.rank, \"number\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n      }}\n    >\n      <View style={{ maxWidth: 600, margin: 20 }}>\n        <T>{getText(\"accompliceInfo\")}</T>\n\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"accompliceLinkText\")}</T>\n          <TextInput\n            value={url}\n            onFocus={() => {\n              Clipboard.setString(url);\n              setResponse(getText(\"copiedToClipboard\"));\n            }}\n            style={style(theme).textInput}\n          />\n        </View>\n\n        <T bold>{getText(\"yourAccomplicesHeader\")}</T>\n        {me?.accomplices.length > 0 ? (\n          me?.accomplices.map((accomplice) => {\n            return keyValue(accomplice.name, getRank(accomplice.rank, \"both\"));\n          })\n        ) : (\n          <T>{getText(\"accomplicesNone\")}</T>\n        )}\n\n        <T bold style={{ marginTop: 15 }}>\n          {getText(\"accompliceWhoseYouWantToBe\")}\n        </T>\n        <T>{response}</T>\n\n        <TextInput\n          placeholderTextColor={theme.secondaryTextSoft}\n          style={styles(theme).textInput}\n          value={accomplice1}\n          onChangeText={setAccomplice1}\n          placeholder={getText(\"accomplice\", 1)}\n        />\n\n        {rank >= 11 ? (\n          <TextInput\n            placeholderTextColor={theme.secondaryTextSoft}\n            style={styles(theme).textInput}\n            value={accomplice2}\n            onChangeText={setAccomplice2}\n            placeholder={getText(\"accomplice\", 2)}\n          />\n        ) : null}\n\n        {rank >= 16 ? (\n          <>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={styles(theme).textInput}\n              value={accomplice3}\n              onChangeText={setAccomplice3}\n              placeholder={getText(\"accomplice\", 3)}\n            />\n\n            <TextInput\n              style={styles(theme).textInput}\n              value={accomplice4}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={setAccomplice4}\n              placeholder={getText(\"accomplice\", 4)}\n            />\n          </>\n        ) : null}\n\n        <Button title={getText(\"save\")} onPress={submit} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Accomplice;\n","import React, { Component } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  state = {\n    response: null,\n    subject: null,\n    message: null,\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"subject\")}\n          value={this.state.subject}\n          onChangeText={(subject) => this.setState({ subject })}\n        />\n        <TextInput\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          style={style(device.theme).textInput}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.sendMessage}\n        />\n      </View>\n    );\n  }\n\n  sendMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message, subject } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/admin/email`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        subject,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return me.level < 10 ? <T>{getText(\"noAccess\")}</T> : this.renderForm();\n  }\n}\n\nexport default Status;\n","import React, { useEffect, useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [ips, setIps] = useState([]);\n  const [id, setId] = useState(null);\n  const [user, setUser] = useState(null);\n  const [actions, setActions] = useState(null);\n  const [movements, setMovements] = useState(null);\n\n  doOnce(async () => {\n    const { ips } = await get(`admin/ips?token=${loginToken}`);\n    setIps(ips);\n  });\n\n  useEffect(() => {\n    const getActions = async () => {\n      const { user, actions, movements } = await get(\n        `admin/actions?token=${loginToken}&userId=${id}`\n      );\n      setUser(user);\n      setActions(actions);\n      setMovements(movements);\n    };\n\n    getActions();\n  }, [id]);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {me?.level < 2 ? (\n        <T>{getText(\"noAccess\")}</T>\n      ) : (\n        <View style={{ flex: 1 }}>\n          {id && user && actions && movements ? (\n            <View>\n              <TouchableOpacity onPress={() => setId(null)}>\n                <T bold style={{ marginBottom: 20 }}>\n                  {getText(\"back\")}\n                </T>\n              </TouchableOpacity>\n\n              <T>\n                {getText(\"name\")}: {user.name}\n              </T>\n\n              <T>\n                {getText(\"actions\")}: {actions.length}\n              </T>\n              <T>\n                {getText(\"movements\")}: {movements.length}\n              </T>\n            </View>\n          ) : (\n            ips.map((ip, index) => {\n              const previous = ips[index - 1];\n\n              return (\n                <View key={`id${index}`}>\n                  {previous?.ip === ip.ip ? null : (\n                    <View style={{ marginTop: 20 }} />\n                  )}\n                  <TouchableOpacity onPress={() => setId(ip.id)}>\n                    <T>{ip.name}</T>\n                  </TouchableOpacity>\n                </View>\n              );\n            })\n          )}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getLocale, getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\nclass Shop extends Component {\n  state = {\n    response: null,\n    type: \"weapon\",\n  };\n  componentDidMount() {\n    this.fetchShop(this.props.type || \"weapon\");\n    this.fetchCities();\n  }\n\n  fetchCities = async () => {\n    this.props.screenProps.reloadCities();\n  };\n\n  fetchShop = (type) => {\n    const { device } = this.props.screenProps;\n\n    fetch(\n      `${Constants.SERVER_ADDR}/shop?token=${device.loginToken}&type=${type}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, type });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { type } = this.state;\n    const { reloadMe, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type:\n        type === \"weapon\"\n          ? \"weaponShop\"\n          : type === \"protection\"\n          ? \"weaponShop\"\n          : type === \"airplane\"\n          ? \"airport\"\n          : type === \"home\"\n          ? \"estateAgent\"\n          : \"garage\",\n      token: device.loginToken,\n    });\n    this.fetchCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const { type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const propertyKey =\n      type === \"weapon\"\n        ? \"weaponShop\"\n        : type === \"protection\"\n        ? \"weaponShop\"\n        : type === \"airplane\"\n        ? \"airport\"\n        : type === \"home\"\n        ? \"estateAgent\"\n        : \"garage\";\n\n    const ownerKey = `${propertyKey}Owner`;\n    const profitKey = `${propertyKey}Profit`;\n\n    const propertyString =\n      type === \"weapon\"\n        ? getText(\"weaponShop\")\n        : type === \"protection\"\n        ? getText(\"weaponShop\")\n        : type === \"airplane\"\n        ? getText(\"airport\")\n        : type === \"home\"\n        ? getText(\"estateAgent\")\n        : getText(\"garage\");\n    return (\n      <View style={{ margin: 15 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {propertyString}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city[ownerKey] ? (\n                    <T>{city[ownerKey]}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city[ownerKey] === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: propertyKey,\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city[profitKey]}</T>\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderMenu = (t, string, flex) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.fetchShop(t)}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device,\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const { response, type, buy } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n    const locale = getLocale(me?.locale);\n\n    return (\n      <ScrollView>\n        {/* <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"weapon\", getText(\"weapons\"), 1)}\n          {this.renderMenu(\"protection\", getText(\"protection\"), 2)}\n          {this.renderMenu(\"airplane\", getText(\"airplane\"), 1)}\n          {this.renderMenu(\"home\", getText(\"homeShop\"), 1)}\n          {this.renderMenu(\"garage\", getText(\"garage\"), 1)}\n        </View> */}\n\n        {buy ? (\n          <View>\n            <T>{buy}</T>\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ buy: null })}\n            />\n          </View>\n        ) : response ? (\n          <View>\n            {response?.current?.image && (\n              <Image\n                style={{\n                  width: isSmall ? width : 400,\n                  height: 300,\n                  resizeMode: \"contain\",\n                }}\n                source={{\n                  uri: `${Constants.SERVER_ADDR}/${response?.current?.image}`,\n                }}\n              />\n            )}\n            <T style={{ alignSelf: \"center\" }}>\n              {getText(\"youHave\")}:{\" \"}\n              {response?.current?.name?.[locale] || getText(\"none\")}\n            </T>\n\n            {response?.next ? (\n              <View>\n                {response?.next?.image && (\n                  <Image\n                    style={{\n                      width: isSmall ? width : 400,\n                      height: 300,\n                      resizeMode: \"contain\",\n                    }}\n                    source={{\n                      uri: `${Constants.SERVER_ADDR}/${response?.next?.image}`,\n                    }}\n                  />\n                )}\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"buy\")}: {response?.next?.name?.[locale]}\n                </T>\n                <T style={{ alignSelf: \"center\" }}>\n                  {getText(\"for\")}: &euro;{response?.next?.price},-\n                </T>\n                <Button\n                  theme={this.props.screenProps.device.theme}\n                  title={getText(\"buy\")}\n                  onPress={() => {\n                    fetch(`${Constants.SERVER_ADDR}/buy`, {\n                      method: \"POST\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        loginToken: device.loginToken,\n                        type,\n                      }),\n                    })\n                      .then((response) => response.json())\n                      .then(async (buy) => {\n                        this.setState({ buy: buy.response });\n                        this.fetchShop(type);\n                        this.props.screenProps.reloadMe(device.loginToken);\n                      })\n                      .catch((error) => {\n                        console.error(error);\n                      });\n                  }}\n                />\n              </View>\n            ) : null}\n            {/* {this.renderCities()} */}\n          </View>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </ScrollView>\n    );\n  }\n}\n\nexport default Shop;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst AirplaneShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"airplane\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default AirplaneShop;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Airport extends Component {\n  state = {\n    response: null,\n  };\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        style={{ borderRadius: 10, marginTop: 20 }}\n        title={getText(\"fly\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/airport`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: device.loginToken,\n              to,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      \"Paris\",\n      \"Barcelona\",\n      \"London\",\n      \"Amsterdam\",\n      \"Berlin\",\n      \"Porto\",\n      \"Rome\",\n      \"Dublin\",\n      \"Madrid\",\n      \"Brussels\",\n      \"Bali\",\n      \"New York\",\n      \"San Fransisco\",\n    ].sort();\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ to: options[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n    return (\n      <View>\n        <Button\n          title={this.state.to ? this.state.to : getText(\"chooseCity\")}\n          onPress={this.openActionSheet}\n        />\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 200 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default connectActionSheet(Airport);\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab, index) => {\n        return (\n          <TouchableOpacity\n            key={`tab${index}`}\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, TextInput, TouchableOpacity, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\n\nconst Captcha = ({\n  screenProps,\n  onChangeCaptcha,\n  captcha,\n  random,\n  onChangeRandom,\n}) => {\n  const uri =\n    Constants.SERVER_ADDR +\n    `/captcha.png?random=${random}&loginToken=${screenProps.device.loginToken}`;\n\n  return (\n    screenProps.me.needCaptcha && (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Image\n          source={{ uri }}\n          style={{ marginLeft: 20, width: 150, height: 50 }}\n        />\n        <TextInput\n          style={[style(screenProps.device.theme).textInput, { width: 100 }]}\n          value={captcha}\n          onChangeText={(x) => onChangeCaptcha(x)}\n        />\n        <TouchableOpacity onPress={() => onChangeRandom(Math.random())}>\n          <MaterialCommunityIcons\n            name=\"reload\"\n            size={32}\n            color={screenProps.device.theme.primaryText}\n          />\n        </TouchableOpacity>\n      </View>\n    )\n  );\n};\n\nexport default Captcha;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Image, ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst Bomb = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [bombs, setBombs] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [type, setType] = useState(navigation.state.params?.type || \"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const airplanes = [\n    \"\",\n    \"Fokker\",\n    \"Fleet\",\n    \"Havilland\",\n    \"Cessna\",\n    \"Douglas\",\n    \"Lear Jet\",\n    \"Raket\",\n  ];\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"bomb\", {\n      loginToken: device.loginToken,\n      bombs,\n      type,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  const selectType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n    const options = Object.keys(typeStrings).map(\n      (type) =>\n        `${typeStrings[type]} (${city[`${type}Damage`]}% ${getText(\n          \"damage\"\n        )}, €${numberFormat(city[`${type}Profit`])} ${getText(\"profit\")})`\n    );\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex !== options.length - 1) {\n          setType(Object.keys(typeStrings)[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {\n        <>\n          <Image source={require(\"../../assets/bombarderen.jpg\")} />\n          <Text style={{ color: theme.primaryText }}>\n            {me?.airplane === 0\n              ? getText(\"bombNoAirplane\")\n              : getText(\n                  \"bombAirplaneText\",\n                  airplanes[me?.airplane],\n                  me?.airplane * 5\n                )}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <T style={{ marginTop: 15 }}>{getText(\"bombs\")}</T>\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bombs}\n            onChangeText={(x) => setBombs(x)}\n            style={style(theme).textInput}\n          />\n\n          <T style={{ marginVertical: 15 }}>{getText(\"property\")}</T>\n          <Button\n            onPress={selectType}\n            title={type ? typeStrings[type] : getText(\"whichProperty\")}\n          />\n\n          {type ? (\n            <T>\n              {getText(\n                \"bombInfo\",\n                typeStrings[type],\n                city[`${type}Damage`],\n                numberFormat(city[`${type}Profit`]),\n                city[`${type}Owner`] || `(Niemand)`\n              )}\n            </T>\n          ) : null}\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button\n            style={{ marginTop: 15 }}\n            title={getText(\"bombAction\")}\n            onPress={submit}\n          />\n        </>\n      }\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bomb;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Airport from \"./Airport\";\nimport Bomb from \"./Bomb\";\nconst AllAirport = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"airport\",\n      title: getText(\"menuAirport\"),\n      component: Airport,\n    },\n\n    {\n      key: \"bomb\",\n      title: getText(\"menuBomb\"),\n      component: Bomb,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllAirport;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\n\nclass Bank extends Component {\n  state = {\n    response: null,\n  };\n\n  deposit = async (deposit) => {\n    const { device } = this.props.screenProps;\n\n    const response = await post(\"bank\", {\n      token: device.loginToken,\n      amount: this.state.amount,\n      deposit,\n    });\n\n    this.setState({ response });\n    this.props.screenProps.reloadMe(device.loginToken);\n  };\n\n  keyValue(key, value, onPress) {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { to, amount, type, response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n          {this.keyValue(getText(\"cash\"), numberFormat(me?.cash), () =>\n            this.setState({ amount: String(me.cash) })\n          )}\n          {this.keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            this.setState({ amount: String(me.bank) })\n          )}\n          {this.keyValue(getText(\"rent\"), getText(\"rentAmount\"))}\n          <View>\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={style(theme).textInput}\n              placeholder={getText(\"amount\")}\n              value={this.state.amount}\n              onChangeText={(amount) => this.setState({ amount })}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                title={getText(\"in\")}\n                onPress={() => this.deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                title={getText(\"out\")}\n                onPress={() => this.deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Bank;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Donate extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const to = this.props.navigation.state.params?.to;\n    if (to) {\n      this.setState({ to });\n    }\n  }\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const { to, amount, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <Button\n        theme={this.props.screenProps.device.theme}\n        style={{ marginTop: 20 }}\n        title={getText(\"donate\")}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/donate`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              loginToken: device.loginToken,\n              to,\n              type,\n              amount,\n            }),\n          })\n            .then((response) => response.json())\n            .then(async (response) => {\n              this.setState({ response });\n              this.props.screenProps.reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }}\n      />\n    );\n  };\n\n  openActionSheet = () => {\n    const { me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"bankMoney\"),\n      getText(\"bullets\"),\n      getText(\"weed\"),\n      getText(\"junkies\"),\n      getText(\"prostitutes\"),\n      getText(\"gamepoints\"),\n    ];\n    const keys = [\"bank\", \"bullets\", \"wiet\", \"junkies\", \"hoeren\", \"gamepoints\"];\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        // cancelButtonIndex: null,\n        // destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        this.setState({ type: keys[buttonIndex] });\n      }\n    );\n  };\n\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const names = {\n      bullets: getText(\"bullets\"),\n      bank: getText(\"bankMoney\"),\n      wiet: getText(\"weed\"),\n      junkies: getText(\"junkies\"),\n      hoeren: getText(\"prostitutes\"),\n      gamepoints: getText(\"gamepoints\"),\n    };\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"to\")}\n          value={this.state.to}\n          onChangeText={(to) => this.setState({ to })}\n        />\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          placeholder={getText(\"amount\")}\n          value={this.state.amount}\n          onChangeText={(amount) => this.setState({ amount })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={\n            this.state.type\n              ? names[this.state.type]\n              : getText(\"whatYouWantToDonate\")\n          }\n          onPress={this.openActionSheet}\n        />\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default connectActionSheet(Donate);\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { withAlert } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post, withCaptcha } from \"../Util\";\nclass Income extends Component {\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderFooter() {\n    const { alert } = this.props;\n    const { me, device, reloadMe, reloadCities } = this.props.screenProps;\n\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const postGetIncome = async (type, captcha) => {\n      const { response } = await post(\"income\", {\n        token: device.loginToken,\n        captcha,\n        type,\n      });\n\n      reloadMe(device.loginToken);\n      reloadCities();\n      alert(response, null, null, { key: \"incomeResponse\" });\n    };\n    const incomeAction = (type) =>\n      withCaptcha(device.loginToken, me?.needCaptcha, getText, alert, (code) =>\n        postGetIncome(type, code)\n      );\n\n    return (\n      <View style={{ flexDirection: \"column\" }}>\n        <Button\n          title={\"Haal Sex Shop inkomen op\"}\n          onPress={() => incomeAction(\"rld\")}\n          style={{ margin: 10 }}\n        />\n        <Button\n          title={\"Verkoop je wiet aan de coffeeshop\"}\n          onPress={() => incomeAction(\"landlord\")}\n          style={{ margin: 10 }}\n        />\n        <Button\n          title={\"Haal Junkies inkomen op (leger des heils)\"}\n          onPress={() => incomeAction(\"junkies\")}\n          style={{ margin: 10 }}\n        />\n      </View>\n    );\n  }\n\n  renderForm() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"weed\"), me?.wiet)}\n        {this.keyValue(getText(\"junkies\"), me?.junkies)}\n        {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n\n        {this.renderFooter()}\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(device.theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : (\n            this.renderForm()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default withAlert(Income);\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\nconst SwissBank = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"bank\");\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bank\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const deposit = async (deposit) => {\n    const { response } = await post(\"swissBank\", {\n      token: device.loginToken,\n      amount,\n      deposit,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const keyValue = (key, value, onPress) => {\n    return (\n      <View style={styles.row}>\n        <T hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>{key}</T>\n        <TouchableOpacity\n          disabled={!onPress}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n          onPress={onPress}\n        >\n          <T>{value}</T>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          {keyValue(getText(\"bank\"), numberFormat(me?.bank), () =>\n            setAmount(String(me.bank))\n          )}\n          {keyValue(getText(\"swissBank\"), numberFormat(me?.swissBank), () =>\n            setAmount(String(me.swissBank))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBankCost\"))}\n\n          {keyValue(getText(\"bullets\"), numberFormat(me?.bullets), () =>\n            setAmount(String(me.bullets))\n          )}\n          {keyValue(\n            getText(\"swissBulletBank\"),\n            numberFormat(me?.swissBullets),\n            () => setAmount(String(me.swissBullets))\n          )}\n\n          {keyValue(getText(\"costs\"), getText(\"swissBulletBankCost\"))}\n\n          <View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <TouchableOpacity\n                style={{\n                  backgroundColor: theme.secondary,\n                  padding: 10,\n                  borderRadius: 5,\n                  marginLeft: 10,\n                }}\n                onPress={() => setType(type === \"bank\" ? \"bullets\" : \"bank\")}\n              >\n                <T>\n                  {type === \"bank\" ? getText(\"bankMoney\") : getText(\"bullets\")}\n                </T>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginTop: 20,\n              }}\n            >\n              <Button\n                theme={theme}\n                title={getText(\"in\")}\n                onPress={() => deposit(true)}\n                style={{ width: 80 }}\n              />\n              <Button\n                theme={theme}\n                title={getText(\"out\")}\n                onPress={() => deposit(false)}\n                style={{ width: 80 }}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {!city?.bankOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            theme={theme}\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"swissBankInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bankOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"swissBankInfo2\", city?.bankProfit)}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bankOwner ? (\n                  <T>{city.bankOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bankOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bank\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.bankProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default SwissBank;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bank from \"./Bank\";\nimport Donate from \"./Donate\";\nimport Income from \"./Income\";\nimport SwissBank from \"./SwissBank\";\nconst AllBanks = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const [tab, setTab] = useState(\"bank\");\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"menuBank\"),\n            isActive: tab === \"bank\",\n            onPress: () => setTab(\"bank\"),\n          },\n          {\n            title: getText(\"menuSwissBank\"),\n            isActive: tab === \"swissBank\",\n            onPress: () => setTab(\"swissBank\"),\n          },\n\n          {\n            title: getText(\"menuDonate\"),\n            isActive: tab === \"donate\",\n            onPress: () => setTab(\"donate\"),\n          },\n          {\n            title: getText(\"menuIncome\"),\n            isActive: tab === \"income\",\n            onPress: () => setTab(\"income\"),\n          },\n        ]}\n      />\n\n      {tab === \"bank\" && <Bank {...props} />}\n      {tab === \"swissBank\" && <SwissBank {...props} />}\n      {tab === \"donate\" && <Donate {...props} />}\n      {tab === \"income\" && <Income {...props} />}\n    </View>\n  );\n};\nexport default AllBanks;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Bulletfactory = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n  const [bullets, setBullets] = useState(null);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"bulletFactory\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  const submit = async () => {\n    const { response } = await post(\"buyBullets\", {\n      loginToken: device.loginToken,\n      amount: bullets,\n      captcha,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    reloadCities();\n    setCaptcha(\"\");\n    setRandom(Math.random());\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.bulletFactoryOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"bulletfactoryInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.bulletFactoryOwner || getText(\"nobody\")}\n            </Text>\n            ,{\" \"}\n            {getText(\n              \"bulletfactoryInfo2\",\n              city?.bulletFactoryPrice,\n              city?.bulletFactoryProfit\n            )}\n          </Text>\n\n          <Text style={{ color: theme.primaryText, marginTop: 20 }}>\n            {getText(\"bulletfactoryInfo3\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{city?.bullets}</Text>{\" \"}\n            {getText(\"bulletfactoryInfo4\")}\n          </Text>\n\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n\n          <TextInput\n            placeholder=\"0\"\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={bullets}\n            onChangeText={(x) => setBullets(x)}\n            style={style(theme).textInput}\n          />\n\n          <Captcha\n            screenProps={screenProps}\n            captcha={captcha}\n            onChangeCaptcha={(x) => setCaptcha(x)}\n            random={random}\n            onChangeRandom={(x) => setRandom(x)}\n          />\n\n          <Button title={getText(\"buy\")} onPress={submit} />\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"bullets\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.bulletFactoryOwner ? (\n                  <Text style={{ color: theme.primaryText }}>\n                    {city.bulletFactoryOwner}\n                  </Text>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.bulletFactoryOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"bulletFactory\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>{city.bullets}</Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"damage\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"pricePerBullet\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{city.bulletFactoryDamage}%</T>\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                €{city.bulletFactoryPrice}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Bulletfactory;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  LayoutAnimation,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { lighterHex } from \"../Util\";\nimport T from \"./T\";\n\nUIManager.setLayoutAnimationEnabledExperimental &&\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n\nconst storeData = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n  } catch (e) {\n    // saving error\n  }\n};\n\nconst getData = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    if (value !== null) {\n      return value;\n      // value previously stored\n    } else {\n      return undefined;\n    }\n  } catch (e) {\n    // error reading value\n    return undefined;\n  }\n};\n\nconst Content = ({ id, title, children, contentWidth }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const [expanded, setExpanded] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const isExpanded = await getData(`@content=${id}`);\n      if (isExpanded !== undefined) {\n        setExpanded(isExpanded === \"true\");\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <View\n      style={{\n        backgroundColor: lighterHex(theme.primary),\n        margin: 20,\n        padding: 20,\n        borderRadius: 20,\n        width:\n          typeof contentWidth === \"string\"\n            ? contentWidth\n            : contentWidth + 20 * 4,\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          LayoutAnimation.linear();\n          setExpanded(!expanded);\n          storeData(`@content=${id}`, String(!expanded));\n        }}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <T bold>{title}</T>\n        <AntDesign\n          name={expanded ? \"caretup\" : \"caretdown\"}\n          color={theme.primaryText}\n        />\n      </TouchableOpacity>\n\n      <View\n        onLayout={(event) => {\n          var { x, y, width, height } = event.nativeEvent.layout;\n          // setHeight(height);\n          // setWidth(width);\n        }}\n      >\n        {expanded && !loading && children}\n      </View>\n    </View>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport { getLocale, getUserColor } from \"../Util\";\nimport T from \"./T\";\n\nconst User = ({ user, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  const color = getUserColor(user, theme);\n  const isOnline = (Date.now() - user.onlineAt) / 60000 < 5;\n\n  const extraIcon =\n    user.level === 2\n      ? \"💼\"\n      : user.level === 3\n      ? \"🕶\"\n      : user.level === 10\n      ? \"🤓\"\n      : null;\n\n  const country = getLocale(user.locale) === \"nl\" ? \"🇳🇱\" : \"🌍\";\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Profile\", { name: user.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {user.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + user.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n        <View style={{ position: \"absolute\", top: 0, right: 0 }}>\n          <T>{isOnline ? \"✅\" : \"🛑\"}</T>\n        </View>\n\n        {extraIcon && (\n          <View style={{ position: \"absolute\", bottom: 0, right: 0 }}>\n            <T>{extraIcon}</T>\n          </View>\n        )}\n\n        {user.gang && user.gang.thumbnail && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: -0.1 * size,\n              left: -0.1 * size,\n            }}\n          >\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + user.gang.thumbnail }}\n              style={{\n                width: size / 2,\n                height: size / 2,\n                borderRadius: size / 4,\n              }}\n            />\n          </View>\n        )}\n\n        <View style={{ position: \"absolute\", bottom: 0, left: 0 }}>\n          <T>{country}</T>\n        </View>\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T style={{ color }}>{user.name}</T>\n        {user.gang && <T>{user.gang.name}</T>}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default User;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Platform,\n  ScrollView,\n  View,\n} from \"react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst SHIFT_FACTOR = 0.45;\nconst GangBulletFactory = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [shifts, setShifts] = useState({});\n  const { morning, day, evening, night, underachievers } = shifts;\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const alertAlert = React.useContext(AlertContext);\n\n  /*\n  userDoShift,\n  gangBuyBulletFactory,\n  shifts,*/\n\n  const getShifts = async () => {\n    setLoading(true);\n\n    const shifts = await get(`shifts?token=${device.loginToken}`);\n    setLoading(false);\n    setShifts(shifts);\n  };\n\n  const postUserDoShift = async () => {\n    setLoading(true);\n    const { response } = await post(\"userDoShift\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    getShifts();\n  };\n\n  const postGangBuyBulletFactory = async (type) => {\n    setLoading(true);\n    const { response } = await post(\"gangBuyBulletFactory\", {\n      token: device.loginToken,\n      type,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken); //reload gang\n  };\n\n  doOnce(getShifts);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const bulletFactories = [\n    {\n      type: \"small\",\n      generates: 10000,\n      initialCost: 10000000,\n      dailyCost: 1000000,\n    },\n    {\n      type: \"medium\",\n      generates: 20000,\n      initialCost: 100000000,\n      dailyCost: 10000000,\n    },\n    {\n      type: \"big\",\n      generates: 40000,\n      initialCost: 1000000000,\n      dailyCost: 100000000,\n    },\n    {\n      type: \"mega\",\n      generates: 60000,\n      initialCost: 10000000000,\n      dailyCost: 1000000000,\n    },\n  ];\n\n  const renderShiftUser = (user) => {\n    return <User size={40} navigation={navigation} user={user} />;\n  };\n\n  const renderUnderAchieverUserRow = (user) => {\n    return (\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <User size={40} navigation={navigation} user={user} />\n        <T>\n          {user.totalShiftsDone} {getText(\"shiftsDone\")}\n        </T>\n      </View>\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        <Content\n          title={getText(\"workForBulletFactoryTitle\")}\n          contentWidth={\"90%\"}\n          id=\"userDoShift\"\n        >\n          <Button\n            onPress={postUserDoShift}\n            title={getText(\"workForBulletFactory\")}\n          />\n        </Content>\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"shiftSchedule\")}\n              contentWidth={\"90%\"}\n              id=\"shifts\"\n            >\n              <T>\n                {getText(\n                  \"shiftToDo\",\n                  me?.gang?.members,\n                  Math.floor(me?.gang?.members * SHIFT_FACTOR)\n                )}\n              </T>\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"morningShift\")}\n              </T>\n              {morning?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"dayShift\")}\n              </T>\n              {day?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"eveningShift\")}\n              </T>\n              {evening?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"nightShift\")}\n              </T>\n              {night?.map(renderShiftUser)}\n              <T bold style={{ marginTop: 20 }}>\n                {getText(\"underachievers\")}\n              </T>\n              {underachievers?.map(renderUnderAchieverUserRow)}\n            </Content>\n\n            {me?.gangLevel === GANG_LEVEL_BANK ||\n              (me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Content\n                  title={getText(\"buyBulletFactory\")}\n                  contentWidth={\"90%\"}\n                  id=\"buyBulletFactory\"\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      marginTop: 20,\n                    }}\n                  >\n                    {bulletFactories.map((bf) => {\n                      return (\n                        <View style={{ width: 200, marginHorizontal: 10 }}>\n                          <T bold>{getText(`bf${bf.type}`)}</T>\n                          <T>{getText(\"generatesBullets\", bf.generates)}</T>\n                          <T>\n                            {getText(\"initialCost\")}: €\n                            {numberFormat(bf.initialCost)},-\n                          </T>\n                          <T>\n                            {getText(\"dailyCost\")}: €\n                            {numberFormat(bf.dailyCost)}\n                            ,-\n                          </T>\n                          {me?.gang?.bulletFactory === bf.type ? (\n                            <T bold>{getText(\"currentBulletFactory\")}</T>\n                          ) : (\n                            <Button\n                              title={getText(\"buy\")}\n                              onPress={() => postGangBuyBulletFactory(bf.type)}\n                            />\n                          )}\n                        </View>\n                      );\n                    })}\n                  </View>\n                </Content>\n              ))}\n\n            <Content\n              contentWidth={\"90%\"}\n              id=\"gangbulletfacotryinfo\"\n              title={getText(\"info\")}\n            >\n              <Markdown style={{ text: { color: theme.primaryText } }}>\n                {getText(\"gangBulletFactoryInfo\")}\n              </Markdown>\n            </Content>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangBulletFactory;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bulletfactory from \"./Bulletfactory\";\nimport GangBulletFactory from \"./GangBulletFactory\";\nconst AllGarage = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"bulletfactory\",\n      title: getText(\"menuBulletfactory\"),\n      component: Bulletfactory,\n    },\n\n    {\n      key: \"gangBulletfactory\",\n      title: getText(\"menuGangBulletfactory\"),\n      component: GangBulletFactory,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGarage;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst GangCreate = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [name, setName] = useState(\"\");\n\n  const postGangCreate = async () => {\n    const { response } = await post(\"gangCreate\", {\n      name,\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <TextInput\n        value={name}\n        onChangeText={setName}\n        style={style(theme).textInput}\n        placeholder=\"Name\"\n        placeholderTextColor={theme.secondaryTextSoft}\n      />\n      <Button\n        onPress={postGangCreate}\n        title={getText(\"gangCreateCTA\")}\n        theme={theme}\n      />\n    </ScrollView>\n  );\n};\n\nexport default GangCreate;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nconst H1 = ({ children }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <Text\n      style={{ fontSize: 30, fontWeight: \"bold\", color: theme.primaryText }}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport default H1;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ActivityIndicator, ScrollView, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Button from \"../components/Button\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nconst GangMissions = ({ navigation, screenProps: { device, me } }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const postGangMissionPrestige = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangMissionPrestige\", {\n      token: device.loginToken,\n    });\n    setResponse(response);\n    getGangMissions();\n    setLoading(false);\n  };\n  const postGangStartMission = async (index) => {\n    setLoading(true);\n    const { response } = await post(\"gangStartMission\", {\n      token: device.loginToken,\n      index,\n    });\n    setResponse(response);\n    getGangMissions();\n    setLoading(false);\n  };\n\n  const getGangMissions = async () => {\n    setLoading(true);\n    const result = await get(`gangMissions?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangMissions);\n\n  const isPrestige = result?.reduce?.(\n    (prev, mission) => prev && !!mission.current\n  );\n  console.log(isPrestige);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {loading && <ActivityIndicator />}\n      {response && <T>{response}</T>}\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>{getText(\"missions\")}</H1>\n          </View>\n          {isPrestige && (\n            <Button\n              title={getText(\"youArePrestige\")}\n              onPress={postGangMissionPrestige}\n            />\n          )}\n          {result?.map((mission, index) => {\n            const time =\n              mission.seconds < 120\n                ? `${mission.seconds} ${getText(\"seconds\")}`\n                : mission.seconds < 3600\n                ? `${Math.round(mission.seconds / 60)} ${getText(\"minutes\")}`\n                : `${Math.round(mission.seconds / 3600)} ${getText(\"hours\")}`;\n\n            const startButton = (\n              <Button\n                onPress={() => postGangStartMission(index)}\n                title={getText(\"start\")}\n              />\n            );\n            return (\n              <Grid style={{ height: 50 }}>\n                <Col size={4}>\n                  <T>\n                    {getText(\n                      mission.what + \"Mission\",\n                      mission.amountPerMember * me?.gang?.members\n                    )}{\" \"}\n                    in {time}\n                  </T>\n                </Col>\n                <Col>\n                  {mission.current ? (\n                    mission.current.isEnded ? (\n                      mission.current.isSucceeded ? (\n                        <T>✅</T>\n                      ) : (\n                        <View style={{ flexDirection: \"row\" }}>\n                          <T>⛔️</T>\n                        </View>\n                      )\n                    ) : (\n                      <View style={{ flexDirection: \"row\" }}>\n                        <T>\n                          {mission.current.amountDone}/\n                          {mission.amountPerMember * me?.gang?.members}\n                        </T>\n                      </View>\n                    )\n                  ) : null}\n                </Col>\n\n                <Col style={{ alignItems: \"flex-end\" }}>\n                  {mission.current ? (\n                    mission.current.isEnded ? (\n                      mission.current.isSucceeded ? null : (\n                        <View style={{ flexDirection: \"row\" }}>\n                          {startButton}\n                        </View>\n                      )\n                    ) : (\n                      <CountDown\n                        style={{ marginLeft: 10 }}\n                        until={moment(mission.current.createdAt)\n                          .add(mission.seconds, \"seconds\")\n                          .diff(moment(), \"seconds\")}\n                        digitStyle={{\n                          backgroundColor: device.theme.secondary,\n                        }}\n                        digitTxtStyle={{ color: device.theme.secondaryText }}\n                        onFinish={() => {}}\n                        size={8}\n                        timeToShow={[\"H\", \"M\", \"S\"]}\n                        timeLabels={{ m: null, s: null }}\n                      />\n                    )\n                  ) : (\n                    <View style={{ flexDirection: \"row\" }}>{startButton}</View>\n                  )}\n                </Col>\n              </Grid>\n            );\n          })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangMissions;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport Content from \"../components/Content\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport styles from \"../Style\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangSettings = ({\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [gang, setGang] = useState({});\n  const [username, setUsername] = useState(\"\");\n  const [gangName, setGangName] = useState(\"\");\n  const [profile, setProfile] = useState(me?.gang?.profile || \"\");\n  const [message, setMessage] = useState(me?.gang?.message || \"\");\n  const [name, setName] = useState(me?.gang?.name || \"\");\n  const [image, setImage] = useState(me?.gang?.image || \"\");\n  const [isBullets, setIsBullets] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const alertAlert = React.useContext(AlertContext);\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${me?.gang?.name}`);\n    setLoading(false);\n    setGang(gang);\n  };\n\n  const getGangInvites = async () => {\n    setLoading(true);\n    const { requests } = await get(`gangInvites?token=${device.loginToken}`);\n    setLoading(false);\n    setRequests(requests);\n  };\n\n  const postGangAnswerJoin = async (id, accepted) => {\n    setLoading(true);\n    const { response } = await post(\"gangAnswerJoin\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGangInvites();\n  };\n\n  const postGangUpdate = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangUpdate\", {\n      token: device.loginToken,\n      profile,\n      image,\n      message,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangInvite = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangInvite\", {\n      token: device.loginToken,\n      name: username,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangTransaction = async (isToUser) => {\n    setLoading(true);\n    const { response } = await post(\"gangTransaction\", {\n      token: device.loginToken,\n      amount,\n      isToUser,\n      isBullets,\n    });\n    reloadMe(device.loginToken);\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangLeave = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangLeave\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const postGangKick = async (userId) => {\n    setLoading(true);\n    const { response } = await post(\"gangKick\", {\n      token: device.loginToken,\n      userId,\n    });\n    setLoading(false);\n    setResponse(response);\n    getGang();\n  };\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const postGangRemove = async () => {\n    setLoading(true);\n    const { response } = await post(\"gangRemove\", {\n      token: device.loginToken,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  const postGangSetRank = async (userId, rank) => {\n    setLoading(true);\n    const { response } = await post(\"gangSetRank\", {\n      token: device.loginToken,\n      userId,\n      rank,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getGang();\n  };\n\n  doOnce(getGangInvites);\n  doOnce(getGang);\n\n  const changeRank = (userId) => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [\n      getText(\"gangLevelMember\"),\n      getText(\"gangLevelBank\"),\n      getText(\"gangLevelUnderboss\"),\n      getText(\"gangLevelBoss\"),\n    ];\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < 4) {\n          postGangSetRank(userId, buttonIndex + 1);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n      }\n    }\n  };\n  const handleChoosePhoto = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n      </View>\n      <ScrollView\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height : undefined,\n        }}\n        style={{ flex: 1, padding: 15 }}\n      >\n        {!me?.gang?.id ? (\n          <T>{getText(\"noAccess\")}</T>\n        ) : (\n          <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            <Content\n              title={getText(\"gangProfile\")}\n              contentWidth={\"90%\"}\n              id=\"gangProfile\"\n            >\n              {me?.gang?.message && (\n                <MarkdownView style={{ text: { color: theme.primaryText } }}>\n                  {me?.gang?.message}\n                </MarkdownView>\n              )}\n            </Content>\n\n            <Content\n              title={getText(\"yourStatus\")}\n              contentWidth={250}\n              id=\"settingsYourStatus\"\n            >\n              <T>{getText(\"youAreWhat\", getGangLevel(me?.gangLevel))}</T>\n            </Content>\n\n            {/* Answer join */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"gangJoinRequestsTitle\")}\n                contentWidth={250}\n                id=\"settingsAnswerJoin\"\n              >\n                {requests.length > 0 ? (\n                  requests.map((request) => {\n                    return (\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <T>{request.user?.name}</T>\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Button\n                            title={getText(\"accept\")}\n                            onPress={() => postGangAnswerJoin(request.id, true)}\n                          />\n                          <Button\n                            title={getText(\"decline\")}\n                            onPress={() =>\n                              postGangAnswerJoin(request.id, false)\n                            }\n                          />\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{getText(\"noJoinRequests\")}</T>\n                )}\n              </Content>\n            ) : null}\n\n            {/* Invite */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS ? (\n              <Content\n                title={getText(\"invitePeople\")}\n                contentWidth={250}\n                id=\"settingsInvite\"\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={username}\n                    onChangeText={setUsername}\n                    placeholder={getText(\"name\")}\n                  />\n                  <Button\n                    title={getText(\"invite\")}\n                    onPress={postGangInvite}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                </View>\n              </Content>\n            ) : null}\n\n            {/* Transactions */}\n            {\n              <Content\n                title={getText(\"gangBank\")}\n                contentWidth={250}\n                id=\"settingsTransactions\"\n              >\n                <T>\n                  {getText(\"bankMoney\")}: €{numberFormat(me?.gang?.bank || 0)},-\n                </T>\n                <T>\n                  {getText(\"bullets\")}: {numberFormat(me?.gang?.bullets || 0)}\n                </T>\n                <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={styles(theme).textInput}\n                    value={amount}\n                    onChangeText={setAmount}\n                    placeholder={getText(\"amount\")}\n                  />\n\n                  <Button\n                    title={isBullets ? getText(\"bullets\") : getText(\"bank\")}\n                    onPress={() => setIsBullets(!isBullets)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n\n                  <Button\n                    title={getText(\"in\")}\n                    onPress={() => postGangTransaction(false)}\n                    style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                  />\n                  {me?.gangLevel === GANG_LEVEL_BANK ||\n                  me?.gangLevel === GANG_LEVEL_BOSS ? (\n                    <Button\n                      title={getText(\"out\")}\n                      onPress={() => postGangTransaction(true)}\n                      style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n                    />\n                  ) : null}\n                </View>\n              </Content>\n            }\n\n            {/* memberview with kick or change rank, per member */}\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"members\")}\n                contentWidth=\"90%\"\n                id=\"memberViewSettings\"\n              >\n                {gang?.users?.map((member) => {\n                  return (\n                    <Grid>\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{member.name}</T>\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\" }}>\n                        <T>{getGangLevel(member.gangLevel)}</T>\n                      </Col>\n\n                      <Col\n                        style={{\n                          justifyContent: \"center\",\n                          alignItems: \"flex-end\",\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          {me?.gangLevel >= GANG_LEVEL_UNDERBOSS &&\n                            member.id !== me?.id && (\n                              <Button\n                                title={getText(\"kick\")}\n                                onPress={() => postGangKick(member.id)}\n                              />\n                            )}\n                          {me?.gangLevel === GANG_LEVEL_BOSS && (\n                            <Button\n                              title={getText(\"changeRank\")}\n                              style={{ marginLeft: 10 }}\n                              onPress={() => changeRank(member.id)}\n                            />\n                          )}\n                        </View>\n                      </Col>\n                    </Grid>\n                  );\n                })}\n              </Content>\n            )}\n            {/* update name,profile,image */}\n\n            {me?.gangLevel >= GANG_LEVEL_UNDERBOSS && (\n              <Content\n                title={getText(\"gangProfile\")}\n                contentWidth=\"90%\"\n                id=\"updateProfileSettings\"\n              >\n                <TouchableOpacity onPress={handleChoosePhoto}>\n                  {image ? (\n                    <Image\n                      source={{\n                        uri: image.includes(\"data:image\")\n                          ? image\n                          : Constants.SERVER_ADDR + image,\n                      }}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  ) : (\n                    <Image\n                      source={require(\"../../assets/icon.png\")}\n                      style={{ width: 200, height: 200 }}\n                      resizeMode=\"cover\"\n                    />\n                  )}\n                </TouchableOpacity>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={styles(theme).textInput}\n                  value={name}\n                  onChangeText={setName}\n                  placeholder={getText(\"gangName\")}\n                />\n                <T bold>{getText(\"gangProfile\")}</T>\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={profile}\n                  onChangeText={setProfile}\n                />\n                <T bold>{getText(\"gangMessage\")}</T>\n\n                <TextInput\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  style={[\n                    styles(theme).textInput,\n                    {\n                      width: \"100%\",\n                      height: 200,\n                    },\n                  ]}\n                  multiline={true}\n                  value={message}\n                  onChangeText={setMessage}\n                />\n\n                <Button\n                  onPress={postGangUpdate}\n                  title={getText(\"save\")}\n                  style={{ marginTop: 10 }}\n                />\n              </Content>\n            )}\n            {/* transactions */}\n\n            {/* Leave */}\n            <View style={{ marginVertical: 20 }}>\n              {\n                <Button\n                  title={getText(\"leaveGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"leaveGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangLeave },\n                        { text: getText(\"cancel\") },\n                      ],\n                      { key: \"leaveGang\" }\n                    )\n                  }\n                />\n              }\n            </View>\n\n            {/* Gang delete */}\n            <View style={{ marginVertical: 20 }}>\n              {me?.gangLevel === GANG_LEVEL_BOSS && (\n                <Button\n                  title={getText(\"removeGang\")}\n                  onPress={() =>\n                    alertAlert(\n                      getText(\"areYouSure\"),\n                      getText(\"removeGangAlertMessage\"),\n                      [\n                        { text: getText(\"ok\"), onPress: postGangRemove },\n                        { text: getText(\"cancel\") },\n                      ],\n                      { key: \"removeGang\" }\n                    )\n                  }\n                />\n              )}\n            </View>\n\n            <View style={{ height: 80 }} />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default GangSettings;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport styles from \"../Style\";\nimport { getTextFunction, numberFormat, post } from \"../Util\";\nconst MARGIN = 20;\nconst { width, height } = Dimensions.get(\"window\");\nconst SIZE = width < 1000 ? 100 : 200;\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst GangShop = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const prices = [\n    null,\n    50000,\n    100000,\n    200000,\n    500000,\n    1000000,\n    1500000,\n    2000000,\n    3000000,\n    4000000,\n    5000000,\n    10000000,\n    20000000,\n  ];\n\n  const items = [\n    {\n      name: getText(\"gangShopItem1\"),\n      price: prices[1],\n      current: me?.gang?.item1,\n      image: require(\"../../assets/gangshop/item1.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem2\"),\n      price: prices[2],\n      current: me?.gang?.item2,\n      image: require(\"../../assets/gangshop/item2.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem3\"),\n      price: prices[3],\n      current: me?.gang?.item3,\n      image: require(\"../../assets/gangshop/item3.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem4\"),\n      price: prices[4],\n      current: me?.gang?.item4,\n      image: require(\"../../assets/gangshop/item4.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem5\"),\n      price: prices[5],\n      current: me?.gang?.item5,\n      image: require(\"../../assets/gangshop/item5.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem6\"),\n      price: prices[6],\n      current: me?.gang?.item6,\n      image: require(\"../../assets/gangshop/item6.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem7\"),\n      price: prices[7],\n      current: me?.gang?.item7,\n      image: require(\"../../assets/gangshop/item7.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem8\"),\n      price: prices[8],\n      current: me?.gang?.item8,\n      image: require(\"../../assets/gangshop/item8.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem9\"),\n      price: prices[9],\n      current: me?.gang?.item9,\n      image: require(\"../../assets/gangshop/item9.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem10\"),\n      price: prices[10],\n      current: me?.gang?.item10,\n      image: require(\"../../assets/gangshop/item10.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem11\"),\n      price: prices[11],\n      current: me?.gang?.item11,\n      image: require(\"../../assets/gangshop/item11.jpg\"),\n    },\n    {\n      name: getText(\"gangShopItem12\"),\n      price: prices[12],\n      current: me?.gang?.item12,\n      image: require(\"../../assets/gangshop/item12.jpg\"),\n    },\n  ];\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const postGangShop = async (itemId) => {\n    setLoading(true);\n    const { response } = await post(\"gangShop\", {\n      itemId,\n      amount: amount[itemId],\n      token: device.loginToken,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n    setLoading(false);\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      <T>\n        {getText(\"gangBank\")}: €{numberFormat(me?.gang?.bank || 0)},-\n      </T>\n      <T>\n        {getText(\"power\")}: {me?.gang?.power}\n      </T>\n      <FlatList\n        refreshing={loading}\n        onRefresh={() => reloadMe(device.loginToken)}\n        data={items}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\", height: height - 200 }\n            : undefined\n        }\n        keyExtractor={(item, index) => `shop${index}`}\n        renderItem={({ item, index }) => {\n          return (\n            <View style={{ margin: MARGIN }}>\n              <Image\n                source={item.image}\n                style={{ width: SIZE, height: SIZE }}\n                resizeMode=\"contain\"\n              />\n              <T>{item.name}</T>\n              <T>€{item.price},-</T>\n              <T>\n                {getText(\"inPossession\")}: {item.current}\n              </T>\n              {(me?.gangLevel === GANG_LEVEL_BOSS ||\n                me?.gangLevel === GANG_LEVEL_BANK) && (\n                <View style={{ flexDirection: \"row\" }}>\n                  <TextInput\n                    placeholderTextColor={theme.secondaryTextSoft}\n                    style={[styles(theme).textInput, { width: 100 }]}\n                    value={amount[index + 1] || \"\"}\n                    onChangeText={(v) =>\n                      setAmount({ ...amount, [index + 1]: v })\n                    }\n                    placeholder={getText(\"amount\")}\n                  />\n                  <Button\n                    style={{ marginVertical: 10, marginLeft: 10 }}\n                    title={getText(\"buy\")}\n                    onPress={() => postGangShop(index + 1)}\n                  />\n                </View>\n              )}\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default GangShop;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport GangCreate from \"./GangCreate\";\nimport GangMissions from \"./GangMissions\";\nimport GangSettings from \"./GangSettings\";\nimport GangShop from \"./GangShop\";\nconst AllGang = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"gangCreate\",\n      title: getText(\"menuGangCreate\"),\n      component: GangCreate,\n    },\n\n    {\n      key: \"gangSettings\",\n      title: getText(\"menuGangSettings\"),\n      component: GangSettings,\n    },\n    {\n      key: \"gangShop\",\n      title: getText(\"menuGangShop\"),\n      component: GangShop,\n    },\n    {\n      key: \"gangMissions\",\n      title: getText(\"menuGangMissions\"),\n      component: GangMissions,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGang;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nconst Separator = () => {\n  return (\n    <View style={{ width: \"100%\", height: 0.5, backgroundColor: \"#000\" }} />\n  );\n};\n\nexport default Separator;\n","import React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Text,\n  TextInput,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nclass Garage extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    amount: {},\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGroups();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      this.fetchGroups();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGroups = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/garageGrouped?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (carGroups) => {\n        const amount = carGroups.reduce(\n          (previous, current) => ({\n            ...previous,\n            [current.id]: String(current.amount),\n          }),\n          {}\n        );\n\n        this.setState({\n          carGroups,\n          amount,\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  bulkAction = (action, auto, amount) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/bulkaction`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount, action, auto, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, auto, amount: {} });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGroups();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderGroup = ({ item, index }) => {\n    const {\n      screenProps: {\n        device,\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const value = this.state.amount[item.id];\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n            alignSelf: \"center\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <View>\n              {(this.state.response && this.state.auto === item.auto) ||\n              this.state.id === item.id ? (\n                <Text style={{ color: theme.primaryText }}>\n                  {this.state.response.response}\n                </Text>\n              ) : null}\n\n              <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n              <Text style={{ color: theme.primaryText }}>\n                {getText(\"inPossession\")}: {item.amount}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                &euro;{item.cash}\n              </Text>\n              <Text style={{ color: theme.primaryText }}>\n                {item.kogels} {getText(\"bullets\")}\n              </Text>\n\n              <T bold style={{ marginTop: 15 }}>\n                {getText(\"amount\")}:\n              </T>\n              <TextInput\n                key={`amount${item.id}`}\n                style={style(device.theme).textInput}\n                value={value}\n                onChangeText={(x) =>\n                  this.setState({\n                    amount: { ...this.state.amount, [item.id]: x },\n                  })\n                }\n                placeholderTextColor={theme.secondaryTextSoft}\n                placeholder={getText(\"amount\")}\n              />\n            </View>\n\n            <View style={{ justifyContent: \"space-between\", marginBottom: 15 }}>\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"sell\")}\n                onPress={() =>\n                  this.bulkAction(\"sell\", item.auto, this.state.amount[item.id])\n                }\n              />\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"crush\")}\n                onPress={() =>\n                  this.bulkAction(\n                    \"crush\",\n                    item.auto,\n                    this.state.amount[item.id]\n                  )\n                }\n              />\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"upgrade\")}\n                onPress={() => this.upgradeCar(item.id)}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <FlatList\n        numColumns={width > 1000 ? 2 : 1}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        keyExtractor={(item, index) => `item${index}`}\n        data={carGroups}\n        renderItem={this.renderGroup}\n        ItemSeparatorComponent={Separator}\n      />\n    );\n  }\n}\n\nexport default Garage;\n","import React, { Component } from \"react\";\nimport { FlatList, Image, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Racecars extends Component {\n  state = {\n    selected: null,\n    response: null,\n    cars: [],\n    id: null,\n  };\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    const { device } = this.props.screenProps;\n\n    this.fetchGarage();\n\n    this.focusListener = navigation.addListener(\"didFocus\", () => {\n      // The screen is focused\n      // Call any action\n      console.log(\"FETCH GARAGE\");\n      this.fetchGarage();\n    });\n  }\n\n  componentWillUnmount() {\n    // Remove the event listener\n    this.focusListener.remove();\n  }\n\n  fetchGarage = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/racecars?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (cars) => {\n        this.setState({ cars });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  sellCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/sellcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  crushCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/crushcar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  upgradeCar = (id) => {\n    const { loginToken } = this.props.screenProps.device;\n    fetch(`${Constants.SERVER_ADDR}/upgradecar`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id, loginToken }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, id });\n        this.props.screenProps.reloadMe(loginToken);\n        this.fetchGarage();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          borderRadius: 10,\n          borderWidth: 1,\n          borderColor: \"black\",\n        }}\n      >\n        <Image\n          style={{\n            width: 350,\n            height: 300,\n            resizeMode: \"contain\",\n          }}\n          source={{ uri: Constants.SERVER_ADDR + \"/\" + item.image }}\n        />\n\n        <View style={{ marginLeft: 20 }}>\n          {this.state.response && this.state.id === item.id ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response.response}\n            </Text>\n          ) : null}\n\n          <Text style={{ color: theme.primaryText }}>{item.auto}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.cash}</Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.kogels} {getText(\"bullets\")}\n          </Text>\n          <Text style={{ color: theme.primaryText }}>\n            {item.power}.000 {getText(\"power\")}\n          </Text>\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"sell\")}\n            onPress={() => this.sellCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"crush\")}\n            onPress={() => this.crushCar(item.id)}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"upgrade\")}\n            onPress={() => this.upgradeCar(item.id)}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n    const { cars, carGroups, id, view, filter } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          keyExtractor={(item, index) => `item${index}`}\n          data={cars?.filter((car) => car.auto === filter || !filter)}\n          extraData={id}\n          renderItem={this.renderItem}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Racecars;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Garage from \"./Garage\";\nimport Racecars from \"./Racecars\";\nconst AllGarage = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"garage\",\n      title: getText(\"menuGarage\"),\n      component: Garage,\n    },\n\n    {\n      key: \"racecars\",\n      title: getText(\"menuRacecars\"),\n      component: Racecars,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllGarage;\n","import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 100;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [gangs, setGangs] = useState([]);\n  const [invites, setInvites] = useState([]);\n\n  const getGangs = async () => {\n    setLoading(true);\n    const { gangs } = await get(\"gangs\");\n    setLoading(false);\n    setGangs(gangs);\n  };\n\n  const getInvites = async () => {\n    const { requests, invites } = await get(\n      `gangInvites?token=${device.loginToken}`\n    );\n    setInvites(invites);\n  };\n\n  const postGangAnswerInvite = async (id, accepted) => {\n    const { response } = await post(\"gangAnswerInvite\", {\n      token: device.loginToken,\n      id,\n      accepted,\n    });\n    setResponse(response);\n    getInvites();\n  };\n\n  doOnce(getGangs);\n  doOnce(getInvites);\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n      {invites.length > 0 &&\n        invites.map((invite, index) => {\n          return (\n            <View key={`invite${index}`} style={{ flexDirection: \"row\" }}>\n              <T>{getText(\"gangInvitedTo\", invite.gangName)}</T>\n              <Button\n                title={getText(\"accept\")}\n                onPress={() => postGangAnswerInvite(invite.id, true)}\n              />\n              <Button\n                title={getText(\"decline\")}\n                onPress={() => postGangAnswerInvite(invite.id, false)}\n              />\n            </View>\n          );\n        })}\n\n      <FlatList\n        refreshing={loading}\n        onRefresh={getGangs}\n        data={gangs}\n        numColumns={\n          Platform.OS === \"web\"\n            ? undefined\n            : Math.floor(width / (SIZE + MARGIN * 2))\n        }\n        contentContainerStyle={\n          Platform.OS === \"web\"\n            ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n            : undefined\n        }\n        keyExtractor={(item, index) => `gang${index}`}\n        renderItem={({ item, index }) => {\n          const navigate = () =>\n            navigation.navigate(\"Gang\", { name: item.name });\n          return (\n            <TouchableOpacity\n              onPress={navigate}\n              style={{ margin: MARGIN, width: SIZE }}\n            >\n              {item.thumbnail ? (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + item.thumbnail }}\n                  style={{ width: SIZE, height: SIZE }}\n                  resizeMode=\"cover\"\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={{ width: SIZE, height: SIZE }}\n                />\n              )}\n              <T>\n                {getText(\"name\")}: {item.name}\n              </T>\n              <T>\n                {getText(\"members\")}: {item.members}\n              </T>\n              <T>\n                {getText(\"bank\")}: €{numberFormat(item.bank)},-\n              </T>\n              <T>\n                {getText(\"power\")}: {item.score}\n              </T>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { Dimensions, FlatList, Platform, TextInput, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\nimport Button from \"../components/Button\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, getRank, getStrength, getTextFunction } from \"../Util\";\nconst { height } = Dimensions.get(\"window\");\n\nconst filters = [\n  {\n    key: \"alive\",\n    title: \"Levend\",\n  },\n  {\n    key: \"dead\",\n    title: \"Dood\",\n  },\n  {\n    key: \"crew\",\n    title: \"Crew\",\n  },\n];\n\nconst orders = [\n  {\n    key: \"onlineAt\",\n    title: \"Online\",\n  },\n\n  {\n    key: \"cash\",\n    title: \"Contant\",\n  },\n\n  {\n    key: \"bank\",\n    title: \"Bank\",\n  },\n  {\n    key: \"hoeren\",\n    title: \"Hoeren\",\n  },\n  {\n    key: \"junkies\",\n    title: \"Junkies\",\n  },\n  {\n    key: \"wiet\",\n    title: \"Wiet\",\n  },\n  {\n    key: \"rank\",\n    title: \"Rang\",\n  },\n  {\n    key: \"strength\",\n    title: \"Moordrang\",\n  },\n];\n\nconst Members = ({\n  showActionSheetWithOptions,\n  screenProps: { me, device },\n  navigation,\n}) => {\n  const [members, setMembers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [orderBy, setOrderBy] = useState(orders[0]);\n  const [filter, setFilter] = useState(filters[0]);\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    //   if (order) {\n    //     setOrderBy(orders[order]);\n    //     fetchMembers(orders[order].key);\n    //   } else {\n    fetchMembers(orderBy.key);\n    //   }\n  });\n\n  const fetchMembers = (order, filter) => {\n    fetch(`${Constants.SERVER_ADDR}/members?order=${order}&filter=${filter}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (members) => {\n        setMembers(members);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const renderItem = ({ item, index }) => {\n    const orderKey = orderBy.key;\n\n    const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n    const secondKey =\n      orderKey === \"onlineAt\"\n        ? isOnline\n          ? \"✅\"\n          : \"🛑\"\n        : orderKey === \"cash\"\n        ? `€${item.cash},-`\n        : orderKey === \"hoeren\"\n        ? `${item.hoeren}`\n        : orderKey === \"junkies\"\n        ? `${item.junkies}`\n        : orderKey === \"wiet\"\n        ? `${item.wiet}`\n        : orderKey === \"rank\"\n        ? `${getRank(item.rank, \"both\")}`\n        : orderKey === \"strength\"\n        ? `${getStrength(item.strength, \"both\")}`\n        : `€${item.bank},-`;\n\n    return (\n      <View\n        key={`item${index}`}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          paddingHorizontal: 20,\n          paddingVertical: 10,\n        }}\n      >\n        <User navigation={navigation} user={item} />\n        <T>{secondKey}</T>\n      </View>\n    );\n  };\n\n  const openActionSheetSort = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = orders.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < options.length - 1) {\n          setOrderBy(orders[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filter.key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const openActionSheetFilter = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = filters.map((o) => o.title);\n\n    options.push(getText(\"cancel\"));\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < filters.length) {\n          console.log(\"setfilter\", filters[buttonIndex]);\n          setFilter(filters[buttonIndex]);\n          fetchMembers(orders[buttonIndex].key, filters[buttonIndex].key);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ backgroundColor: device.theme.primary }}>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title={getText(\"sort\")}\n            onPress={() => openActionSheetSort()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n\n          <Button\n            title={getText(\"filter\")}\n            onPress={() => openActionSheetFilter()}\n            icon=\"filter\"\n            font=\"FontAwesome\"\n            style={{ marginTop: 20, marginHorizontal: 10 }}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 20,\n            backgroundColor: device.theme.secondary,\n            marginVertical: 20,\n            marginHorizontal: 10,\n            paddingHorizontal: 20,\n            height: 40,\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            placeholder={getText(\"search\")}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            value={search}\n            style={{\n              flex: 1,\n              fontSize: 16,\n              color: device.theme.secondaryText,\n            }}\n            onChangeText={setSearch}\n          />\n\n          <Icon.FontAwesome\n            name=\"search\"\n            size={20}\n            color={device.theme.secondaryText}\n          />\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 40,\n            backgroundColor: device.theme.secondary,\n            alignItems: \"center\",\n            paddingHorizontal: 20,\n          }}\n        >\n          <T style={{ fontWeight: \"bold\" }}>{getText(\"name\")}</T>\n          <T style={{ fontWeight: \"bold\" }}>{orderBy.title}</T>\n        </View>\n      </View>\n    );\n  };\n\n  const searchedMembers = members.filter((m) =>\n    search ? m.name?.toLowerCase().includes(search.toLowerCase()) : true\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? 0 : undefined,\n        }}\n        ItemSeparatorComponent={() => <Separator />}\n        ListHeaderComponent={renderHeader}\n        data={searchedMembers}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default connectActionSheet(Members);\n","import React from \"react\";\nimport { Image, TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../Constants\";\nimport T from \"./T\";\n\nconst Gang = ({ gang, navigation, size = 60 }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Gang\", { name: gang.name });\n      }}\n      style={{ flexDirection: \"row\", alignItems: \"center\" }}\n    >\n      <View\n        style={{\n          backgroundColor: theme.primary,\n          borderRadius: size / 2,\n          borderWidth: 1,\n          borderColor: theme.secondary,\n        }}\n      >\n        {gang.thumbnail ? (\n          <Image\n            source={{ uri: Constants.SERVER_ADDR + gang.thumbnail }}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: size, height: size, borderRadius: size / 2 }}\n          />\n        )}\n      </View>\n      <View style={{ marginLeft: 20 }}>\n        <T>{gang.name}</T>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Gang;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Content from \"../components/Content\";\nimport Gang from \"../components/Gang\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { InactiveScreens } from \"../Menus\";\nimport { doOnce, get, getRank, getStrength, getTextFunction } from \"../Util\";\n\n/**\n */\nconst Prizes = ({\n  navigation,\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [prizes, setPrizes] = useState([]);\n  const getPrizes = async () => {\n    const { prizes } = await get(\"prizes\");\n    setPrizes(prizes);\n  };\n  doOnce(getPrizes);\n\n  return (\n    <ScrollView>\n      {moment().isAfter(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE) &&\n        moment().isBefore(InactiveScreens.PRIZES_RELEASE_DATE) && (\n          <MarkdownView style={{ text: { color: theme.primaryText } }}>\n            {getText(\"prizesText\")}\n          </MarkdownView>\n        )}\n\n      {me?.level > 1 ||\n      moment().isAfter(InactiveScreens.PRIZES_RELEASE_DATE) ? (\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {prizes.map((prize, index) => {\n            const when =\n              prize.every === \"hour\"\n                ? getText(\"everyHour\")\n                : prize.every === \"day\"\n                ? getText(\"everyDay5pm\")\n                : prize.every === \"week\"\n                ? getText(\"everyWeekSunday5pm\")\n                : prize.every === \"month\"\n                ? moment().endOf(\"month\").format(\"DD-MM-YYYY HH:mm\")\n                : null;\n            return (\n              <Content\n                contentWidth={\"90%\"}\n                id={`prize${index}`}\n                title={getText(`prize${prize.forWhat}title`) + \" \" + when}\n              >\n                {prize.stats.map((stat, i) => {\n                  //stat is user\n                  return (\n                    <Grid key={`grid${i}x${index}`}>\n                      <Col\n                        size={2}\n                        style={{ justifyContent: \"center\", paddingTop: 10 }}\n                      >\n                        {prize.forWhat === \"gang\" ? (\n                          <Gang size={40} navigation={navigation} gang={stat} />\n                        ) : (\n                          <User size={40} navigation={navigation} user={stat} />\n                        )}\n                      </Col>\n\n                      <Col style={{ justifyContent: \"center\", paddingTop: 10 }}>\n                        <T>\n                          {stat.prize} {getText(prize.prizeWhat)}\n                        </T>\n                      </Col>\n\n                      {prize.forWhat === \"gang\" ? null : (\n                        <Col\n                          style={{ justifyContent: \"center\", paddingTop: 10 }}\n                        >\n                          <T>\n                            {prize.forWhat === \"rank\"\n                              ? getRank(stat[prize.forWhat], \"both\")\n                              : prize.forWhat === \"strength\"\n                              ? getStrength(stat[prize.forWhat], \"both\")\n                              : `${stat[prize.forWhat]} ${getText(\n                                  prize.forWhat\n                                )}`}\n                          </T>\n                        </Col>\n                      )}\n                    </Grid>\n                  );\n                })}\n              </Content>\n            );\n          })}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\nexport default Prizes;\n","import React from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, numberFormat } from \"../Util\";\n\nconst properties = [\n  { name: \"bulletFactory\" },\n  { name: \"casino\" },\n  { name: \"rld\" },\n  { name: \"landlord\" },\n  { name: \"junkies\" },\n  { name: \"weaponShop\" },\n  { name: \"airport\" },\n  { name: \"estateAgent\" },\n  { name: \"garage\" },\n  { name: \"jail\" },\n  { name: \"bank\" },\n  { name: \"gym\" },\n  { name: \"hospital\" },\n  { name: \"market\" },\n  { name: \"stockExchange\" },\n];\n\nconst Properties = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(reloadCities);\n\n  const gridStyle = {\n    paddingVertical: 10,\n    paddingLeft: 10,\n    borderBottomWidth: 0.5,\n    borderBottomColor: \"black\",\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        <View>\n          <View style={gridStyle}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          {cities?.map((city, index) => {\n            return (\n              <View\n                key={`i${index}`}\n                style={[\n                  gridStyle,\n                  {\n                    borderRightColor: \"black\",\n                    borderRightWidth: 0.5,\n                    borderLeftColor: \"black\",\n                    borderLeftWidth: 0.5,\n                    paddingLeft: 10,\n                  },\n                ]}\n              >\n                <T>{city.city}</T>\n              </View>\n            );\n          })}\n        </View>\n\n        <ScrollView horizontal>\n          <View style={{ width: properties.length * 3 * 150 }}>\n            <Grid style={gridStyle}>\n              {properties.map((property, index) => {\n                return [\"owner\", \"damage\", \"profit\"].map((suffix) => {\n                  const field = `${getText(property.name)} ${getText(suffix)}`;\n\n                  return (\n                    <Col size={1} key={`prop${index}${suffix}`}>\n                      <T bold numberOfLines={1}>\n                        {field}\n                      </T>\n                    </Col>\n                  );\n                });\n              })}\n            </Grid>\n\n            {cities?.map((city, index) => {\n              return (\n                <Grid style={gridStyle}>\n                  {properties.map((property) => {\n                    return [\"Owner\", \"Damage\", \"Profit\"].map((fieldSuffix) => {\n                      const field = `${property.name}${fieldSuffix}`;\n\n                      const formattedField =\n                        fieldSuffix === \"Owner\" ? (\n                          <TouchableOpacity\n                            onPress={() =>\n                              navigation.navigate(\"Profile\", {\n                                name: city[field],\n                              })\n                            }\n                          >\n                            <T>{city[field]}</T>\n                          </TouchableOpacity>\n                        ) : fieldSuffix === \"Damage\" ? (\n                          <T>{city[field]}%</T>\n                        ) : (\n                          <T>€{numberFormat(city[field])},-</T>\n                        );\n                      return <Col>{formattedField}</Col>;\n                    });\n                  })}\n                </Grid>\n              );\n            })}\n          </View>\n        </ScrollView>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Properties;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Content from \"../components/Content\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport { doOnce, get, getRank, getStrength, numberFormat } from \"../Util\";\nconst keyNames = {\n  createdAt: \"Nieuwe leden\",\n  bank: \"Bankgeld\",\n  hoeren: \"Hoeren\",\n  junkies: \"Junkies\",\n  wiet: \"Wiet\",\n  rank: \"Rang\",\n  strength: \"Moordrang\",\n  gamepoints: \"Gamepoints\",\n  newMembers: \"Nieuwe leden vandaag\",\n  onlineToday: \"Leden online vandaag\",\n};\n\nconst Stats = ({ navigation, screenProps: { me } }) => {\n  const [stats, setStats] = useState([]);\n  const [gameStats, setGameStats] = useState([]);\n\n  const alertAlert = React.useContext(AlertContext);\n  const fetchStats = () => {\n    fetch(`${Constants.SERVER_ADDR}/stats`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((stats) => {\n        setStats(stats);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchGameStats = async () => {\n    const { stats } = await get(\"gamestats\");\n    setGameStats(stats);\n  };\n\n  doOnce(fetchStats);\n  doOnce(fetchGameStats);\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          padding: 20,\n        }}\n      >\n        {stats?.map((stat, index) => {\n          const key = Object.keys(stat)[0];\n          const values = Object.values(stat)[0];\n          return (\n            <Content\n              id={`stat${index}`}\n              key={`stat${index}`}\n              contentWidth={300}\n              title={keyNames[key]}\n            >\n              <View key={`index${index}`} style={{ width: 300, marginTop: 20 }}>\n                {values instanceof Array ? (\n                  values.map((value, i) => {\n                    let v = value[key];\n                    if (key === \"bank\") v = `€${numberFormat(v)},-`;\n                    if (key === \"createdAt\")\n                      v = moment(v).format(\"DD-MM-YYYY HH:mm\");\n                    if (key === \"strength\") v = getStrength(v, \"both\");\n                    if (key === \"rank\") v = getRank(v, \"both\");\n\n                    return (\n                      <View\n                        key={`stat${key}-${i}`}\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          marginBottom: 5,\n                        }}\n                      >\n                        <User navigation={navigation} user={value} size={40} />\n                        <View>\n                          <T key={`stat${key}-${i}`}>{v}</T>\n                        </View>\n                      </View>\n                    );\n                  })\n                ) : (\n                  <T>{values}</T>\n                )}\n              </View>\n            </Content>\n          );\n        })}\n      </View>\n      {gameStats.length > 0 && (\n        <View>\n          <H1>Online</H1>\n          <T>\n            Rood is online, groen is online per uur, blauw is online per dag.\n          </T>\n          <ScrollView horizontal snapToEnd>\n            <LineChart\n              fromZero\n              data={{\n                labels: gameStats.map((x, index) =>\n                  index === 0 || index % 6 === 0\n                    ? moment(x.createdAt).format(\"D MMM HH:00\")\n                    : \" \"\n                ),\n                datasets: [\n                  {\n                    data: gameStats.map((x) => x.online),\n                    color: (opacity) => \"red\",\n                  },\n                  {\n                    data: gameStats.map((x) => x.onlineLastHour),\n                    color: (opacity) => \"green\",\n                  },\n                  {\n                    data: gameStats.map((x) => x.onlineLastDay),\n                    color: (opacity) => \"blue\",\n                  },\n                ],\n              }}\n              onDataPointClick={(data) => {\n                const item = gameStats[data.index];\n\n                alertAlert(\n                  moment(item.createdAt).format(\"D MMM HH:00\"),\n                  `${item.online} online, ${item.onlineLastHour} online dat uur, ${item.onlineLastDay} online die dag`,\n                  null,\n                  { key: \"onlineInfo\" }\n                );\n              }}\n              width={gameStats.length * 20 + 100} // from react-native\n              height={225}\n              xAxisLabel=\"\"\n              xLabelsOffset={10}\n              yAxisLabel=\"\"\n              yAxisSuffix=\"\"\n              yAxisInterval={1} // optional, defaults to 1\n              chartConfig={{\n                backgroundColor: \"#e26a00\",\n                backgroundGradientFrom: \"#fb8c00\",\n                backgroundGradientTo: \"#ffa726\",\n                decimalPlaces: 0, // optional, defaults to 2dp\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                style: {\n                  borderRadius: 16,\n                },\n                propsForDots: {\n                  r: \"6\",\n                  strokeWidth: \"2\",\n                  stroke: \"#ffa726\",\n                },\n              }}\n              bezier\n              style={{\n                marginVertical: 8,\n                borderRadius: 16,\n              }}\n            />\n          </ScrollView>\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default Stats;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Gangs from \"./Gangs\";\nimport Members from \"./Members\";\nimport Prizes from \"./Prizes\";\nimport Properties from \"./Properties\";\nimport Stats from \"./Stats\";\nconst AllStats = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"members\",\n      title: getText(\"menuMembers\", props.screenProps.me?.online),\n      component: Members,\n    },\n    {\n      key: \"stats\",\n      title: getText(\"menuStats\"),\n      component: Stats,\n    },\n    {\n      key: \"gangs\",\n      title: getText(\"menuGangs\"),\n      component: Gangs,\n    },\n    {\n      key: \"prizes\",\n      title: getText(\"prizes\"),\n      component: Prizes,\n    },\n\n    {\n      key: \"properties\",\n      title: getText(\"menuProperties\"),\n      component: Properties,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <Component {...props} />\n\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllStats;\n","import React from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nclass MyProfile extends React.Component {\n  state = {\n    backfire: this.props.screenProps.me?.backfire,\n  };\n  render() {\n    const { device, me, reloadMe } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <T>{getText(\"backfireInfo\", me?.backfire * 100)}</T>\n\n        {[0, 0.1, 0.25, 0.5, 1].map((bf) => {\n          return (\n            <TouchableOpacity onPress={() => this.setState({ backfire: bf })}>\n              <View\n                style={{\n                  padding: 10,\n                  backgroundColor:\n                    this.state.backfire === bf ? \"blue\" : undefined,\n                }}\n              >\n                <T>{getText(\"backfireSetTo\", bf * 100)}</T>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n        <Button\n          title={getText(\"save\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                backfire: this.state.backfire,\n                loginToken: device.loginToken,\n              }),\n            })\n              .then((response) => response.json())\n              .then((response) => {\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.log(\"upload error\", error);\n                alert(getText(\"somethingWentWrong\"));\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default MyProfile;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Blocks = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [blocks, setBlocks] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  const postRemoveBlock = async (user2id) => {\n    const { response } = await post(\"removeBlock\", {\n      loginToken: device.loginToken,\n      user2id,\n    });\n\n    setResponse(response);\n    getBlocks();\n  };\n\n  const getBlocks = async () => {\n    const { blocks } = await get(`blocks?loginToken=${device.loginToken}`);\n\n    setBlocks(blocks);\n  };\n\n  doOnce(getBlocks);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          {blocks?.map?.((block) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <User user={block.user} size={40} navigation={navigation} />\n\n              <TouchableOpacity onPress={() => postRemoveBlock(block.user2id)}>\n                <Entypo name=\"cross\" color=\"red\" size={33} />\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Blocks;\n","import React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Bunker extends Component {\n  state = {\n    selected: null,\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>&euro;{item.price}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"bunkerCTA\")}\n          onPress={async () => {\n            const response = await post(\"bunker\", {\n              token: device.loginToken,\n              option: this.state.selected,\n              captcha: this.state.captcha,\n            });\n            this.setState({ response, captcha: \"\", random: Math.random() });\n            this.props.screenProps.reloadMe(device.loginToken);\n          }}\n        />\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    const { response, selected } = this.state;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"bunkerOneMinute\"),\n        price: \"50000\",\n      },\n      {\n        id: 2,\n        option: getText(\"bunkerFiveMinutes\"),\n        price: \"250000\",\n      },\n\n      {\n        id: 3,\n        option: getText(\"bunker15Minutes\"),\n        price: \"1000000\",\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options}\n            extraData={selected}\n            ListHeaderComponent={() => <T>{getText(\"bunkerInfo\")}</T>}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Bunker;\n","import { Entypo } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst lottoReleaseDate = moment(\"01/07/2021\", \"DD/MM/YYYY\").set(\"hour\", 17);\n\nconst Casino = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [becomeOwnerResponse, setBecomeOwnerResponse] = useState(null);\n\n  doOnce(reloadCities);\n\n  const becomeOwner = async (city) => {\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"casino\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n    setBecomeOwnerResponse(response);\n  };\n\n  const city = cities?.find((x) => x.city === me?.city);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {!city?.casinoOwner ? (\n        <View>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoNoOwner\")}\n          </Text>\n          {becomeOwnerResponse && <T>{becomeOwnerResponse}</T>}\n          <Button\n            title={getText(\"becomeOwner\")}\n            onPress={() => becomeOwner(me?.city)}\n          />\n        </View>\n      ) : (\n        <>\n          <Text style={{ color: theme.primaryText }}>\n            {getText(\"casinoInfo1\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>{me?.city}</Text>{\" \"}\n            {getText(\"is\")}{\" \"}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {city?.casinoOwner || getText(\"nobody\")}\n            </Text>\n            . {getText(\"casinoInfo2\", city?.casinoProfit)}\n          </Text>\n\n          <View style={{ flexDirection: \"row\" }}>\n            <Button\n              onPress={() => navigation.navigate(\"Poker\")}\n              title={getText(\"poker\")}\n            />\n\n            {(moment().isAfter(lottoReleaseDate) || me?.level > 1) && (\n              <Button\n                style={{ marginLeft: 10 }}\n                onPress={() => navigation.navigate(\"Lotto\")}\n                title={getText(\"lotto\")}\n              />\n            )}\n          </View>\n          {response && (\n            <Text style={{ color: theme.primaryText, marginVertical: 20 }}>\n              {response}\n            </Text>\n          )}\n        </>\n      )}\n\n      <View style={{ height: 80 }} />\n\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <View style={{ flex: 2 }}>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"city\")}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flex: 3,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"owner\")}\n          </Text>\n          <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n            {getText(\"profit\")}\n          </Text>\n        </View>\n      </View>\n      {cities?.map((city, index) => {\n        return (\n          <View\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              paddingVertical: 10,\n              borderBottomWidth: 0.5,\n              borderBottomColor: \"black\",\n            }}\n          >\n            <View style={{ flex: 2 }}>\n              <T>{city.city}</T>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                flex: 3,\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                {city.casinoOwner ? (\n                  <T>{city.casinoOwner}</T>\n                ) : (\n                  <TouchableOpacity onPress={() => becomeOwner(city.city)}>\n                    <T>{getText(\"nobody\")}</T>\n                  </TouchableOpacity>\n                )}\n                {city.casinoOwner === me?.name ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: \"casino\",\n                        city: city.city,\n                      })\n                    }\n                  >\n                    <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n\n              <Text style={{ color: theme.primaryText }}>\n                {city.casinoProfit}\n              </Text>\n            </View>\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Casino;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst ChangeName = ({\n  navigation,\n  screenProps: {\n    device,\n    reloadMe,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [name, setName] = useState(me?.name);\n  const [response, setResponse] = useState(null);\n\n  const changeName = async () => {\n    const { response } = await post(\"updateName\", {\n      loginToken: device.loginToken,\n      name,\n    });\n    reloadMe(device.loginToken);\n    setResponse(response);\n  };\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        {response ? <T>{response}</T> : null}\n\n        <View\n          style={{\n            marginVertical: 15,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextInput\n            style={{ ...style(theme).textInput, flex: 1 }}\n            placeholderTextColor={theme.secondaryTextSoft}\n            placeholder={getText(\"name\")}\n            value={name}\n            onChangeText={(x) => setName(x)}\n          />\n          <Button onPress={changeName} title={getText(\"change\")} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ChangeName;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass ChangePassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { password1, password2 } = this.state;\n\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/changePassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"newPassword\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.primaryText }}>\n              {getText(\"repeat\")}\n            </Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              title={getText(\"changePassword\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default ChangePassword;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport * as React from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst getText = getTextFunction();\n\nclass ImageInput extends React.Component {\n  state = { hasEdited: false };\n  getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      console.log(\"granted\", status);\n\n      if (status !== \"granted\") {\n        alert(getText(\"weNeedCameraPermission\"));\n        return false;\n      }\n      return true;\n    }\n    return true;\n  };\n\n  _pickImage = async () => {\n    const hasPermission = await this.getPermissionAsync();\n    if (hasPermission) {\n      try {\n        this.setState({ loading: true });\n\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [1, 1],\n          base64: true,\n        });\n\n        if (!result.cancelled) {\n          const base64 =\n            Platform.OS === \"web\"\n              ? result.uri\n              : \"data:image/png;base64,\" + result.base64;\n\n          const manipulated = await ImageManipulator.manipulateAsync(\n            Platform.OS === \"web\" ? base64 : result.uri,\n            [{ resize: { width: 500, height: 500 } }],\n            {\n              format: ImageManipulator.SaveFormat.PNG,\n              base64: true,\n            }\n          ).catch((e) => console.log(\"e\", e));\n\n          const manipulatedBase64 =\n            Platform.OS === \"web\"\n              ? manipulated.base64\n              : \"data:image/png;base64,\" + manipulated.base64;\n\n          this.setState({ loading: false, hasEdited: true }, () => {\n            this.props.onChange(manipulatedBase64);\n          });\n        } else {\n          this.setState({ loading: false });\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    }\n  };\n\n  render() {\n    const { hasEdited, loading } = this.state;\n    const { value, small } = this.props;\n\n    const SIZE = small ? 40 : 200;\n    return (\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        <TouchableOpacity onPress={this._pickImage}>\n          {value ? (\n            <Image\n              source={{\n                uri: hasEdited ? value : Constants.SERVER_ADDR + value,\n              }}\n              style={{ width: SIZE, height: SIZE, borderRadius: SIZE / 2 }}\n            />\n          ) : (\n            <View\n              style={{\n                borderRadius: SIZE / 2,\n                borderWidth: 2,\n                borderColor: \"#CCC\",\n                width: SIZE,\n                height: SIZE,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {loading ? (\n                <ActivityIndicator />\n              ) : (\n                <Ionicons name=\"md-camera\" color=\"#CCC\" size={SIZE / 2} />\n              )}\n            </View>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default ImageInput;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Image, Linking, Platform, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\nimport T from \"./T\";\n\nconst ShareButtons = ({ me, url, text }) => {\n  const getText = getTextFunction(me?.locale);\n\n  const siteUrl = `https://mastercrimez.com/%23/${url}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=${siteUrl}`;\n\n  return (\n    <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n      <T>{getText(\"footerShare\")}</T>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(facebookShareUrl);\n        }}\n      >\n        <View\n          style={{\n            marginLeft: 20,\n            backgroundColor: \"#3b5998\",\n            width: 40,\n            height: 40,\n            borderRadius: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n        </View>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          Linking.openURL(\n            Platform.OS === \"web\"\n              ? `https://wa.me/?text=${text}%20${siteUrl}`\n              : `whatsapp://send?text=${text}%20${siteUrl}`\n          );\n        }}\n      >\n        <Image\n          source={require(\"../../assets/whatsapp.png\")}\n          style={{ width: 55, height: 55 }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ShareButtons;\n","import { Ionicons } from \"@expo/vector-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  SafeAreaView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport ImageInput from \"../components/ImageInput\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport STYLE from \"../Style\";\nimport { get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst isBigDevice = width > 500;\n\nconst IMAGE_SIZE = 40;\n\nconst Footer = ({ me, device, params, fetchChat }) => {\n  const { loginToken, theme } = device;\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [hasEdited, setHasEdited] = useState(false);\n  const getText = getTextFunction(me?.locale);\n\n  const send = () => {\n    setImage(null);\n    setMessage(\"\");\n    const url = `${Constants.SERVER_ADDR}/channelmessage`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: loginToken,\n        image: hasEdited ? image : undefined,\n        message,\n        cid: params?.id,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ success, response }) => {\n        if (response) {\n          alert(response);\n        }\n        if (success) {\n          fetchChat();\n        }\n      })\n      .catch((error) => {\n        console.log(error, url);\n      });\n  };\n\n  const renderFooter = () => {\n    return (\n      <View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n          }}\n        >\n          <ImageInput\n            small\n            value={image}\n            onChange={(base64) => {\n              setImage(base64);\n              setHasEdited(true);\n            }}\n          />\n\n          <TextInput\n            multiline\n            style={[STYLE(theme).textInput, { flex: 1 }]}\n            value={message}\n            placeholder={getText(\"message\")}\n            onChangeText={setMessage}\n          />\n\n          <TouchableOpacity onPress={send}>\n            <Ionicons name=\"ios-send\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  return renderFooter();\n};\n\nconst ChatScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device: { loginToken },\n    device,\n    me,\n    reloadMe,\n  },\n}) => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [chat, setChat] = useState([]);\n  const [response, setResponse] = useState(null);\n\n  useEffect(() => {\n    fetchChat();\n\n    const interval = setInterval(() => {\n      fetchChat();\n      post(\"setRead\", { loginToken, id: params?.subid });\n      reloadMe(loginToken);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchChat = async () => {\n    const url = `channelmessage?loginToken=${device.loginToken}&id=${params.id}`;\n    const response = await get(url);\n\n    if (response) {\n      setChat(response.chat);\n      setResponse(response.response);\n      setIsFetching(false);\n    }\n  };\n\n  const onRefresh = () => {\n    setIsFetching(true);\n    fetchChat();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const isMe = item.user?.id === me?.id;\n    const avatar = (\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Profile\", { name: item.user?.name });\n        }}\n      >\n        <Image\n          source={{ uri: Constants.SERVER_ADDR + item.user?.thumbnail }}\n          style={{\n            width: IMAGE_SIZE,\n            height: IMAGE_SIZE,\n            borderRadius: IMAGE_SIZE / 2,\n          }}\n        />\n      </TouchableOpacity>\n    );\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginHorizontal: 0,\n          justifyContent: isMe ? \"flex-end\" : \"flex-start\",\n        }}\n      >\n        {!isMe ? avatar : null}\n        <View\n          style={{\n            flex: 1,\n            marginVertical: 10,\n            marginHorizontal: 10,\n            backgroundColor: item.isSystem\n              ? \"gray\"\n              : isMe\n              ? \"#d9f6c2\"\n              : \"white\",\n            padding: 10,\n            maxWidth: item.isSystem ? undefined : isBigDevice ? 400 : 200,\n            borderRadius: 10,\n            borderWidth: 0.5,\n            borderColor: \"#CCC\",\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 2,\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}\n        >\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n          >\n            <Text style={{ fontWeight: \"bold\" }}>{item.user?.name}</Text>\n          </View>\n          {item.image ? (\n            <Image\n              source={{\n                uri: Constants.SERVER_ADDR + item.image,\n              }}\n              style={{ width: 180, height: 180 }}\n              resizeMode=\"cover\"\n            />\n          ) : null}\n\n          <MarkdownView>{item.message}</MarkdownView>\n\n          {item.isShareable && (\n            <ShareButtons me={me} text={item.message} url={``} />\n          )}\n        </View>\n        {isMe ? avatar : null}\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      {Array.isArray(chat) ? (\n        <FlatList\n          initialNumToRender={Platform.OS === \"web\" ? chat.length : undefined}\n          contentContainerStyle={{\n            height: Platform.OS === \"web\" ? height - 250 : undefined,\n          }}\n          data={chat}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => `index${index}`}\n          refreshControl={\n            <RefreshControl refreshing={isFetching} onRefresh={onRefresh} />\n          }\n          inverted\n        />\n      ) : (\n        <View style={{ flex: 1 }}>\n          <T>{response}</T>\n        </View>\n      )}\n      <Footer me={me} device={device} params={params} fetchChat={fetchChat} />\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n","import { connectActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport * as React from \"react\";\nimport {\n  FlatList,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Separator from \"../components/Separator\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst blocksReleaseDate = moment(\"15/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17);\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChannelsubs();\n\n    this.interval = setInterval(() => this.fetchChannelsubs(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  fetchChannelsubs = () => {\n    const {\n      screenProps: { device, reloadChannels },\n    } = this.props;\n    reloadChannels(device.loginToken);\n  };\n\n  // fetchChannelsubs = () => {\n  //   const {\n  //     screenProps: { device },\n  //   } = this.props;\n  //   fetch(\n  //     `${Constants.SERVER_ADDR}/channelsubs?loginToken=${device.loginToken}`,\n  //     {\n  //       method: \"GET\",\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     }\n  //   )\n  //     .then((response) => response.json())\n  //     .then((channelsubs) => {\n  //       if (channelsubs.response) {\n  //         this.setState({ response: channelsubs.response });\n  //       } else {\n  //         this.setState({ channelsubs });\n  //       }\n  //       this.setState({ isFetching: false });\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // };\n\n  onRefresh = () => {\n    this.setState({ isFetching: true }, function () {\n      this.fetchChannelsubs();\n    });\n  };\n\n  openMenu = (id, userId) => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"delete\")];\n\n    const isBlockButtonActive =\n      (moment().isAfter(blocksReleaseDate) || me?.level > 1) && userId;\n    if (isBlockButtonActive) {\n      options.push(getText(\"blockThisUser\"));\n    }\n\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"delete\", id);\n          await post(\"setDeleted\", { loginToken: device.loginToken, id: id });\n          this.fetchChannelsubs();\n        }\n        if (isBlockButtonActive && buttonIndex === 1) {\n          const { response } = await post(\"addBlock\", {\n            loginToken: device.loginToken,\n            user2id: userId,\n          });\n          alert(response);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  openGeneralMenu = () => {\n    const { device, me } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const options = [getText(\"deleteAllChats\")];\n\n    const isBlocksActive = moment().isAfter(blocksReleaseDate) || me?.level > 1;\n\n    if (isBlocksActive) {\n      options.push(getText(\"blocks\"));\n    }\n    options.push(getText(\"cancel\"));\n\n    this.props.showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex: options.length - 1,\n        destructiveButtonIndex: null,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 0) {\n          console.log(\"deleteAll\");\n          await post(\"deleteAll\", { loginToken: device.loginToken });\n          this.fetchChannelsubs();\n        }\n        if (buttonIndex === 1 && isBlocksActive) {\n          navigation.navigate(\"Blocks\");\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n  renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme, loginToken },\n      },\n    } = this.props;\n    // console.log(item);\n\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.name\n      : \"(System)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          ?.thumbnail\n      : null;\n\n    const channelOtherUserId = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.id\n      : null;\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          post(\"setRead\", { loginToken, id: item.id });\n          navigation.navigate(\"Channel\", {\n            id: item.channel?.id,\n            subid: item.id,\n          });\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: 10,\n            marginHorizontal: 20,\n          }}\n        >\n          {channelThumbnail ? (\n            <Image\n              source={{ uri: Constants.SERVER_ADDR + channelThumbnail }}\n              style={{ width: 60, height: 60, borderRadius: 30 }}\n            />\n          ) : (\n            <View\n              style={{\n                width: 60,\n                height: 60,\n                borderRadius: 30,\n                backgroundColor: \"#CCC\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n            </View>\n          )}\n          {item.unread > 0 ? (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 40,\n                width: 25,\n                height: 25,\n                borderRadius: 13,\n                backgroundColor: \"red\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.unread}</Text>\n            </View>\n          ) : null}\n\n          <View style={{ marginLeft: 20, flex: 1 }}>\n            <T bold>\n              {/* name or other person in chat */}\n              {channelTitle}\n            </T>\n            {item.lastmessage ? (\n              <T numberOfLines={1}>{item.lastmessage}</T>\n            ) : null}\n          </View>\n\n          <View>\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\" }}\n              onPress={() => this.openMenu(item.id, channelOtherUserId)}\n              hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n            >\n              <Entypo\n                style={{ marginLeft: 10 }}\n                name=\"dots-three-horizontal\"\n                size={20}\n                color={theme.primaryText}\n              />\n            </TouchableOpacity>\n            <T>\n              {moment(item.lastmessageDate).format(\n                moment(item.lastmessageDate).isAfter(moment().startOf(\"day\"))\n                  ? \"HH:mm\"\n                  : \"DD-MM-YYYY\"\n              )}\n            </T>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n    const {\n      screenProps: { channels },\n    } = this.props;\n\n    console.log(\"channels\", channels);\n    return (\n      <SafeAreaView style={styles.container}>\n        <FlatList\n          ListHeaderComponent={() => {\n            return (\n              <View>\n                <View\n                  style={{\n                    justifyContent: \"flex-end\",\n                    marginRight: 20,\n                    marginTop: 20,\n                  }}\n                >\n                  <TouchableOpacity\n                    style={{ alignSelf: \"flex-end\" }}\n                    onPress={() => this.openGeneralMenu()}\n                    hitSlop={{ top: 20, bottom: 20, left: 20, right: 20 }}\n                  >\n                    <Entypo\n                      style={{ marginLeft: 10 }}\n                      name=\"dots-three-horizontal\"\n                      size={20}\n                      color={theme.primaryText}\n                    />\n                  </TouchableOpacity>\n                </View>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    navigation.navigate(\"Chat\");\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      paddingVertical: 10,\n                      paddingHorizontal: 20,\n                      borderBottomColor: \"black\",\n                      borderBottomWidth: 0.5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 60,\n                        height: 60,\n                        borderRadius: 30,\n                        backgroundColor: \"#CCC\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Ionicons name=\"ios-people\" color=\"white\" size={32} />\n                    </View>\n\n                    <View style={{ marginLeft: 20, flex: 1 }}>\n                      <T bold>\n                        {/* name or other person in chat */}\n                        {getText(\"everyone\")}\n                      </T>\n                    </View>\n                  </View>\n                </TouchableOpacity>\n              </View>\n            );\n          }}\n          data={channels}\n          renderItem={this.renderItem}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n\nexport default connectActionSheet(ChatScreen);\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\nclass Chat extends Component {\n  state = {\n    chat: [],\n    input: \"\",\n  };\n\n  componentDidMount() {\n    this.getChat();\n    this.interval = setInterval(() => this.getChat(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getChat() {\n    fetch(`${Constants.SERVER_ADDR}/chat`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((chat) => {\n        this.setState({ chat });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { chat, input } = this.state;\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: 10 }}>\n          {chat.map((item, index) => (\n            <Text\n              key={`i${index}`}\n              style={{ color: this.props.screenProps.device.theme.primaryText }}\n            >\n              {item.name}: {item.message}{\" \"}\n            </Text>\n          ))}\n        </View>\n        <TextInput\n          value={input}\n          style={{\n            backgroundColor: \"#CCC\",\n            fontSize: 20,\n            margin: 10,\n            padding: 5,\n            borderRadius: 5,\n          }}\n          placeholder={getText(\"yourMessage\")}\n          onChangeText={(input) => this.setState({ input })}\n          onSubmitEditing={({ nativeEvent: { text } }) => {\n            fetch(`${Constants.SERVER_ADDR}/chat`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                message: text,\n              }),\n            })\n              .then((response) => response.json())\n              .then((chat) => {\n                this.getChat();\n                this.setState({ input: \"\" });\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport { Dimensions, Image, ScrollView, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const postChooseProfession = async (profession) => {\n    setLoading(true);\n\n    const { response } = await post(`chooseProfession`, {\n      token: device.loginToken,\n      profession,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  const PROFESSIONS = [\n    { type: \"thief\", image: require(\"../../assets/profession/thief.jpg\") },\n    {\n      type: \"carthief\",\n      image: require(\"../../assets/profession/carthief.jpg\"),\n    },\n    {\n      type: \"weedgrower\",\n      image: require(\"../../assets/profession/weedgrower.jpg\"),\n    },\n    { type: \"killer\", image: require(\"../../assets/profession/killer.jpg\") },\n    { type: \"pimp\", image: require(\"../../assets/profession/pimp.jpg\") },\n    { type: \"banker\", image: require(\"../../assets/profession/banker.jpg\") },\n    {\n      type: \"jailbreaker\",\n      image: require(\"../../assets/profession/jailbreaker.jpg\"),\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response ? (\n        <T>{response}</T>\n      ) : me?.canChooseProfession ? (\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {PROFESSIONS.map((profession) => {\n            return (\n              <View style={{ width: 100, margin: 20 }}>\n                <Image\n                  source={profession.image}\n                  style={{ width: 100, height: 100 }}\n                  resizeMode=\"contain\"\n                />\n                <View style={{ height: 100 }}>\n                  <T bold>{getText(profession.type)}</T>\n                  <T>{getText(profession.type + \"Advantage\")}</T>\n                </View>\n                <Button\n                  title={getText(\"choose\")}\n                  onPress={() => postChooseProfession(profession.type)}\n                />\n              </View>\n            );\n          })}\n        </View>\n      ) : (\n        <T>{getText(\"youAreProfession\", getText(me?.profession))}</T>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default Gangs;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction, post } from \"../Util\";\nconst Code = ({\n  navigation: {\n    state: { params },\n  },\n  screenProps: { me, device, dispatch },\n}) => {\n  const [response, setResponse] = useState(null);\n\n  const code = params?.code;\n\n  //  When opening the site on web  on /Case or /Code or /StealCar on an unverified account, open modal\n  doOnce(() => {\n    if (!me?.phoneVerified) {\n      dispatch({ type: \"SET_LOGGED\", value: false });\n    }\n  });\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View>\n      {response ? (\n        <T>{response}</T>\n      ) : (\n        <Button\n          title={getText(\"openSuitcaseButton\")}\n          onPress={async () => {\n            const { response } = await post(\"enterCode\", {\n              loginToken: device.loginToken,\n              code,\n            });\n            setResponse(response);\n          }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default Code;\n","import React, { Component } from \"react\";\nimport { Linking, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={style(device.theme).container}>\n        <Text style={{ color: device.theme.primaryText }}>\n          {getText(\"contributeText\")}\n        </Text>\n\n        <Button\n          title={getText(\"contributeCodeCTA\")}\n          onPress={() => {\n            Linking.openURL(\n              \"https://github.com/EAT-CODE-KITE-REPEAT/mastercrimez4\"\n            );\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\n\nconst Tabs = ({ tabs }) => {\n  const theme = useSelector((state) => state.device.theme);\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {tabs.map((tab) => {\n        return (\n          <TouchableOpacity\n            style={{\n              flex: 1,\n              height: 60,\n              backgroundColor: tab.isActive\n                ? `${theme.secondary}88`\n                : theme.secondary,\n              borderRightWidth: 1,\n              borderRightColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={tab.onPress}\n          >\n            <T>{tab.title}</T>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Tabs;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { ActivityIndicator, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateOc = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadOcs,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createOc\", {\n      loginToken,\n      numParticipants,\n      type,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadOcs(loginToken);\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {loading && <ActivityIndicator />}\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"ocBank\"),\n              onPress: () => setType(\"bank\"),\n              isActive: type === \"bank\",\n            },\n            {\n              title: getText(\"ocCars\"),\n              onPress: () => setType(\"cars\"),\n              isActive: type === \"cars\",\n            },\n            {\n              title: getText(\"ocShootout\"),\n              onPress: () => setType(\"shootout\"),\n              isActive: type === \"shootout\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createOcOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateOc;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport {\n  Image,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nexport const RobberyTypes = [\n  {\n    type: \"snackbar\",\n    cost: 10000,\n    profit: 50000,\n    difficulty: 1,\n    seconds: 60,\n    image: require(\"../../assets/robbery/snackbar.jpg\"),\n  },\n  {\n    type: \"clothesstore\",\n    cost: 20000,\n    profit: 75000,\n    difficulty: 5,\n    seconds: 180,\n    image: require(\"../../assets/robbery/clothesstore.jpg\"),\n  },\n  {\n    type: \"supermarket\",\n    cost: 50000,\n    profit: 100000,\n    difficulty: 10,\n    seconds: 240,\n    image: require(\"../../assets/robbery/supermarket.jpg\"),\n  },\n  {\n    type: \"drugstore\",\n    cost: 100000,\n    profit: 250000,\n    difficulty: 20,\n    seconds: 300,\n    image: require(\"../../assets/robbery/drugstore.jpg\"),\n  },\n  {\n    type: \"coffeeshop\",\n    cost: 150000,\n    profit: 300000,\n    difficulty: 50,\n    seconds: 300,\n    image: require(\"../../assets/robbery/coffeeshop.jpg\"),\n  },\n  {\n    type: \"cardealer\",\n    cost: 200000,\n    profit: 400000,\n    difficulty: 100,\n    seconds: 600,\n    image: require(\"../../assets/robbery/cardealer.jpg\"),\n  },\n  {\n    type: \"bank\",\n    cost: 250000,\n    profit: 500000,\n    difficulty: 200,\n    seconds: 900,\n    image: require(\"../../assets/robbery/bank.jpg\"),\n  },\n  {\n    type: \"casino\",\n    cost: 500000,\n    profit: 1000000,\n    difficulty: 300,\n    seconds: 1800,\n    image: require(\"../../assets/robbery/casino.jpg\"),\n  },\n  {\n    type: \"jewelrystore\",\n    cost: 1000000,\n    profit: 2000000,\n    difficulty: 500,\n    seconds: 3600,\n    image: require(\"../../assets/robbery/jewelrystore.jpg\"),\n  },\n];\n\nconst Robbery = ({ robbery, isActive, onPress, title }) => {\n  return (\n    <TouchableOpacity\n      style={{\n        opacity: isActive ? 1 : 0.4,\n        marginHorizontal: 20,\n      }}\n      onPress={onPress}\n    >\n      <Image\n        source={robbery.image}\n        style={{ width: 100, height: 100 }}\n        resizeMode=\"cover\"\n      />\n      <T bold>{title}</T>\n    </TouchableOpacity>\n  );\n};\nconst CreateRobbery = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadRobberies,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [prize, setPrize] = useState(\"0\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createRobbery\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      prize,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadRobberies();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n\n        <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n          {RobberyTypes.map((t) => {\n            return (\n              <Robbery\n                robbery={t}\n                title={getText(t.type)}\n                onPress={() => setType(t.type)}\n                isActive={type === t.type}\n              />\n            );\n          })}\n        </View>\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </ScrollView>\n  );\n};\n\nexport default CreateRobbery;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport TabInput from \"../components/TabInput\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst CreateStreetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    reloadMe,\n    reloadStreetraces,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [loading, setLoading] = useState(false);\n  const [racecars, setRacecars] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [numParticipants, setNumParticipants] = useState(\"4\");\n  const [type, setType] = useState(\"highway\");\n  const [price, setPrice] = useState(\"\");\n  const [prize, setPrize] = useState(\"0\");\n  const [car, setCar] = useState();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n\n    setLoading(false);\n  };\n\n  const submit = async () => {\n    setLoading(true);\n    const { success, response } = await post(\"createStreetrace\", {\n      loginToken,\n      numParticipants,\n      type,\n      price,\n      prize,\n      carId: car?.id,\n    });\n    reloadMe(loginToken);\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    if (success) {\n      navigation.goBack(0);\n    }\n  };\n  doOnce(fetchRacecars);\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <View>\n        {response && <T>{response}</T>}\n        <T>{getText(\"amountParticipants\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={numParticipants}\n          onChangeText={(x) => setNumParticipants(x)}\n        />\n\n        <T style={{ marginBottom: 10 }}>Type</T>\n        <TabInput\n          tabs={[\n            {\n              title: getText(\"highway\"),\n              onPress: () => setType(\"highway\"),\n              isActive: type === \"highway\",\n            },\n            {\n              title: getText(\"city\"),\n              onPress: () => setType(\"city\"),\n              isActive: type === \"city\",\n            },\n            {\n              title: getText(\"forest\"),\n              onPress: () => setType(\"forest\"),\n              isActive: type === \"forest\",\n            },\n          ]}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"costPerParticipation\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={price}\n          onChangeText={(x) => setPrice(x)}\n        />\n\n        <T style={{ marginTop: 15 }}>{getText(\"addedPrizeMoney\")}</T>\n        <TextInput\n          style={style(theme).textInput}\n          value={prize}\n          onChangeText={(x) => setPrize(x)}\n        />\n\n        <T style={{ marginTop: 15, marginBottom: 10 }}>\n          {getText(\"chooseYourCar\")}:\n        </T>\n        <Button\n          title={car ? car.auto : getText(\"chooseACar\")}\n          onPress={() => {\n            // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n            const options = racecars.map((racecar) =>\n              getText(\"createStreetraceOption\", racecar.auto, racecar.power)\n            );\n            options.push(getText(\"cancel\"));\n            const destructiveButtonIndex = undefined;\n            const cancelButtonIndex = options.length - 1;\n\n            showActionSheetWithOptions(\n              {\n                options,\n                cancelButtonIndex,\n                destructiveButtonIndex,\n              },\n              (buttonIndex) => {\n                setCar(racecars[buttonIndex]);\n                // Do something here depending on the button index selected\n              }\n            );\n          }}\n        />\n      </View>\n\n      <Button onPress={submit} title={getText(\"create\")} />\n    </View>\n  );\n};\n\nexport default CreateStreetrace;\n","import * as Icon from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Clipboard,\n  Dimensions,\n  Image,\n  Linking,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nimport Button from \"./Button\";\nconst { width } = Dimensions.get(\"window\");\n\nfunction Footer({ navigation, screenProps: { me } }) {\n  const getText = getTextFunction(me?.locale);\n\n  const theme = useSelector((state) => state.device.theme);\n  const [text, setText] = useState(\"\");\n  const url = `https://mastercrimez.com/#/Accomplice?accomplice=${me?.name}`;\n  const facebookShareUrl = `https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fmastercrimez.com%2F#%2FAccomplice%2F?accomplice=${me?.name}`;\n\n  const copy = () => {\n    Clipboard.setString(url);\n    setText(\"Gekopiëerd naar klembord\");\n  };\n  return (\n    <View style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 10 }}>\n        <T bold>{getText(\"footerInviteFriends\")}</T>\n        <View style={{ marginBottom: 20 }}>\n          <T>{getText(\"footerInviteText\")}</T>\n          <View style={{ flexDirection: \"row\" }}>\n            <TextInput\n              value={url}\n              style={{\n                color: theme.secondaryText,\n                backgroundColor: theme.secondary,\n                height: 35,\n                borderRadius: 10,\n                paddingHorizontal: 10,\n                width: 200,\n              }}\n              onFocus={copy}\n            />\n            <Button title={getText(\"footerCopy\")} onPress={copy} />\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <T>{getText(\"footerShare\")}</T>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(facebookShareUrl);\n              }}\n            >\n              <View\n                style={{\n                  marginLeft: 20,\n                  backgroundColor: \"#3b5998\",\n                  width: 40,\n                  height: 40,\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n              </View>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL(\n                  `whatsapp://send?text=${getText(\"footerWhatsappText\", url)}`\n                );\n              }}\n            >\n              <Image\n                source={require(\"../../assets/whatsapp.png\")}\n                style={{ width: 55, height: 55 }}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <T>{getText(\"footerFollowUs\")}</T>\n        <TouchableOpacity\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.facebook.com/Mastercrimez-100872595072798\"\n            );\n          }}\n        >\n          <View\n            style={{\n              marginLeft: 20,\n              backgroundColor: \"#3b5998\",\n              width: 40,\n              height: 40,\n              borderRadius: 20,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon.FontAwesome name=\"facebook\" color=\"white\" size={24} />\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\"https://www.instagram.com/mastercrimez.nl/\");\n          }}\n        >\n          <Image\n            source={require(\"../../assets/instagram.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://open.spotify.com/playlist/5n5j78gTXOM9h2SOdz0Ay5?si=9gBkeObkTXaqFZxHLFutIA\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/spotify.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={{ marginLeft: 20 }}\n          onPress={() => {\n            Linking.openURL(\n              \"https://www.youtube.com/channel/UCGqGRq-iNxXdLrMx9AlD7qw\"\n            );\n          }}\n        >\n          <Image\n            source={require(\"../../assets/youtube.png\")}\n            style={{ width: 40, height: 40 }}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={{ height: 20 }} />\n\n      <Text style={{ color: theme.primaryText }}>\n        &copy; MasterCrimeZ 2006-{new Date().getFullYear()}\n      </Text>\n    </View>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport ShareButtons from \"../components/ShareButtons\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass Crimes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  renderItem = (item, index) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const maxChance = me?.profession === \"thief\" ? 99 : 75;\n    const kans2 = kans > maxChance ? maxChance : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/crime`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        <Footer screenProps={this.props.screenProps} />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"crimeOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"crimeOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"crimeOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"crimeOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"crimeOption5\"),\n      },\n    ];\n\n    return (\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <View style={{ flex: 1, minHeight: 400 }}>\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            {response.code && (\n              <ShareButtons\n                me={me}\n                text={getText(\"crimeSuitcase\")}\n                url={`Case/${response.code}`}\n              />\n            )}\n\n            <Button\n              theme={theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </View>\n        ) : (\n          <ScrollView>\n            {options.map(this.renderItem)}\n\n            {this.renderFooter()}\n          </ScrollView>\n        )}\n      </View>\n    );\n  }\n}\n\nexport default Crimes;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Detectives = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [detectives, setDetectives] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [type, setType] = useState(\"slow\");\n  const [name, setName] = useState(\"\");\n\n  const postHireDetective = async () => {\n    const { response } = await post(\"hireDetective\", {\n      loginToken: device.loginToken,\n      name,\n      type,\n    });\n\n    setResponse(response);\n    getDetectives();\n  };\n\n  const getDetectives = async () => {\n    const { detectives } = await get(\n      `detectives?loginToken=${device.loginToken}`\n    );\n    setDetectives(detectives);\n  };\n\n  doOnce(getDetectives);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          <TextInput\n            style={style(theme).textInput}\n            placeholder={getText(\"name\")}\n            placeholderTextColor={theme.secondaryTextSoft}\n            value={name}\n            onChangeText={setName}\n          />\n\n          <Button\n            style={{ marginBottom: 10 }}\n            title={getText(type + \"Detective\")}\n            onPress={() =>\n              setType(\n                type === \"slow\" ? \"normal\" : type === \"normal\" ? \"fast\" : \"slow\"\n              )\n            }\n          />\n\n          <T>\n            {getText(\n              \"detectiveCost\",\n              type === \"slow\" ? 100000 : type === \"normal\" ? 1000000 : 10000000,\n              getText(type + \"Detective\")\n            )}\n          </T>\n\n          <Button title={getText(\"hire\")} onPress={postHireDetective} />\n\n          <View style={{ height: 100 }} />\n          {detectives?.map?.((detective) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              {detective.user && (\n                <User user={detective.user} size={40} navigation={navigation} />\n              )}\n\n              {detective.city ? (\n                <T>{detective.city}</T>\n              ) : (\n                <CountDown\n                  style={{ marginLeft: 10 }}\n                  until={moment(detective.createdAt)\n                    .add(detective.seconds, \"seconds\")\n                    .diff(moment(), \"seconds\")}\n                  digitStyle={{ backgroundColor: theme.secondary }}\n                  digitTxtStyle={{ color: theme.secondaryText }}\n                  onFinish={() => {}}\n                  size={8}\n                  timeToShow={[\"H\", \"M\", \"S\"]}\n                  timeLabels={{ h: null, m: null, s: null }}\n                />\n              )}\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Detectives;\n","const { Platform, Linking, View, Text } = require(\"react-native\");\nimport React from \"react\";\nimport Constants from \"../Constants\";\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nconst DownloadApp = () => {\n  if (getMobileOperatingSystem() === \"android\") {\n    console.log(\"is android\");\n    window.location.replace(Constants.ANDROID_APP_URL);\n  }\n\n  if (getMobileOperatingSystem() === \"ios\") {\n    console.log(\"is ios\");\n    window.location.replace(Constants.IOS_APP_URL);\n  }\n\n  console.log(getMobileOperatingSystem());\n\n  return (\n    <View>\n      <Text>Download the app!</Text>\n    </View>\n  );\n};\nexport default DownloadApp;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst EstateAgent = ({ navigation, screenProps }) => {\n  return <Shop type=\"home\" navigation={navigation} screenProps={screenProps} />;\n};\n\nexport default EstateAgent;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { email, password } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/forgotpassword`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={theme}\n              onPress={() => this.login()}\n              title={getText(\"recover\")}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  FlatList,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Tabs from \"../components/Tabs\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Messages extends Component {\n  state = {\n    messages: null,\n    newMessage: false,\n  };\n\n  componentDidMount() {\n    this.getTopics();\n\n    const state = this.props.navigation.state.params?.state;\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  getTopics() {\n    const { device } = this.props.screenProps;\n    fetch(`${Constants.SERVER_ADDR}/topics?token=${device.loginToken}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topics: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  createTopic = () => {\n    const { device } = this.props.screenProps;\n    const { title, message } = this.state;\n    fetch(`${Constants.SERVER_ADDR}/topic`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        title,\n        message,\n      }),\n    })\n      .then((response) => response.json())\n      .then(({ response, success }) => {\n        this.setState({ response });\n        if (success) {\n          this.getTopics();\n          this.setState({ newTopic: false, readTopic: false }); //to see topics\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  createMessage = () => {\n    const { device } = this.props.screenProps;\n    const { message } = this.state;\n    console.log(\"Creating message\");\n    fetch(`${Constants.SERVER_ADDR}/response`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        id: this.state.readTopic,\n        response: message,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"response\", response);\n        this.setState({ message: null });\n        this.fetchReadTopic(this.state.readTopic);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  fetchReadTopic = (id) => {\n    const { device } = this.props.screenProps;\n    fetch(\n      `${Constants.SERVER_ADDR}/topic?token=${device.loginToken}&id=${id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({ topic: response });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderNew() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.state.response ? <T>{this.state.response.response}</T> : null}\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"title\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.title}\n          onChangeText={(title) => this.setState({ title })}\n        />\n        <TextInput\n          multiline\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          numberOfLines={4}\n          style={{ ...style(device.theme).textInput, height: 150 }}\n          placeholder={getText(\"message\")}\n          value={this.state.message}\n          onChangeText={(message) => this.setState({ message })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginVertical: 10 }}\n          title={getText(\"send\")}\n          onPress={this.createTopic}\n        />\n      </ScrollView>\n    );\n  }\n\n  renderTopics() {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <FlatList\n        data={this.state.topics?.topics}\n        ItemSeparatorComponent={() => (\n          <View\n            style={{ height: 0.5, backgroundColor: \"#000\", width: \"100%\" }}\n          />\n        )}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                this.fetchReadTopic(item.id);\n                this.setState({ readTopic: item.id });\n              }}\n            >\n              <View\n                style={{\n                  padding: 20,\n                }}\n              >\n                <T>\n                  {getText(\"author\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"title\")}: {item.title}\n                </T>\n                <T>\n                  {getText(\"lastResponse\")}:{\" \"}\n                  {moment(item.updatedAt).format(\"DD-MM HH:mm\")}\n                </T>\n                <T>\n                  {item.responses} {getText(\"responses\")}\n                </T>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item, index) => `item${index}`}\n      />\n    );\n  }\n\n  readTopic() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const item = this.state.topic;\n    return item ? (\n      <ScrollView style={{ flex: 1 }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderWidth: 1,\n            borderColor: \"black\",\n          }}\n        >\n          <T>\n            {getText(\"author\")}: {item.topic.name}\n          </T>\n          <T>\n            {getText(\"title\")}: {item.topic.title}\n          </T>\n          <T>{item.topic.message}</T>\n          <T>\n            {item.responses.length} {getText(\"responses\")}\n          </T>\n        </View>\n\n        <View style={{ flex: 1 }}>\n          <T>{getText(\"responses\")}:</T>\n          {item.responses.map((response) => {\n            return (\n              <View\n                key={`item${response.id}`}\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  padding: 20,\n                  marginVertical: 20,\n                }}\n              >\n                <View\n                  style={{\n                    position: \"absolute\",\n                    backgroundColor: device.theme.secondary,\n                    top: -10,\n                    borderRadius: 10,\n                    paddingHorizontal: 20,\n                    paddingVertical: 3,\n                  }}\n                >\n                  <T>\n                    {response.name} op{\" \"}\n                    {moment(response.createdAt).format(\"DD-MM HH:mm\")}\n                  </T>\n                </View>\n\n                <MarkdownView\n                  style={{ text: { color: device.theme.primaryText } }}\n                >\n                  {response.message}\n                </MarkdownView>\n              </View>\n            );\n          })}\n        </View>\n\n        <View>\n          <TextInput\n            multiline\n            numberOfLines={4}\n            style={style(device.theme).textInput}\n            placeholderTextColor={device.theme.secondaryTextSoft}\n            placeholder={getText(\"react\")}\n            value={this.state.message}\n            onChangeText={(message) => this.setState({ message })}\n          />\n          <Button\n            theme={this.props.screenProps.device.theme}\n            style={{ marginVertical: 10 }}\n            title={getText(\"send\")}\n            onPress={this.createMessage}\n          />\n        </View>\n      </ScrollView>\n    ) : (\n      <T>{getText(\"topicNotFound\")}</T>\n    );\n  }\n\n  render() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { newTopic, readTopic } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <Tabs\n          tabs={[\n            {\n              title: getText(\"newTopic\"),\n              onPress: () =>\n                this.setState({ newTopic: true, readTopic: false }),\n              isActive: this.state.newTopic,\n            },\n\n            {\n              title: getText(\"topics\"),\n              onPress: () =>\n                this.setState({ newTopic: false, readTopic: false }),\n              isActive: this.state.newTopic === false && readTopic === false,\n            },\n          ]}\n        />\n\n        {newTopic\n          ? this.renderNew()\n          : readTopic\n          ? this.readTopic()\n          : this.renderTopics()}\n      </View>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  Image,\n  View,\n} from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport MarkdownView from \"react-native-markdown-display\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getTextFunction,\n  getUserColor,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst GANG_LEVEL_UNDERBOSS = 3;\nconst GANG_LEVEL_BANK = 2;\nconst GANG_LEVEL_BOSS = 4;\n\nconst { width } = Dimensions.get(\"window\");\nconst SIZE = 300;\nconst MARGIN = 10;\nconst Gangs = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const [response, setResponse] = useState(null);\n\n  const name = navigation.state.params?.name;\n\n  const getGang = async () => {\n    setLoading(true);\n\n    const gang = await get(`gang?name=${name}`);\n    setLoading(false);\n    setItem(gang);\n  };\n\n  const postGangJoin = async () => {\n    setLoading(true);\n\n    const { response } = await post(`gangJoin`, {\n      token: device.loginToken,\n      name,\n    });\n    setLoading(false);\n    setResponse(response);\n  };\n\n  doOnce(getGang);\n\n  const getGangLevel = (gangLevel) =>\n    getText(\n      gangLevel === GANG_LEVEL_BOSS\n        ? \"gangLevelBoss\"\n        : gangLevel === GANG_LEVEL_UNDERBOSS\n        ? \"gangLevelUnderboss\"\n        : gangLevel === GANG_LEVEL_BANK\n        ? \"gangLevelBank\"\n        : \"gangLevelMember\"\n    );\n\n  const totalHealth = item.users?.reduce((prev, user) => prev + user.health, 0);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        ListFooterComponent={() => {\n          return (\n            <MarkdownView style={{ text: { color: theme.primaryText } }}>\n              {item?.profile}\n            </MarkdownView>\n          );\n        }}\n        ListHeaderComponent={() => {\n          return (\n            <View\n              style={{ margin: MARGIN, flexDirection: \"row\", flexWrap: \"wrap\" }}\n            >\n              <View>\n                {item.image ? (\n                  <Image\n                    source={{ uri: Constants.SERVER_ADDR + item.image }}\n                    style={{ width: SIZE, height: SIZE }}\n                    resizeMode=\"cover\"\n                  />\n                ) : (\n                  <Image\n                    source={require(\"../../assets/icon.png\")}\n                    style={{ width: SIZE, height: SIZE }}\n                  />\n                )}\n\n                {totalHealth === 0 ? (\n                  <Image\n                    source={require(\"../../assets/uitgemoord.jpg\")}\n                    style={{ width: SIZE, height: SIZE }}\n                  />\n                ) : null}\n              </View>\n              <View style={{ margin: MARGIN }}>\n                {loading ? <ActivityIndicator /> : null}\n                <T>\n                  {getText(\"name\")}: {item.name}\n                </T>\n                <T>\n                  {getText(\"members\")}: {item.members}\n                </T>\n                <T>\n                  {getText(\"bank\")}: €{numberFormat(item.bank)},-\n                </T>\n                <T>\n                  {getText(\"power\")}: {item.score}\n                </T>\n                {!me?.gang &&\n                  (response ? (\n                    <T>{response}</T>\n                  ) : (\n                    <Button\n                      onPress={postGangJoin}\n                      title={getText(\"gangJoinCTA\")}\n                      theme={theme}\n                    />\n                  ))}\n              </View>\n            </View>\n          );\n        }}\n        data={item.users}\n        keyExtractor={(item, index) => `item${index}`}\n        renderItem={({ item, index }) => {\n          const isOnline = (Date.now() - item.onlineAt) / 60000 < 5;\n\n          const color = getUserColor(item, theme);\n\n          return (\n            <Grid key={`item${index}`} style={{}}>\n              <Col size={2} style={{ marginVertical: 5 }}>\n                <User navigation={navigation} user={item} />\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>{getGangLevel(item.gangLevel)}</T>\n              </Col>\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>❤️ {item.health}%</T>\n              </Col>\n            </Grid>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default Gangs;\n","import { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\n\nconst GangAchievements = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadMe,\n    reloadCities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [result, setResult] = useState({ response: getText(\"loading\") });\n  const [loading, setLoading] = useState(false);\n\n  const getGangAchievements = async () => {\n    setLoading(true);\n    const result = await get(`gangAchievements?token=${device.loginToken}`);\n    setResult(result);\n    setLoading(false);\n  };\n\n  doOnce(getGangAchievements);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {result.response ? (\n        <T>{result.response}</T>\n      ) : (\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <H1>\n              {getText(\"level\")}: {result.power}\n            </H1>\n          </View>\n          {result.achievements &&\n            Object.keys(result.achievements).map((key) => {\n              const stats = result.achievements[key];\n\n              return (\n                <View style={{ marginBottom: 20 }}>\n                  <T bold style={{ alignSelf: \"center\", marginVertical: 20 }}>\n                    {getText(key)}\n                  </T>\n\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: 150,\n                        backgroundColor: theme.secondary,\n                        padding: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <T>\n                        {getText(\"level\")}: {stats.level}\n                      </T>\n\n                      <T>\n                        {getText(\"average\")}: {stats.current}\n                      </T>\n                    </View>\n\n                    <AntDesign\n                      name=\"arrowright\"\n                      color={theme.primaryText}\n                      size={36}\n                    />\n\n                    <View\n                      style={{\n                        width: 150,\n                        backgroundColor: theme.secondary,\n                        padding: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      {stats.next && (\n                        <T>\n                          {getText(\"level\")}: {stats.level + 1}\n                        </T>\n                      )}\n                      <T>\n                        {stats.next\n                          ? `${getText(\"average\")}: ${stats.next}`\n                          : getText(\"maximumLevel\")}\n                      </T>\n                    </View>\n                  </View>\n                </View>\n              );\n            })}\n        </View>\n      )}\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default GangAchievements;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst GarageShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"garage\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default GarageShop;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getStrength, getTextFunction } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Gym extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  renderHeader = () => {\n    const {\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(\n          getText(\"yourStrength\"),\n          getStrength(me?.strength, \"both\")\n        )}\n      </View>\n    );\n  };\n  renderItem = (item, index) => {\n    const {\n      screenProps: {\n        device: { theme },\n      },\n    } = this.props;\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/gym`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        option: this.state.selected,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const getText = getTextFunction(this.props.screenProps.me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"train\")}\n          onPress={this.submit}\n        />\n      </View>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response, selected } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"gymOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"gymOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"gymOption3\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        <View style={{ margin: 20, width: 300 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            <ScrollView>\n              {this.renderHeader()}\n\n              {options.map(this.renderItem)}\n\n              {this.renderFooter()}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Gym;\n","import React from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getTextFunction } from \"../Util\";\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* Show all people with isHacker set to true */}\n      <Image\n        source={require(\"../../assets/hacker.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"hackersInfo\")}</T>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { Image, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n// import { ReCaptcha } from \"react-recaptcha-v3\";\n\nclass Hoeren extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/hoeren`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          captcha: \"\",\n          random: Math.random(),\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <View>\n        {this.keyValue(getText(\"prostitutesInPossession\"), me?.hoeren)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"pimpProstitutes\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"rld\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n    const getText = getTextFunction(me?.locale);\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"RLD\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.rldOwner ? (\n                    <T>{city.rldOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.rldOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"rld\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <T>{city.rldProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const { response } = this.state;\n\n    const {\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n    const number = Math.ceil(Math.random() * 60);\n    const getText = getTextFunction(me?.locale);\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Image\n                style={{ width: 100, height: 100 }}\n                source={{\n                  uri:\n                    Constants.SERVER_ADDR + \"/images/female/\" + number + \".gif\",\n                }}\n              />\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Hoeren;\n","import * as Icon from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport ExpoConstants from \"expo-constants\";\nimport * as IntentLauncher from \"expo-intent-launcher\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { Component } from \"react\";\nimport {\n  AppState,\n  Dimensions,\n  Linking,\n  NativeModules,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { leftMenu, rightMenu } from \"../Menus\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst itemWidth = width / 4 > 100 ? 100 : width / 4;\nconst isSmallDevice = width < 800;\n\nconst amountOfItems = Math.floor((height - 200) / itemWidth) * 4;\n\nfunction getMobileOperatingSystem() {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"windows\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    //iPad|\n    return \"ios\";\n  }\n\n  return \"unknown\";\n}\n\nclass Home extends Component {\n  state = {\n    response: null,\n    activeSlide: 0,\n    notificationsHeader: false,\n  };\n\n  componentDidMount() {\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n\n    this.turnOnNotifications();\n    this.sendLanguage();\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    if (nextAppState === \"active\") {\n      this.turnOnNotifications();\n      this.sendLanguage();\n    }\n  };\n\n  sendLanguage = () => {\n    const { device, me } = this.props.screenProps;\n\n    const locale =\n      Platform.OS === \"ios\"\n        ? NativeModules.SettingsManager.settings.AppleLocale ||\n          NativeModules.SettingsManager.settings.AppleLanguages[0]\n        : Platform.OS === \"android\"\n        ? NativeModules.I18nManager.localeIdentifier\n        : Platform.OS === \"web\"\n        ? navigator.language\n        : null;\n\n    // console.log(\"locale\", locale);\n    if (locale !== me?.locale) {\n      post(\"updateProfile\", {\n        locale,\n        loginToken: device.loginToken,\n      });\n    }\n  };\n  turnOnNotifications = async () => {\n    const { device, me } = this.props.screenProps;\n    if (ExpoConstants.isDevice && Platform.OS !== \"web\") {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      if (existingStatus !== \"granted\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n      }\n      if (finalStatus !== \"granted\") {\n        this.setState({ notificationsHeader: true });\n\n        if (me?.pushtoken !== \"\") {\n          post(\"updateProfile\", {\n            pushtoken: \"\",\n            loginToken: device.loginToken,\n          });\n        }\n\n        return;\n      }\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\n      if (token !== me?.pushtoken) {\n        post(\"updateProfile\", {\n          pushtoken: token,\n          loginToken: device.loginToken,\n        });\n      }\n      this.setState({ notificationsHeader: false });\n    }\n  };\n\n  _renderItem = ({ item, index }) => {\n    const {\n      navigation,\n      screenProps: {\n        dispatch,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginVertical: 15,\n        }}\n      >\n        {item.map((menu, index) => {\n          const TheIcon = Icon[menu.iconType];\n          return (\n            <View\n              key={`i${index}`}\n              style={{ width: itemWidth, alignItems: \"center\" }}\n            >\n              <TouchableOpacity\n                style={{\n                  borderWidth: 1,\n                  borderColor: \"#000\",\n                  backgroundColor: theme.secondary,\n                  borderRadius: 10,\n                  width: itemWidth - 25,\n                  height: itemWidth - 25,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={(e) => {\n                  navigation.navigate(menu.to);\n\n                  const movement = {\n                    action: \"App_Menu_\" + menu.to,\n                    locationX: e.nativeEvent.locationX,\n                    locationY: e.nativeEvent.locationY,\n                    timestamp: Date.now(),\n                  };\n\n                  dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n                }}\n              >\n                {TheIcon && (\n                  <TheIcon\n                    name={menu.icon}\n                    size={(itemWidth - 25) / 2}\n                    color={theme.secondaryText}\n                  />\n                )}\n              </TouchableOpacity>\n              <View>\n                <Text style={{ color: theme.primaryText }}>{menu.text}</Text>\n                {menu.component}\n              </View>\n            </View>\n          );\n        })}\n      </View>\n    );\n  };\n\n  renderCarousel() {\n    const {\n      screenProps: { dispatch, me, device },\n    } = this.props;\n\n    const { notificationsHeader } = this.state;\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    const getText = getTextFunction(me?.locale);\n\n    const data = [\n      filtered.slice(0, amountOfItems),\n      filtered.slice(amountOfItems, amountOfItems * 2),\n      amountOfItems * 2 > filtered.length\n        ? undefined\n        : filtered.slice(amountOfItems * 2, filtered.length),\n    ].filter((x) => !!x);\n\n    return (\n      <View style={{ flex: 1 }}>\n        {notificationsHeader && (\n          <TouchableOpacity\n            onPress={() => {\n              Platform.OS === \"ios\"\n                ? Linking.openURL(\"app-settings:\")\n                : IntentLauncher.startActivityAsync(\n                    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS\n                  );\n            }}\n          >\n            <View\n              style={{\n                padding: 5,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <AntDesign\n                name=\"exclamationcircleo\"\n                color=\"red\"\n                style={{ marginRight: 10 }}\n              />\n              <T>{getText(\"turnOnNotificationsText\")}</T>\n            </View>\n          </TouchableOpacity>\n        )}\n\n        <Carousel\n          ref={(c) => {\n            this._carousel = c;\n          }}\n          data={data}\n          renderItem={this._renderItem}\n          sliderWidth={width}\n          onSnapToItem={(index) => this.setState({ activeSlide: index })}\n          itemWidth={width}\n        />\n\n        <Pagination\n          dotsLength={data.length}\n          activeDotIndex={this.state.activeSlide}\n          // containerStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.75)\" }}\n          dotStyle={{\n            width: 10,\n            height: 10,\n            borderRadius: 5,\n            marginHorizontal: 8,\n            backgroundColor: \"rgba(255, 255, 255, 0.92)\",\n          }}\n          inactiveDotStyle={\n            {\n              // Define styles for inactive dots here\n            }\n          }\n          inactiveDotOpacity={0.4}\n          inactiveDotScale={0.6}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      device,\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const menus = [\n      ...leftMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n      ...rightMenu(me, device.theme).reduce(\n        (previous, current) => [...previous, ...current.content],\n        []\n      ),\n    ];\n    const filtered = menus.filter((menu) => !menu.isHeader && !menu.isStats);\n\n    let appLink = null;\n    if (Platform.OS === \"web\") {\n      if (getMobileOperatingSystem() === \"android\") {\n        appLink = Constants.ANDROID_APP_URL;\n      }\n\n      if (getMobileOperatingSystem() === \"ios\") {\n        appLink = Constants.IOS_APP_URL;\n      }\n    }\n\n    if (Platform.OS === \"web\") {\n      if (isSmallDevice) {\n        return (\n          <ScrollView>\n            {appLink && (\n              <TouchableOpacity onPress={() => Linking.openURL(appLink)}>\n                <View\n                  style={{\n                    padding: 5,\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <AntDesign\n                    name=\"exclamationcircleo\"\n                    color=\"red\"\n                    style={{ marginRight: 10 }}\n                  />\n                  <T>{getText(\"downloadTheApp\")}</T>\n                </View>\n              </TouchableOpacity>\n            )}\n\n            {this._renderItem({ item: filtered })}\n          </ScrollView>\n        );\n      } else {\n        return <T>{getText(\"welcomeBack\")}</T>;\n      }\n    }\n    return this.renderCarousel();\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Hospital extends Component {\n  state = {\n    response: null,\n  };\n\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  heal = (name) => {\n    const {\n      screenProps: { device },\n    } = this.props;\n\n    fetch(`${Constants.SERVER_ADDR}/hospital`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        loginToken: device.loginToken,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  renderForm() {\n    const {\n      screenProps: { device, me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { name } = this.state;\n    return (\n      <View>\n        <TextInput\n          style={style(device.theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={device.theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"heal\")}\n          onPress={() => this.heal(this.state.name)}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"healYourself\")}\n          onPress={() => this.heal(me?.name)}\n        />\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <View style={style(theme).container}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Hospital;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst Sint = ({\n  screenProps,\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"sint\", {\n      token: device.loginToken,\n      captcha,\n    });\n    setResponse(response);\n  };\n\n  const minute = Math.round((me?.sintEndsAt - Date.now()) / (60 * 1000));\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <T>{response}</T>\n        ) : me?.sintEndsAt > Date.now() ? (\n          <T>{getText(\"sintWait\", minute)}</T>\n        ) : (\n          <View>\n            <Captcha\n              screenProps={screenProps}\n              captcha={captcha}\n              onChangeCaptcha={setCaptcha}\n              random={random}\n              onChangeRandom={setRandom}\n            />\n\n            <Button theme={theme} title={getText(\"sintCTA\")} onPress={submit} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default Sint;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport { doOnce, getTextFunction } from \"../Util\";\nconst properties = [\n  {\n    name: \"bulletFactory\",\n  },\n  {\n    name: \"casino\",\n  },\n  {\n    name: \"rld\",\n  },\n  {\n    name: \"landlord\",\n  },\n  {\n    name: \"junkies\",\n  },\n  {\n    name: \"weaponShop\",\n  },\n  {\n    name: \"airport\",\n  },\n  {\n    name: \"estateAgent\",\n  },\n  {\n    name: \"garage\",\n  },\n  {\n    name: \"jail\",\n  },\n  {\n    name: \"bank\",\n  },\n];\n\nconst MyObjects = ({\n  navigation,\n  screenProps: {\n    me,\n    reloadCities,\n    cities,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  doOnce(reloadCities);\n\n  let amount = 0;\n  properties\n    .map((p) => p.name)\n    .forEach((property) => {\n      return cities?.forEach((city, index) => {\n        const ownerKey = `${property}Owner`;\n        if (city[ownerKey] === me?.name && me?.name) {\n          amount += 1;\n        }\n      });\n    });\n\n  return (\n    <View style={{ flex: 1, padding: 15 }}>\n      <T bold>\n        {getText(\"youHave\")} {amount}{\" \"}\n        {amount === 1 ? getText(\"property\") : getText(\"properties\")}!\n      </T>\n\n      {properties\n        .map((p) => p.name)\n        .map((property) => {\n          return cities?.map((city, index) => {\n            const ownerKey = `${property}Owner`;\n            const propertyString = typeStrings[property];\n            if (propertyString === undefined) console.log(property);\n            if (city[ownerKey] === me?.name && me?.name) {\n              return (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <T>{`${propertyString} in ${city.city}`}</T>\n                  <Button\n                    key={`index${index}${property}`}\n                    style={{ marginVertical: 15 }}\n                    theme={theme}\n                    title={getText(\"manage\")}\n                    onPress={() =>\n                      navigation.navigate(\"ManageObject\", {\n                        type: property,\n                        city: city.city,\n                      })\n                    }\n                  />\n                </View>\n              );\n            }\n          });\n        })}\n\n      <View style={{ height: 80 }} />\n    </View>\n  );\n};\n\nexport default MyObjects;\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { ScrollView, StyleSheet, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getRank, getStrength, getTextFunction } from \"../Util\";\nimport MyObjects from \"./MyObjects\";\n\nconst professionReleaseDate = moment(\"15/03/2021\", \"DD/MM/YYYY\").set(\n  \"hour\",\n  17\n);\n\nclass Status extends Component {\n  state = {\n    response: null,\n  };\n  keyValue(key, value) {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n  render() {\n    const { response } = this.state;\n\n    const {\n      navigation,\n      screenProps,\n      screenProps: { me, reloadMe, device },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const uur = Math.round((me?.protectionAt - Date.now()) / 3600000);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {response ? <T>{response}</T> : null}\n\n        {me?.protectionAt > Date.now() ? (\n          <TouchableOpacity\n            onPress={() => {\n              //haalweg\n              fetch(`${Constants.SERVER_ADDR}/removeprotection`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ token: device.loginToken }),\n              })\n                .then((response) => response.json())\n                .then(async ({ response }) => {\n                  this.setState({ response });\n                  reloadMe(device.loginToken);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            <View>\n              <T>{getText(\"protectionInfo\", uur)}</T>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n\n        {me?.canChooseProfession &&\n          (moment().isAfter(professionReleaseDate) || me?.level > 1) && (\n            <View>\n              <T>{getText(\"statusCanChooseProfessionText\")}</T>\n              <Button\n                title={getText(\"statusCanChooseProfessionButton\")}\n                onPress={() => navigation.navigate(\"ChooseProfession\")}\n              />\n            </View>\n          )}\n\n        <View style={{ marginHorizontal: 20 }}>\n          {this.keyValue(getText(\"cash\"), `€${me?.cash}`)}\n          {this.keyValue(getText(\"bank\"), `€${me?.bank}`)}\n          {this.keyValue(getText(\"gamepoints\"), me?.gamepoints)}\n          {this.keyValue(getText(\"rank\"), getRank(me?.rank, \"both\"))}\n          {this.keyValue(\n            getText(\"strength\"),\n            getStrength(me?.strength, \"both\")\n          )}\n          {this.keyValue(getText(\"health\"), `${me?.health}%`)}\n          {this.keyValue(getText(\"bullets\"), me?.bullets)}\n          {this.keyValue(getText(\"weed\"), me?.wiet)}\n          {this.keyValue(getText(\"junkies\"), me?.junkies)}\n          {this.keyValue(getText(\"prostitutes\"), me?.hoeren)}\n        </View>\n\n        <MyObjects navigation={navigation} screenProps={screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default Status;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Bunker from \"./Bunker\";\nimport Sint from \"./Sint\";\nimport Status from \"./Status\";\nconst AllStats = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"status\",\n      title: getText(\"menuStatus\"),\n      component: Status,\n    },\n    {\n      key: \"bunker\",\n      title: getText(\"menuBunker\"),\n      component: Bunker,\n    },\n    {\n      key: \"sint\",\n      title: getText(\"menuSint\"),\n      component: Sint,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1 }}>\n        <Component {...props} />\n      </View>\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default AllStats;\n","import React from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport * as Icon from \"react-native-vector-icons\";\n\nconst Menu = ({ navigation, title, to, onPress, IconFont, icon, theme }) => {\n  const TheIcon = IconFont && icon ? Icon[IconFont] : null;\n  return (\n    <TouchableOpacity\n      onPress={() => (onPress ? onPress() : navigation.navigate(to))}\n    >\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          paddingHorizontal: 20,\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"black\",\n          paddingVertical: 15,\n        }}\n      >\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <View style={{ width: 40 }}>\n            {TheIcon && (\n              <TheIcon name={icon} size={24} color={theme.primaryText} />\n            )}\n          </View>\n          <Text style={{ color: theme.primaryText }}>{title}</Text>\n        </View>\n        <Icon.MaterialIcons\n          name=\"keyboard-arrow-right\"\n          size={24}\n          color={theme.primaryText}\n        />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default Menu;\n","import * as StoreReview from \"expo-store-review\";\nimport React, { Component } from \"react\";\nimport { Linking, Platform, View } from \"react-native\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction } from \"../Util\";\nclass Status extends Component {\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            title={getText(\"giveAReview\")}\n            onPress={() => StoreReview.requestReview()}\n            IconFont=\"AntDesign\"\n            icon=\"heart\"\n          />\n        )}\n\n        <Menu\n          theme={theme}\n          title={getText(\"feedbackAndContact\")}\n          onPress={() => Linking.openURL(\"mailto:mastercrimez@karsens.com\")}\n          IconFont=\"AntDesign\"\n          icon=\"heart\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"gameInfo\")}\n          to=\"InfoGame\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"privacyPolicy\")}\n          to=\"Privacy\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"rules\")}\n          to=\"InfoRules\"\n          IconFont=\"AntDesign\"\n          icon=\"infocirlce\"\n        />\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={getText(\"contribute\")}\n          to=\"Contribute\"\n          IconFont=\"Entypo\"\n          icon=\"network\"\n        />\n      </View>\n    );\n  }\n}\n\nexport default Status;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const locale = getLocale(me?.locale);\n\n  const components = {};\n  components.en = (\n    <View>\n      <H1>Coming soon</H1>\n    </View>\n  );\n  components.nl = (\n    <View style={{ margin: 20 }}>\n      <H1>Hoe werkt vermoorden?</H1>\n      <T>\n        Om iemand te killen moet je zijn leven naar 0% brengen. Dit kan jou\n        tussen de 1 en 1.000.000 kogels kosten Hoe dit wordt berekend, is\n        geheim, maar het ligt aan deze factoren: Voor de aanvaller: Het wapen,\n        de moordervaring en de rang. Hoe beter elk van dezen, hoe minder kogels\n        je nodig zult hebben. Voor de verdediger: De verdediging, de\n        moordervaring en de rang. Hoe beter elk van dezen, hoe meer kogels de\n        aanvaller nodig zal hebben. De rang heeft de meeste invloed, daarna het\n        wapen, de verdiging en de moordervaring.\n      </T>\n\n      <H1>Hoe krijg ik een bezitting?</H1>\n      <T>\n        Een bezitting kan je overnemen als hij geen eigenaar heeft. Klik dan op\n        (Niemand) op het steden overzicht om de bezitting over te nemen. Wil je\n        een bezitting overnemen die al een eigenaar heeft? Vermoord dan de\n        eigenaar om de bezitting te kunnen pakken, want als je dood gaat raak je\n        al je bezittingen kwijt!\n      </T>\n\n      <H1>Hoe wordt de winst bepaalt van de bezittingen?</H1>\n      <T>\n        - Een kogalfabriek eigenaar zal 50% van het geld van alle verkochte\n        kogels krijgen\n      </T>\n      <T>\n        - Coffeeshop, Leger des Heils en het Sex shop krijgen 20% van iedereens\n        inkomen bij het ophalen van inkomens.\n      </T>\n      <T>- Gevangenis krijgt uitkoopgeld</T>\n      <T>\n        - Zwitserse bank eigenaren krijgen 50% van de dagelijkse kosten van de\n        zwitserse bank\n      </T>\n      <T>- Casino eigenaren krijgen 50% van de rake van de casino</T>\n      <T>\n        - Wapenwinkel, vliegveld, garage en makelaarskantoren krijgen 20% van de\n        totale kosten gemaakt bij het kopen van nieuwe dingen in de\n        respectievelijke winkel.\n      </T>\n    </View>\n  );\n  return (\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\n      {components[locale]}\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { ScrollView, View } from \"react-native\";\nimport T from \"../components/T\";\nimport { getLocale } from \"../Util\";\n\nconst PrivacyPage = ({ navigation, screenProps: { me } }) => {\n  const strings = {};\n\n  strings.en = `Coming soon`;\n  strings.nl = `# Verboden Spelgedrdag\n  \\n\\n\n  IN HET SPEL WORD EEN CRIMINELE WERELD NAGEBOOTST. DE BEDOELING IS DAT DE SPELERS VAN HET SPEL HET SPEL PLEZIERIG EN AVONTUURLIJK ERVAREN. HET IS NIET DE BEDOELING DAT BINNEN HET SPEL ETHISCH ONVERANTWOORD GEDRAG PLAATSVINDT. MEER SPECIFIEK BETEKEND DIT:\n  \\n\\n\n  1: Heb respect voor de (hulp)admins en mede gamers\n  2: Het is verboden:\n  - te schelden en/of grof taal te gebruiken\\n\n  - pornografische plaatjes/muziek/teksten te plaatsen\\n\n  - racistische en/of discriminerende plaatjes/muziek/teksten te plaatsen\\n\n  - dreigende berichten te sturen die door mede Gamers als dreigend buiten het spel om kunnen worden ervaren.\\n\n  - de crew te beledigen, uit te schelden of te bedreigen, hiervoor worden nog veel hogere straffen gegeven dan normaal!\\n\n  \\n\\n\n  \n  Algemene regels:\\n\n  1: Bugs/Fouten dienen altijd te worden gemeld in het forum (bugs forum)\\n\n  2: Je hebt geen enkele rechten op je account\\n\n  3: Admins mogen je account aanpassen zonder reden\\n\n  4: De makers van het spel garanderen niet dat er geen fouten in het spel zitten\\n\n  5: Als je een maand niet meer online bent geweest word je account gedeleted!\\n\n  6: Als je door een verandering in het spel ineens heel veel kwijt bent kan dit niet worden terug gegeven.\\n\n  7: Het is verboden:\\n\n  - te zeuren om admin/hulpadmin te worden\\n\n  - iets te kopi�ren van deze site\\n\n  - rare/grove usernames te gebruiken\\n\n  - reclame te maken voor andere websites\\n\n  - berichten massaal rond te sturen\\n\n  - te hacken en/of deze website te saboteren\\n\n  - meerdere dezelfde berichtjes in het forum en/of gastenboek te plaatsen (berichten herhalen)\\n\n  - irritante berichten in het gastenboek te plaatsen.\\n\n  \\n\\n\n  \n  Betaal regels:\\n\\n\n  De website eigenaren zijn niet aansprakelijk voor eventuele schade/verlies opgelopen tijdens het spelen van dit spel.\n  Personen jonger dan 16 jaar dienen toestemming te vragen aan hun ouders voor het betalen.\n  Eventuele kosten die zijn opgelopen door het betalen zijn niet terug te krijgen van de eigenaren.\n  Het Betaald-Account-schap is alleen geldig op het account waarop het besteld is en het is niet mogelijk om dit over te plaatsen naar een ander account.\n  Mocht de website offline gaan of mocht er verlies van gegevens plaats vinden dan is het geld voor het Betaald-Account-Schap en het Betaald-Account-Schap zelf en alles wat je hebt gekregen door het Betaald-Account-Schap niet terug te krijgen!\n  \\n\\n\\n\n  \n  \n  Bij overtreding van een van deze regels zal de Admin bepalen of je een waarschuwing krijgt of meteen wordt verbannen! Een IP-ban wordt er nooit meer afgehaald. IP-bans worden niet terug gedraaid en ook geen uitleg over gegeven.\n  \\n\\n\\n\n  \n  \n  Regels/Bans voor MasterCrimeZ: BANTIJDEN,\n  \\n\\n\n  - Homo en andere scheldwoorden 24 uur ban. \\n\n  - Kanker 3 maanden. (Ook kk, kenker)\\n\n  - Discriminatie 1 maand. \\n\n  - Dreigen in real 1 maand. \\n\n  - Reclame andere site 1 jaar ban. \\n\n  - Bug misbruik : tijdelijke ban + account reset\\n\n  - hacken : 1 jaar ban (indien genoeg bewijs)\\n\n  - Berichtenbalk schelden: 2 uur of meer\\n\n  - Streetrace-Evenementen doen met subaccounts: 1 maand\\n`;\n\n  const locale = getLocale(me?.locale);\n\n  const text = strings[locale];\n\n  return (\n    <ScrollView>\n      <View style={{ margin: 20 }}>\n        <T>{text}</T>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View } from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\nclass Jail extends Component {\n  state = {\n    jail: [],\n  };\n  componentDidMount() {\n    this.fetchMembers();\n    this.props.screenProps.reloadCities();\n  }\n\n  fetchMembers(order) {\n    fetch(`${Constants.SERVER_ADDR}/jail`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async ({ jail }) => {\n        this.setState({ jail });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      screenProps: { me, device, reloadMe },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.floor((item.jailAt - Date.now()) / 1000);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <T>{item.name}</T>\n        <CountDown\n          style={{ marginLeft: 10 }}\n          until={seconds}\n          digitStyle={{ backgroundColor: \"#404040\" }}\n          digitTxtStyle={{ color: \"white\" }}\n          onFinish={() => {}}\n          size={8}\n          timeToShow={[\"M\", \"S\"]}\n          timeLabels={{ m: null, s: null }}\n        />\n        <Button\n          theme={this.props.screenProps.device.theme}\n          title={getText(\"breakOut\")}\n          onPress={() => {\n            fetch(`${Constants.SERVER_ADDR}/breakout`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                name: item.name,\n              }),\n            })\n              .then((response) => response.json())\n              .then(async ({ response }) => {\n                this.setState({ response });\n                this.fetchMembers();\n                reloadMe(device.loginToken);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }}\n        />\n      </View>\n    );\n  };\n  renderHeader = () => {\n    return <T>{this.state.response}</T>;\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, reloadCities, device } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"jail\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n            marginHorizontal: 15,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"jail\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                paddingHorizontal: 15,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <Text style={{ color: theme.primaryText }}>{city.city}</Text>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.jailOwner ? (\n                    <Text style={{ color: theme.primaryText }}>\n                      {city.jailOwner}\n                    </Text>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.jailOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"jail\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <Text style={{ color: theme.primaryText }}>\n                  {city.jailProfit}\n                </Text>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.jail}\n          renderItem={this.renderItem}\n          ListHeaderComponent={this.renderHeader}\n          ListFooterComponent={this.renderCities}\n          ListEmptyComponent={<T>{getText(\"jailEmpty\")}</T>}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Jail;\n","// import { ReCaptcha } from \"react-recaptcha-v3\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Junkies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      random: Math.random(),\n      captcha: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  submit = () => {\n    const { device, me } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/junkies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderFooter = () => {\n    const { device, me } = this.props.screenProps;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        {this.keyValue(getText(\"junkiesInPossession\"), me?.junkies)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ marginTop: 20 }}\n          title={getText(\"trainJunkies\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </View>\n    );\n  };\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T style={{ marginRight: 20 }}>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"junkies\",\n      token: device.loginToken,\n    });\n    reloadCities();\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <T bold>{getText(\"city\")}</T>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n            }}\n          >\n            <T bold>{getText(\"junkiesObject\")}</T>\n            <T bold>{getText(\"profit\")}</T>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.junkiesOwner ? (\n                    <T>{city.junkiesOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.junkiesOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"junkies\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <View>\n                  <T>{city.junkiesProfit}</T>\n                </View>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <View>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nexport default Junkies;\n","import React, { Component } from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Kill extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n\n  state = {\n    response: null,\n  };\n\n  kill = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/kill`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        bullets: this.state.bullets,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"name\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n        <TextInput\n          style={style(theme).textInput}\n          placeholder={getText(\"bullets\")}\n          placeholderTextColor={theme.secondaryTextSoft}\n          value={this.state.bullets}\n          onChangeText={(bullets) => this.setState({ bullets })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"kill\")}\n            onPress={() => this.kill()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Kill;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  login() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n    const { email, password } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password: md5.str_md5(password) }),\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ error: responseJson.error });\n        } else {\n          //go to map\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.loginToken,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          this.setState({ error: null, success: responseJson.success });\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : null}\n\n          {this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : (\n            <View>\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n                <TextInput\n                  placeholder={getText(\"email\")}\n                  placeholderTextColor={theme.secondaryTextSoft}\n                  onChangeText={(email) => this.setState({ email })}\n                  value={this.state.email}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text style={{ fontSize: 20 }}>{getText(\"password\")}</Text>\n\n                <TextInput\n                  secureTextEntry\n                  onChangeText={(password) => this.setState({ password })}\n                  value={this.state.password}\n                  style={style(theme).textInput}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <View />\n\n                <Button\n                  theme={theme}\n                  title={getText(\"login\")}\n                  onPress={() => this.login()}\n                />\n              </View>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 10,\n                  flexWrap: \"wrap\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignupEmail\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"register\")}\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"ForgotPassword\")}\n                >\n                  <Text\n                    style={{\n                      margin: 20,\n                      fontSize: 20,\n                      textDecorationLine: \"underline\",\n                    }}\n                  >\n                    {getText(\"forgotPassword\")}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Lotto = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"lottoDay\");\n  const buy = async () => {\n    const { response } = await post(\"buyLotto\", {\n      token: device.loginToken,\n      amount,\n      type,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <T>{getText(\"youHaveDayTickets\", me?.lottoDay)}</T>\n            <T>{getText(\"youHaveWeekTickets\", me?.lottoWeek)}</T>\n            <T>{getText(\"youHaveMonthTickets\", me?.lottoMonth)}</T>\n\n            <T bold style={{ marginTop: 20 }}>\n              {getText(\"buy\")}\n            </T>\n            <View style={{ flexDirection: \"row\" }}>\n              <TextInput\n                style={[style(theme).textInput, { flex: 1 }]}\n                placeholder={getText(\"amount\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={amount}\n                onChangeText={(amount) => setAmount(amount)}\n              />\n\n              <Button\n                style={{ marginVertical: 10, marginLeft: 10 }}\n                title={\n                  type === \"lottoDay\"\n                    ? getText(\"dayLotto\")\n                    : type === \"lottoWeek\"\n                    ? getText(\"weekLotto\")\n                    : getText(\"monthLotto\")\n                }\n                onPress={() => {\n                  setType(\n                    type === \"lottoDay\"\n                      ? \"lottoWeek\"\n                      : type === \"lottoWeek\"\n                      ? \"lottoMonth\"\n                      : \"lottoDay\"\n                  );\n                }}\n              />\n            </View>\n\n            <Button\n              theme={theme}\n              title={getText(\"buy\")}\n              onPress={() => buy()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Lotto;\n","import React, { useState } from \"react\";\nimport { ScrollView, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction, numberFormat, post } from \"../Util\";\n\nconst ManageObject = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const typeStrings = {\n    bulletFactory: getText(\"bulletFactory\"),\n    casino: getText(\"casino\"),\n    landlord: getText(\"landlord\"),\n    junkies: getText(\"junkiesObject\"),\n    weaponShop: getText(\"weaponShop\"),\n    rld: getText(\"rld\"),\n    airport: getText(\"airport\"),\n    estateAgent: getText(\"estateAgent\"),\n    bank: getText(\"bankObject\"),\n    jail: getText(\"jail\"),\n    garage: getText(\"garage\"),\n  };\n\n  const city = params?.city;\n  const type = params?.type;\n\n  const [response, setResponse] = useState(null);\n  const [giveTo, setGiveTo] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [who, setWho] = useState(\"\");\n\n  const theCity = cities?.find((c) => c.city === city);\n\n  doOnce(reloadCities);\n\n  const getProfit = async () => {\n    const { response } = await post(\"getProfit\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const repair = async () => {\n    const { response } = await post(\"repairObject\", {\n      token: device.loginToken,\n      city,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n    reloadCities();\n  };\n\n  const giveAway = async () => {\n    const { response } = await post(\"giveAway\", {\n      token: device.loginToken,\n      city,\n      type,\n      to: giveTo,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const putInJail = async () => {\n    const { response } = await post(\"putInJail\", {\n      token: device.loginToken,\n      city,\n      type,\n      who,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const changePrice = async () => {\n    const { response } = await post(\"changePrice\", {\n      token: device.loginToken,\n      city,\n      type,\n      price,\n    });\n    reloadMe(device.loginToken);\n    reloadCities();\n    setResponse(response);\n  };\n\n  const rowStyle = {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 15,\n  };\n\n  const typeString = typeStrings[type];\n\n  if (!typeString) {\n    return <T>{getText(\"invalidType\")}</T>;\n  }\n\n  const profitKey = `${type}Profit`;\n  const priceKey = `${type}Price`;\n  const ownerKey = `${type}Owner`;\n  const damageKey = `${type}Damage`;\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {response && <T>{response}</T>}\n\n      {me?.name && theCity?.[ownerKey] === me?.name ? (\n        <View>\n          <T style={{ fontWeight: \"bold\" }}>\n            {typeString} {getText(\"xInX\")} {city}\n          </T>\n\n          <View style={rowStyle}>\n            <T>{getText(\"profit\")}</T>\n            <T>€{numberFormat(theCity[profitKey])},-</T>\n          </View>\n\n          {theCity[priceKey] && (\n            <View style={rowStyle}>\n              <T>{getText(\"price\")}</T>\n              <T>{theCity[priceKey]}</T>\n            </View>\n          )}\n\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={getProfit}\n            theme={theme}\n            title={getText(\"getProfit\")}\n          />\n\n          <View style={rowStyle}>\n            <T>{getText(\"damage\")}</T>\n            <T>{theCity[damageKey]}%</T>\n          </View>\n          <Button\n            style={{ marginVertical: 15 }}\n            onPress={repair}\n            theme={theme}\n            title={getText(\"repair\")}\n          />\n\n          <View\n            style={{\n              marginVertical: 15,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"name\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={giveTo}\n              onChangeText={(x) => setGiveTo(x)}\n            />\n            <Button onPress={giveAway} theme={theme} title={getText(\"give\")} />\n          </View>\n\n          {type === \"bulletFactory\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"pricePerBullet\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={price}\n                onChangeText={(x) => setPrice(x)}\n              />\n              <Button\n                onPress={changePrice}\n                theme={theme}\n                title={getText(\"changePrice\")}\n              />\n            </View>\n          )}\n\n          {type === \"jail\" && (\n            <View\n              style={{\n                marginVertical: 15,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                style={{ ...style(theme).textInput, flex: 1 }}\n                placeholder={getText(\"name\")}\n                placeholderTextColor={theme.secondaryTextSoft}\n                value={who}\n                onChangeText={(x) => setWho(x)}\n              />\n              <Button\n                onPress={putInJail}\n                theme={theme}\n                title={getText(\"putInJail\")}\n              />\n            </View>\n          )}\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n};\n\nexport default ManageObject;\n","import moment from \"moment\";\nimport { Platform } from \"react-native\";\nexport const API_KEY = \"AIzaSyCOENphOkWqcrvmehHhhgKu7lJpwqfLQzc\";\n\nexport const OBJECT_SIZE_FACTOR = 4;\nexport const SIZE_FACTOR = 100;\n\nexport const objects = [\n  {\n    title: \"menuHouse\",\n    type: \"house\",\n    to: \"House\",\n    image: require(\"../../../assets/map/house2.png\"),\n    size: 10,\n    aspectRatio: 783 / 500,\n  },\n\n  {\n    title: \"menuHeadquarter\",\n    type: \"headquarter\",\n    to: \"AllGang\",\n    image: require(\"../../../assets/map/headquarter.png\"),\n    size: 10,\n    aspectRatio: 202 / 182,\n  },\n\n  {\n    title: \"menuBulletfactory\",\n    type: \"bulletFactory\",\n    to: \"AllBulletfactory\",\n    image: require(\"../../../assets/map/bulletfactory.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n  {\n    title: \"menuAirport\",\n    type: \"airport\",\n    to: \"AllAirport\",\n    image: require(\"../../../assets/map/airport.png\"),\n    size: 15,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuBank\",\n    type: \"bank\",\n    to: \"AllBanks\",\n    image: require(\"../../../assets/map/bank.png\"),\n    size: 8,\n    aspectRatio: 200 / 235,\n  },\n\n  {\n    title: \"menuCasino\",\n    type: \"casino\",\n    to: \"Casino\",\n    image: require(\"../../../assets/map/casino.png\"),\n    size: 20,\n    aspectRatio: 400 / 251,\n  },\n\n  {\n    title: \"menuCoffeeShop\",\n    type: \"landlord\",\n    to: \"Wiet\",\n    image: require(\"../../../assets/map/coffeeshop.png\"),\n    size: 10,\n    aspectRatio: 300 / 270,\n  },\n\n  {\n    title: \"menuSalvationArmy\",\n    type: \"junkies\",\n    to: \"Junkies\",\n    image: require(\"../../../assets/map/junkies.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuGarage\",\n    type: \"garage\",\n    to: \"AllGarage\",\n    image: require(\"../../../assets/map/garage.png\"),\n    size: 10,\n    aspectRatio: 400 / 292,\n  },\n\n  {\n    title: \"menuGym\",\n    type: \"gym\",\n    to: \"Gym\",\n    image: require(\"../../../assets/map/gym.png\"),\n    size: 10,\n    aspectRatio: 300 / 231,\n  },\n\n  {\n    title: \"menuHospital\",\n    type: \"hospital\",\n    to: \"Hospital\",\n    image: require(\"../../../assets/map/hospital.png\"),\n    size: 10,\n    aspectRatio: 300 / 270,\n  },\n\n  {\n    title: \"menuJail2\",\n    type: \"jail\",\n    to: \"Jail\",\n    image: require(\"../../../assets/map/jail.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuMarket\",\n    type: \"market\",\n    to: \"Market\",\n    image: require(\"../../../assets/map/market.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n  {\n    title: \"menuWeaponShop\",\n    type: \"weaponShop\",\n    to: \"Shop\",\n    image: require(\"../../../assets/map/shop.png\"),\n    size: 10,\n    aspectRatio: 300 / 262,\n  },\n\n  {\n    title: \"menuEstateAgent\",\n    type: \"estateAgent\",\n    to: \"EstateAgent\",\n    image: require(\"../../../assets/map/shop.png\"),\n    size: 10,\n    aspectRatio: 300 / 262,\n  },\n\n  {\n    title: \"menuRLD\",\n    type: \"rld\",\n    to: \"Hoeren\",\n    image: require(\"../../../assets/map/sexshop.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n\n  {\n    title: \"menuStockExchange\",\n    type: \"stockExchange\",\n    to: \"StockExchange\",\n    image: require(\"../../../assets/map/market.png\"),\n    size: 10,\n    aspectRatio: 1,\n  },\n];\n\nexport const rgbs = [\n  \"0,255,0\",\n  \"255,0,0\",\n  \"0,255,255\",\n  \"0,0,255\",\n  \"255,0,255\",\n  \"255,255,0\",\n  \"0,150,0\",\n  \"0,0,150\",\n];\n\nconst decimalHash = (string) => {\n  let sum = 0;\n  for (let i = 0; i < string.length; i++)\n    sum += ((i + 1) * string.codePointAt(i)) / (1 << 8);\n  return sum % 1;\n};\n\n// kies positiegetal deterministisch aan de hand van een string van moment().format(\"DD-MM-YY HH\") en index en type\nexport const getPosition = (id, type) => {\n  const string = moment().format(\"DD-MM-YY HH\") + id?.toString() + type;\n  return decimalHash(string);\n};\n\nexport const getZoom = (delta) => Math.ceil(Math.log(360 / delta) / Math.LN2);\nexport const getObjectMeta = ({ object, index, city, cityAreas }) => {\n  let latitude = city?.[`${object.type}Latitude`];\n  let longitude = city?.[`${object.type}Longitude`];\n\n  if (!latitude || !longitude) {\n    const terri = cityAreas.areas[index % (cityAreas.areas.length - 1)];\n    latitude = terri.centerLatitude;\n    longitude = terri.centerLongitude;\n  }\n\n  const deltaLatitude =\n    (city?.delta * object.size) / object.aspectRatio / SIZE_FACTOR; //width\n  const deltaLongitude = (city?.delta * object.size) / SIZE_FACTOR;\n\n  const biggestDeltaLatitude =\n    deltaLatitude > deltaLongitude ? deltaLatitude : deltaLongitude;\n  const topLeftLatitude = latitude - deltaLatitude / 2;\n  const topLeftLongitude = longitude - deltaLongitude / 2;\n  const bottomRightLatitude = latitude + deltaLatitude / 2;\n  const bottomRightLongitude = longitude + deltaLongitude / 2;\n\n  const topRightLatitude = latitude + deltaLatitude / 2;\n  const topRightLongitude = longitude - deltaLongitude / 2;\n  const bottomLeftLatitude = latitude - deltaLatitude / 2;\n  const bottomLeftLongitude = longitude + deltaLongitude / 2;\n\n  const square = [\n    { latitude: topLeftLatitude, longitude: topLeftLongitude },\n    { latitude: topRightLatitude, longitude: topRightLongitude },\n    {\n      latitude: bottomRightLatitude,\n      longitude: bottomRightLongitude,\n    },\n    { latitude: bottomLeftLatitude, longitude: bottomLeftLongitude },\n  ];\n\n  const bounds = {\n    east: bottomRightLongitude,\n    south: bottomLeftLatitude,\n    north: bottomRightLatitude,\n    west: topRightLongitude,\n  };\n\n  const platformBounds =\n    Platform.OS === \"ios\"\n      ? [\n          [topLeftLatitude, topLeftLongitude],\n          [bottomRightLatitude, bottomRightLongitude],\n        ]\n      : [\n          [bottomRightLatitude, topLeftLongitude],\n          [topLeftLatitude, bottomRightLongitude],\n        ];\n\n  const radius = biggestDeltaLatitude * 50000;\n\n  const zoom = getZoom(biggestDeltaLatitude);\n  return {\n    latitude,\n    longitude,\n    deltaLatitude,\n    deltaLongitude,\n    biggestDeltaLatitude,\n    radius,\n    zoom,\n    square,\n    bounds,\n    platformBounds,\n  };\n};\n","import * as Icon from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport CountDown from \"react-native-countdown-component\";\nimport Hoverable from \"../../components/Hoverable\";\nimport T from \"../../components/T\";\nimport { getTextFunction, lighterHex } from \"../../Util\";\nimport { getObjectMeta, getZoom, objects } from \"./MapUtil\";\n\nexport const isHappyHour = () => {\n  const isSunday = moment().day() === 0; //sunday\n  const is7pm = moment().hour() === 19; //19pm\n  const isHappyHourReleased = moment().isAfter(\n    moment(\"01/02/2021\", \"DD/MM/YYYY\").set(\"hour\", 17)\n  );\n  return isHappyHourReleased && (isSunday || is7pm);\n};\n\nexport const InactiveScreens = {\n  ACTIONS_BEFORE_ROBBERY: 120,\n  ACTIONS_BEFORE_DETECTIVES: 30,\n  ACTIONS_BEFORE_BOMB: 60,\n  ACTIONS_BEFORE_CASINO: 70,\n  ACTIONS_BEFORE_BUNKER: 20,\n  ACTIONS_BEFORE_HOSPITAL: 30,\n  ACTIONS_BEFORE_RACECARS: 80,\n  ACTIONS_BEFORE_STREETRACE: 80,\n  ACTIONS_AMOUNT_NEW: 10,\n  ACTIONS_BEFORE_ROB: 20,\n  ACTIONS_BEFORE_ROB_KILL_MENU: 20,\n  ACTIONS_BEFORE_KILL: 30,\n  ACTIONS_BEFORE_BULLETFACTORY: 40,\n  ACTIONS_BEFORE_MARKET: 50,\n  ACTIONS_BEFORE_AIRPORT: 30,\n  DAYS_NEW: 14,\n  ACTIONS_BEFORE_POLICE: 100,\n  OC_RELEASE_DATE: moment(\"01/08/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  DETECTIVES_RELEASE_DATE: moment(\"01/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  GANG_MISSIONS_RELEASE_DATE: moment(\"01/05/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_BULLET_FACTORY_RELEASE_DATE: moment(\"15/08/2021\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  PRIZES_NORMAL_RELEASE_DATE: moment(\"01/12/2020\", \"DD/MM/YYYY\").set(\n    \"hours\",\n    17\n  ),\n  GANG_RELEASE_DATE: moment(\"30/11/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  MARKET_RELEASE_DATE: moment(\"15/12/2020\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  PRIZES_RELEASE_DATE: moment(\"01/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  POLICE_RELEASE_DATE: moment(\"15/01/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  ROBBERY_RELEASE_DATE: moment(\"15/06/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n  //happy hour 1 feb\n\n  WORK_RELEASE_DATE: moment(\"15/04/2021\", \"DD/MM/YYYY\").set(\"hours\", 17),\n};\n\nexport const leftMenu = (me, theme) => {\n  const stealcarSeconds = Math.ceil(\n    (me?.autostelenAt + 60000 - Date.now()) / 1000\n  );\n\n  const crimeSeconds = Math.ceil((me?.crimeAt + 60000 - Date.now()) / 1000);\n  const bunkerSeconds = Math.ceil((me?.bunkerAt - Date.now()) / 1000);\n\n  const attackSeconds = Math.ceil((me?.attackAt + 120000 - Date.now()) / 1000);\n\n  const robSeconds = Math.ceil((me?.robAt + 30000 - Date.now()) / 1000);\n\n  const gymSeconds = Math.ceil((me?.gymAt + me?.gymTime - Date.now()) / 1000);\n  const wietSeconds = Math.ceil((me?.wietAt + 120000 - Date.now()) / 1000);\n  const junkiesSeconds = Math.ceil(\n    (me?.junkiesAt + 120000 - Date.now()) / 1000\n  );\n  const hoerenSeconds = Math.ceil((me?.hoerenAt + 120000 - Date.now()) / 1000);\n  const robberySeconds = Math.ceil(\n    (me?.robberyAt + me?.robberySeconds * 1000 - Date.now()) / 1000\n  );\n\n  const ocSeconds = Math.ceil((me?.ocAt + 3600000 - Date.now()) / 1000);\n\n  const getText = getTextFunction(me?.locale);\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerCrime\"),\n        label: isHappyHour() ? \"Happy Hour\" : undefined,\n      },\n\n      content: [\n        {\n          view: \"crimes\",\n          iconType: \"FontAwesome\",\n          icon: \"car\",\n          text: getText(\"menuStealCar\"),\n          to: \"StealCar\",\n          component:\n            stealcarSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={stealcarSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuCrimes\"),\n          to: \"Crimes\",\n          view: \"crimes\",\n          component:\n            crimeSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={crimeSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"tree\",\n          text: getText(\"menuWiet\"),\n          to: \"Wiet\",\n          component:\n            wietSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={wietSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"MaterialIcons\",\n          icon: \"people\",\n          text: getText(\"menuJunkies\"),\n          to: \"Junkies\",\n          component:\n            junkiesSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={junkiesSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          iconType: \"FontAwesome\",\n          icon: \"female\",\n          text: getText(\"menuProstitutes\"),\n          to: \"Hoeren\",\n          component:\n            hoerenSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={hoerenSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            moment().isBefore(InactiveScreens.WORK_RELEASE_DATE) &&\n            me?.level < 2,\n          isNew: moment().isBefore(\n            moment(InactiveScreens.WORK_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"AntDesign\",\n          icon: \"tool\",\n          text: getText(\"menuWork\"),\n          to: \"Work\",\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_KILL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_KILL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuKill\"),\n          to: \"Kill\",\n          component:\n            attackSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={attackSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n        {\n          view: \"crimes\",\n          inactive:\n            !me?.id || me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROB,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_ROB +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuRob\"),\n          to: \"Rob\",\n          component:\n            robSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          view: \"crimes\",\n          inactive:\n            (moment().isBefore(InactiveScreens.ROBBERY_RELEASE_DATE) &&\n              me?.level < 2) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_ROBBERY,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.ROBBERY_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_ROBBERY +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuRobbery\"),\n          to: \"Robbery\",\n          component:\n            robberySeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={robberySeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        me?.gangId && {\n          view: \"crimes\",\n          inactive:\n            me?.level < 2 && moment().isBefore(InactiveScreens.OC_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.OC_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n          iconType: \"Ionicons\",\n          icon: \"md-cash\",\n          text: getText(\"menuOC\"),\n          to: \"OC\",\n          component:\n            ocSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={ocSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerBuildings\"),\n      },\n\n      content: [\n        {\n          iconType: \"FontAwesome5\",\n          icon: \"home\",\n          text: getText(\"menuHome\"),\n          goToBuilding: \"house\",\n        },\n\n        {\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"home-analytics\",\n          text: getText(\"menuHeadquarter\"),\n          goToBuilding: \"headquarter\",\n        },\n\n        {\n          iconType: \"FontAwesome5\",\n          icon: \"beer\",\n          text: getText(\"menuSalvationArmy\"),\n          goToBuilding: \"junkies\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"heart\",\n          text: getText(\"menuSexShop\"),\n          goToBuilding: \"rld\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"shop\",\n          text: getText(\"menuCoffeeShop\"),\n          goToBuilding: \"landlord\",\n        },\n\n        {\n          inactive:\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_BULLETFACTORY +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuBulletfactory\"),\n          goToBuilding: \"bulletFactory\",\n        },\n\n        {\n          view: \"game\",\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_AIRPORT,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_AIRPORT +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome\",\n          icon: \"plane\",\n          text: getText(\"menuAirport\"),\n          goToBuilding: \"airport\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuBank\"),\n          goToBuilding: \"bank\",\n          to: \"Bank\",\n        },\n\n        {\n          view: \"game\",\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_CASINO,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_CASINO +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome5\",\n          icon: \"dice\",\n          text: getText(\"menuCasino\"),\n          goToBuilding: \"casino\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-car\",\n          text: getText(\"menuGarage\"),\n          goToBuilding: \"garage\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"stepforward\",\n          text: getText(\"menuGym\"),\n          goToBuilding: \"gym\",\n          component:\n            gymSeconds > 0 ? (\n              <CountDown\n                style={{ marginLeft: 10 }}\n                until={gymSeconds}\n                digitStyle={{ backgroundColor: theme.secondary }}\n                digitTxtStyle={{ color: theme.secondaryText }}\n                onFinish={() => {}}\n                size={8}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            ) : null,\n        },\n\n        {\n          inactive: me?.numActions < InactiveScreens.ACTIONS_BEFORE_HOSPITAL,\n          isNew:\n            me?.numActions <\n            InactiveScreens.ACTIONS_BEFORE_HOSPITAL +\n              InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"FontAwesome5\",\n          icon: \"hospital\",\n          text: getText(\"menuHospital\"),\n          goToBuilding: \"hospital\",\n        },\n\n        {\n          iconType: \"FontAwesome\",\n          icon: \"bars\",\n          text: getText(\"menuJail\", me?.jail),\n          goToBuilding: \"jail\",\n        },\n\n        {\n          view: \"game\",\n          inactive:\n            ((!me?.id || me.level < 1) &&\n              moment().isBefore(InactiveScreens.MARKET_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_MARKET,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.MARKET_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_MARKET +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuMarket\"),\n          goToBuilding: \"market\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"Entypo\",\n          icon: \"home\",\n          text: getText(\"homeShop\"),\n          goToBuilding: \"estateAgent\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"MaterialCommunityIcons\",\n          icon: \"pistol\",\n          text: getText(\"menuWeaponShop\"),\n          goToBuilding: \"weaponShop\",\n        },\n\n        {\n          view: \"game\",\n          iconType: \"Entypo\",\n          icon: \"line-graph\",\n          text: getText(\"menuStockExchange\"),\n          goToBuilding: \"stockExchange\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n  ].filter((x) => !!x);\n};\n\nconst adminMenu = (me) => {\n  const getText = getTextFunction(me?.locale);\n\n  const gameMod =\n    me?.level >= 5\n      ? [\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuUserWatch\"),\n            to: \"AdminUserWatch\",\n          },\n\n          {\n            iconType: \"Entypo\",\n            icon: \"eye\",\n            text: getText(\"menuReports\"),\n            to: \"Reports\",\n          },\n        ]\n      : [];\n\n  const betaTester = me?.level >= 2 ? [] : [];\n  const admin = me?.level >= 10 ? [] : [];\n\n  return (\n    me?.level > 1 && {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAdminPanel\"),\n      },\n      content: [...betaTester, ...gameMod, ...admin],\n    }\n  );\n};\n\nexport const rightMenu = (me, theme, areas, channels) => {\n  const getText = getTextFunction(me?.locale);\n\n  const allAreasMenus = areas.map((area, index) => {\n    return {\n      image: area.user?.thumbnail,\n      iconType: \"Feather\",\n      icon: \"map-pin\",\n      text: area.name,\n      goToArea: index,\n    };\n  });\n\n  const last10ChannelsMenus = channels.slice(0, 10).map((item) => {\n    const channelTitle = item.channel?.name\n      ? item.channel?.name\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user?.name\n      : \"(System)\";\n\n    const channelThumbnail = item.channel?.image\n      ? item.channel?.image\n      : item.channel?.channelsubs.length === 2\n      ? item.channel?.channelsubs.find((x) => x.userId !== me?.id)?.user\n          ?.thumbnail\n      : null;\n\n    return {\n      image: null,\n      text: channelTitle,\n      image: channelThumbnail,\n      iconType: \"Ionicons\",\n      icon: \"ios-person\",\n      to: \"Channel\",\n      params: { subid: item.id, id: item.channel.id },\n    };\n  });\n\n  return [\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerStats\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n          text: getText(\"menuMembers\", me?.online),\n          to: \"Members\",\n          view: \"stats\",\n        },\n\n        {\n          iconType: \"AntDesign\",\n          icon: \"star\",\n          text: getText(\"menuStats\"),\n          to: \"Stats\",\n\n          view: \"stats\",\n        },\n\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-people\",\n          text: getText(\"menuGangs\"),\n          to: \"Gangs\",\n\n          view: \"stats\",\n        },\n\n        {\n          text: getText(\"prizes\"),\n          iconType: \"FontAwesome5\",\n          icon: \"award\",\n          to: \"Prizes\",\n\n          view: \"stats\",\n          inactive:\n            me?.level < 2 &&\n            moment().isBefore(InactiveScreens.PRIZES_NORMAL_RELEASE_DATE),\n          isNew: moment().isBefore(\n            moment(InactiveScreens.PRIZES_RELEASE_DATE).add(\n              InactiveScreens.DAYS_NEW,\n              \"days\"\n            )\n          ),\n        },\n\n        {\n          text: getText(\"menuProperties\"),\n          iconType: \"FontAwesome5\",\n          icon: \"house-damage\",\n          to: \"Properties\",\n\n          view: \"stats\",\n        },\n      ],\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerChat\"),\n      },\n      content: [\n        {\n          iconType: \"Ionicons\",\n          icon: \"ios-chatbubbles\",\n          text: getText(\"everyone\"),\n          to: \"Chat\",\n        },\n\n        ...last10ChannelsMenus,\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerAreas\"),\n      },\n      content: allAreasMenus,\n    },\n\n    {\n      header: {\n        isHeader: true,\n        text: getText(\"headerMore\"),\n      },\n      content: [\n        {\n          iconType: \"SimpleLineIcons\",\n          icon: \"settings\",\n          view: \"more\",\n          text: getText(\"menuSettings\"),\n          to: \"Settings\",\n        },\n\n        {\n          iconType: \"Entypo\",\n          icon: \"info-with-circle\",\n\n          view: \"more\",\n          text: getText(\"menuInfo\"),\n          to: \"Info\",\n        },\n\n        {\n          view: \"more\",\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuHackers\"),\n          to: \"Hackers\",\n        },\n\n        {\n          view: \"more\",\n          inactive:\n            ((!me?.id || me?.level < 1) &&\n              moment().isBefore(InactiveScreens.POLICE_RELEASE_DATE)) ||\n            me?.numActions < InactiveScreens.ACTIONS_BEFORE_POLICE,\n          isNew:\n            moment().isBefore(\n              moment(InactiveScreens.POLICE_RELEASE_DATE).add(\n                InactiveScreens.DAYS_NEW,\n                \"days\"\n              )\n            ) ||\n            me?.numActions <\n              InactiveScreens.ACTIONS_BEFORE_POLICE +\n                InactiveScreens.ACTIONS_AMOUNT_NEW,\n\n          iconType: \"Entypo\",\n          icon: \"eye\",\n          text: getText(\"menuPolice\"),\n          to: \"Police\",\n        },\n\n        {\n          view: \"more\",\n          iconType: \"FontAwesome\",\n          icon: \"bank\",\n          text: getText(\"menuVIP\"),\n          to: \"VIP\",\n        },\n\n        {\n          view: \"more\",\n          iconType: \"FontAwesome\",\n          icon: \"wechat\",\n          text: getText(\"menuForum\"),\n          to: \"Forum\",\n        },\n      ].filter((x) => !!x && !x.inactive),\n    },\n\n    adminMenu(me),\n  ].filter((x) => !!x);\n};\n\nexport const renderMenu = ({\n  item,\n  index,\n  navigation,\n  theme,\n  dispatch,\n  me,\n  cityAreas,\n  setSelectedAreaIndex,\n  map,\n  setSelected,\n  setZoom,\n  city,\n  setView,\n}) => {\n  const TheIcon = Icon[item.iconType];\n\n  const isCurrent = navigation.state.routeName === item.to;\n  const TouchOrView = item.isHeader ? View : TouchableOpacity;\n  const getText = getTextFunction(me?.locale);\n  return (\n    <TouchOrView\n      key={`item${index}`}\n      onPress={(e) => {\n        if (item.to) {\n          navigation.resetTo(item.to, item.params);\n\n          const movement = {\n            action: \"Web_Menu_\" + item.to,\n            locationX: e.nativeEvent.locationX,\n            locationY: e.nativeEvent.locationY,\n            timestamp: Date.now(),\n          };\n\n          dispatch({ type: \"ADD_MOVEMENT\", value: movement });\n        } else {\n          navigation.popToTop();\n        }\n\n        if (item.view) {\n          setView(item.view);\n        }\n        if (item.goToBuilding) {\n          const objectIndex = objects.findIndex(\n            (x) => x.type === item.goToBuilding\n          );\n          const object = objects[objectIndex];\n          const {\n            latitude,\n            longitude,\n            zoom,\n            deltaLatitude,\n            deltaLongitude,\n          } = getObjectMeta({\n            city,\n            cityAreas,\n            index: objectIndex,\n            object,\n          });\n\n          if (latitude && longitude) {\n            if (Platform.OS === \"web\") {\n              map.panTo({\n                lat: latitude,\n                lng: longitude,\n              });\n\n              setZoom(zoom);\n            } else {\n              map.animateToRegion({\n                latitude: latitude,\n                longitude: longitude,\n                latitudeDelta: deltaLatitude,\n                longitudeDelta: deltaLongitude,\n              });\n            }\n          }\n\n          setView(\"game\");\n          setSelected(item.goToBuilding);\n        }\n\n        if (item.goToArea !== undefined) {\n          const area = cityAreas.areas[item.goToArea];\n          // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n          if (Platform.OS === \"web\") {\n            map.panTo({\n              lat: area.centerLatitude,\n              lng: area.centerLongitude,\n            });\n            const biggestDelta =\n              area.latitudeDelta > area.longitudeDelta\n                ? area.latitudeDelta\n                : area.longitudeDelta;\n\n            setZoom(getZoom(biggestDelta));\n          } else {\n            map.animateToRegion({\n              latitude: area.centerLatitude,\n              longitude: area.centerLongitude,\n              latitudeDelta: area.latitudeDelta,\n              longitudeDelta: area.longitudeDelta,\n            });\n          }\n\n          setView(\"territories\");\n          setSelected(\"area\");\n          setSelectedAreaIndex(item.goToArea);\n        }\n      }}\n    >\n      <Hoverable onHoverIn={null} onHoverOut={null}>\n        {(isHovered) => (\n          <View\n            style={{\n              borderBottomWidth: 0,\n              padding: 3,\n              backgroundColor: item.isHeader\n                ? theme.primary\n                : `${theme.primary}CC`,\n              paddingLeft: 5,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                minHeight: 25,\n                backgroundColor:\n                  isHovered || isCurrent\n                    ? lighterHex(theme.primary)\n                    : undefined,\n                borderRadius: isHovered || isCurrent ? 15 : undefined,\n              }}\n            >\n              <View style={{ width: 30, alignItems: \"center\" }}>\n                {item.image ? (\n                  <Image\n                    source={{ uri: item.image }}\n                    style={{ width: 40, height: 40, borderRadius: 20 }}\n                  />\n                ) : TheIcon ? (\n                  <TheIcon\n                    name={item.icon}\n                    size={20}\n                    color={theme.secondaryText}\n                  />\n                ) : null}\n              </View>\n              <Text\n                numberOfLines={1}\n                style={{\n                  marginLeft: 15,\n                  color: theme.primaryText,\n                  fontWeight: item.isHeader ? \"bold\" : undefined,\n                }}\n              >\n                {item.text}\n              </Text>\n              {item.isNew && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{getText(\"new\")}</T>\n                </View>\n              )}\n\n              {item.label && (\n                <View\n                  style={{\n                    marginLeft: 10,\n                    // backgroundColor: \"red\",\n                    borderRadius: 10,\n                    borderColor: theme.primaryText,\n                    borderWidth: 1,\n                    padding: 3,\n                  }}\n                >\n                  <T>{item.label}</T>\n                </View>\n              )}\n              {item.component}\n            </View>\n          </View>\n        )}\n      </Hoverable>\n    </TouchOrView>\n  );\n};\n\nconst Menus = ({\n  children,\n  device,\n  me,\n  navigation,\n  dispatch,\n  cityAreas,\n  setSelectedAreaIndex,\n  map,\n  setSelected,\n  setZoom,\n  setView,\n  city,\n  areas,\n  channels,\n}) => {\n  const [leftActive, setLeftActive] = useState(device.menu?.left);\n  const [rightActive, setRightActive] = useState(device.menu?.right);\n\n  const window = Dimensions.get(\"window\");\n  const isSmallDevice = window.width < 800;\n\n  const renderLeftMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={leftMenu(me, device.theme)}\n          activeSections={leftActive}\n          onChange={(active) => {\n            setLeftActive(active);\n            dispatch({\n              type: \"MENU_SET_LEFT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu({\n              item: section.header,\n              index,\n              navigation,\n              theme: device.theme,\n              dispatch,\n              me,\n              cityAreas,\n              setSelectedAreaIndex,\n              map,\n              setSelected,\n              setZoom,\n              city,\n              setView,\n            })\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu({\n                item,\n                index,\n                navigation,\n                theme: device.theme,\n                dispatch,\n                me,\n                cityAreas,\n                setSelectedAreaIndex,\n                map,\n                setSelected,\n                setZoom,\n                city,\n                setView,\n              })\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  const renderRightMenu = () => (\n    <View style={{ width: 200 }}>\n      <ScrollView\n        style={{ width: 200 }}\n        contentContainerStyle={{\n          width: 200,\n          height: Platform.OS === \"web\" ? window.height - 250 : undefined,\n        }}\n      >\n        <Accordion\n          expandMultiple\n          sections={rightMenu(me, device.theme, areas, channels)}\n          activeSections={rightActive}\n          onChange={(active) => {\n            setRightActive(active);\n            dispatch({\n              type: \"MENU_SET_RIGHT_ACTIVE_SECTIONS\",\n              value: active,\n            });\n          }}\n          renderHeader={(section, index) =>\n            renderMenu({\n              item: section.header,\n              index,\n              navigation,\n              theme: device.theme,\n              dispatch,\n              me,\n              cityAreas,\n              setSelectedAreaIndex,\n              map,\n              setSelected,\n              setZoom,\n              city,\n              setView,\n            })\n          }\n          renderContent={(section) =>\n            section.content.map((item, index) =>\n              renderMenu({\n                item,\n                index,\n                navigation,\n                theme: device.theme,\n                dispatch,\n                me,\n                cityAreas,\n                setSelectedAreaIndex,\n                map,\n                setSelected,\n                setZoom,\n                city,\n                setView,\n              })\n            )\n          }\n        />\n      </ScrollView>\n    </View>\n  );\n\n  return isSmallDevice ? (\n    children\n  ) : (\n    <View\n      style={{\n        flexDirection: \"row\",\n        height: \"100%\",\n        width: \"100%\",\n        position: \"absolute\",\n      }}\n      pointerEvents=\"box-none\"\n    >\n      {device.menuShown && renderLeftMenu()}\n      <View style={{ flex: 1 }} pointerEvents=\"box-none\">\n        {children}\n      </View>\n      {device.menuShown && renderRightMenu()}\n    </View>\n  );\n};\n\nexport default Menus;\n","import * as Icon from \"@expo/vector-icons\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { AlertContext } from \"../../components/AlertProvider\";\nimport { getTextFunction, post, withCaptcha } from \"../../Util\";\nimport { InactiveScreens } from \"./Menus\";\n\nconst ActionsBar = ({\n  selected,\n  city,\n  me,\n  device,\n  navigation,\n  setLoading,\n  reloadMe,\n  reloadCities,\n  selectedArea,\n  reloadAreas,\n  view,\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const alertAlert = React.useContext(AlertContext);\n\n  const bombAction = (type) => ({\n    inactive: !city?.[`${type}Owner`] || city?.[`${type}Owner`] === me?.name,\n    text: getText(\"bombard\"),\n    onPress: () => {\n      const airplanes = [\n        \"\",\n        \"Fokker\",\n        \"Fleet\",\n        \"Havilland\",\n        \"Cessna\",\n        \"Douglas\",\n        \"Lear Jet\",\n        \"Raket\",\n      ];\n\n      alertAlert(\n        getText(\"fillInBombs\"),\n        me?.airplane === 0\n          ? getText(\"bombNoAirplane\")\n          : getText(\n              \"bombAirplaneText\",\n              airplanes[me?.airplane],\n              me?.airplane * 5\n            ),\n        [\n          {\n            text: getText(\"ok\"),\n            onPress: (bombs) => {\n              withCaptcha(\n                device.loginToken,\n                me?.needCaptcha,\n                getText,\n                alertAlert,\n                async (captcha) => {\n                  setLoading(true);\n                  const { response } = await post(\"bomb\", {\n                    loginToken: device.loginToken,\n                    bombs,\n                    type,\n                    captcha,\n                  });\n                  setLoading(false);\n                  reloadMe(device.loginToken);\n                  alertAlert(response, null, null, { key: \"bombResponse\" });\n                  reloadCities();\n                }\n              );\n            },\n          },\n          {\n            text: getText(\"cancel\"),\n          },\n        ],\n        { key: \"bomb\", textInput: true, keyboardType: \"numeric\" }\n      );\n    },\n    icon: Icon.FontAwesome,\n    iconName: \"bomb\",\n  });\n  const takeOverAction = (type) => ({\n    inactive: !!city?.[`${type}Owner`],\n    text: getText(\"takeOver\"),\n    onPress: async () => {\n      const { response } = await post(\"becomeOwner\", {\n        city: me?.city,\n        type,\n        token: device.loginToken,\n      });\n      reloadCities();\n      reloadMe(device.loginToken);\n      alertAlert(response, null, null, { key: \"becomeOwnerResponse\" });\n    },\n    icon: Icon.MaterialCommunityIcons,\n    iconName: \"account-arrow-left\",\n  });\n  const manageAction = (type) => ({\n    inactive: city?.[`${type}Owner`] !== me?.name,\n    text: getText(\"manage\"),\n    onPress: () => navigation.resetTo(\"ManageObject\", { type, city: me?.city }),\n    icon: Icon.Ionicons,\n    iconName: \"md-settings\",\n  });\n\n  const postGetIncome = async (type, captcha) => {\n    setLoading(true);\n    const { response } = await post(\"income\", {\n      token: device.loginToken,\n      captcha,\n      type,\n    });\n\n    setLoading(false);\n\n    reloadMe(device.loginToken);\n    reloadCities();\n    alertAlert(response, null, null, { key: \"incomeResponse\" });\n  };\n  const incomeAction = (type) => ({\n    text: getText(\"getIncome\"),\n    onPress: () =>\n      withCaptcha(\n        device.loginToken,\n        me?.needCaptcha,\n        getText,\n        alertAlert,\n        (code) => postGetIncome(type, code)\n      ),\n    icon: Icon.FontAwesome5,\n    iconName: \"money-bill-wave\",\n  });\n\n  const allActions = {\n    casino: () => [\n      {\n        text: getText(\"poker\"),\n        onPress: () => navigation.resetTo(\"Poker\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"poker-chip\",\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"lotto\"),\n        onPress: () => navigation.resetTo(\"Lotto\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"cash-100\",\n        badgeAmount: 0,\n      },\n      bombAction(\"casino\"),\n      takeOverAction(\"casino\"),\n      manageAction(\"casino\"),\n    ],\n    bulletFactory: () => [\n      {\n        text: getText(\"buyBullets\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"factory\",\n        onPress: () => {\n          alertAlert(\n            getText(\"buyBullets\"),\n            getText(\"bulletsText\", city?.bulletFactoryPrice, city?.bullets),\n            [\n              {\n                text: getText(\"ok\"),\n                onPress: (amount) => {\n                  withCaptcha(\n                    device.loginToken,\n                    me?.needCaptcha,\n                    getText,\n                    alertAlert,\n                    async (captcha) => {\n                      setLoading(true);\n                      const { response } = await post(\"buyBullets\", {\n                        loginToken: device.loginToken,\n                        amount,\n                        captcha,\n                      });\n                      setLoading(false);\n                      reloadMe(device.loginToken);\n                      reloadCities();\n                      alertAlert(response, null, null, {\n                        key: \"buyBulletsResponse\",\n                      });\n                    }\n                  );\n                },\n              },\n              {\n                text: getText(\"cancel\"),\n              },\n            ],\n            { key: \"buyBullets\", textInput: true, keyboardType: \"numeric\" }\n          );\n        },\n        badgeAmount: city?.bullets,\n      },\n\n      {\n        text: getText(\"menuGangBulletfactory\"),\n        icon: Icon.FontAwesome,\n        iconName: \"group\",\n        onPress: () => navigation.resetTo(\"GangBulletFactory\"),\n        badgeAmount: 0,\n\n        inactive:\n          !me?.gangId ||\n          (me?.level < 2 &&\n            moment().isBefore(\n              InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE\n            )),\n        isNew: moment().isBefore(\n          moment(InactiveScreens.GANG_BULLET_FACTORY_RELEASE_DATE).add(\n            InactiveScreens.DAYS_NEW,\n            \"days\"\n          )\n        ),\n      },\n      bombAction(\"bulletFactory\"),\n      takeOverAction(\"bulletFactory\"),\n      manageAction(\"bulletFactory\"),\n    ],\n    airport: () => [\n      {\n        text: getText(\"menuAirport\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-airplane\",\n        onPress: () => navigation.resetTo(\"Airport\"),\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuAirplaneShop\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-airplane\",\n        onPress: () => navigation.resetTo(\"AirplaneShop\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"airport\"),\n      takeOverAction(\"airport\"),\n      manageAction(\"airport\"),\n    ],\n\n    bank: () => [\n      {\n        text: getText(\"menuBank\"),\n        icon: Icon.FontAwesome,\n        iconName: \"bank\",\n        onPress: () => navigation.resetTo(\"Bank\"),\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuSwissBank\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"money-bill\",\n        onPress: () => navigation.resetTo(\"SwissBank\"),\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuDonate\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"donate\",\n        onPress: () => navigation.resetTo(\"Donate\"),\n        badgeAmount: 0,\n      },\n\n      bombAction(\"bank\"),\n      takeOverAction(\"bank\"),\n      manageAction(\"bank\"),\n    ],\n\n    hospital: () => [\n      {\n        text: getText(\"menuHospital\"),\n        icon: Icon.Entypo,\n        iconName: \"heart\",\n        onPress: () => navigation.resetTo(\"Hospital\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"hospital\"),\n      takeOverAction(\"hospital\"),\n      manageAction(\"hospital\"),\n    ],\n    house: () => [\n      {\n        text: getText(\"menuStatus\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-stats\",\n        onPress: () => navigation.resetTo(\"Status\"),\n        badgeAmount: 0,\n      },\n      {\n        text: getText(\"menuBunker\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"castle\",\n        onPress: () => navigation.resetTo(\"Bunker\"),\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuSint\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"shoe-formal\",\n        onPress: () => navigation.resetTo(\"Sint\"),\n        badgeAmount: 0,\n        inactive:\n          me?.level < 2 &&\n          !(\n            moment().year() > 2020 &&\n            ((moment().month() === 10 && moment().date() > 15) ||\n              (moment().month() === 11 && moment().date() < 6))\n          ),\n      },\n    ],\n\n    landlord: () => [\n      incomeAction(\"landlord\"),\n      bombAction(\"landlord\"),\n      takeOverAction(\"landlord\"),\n      manageAction(\"landlord\"),\n    ],\n    junkies: () => [\n      incomeAction(\"junkies\"),\n      bombAction(\"junkies\"),\n      takeOverAction(\"junkies\"),\n      manageAction(\"junkies\"),\n    ],\n    rld: () => [\n      incomeAction(\"rld\"),\n      bombAction(\"rld\"),\n      takeOverAction(\"rld\"),\n      manageAction(\"rld\"),\n    ],\n\n    headquarter: () => [\n      {\n        text: getText(\"menuCreateGang\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangCreate\"),\n        badgeAmount: 0,\n        inactive: !!me?.gangId,\n      },\n      {\n        text: getText(\"menuGangSettings\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangSettings\"),\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n\n      {\n        text: getText(\"menuGangShop\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangShop\"),\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n\n      {\n        text: getText(\"menuGangAchievements\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangAchievements\"),\n        badgeAmount: 0,\n        inactive: !me?.gangId,\n      },\n      {\n        inactive:\n          !me?.gangId ||\n          (me?.level < 2 &&\n            moment().isBefore(InactiveScreens.GANG_MISSIONS_RELEASE_DATE)),\n        isNew: moment().isBefore(\n          moment(InactiveScreens.GANG_MISSIONS_RELEASE_DATE).add(\n            InactiveScreens.DAYS_NEW,\n            \"days\"\n          )\n        ),\n        text: getText(\"menuGangMissions\"),\n        icon: Icon.Ionicons,\n        iconName: \"ios-people\",\n        onPress: () => navigation.resetTo(\"GangMissions\"),\n        badgeAmount: 0,\n      },\n    ],\n    gym: () => [\n      {\n        text: getText(\"menuGym\"),\n        icon: Icon.Ionicons,\n        iconName: \"md-fitness\",\n        onPress: () => navigation.resetTo(\"Gym\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"gym\"),\n      takeOverAction(\"gym\"),\n      manageAction(\"gym\"),\n    ],\n    garage: () => [\n      {\n        text: getText(\"menuGarage\"),\n        icon: Icon.FontAwesome,\n        iconName: \"car\",\n        onPress: () => navigation.resetTo(\"Garage\"),\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuRacecars\"),\n        icon: Icon.FontAwesome5,\n        iconName: \"car\",\n        onPress: () => navigation.resetTo(\"Racecars\"),\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"menuGarageShop\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"garage\",\n        onPress: () => navigation.resetTo(\"GarageShop\"),\n        badgeAmount: 0,\n      },\n\n      bombAction(\"garage\"),\n      takeOverAction(\"garage\"),\n      manageAction(\"garage\"),\n    ],\n\n    jail: () => [\n      {\n        text: getText(\"menuJail2\"),\n        icon: Icon.FontAwesome,\n        iconName: \"bars\",\n        onPress: () => navigation.resetTo(\"Jail\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"jail\"),\n      takeOverAction(\"jail\"),\n      manageAction(\"jail\"),\n    ],\n\n    market: () => [\n      {\n        text: getText(\"menuMarket\"),\n        icon: Icon.FontAwesome,\n        iconName: \"handshake-o\",\n        onPress: () => navigation.resetTo(\"Market\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"market\"),\n      takeOverAction(\"market\"),\n      manageAction(\"market\"),\n    ],\n    weaponShop: () => [\n      {\n        text: getText(\"buyWeapons\"),\n        icon: Icon.MaterialCommunityIcons,\n        iconName: \"pistol\",\n        onPress: () => navigation.resetTo(\"WeaponShop\"),\n        badgeAmount: 0,\n      },\n\n      {\n        text: getText(\"buyProtection\"),\n        icon: Icon.FontAwesome,\n        iconName: \"shield\",\n        onPress: () => navigation.resetTo(\"ProtectionShop\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"weaponShop\"),\n      takeOverAction(\"weaponShop\"),\n      manageAction(\"weaponShop\"),\n    ],\n\n    estateAgent: () => [\n      {\n        text: getText(\"menuEstateAgent\"),\n        icon: Icon.FontAwesome,\n        iconName: \"home\",\n        onPress: () => navigation.resetTo(\"EstateAgent\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"estateAgent\"),\n      takeOverAction(\"estateAgent\"),\n      manageAction(\"estateAgent\"),\n    ],\n\n    stockExchange: () => [\n      {\n        text: getText(\"menuStockExchange\"),\n        icon: Icon.Entypo,\n        iconName: \"area-graph\",\n        onPress: () => navigation.resetTo(\"StockExchange\"),\n        badgeAmount: 0,\n      },\n      bombAction(\"stockExchange\"),\n      takeOverAction(\"stockExchange\"),\n      manageAction(\"stockExchange\"),\n    ],\n    area: () => {\n      return [\n        {\n          inactive: !!selectedArea?.userId,\n          text: getText(\"takeOver\"),\n          onPress: async () => {\n            setLoading(true);\n            const { response } = await post(\"takeEmptyArea\", {\n              loginToken: device.loginToken,\n              id: selectedArea?.id,\n            });\n\n            setLoading(false);\n\n            reloadAreas(me?.city);\n            reloadMe(device.loginToken);\n            alertAlert(response, null, null, {\n              key: \"takeEmptyAreaResponse\",\n            });\n          },\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"account-arrow-left\",\n        },\n\n        {\n          inactive:\n            selectedArea?.userId === me?.id || selectedArea?.userId === null,\n          text: getText(\"menuBomb\"),\n          onPress: async () => {\n            const airplanes = [\n              \"\",\n              \"Fokker\",\n              \"Fleet\",\n              \"Havilland\",\n              \"Cessna\",\n              \"Douglas\",\n              \"Lear Jet\",\n              \"Raket\",\n            ];\n\n            alertAlert(\n              getText(\"fillInBombs\"),\n              me?.airplane === 0\n                ? getText(\"bombNoAirplane\")\n                : getText(\n                    \"bombAirplaneText\",\n                    airplanes[me?.airplane],\n                    me?.airplane * 5\n                  ),\n              [\n                {\n                  text: getText(\"ok\"),\n                  onPress: (bombs) => {\n                    withCaptcha(\n                      device.loginToken,\n                      me?.needCaptcha,\n                      getText,\n                      alertAlert,\n                      async (captcha) => {\n                        setLoading(true);\n                        const { response } = await post(\"bombArea\", {\n                          loginToken: device.loginToken,\n                          bombs,\n                          id: connectedArea?.id,\n                          captcha,\n                        });\n                        setLoading(false);\n                        reloadMe(device.loginToken);\n                        alertAlert(response, null, null, {\n                          key: \"bombAreaResponse\",\n                        });\n                        reloadCities();\n                      }\n                    );\n                  },\n                },\n                {\n                  text: getText(\"cancel\"),\n                },\n              ],\n              { key: \"bombArea\", textInput: true, keyboardType: \"numeric\" }\n            );\n          },\n          icon: Icon.FontAwesome,\n          iconName: \"bomb\",\n        },\n\n        {\n          inactive:\n            selectedArea?.userId !== me?.id || selectedArea?.damage === 0,\n          text: getText(\"repair\"),\n          onPress: async () => {\n            setLoading(true);\n            const { response } = await post(\"repairMyArea\", {\n              token: device.loginToken,\n              id: selectedArea?.id,\n            });\n            setLoading(false);\n            reloadAreas(me?.city);\n            reloadMe(device.loginToken);\n            alertAlert(response, null, null, { key: \"repairMyAreaResponse\" });\n          },\n          icon: Icon.AntDesign,\n          iconName: \"tool\",\n        },\n      ];\n    },\n  };\n\n  const statsActions = [\n    {\n      text: getText(\"menuMembers\", me?.online),\n      icon: Icon.FontAwesome,\n      iconName: \"group\",\n      onPress: () => navigation.resetTo(\"Members\"),\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuStats\"),\n      icon: Icon.Entypo,\n      iconName: \"area-graph\",\n      onPress: () => navigation.resetTo(\"Stats\"),\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuGangs\"),\n      icon: Icon.MaterialCommunityIcons,\n      iconName: \"home-group\",\n      onPress: () => navigation.resetTo(\"Gangs\"),\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"prizes\"),\n      icon: Icon.FontAwesome5,\n      iconName: \"award\",\n      onPress: () => navigation.resetTo(\"Prizes\"),\n      badgeAmount: 0,\n    },\n\n    {\n      text: getText(\"menuProperties\"),\n      icon: Icon.FontAwesome5,\n      iconName: \"house-damage\",\n      onPress: () => navigation.resetTo(\"Properties\"),\n      badgeAmount: 0,\n    },\n  ];\n\n  const moreActions = [\n    {\n      text: getText(\"menuSettings\"),\n      icon: Icon.Ionicons,\n      iconName: \"ios-settings\",\n      onPress: () => navigation.resetTo(\"Settings\"),\n    },\n\n    {\n      text: getText(\"menuInfo\"),\n      icon: Icon.Entypo,\n      iconName: \"info\",\n      onPress: () => navigation.resetTo(\"Info\"),\n    },\n\n    {\n      text: getText(\"menuPolice\"),\n      icon: Icon.Foundation,\n      iconName: \"sheriff-badge\",\n      onPress: () => navigation.resetTo(\"Police\"),\n    },\n    {\n      text: getText(\"menuVIP\"),\n      icon: Icon.MaterialIcons,\n      iconName: \"person-add\",\n      onPress: () => navigation.resetTo(\"VIP\"),\n    },\n\n    {\n      text: getText(\"menuForum\"),\n      icon: Icon.MaterialIcons,\n      iconName: \"forum\",\n      onPress: () => navigation.resetTo(\"Forum\"),\n    },\n  ];\n  const actions =\n    view === \"territories\" || view === \"game\"\n      ? selected\n        ? allActions[selected]().filter((x) => !x.inactive)\n        : []\n      : view === \"stats\"\n      ? statsActions\n      : view === \"more\"\n      ? moreActions\n      : [];\n\n  return (\n    actions.length > 0 && (\n      <ScrollView\n        horizontal\n        style={{\n          zIndex: 1,\n          position: \"absolute\",\n          left: 0,\n          bottom: 60,\n          height: 70,\n          flexDirection: \"row\",\n        }}\n      >\n        {actions.map((action, index) => (\n          <View key={`action${index}`}>\n            <TouchableOpacity\n              onPress={() => {\n                requestAnimationFrame(() => {\n                  console.log(\"onPress action\");\n                  action.onPress();\n                });\n              }}\n              style={{\n                width: 70,\n                marginHorizontal: 10,\n                height: 70,\n                borderRadius: 10,\n                backgroundColor: device.theme.secondary,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <action.icon\n                name={action.iconName}\n                size={40}\n                color={device.theme.secondaryText}\n              />\n              <Text\n                style={{\n                  color: device.theme.secondaryText,\n                  fontWeight: \"bold\",\n                  fontSize: 10,\n                }}\n                numberOfLines={1}\n              >\n                {action.text}\n              </Text>\n            </TouchableOpacity>\n            {action.badgeAmount > 0 ? (\n              <View\n                style={{\n                  position: \"absolute\",\n                  right: 0,\n                  top: 0,\n                  backgroundColor: \"red\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderRadius: 10,\n                  minWidth: 20,\n                  height: 20,\n                }}\n              >\n                <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\n                  {action.badgeAmount}\n                </Text>\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </ScrollView>\n    )\n  );\n};\n\nexport default ActionsBar;\n","import React from \"react\";\nimport { TouchableOpacity } from \"react-native\";\n\nconst MapIcon = React.memo(({ view }) => {\n  return (\n    <TouchableOpacity\n      key={`v${view.view}`}\n      hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n      style={{\n        marginBottom: 10,\n        backgroundColor: view.isActive ? \"rgba(0,0,0,0.8)\" : \"rgba(0,0,0,0.4)\",\n        borderRadius: 20,\n        width: 40,\n        height: 40,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n      onPress={view.onPress}\n    >\n      <view.icon name={view.iconName} color=\"white\" size={30} />\n    </TouchableOpacity>\n  );\n});\n\nexport default MapIcon;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport MapIcon from \"./MapIcon\";\nconst BottomTabs = ({\n  view,\n  setSelected,\n  navigation,\n  setView,\n  animateToCity,\n  dragAndDropMode,\n  setDragAndDropMode,\n  level,\n}) => {\n  return (\n    <View\n      style={{\n        zIndex: 2,\n        position: \"absolute\",\n        flexDirection: \"row\",\n        left: 0,\n        right: 0,\n        justifyContent: \"space-around\",\n        bottom: 0,\n      }}\n    >\n      {[\n        {\n          view: \"game\",\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"factory\",\n          isActive: view === \"game\",\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"game\");\n            animateToCity();\n          },\n        },\n        {\n          view: \"crimes\",\n          icon: Icon.MaterialCommunityIcons,\n          iconName: \"pistol\",\n          isActive: view === \"crimes\",\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"crimes\");\n            animateToCity();\n          },\n        },\n        {\n          view: \"territories\",\n          icon: Icon.Ionicons,\n          iconName: \"md-grid\",\n          isActive: view === \"territories\",\n          onPress: () => {\n            setSelected(null);\n            navigation.popToTop();\n            setView(\"territories\");\n            animateToCity();\n          },\n        },\n\n        {\n          view: \"stats\",\n          icon: Icon.Entypo,\n          iconName: \"bar-graph\",\n          isActive: view === \"stats\",\n          onPress: () => {\n            if (view === \"stats\") {\n              navigation.popToTop();\n              setView(\"game\");\n            } else {\n              setSelected(null);\n              setView(\"stats\");\n              navigation.resetTo(\"Members\");\n            }\n          },\n        },\n\n        {\n          view: \"chat\",\n          icon: Icon.Ionicons,\n          iconName: \"ios-chatbubbles\",\n          isActive: view === \"chat\",\n          onPress: () => {\n            if (view === \"chat\") {\n              setView(\"game\");\n              navigation.popToTop();\n            } else {\n              setSelected(null);\n              setView(\"chat\");\n              navigation.resetTo(\"Channels\");\n            }\n          },\n        },\n\n        {\n          view: \"more\",\n          icon: Icon.Entypo,\n          iconName: \"dots-three-horizontal\",\n          isActive: view === \"more\",\n          onPress: () => {\n            if (view === \"more\") {\n              setView(\"game\");\n              navigation.popToTop();\n            } else {\n              setSelected(null);\n              setView(\"more\");\n              navigation.resetTo(\"Settings\");\n            }\n          },\n        },\n\n        level >= 5 && {\n          icon: Icon.Feather,\n          iconName: \"move\",\n          isActive: dragAndDropMode,\n          onPress: () => {\n            setSelected(null);\n            setView(\"game\");\n            setDragAndDropMode(!dragAndDropMode);\n          },\n        },\n      ]\n        .filter((x) => !!x)\n        .map((v, index) => (\n          <MapIcon key={`icon${index}`} view={v} />\n        ))}\n    </View>\n  );\n};\n\nexport default BottomTabs;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\n\nconst Modal = ({ view, navigation, setView, children }) => {\n  const theme = useSelector((state) => state.device.theme);\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        top: view === \"territories\" ? 180 : view === \"game\" ? 130 : 110,\n        bottom: view === \"chat\" ? 70 : 140,\n        left: 5,\n        right: 5,\n        backgroundColor: `${theme.primary}CC`,\n        borderRadius: 10,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {navigation.state.history.length > 1 ? (\n          <TouchableOpacity\n            hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n            onPress={() => {\n              navigation.goBack();\n            }}\n          >\n            <Icon.AntDesign\n              name=\"arrowleft\"\n              size={32}\n              color={theme.secondaryText}\n            />\n          </TouchableOpacity>\n        ) : (\n          <View />\n        )}\n\n        <TouchableOpacity\n          hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}\n          onPress={() => {\n            if (\n              view !== \"game\" &&\n              view !== \"territories\" &&\n              view !== \"crimes\"\n            ) {\n              setView(\"game\");\n            }\n\n            navigation.popToTop();\n          }}\n        >\n          <Icon.AntDesign name=\"close\" size={32} color={theme.secondaryText} />\n        </TouchableOpacity>\n      </View>\n      {children}\n    </View>\n  );\n};\n\nexport default Modal;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Platform,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { RefreshControl } from \"react-native-web-refresh-control\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport styles from \"../Style\";\nimport {\n  darkerHex,\n  doOnce,\n  get,\n  getTextFunction,\n  numberFormat,\n  post,\n} from \"../Util\";\n\nconst { height, width } = Dimensions.get(\"window\");\n\nconst SIZE = 250;\nconst MARGIN = 20;\n\nconst Market = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [loading, setLoading] = useState(false);\n  const [market, setMarket] = useState([]);\n\n  //new offer\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [buy, setBuy] = useState(false);\n  const [type, setType] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const getMarket = async () => {\n    setLoading(true);\n\n    const { market } = await get(`market`);\n    setLoading(false);\n    setMarket(market);\n  };\n\n  const postMarketCreateOffer = async () => {\n    setLoading(true);\n    const { response } = await post(\"marketCreateOffer\", {\n      token: device.loginToken,\n      type,\n      price,\n      amount,\n      buy,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  const postMarketTransaction = async (offerId) => {\n    setLoading(true);\n    const { response } = await post(\"marketTransaction\", {\n      token: device.loginToken,\n      offerId,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  const postMarketRemoveOffer = async (offerId) => {\n    setLoading(true);\n    const { response } = await post(\"marketRemoveOffer\", {\n      token: device.loginToken,\n      offerId,\n    });\n    setLoading(false);\n    setResponse(response);\n    reloadMe(device.loginToken);\n    getMarket();\n  };\n\n  doOnce(getMarket);\n\n  const chooseType = () => {\n    // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n    const validTypes = [\"junkies\", \"hoeren\", \"wiet\", \"gamepoints\", \"bullets\"];\n\n    const options = validTypes.map((type) => getText(type));\n\n    options.push(getText(\"cancel\"));\n    const destructiveButtonIndex = undefined;\n    const cancelButtonIndex = options.length - 1;\n\n    showActionSheetWithOptions(\n      {\n        options,\n        cancelButtonIndex,\n        destructiveButtonIndex,\n      },\n      (buttonIndex) => {\n        if (buttonIndex < validTypes.length) {\n          setType(validTypes[buttonIndex]);\n        }\n        // Do something here depending on the button index selected\n      }\n    );\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flexDirection: \"row\" }}>\n        {response && <T>{response}</T>}\n      </View>\n\n      <View style={{ flex: 1 }}>\n        {/* New offer */}\n\n        <View style={{ marginVertical: 20 }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Button\n              title={buy ? getText(\"buy\") : getText(\"sell\")}\n              onPress={() => setBuy(!buy)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={amount}\n              onChangeText={setAmount}\n              placeholder={getText(\"amount\")}\n            />\n\n            <Button\n              title={type ? getText(type) : getText(\"whatType\")}\n              onPress={chooseType}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n\n            <T style={{ marginLeft: 10 }}>{getText(\"for\")}</T>\n\n            <TextInput\n              placeholderTextColor={theme.secondaryTextSoft}\n              style={[styles(theme).textInput, { marginLeft: 10 }]}\n              value={price}\n              onChangeText={setPrice}\n              placeholder={getText(\"price\")}\n            />\n\n            <Button\n              title={getText(\"submit\")}\n              onPress={() => postMarketCreateOffer(true)}\n              style={{ flex: 1, marginVertical: 10, marginLeft: 10 }}\n            />\n          </View>\n        </View>\n\n        <FlatList\n          refreshControl={\n            <RefreshControl refreshing={loading} onRefresh={getMarket} />\n          }\n          data={market}\n          numColumns={\n            Platform.OS === \"web\"\n              ? undefined\n              : Math.floor(width / (SIZE + MARGIN * 2))\n          }\n          contentContainerStyle={\n            Platform.OS === \"web\"\n              ? { flexDirection: \"row\", flexWrap: \"wrap\" }\n              : undefined\n          }\n          keyExtractor={(item, index) => `offer${index}`}\n          renderItem={({ item, index }) => {\n            return (\n              <View\n                style={{\n                  width: SIZE,\n                  backgroundColor: darkerHex(theme.primary),\n                  borderRadius: 15,\n                  padding: MARGIN,\n                  margin: MARGIN,\n                }}\n              >\n                {item.userId === me?.id && (\n                  <TouchableOpacity\n                    style={{ alignSelf: \"flex-end\" }}\n                    onPress={() => postMarketRemoveOffer(item.id)}\n                  >\n                    <Entypo name=\"cross\" color={theme.primaryText} size={24} />\n                  </TouchableOpacity>\n                )}\n                <View style={{ flex: 1 }}>\n                  <T>\n                    {item.isBuy ? getText(\"requested\") : getText(\"forSale\")}\n                  </T>\n                </View>\n\n                <User navigation={navigation} user={item.user} />\n\n                <T>\n                  {item.amount} {getText(item.type)}\n                </T>\n                <T>€{numberFormat(item.price)},-</T>\n\n                <Button\n                  title={item.isBuy ? getText(\"sell\") : getText(\"buy\")}\n                  onPress={() => postMarketTransaction(item.id)}\n                />\n              </View>\n            );\n          }}\n        />\n\n        <View style={{ height: 80 }} />\n      </View>\n    </View>\n  );\n};\n\nexport default Market;\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nconst MollieComplete = ({\n  screenProps: {\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text style={{ color: theme.primaryText }}>\n        {getText(\"thanksForPayment\")}\n      </Text>\n    </View>\n  );\n};\n\nexport default MollieComplete;\n","import React, { useState } from \"react\";\nimport { Image, ScrollView, View } from \"react-native\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Gang from \"../components/Gang\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction } from \"../Util\";\n\nconst AdminUserWatch = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [gangs, setGangs] = useState([]);\n  const getGangs = async () => {\n    const { gangs } = await get(\"police\");\n    setGangs(gangs);\n  };\n  doOnce(getGangs);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      {/* show all people with level >2 */}\n      <Image\n        source={require(\"../../assets/politie.jpeg\")}\n        style={{ width: 400, height: 300 }}\n      />\n      <T>{getText(\"policeInfo\")}</T>\n\n      <T bold style={{ marginTop: 20 }}>\n        {getText(\"currentPolice\")}\n      </T>\n      {gangs.map((gang) => {\n        return (\n          <View style={{ flex: 1 }}>\n            <Grid style={{ marginTop: 20 }}>\n              <Col>\n                <Gang gang={gang} navigation={navigation} />\n              </Col>\n\n              <Col style={{ justifyContent: \"center\" }}>\n                <T>\n                  {gang.bullets} {getText(\"bullets\")}\n                </T>\n              </Col>\n            </Grid>\n            {gang.users.map((user) => (\n              <Grid style={{ marginTop: 10 }}>\n                <Col>\n                  <User navigation={navigation} user={user} size={40} />\n                </Col>\n              </Grid>\n            ))}\n          </View>\n        );\n      })}\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default AdminUserWatch;\n","import React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Menu from \"../components/Menu\";\nimport { getTextFunction, post } from \"../Util\";\n\nconst Settings = ({\n  navigation,\n  screenProps: {\n    dispatch,\n    me,\n    reloadMe,\n    device,\n    device: { theme },\n  },\n}) => {\n  const alertAlert = React.useContext(AlertContext);\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView>\n      {/* {Platform.OS !== \"web\" && (\n          <Menu\n            theme={theme}\n            theme={theme}\n            IconFont=\"Ionicons\"\n            icon=\"ios-notifications\"\n            navigation={navigation}\n            title=\"Notificaties\"\n            to=\"Notifications\"\n          />\n        )} */}\n\n      {__DEV__ && (\n        <Menu\n          theme={theme}\n          theme={theme}\n          IconFont=\"Ionicons\"\n          icon=\"ios-notifications\"\n          navigation={navigation}\n          title={getText(\"purge\")}\n          onPress={() =>\n            alertAlert(\n              getText(\"areYouSure\"),\n              getText(\"areYouSure\"),\n              [\n                {\n                  text: getText(\"ok\"),\n                  onPress: () => dispatch({ type: \"PURGE\" }),\n                },\n                {\n                  text: getText(\"cancel\"),\n                },\n              ],\n              { key: \"purge\" }\n            )\n          }\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        IconFont=\"Entypo\"\n        icon=\"phone\"\n        navigation={navigation}\n        title={getText(\"verifyPhone\")}\n        to=\"VerifyPhone\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuChangePassword\")}\n        to=\"ChangePassword\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"onepassword\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"signupEmail\")}\n        to=\"SignupEmail\"\n        IconFont=\"Entypo\"\n        icon=\"email\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"changeName\")}\n        to=\"ChangeName\"\n        IconFont=\"FontAwesome\"\n        icon=\"bank\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"layout\")}\n        to=\"Theme\"\n        IconFont=\"Ionicons\"\n        icon=\"ios-color-palette\"\n      />\n\n      {me?.level >= 2 && (\n        <Menu\n          theme={theme}\n          navigation={navigation}\n          title={`Turn ${me?.newVersion ? \"off\" : \"on\"} new version`}\n          IconFont=\"Entypo\"\n          icon=\"new\"\n          onPress={async () => {\n            const { response } = await post(\"updateProfile\", {\n              loginToken: device.loginToken,\n              newVersion: !me?.newVersion,\n            });\n            reloadMe(device.loginToken);\n            alert(response);\n          }}\n        />\n      )}\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuLogin\")}\n        IconFont=\"Entypo\"\n        icon=\"login\"\n        onPress={() => dispatch({ type: \"SET_LOGGED\", value: false })}\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuMyProfile\")}\n        to=\"MyProfile\"\n        IconFont=\"AntDesign\"\n        icon=\"user\"\n      />\n\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuBackfire\")}\n        to=\"Backfire\"\n        IconFont=\"MaterialCommunityIcons\"\n        icon=\"pistol\"\n      />\n      <Menu\n        theme={theme}\n        navigation={navigation}\n        title={getText(\"menuAccomplice\")}\n        to=\"Accomplice\"\n        IconFont=\"FontAwesome\"\n        icon=\"universal-access\"\n      />\n    </ScrollView>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Info from \"./Info\";\nimport Police from \"./Police\";\nimport Settings from \"./Settings\";\nconst More = (props) => {\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  const tabs = [\n    {\n      key: \"settings\",\n      title: getText(\"menuSettings\"),\n      component: Settings,\n    },\n    {\n      key: \"info\",\n      title: getText(\"menuInfo\"),\n      component: Info,\n    },\n    {\n      key: \"police\",\n      title: getText(\"menuPolice\"),\n      component: Police,\n    },\n  ];\n\n  const [tab, setTab] = useState(tabs[0].key);\n  const Component = tabs.find((t) => t.key === tab).component;\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1 }}>\n        <Component {...props} />\n      </View>\n      <Tabs\n        tabs={tabs.map((t) => ({\n          title: t.title,\n          isActive: tab === t.key,\n          onPress: () => setTab(t.key),\n        }))}\n      />\n    </View>\n  );\n};\nexport default More;\n","import * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmallDevice = width < 800;\n\nconst MyProfile = ({\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n    reloadMe,\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [photo, setPhoto] = useState(null);\n  const [image, setImage] = useState(me?.image);\n\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [bio, setBio] = useState(me?.bio || \"\");\n\n  doOnce(() => {\n    getPermissionAsync();\n    fetchImages();\n  });\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${me.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleChooseImage = async () => {\n    await getPermissionAsync();\n\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        // console.log(Object.keys(result));\n        setImage(\n          result.base64\n            ? `data:image/${result.type};base64,${result.base64}`\n            : result.uri //web has the base64 in the uri\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleUploadPhoto = (pic) => {\n    fetch(`${Constants.SERVER_ADDR}/upload`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        image: pic.uri,\n        token: device.loginToken,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        fetchImages();\n        alert(getText(\"success\"));\n        setPhoto(null);\n      })\n      .catch((error) => {\n        console.log(\"upload error\", error);\n        alert(getText(\"somethingWentWrong\"));\n      });\n  };\n\n  const getPermissionAsync = async () => {\n    if (Platform.OS === \"ios\" || Platform.OS === \"android\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        base64: true,\n        quality: 1,\n      });\n\n      console.log(\"result\", result);\n\n      if (!result.cancelled) {\n        setPhoto(result);\n        handleUploadPhoto(result);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderItem = ({ item, index }) => {\n    const uri = Constants.SERVER_ADDR + \"/\" + item.image;\n    return (\n      <TouchableOpacity onPress={() => setSelectedImage(item.id)}>\n        <View>\n          <Image\n            source={{ uri }}\n            style={{\n              width: 200,\n              height: 200,\n              ...(selectedImage === item.id\n                ? { borderWidth: 2, borderColor: \"black\" }\n                : {}),\n            }}\n            resizeMode=\"contain\"\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderFooter = () => {\n    return (\n      <Button\n        title={getText(\"delete\")}\n        onPress={() => {\n          if (selectedImage) {\n            fetch(`${Constants.SERVER_ADDR}/deleteimage`, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                token: device.loginToken,\n                id: selectedImage,\n              }),\n            })\n              .then((response) => response.json())\n              .then(({ images }) => {\n                fetchImages();\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } else {\n            alert(getText(\"noPictureSelected\"));\n          }\n        }}\n      />\n    );\n  };\n\n  return (\n    <ScrollView\n      style={{\n        flex: 1,\n        margin: 20,\n      }}\n    >\n      <TouchableOpacity onPress={handleChooseImage}>\n        {image ? (\n          <Image\n            source={{\n              uri: image.includes(\"data:image\")\n                ? image\n                : Constants.SERVER_ADDR + image,\n            }}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <Image\n            source={require(\"../../assets/icon.png\")}\n            style={{ width: 200, height: 200 }}\n            resizeMode=\"cover\"\n          />\n        )}\n      </TouchableOpacity>\n\n      <TextInput\n        placeholderTextColor={theme.secondaryTextSoft}\n        style={[style(theme).textInput, { width: \"100%\", height: 200 }]}\n        multiline={true}\n        numberOfLines={4}\n        value={bio}\n        onChangeText={(x) => setBio(x)}\n      />\n      <Button\n        title={getText(\"save\")}\n        style={{ marginVertical: 20 }}\n        onPress={() => {\n          fetch(`${Constants.SERVER_ADDR}/updateProfile`, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              bio: bio,\n              image,\n              loginToken: device.loginToken,\n            }),\n          })\n            .then((response) => response.json())\n            .then((response) => {\n              alert(getText(\"success\"));\n              reloadMe(device.loginToken);\n            })\n            .catch((error) => {\n              console.log(\"upload error\", error);\n              alert(getText(\"somethingWentWrong\"));\n            });\n        }}\n      />\n\n      <Button\n        style={{ marginVertical: 20 }}\n        title={getText(\"choosePicture\")}\n        onPress={handleChoosePhoto}\n      />\n\n      {images.map((image, index) => renderItem({ item: image, index }))}\n\n      {renderFooter()}\n    </ScrollView>\n  );\n};\n\nexport default MyProfile;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Oc = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    ocs,\n    reloadOcs,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(() => reloadOcs(loginToken));\n  doOnce(fetchRacecars);\n\n  const join = async (ocId) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadOcs(loginToken);\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (ocId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    reloadOcs(loginToken);\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (ocId) => {\n    setLoading(true);\n    const { response } = await post(\"startOc\", {\n      loginToken,\n      ocId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadOcs(loginToken);\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n        <Image\n          source={\n            item.type === \"bank\"\n              ? require(\"../../assets/bank.jpg\")\n              : item.type === \"cars\"\n              ? require(\"../../assets/cars.jpeg\")\n              : require(\"../../assets/shootout.jpeg\")\n          }\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.ocParticipants.length}/\n            {item.numParticipants}\n          </T>\n          {item.ocParticipants.length > 0 && (\n            <T>{item.ocParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          <View style={{ flexDirection: \"row\" }}>\n            {!!item.ocParticipants.find((x) => x.name === me?.name) ? (\n              item.ocParticipants.length === item.numParticipants ? (\n                <Button\n                  theme={theme}\n                  title={getText(\"startCTA\")}\n                  onPress={() => start(item.id)}\n                />\n              ) : (\n                <Button\n                  theme={theme}\n                  title={getText(\"leaveCTA\")}\n                  onPress={() => leave(item.id)}\n                />\n              )\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"participate\")}\n                onPress={() => {\n                  join(item.id);\n                }}\n              />\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity onPress={() => navigation.navigate(\"CreateOc\")}>\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadOcs(loginToken);\n              setResponse(null);\n            }}\n          />\n        }\n        data={ocs}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Oc;\n","import React, { useState } from \"react\";\nimport { ScrollView, StyleSheet, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport style from \"../Style\";\nimport { getTextFunction, post } from \"../Util\";\nconst Poker = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [response, setResponse] = useState(null);\n  const [amount, setAmount] = useState(\"\");\n\n  const poker = async () => {\n    const { response } = await post(\"poker\", {\n      loginToken: device.loginToken,\n      amount,\n    });\n\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n          <View>\n            <TextInput\n              style={{ ...style(theme).textInput, flex: 1 }}\n              placeholder={getText(\"amount\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              value={amount}\n              onChangeText={(amount) => setAmount(amount)}\n            />\n\n            <Button\n              theme={theme}\n              title={getText(\"gamble\")}\n              onPress={() => poker()}\n              style={{ width: 80 }}\n            />\n          </View>\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\nexport default Poker;\n","import React from \"react\";\n// import MarkdownView from \"react-native-markdown-renderer\";\nimport { Linking, ScrollView, Text, View } from \"react-native\";\n\nconst Config = { name: \"MasterCrimeZ\" };\n\n/**\n * A Privacy page\n */\nconst PrivacyPage = ({\n  navigation,\n  screenProps: {\n    device: { theme },\n  },\n}) => {\n  return (\n    <ScrollView style={{ alignItems: \"center\" }}>\n      <View style={{ margin: 20 }}>\n        <Text\n          style={{ color: theme.primaryText }}\n          onLinkPress={(link) => {\n            console.log(\"presslink\", link);\n            Linking.openURL(link);\n          }}\n        >\n          {`${Config.name} built their apps as a freemium app. This SERVICE is\nprovided by ${Config.name} and is intended for use as is.\n\\n\\n\nThis page is used to inform website visitors regarding my policies with\nthe collection, use, and disclosure of Personal Information if anyone\ndecided to use my Services.\n\\n\\n\nIf you choose to use my Service, then you agree to the collection and use\nof information in relation with this policy. The Personal Information that\nI collect are used for providing and improving the Service. I will not use\nor share your information with anyone except as described in this Privacy\nPolicy.\n\\n\\n\nThe terms used in this Privacy Policy have the same meanings as in our\nTerms and Conditions, unless otherwise defined in this Privacy Policy.\n\\n\\nInformation Collection and Use\n\\n\\nFor a better experience while using our Service, I may require you to\nprovide us with certain personally identifiable information, including but\nnot limited to users name, address, location, pictures.\n\\n\\nThe information that I request is will be retained by us and used as\ndescribed in this privacy policy.\n\\n\\nThe app does use third party services that may collect information used to\nidentify you.\n\\n\\nLog Data\n\\n\\nI want to inform you that whenever you use my Service, in case of an error\nin the app I collect data and information (through third party products)\non your phone called Log Data. This Log Data may include information such\nas your devices’s Internet Protocol (“IP”) address, device name, operating\nsystem version, configuration of the app when utilising my Serice, the\ntime and date of your use of the Service, and other statistics.\n\\n\\nCookies\n\\n\\nCookies are files with small amount of data that is commonly used an\nanonymous unique identifier. These are sent to your browser from the\nwebsite that you visit and are stored on your devices’s internal memory.\n\\n\\nThis Services does not uses these “cookies” explicitly. However, the app\nmay use third party code and libraries that use “cookies” to collection\ninformation and to improve their services. You have the option to either\naccept or refuse these cookies, and know when a cookie is being sent to\nyour device. If you choose to refuse our cookies, you may not be able to\nuse some portions of this Service.\n\\n\\nService Providers\n\\n\\nI may employ third-party companies and individuals due to the following\nreasons:\n\\n\\nTo facilitate our Service; To provide the Service on our behalf; To\nperform Service-related services; or To assist us in analyzing how our\nService is used. I want to inform users of this Service that these third\nparties have access to your Personal Information. The reason is to perform\nthe tasks assigned to them on our behalf. However, they are obligated not\nto disclose or use the information for any other purpose.\n\\n\\nSecurity\n\\n\\nI value your trust in providing us your Personal Information, thus we are\nstriving to use commercially acceptable means of protecting it. But\nremember that no method of transmission over the internet, or method of\nelectronic storage is 100% secure and reliable, and I cannot guarantee its\nabsolute security.\n\\n\\nLinks to Other Sites\n\\n\\nThis Service may contain links to other sites. If you click on a\nthird-party link, you will be directed to that site. Note that these\nexternal sites are not operated by me. Therefore, I strongly advise you to\nreview the Privacy Policy of these websites. I have no control over, and\nassume no responsibility for the content, privacy policies, or practices\nof any third-party sites or services.\n\\n\\nChildren’s Privacy\n\\n\\nThis Services do not address anyone under the age of 13. I do not\nknowingly collect personal identifiable information from children under\n13. In the case I discover that a child under 13 has provided me with\npersonal information, I immediately delete this from our servers. If you\nare a parent or guardian and you are aware that your child has provided us\nwith personal information, please contact me so that I will be able to do\nnecessary actions.\n\\n\\nChanges to This Privacy Policy\n\\n\\nI may update our Privacy Policy from time to time. Thus, you are advised\nto review this page periodically for any changes. I will notify you of any\nchanges by posting the new Privacy Policy on this page. These changes are\neffective immediately, after they are posted on this page.\n\\n\\nContact Us\n\\n\\nIf you have any questions or suggestions about my Privacy Policy, do not\nhesitate to contact me\n\\n\\n`}\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\nexport default PrivacyPage;\n","// import color from \"markdown-it-color-text\";\nimport center from \"markdown-it-center-text\";\nimport emoji from \"markdown-it-emoji\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Image,\n  Linking,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Markdown, { MarkdownIt } from \"react-native-markdown-display\";\nimport { AlertContext } from \"../components/AlertProvider\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport {\n  doOnce,\n  get,\n  getRank,\n  getStrength,\n  getTextFunction,\n  getUserColor,\n  post,\n} from \"../Util\";\n\nconst markdownItInstance = MarkdownIt({ typographer: true })\n  // .use(taskLists)\n  .use(emoji)\n  .use(center);\n// .use(color);\n\nconst Bio = React.memo(({ bio, theme }) => {\n  return (\n    <Markdown\n      debugPrintTree\n      markdownit={markdownItInstance}\n      style={{ body: { color: theme.primaryText } }}\n      rules={{\n        blocklink: (node, children, parent, styles) => {\n          return (\n            <TouchableOpacity\n              key={node.key}\n              onPress={() => {\n                if (Platform.OS == \"web\") {\n                  window.open(node.attributes.href, \"_blank\");\n                } else {\n                  Linking.openURL(node.attributes.href); // normal Linking react-native\n                }\n              }}\n            >\n              {children}\n            </TouchableOpacity>\n          );\n        },\n\n        image: (node, children, parent, styles) => {\n          const [width, setWidth] = useState(0);\n          const [height, setHeight] = useState(0);\n          Image.getSize(node.attributes.src, (width, height) => {\n            setWidth(width);\n            setHeight(height);\n          });\n\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <Image\n              key={node.key}\n              source={{ uri: node.attributes.src }}\n              style={{ width: width, height: height }}\n              resizeMode=\"contain\"\n            />\n          );\n        },\n\n        emoji: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return <Text key={node.key}>{node.content}</Text>;\n        },\n\n        centertext: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View\n              key={node.key}\n              style={{\n                flex: 1,\n                alignItems: \"center\",\n              }}\n            >\n              {children}\n            </View>\n          );\n        },\n\n        paragraph: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View key={node.key} style={{ flex: 1 }}>\n              {children}\n            </View>\n          );\n        },\n\n        textgroup: (node, children, parent, styles) => {\n          // examine the node properties to see what video we need to render\n          // console.log(node); // expected output of this is in readme.md below this code snip\n\n          return (\n            <View key={node.key} style={{ flex: 1 }}>\n              {children}\n            </View>\n          );\n        },\n      }}\n    >\n      {bio}\n    </Markdown>\n  );\n});\nconst ProfileScreen = ({\n  navigation,\n  navigation: {\n    state: { params },\n  },\n  screenProps: {\n    device,\n    me,\n    cities,\n    reloadCities,\n    device: { theme, loginToken },\n  },\n}) => {\n  const [profile, setProfile] = useState({});\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const name = params?.name;\n  const getText = getTextFunction(me?.locale);\n\n  doOnce(() => {\n    getProfile(name);\n  });\n  doOnce(reloadCities);\n\n  useEffect(() => {\n    getProfile(name);\n  }, [params?.name]);\n\n  useEffect(() => {\n    fetchImages();\n  }, [profile?.id]);\n\n  const postReport = async () => {\n    const { response } = await post(\"report\", {\n      token: device.loginToken,\n      userId: profile?.id,\n      ban: \"reported\",\n      banReason: \"profile\",\n    });\n\n    setResponse(response);\n  };\n\n  const getProfile = (name) => {\n    setLoading(true);\n    return fetch(`${Constants.SERVER_ADDR}/profile?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(async (responseJson) => {\n        setProfile(responseJson);\n        setLoading(false);\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const keyValue = (key, value) => {\n    return (\n      <View style={styles.row}>\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  };\n\n  const fetchImages = () => {\n    fetch(\n      `${Constants.SERVER_ADDR}/listimages?token=${device.loginToken}&uid=${profile?.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then(({ images }) => {\n        setImages(images);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (loading) {\n    return <ActivityIndicator />;\n  }\n\n  if (!profile) {\n    return <T>{getText(\"personDoesntExist\")}</T>;\n  }\n\n  const isOnline = Date.now() - profile?.onlineAt < 300000;\n\n  const color = getUserColor(profile, device.theme);\n\n  const uri = Constants.SERVER_ADDR + profile?.image;\n  const hasImage = !!profile?.image;\n\n  const properties = [\n    {\n      name: \"bulletFactory\",\n    },\n    {\n      name: \"casino\",\n    },\n    {\n      name: \"rld\",\n    },\n    {\n      name: \"landlord\",\n    },\n    {\n      name: \"junkies\",\n    },\n    {\n      name: \"weaponShop\",\n    },\n    {\n      name: \"airport\",\n    },\n    {\n      name: \"estateAgent\",\n    },\n    {\n      name: \"garage\",\n    },\n    {\n      name: \"jail\",\n    },\n    {\n      name: \"bank\",\n    },\n  ];\n\n  const PROFESSIONS = [\n    { type: \"thief\", image: require(\"../../assets/profession/thief.jpg\") },\n    {\n      type: \"carthief\",\n      image: require(\"../../assets/profession/carthief.jpg\"),\n    },\n    {\n      type: \"weedgrower\",\n      image: require(\"../../assets/profession/weedgrower.jpg\"),\n    },\n    { type: \"killer\", image: require(\"../../assets/profession/killer.jpg\") },\n    { type: \"pimp\", image: require(\"../../assets/profession/pimp.jpg\") },\n    { type: \"banker\", image: require(\"../../assets/profession/banker.jpg\") },\n    {\n      type: \"jailbreaker\",\n      image: require(\"../../assets/profession/jailbreaker.jpg\"),\n    },\n  ];\n  const profession = profile?.profession\n    ? PROFESSIONS.find((p) => p.type === profile.profession)\n    : null;\n\n  const professionReleaseDate = moment(\"15/03/2021\", \"DD/MM/YYYY\").set(\n    \"hour\",\n    17\n  );\n  const alertAlert = React.useContext(AlertContext);\n\n  return (\n    <ScrollView>\n      <View style={{ justifyContent: \"center\" }}>\n        <View\n          style={{\n            backgroundColor: \"#444\",\n            borderRadius: 10,\n            margin: 20,\n            padding: 20,\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color }}>{profile?.name}</Text>\n\n          {response && <T>{response}</T>}\n          {hasImage ? (\n            <View>\n              <Image\n                source={{ uri }}\n                style={{\n                  width: \"100%\",\n                  height: 400,\n                }}\n                resizeMode=\"contain\"\n              />\n            </View>\n          ) : null}\n\n          {profile?.gang ? (\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"Gang\", { name: profile?.gang?.name });\n              }}\n            >\n              <T>Gang</T>\n              {profile?.gang?.image && (\n                <Image\n                  source={{ uri: Constants.SERVER_ADDR + profile?.gang?.image }}\n                  style={{ width: 200, height: 200 }}\n                  resizeMode=\"contain\"\n                />\n              )}\n              <T>{profile?.gang?.name}</T>\n            </TouchableOpacity>\n          ) : null}\n\n          {profession && moment().isAfter(professionReleaseDate) && (\n            <View style={{ width: 100, margin: 20 }}>\n              <Image\n                source={profession.image}\n                style={{ width: 100, height: 100 }}\n                resizeMode=\"contain\"\n              />\n              <View>\n                <T bold>{getText(profession.type)}</T>\n              </View>\n            </View>\n          )}\n\n          {keyValue(getText(\"online\"), isOnline ? \"✅\" : \"🛑\")}\n          {keyValue(\n            getText(\"lastOnline\"),\n            moment(profile?.onlineAt).format(\"DD-MM-YYYY\")\n          )}\n          {keyValue(getText(\"cash\"), `€${profile?.cash}`)}\n          {keyValue(getText(\"bank\"), `€${profile?.bank}`)}\n          {keyValue(getText(\"rank\"), getRank(profile?.rank, \"both\"))}\n          {keyValue(\n            getText(\"strength\"),\n            getStrength(profile?.strength, \"both\")\n          )}\n          {keyValue(getText(\"health\"), `${profile?.health}%`)}\n          {keyValue(getText(\"weed\"), profile?.wiet)}\n          {keyValue(getText(\"junkies\"), profile?.junkies)}\n          {keyValue(getText(\"prostitutes\"), profile?.hoeren)}\n\n          <T bold>{getText(\"properties\")}</T>\n          {properties\n            .map((p) => p.name)\n            .map((property) => {\n              return (\n                cities &&\n                cities.map((city, index) => {\n                  const ownerKey = `${property}Owner`;\n                  if (profile?.name === city[ownerKey]) {\n                    return (\n                      <T>\n                        {getText(property)} in {city.city}\n                      </T>\n                    );\n                  }\n\n                  return null;\n                })\n              );\n            })}\n\n          <View style={styles.row}>\n            <Button\n              title={getText(\"chat\")}\n              onPress={async () => {\n                const { id } = await get(\n                  `pm?loginToken=${loginToken}&userId=${profile.id}`\n                );\n\n                navigation.navigate(\"Channel\", { id });\n              }}\n            />\n\n            <Button\n              title={getText(\"rob\")}\n              onPress={() =>\n                navigation.navigate(\"Rob\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"attack\")}\n              onPress={() =>\n                navigation.navigate(\"Kill\", {\n                  name: profile.name,\n                })\n              }\n            />\n            <Button\n              title={getText(\"donate\")}\n              onPress={() =>\n                navigation.navigate(\"Donate\", {\n                  to: profile.name,\n                })\n              }\n            />\n\n            <Button\n              title={getText(\"report\")}\n              onPress={() =>\n                alertAlert(\n                  getText(\"areYouSure\"),\n                  getText(\"areYouSure\"),\n                  [\n                    { text: getText(\"ok\"), onPress: () => postReport() },\n                    { text: getText(\"cancel\") },\n                  ],\n                  { key: \"postReport\" }\n                )\n              }\n            />\n          </View>\n        </View>\n\n        <View style={{ marginVertical: 20 }}>\n          {profile?.ban !== \"shadowBanned\" && profile?.ban !== \"banned\" && (\n            <Bio theme={theme} bio={profile?.bio} />\n          )}\n        </View>\n\n        <View>\n          {images.map((image) => {\n            const uri = Constants.SERVER_ADDR + \"/\" + image.image;\n            return (\n              <View>\n                <Image\n                  source={{ uri }}\n                  style={{\n                    width: \"100%\",\n                    height: 400,\n                  }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n            );\n          })}\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"center\",\n  },\n});\n\nexport default ProfileScreen;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst ProtectionShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"protection\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default ProtectionShop;\n","import React from \"react\";\nimport { Text, TextInput, TouchableOpacity, View } from \"react-native\";\nimport md5 from \"react-native-md5\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nclass RecoverPassword extends React.Component {\n  state = {\n    password1: \"\",\n    password2: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { me } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    const { password1, password2 } = this.state;\n\n    const { token } = this.props.navigation.state.params;\n\n    if (!token) {\n      this.setState({ error: getText(\"noToken\") });\n      return;\n    }\n    if (password1 !== password2) {\n      this.setState({ error: getText(\"passwordsDontMatch\") });\n      return;\n    }\n\n    fetch(`${Constants.SERVER_ADDR}/forgotPassword2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password: md5.str_md5(password1), token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: { me },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            backgroundColor: \"#CCC\",\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"newPassword\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password1) => this.setState({ password1 })}\n              value={this.state.password1}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"repeat\")}</Text>\n\n            <TextInput\n              secureTextEntry\n              onChangeText={(password2) => this.setState({ password2 })}\n              value={this.state.password2}\n              style={{ backgroundColor: \"white\", fontSize: 20 }}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <TouchableOpacity\n              style={{\n                backgroundColor: \"blue\",\n                paddingHorizontal: 30,\n                padding: 10,\n                borderRadius: 30,\n              }}\n              onPress={() => this.login()}\n            >\n              <Text style={{ fontSize: 20, color: \"white\" }}>\n                {getText(\"reset\")}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default RecoverPassword;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst Reports = ({\n  navigation,\n  screenProps: {\n    device,\n    me,\n    reloadMe,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const [reports, setReports] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [banReason, setBanReason] = useState(\"\");\n\n  const postReport = async (ban, userId) => {\n    const { response } = await post(\"report\", {\n      token: device.loginToken,\n      userId,\n      ban,\n      banReason,\n    });\n\n    setResponse(response);\n    getReports();\n  };\n\n  const getReports = async () => {\n    const { reports } = await get(`reports?token=${device.loginToken}`);\n    setReports(reports);\n  };\n\n  doOnce(getReports);\n\n  console.log(\"reports\", reports);\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <View style={{ flex: 1, margin: 20 }}>\n        <View>\n          {response ? <T>{response}</T> : null}\n\n          {reports?.map?.((user) => (\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <User user={user} size={40} navigation={navigation} />\n\n              <View style={{ flexDirection: \"row\" }}>\n                <T>{getText(user.ban)}</T>\n                <T>\n                  {getText(\"reason\")}: {user.banReason}\n                </T>\n                <Button\n                  title={getText(\"ban\")}\n                  onPress={() => postReport(\"banned\", user.id)}\n                />\n                <Button\n                  title={getText(\"shadowBan\")}\n                  onPress={() => postReport(\"shadowBanned\", user.id)}\n                />\n                <TouchableOpacity onPress={() => postReport(\"none\", user.id)}>\n                  <Entypo name=\"cross\" color=\"red\" size={33} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      <View style={{ height: 80 }} />\n    </ScrollView>\n  );\n};\n\nexport default Reports;\n","import React, { Component } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Bank extends Component {\n  componentDidMount() {\n    const name = this.props.navigation.state.params?.name;\n    if (name) {\n      this.setState({ name });\n    }\n  }\n  state = {\n    response: null,\n    captcha: \"\",\n    random: Math.random(),\n  };\n\n  rob = () => {\n    const { device } = this.props.screenProps;\n\n    fetch(`${Constants.SERVER_ADDR}/rob`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        name: this.state.name,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({ response, random: Math.random(), captcha: \"\" });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  renderForm() {\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <TextInput\n          style={style(theme).textInput}\n          placeholderTextColor={theme.secondaryTextSoft}\n          placeholder={getText(\"name\")}\n          value={this.state.name}\n          onChangeText={(name) => this.setState({ name })}\n        />\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <View\n          style={{\n            marginTop: 20,\n          }}\n        >\n          <Button\n            theme={this.props.screenProps.device.theme}\n            title={getText(\"rob\")}\n            onPress={() => this.rob()}\n          />\n        </View>\n      </View>\n    );\n  }\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { response } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        <View style={{ margin: 20 }}>\n          {response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {response.response}\n            </Text>\n          ) : null}\n\n          {this.renderForm()}\n\n          <TouchableOpacity\n            style={{ marginTop: 20 }}\n            onPress={() => navigation.navigate(\"Members\", { order: 1 })}\n          >\n            <T>{getText(\"searchPeopleWithMuchMoney\")}</T>\n          </TouchableOpacity>\n        </View>\n\n        <Footer screenProps={this.props.screenProps} />\n      </ScrollView>\n    );\n  }\n}\n\nexport default Bank;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport User from \"../components/User\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nimport { RobberyTypes } from \"./CreateRobbery\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Robbery = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    robberies,\n    reloadRobberies,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadRobberies);\n  doOnce(fetchRacecars);\n\n  const join = async (robberyId) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadRobberies();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (robberyId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    reloadRobberies();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (robberyId) => {\n    setLoading(true);\n    const { response } = await post(\"startRobbery\", {\n      loginToken,\n      robberyId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadRobberies();\n  };\n\n  const renderItem = ({ item, index }) => {\n    const type = RobberyTypes.find((x) => x.type === item.type);\n\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={type.image}\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.robberyParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{type.cost},-\n          </T>\n          <T>\n            {getText(\"profit\")}: €{type.profit * item.numParticipants},-\n          </T>\n\n          <T>\n            {getText(\"difficulty\")}: {type.difficulty}\n          </T>\n          {item.robberyParticipants.length > 0 &&\n            item.robberyParticipants.map((p) => (\n              <User user={p.user} navigation={navigation} size={40} />\n            ))}\n\n          {!!item.robberyParticipants.find((x) => x?.user?.id === me?.id) ? (\n            item.robberyParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                join(item.id);\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateRobbery\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadRobberies();\n              setResponse(null);\n            }}\n          />\n        }\n        data={robberies}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Robbery;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    error: null,\n    success: null,\n  };\n\n  login() {\n    const { loginToken } = this.props.screenProps.device;\n    const { email, password } = this.state;\n    console.log(\"SIgnup\");\n    fetch(`${Constants.SERVER_ADDR}/signupEmail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ loginToken, email }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.error) {\n          this.setState({ success: null, error: responseJson.error });\n        } else {\n          this.setState(\n            { error: null, success: responseJson.success },\n            () => {}\n          );\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            margin: 20,\n            padding: 20,\n            minWidth: 200,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.error ? (\n            <Text style={{ color: \"red\" }}>{this.state.error}</Text>\n          ) : this.state.success ? (\n            <Text style={{ color: \"green\" }}>{this.state.success}</Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"email\")}</Text>\n\n            <TextInput\n              placeholder={getText(\"email\")}\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(email) => this.setState({ email })}\n              value={this.state.email}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"confirmEmail\")}\n              onPress={() => this.login()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","//activated to 1 if activationtoken is correct\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nclass Login extends React.Component {\n  state = {\n    respones: null,\n  };\n\n  componentDidMount() {\n    this.activate();\n  }\n\n  activate() {\n    const activationToken = this.props.navigation.state.params.token;\n\n    fetch(`${Constants.SERVER_ADDR}/activate`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ activationToken }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ response: responseJson });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <T>{this.state?.response?.response}</T>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","/*\nTODO:nudgen om push notificaties aan te zetten\n\n\n*/\n\nimport React, { Component } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction } from \"../Util\";\n\nconst { width } = Dimensions.get(\"window\");\nconst isSmall = width < 800;\n\nclass StealCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      captcha: \"\",\n      random: Math.random(),\n      response: null,\n      type: \"beginner\",\n    };\n  }\n\n  renderItem = ({ item, index }) => {\n    const {\n      me,\n      device: { theme },\n    } = this.props.screenProps;\n\n    const kans = Math.round((me?.rank + 30) / (item.id * item.id));\n    const kans2 = kans > 75 ? 75 : kans;\n\n    const backgroundColor =\n      this.state.selected === item.id ? \"#2c98f0\" : undefined;\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ selected: item.id });\n        }}\n      >\n        <View\n          key={`item${index}`}\n          style={{\n            flexDirection: \"row\",\n            borderRadius: 10,\n            padding: 10,\n            paddingHorizontal: 20,\n            justifyContent: \"space-between\",\n            backgroundColor,\n          }}\n        >\n          <Text style={{ color: theme.primaryText }}>{item.option}</Text>\n          <Text style={{ color: theme.primaryText }}>{kans2}%</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true }, () => {\n      fetch(`${Constants.SERVER_ADDR}/stealcar`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: device.loginToken,\n          option: this.state.selected,\n          captcha: this.state.captcha,\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (response) => {\n          this.props.screenProps.reloadMe(device.loginToken);\n\n          this.setState({\n            response,\n            loading: false,\n            random: Math.random(),\n            captcha: \"\",\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    });\n  };\n\n  renderFooter = () => {\n    const {\n      screenProps,\n      screenProps: {\n        me,\n\n        device: { loginToken, theme },\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View>\n        <Captcha\n          screenProps={screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          // disabled={!this.state.captcha || this.state.loading}\n          style={{ borderRadius: 10, marginTop: 20 }}\n          title={getText(\"steal\")}\n          onPress={this.submit}\n        />\n\n        {/* <ReCaptcha\n          sitekey={Constants.CAPTCHA}\n          action=\"stealcar\"\n          verifyCallback={(token) => this.setState({ captcha: token })}\n        /> */}\n\n        <Footer screenProps={screenProps} />\n      </View>\n    );\n  };\n\n  renderMenu = (t, string) => {\n    const { response, type, buy } = this.state;\n    const {\n      navigation,\n      screenProps: {\n        device,\n        device: { theme },\n      },\n    } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={{\n          backgroundColor:\n            type === t ? `${theme.secondary}88` : theme.secondary,\n          borderBottomWidth: 1,\n          borderRightWidth: 1,\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => this.setState({ type: t })}\n      >\n        <T>{string}</T>\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {\n      navigation,\n      screenProps: { me, device },\n    } = this.props;\n    const { response, selected, type } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    const seconds = Math.ceil((me.autostelenAt + 60000 - Date.now()) / 1000);\n\n    const typeStart = type === \"beginner\" ? 0 : type === \"serious\" ? 6 : 12;\n\n    const options = [\n      {\n        id: 1,\n        option: getText(\"carOption1\"),\n      },\n      {\n        id: 2,\n        option: getText(\"carOption2\"),\n      },\n\n      {\n        id: 3,\n        option: getText(\"carOption3\"),\n      },\n\n      {\n        id: 4,\n        option: getText(\"carOption4\"),\n      },\n\n      {\n        id: 5,\n        option: getText(\"carOption5\"),\n      },\n\n      {\n        id: 6,\n        option: getText(\"carOption6\"),\n      },\n\n      {\n        id: 7,\n        option: getText(\"carOption7\"),\n      },\n\n      {\n        id: 8,\n        option: getText(\"carOption8\"),\n      },\n\n      {\n        id: 9,\n        option: getText(\"carOption9\"),\n      },\n\n      {\n        id: 10,\n        option: getText(\"carOption10\"),\n      },\n\n      {\n        id: 11,\n        option: getText(\"carOption11\"),\n      },\n\n      {\n        id: 12,\n        option: getText(\"carOption12\"),\n      },\n\n      {\n        id: 13,\n        option: getText(\"carOption13\"),\n      },\n\n      {\n        id: 14,\n        option: getText(\"carOption14\"),\n      },\n\n      {\n        id: 15,\n        option: getText(\"carOption15\"),\n      },\n    ];\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: 60,\n          }}\n        >\n          {this.renderMenu(\"beginner\", getText(\"beginner\"))}\n          {this.renderMenu(\"serious\", getText(\"advanced\"))}\n          {this.renderMenu(\"expert\", getText(\"expert\"))}\n        </View>\n\n        {response ? (\n          <ScrollView style={{ flex: 1, minHeight: 400 }}>\n            {response.cars\n              ? response.cars.map((car) => {\n                  return (\n                    <Image\n                      style={{\n                        width: isSmall ? width : 400,\n                        height: 300,\n                        resizeMode: \"contain\",\n                      }}\n                      source={{\n                        uri: Constants.SERVER_ADDR + \"/\" + car.url,\n                      }}\n                    />\n                  );\n                })\n              : null}\n            <Text style={{ color: device.theme.primaryText }}>\n              {response.response}\n            </Text>\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"ok\")}\n              onPress={() => this.setState({ response: null })}\n            />\n          </ScrollView>\n        ) : seconds > 0 ? (\n          <CountDown\n            until={seconds}\n            onFinish={() => this.setState({ finished: true })}\n            size={20}\n            timeToShow={[\"M\", \"S\"]}\n            timeLabels={{ m: getText(\"minutes\"), s: getText(\"seconds\") }}\n          />\n        ) : (\n          <FlatList\n            keyExtractor={(item, index) => `item${index}`}\n            data={options.slice(typeStart, typeStart + 6)}\n            extraData={selected}\n            renderItem={this.renderItem}\n            ListFooterComponent={this.renderFooter}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default StealCar;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"../components/Button\";\nimport Footer from \"../components/Footer\";\nimport T from \"../components/T\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Streetrace = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    me,\n    streetraces,\n    reloadStreetraces,\n    reloadMe,\n    device: { theme, loginToken },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  // if (!__DEV__) return <T>Coming soon</T>;\n\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState();\n  const [racecars, setRacecars] = useState(null);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const fetchRacecars = async () => {\n    setLoading(true);\n    const cars = await get(`racecars?token=${loginToken}`);\n    setRacecars(cars);\n    setLoading(false);\n  };\n\n  doOnce(reloadStreetraces);\n  doOnce(fetchRacecars);\n\n  const join = async (streetraceId, car) => {\n    setLoading(true);\n    const { success, response } = await post(\"joinStreetrace\", {\n      loginToken,\n      streetraceId,\n      carId: car?.id,\n    });\n    setResponse(response);\n    setLoading(false);\n    if (success) {\n      reloadStreetraces();\n      reloadMe(loginToken);\n    }\n  };\n\n  const leave = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"leaveStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    reloadStreetraces();\n    setLoading(false);\n    reloadMe(loginToken);\n  };\n\n  const start = async (streetraceId) => {\n    setLoading(true);\n    const { response } = await post(\"startStreetrace\", {\n      loginToken,\n      streetraceId,\n    });\n    setResponse(response);\n    setLoading(false);\n    reloadMe(loginToken);\n    reloadStreetraces();\n  };\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <Image\n          source={\n            item.type === \"city\"\n              ? require(\"../../assets/city.jpeg\")\n              : item.type === \"highway\"\n              ? require(\"../../assets/highway.jpeg\")\n              : require(\"../../assets/forest.jpeg\")\n          }\n          style={{ width: 170, height: 140 }}\n          resizeMode={\"contain\"}\n        />\n\n        <View style={{ marginLeft: 10, flex: 1 }}>\n          <T>\n            {getText(\"organizer\")}: {item.creator}\n          </T>\n          <T>\n            {getText(\"place\")}: {item.city}\n          </T>\n          <T>\n            {getText(\"participants\")}: {item.streetraceParticipants.length}/\n            {item.numParticipants}\n          </T>\n          <T>\n            {getText(\"costs\")}: €{item.price},-\n          </T>\n          <T>\n            {getText(\"addedPrizeMoney\")}: €{item.prize},-\n          </T>\n          {item.streetraceParticipants.length > 0 && (\n            <T>{item.streetraceParticipants.map((x) => x.name).join(\", \")}</T>\n          )}\n\n          {!!item.streetraceParticipants.find((x) => x.name === me?.name) ? (\n            item.streetraceParticipants.length === item.numParticipants ? (\n              <Button\n                theme={theme}\n                title={getText(\"startCTA\")}\n                onPress={() => start(item.id)}\n              />\n            ) : (\n              <Button\n                theme={theme}\n                title={getText(\"leaveCTA\")}\n                onPress={() => leave(item.id)}\n              />\n            )\n          ) : (\n            <Button\n              theme={theme}\n              title={getText(\"participate\")}\n              onPress={() => {\n                // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n                const options = racecars.map(\n                  (racecar) =>\n                    `${racecar.auto} ${getText(\"with\")} ${\n                      racecar.power\n                    }.000 ${getText(\"power\")}`\n                );\n                options.push(getText(\"cancel\"));\n                const destructiveButtonIndex = undefined;\n                const cancelButtonIndex = options.length - 1;\n\n                showActionSheetWithOptions(\n                  {\n                    options,\n                    cancelButtonIndex,\n                    destructiveButtonIndex,\n                  },\n                  (buttonIndex) => {\n                    if (buttonIndex !== options.length - 1) {\n                      join(item.id, racecars[buttonIndex]);\n                    }\n                    // Do something here depending on the button index selected\n                  }\n                );\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <View style={{ justifyContent: \"space-between\", flexDirection: \"row\" }}>\n        <View>{response && <T>{response}</T>}</View>\n\n        <View>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"CreateStreetrace\")}\n          >\n            <AntDesign name=\"pluscircle\" color=\"yellow\" size={32} />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      {renderHeader()}\n      <FlatList\n        contentContainerStyle={{\n          height: Platform.OS === \"web\" ? height - 200 : undefined,\n        }}\n        ListFooterComponent={() => <Footer screenProps={screenProps} />}\n        refreshControl={\n          <RefreshControl\n            refreshing={loading}\n            onRefresh={() => {\n              reloadStreetraces();\n              setResponse(null);\n            }}\n          />\n        }\n        data={streetraces}\n        renderItem={renderItem}\n      />\n    </View>\n  );\n};\n\nexport default Streetrace;\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { getTextFunction } from \"../Util\";\n\nexport const DEFAULT_THEME = {\n  name: \"Original\",\n  secondary: \"#222222\",\n  secondaryText: \"#FFFFFF\",\n  secondaryTextSoft: \"#CCCCCC\",\n  primary: \"#555555\",\n  primaryText: \"#FFFFFF\",\n  separatorColor: \"#CCCCCC\",\n};\n\nexport type Theme = {\n  name: String,\n  primary: String,\n  primaryText: String,\n  secondary: String,\n  secondaryText: String,\n};\n\nconst ThemeScreen = ({ navigation, screenProps: { dispatch, me, device } }) => {\n  const currentTheme = device.theme;\n  const setTheme = (theme) => {\n    dispatch({ type: \"SET_THEME\", value: theme });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  const themes = [\n    DEFAULT_THEME,\n\n    {\n      name: getText(\"themeLightBrown\"),\n      secondary: \"#f5e6b4\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      primary: \"#555555\",\n      primaryText: \"#FFFFFF\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeWhite\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#CCCCCC\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlue\"),\n      primary: \"#FFFFFF\",\n      secondary: \"#add8e6\",\n      primaryText: \"#000000\",\n      secondaryText: \"#000000\",\n      secondaryTextSoft: \"#404040\",\n      separatorColor: \"#CCCCCC\",\n    },\n    {\n      name: getText(\"themeBlack\"),\n      primary: \"#000000\",\n      secondary: \"#222222\",\n      primaryText: \"#FFFFFF\",\n      secondaryText: \"#FFFFFF\",\n      secondaryTextSoft: \"#CCCCCC\",\n      separatorColor: \"#FFFFFF\",\n    },\n  ];\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      {themes.map((theme, index) => {\n        return (\n          <TouchableOpacity\n            onPress={() => setTheme(theme)}\n            key={`i${index}`}\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              margin: 20,\n            }}\n          >\n            <View>\n              <View\n                style={{\n                  backgroundColor: theme.primary,\n                  borderTopLeftRadius: 20,\n                  borderWidth: 1,\n                  borderTopRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n              <View\n                style={{\n                  backgroundColor: theme.secondary,\n                  borderWidth: 1,\n                  borderBottomLeftRadius: 20,\n                  borderBottomRightRadius: 20,\n                  width: 40,\n                  height: 20,\n                }}\n              />\n            </View>\n\n            <Text style={{ color: currentTheme.primaryText, marginLeft: 20 }}>\n              {theme.name}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </ScrollView>\n  );\n};\n\nexport default ThemeScreen;\n","import React from \"react\";\nimport { ScrollView, Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    phone: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const { navigation } = this.props;\n\n    const token = this.props.screenProps.device.loginToken;\n\n    const { phone } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/setPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone, token }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          navigation.navigate(\"VerifyPhoneCode\", { phone });\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const { phone } = this.state;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{getText(\"phoneNumber\")}</Text>\n            <TextInput\n              placeholder=\"+31\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(phone) => this.setState({ phone })}\n              value={this.state.phone}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"save\")}\n              onPress={() => this.save()}\n            />\n          </View>\n\n          {/* <View>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate(\"VerifyPhoneCode\", { phone });\n              }}\n            >\n              <T>Heb je al een code? Klik hier</T>\n            </TouchableOpacity>\n          </View> */}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Text, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { withInterval } from \"../components/IntervalProvider\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { getTextFunction } from \"../Util\";\n\nclass Login extends React.Component {\n  state = {\n    code: \"\",\n    error: null,\n    success: null,\n  };\n\n  save() {\n    const {\n      navigation,\n      screenProps: { dispatch, reloadMe },\n    } = this.props;\n\n    const { code } = this.state;\n\n    fetch(`${Constants.SERVER_ADDR}/verifyPhone`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        code,\n        phone: this.props.navigation.state.params?.phone,\n      }),\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(\"responseJson\", responseJson);\n\n        this.setState({ response: responseJson.response });\n\n        if (responseJson.success) {\n          dispatch({\n            type: \"SET_LOGIN_TOKEN_AND_LOGIN\",\n            value: responseJson.token,\n          });\n\n          reloadMe(responseJson.loginToken);\n\n          this.props.intervals.resetIntervalsForToken(responseJson.loginToken);\n\n          // reloadMe(responseJson.token);\n        }\n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    const {\n      navigation,\n      screenProps: {\n        device: { theme },\n        me,\n      },\n    } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <View\n          style={{\n            flex: 1,\n            margin: 20,\n            padding: 20,\n            borderRadius: 20,\n          }}\n        >\n          {this.state.response ? (\n            <Text style={{ color: theme.primaryText }}>\n              {this.state.response}\n            </Text>\n          ) : null}\n\n          <View\n            style={{\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ color: theme.primaryText }}>{getText(\"code\")}</Text>\n\n            <TextInput\n              placeholder=\"000000\"\n              placeholderTextColor={theme.secondaryTextSoft}\n              onChangeText={(code) => this.setState({ code })}\n              value={this.state.code}\n              style={style(theme).textInput}\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              padding: 10,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View />\n\n            <Button\n              theme={this.props.screenProps.device.theme}\n              title={getText(\"validate\")}\n              onPress={() => this.save()}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withInterval(Login);\n","import React, { useState } from \"react\";\nimport { Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { doOnce, get, getLocale, getTextFunction, post } from \"../Util\";\n\nconst Creditshop = ({ screenProps }) => {\n  const [items, setItems] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  const {\n    device,\n    device: { theme },\n    reloadMe,\n    me,\n  } = screenProps;\n\n  const getText = getTextFunction(me?.locale);\n  const locale = getLocale(me?.locale);\n  doOnce(async () => {\n    const { items } = await get(\"creditshop\");\n    setItems(items);\n  });\n\n  const buy = async (type) => {\n    const { response } = await post(\"creditshopBuy\", {\n      loginToken: device.loginToken,\n      type,\n    });\n    setResponse(response);\n    reloadMe(device.loginToken);\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n        {getText(\"youStillHaveCredits\", me?.credits)}\n      </Text>\n\n      {response && (\n        <Text style={{ color: device.theme.primaryText, alignSelf: \"center\" }}>\n          {response}\n        </Text>\n      )}\n\n      {items?.map((item) => (\n        <Button\n          theme={theme}\n          style={{ marginHorizontal: 20 }}\n          title={`${item.kooptext[locale]} ${getText(\"for\")} ${\n            item.kosten\n          } ${getText(\"credits\")}`}\n          onPress={() => {\n            buy(item.id);\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Creditshop;\n","import React from \"react\";\nimport { Linking, Platform, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport { getTextFunction, post } from \"../Util\";\nconst Mollie = ({\n  screenProps: {\n    device,\n    me,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n\n  const submit = async (item) => {\n    const response = await post(\"mollieCreate\", {\n      token: device.loginToken,\n      item,\n    });\n\n    if (response.url) {\n      Linking.openURL(response.url);\n    }\n  };\n  return Platform.OS === \"ios\" ? (\n    <Text style={{ color: theme.primaryText }}>\n      {getText(\"canOnlyBuyCreditsOnWebsite\")}\n    </Text>\n  ) : (\n    <View style={{ flex: 1, justifyContent: \"space-around\" }}>\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie0\")}\n        onPress={() => submit(0)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie1\")}\n        onPress={() => submit(1)}\n      />\n      <Button\n        theme={theme}\n        style={{ marginHorizontal: 20 }}\n        title={getText(\"mollie2\")}\n        onPress={() => submit(2)}\n      />\n\n      <Text style={{ color: theme.primaryText }}>{getText(\"mollieRules\")}</Text>\n    </View>\n  );\n};\n\nexport default Mollie;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { ScrollView, Switch, TextInput, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport H1 from \"../components/H1\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport style from \"../Style\";\nimport { doOnce, get, getTextFunction, post } from \"../Util\";\nconst SuperMessage = ({ screenProps: { me, device } }) => {\n  const [response, setResponse] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [schedule, setSchedule] = useState(false);\n  const [date, setDate] = useState(moment().format(\"DD/MM/YYYY\"));\n\n  //for admin\n  const [scheduled, setScheduled] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [dates, setDates] = useState({});\n\n  const getScheduled = async () => {\n    if (me?.level === 10) {\n      const { scheduled, response } = await get(\n        `scheduled?token=${device.loginToken}`\n      );\n      if (scheduled) {\n        setScheduled(scheduled);\n        setMessages(\n          scheduled.reduce(\n            (previous, current) => ({\n              ...previous,\n              [current.id]: current.message,\n            }),\n            {}\n          )\n        );\n\n        setDates(\n          scheduled.reduce(\n            (previous, current) => ({\n              ...previous,\n              [current.id]: moment(current.date).format(\"DD/MM/YYYY\"),\n            }),\n            {}\n          )\n        );\n      }\n    }\n  };\n  doOnce(getScheduled);\n\n  const saveScheduled = async (id) => {\n    const { response } = await post(\"updateScheduled\", {\n      token: device.loginToken,\n      message: messages[id],\n      date: moment(dates[id], \"DD/MM/YYYY\").set(\"hours\", 17).valueOf(),\n      id,\n    });\n\n    getScheduled();\n\n    setResponse(response);\n  };\n  const sendMessage = () => {\n    fetch(`${Constants.SERVER_ADDR}/superMessage`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        message,\n        date: date\n          ? moment(date, \"DD/MM/YYYY\").set(\"hours\", 17).valueOf()\n          : undefined,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResponse(response?.response);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const getText = getTextFunction(me?.locale);\n\n  return (\n    <ScrollView style={{ flex: 1, padding: 15 }}>\n      <T>{getText(\"superMessageInfo\", me?.credits)}</T>\n      {response ? <T>{response}</T> : null}\n\n      {me?.level === 10 && (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Switch value={schedule} onValueChange={setSchedule} />\n          {schedule && (\n            <TextInput\n              style={style(device.theme).textInput}\n              placeholder={getText(\"date\")}\n              placeholderTextColor={device.theme.secondaryTextSoft}\n              value={date}\n              onChangeText={setDate}\n            />\n          )}\n        </View>\n      )}\n      <TextInput\n        style={[style(device.theme).textInput, { height: 200 }]}\n        placeholder={getText(\"message\")}\n        placeholderTextColor={device.theme.secondaryTextSoft}\n        multiline\n        value={message}\n        onChangeText={setMessage}\n      />\n\n      <Button\n        theme={device.theme}\n        style={{ marginVertical: 10 }}\n        title={getText(\"send\")}\n        onPress={sendMessage}\n      />\n\n      {me?.level === 10 && (\n        <View>\n          <H1>{getText(\"scheduled\")}</H1>\n\n          {scheduled?.map((message, index) => {\n            return (\n              <View key={`message${index}`} style={{ flexDirection: \"row\" }}>\n                <TextInput\n                  style={[\n                    style(device.theme).textInput,\n                    { height: 100, width: 200, flex: 1 },\n                  ]}\n                  placeholder={getText(\"message\")}\n                  placeholderTextColor={device.theme.secondaryTextSoft}\n                  multiline\n                  value={messages[message.id]}\n                  onChangeText={(msg) =>\n                    setMessages({ ...messages, [message.id]: msg })\n                  }\n                />\n\n                <TextInput\n                  style={[\n                    style(device.theme).textInput,\n                    { marginHorizontal: 10, height: 40 },\n                  ]}\n                  placeholder={getText(\"date\")}\n                  placeholderTextColor={device.theme.secondaryTextSoft}\n                  value={dates[message.id]}\n                  onChangeText={(date) =>\n                    setDates({ ...dates, [message.id]: date })\n                  }\n                />\n\n                <Button\n                  theme={device.theme}\n                  style={{ marginVertical: 10 }}\n                  title={getText(\"send\")}\n                  onPress={() => saveScheduled(message.id)}\n                />\n              </View>\n            );\n          })}\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default SuperMessage;\n","import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport Tabs from \"../components/Tabs\";\nimport { getTextFunction } from \"../Util\";\nimport Creditshop from \"./Creditshop\";\nimport Mollie from \"./Mollie\";\nimport SuperMessage from \"./SuperMessage\";\n\nconst VIP = (props) => {\n  const [tab, setTab] = useState(\"mollie\");\n\n  const getText = getTextFunction(props.screenProps.me?.locale);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Tabs\n        tabs={[\n          {\n            title: getText(\"buyCredits\"),\n            isActive: tab === \"mollie\",\n            onPress: () => setTab(\"mollie\"),\n          },\n          {\n            title: getText(\"creditshop\"),\n            isActive: tab === \"creditshop\",\n            onPress: () => setTab(\"creditshop\"),\n          },\n\n          {\n            title: getText(\"superMessage\"),\n            isActive: tab === \"supermessage\",\n            onPress: () => setTab(\"supermessage\"),\n          },\n        ]}\n      />\n\n      {tab === \"mollie\" && <Mollie {...props} />}\n      {tab === \"creditshop\" && <Creditshop {...props} />}\n      {tab === \"supermessage\" && <SuperMessage {...props} />}\n    </View>\n  );\n};\nexport default VIP;\n","import React from \"react\";\nimport Shop from \"./Shop\";\n\nconst WeaponShop = ({ navigation, screenProps }) => {\n  return (\n    <Shop type=\"weapon\" navigation={navigation} screenProps={screenProps} />\n  );\n};\n\nexport default WeaponShop;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React, { Component } from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport T from \"../components/T\";\nimport Constants from \"../Constants\";\nimport { getTextFunction, post } from \"../Util\";\n\nclass Wiet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      captcha: \"\",\n      random: Math.random(),\n    };\n  }\n\n  componentDidMount() {\n    this.props.screenProps.reloadCities();\n  }\n\n  keyValue(key, value) {\n    return (\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 40,\n          alignItems: \"center\",\n        }}\n      >\n        <T>{key}</T>\n        <T>{value}</T>\n      </View>\n    );\n  }\n\n  submit = () => {\n    const { device } = this.props.screenProps;\n\n    this.setState({ loading: true });\n    fetch(`${Constants.SERVER_ADDR}/wiet`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: device.loginToken,\n        captcha: this.state.captcha,\n      }),\n    })\n      .then((response) => response.json())\n      .then(async (response) => {\n        this.setState({\n          response,\n          loading: false,\n          random: Math.random(),\n          captcha: \"\",\n        });\n        this.props.screenProps.reloadMe(device.loginToken);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  becomeOwner = async (city) => {\n    const { reloadMe, device, reloadCities } = this.props.screenProps;\n    const { response } = await post(\"becomeOwner\", {\n      city,\n      type: \"landlord\",\n      token: device.loginToken,\n    });\n    reloadCities();\n\n    reloadMe(device.loginToken);\n  };\n\n  renderCities = () => {\n    const {\n      device: { theme },\n      me,\n      cities,\n    } = this.props.screenProps;\n    const { navigation } = this.props;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 30,\n          }}\n        >\n          <View style={{ flex: 2 }}>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"city\")}\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 3,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"landlord\")}\n            </Text>\n            <Text style={{ fontWeight: \"bold\", color: theme.primaryText }}>\n              {getText(\"profit\")}\n            </Text>\n          </View>\n        </View>\n        {cities?.map((city, index) => {\n          return (\n            <View\n              key={`i${index}`}\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingVertical: 10,\n                borderBottomWidth: 0.5,\n                borderBottomColor: \"black\",\n              }}\n            >\n              <View style={{ flex: 2 }}>\n                <T>{city.city}</T>\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  flex: 3,\n                }}\n              >\n                <View style={{ flexDirection: \"row\" }}>\n                  {city.landlordOwner ? (\n                    <T>{city.landlordOwner}</T>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => this.becomeOwner(city.city)}\n                    >\n                      <T>{getText(\"nobody\")}</T>\n                    </TouchableOpacity>\n                  )}\n                  {city.landlordOwner === me?.name ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"ManageObject\", {\n                          type: \"landlord\",\n                          city: city.city,\n                        })\n                      }\n                    >\n                      <Entypo name=\"edit\" color={theme.primaryText} size={12} />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n\n                <T>{city.landlordProfit}</T>\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n  renderFooter = () => {\n    const {\n      device: { theme },\n      me,\n    } = this.props.screenProps;\n\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <ScrollView style={{ flex: 1 }}>\n        {this.keyValue(getText(\"weedInPossession\"), me?.wiet)}\n\n        <Captcha\n          screenProps={this.props.screenProps}\n          captcha={this.state.captcha}\n          onChangeCaptcha={(x) => this.setState({ captcha: x })}\n          random={this.state.random}\n          onChangeRandom={(x) => this.setState({ random: x })}\n        />\n\n        <Button\n          theme={this.props.screenProps.device.theme}\n          style={{ marginTop: 20 }}\n          title={getText(\"teelWeed\")}\n          onPress={this.submit}\n        />\n\n        {this.renderCities()}\n      </ScrollView>\n    );\n  };\n  render() {\n    const { response } = this.state;\n    const {\n      screenProps: {\n        me,\n        device: { theme },\n      },\n    } = this.props;\n    const getText = getTextFunction(me?.locale);\n\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={{ margin: 20, flex: 1 }}>\n          {response ? (\n            <View style={{ flex: 1, minHeight: 400 }}>\n              <Text style={{ color: theme.primaryText }}>\n                {response.response}\n              </Text>\n\n              <Button\n                theme={this.props.screenProps.device.theme}\n                title={getText(\"ok\")}\n                onPress={() => this.setState({ response: null })}\n              />\n            </View>\n          ) : (\n            this.renderFooter()\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Wiet;\n","import { Entypo } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nconst Checkbox = ({ active }) => {\n  return (\n    <View\n      style={{\n        width: 30,\n        height: 30,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: \"black\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {active && <Entypo name=\"check\" size={24} />}\n    </View>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport Captcha from \"../components/Captcha\";\nimport Checkbox from \"../components/Checkbox\";\nimport T from \"../components/T\";\nimport { getTextFunction, post } from \"../Util\";\n/*\n\nWerken;\n\n- Duurt tussen 1 en 6 uur\n- Kan alleen als je push notificaties aan hebt staan\n- Bij aanmaak word een event in de db aangemaakt in tabel workEvents. Deze word d.m.v. minute cronjobs verwijderd en word contanct geld uitgekeerd\n- Je krijgt een push notificatie zodra het werk voltooid is.\n\n*/\n\nconst Work = ({\n  screenProps,\n  screenProps: {\n    me,\n    device,\n    device: { theme },\n  },\n}) => {\n  const getText = getTextFunction(me?.locale);\n  const [captcha, setCaptcha] = useState(\"\");\n  const [random, setRandom] = useState(Math.random());\n\n  const options = [\n    {\n      title: getText(\"workOption1\"),\n      hours: 1,\n    },\n\n    {\n      title: getText(\"workOption2\"),\n      hours: 2,\n    },\n\n    {\n      title: getText(\"workOption3\"),\n      hours: 3,\n    },\n\n    {\n      title: getText(\"workOption4\"),\n      hours: 4,\n    },\n\n    {\n      title: getText(\"workOption5\"),\n      hours: 5,\n    },\n\n    {\n      title: getText(\"workOption6\"),\n      hours: 6,\n    },\n\n    {\n      title: getText(\"workOption7\"),\n      hours: 8,\n    },\n  ];\n\n  const [selected, setSelected] = useState(1);\n  const [response, setResponse] = useState(null);\n\n  const submit = async () => {\n    const { response } = await post(\"work\", {\n      token: device.loginToken,\n      captcha,\n      option: selected,\n    });\n    setResponse(response);\n  };\n\n  const minute = Math.round((me?.workEndsAt - Date.now()) / (60 * 1000));\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View style={{ margin: 20 }}>\n        {response ? (\n          <T>{response}</T>\n        ) : me?.workEndsAt > Date.now() ? (\n          <T>{getText(\"workWait\", minute)}</T>\n        ) : (\n          <View>\n            {options.map((option, index) => {\n              return (\n                <TouchableOpacity\n                  onPress={() => setSelected(index + 1)}\n                  key={`key${index}`}\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    paddingVertical: 10,\n                    paddingHorizontal: 10,\n                    borderRadius: 5,\n                  }}\n                >\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                    <Checkbox active={selected === index + 1} />\n                    <T style={{ marginLeft: 10 }}>{option.title}</T>\n                  </View>\n                  <T>\n                    {option.hours} {getText(\"hours\")}\n                  </T>\n                </TouchableOpacity>\n              );\n            })}\n\n            <Captcha\n              screenProps={screenProps}\n              captcha={captcha}\n              onChangeCaptcha={setCaptcha}\n              random={random}\n              onChangeRandom={setRandom}\n            />\n\n            <Button theme={theme} title={getText(\"workCTA\")} onPress={submit} />\n          </View>\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Work;\n","import React from \"react\";\nimport Accomplice from \"../Accomplice\";\nimport AdminEmail from \"../AdminEmail\";\nimport AdminUserWatch from \"../AdminUserWatch\";\nimport AirplaneShop from \"../AirplaneShop\";\nimport Airport from \"../Airport\";\nimport AllAirport from \"../AllAirport\";\nimport AllBanks from \"../AllBanks\";\nimport AllBulletfactory from \"../AllBulletfactory\";\nimport AllGang from \"../AllGang\";\nimport AllGarage from \"../AllGarage\";\nimport AllStats from \"../AllStats\";\nimport Backfire from \"../Backfire\";\nimport Bank from \"../Bank\";\nimport Blocks from \"../Blocks\";\nimport Bomb from \"../Bomb\";\nimport Bulletfactory from \"../Bulletfactory\";\nimport Bunker from \"../Bunker\";\nimport Casino from \"../Casino\";\nimport ChangeName from \"../ChangeName\";\nimport ChangePassword from \"../ChangePassword\";\nimport Channel from \"../Channel\";\nimport Channels from \"../Channels\";\nimport Chat from \"../Chat\";\nimport ChooseProfession from \"../ChooseProfession\";\nimport Code from \"../Code\";\nimport Contribute from \"../Contribute\";\nimport CreateOc from \"../CreateOC\";\nimport CreateRobbery from \"../CreateRobbery\";\nimport CreateStreetrace from \"../CreateStreetrace\";\nimport Crimes from \"../Crimes\";\nimport Detectives from \"../Detectives\";\nimport Donate from \"../Donate\";\nimport DownloadApp from \"../DownloadApp\";\nimport EstateAgent from \"../EstateAgent\";\nimport ForgotPassword from \"../ForgotPassword\";\nimport Forum from \"../Forum\";\nimport Gang from \"../Gang\";\nimport GangAchievements from \"../GangAchievements\";\nimport GangBulletFactory from \"../GangBulletFactory\";\nimport GangCreate from \"../GangCreate\";\nimport GangMissions from \"../GangMissions\";\nimport Gangs from \"../Gangs\";\nimport GangSettings from \"../GangSettings\";\nimport GangShop from \"../GangShop\";\nimport Garage from \"../Garage\";\nimport GarageShop from \"../GarageShop\";\nimport Gym from \"../Gym\";\nimport Hackers from \"../Hackers\";\nimport Hoeren from \"../Hoeren\";\nimport Home from \"../Home\";\nimport Hospital from \"../Hospital\";\nimport House from \"../House\";\nimport Income from \"../Income\";\nimport Info from \"../Info\";\nimport InfoGame from \"../InfoGame\";\nimport InfoRules from \"../InfoRules\";\nimport JailScreen from \"../Jail\";\nimport Junkies from \"../Junkies\";\nimport Kill from \"../Kill\";\nimport Login from \"../Login\";\nimport Lotto from \"../Lotto\";\nimport ManageObject from \"../ManageObject\";\nimport Market from \"../Market\";\nimport Members from \"../Members\";\nimport MollieComplete from \"../MollieComplete\";\nimport More from \"../More\";\nimport MyObjects from \"../MyObjects\";\nimport MyProfile from \"../MyProfile\";\nimport OC from \"../OC\";\nimport Poker from \"../Poker\";\nimport Police from \"../Police\";\nimport Privacy from \"../Privacy\";\nimport Prizes from \"../Prizes\";\nimport Profile from \"../Profile\";\nimport Properties from \"../Properties\";\nimport ProtectionShop from \"../ProtectionShop\";\nimport Racecars from \"../Racecars\";\nimport RecoverPassword from \"../RecoverPassword\";\nimport Reports from \"../Reports\";\nimport Rob from \"../Rob\";\nimport Robbery from \"../Robbery\";\nimport Settings from \"../Settings\";\nimport Shop from \"../Shop\";\nimport SignupEmail from \"../SignupEmail\";\nimport SignupEmail2 from \"../SignupEmail2\";\nimport Sint from \"../Sint\";\nimport StatsScreen from \"../Stats\";\nimport Status from \"../Status\";\nimport StealCar from \"../StealCar\";\nimport Streetrace from \"../Streetrace\";\nimport SwissBank from \"../SwissBank\";\nimport Theme from \"../Theme\";\nimport VerifyPhone from \"../VerifyPhone\";\nimport VerifyPhoneCode from \"../VerifyPhoneCode\";\nimport VIP from \"../VIP\";\nimport WeaponShop from \"../WeaponShop\";\nimport Wiet from \"../Wiet\";\nimport Work from \"../Work\";\n\nconst Screen = ({ navigation, screenProps }) => {\n  const screen = navigation.state.routeName;\n\n  const screens = {\n    Stats: StatsScreen,\n    Channels,\n    More,\n    Profile,\n    Members,\n    Gangs,\n    Prizes,\n    Properties,\n    Settings,\n    Info,\n    Police,\n    VIP,\n    Accomplice,\n    AdminEmail,\n    AdminUserWatch,\n    AirplaneShop,\n    Airport,\n    AllAirport,\n    AllBanks,\n    AllBulletfactory,\n    AllGang,\n    AllGarage,\n    AllStats,\n    Backfire,\n    Bank,\n    Blocks,\n    Bulletfactory,\n    Bunker,\n    Casino,\n    ChangeName,\n    ChangePassword,\n    Channel,\n    Chat,\n    ChooseProfession,\n    Code,\n    Contribute,\n    CreateOc,\n    CreateRobbery,\n    CreateStreetrace,\n    Crimes,\n    Detectives,\n    Donate,\n    DownloadApp,\n    EstateAgent,\n    ForgotPassword,\n    Bomb,\n    Forum,\n    Gang,\n    GangAchievements,\n    GangBulletFactory,\n    GangCreate,\n    GangMissions,\n    GangSettings,\n    GangShop,\n    Garage,\n    GarageShop,\n    Gym,\n    Hackers,\n    Hoeren,\n    Home,\n    Hospital,\n    House,\n    Income,\n    InfoGame,\n    InfoRules,\n    Jail: JailScreen,\n    Junkies,\n    Kill,\n    Login,\n    Lotto,\n    ManageObject,\n    Market,\n    MollieComplete,\n    MyObjects,\n    MyProfile,\n    OC,\n    Poker,\n    Privacy,\n    ProtectionShop,\n    Racecars,\n    RecoverPassword,\n    Reports,\n    Rob,\n    Robbery,\n    Shop,\n    SignupEmail,\n    SignupEmail2,\n    Sint,\n    Status,\n    StealCar,\n    SwissBank,\n    Theme,\n    Streetrace,\n    VerifyPhone,\n    VerifyPhoneCode,\n    WeaponShop,\n    Wiet,\n    Work,\n  };\n\n  const Component = screens[screen];\n  return <Component navigation={navigation} screenProps={screenProps} />;\n};\n\nexport default Screen;\n","import * as Icon from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { getRank, numberFormat } from \"../../Util\";\n\nconst StatsHeader = React.memo(({ me, device }) => {\n  const textStyle = {\n    marginRight: 10,\n    marginBottom: 10,\n    color: \"white\",\n  };\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Text style={textStyle}>\n        {me?.name} {me?.gang?.name}\n      </Text>\n      <Text style={textStyle}>❤️ {me?.health}%</Text>\n\n      <Text style={textStyle}>💰 €{numberFormat(me?.cash)},-</Text>\n      <Text style={textStyle}>💵 €{numberFormat(me?.bank)},-</Text>\n      <View style={{ flexDirection: \"row\" }}>\n        <Icon.MaterialCommunityIcons\n          name=\"pistol\"\n          size={18}\n          color={device.theme.secondaryText}\n          style={{ marginRight: 5 }}\n        />\n        <Text style={textStyle}>{numberFormat(me?.bullets)}</Text>\n      </View>\n      <Text style={textStyle}>🔥 {me?.gamepoints}</Text>\n      <Text style={textStyle}>\n        ⭐️ {getRank(me?.rank, \"both\")} ({me?.position}e)\n      </Text>\n    </View>\n  );\n});\n\nexport default StatsHeader;\n","import { useActionSheet } from \"@expo/react-native-action-sheet\";\nimport * as Icon from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  ActivityIndicator,\n  Dimensions,\n  Platform,\n  SafeAreaView,\n  StatusBar,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport CountDown from \"react-native-countdown-component\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Swiper from \"react-native-web-swiper\";\nimport { useDispatch } from \"react-redux\";\nimport User from \"../../components/User\";\nimport { getTextFunction, numberFormat } from \"../../Util\";\nimport ActionsBar from \"./ActionsBar\";\nimport BottomTabs from \"./BottomTabs\";\nimport MapIcon from \"./MapIcon\";\nimport { getZoom } from \"./MapUtil\";\nimport Menus from \"./Menus\";\nimport Modal from \"./Modal\";\nimport Screen from \"./Screen\";\nimport StatsHeader from \"./StatsHeader\";\nconst window = Dimensions.get(\"window\");\n\nconst Overlay = React.memo(\n  ({\n    screenProps,\n    navigation,\n    map,\n    view,\n    setView,\n    setZoom,\n    device,\n    me,\n    selected,\n    setSelected,\n    objects,\n    dragAndDropMode,\n    setDragAndDropMode,\n    territoriesSwiperRefContainer,\n    propertiesSwiperRefContainer,\n    cityAreas,\n    areas,\n    reloadCities,\n    reloadMe,\n    city,\n    selectedAreaIndex,\n    setSelectedAreaIndex,\n  }) => {\n    const dispatch = useDispatch();\n    const window = Dimensions.get(\"window\");\n    const isSmallDevice = window.width < 800;\n    const { showActionSheetWithOptions } = useActionSheet();\n    const getText = getTextFunction(me?.locale);\n    const [loading, setLoading] = useState(false);\n\n    const selectedArea =\n      selectedAreaIndex !== undefined\n        ? areas?.find(\n            (x) => x.code === cityAreas.areas[selectedAreaIndex]?.code\n          )\n        : null;\n    // console.log(\"render overlay\");\n\n    const openActionSheet = () => {\n      // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n\n      const options = [\n        getText(\"killSomeone\"),\n        getText(\"robSomeone\"),\n        getText(\"organizeStreetrace\"),\n        getText(\"organizeRobbery\"),\n      ];\n\n      if (me?.gangId) {\n        options.push(getText(\"organizeOC\"));\n      }\n\n      options.push(getText(\"cancel\"));\n      const destructiveButtonIndex = undefined;\n      const cancelButtonIndex = options.length - 1;\n\n      showActionSheetWithOptions(\n        {\n          options,\n          cancelButtonIndex,\n          destructiveButtonIndex,\n        },\n        (buttonIndex) => {\n          if (buttonIndex === 0) {\n            navigation.navigate(\"Kill\");\n          } else if (buttonIndex === 1) {\n            navigation.navigate(\"Rob\");\n          } else if (buttonIndex === 2) {\n            navigation.navigate(\"CreateStreetrace\");\n          } else if (buttonIndex === 3) {\n            navigation.navigate(\"CreateRobbery\");\n          } else if (buttonIndex === 4 && me?.gangId) {\n            navigation.navigate(\"CreateOc\");\n          }\n          // Do something here depending on the button index selected\n        }\n      );\n    };\n\n    const animateToCity = () => {\n      if (Platform.OS === \"web\") {\n        map.panTo({\n          lat: city.latitude,\n          lng: city.longitude,\n        });\n        console.log(\"animateTocity\");\n        setZoom(getZoom(city?.delta));\n      } else {\n        map.animateToRegion({\n          latitude: city.latitude,\n          longitude: city.longitude,\n          latitudeDelta: city.delta * 1.2,\n          longitudeDelta: city.delta * 1.2,\n        });\n      }\n    };\n\n    const renderTerritoriesSwiper = (\n      <View style={{ height: 150 }}>\n        <Swiper\n          controlsEnabled={false}\n          key={`Swiper1`}\n          ref={territoriesSwiperRefContainer}\n          style={{ flex: 1 }}\n          initialPage={0}\n          onIndexChanged={(position) => {\n            if (position === 0) {\n              //should animate to whole city\n              animateToCity();\n              setSelected(null);\n              setSelectedAreaIndex(null);\n            } else {\n              setSelected(\"area\");\n              setSelectedAreaIndex(position - 1);\n\n              const area = cityAreas.areas[position - 1];\n              // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n              if (Platform.OS === \"web\") {\n                map.panTo({\n                  lat: area.centerLatitude,\n                  lng: area.centerLongitude,\n                });\n                const biggestDelta =\n                  area.latitudeDelta > area.longitudeDelta\n                    ? area.latitudeDelta\n                    : area.longitudeDelta;\n\n                setZoom(getZoom(biggestDelta));\n              } else {\n                map.animateToRegion({\n                  latitude: area.centerLatitude,\n                  longitude: area.centerLongitude,\n                  latitudeDelta: area.latitudeDelta,\n                  longitudeDelta: area.longitudeDelta,\n                });\n              }\n            }\n            //improve this once i have centers.\n          }}\n        >\n          <View style={{ flex: 1 }}>\n            <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"bold\" }}>\n              {me?.city}: {cityAreas.areas.length} {getText(\"territories\")}\n            </Text>\n          </View>\n          {cityAreas.areas.map((area, index) => {\n            const connectedArea = areas?.find((x) => x.code === area.code);\n\n            return (\n              <View key={`page${index}`} style={{ height: 150, flex: 1 }}>\n                <Grid>\n                  <Col>\n                    <Text style={{ color: \"white\" }}>{getText(\"area\")}</Text>\n                  </Col>\n                  <Col size={2}>\n                    <Text style={{ color: \"white\" }}>{area.name}</Text>\n                  </Col>\n                </Grid>\n                <Grid>\n                  <Col>\n                    <Text style={{ color: \"white\" }}>{getText(\"owner\")}</Text>\n                  </Col>\n                  <Col size={2}>\n                    {connectedArea?.user && (\n                      <User\n                        size={40}\n                        user={connectedArea.user}\n                        navigation={navigation}\n                      />\n                    )}\n                  </Col>\n                </Grid>\n\n                <Grid>\n                  <Col>\n                    <Text style={{ color: \"white\" }}>{getText(\"damage\")}</Text>\n                  </Col>\n                  <Col size={2}>\n                    <Text style={{ color: \"white\" }}>\n                      {connectedArea?.damage}% {getText(\"damage\")}\n                    </Text>\n                  </Col>\n                </Grid>\n\n                <Text style={{ color: \"white\" }}></Text>\n              </View>\n            );\n          })}\n        </Swiper>\n      </View>\n    );\n\n    const renderPropertiesSwiper = (\n      <View style={{ height: 100 }}>\n        <Swiper\n          controlsEnabled={false}\n          key={`Swiper2`}\n          ref={propertiesSwiperRefContainer}\n          style={{ flex: 1 }}\n          initialPage={0}\n          onIndexChanged={(position) => {\n            if (position === 0) {\n              //should animate to whole city\n              animateToCity();\n              setSelected(null);\n            } else {\n              const object = objects[position - 1];\n              const latitude = city[`${object.type}Latitude`];\n              const longitude = city[`${object.type}Longitude`];\n\n              // const region = cityAreas.areas[position].area[0]; //first point for now, later pick center\n              // if (latitude && longitude) {\n              //   map.animateToRegion({\n              //     latitude,\n              //     longitude,\n              //     latitudeDelta: (city?.delta / 100) * object.size,\n              //     longitudeDelta: (city?.delta / 100) * object.size,\n              //   });\n              // }\n\n              setSelected(object.type);\n            }\n            //improve this once i have centers.\n          }}\n        >\n          <View style={{ flex: 1 }}>\n            <Text style={{ color: \"white\", fontSize: 24, fontWeight: \"bold\" }}>\n              {me?.city}\n            </Text>\n          </View>\n          {objects.map((object, index) => {\n            const owner = city?.[`${object.type}Owner`];\n            const damage = city?.[`${object.type}Damage`];\n            const profit = city?.[`${object.type}Profit`];\n\n            const ownerProfile = owner ? (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"Profile\", { name: owner })}\n              >\n                <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\n                  {owner}\n                </Text>\n              </TouchableOpacity>\n            ) : (\n              <Text style={{ fontWeight: \"bold\", color: \"white\" }}>\n                ({getText(\"none\")})\n              </Text>\n            );\n\n            return (\n              <View key={`page${index}`} style={{ flex: 1 }}>\n                {owner !== undefined && (\n                  <Grid>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>\n                        {getText(object.type)} {getText(\"owner\")}\n                      </Text>\n                    </Col>\n                    <Col>{ownerProfile}</Col>\n                  </Grid>\n                )}\n\n                {profit !== undefined && (\n                  <Grid>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>\n                        {getText(object.type)} {getText(\"profit\")}\n                      </Text>\n                    </Col>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>\n                        €{numberFormat(profit)},-\n                      </Text>\n                    </Col>\n                  </Grid>\n                )}\n                {damage !== undefined && (\n                  <Grid>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>\n                        {getText(object.type)} {getText(\"damage\")}\n                      </Text>\n                    </Col>\n                    <Col>\n                      <Text style={{ color: \"white\" }}>{damage}%</Text>\n                    </Col>\n                  </Grid>\n                )}\n              </View>\n            );\n          })}\n        </Swiper>\n      </View>\n    );\n\n    const currentObject = objects.find((x) => x.type === selected);\n    const title =\n      selected === \"area\"\n        ? selectedArea?.name\n        : currentObject\n        ? getText(currentObject?.title)\n        : \"\";\n\n    const renderHeader = (\n      <View\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"rgba(0,0,0,0.5)\",\n          top: 0,\n          left: 0,\n          right: 0,\n          padding: 5,\n        }}\n      >\n        <SafeAreaView\n          style={{\n            marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n          }}\n        >\n          {view === \"territories\" ? (\n            renderTerritoriesSwiper\n          ) : view === \"game\" ? (\n            renderPropertiesSwiper\n          ) : (\n            <StatsHeader device={device} me={me} />\n          )}\n        </SafeAreaView>\n      </View>\n    );\n\n    return (\n      <>\n        <Menus\n          areas={screenProps.areas}\n          channels={screenProps.channels}\n          city={city}\n          cityAreas={cityAreas}\n          setSelectedAreaIndex={setSelectedAreaIndex}\n          map={map}\n          setSelected={setSelected}\n          setZoom={setZoom}\n          setView={setView}\n          dispatch={dispatch}\n          device={device}\n          me={me}\n          navigation={navigation}\n        >\n          {renderHeader}\n\n          <View style={{ position: \"absolute\", left: 10, bottom: 135 }}>\n            <Text style={{ fontSize: 30, fontWeight: \"bold\" }}>{title}</Text>\n          </View>\n\n          {view === \"crimes\" && (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 110,\n                left: 5,\n              }}\n            >\n              <MapIcon\n                view={{\n                  icon: Icon.AntDesign,\n                  iconName: \"plus\",\n                  isActive: false,\n                  onPress: openActionSheet,\n                }}\n              />\n            </View>\n          )}\n\n          {!isSmallDevice && (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 110,\n                right: 5,\n              }}\n            >\n              <MapIcon\n                view={{\n                  icon: Icon.Entypo,\n                  iconName: \"menu\",\n                  isActive: false,\n                  onPress: () =>\n                    dispatch({\n                      type: \"SET_MENU_SHOWN\",\n                      value: !device.menuShown,\n                    }),\n                }}\n              />\n            </View>\n          )}\n\n          {loading && (\n            <View\n              style={{\n                position: \"absolute\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0,\n              }}\n            >\n              <ActivityIndicator color=\"black\" size=\"large\" />\n            </View>\n          )}\n\n          {me?.reizenAt > Date.now() && (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 130,\n                right: 5,\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                borderRadius: 20,\n                flexDirection: \"row\",\n                padding: 10,\n              }}\n            >\n              <Icon.Ionicons name=\"ios-airplane\" color=\"white\" size={24} />\n\n              <CountDown\n                until={Math.round((me?.reizenAt - Date.now()) / 1000)}\n                onFinish={() => {\n                  // reloadMe(device.loginToken);\n                }}\n                size={10}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            </View>\n          )}\n\n          {me?.jailAt > Date.now() && (\n            <View\n              style={{\n                position: \"absolute\",\n                top: 180,\n                right: 5,\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                borderRadius: 20,\n                flexDirection: \"row\",\n                padding: 10,\n              }}\n            >\n              <Icon.FontAwesome name=\"bars\" color=\"white\" size={24} />\n\n              <CountDown\n                until={Math.round((me?.jailAt - Date.now()) / 1000)}\n                onFinish={() => {\n                  // reloadMe(device.loginToken);\n                }}\n                size={10}\n                timeToShow={[\"M\", \"S\"]}\n                timeLabels={{ m: null, s: null }}\n              />\n            </View>\n          )}\n\n          <ActionsBar\n            selected={selected}\n            view={view}\n            city={city}\n            me={me}\n            device={device}\n            navigation={navigation}\n            setLoading={setLoading}\n            reloadMe={reloadMe}\n            reloadCities={reloadCities}\n            reloadAreas={screenProps.reloadAreas}\n            selectedArea={selectedArea}\n          />\n\n          {navigation.state.routeName && (\n            <Modal view={view} navigation={navigation} setView={setView}>\n              <Screen navigation={navigation} screenProps={screenProps} />\n            </Modal>\n          )}\n\n          <BottomTabs\n            view={view}\n            setSelected={setSelected}\n            navigation={navigation}\n            setView={setView}\n            animateToCity={animateToCity}\n            dragAndDropMode={dragAndDropMode}\n            setDragAndDropMode={setDragAndDropMode}\n            level={me?.level}\n          />\n\n          {/* \n        \n        <View\n          style={{\n            position: \"absolute\",\n            zIndex: 0,\n            bottom: 0,\n            left: 0,\n          }}\n        >\n          <Image\n            source={require(\"../../../assets/gangster2.png\")}\n            style={{ width: 300, height: 250 }}\n            resizeMode=\"contain\"\n          />\n\n          <Text\n            style={{ position: \"absolute\", top: 40, right: 35, width: 140 }}\n          >\n            He jij daar! Wat ben je aan het doen? Ga eens even snel een misdaad\n            doen! Klik onderin het menu op het tweede icoontje om naar het\n            misdaden overzicht te gaan.\n          </Text>\n        </View> */}\n        </Menus>\n      </>\n    );\n  }\n);\n\nexport default Overlay;\n","import {\n  Circle,\n  GoogleMap,\n  GroundOverlay,\n  LoadScript,\n  OverlayView,\n  Polygon,\n} from \"@react-google-maps/api\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Animated,\n  Dimensions,\n  LayoutAnimation,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  UIManager,\n  View,\n} from \"react-native\";\nimport T from \"../../components/T\";\nimport { doOnce, post } from \"../../Util\";\nimport {\n  API_KEY,\n  getObjectMeta,\n  getPosition,\n  getZoom,\n  objects,\n  OBJECT_SIZE_FACTOR,\n  rgbs,\n} from \"./MapUtil\";\nimport Overlay from \"./Overlay\";\nconst mapStyle = require(\"./mapStyle.json\");\nconst mapStyleNight = require(\"./mapStyleNight.json\");\n\nconst citiesAreas = require(\"../../../assets/map/cities.json\");\n\nif (Platform.OS === \"android\") {\n  if (UIManager.setLayoutAnimationEnabledExperimental) {\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n}\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst ReactMap = React.memo(({ zoom, setMap, children, setMapReady }) => {\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n    setMapReady(true);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey={API_KEY}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        zoom={zoom}\n        initialZoom={zoom}\n        //center={{ lat: city?.latitude, lng: city?.longitude }}\n        onLoad={onLoad}\n        options={{ disableDefaultUI: true }}\n        onUnmount={onUnmount}\n      >\n        {children}\n      </GoogleMap>\n    </LoadScript>\n  );\n});\n\nconst Territories = React.memo(\n  ({ territories, MapsComponent, onPress, opacity }) => {\n    return territories.map(({ area, userId, gangId }, index) => {\n      const number = gangId ? gangId : userId ? userId : 0;\n      const rgb = !number ? \"255,255,255\" : rgbs[number % (rgbs.length - 1)];\n      const key = `polygon${index}`;\n      const onClick = () => onPress(index);\n      const fillColor = `rgba(${rgb},${opacity})`;\n      return Platform.OS === \"web\" ? (\n        <Polygon\n          key={key}\n          onClick={onClick}\n          path={area.map((x) => ({ lat: x.latitude, lng: x.longitude }))}\n          options={{ fillColor }}\n        />\n      ) : (\n        <MapsComponent.Polygon\n          key={key}\n          onPress={onClick}\n          tappable\n          coordinates={area}\n          fillColor={fillColor}\n        />\n      );\n    });\n  }\n);\n\nconst GameObjects = React.memo(\n  ({\n    city,\n    object,\n    index,\n    dragAndDropMode,\n    MapsComponent,\n    isSelected,\n    setSelected,\n    reloadCities,\n    cityAreas,\n    level,\n    myName,\n    device,\n    propertiesSwiperRefContainer,\n  }) => {\n    // console.log(\"RENDER GAME OBJECT\", index);\n\n    const {\n      latitude,\n      longitude,\n      deltaLatitude,\n      deltaLongitude,\n      biggestDeltaLatitude,\n      radius,\n      zoom,\n      square,\n      bounds,\n      platformBounds,\n    } = getObjectMeta({ object, index, city, cityAreas });\n\n    const draggable = level >= 5;\n    const onDragEnd = async ({ nativeEvent: { coordinate } }) => {\n      const { response, success } = await post(\"moveBuilding\", {\n        loginToken: device.loginToken,\n        type: object.type,\n        latitude: coordinate.latitude,\n        longitude: coordinate.longitude,\n      });\n      reloadCities();\n      if (!success) {\n        Alert.alert(response);\n      }\n    };\n\n    const image = dragAndDropMode ? (\n      <Animated.Image\n        source={object.image}\n        style={{\n          width: object.animated,\n          height: object.animated,\n        }}\n        resizeMode=\"contain\"\n      />\n    ) : null;\n\n    const onPressObject = () => {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n\n      isSelected ? setSelected(null) : setSelected(object.type);\n\n      propertiesSwiperRefContainer?.current?.goTo(index + 1);\n    };\n\n    return Platform.OS === \"web\" ? (\n      <>\n        {isSelected ? (\n          <Circle\n            key={`circle${index}${isSelected}`}\n            center={{ lat: latitude, lng: longitude }}\n            radius={radius}\n            options={{ fillColor: \"rgba(0,0,0,0.5)\" }}\n          />\n        ) : city?.[`${object.type}Owner`] === myName ? (\n          <Circle\n            key={`circle${index}${isSelected}`}\n            center={{ lat: latitude, lng: longitude }}\n            radius={radius}\n            options={{ fillColor: \"rgba(0,255,0,0.5)\" }}\n          />\n        ) : null}\n\n        <GroundOverlay\n          onClick={onPressObject}\n          key={`overlay${index}${isSelected}`} //add selected to the key to ensure rerender after selected changes\n          url={object.image}\n          //dont use onpress on the overlay because it only works on android. use an invisible polygon instead at the same location\n          // tappable\n          // onPress={() => navigation.navigate(object.to)}\n          bounds={bounds}\n        />\n      </>\n    ) : dragAndDropMode ? (\n      <MapsComponent.Marker\n        draggable={draggable}\n        onDragEnd={onDragEnd}\n        key={`object${index}`}\n        coordinate={{ latitude, longitude }}\n      >\n        {image}\n      </MapsComponent.Marker>\n    ) : (\n      <>\n        {isSelected ? (\n          <MapsComponent.Circle\n            key={`circle${index}${isSelected}`}\n            center={{ latitude, longitude }}\n            radius={radius}\n            fillColor={\"rgba(0,0,0,0.5)\"}\n          />\n        ) : city?.[`${object.type}Owner`] === myName ? (\n          <MapsComponent.Circle\n            key={`circle${index}${isSelected}`}\n            center={{ latitude, longitude }}\n            radius={radius}\n            fillColor={\"rgba(0,255,0,0.5)\"}\n          />\n        ) : null}\n\n        <MapsComponent.Overlay\n          zIndex={1} //works for android to render it over the areas\n          key={`overlay${index}${isSelected}`} //add selected to the key to ensure rerender after selected changes\n          image={object.image}\n          //dont use onpress on the overlay because it only works on android. use an invisible polygon instead at the same location\n          // tappable\n          // onPress={() => navigation.navigate(object.to)}\n          bounds={platformBounds}\n        />\n\n        <MapsComponent.Polygon\n          key={`overlayPolygon${index}`}\n          onPress={onPressObject}\n          tappable\n          coordinates={square}\n          zIndex={2}\n          strokeWidth={0.00001}\n          // fillColor={`rgba(${rgb},${opacity})`}\n        />\n      </>\n    );\n  }\n);\n\n// GameObjects.whyDidYouRender = true;\n\nconst Map = ({\n  navigation,\n  screenProps,\n  screenProps: {\n    device,\n    cities,\n    areas,\n    me,\n    ocs,\n    reloadMe,\n    streetraces,\n    robberies,\n    reloadCities,\n    reloadStreetraces,\n    reloadOcs,\n    reloadRobberies,\n    reloadAreas,\n  },\n}) => {\n  const [dragAndDropMode, setDragAndDropMode] = useState(false);\n\n  const [selected, setSelected] = useState(null);\n  const [selectedAreaIndex, setSelectedAreaIndex] = useState(null); //index\n\n  const [map, setMap] = useState(null);\n  const [view, setView] = useState(\"game\");\n  const [region, setRegion] = useState({\n    latitude: 52.378, //amsterdam\n    longitude: 4.89707,\n    latitudeDelta: 0.05,\n    longitudeDelta: 0.05,\n  });\n  const city = React.useMemo(() => cities?.find((x) => x.city === me?.city), [\n    cities,\n    me?.city,\n  ]);\n  const [mapReady, setMapReady] = useState(false);\n\n  const [zoom, setZoom] = useState(getZoom(city?.delta));\n  const territoriesSwiperRefContainer = useRef(null);\n  const propertiesSwiperRefContainer = useRef(null);\n\n  doOnce(reloadCities);\n\n  doOnce(() => reloadOcs(device.loginToken));\n  doOnce(reloadStreetraces);\n  doOnce(reloadRobberies);\n  useEffect(() => {\n    reloadAreas(me?.city);\n  }, [me?.city]);\n\n  useEffect(() => {\n    if (mapReady && city) {\n      console.log(\"set zoom\", city?.zoom);\n      setTimeout(() => {\n        setZoom(city?.zoom);\n      }, 1000);\n    }\n  }, [city, mapReady]);\n\n  const window = Dimensions.get(\"window\");\n\n  const cityAreas = citiesAreas.find((x) => x.city === me?.city);\n\n  const objectsWithAnimated = objects.map((object) => ({\n    ...object,\n    animated: useRef(\n      new Animated.Value(\n        (city?.delta * OBJECT_SIZE_FACTOR * object.size) / region.latitudeDelta\n      )\n    ).current,\n  }));\n\n  useEffect(() => {\n    if (map && city && mapReady) {\n      const reg = {\n        latitude: city?.latitude, //amsterdam\n        longitude: city?.longitude,\n        latitudeDelta: city?.delta,\n        longitudeDelta: city?.delta,\n      };\n      setRegion(reg);\n\n      if (Platform.OS === \"web\") {\n        console.log(\"panToCity\");\n        map.panTo({ lat: city?.latitude, lng: city?.longitude });\n      } else {\n        map.animateToRegion(reg);\n      }\n      //map.fitToElements(true);\n    }\n  }, [city, map, mapReady]);\n\n  const territories = React.useMemo(\n    () =>\n      cityAreas.areas.map((area) => {\n        const connectedArea = areas?.find((x) => x.code === area.code);\n\n        return {\n          ...area,\n          userId: connectedArea?.userId,\n          gangId: connectedArea?.gangId || connectedArea?.user?.gangId,\n        };\n      }),\n    [areas]\n  );\n\n  if (!me || !city) {\n    return <T>No city, no me</T>;\n  }\n  //useEffect(() => {\n  //map?.fitToElements(true);\n  //}, [view]);\n\n  const NativeMapsComponent = Platform.select({\n    native: () => require(\"react-native-maps\").default,\n    web: () => null,\n  })();\n\n  const crimeIcons = [\n    {\n      inactive: me?.autostelenAt + 60000 - Date.now() > 0,\n      to: \"StealCar\",\n      icon: \"🚘\",\n      type: \"stealcar\",\n    },\n\n    {\n      inactive: me?.crimeAt + 60000 - Date.now() > 0,\n      to: \"Crimes\",\n      icon: \"💰\",\n      type: \"crimes\",\n    },\n\n    {\n      inactive: me?.junkiesAt + 120000 - Date.now() > 0,\n      to: \"Junkies\",\n      icon: \"🧔\",\n      type: \"junkies\",\n    },\n\n    {\n      inactive: me?.hoerenAt + 120000 - Date.now() > 0,\n      to: \"Hoeren\",\n      icon: \"💃\",\n      type: \"hoeren\",\n    },\n    {\n      inactive: me?.workEndsAt - Date.now() > 0,\n      to: \"Work\",\n      icon: \"🛠\",\n      type: \"work\",\n    },\n\n    {\n      inactive: me?.wietAt + 120000 - Date.now() > 0,\n      to: \"Wiet\",\n      icon: \"🌳\",\n      type: \"wiet\",\n    },\n  ].filter((x) => !x.inactive);\n\n  const ocIcons = ocs\n    ?.filter((x) => x.city === me?.city)\n    .map((oc) => ({\n      icon: \"🔥\",\n      type: \"oc\",\n      to: \"OC\",\n      id: oc.id,\n      params: { id: oc.id },\n    }));\n  const streetraceIcons = streetraces\n    ?.filter((x) => x.city === me?.city)\n    .map((x) => ({\n      icon: \"🛣\",\n      type: \"streetrace\",\n      id: x.id,\n      to: \"Streetrace\",\n      params: { id: x.id },\n    }));\n\n  const robberyIcons = robberies\n    ?.filter((x) => x.city === me?.city)\n    .map((x) => ({\n      icon: \"🚨\",\n      type: \"robbery\",\n      to: \"Robbery\",\n      id: x.id,\n      params: { id: x.id },\n    }));\n\n  const icons = crimeIcons\n    .concat(ocIcons)\n    .concat(streetraceIcons)\n    .concat(robberyIcons)\n    .filter((x) => !!x);\n\n  const iconToMapIcon = (icon) => {\n    const position = getPosition(icon.id, icon.type); //0-1\n\n    const areaIndex = Math.floor(cityAreas.areas.length * position);\n\n    const area = cityAreas.areas[areaIndex];\n\n    const pseudoRandom = (x, y) => x + position * (y - x);\n\n    const latitude = pseudoRandom(\n      area.centerLatitude - area.latitudeDelta / 2,\n      area.centerLatitude + area.latitudeDelta / 2\n    );\n    const longitude = pseudoRandom(\n      area.centerLongitude - area.longitudeDelta / 2,\n      area.centerLongitude + area.longitudeDelta / 2\n    );\n\n    const onPress = () => navigation.navigate(icon.to);\n\n    const theIcon = icon.icon;\n\n    const deltaLatitude = (city?.delta * 3) / 100; //width\n    const deltaLongitude = (city?.delta * 3) / 100;\n\n    const topLeftLatitude = latitude - deltaLatitude / 2;\n    const topLeftLongitude = longitude - deltaLongitude / 2;\n    const bottomRightLatitude = latitude + deltaLatitude / 2;\n    const bottomRightLongitude = longitude + deltaLongitude / 2;\n\n    const topRightLatitude = latitude + deltaLatitude / 2;\n    const topRightLongitude = longitude - deltaLongitude / 2;\n    const bottomLeftLatitude = latitude - deltaLatitude / 2;\n    const bottomLeftLongitude = longitude + deltaLongitude / 2;\n\n    const square = [\n      { lat: topLeftLatitude, lng: topLeftLongitude },\n      { lat: topRightLatitude, lng: topRightLongitude },\n      {\n        lat: bottomRightLatitude,\n        lng: bottomRightLongitude,\n      },\n      { lat: bottomLeftLatitude, lng: bottomLeftLongitude },\n    ];\n\n    return {\n      onPress,\n      icon: theIcon,\n      latitude,\n      longitude,\n      square,\n    };\n  };\n\n  const rightObjects = React.useMemo(\n    () => (dragAndDropMode ? objectsWithAnimated : objects),\n    [dragAndDropMode, region.latitudeDelta]\n  );\n  const renderGame = React.useMemo(\n    () =>\n      rightObjects.map((object, index) => {\n        const isSelected = selected === object.type;\n\n        return (\n          <GameObjects\n            key={`game${object.type}`}\n            propertiesSwiperRefContainer={propertiesSwiperRefContainer}\n            MapsComponent={NativeMapsComponent}\n            city={city}\n            dragAndDropMode={dragAndDropMode}\n            object={object}\n            index={index}\n            isSelected={isSelected}\n            cityAreas={cityAreas}\n            setSelected={setSelected}\n            reloadCities={reloadCities}\n            level={me?.level}\n            device={device}\n            myName={me?.name}\n          />\n        );\n      }),\n    [\n      rightObjects,\n      selected,\n      city,\n      dragAndDropMode,\n      cityAreas.city,\n      me?.name,\n      me?.level,\n      device,\n    ]\n  );\n\n  const renderTerritories = React.useMemo(() => {\n    return (\n      <Territories\n        opacity={view === \"territories\" ? 0.4 : 0.2}\n        onPress={\n          view === \"territories\"\n            ? (index) => {\n                setSelected(\"area\");\n                setSelectedAreaIndex(index);\n                territoriesSwiperRefContainer?.current?.goTo(index + 1);\n              }\n            : () => null\n        }\n        territories={territories}\n        MapsComponent={NativeMapsComponent}\n      />\n    );\n  }, [view, territories]);\n\n  const renderCrimes = icons\n    .map(iconToMapIcon)\n    .map(({ onPress, icon, latitude, longitude, square }, index) => {\n      //random positions on the first territorium\n      const view = (\n        <TouchableOpacity onPress={onPress} style={{ alignItems: \"center\" }}>\n          <Text style={{ fontSize: 24 }}>{icon}</Text>\n        </TouchableOpacity>\n      );\n      return Platform.OS === \"web\" ? (\n        <OverlayView\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n          // onClick={onPress}\n          key={`icon${index}`}\n          position={{ lat: latitude, lng: longitude }}\n        >\n          {view}\n        </OverlayView>\n      ) : (\n        <NativeMapsComponent.Marker\n          key={`icon${index}`}\n          onPress={onPress}\n          coordinate={{ latitude, longitude }}\n        >\n          {view}\n        </NativeMapsComponent.Marker>\n      );\n    });\n\n  const renderAllMapObjects = React.useMemo(() => {\n    const shouldRenderTerritories =\n      Platform.OS === \"web\"\n        ? view === \"territories\"\n        : view === \"territories\" || view === \"game\" || view === \"crimes\";\n    return (\n      <>\n        {shouldRenderTerritories && renderTerritories}\n        {/* NB: areas.length moet geladen zijn voor renderGame, anders rendert hij de teritoriums over de game heen */}\n        {(view === \"stats\" || view === \"more\" || view === \"game\") &&\n          areas.length > 0 &&\n          renderGame}\n\n        {view === \"crimes\" && renderCrimes}\n      </>\n    );\n  }, [view, renderTerritories, renderGame, renderCrimes, areas.length]);\n\n  const renderMapsComponentNative = () => {\n    return (\n      <NativeMapsComponent\n        pitchEnabled={false}\n        rotateEnabled={false}\n        onMapReady={() => {\n          console.log(\"map ready\");\n          setMapReady(true);\n        }}\n        // provider={PROVIDER_GOOGLE}\n        customMapStyle={\n          Platform.OS === \"android\"\n            ? moment().hour() > 18 && moment().hour() < 7\n              ? mapStyleNight\n              : mapStyle\n            : undefined\n        }\n        ref={(map) => setMap(map)}\n        initialRegion={region}\n        onRegionChange={(r) => {\n          setRegion(r);\n\n          if (dragAndDropMode) {\n            objectsWithAnimated.forEach((object) => {\n              Animated.timing(object.animated, {\n                toValue:\n                  (city?.delta * OBJECT_SIZE_FACTOR * object.size) /\n                  r.latitudeDelta,\n                duration: 100,\n                useNativeDriver: false,\n              }).start();\n            });\n          }\n        }}\n        style={StyleSheet.absoluteFill}\n      >\n        {renderAllMapObjects}\n      </NativeMapsComponent>\n    );\n  };\n\n  const renderOverlay = (\n    <Overlay\n      screenProps={screenProps}\n      setZoom={setZoom}\n      map={map}\n      view={view}\n      setView={setView}\n      selected={selected}\n      setSelected={setSelected}\n      setSelectedAreaIndex={setSelectedAreaIndex}\n      selectedAreaIndex={selectedAreaIndex}\n      device={device}\n      me={me}\n      dragAndDropMode={dragAndDropMode}\n      setDragAndDropMode={setDragAndDropMode}\n      territoriesSwiperRefContainer={territoriesSwiperRefContainer}\n      propertiesSwiperRefContainer={propertiesSwiperRefContainer}\n      cityAreas={cityAreas}\n      areas={areas}\n      navigation={navigation}\n      city={city}\n      objects={objects}\n      reloadMe={reloadMe}\n      reloadCities={reloadCities}\n    />\n  );\n\n  return Platform.OS === \"web\" ? (\n    <View style={{ flex: 1 }}>\n      <ReactMap setMap={setMap} zoom={zoom} setMapReady={setMapReady}>\n        {renderAllMapObjects}\n      </ReactMap>\n      {renderOverlay}\n    </View>\n  ) : (\n    <View style={{ flex: 1 }}>\n      {renderMapsComponentNative()}\n      {renderOverlay}\n    </View>\n  );\n};\n\nexport default Map;\n","import Constants from \"./Constants\";\nimport { get } from \"./Util\";\n\nconst fetchStreetraces = (payload) => {\n  return get(\"streetraces\");\n};\n\nconst fetchRobberies = (payload) => {\n  return get(\"robberies\");\n};\n\nconst fetchOcs = (payload) => {\n  return get(`ocs?token=${payload.token}`);\n};\n\nconst fetchCities = (payload) => {\n  return get(\"cities\");\n};\n\nconst fetchChannels = (payload) => {\n  return get(`channelsubs?loginToken=${payload.token}`);\n};\n\nconst fetchAreas = (payload) => {\n  return get(`areas?city=${payload.city}`);\n};\n\nconst fetchMe = (payload) => {\n  const url = `${Constants.SERVER_ADDR}/me?token=${payload.loginToken}`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.json())\n    .then(async (me) => {\n      // console.log(\"got me\", me);\n      return me;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst Api = {\n  fetchMe,\n  fetchCities,\n  fetchStreetraces,\n  fetchOcs,\n  fetchRobberies,\n  fetchAreas,\n  fetchChannels,\n};\nexport default Api;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport Api from \"./Api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchMe(action) {\n  try {\n    const me = yield call(Api.fetchMe, action.payload);\n\n    yield put({ type: \"ME_FETCH_SUCCEEDED\", me });\n  } catch (e) {\n    yield put({ type: \"ME_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchStreetraces(action) {\n  try {\n    const { streetraces } = yield call(Api.fetchStreetraces, action.payload);\n\n    yield put({ type: \"STREETRACES_FETCH_SUCCEEDED\", streetraces });\n  } catch (e) {\n    yield put({ type: \"STREETRACES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchRobberies(action) {\n  try {\n    const { robberies } = yield call(Api.fetchRobberies, action.payload);\n\n    yield put({ type: \"ROBBERIES_FETCH_SUCCEEDED\", robberies });\n  } catch (e) {\n    yield put({ type: \"ROBBERIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchOcs(action) {\n  try {\n    const { ocs } = yield call(Api.fetchOcs, action.payload);\n\n    yield put({ type: \"OCS_FETCH_SUCCEEDED\", ocs });\n  } catch (e) {\n    yield put({ type: \"OCS_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchCities(action) {\n  try {\n    const { cities } = yield call(Api.fetchCities, action.payload);\n\n    yield put({ type: \"CITIES_FETCH_SUCCEEDED\", cities });\n  } catch (e) {\n    yield put({ type: \"CITIES_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchChannels(action) {\n  try {\n    const channels = yield call(Api.fetchChannels, action.payload);\n\n    yield put({ type: \"CHANNELS_FETCH_SUCCEEDED\", channels });\n  } catch (e) {\n    yield put({ type: \"CHANNELS_FETCH_FAILED\", message: e.message });\n  }\n}\n\nfunction* fetchAreas(action) {\n  try {\n    const { areas } = yield call(Api.fetchAreas, action.payload);\n\n    yield put({ type: \"AREAS_FETCH_SUCCEEDED\", areas });\n  } catch (e) {\n    yield put({ type: \"AREAS_FETCH_FAILED\", message: e.message });\n  }\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"ME_FETCH_REQUESTED\", fetchMe);\n  yield takeLatest(\"CITIES_FETCH_REQUESTED\", fetchCities);\n  yield takeLatest(\"CHANNELS_FETCH_REQUESTED\", fetchChannels);\n  yield takeLatest(\"AREAS_FETCH_REQUESTED\", fetchAreas);\n  yield takeLatest(\"STREETRACES_FETCH_REQUESTED\", fetchStreetraces);\n  yield takeLatest(\"OCS_FETCH_REQUESTED\", fetchOcs);\n  yield takeLatest(\"ROBBERIES_FETCH_REQUESTED\", fetchRobberies);\n}\n\nexport default mySaga;\n","import { AsyncStorage } from \"react-native\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistCombineReducers, persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./Sagas\";\nimport { DEFAULT_THEME, Theme } from \"./screens/Theme\";\n\ntype Movement = {\n  action: string,\n  locationX: number,\n  locationY: number,\n  timestamp: number,\n};\ntype Device = {\n  loginToken: string,\n  logged: boolean,\n  theme: Theme,\n  foregrounded: number,\n  menuShown: Boolean,\n  movements: Movement[],\n};\n\nconst initDevice = {\n  loginToken: \"\",\n  logged: false,\n  theme: DEFAULT_THEME,\n  isConnected: 2,\n  menuShown: false,\n  foregrounded: 0,\n  movements: [],\n  menu: {\n    left: [0, 1, 2, 3, 4, 5, 6],\n    right: [0, 1, 2, 3, 4, 5, 6],\n  },\n};\n\nconst deviceReducer = (state: Device = initDevice, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initDevice;\n    }\n\n    case \"MENU_SET_RIGHT_ACTIVE_SECTIONS\": {\n      return { ...state, menu: { left: state.menu.left, right: action.value } };\n    }\n    case \"MENU_SET_LEFT_ACTIVE_SECTIONS\": {\n      return {\n        ...state,\n        menu: { right: state.menu.right, left: action.value },\n      };\n    }\n\n    case \"SET_IS_CONNECTED\": {\n      return { ...state, isConnected: action.value };\n    }\n\n    case \"SET_MENU_SHOWN\": {\n      return { ...state, menuShown: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN\": {\n      return { ...initDevice, loginToken: action.value };\n    }\n\n    case \"SET_LOGIN_TOKEN_AND_LOGIN\": {\n      return { ...initDevice, loginToken: action.value, logged: true };\n    }\n\n    case \"SET_LOGGED\": {\n      return { ...state, logged: action.value };\n    }\n\n    case \"SET_THEME\": {\n      return { ...state, theme: action.value };\n    }\n\n    case \"ADD_MOVEMENT\": {\n      return { ...state, movements: state.movements.concat([action.value]) };\n    }\n\n    case \"CLEAR_MOVEMENTS\": {\n      return { ...state, movements: [] };\n    }\n\n    case \"INCREASE_FOREGROUNDED\": {\n      return { ...state, foregrounded: state.foregrounded + 1 };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst initMe = null;\nconst meReducer = (state = initMe, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initMe;\n    }\n\n    case \"ME_FETCH_SUCCEEDED\": {\n      return action.me;\n    }\n\n    case \"ME_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initStreetraces = null;\nconst streetracesReducer = (state = initStreetraces, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initStreetraces;\n    }\n\n    case \"STREETRACES_FETCH_SUCCEEDED\": {\n      return action.streetraces;\n    }\n\n    case \"STREETRACES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initRobberies = null;\nconst robberiesReducer = (state = initRobberies, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initRobberies;\n    }\n\n    case \"ROBBERIES_FETCH_SUCCEEDED\": {\n      return action.robberies;\n    }\n\n    case \"ROBBERIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initOcs = null;\nconst ocsReducer = (state = initOcs, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initOcs;\n    }\n\n    case \"OCS_FETCH_SUCCEEDED\": {\n      return action.ocs;\n    }\n\n    case \"OCS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initCities = null;\nconst citiesReducer = (state = initCities, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initCities;\n    }\n    case \"CITIES_FETCH_SUCCEEDED\": {\n      return action.cities;\n    }\n    case \"CITIES_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initAreas = [];\nconst areasReducer = (state = initAreas, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initAreas;\n    }\n    case \"AREAS_FETCH_SUCCEEDED\": {\n      return action.areas;\n    }\n    case \"AREAS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst initChannels = [];\nconst channelsReducer = (state = initChannels, action) => {\n  switch (action.type) {\n    case \"PURGE\": {\n      return initChannels;\n    }\n    case \"CHANNELS_FETCH_SUCCEEDED\": {\n      return action.channels;\n    }\n    case \"CHANNELS_FETCH_FAILED\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nconst config = {\n  key: \"v1\",\n  storage: AsyncStorage,\n  whitelist: [\n    \"device\",\n    \"me\",\n    \"streetraces\",\n    \"cities\",\n    \"ocs\",\n    \"robberies\",\n    \"areas\",\n    \"channels\",\n  ],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = {\n  device: deviceReducer,\n  me: meReducer,\n  cities: citiesReducer,\n  streetraces: streetracesReducer,\n  ocs: ocsReducer,\n  robberies: robberiesReducer,\n  areas: areasReducer,\n  channels: channelsReducer,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(mySaga);\n\nexport { persistor, store };\n","import { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport React, { useState } from \"react\";\nimport { Dimensions, Platform } from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { connect, Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { AlertProvider } from \"./components/AlertProvider\";\nimport ConnectionProvider from \"./components/ConnectionProvider\";\nimport { IntervalProvider } from \"./components/IntervalProvider\";\nimport { CustomDrawerContentComponent, withLayout } from \"./Layout\";\nimport Accomplice from \"./screens/Accomplice\";\nimport AdminEmail from \"./screens/AdminEmail\";\nimport AdminUserWatch from \"./screens/AdminUserWatch\";\nimport AirplaneShop from \"./screens/AirplaneShop\";\nimport Airport from \"./screens/Airport\";\nimport AllAirport from \"./screens/AllAirport\";\nimport AllBanks from \"./screens/AllBanks\";\nimport AllBulletfactory from \"./screens/AllBulletfactory\";\nimport AllGang from \"./screens/AllGang\";\nimport AllGarage from \"./screens/AllGarage\";\nimport AllStats from \"./screens/AllStats\";\nimport Backfire from \"./screens/Backfire\";\nimport Bank from \"./screens/Bank\";\nimport Blocks from \"./screens/Blocks\";\nimport Bomb from \"./screens/Bomb\";\nimport Bulletfactory from \"./screens/Bulletfactory\";\nimport Bunker from \"./screens/Bunker\";\nimport Casino from \"./screens/Casino\";\nimport ChangeName from \"./screens/ChangeName\";\nimport ChangePassword from \"./screens/ChangePassword\";\nimport Channel from \"./screens/Channel\";\nimport Channels from \"./screens/Channels\";\nimport Chat from \"./screens/Chat\";\nimport ChooseProfession from \"./screens/ChooseProfession\";\nimport Code from \"./screens/Code\";\nimport Contribute from \"./screens/Contribute\";\nimport CreateOc from \"./screens/CreateOC\";\nimport CreateRobbery from \"./screens/CreateRobbery\";\nimport CreateStreetrace from \"./screens/CreateStreetrace\";\nimport Crimes from \"./screens/Crimes\";\nimport Detectives from \"./screens/Detectives\";\nimport Donate from \"./screens/Donate\";\nimport DownloadApp from \"./screens/DownloadApp\";\nimport EstateAgent from \"./screens/EstateAgent\";\nimport ForgotPassword from \"./screens/ForgotPassword\";\nimport Forum from \"./screens/Forum\";\nimport Gang from \"./screens/Gang\";\nimport GangAchievements from \"./screens/GangAchievements\";\nimport GangBulletFactory from \"./screens/GangBulletFactory\";\nimport GangCreate from \"./screens/GangCreate\";\nimport GangMissions from \"./screens/GangMissions\";\nimport Gangs from \"./screens/Gangs\";\nimport GangSettings from \"./screens/GangSettings\";\nimport GangShop from \"./screens/GangShop\";\nimport Garage from \"./screens/Garage\";\nimport GarageShop from \"./screens/GarageShop\";\nimport Gym from \"./screens/Gym\";\nimport Hackers from \"./screens/Hackers\";\nimport Hoeren from \"./screens/Hoeren\";\nimport Home from \"./screens/Home\";\nimport Hospital from \"./screens/Hospital\";\nimport House from \"./screens/House\";\nimport Income from \"./screens/Income\";\nimport Info from \"./screens/Info\";\nimport InfoGame from \"./screens/InfoGame\";\nimport InfoRules from \"./screens/InfoRules\";\nimport JailScreen from \"./screens/Jail\";\nimport Junkies from \"./screens/Junkies\";\nimport Kill from \"./screens/Kill\";\nimport Login from \"./screens/Login\";\nimport Lotto from \"./screens/Lotto\";\nimport ManageObject from \"./screens/ManageObject\";\nimport Map from \"./screens/Map/Map\";\nimport Market from \"./screens/Market\";\nimport Members from \"./screens/Members\";\nimport MollieComplete from \"./screens/MollieComplete\";\nimport More from \"./screens/More\";\nimport MyObjects from \"./screens/MyObjects\";\nimport MyProfile from \"./screens/MyProfile\";\nimport OC from \"./screens/OC\";\nimport Poker from \"./screens/Poker\";\nimport Police from \"./screens/Police\";\nimport Privacy from \"./screens/Privacy\";\nimport Prizes from \"./screens/Prizes\";\nimport Profile from \"./screens/Profile\";\nimport ProtectionShop from \"./screens/ProtectionShop\";\nimport Racecars from \"./screens/Racecars\";\nimport RecoverPassword from \"./screens/RecoverPassword\";\nimport Reports from \"./screens/Reports\";\nimport Rob from \"./screens/Rob\";\nimport Robbery from \"./screens/Robbery\";\nimport Settings from \"./screens/Settings\";\nimport Shop from \"./screens/Shop\";\nimport SignupEmail from \"./screens/SignupEmail\";\nimport SignupEmail2 from \"./screens/SignupEmail2\";\nimport Sint from \"./screens/Sint\";\nimport Stats from \"./screens/Stats\";\nimport Status from \"./screens/Status\";\nimport StealCar from \"./screens/StealCar\";\nimport Streetrace from \"./screens/Streetrace\";\nimport SwissBank from \"./screens/SwissBank\";\nimport Theme from \"./screens/Theme\";\nimport VerifyPhone from \"./screens/VerifyPhone\";\nimport VerifyPhoneCode from \"./screens/VerifyPhoneCode\";\nimport VIP from \"./screens/VIP\";\nimport WeaponShop from \"./screens/WeaponShop\";\nimport Wiet from \"./screens/Wiet\";\nimport Work from \"./screens/Work\";\nimport { persistor, store } from \"./Store\";\n\n//hoi\n\n// if (process.env.NODE_ENV === \"development\") {\n//   const whyDidYouRender = require(\"@welldone-software/why-did-you-render\");\n//   whyDidYouRender(React, {\n//     trackAllPureComponents: false,\n//   });\n// }\n\nconst rightContainer =\n  Platform.OS === \"web\" ? createBrowserApp : createAppContainer;\n\nconst window = Dimensions.get(\"window\");\nconst isSmallDevice = window.width < 800;\n\nconst rightNavigator =\n  Platform.OS === \"web\"\n    ? isSmallDevice\n      ? createDrawerNavigator\n      : createSwitchNavigator\n    : createStackNavigator;\n\nconst routes = {\n  Home: {\n    screen: withLayout(Home),\n    path: \"\",\n  },\n\n  GangCreate: withLayout(GangCreate),\n  AllGang: withLayout(AllGang),\n\n  Gang: {\n    screen: withLayout(Gang),\n    path: \"Gang/:name\",\n  },\n\n  Gangs: withLayout(Gangs),\n  GangShop: withLayout(GangShop),\n  GangSettings: withLayout(GangSettings),\n  GangAchievements: withLayout(GangAchievements),\n  GangMissions: withLayout(GangMissions),\n  GangBulletFactory: withLayout(GangBulletFactory),\n  AllBulletfactory: withLayout(AllBulletfactory),\n\n  Robbery: withLayout(Robbery),\n  CreateRobbery: withLayout(CreateRobbery),\n\n  Status: withLayout(Status),\n  Hackers: withLayout(Hackers),\n  Police: withLayout(Police),\n  StealCar: withLayout(StealCar),\n  CreateStreetrace: withLayout(CreateStreetrace),\n  Channels: withLayout(Channels),\n  Channel: withLayout(Channel),\n  AllBanks: withLayout(AllBanks),\n  Poker: withLayout(Poker),\n  Lotto: withLayout(Lotto),\n  Bomb: withLayout(Bomb),\n  Detectives: withLayout(Detectives),\n  SwissBank: withLayout(SwissBank),\n\n  Crimes: withLayout(Crimes),\n  Jail: withLayout(JailScreen),\n  Kill: withLayout(Kill),\n  Rob: withLayout(Rob),\n  // Showroom: withLayout(Showroom),\n  Bank: withLayout(Bank),\n  Shop: withLayout(Shop),\n  Garage: withLayout(Garage),\n  GarageShop: withLayout(GarageShop),\n  WeaponShop: withLayout(WeaponShop),\n  ProtectionShop: withLayout(ProtectionShop),\n\n  AllGarage: withLayout(AllGarage),\n  ManageObject: withLayout(ManageObject),\n  MyObjects: withLayout(MyObjects),\n  Racecars: withLayout(Racecars),\n  Backfire: withLayout(Backfire),\n  Accomplice: withLayout(Accomplice),\n  Streetrace: withLayout(Streetrace),\n  Bulletfactory: withLayout(Bulletfactory),\n  Casino: withLayout(Casino),\n  Airport: withLayout(Airport),\n  AllAirport: withLayout(AllAirport),\n  Members: withLayout(Members),\n  Stats: withLayout(Stats),\n  Chat: withLayout(Chat),\n  Gym: withLayout(Gym),\n  Wiet: withLayout(Wiet),\n  MollieComplete: withLayout(MollieComplete),\n  Junkies: withLayout(Junkies),\n  Hoeren: withLayout(Hoeren),\n  Bunker: withLayout(Bunker),\n  House: withLayout(House),\n  Donate: withLayout(Donate),\n  Hospital: withLayout(Hospital),\n  Income: withLayout(Income),\n  AdminEmail: withLayout(AdminEmail),\n  AdminUserWatch: withLayout(AdminUserWatch),\n  Forum: withLayout(Forum),\n  Theme: withLayout(Theme),\n  DownloadApp: DownloadApp,\n  VIP: withLayout(VIP),\n  Market: withLayout(Market),\n  Sint: withLayout(Sint),\n  ChooseProfession: withLayout(ChooseProfession),\n  Profile: {\n    screen: withLayout(Profile),\n    path: \"Profile/:name\",\n  },\n\n  //SETTINGS\n  Settings: withLayout(Settings),\n  SignupEmail: withLayout(SignupEmail),\n\n  SignupEmail2: {\n    screen: withLayout(SignupEmail2),\n    path: \"SignupEmail2/:token\",\n  },\n\n  ChangeName: withLayout(ChangeName),\n  VerifyPhoneCode: withLayout(VerifyPhoneCode),\n  ForgotPassword: withLayout(ForgotPassword),\n  Blocks: withLayout(Blocks),\n  Reports: withLayout(Reports),\n  RecoverPassword: {\n    screen: withLayout(RecoverPassword),\n    path: \"RecoverPassword/:token\",\n  },\n\n  Code: {\n    screen: withLayout(Code),\n    path: \"Code/:code\",\n  },\n  Case: {\n    screen: withLayout(Code),\n    path: \"Case/:code\",\n  },\n  Car: {\n    screen: withLayout(Code),\n    path: \"Car/:code\",\n  },\n\n  ChangePassword: {\n    screen: withLayout(ChangePassword),\n  },\n  VerifyPhone: withLayout(VerifyPhone),\n  MyProfile: withLayout(MyProfile),\n  Login: withLayout(Login),\n  Work: withLayout(Work),\n  OC: withLayout(OC),\n  CreateOc: withLayout(CreateOc),\n\n  AirplaneShop: withLayout(AirplaneShop),\n  EstateAgent: withLayout(EstateAgent),\n  //INFO\n  Info: withLayout(Info),\n  InfoGame: withLayout(InfoGame),\n  InfoRules: withLayout(InfoRules),\n  Privacy: withLayout(Privacy),\n  Contribute: withLayout(Contribute),\n  Prizes: withLayout(Prizes),\n  AllStats: withLayout(AllStats),\n  More: withLayout(More),\n};\n\nconst NewContainer = ({ screenProps }) => {\n  const initialNavigationState = {\n    params: null,\n    routeName: null,\n    history: [],\n  };\n  const [navigationState, setNavigationState] = useState(\n    initialNavigationState\n  );\n  const navigation = {\n    navigate: (routeName, params) => {\n      const newHistory = navigationState.history.concat([\n        { routeName, params },\n      ]);\n      setNavigationState({ history: newHistory, routeName, params });\n    },\n\n    resetTo: (routeName, params) => {\n      const newHistory = [{ routeName, params }];\n      setNavigationState({ history: newHistory, routeName, params });\n    },\n\n    state: navigationState,\n    popToTop: () => {\n      setNavigationState(initialNavigationState);\n    },\n    goBack: () => {\n      navigationState.history.pop();\n      setNavigationState({\n        history: navigationState.history,\n        ...(navigationState.history.length > 0\n          ? navigationState.history[navigationState.history.length - 1]\n          : {}),\n      });\n    },\n  };\n\n  const MapWithLayout = Map;\n\n  return <MapWithLayout navigation={navigation} screenProps={screenProps} />;\n};\n\nconst OldContainer = rightContainer(\n  rightNavigator(routes, {\n    drawerPosition: \"right\",\n    edgeWidth: Platform.OS === \"web\" && isSmallDevice ? 0 : undefined,\n    contentComponent: CustomDrawerContentComponent,\n    unmountInactiveRoutes: true,\n    navigationOptions: {\n      drawerLockMode: \"locked-open\",\n    },\n    defaultNavigationOptions: {\n      headerShown: false,\n    },\n  }),\n  {\n    history: \"hash\",\n  }\n);\n\nconst _RootContainer = (props) => {\n  // NB: we got screenProps here , but not navigation\n  // if you also need navigation, use withLayout/Layout\n\n  const Container =\n    props.me?.level >= 2 && props.me?.newVersion ? NewContainer : OldContainer;\n  return (\n    <IntervalProvider screenProps={props}>\n      <ActionSheetProvider>\n        <ConnectionProvider>\n          <AlertProvider>\n            <Container screenProps={props} />\n          </AlertProvider>\n        </ConnectionProvider>\n      </ActionSheetProvider>\n    </IntervalProvider>\n  );\n};\n\nconst mapStateToProps = ({\n  device,\n  me,\n  streetraces,\n  ocs,\n  cities,\n  robberies,\n  channels,\n  areas,\n}) => {\n  //console.log(\"State gets mapped to props... device only\");\n  return { device, me, streetraces, ocs, cities, robberies, channels, areas };\n}; //\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  reloadMe: (loginToken) => {\n    // console.log(\"reloadMe with loginToken\", loginToken);\n    dispatch({ type: \"ME_FETCH_REQUESTED\", payload: { loginToken } });\n  },\n  reloadStreetraces: () =>\n    dispatch({ type: \"STREETRACES_FETCH_REQUESTED\", payload: null }),\n  reloadRobberies: () =>\n    dispatch({ type: \"ROBBERIES_FETCH_REQUESTED\", payload: null }),\n  reloadOcs: (token) =>\n    dispatch({ type: \"OCS_FETCH_REQUESTED\", payload: { token } }),\n  reloadCities: () =>\n    dispatch({ type: \"CITIES_FETCH_REQUESTED\", payload: null }),\n  reloadChannels: (token) =>\n    dispatch({ type: \"CHANNELS_FETCH_REQUESTED\", payload: { token } }),\n  reloadAreas: (city) =>\n    dispatch({ type: \"AREAS_FETCH_REQUESTED\", payload: { city } }),\n});\n\nconst RootContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_RootContainer);\n\nconst App = () => {\n  return (\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <RootContainer />\n      </Provider>\n    </PersistGate>\n  );\n};\nexport default App;\n","import App from \"./src/App\";\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/dood.d44e4074.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo5.8e72dd72.jpg\";","var map = {\n\t\"./af\": 338,\n\t\"./af.js\": 338,\n\t\"./ar\": 339,\n\t\"./ar-dz\": 340,\n\t\"./ar-dz.js\": 340,\n\t\"./ar-kw\": 341,\n\t\"./ar-kw.js\": 341,\n\t\"./ar-ly\": 342,\n\t\"./ar-ly.js\": 342,\n\t\"./ar-ma\": 343,\n\t\"./ar-ma.js\": 343,\n\t\"./ar-sa\": 344,\n\t\"./ar-sa.js\": 344,\n\t\"./ar-tn\": 345,\n\t\"./ar-tn.js\": 345,\n\t\"./ar.js\": 339,\n\t\"./az\": 346,\n\t\"./az.js\": 346,\n\t\"./be\": 347,\n\t\"./be.js\": 347,\n\t\"./bg\": 348,\n\t\"./bg.js\": 348,\n\t\"./bm\": 349,\n\t\"./bm.js\": 349,\n\t\"./bn\": 350,\n\t\"./bn.js\": 350,\n\t\"./bo\": 351,\n\t\"./bo.js\": 351,\n\t\"./br\": 352,\n\t\"./br.js\": 352,\n\t\"./bs\": 353,\n\t\"./bs.js\": 353,\n\t\"./ca\": 354,\n\t\"./ca.js\": 354,\n\t\"./cs\": 355,\n\t\"./cs.js\": 355,\n\t\"./cv\": 356,\n\t\"./cv.js\": 356,\n\t\"./cy\": 357,\n\t\"./cy.js\": 357,\n\t\"./da\": 358,\n\t\"./da.js\": 358,\n\t\"./de\": 359,\n\t\"./de-at\": 360,\n\t\"./de-at.js\": 360,\n\t\"./de-ch\": 361,\n\t\"./de-ch.js\": 361,\n\t\"./de.js\": 359,\n\t\"./dv\": 362,\n\t\"./dv.js\": 362,\n\t\"./el\": 363,\n\t\"./el.js\": 363,\n\t\"./en-au\": 364,\n\t\"./en-au.js\": 364,\n\t\"./en-ca\": 365,\n\t\"./en-ca.js\": 365,\n\t\"./en-gb\": 366,\n\t\"./en-gb.js\": 366,\n\t\"./en-ie\": 367,\n\t\"./en-ie.js\": 367,\n\t\"./en-il\": 368,\n\t\"./en-il.js\": 368,\n\t\"./en-in\": 369,\n\t\"./en-in.js\": 369,\n\t\"./en-nz\": 370,\n\t\"./en-nz.js\": 370,\n\t\"./en-sg\": 371,\n\t\"./en-sg.js\": 371,\n\t\"./eo\": 372,\n\t\"./eo.js\": 372,\n\t\"./es\": 373,\n\t\"./es-do\": 374,\n\t\"./es-do.js\": 374,\n\t\"./es-us\": 375,\n\t\"./es-us.js\": 375,\n\t\"./es.js\": 373,\n\t\"./et\": 376,\n\t\"./et.js\": 376,\n\t\"./eu\": 377,\n\t\"./eu.js\": 377,\n\t\"./fa\": 378,\n\t\"./fa.js\": 378,\n\t\"./fi\": 379,\n\t\"./fi.js\": 379,\n\t\"./fil\": 380,\n\t\"./fil.js\": 380,\n\t\"./fo\": 381,\n\t\"./fo.js\": 381,\n\t\"./fr\": 382,\n\t\"./fr-ca\": 383,\n\t\"./fr-ca.js\": 383,\n\t\"./fr-ch\": 384,\n\t\"./fr-ch.js\": 384,\n\t\"./fr.js\": 382,\n\t\"./fy\": 385,\n\t\"./fy.js\": 385,\n\t\"./ga\": 386,\n\t\"./ga.js\": 386,\n\t\"./gd\": 387,\n\t\"./gd.js\": 387,\n\t\"./gl\": 388,\n\t\"./gl.js\": 388,\n\t\"./gom-deva\": 389,\n\t\"./gom-deva.js\": 389,\n\t\"./gom-latn\": 390,\n\t\"./gom-latn.js\": 390,\n\t\"./gu\": 391,\n\t\"./gu.js\": 391,\n\t\"./he\": 392,\n\t\"./he.js\": 392,\n\t\"./hi\": 393,\n\t\"./hi.js\": 393,\n\t\"./hr\": 394,\n\t\"./hr.js\": 394,\n\t\"./hu\": 395,\n\t\"./hu.js\": 395,\n\t\"./hy-am\": 396,\n\t\"./hy-am.js\": 396,\n\t\"./id\": 397,\n\t\"./id.js\": 397,\n\t\"./is\": 398,\n\t\"./is.js\": 398,\n\t\"./it\": 399,\n\t\"./it-ch\": 400,\n\t\"./it-ch.js\": 400,\n\t\"./it.js\": 399,\n\t\"./ja\": 401,\n\t\"./ja.js\": 401,\n\t\"./jv\": 402,\n\t\"./jv.js\": 402,\n\t\"./ka\": 403,\n\t\"./ka.js\": 403,\n\t\"./kk\": 404,\n\t\"./kk.js\": 404,\n\t\"./km\": 405,\n\t\"./km.js\": 405,\n\t\"./kn\": 406,\n\t\"./kn.js\": 406,\n\t\"./ko\": 407,\n\t\"./ko.js\": 407,\n\t\"./ku\": 408,\n\t\"./ku.js\": 408,\n\t\"./ky\": 409,\n\t\"./ky.js\": 409,\n\t\"./lb\": 410,\n\t\"./lb.js\": 410,\n\t\"./lo\": 411,\n\t\"./lo.js\": 411,\n\t\"./lt\": 412,\n\t\"./lt.js\": 412,\n\t\"./lv\": 413,\n\t\"./lv.js\": 413,\n\t\"./me\": 414,\n\t\"./me.js\": 414,\n\t\"./mi\": 415,\n\t\"./mi.js\": 415,\n\t\"./mk\": 416,\n\t\"./mk.js\": 416,\n\t\"./ml\": 417,\n\t\"./ml.js\": 417,\n\t\"./mn\": 418,\n\t\"./mn.js\": 418,\n\t\"./mr\": 419,\n\t\"./mr.js\": 419,\n\t\"./ms\": 420,\n\t\"./ms-my\": 421,\n\t\"./ms-my.js\": 421,\n\t\"./ms.js\": 420,\n\t\"./mt\": 422,\n\t\"./mt.js\": 422,\n\t\"./my\": 423,\n\t\"./my.js\": 423,\n\t\"./nb\": 424,\n\t\"./nb.js\": 424,\n\t\"./ne\": 425,\n\t\"./ne.js\": 425,\n\t\"./nl\": 426,\n\t\"./nl-be\": 427,\n\t\"./nl-be.js\": 427,\n\t\"./nl.js\": 426,\n\t\"./nn\": 428,\n\t\"./nn.js\": 428,\n\t\"./oc-lnc\": 429,\n\t\"./oc-lnc.js\": 429,\n\t\"./pa-in\": 430,\n\t\"./pa-in.js\": 430,\n\t\"./pl\": 431,\n\t\"./pl.js\": 431,\n\t\"./pt\": 432,\n\t\"./pt-br\": 433,\n\t\"./pt-br.js\": 433,\n\t\"./pt.js\": 432,\n\t\"./ro\": 434,\n\t\"./ro.js\": 434,\n\t\"./ru\": 435,\n\t\"./ru.js\": 435,\n\t\"./sd\": 436,\n\t\"./sd.js\": 436,\n\t\"./se\": 437,\n\t\"./se.js\": 437,\n\t\"./si\": 438,\n\t\"./si.js\": 438,\n\t\"./sk\": 439,\n\t\"./sk.js\": 439,\n\t\"./sl\": 440,\n\t\"./sl.js\": 440,\n\t\"./sq\": 441,\n\t\"./sq.js\": 441,\n\t\"./sr\": 442,\n\t\"./sr-cyrl\": 443,\n\t\"./sr-cyrl.js\": 443,\n\t\"./sr.js\": 442,\n\t\"./ss\": 444,\n\t\"./ss.js\": 444,\n\t\"./sv\": 445,\n\t\"./sv.js\": 445,\n\t\"./sw\": 446,\n\t\"./sw.js\": 446,\n\t\"./ta\": 447,\n\t\"./ta.js\": 447,\n\t\"./te\": 448,\n\t\"./te.js\": 448,\n\t\"./tet\": 449,\n\t\"./tet.js\": 449,\n\t\"./tg\": 450,\n\t\"./tg.js\": 450,\n\t\"./th\": 451,\n\t\"./th.js\": 451,\n\t\"./tk\": 452,\n\t\"./tk.js\": 452,\n\t\"./tl-ph\": 453,\n\t\"./tl-ph.js\": 453,\n\t\"./tlh\": 454,\n\t\"./tlh.js\": 454,\n\t\"./tr\": 455,\n\t\"./tr.js\": 455,\n\t\"./tzl\": 456,\n\t\"./tzl.js\": 456,\n\t\"./tzm\": 457,\n\t\"./tzm-latn\": 458,\n\t\"./tzm-latn.js\": 458,\n\t\"./tzm.js\": 457,\n\t\"./ug-cn\": 459,\n\t\"./ug-cn.js\": 459,\n\t\"./uk\": 460,\n\t\"./uk.js\": 460,\n\t\"./ur\": 461,\n\t\"./ur.js\": 461,\n\t\"./uz\": 462,\n\t\"./uz-latn\": 463,\n\t\"./uz-latn.js\": 463,\n\t\"./uz.js\": 462,\n\t\"./vi\": 464,\n\t\"./vi.js\": 464,\n\t\"./x-pseudo\": 465,\n\t\"./x-pseudo.js\": 465,\n\t\"./yo\": 466,\n\t\"./yo.js\": 466,\n\t\"./zh-cn\": 467,\n\t\"./zh-cn.js\": 467,\n\t\"./zh-hk\": 468,\n\t\"./zh-hk.js\": 468,\n\t\"./zh-mo\": 469,\n\t\"./zh-mo.js\": 469,\n\t\"./zh-tw\": 470,\n\t\"./zh-tw.js\": 470\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 729;","module.exports = __webpack_public_path__ + \"static/media/bombarderen.3d0c7534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item1.a5e891d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item2.e86438ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item3.27b6a03f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item4.b980bfe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item5.1da86cb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item6.935530e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item7.bf00b038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item8.e50cc6c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item9.44698ead.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item10.2cf60cef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item11.d162fbe5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/item12.0bcfb4c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snackbar.a17d7683.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clothesstore.5d863b13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/supermarket.1313f5be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drugstore.4fbc8e73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop.bd3dee77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cardealer.9341f232.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a34b0cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/casino.701d6832.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jewelrystore.e2f62912.jpg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.75e0546a.png\";","module.exports = __webpack_public_path__ + \"static/media/spotify.d7c133b0.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.ada3efe7.png\";","module.exports = __webpack_public_path__ + \"static/media/uitgemoord.89bc3b35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hacker.010dc613.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/house2.a0265669.png\";","module.exports = __webpack_public_path__ + \"static/media/headquarter.e93c6de6.png\";","module.exports = __webpack_public_path__ + \"static/media/bulletfactory.e58e7c97.png\";","module.exports = __webpack_public_path__ + \"static/media/airport.72e68404.png\";","module.exports = __webpack_public_path__ + \"static/media/bank.94332498.png\";","module.exports = __webpack_public_path__ + \"static/media/casino.63f60844.png\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop.0f0755bd.png\";","module.exports = __webpack_public_path__ + \"static/media/junkies.c17461b4.png\";","module.exports = __webpack_public_path__ + \"static/media/garage.6bda310e.png\";","module.exports = __webpack_public_path__ + \"static/media/gym.8d563841.png\";","module.exports = __webpack_public_path__ + \"static/media/hospital.77df0a1e.png\";","module.exports = __webpack_public_path__ + \"static/media/jail.138d3d71.png\";","module.exports = __webpack_public_path__ + \"static/media/sexshop.7153d904.png\";","module.exports = __webpack_public_path__ + \"static/media/politie.211bf938.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a34b0cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cars.a3f3b108.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/shootout.f88bc10f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/city.3a38ffc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/highway.f8935d04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/forest.56ce5166.jpeg\";"],"sourceRoot":""}